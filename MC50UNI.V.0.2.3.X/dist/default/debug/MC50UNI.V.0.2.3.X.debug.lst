

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Mon Jul 18 09:57:11 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og9 
     1                           	processor	18F46K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
     9                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    10                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    12                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    13                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    19                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    21                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    22                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    23                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    24                           	psect	text0,global,reloc=2,class=CODE,delta=1
    25                           	psect	text1,global,reloc=2,class=CODE,delta=1
    26                           	psect	text2,global,reloc=2,class=CODE,delta=1
    27                           	psect	text3,global,reloc=2,class=CODE,delta=1
    28                           	psect	text4,global,reloc=2,class=CODE,delta=1
    29                           	psect	text5,global,reloc=2,class=CODE,delta=1
    30                           	psect	text6,global,reloc=2,class=CODE,delta=1
    31                           	psect	text7,global,reloc=2,class=CODE,delta=1
    32                           	psect	text8,global,reloc=2,class=CODE,delta=1
    33                           	psect	text9,global,reloc=2,class=CODE,delta=1
    34                           	psect	text10,global,reloc=2,class=CODE,delta=1
    35                           	psect	text11,global,reloc=2,class=CODE,delta=1
    36                           	psect	text12,global,reloc=2,class=CODE,delta=1
    37                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text15,global,reloc=2,class=CODE,delta=1
    40                           	psect	text16,global,reloc=2,class=CODE,delta=1
    41                           	psect	text17,global,reloc=2,class=CODE,delta=1
    42                           	psect	text18,global,reloc=2,class=CODE,delta=1
    43                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text20,global,reloc=2,class=CODE,delta=1
    45                           	psect	text21,global,reloc=2,class=CODE,delta=1
    46                           	psect	text22,global,reloc=2,class=CODE,delta=1
    47                           	psect	text23,global,reloc=2,class=CODE,delta=1
    48                           	psect	text24,global,reloc=2,class=CODE,delta=1
    49                           	psect	text25,global,reloc=2,class=CODE,delta=1
    50                           	psect	text26,global,reloc=2,class=CODE,delta=1
    51                           	psect	text27,global,reloc=2,class=CODE,delta=1
    52                           	psect	text28,global,reloc=2,class=CODE,delta=1
    53                           	psect	text29,global,reloc=2,class=CODE,delta=1
    54                           	psect	text30,global,reloc=2,class=CODE,delta=1
    55                           	psect	text31,global,reloc=2,class=CODE,delta=1
    56                           	psect	text32,global,reloc=2,class=CODE,delta=1
    57                           	psect	text33,global,reloc=2,class=CODE,delta=1
    58                           	psect	text34,global,reloc=2,class=CODE,delta=1
    59                           	psect	text35,global,reloc=2,class=CODE,delta=1
    60                           	psect	text36,global,reloc=2,class=CODE,delta=1
    61                           	psect	text37,global,reloc=2,class=CODE,delta=1
    62                           	psect	text38,global,reloc=2,class=CODE,delta=1
    63                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    64                           	psect	text40,global,reloc=2,class=CODE,delta=1
    65                           	psect	text41,global,reloc=2,class=CODE,delta=1
    66                           	psect	text42,global,reloc=2,class=CODE,delta=1
    67                           	psect	text43,global,reloc=2,class=CODE,delta=1
    68                           	psect	text44,global,reloc=2,class=CODE,delta=1
    69                           	psect	text45,global,reloc=2,class=CODE,delta=1
    70                           	psect	text46,global,reloc=2,class=CODE,delta=1
    71                           	psect	text47,global,reloc=2,class=CODE,delta=1
    72                           	psect	text48,global,reloc=2,class=CODE,delta=1
    73                           	psect	text49,global,reloc=2,class=CODE,delta=1
    74                           	psect	text50,global,reloc=2,class=CODE,delta=1
    75                           	psect	text51,global,reloc=2,class=CODE,delta=1
    76                           	psect	text52,global,reloc=2,class=CODE,delta=1
    77                           	psect	text53,global,reloc=2,class=CODE,delta=1
    78                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=1
    79                           	psect	text55,global,reloc=2,class=CODE,delta=1
    80                           	psect	text56,global,reloc=2,class=CODE,delta=1
    81                           	psect	text57,global,reloc=2,class=CODE,delta=1
    82                           	psect	text58,global,reloc=2,class=CODE,delta=1
    83                           	psect	text59,global,reloc=2,class=CODE,delta=1
    84                           	psect	text60,global,reloc=2,class=CODE,delta=1
    85                           	psect	text61,global,reloc=2,class=CODE,delta=1
    86                           	psect	text62,global,reloc=2,class=CODE,delta=1
    87                           	psect	text63,global,reloc=2,class=CODE,delta=1
    88                           	psect	text64,global,reloc=2,class=CODE,delta=1
    89                           	psect	text65,global,reloc=2,class=CODE,delta=1
    90                           	psect	text66,global,reloc=2,class=CODE,delta=1
    91                           	psect	text67,global,reloc=2,class=CODE,delta=1
    92                           	psect	text68,global,reloc=2,class=CODE,delta=1
    93                           	psect	text69,global,reloc=2,class=CODE,delta=1
    94                           	psect	text70,global,reloc=2,class=CODE,delta=1
    95                           	psect	text71,global,reloc=2,class=CODE,delta=1
    96                           	psect	text72,global,reloc=2,class=CODE,delta=1
    97                           	psect	text73,global,reloc=2,class=CODE,delta=1
    98                           	psect	text74,global,reloc=2,class=CODE,delta=1
    99                           	psect	text75,global,reloc=2,class=CODE,delta=1
   100                           	psect	text76,global,reloc=2,class=CODE,delta=1
   101                           	psect	text77,global,reloc=2,class=CODE,delta=1
   102                           	psect	text78,global,reloc=2,class=CODE,delta=1
   103                           	psect	text79,global,reloc=2,class=CODE,delta=1
   104                           	psect	text80,global,reloc=2,class=CODE,delta=1
   105                           	psect	text81,global,reloc=2,class=CODE,delta=1
   106                           	psect	text82,global,reloc=2,class=CODE,delta=1
   107                           	psect	text83,global,reloc=2,class=CODE,delta=1
   108                           	psect	text84,global,reloc=2,class=CODE,delta=1
   109                           	psect	text85,global,reloc=2,class=CODE,delta=1
   110                           	psect	text86,global,reloc=2,class=CODE,delta=1
   111                           	psect	text87,global,reloc=2,class=CODE,delta=1
   112                           	psect	text88,global,reloc=2,class=CODE,delta=1
   113                           	psect	text89,global,reloc=2,class=CODE,delta=1
   114                           	psect	text90,global,reloc=2,class=CODE,delta=1
   115                           	psect	text91,global,reloc=2,class=CODE,delta=1
   116                           	psect	text92,global,reloc=2,class=CODE,delta=1
   117                           	psect	text93,global,reloc=2,class=CODE,delta=1
   118                           	psect	text94,global,reloc=2,class=CODE,delta=1
   119                           	psect	text95,global,reloc=2,class=CODE,delta=1
   120                           	psect	text96,global,reloc=2,class=CODE,delta=1
   121                           	psect	text97,global,reloc=2,class=CODE,delta=1
   122                           	psect	text98,global,reloc=2,class=CODE,delta=1
   123                           	psect	text99,global,reloc=2,class=CODE,delta=1
   124                           	psect	text100,global,reloc=2,class=CODE,delta=1
   125                           	psect	text101,global,reloc=2,class=CODE,delta=1
   126                           	psect	text102,global,reloc=2,class=CODE,delta=1
   127                           	psect	text103,global,reloc=2,class=CODE,delta=1
   128                           	psect	text104,global,reloc=2,class=CODE,delta=1
   129                           	psect	text105,global,reloc=2,class=CODE,delta=1
   130                           	psect	text106,global,reloc=2,class=CODE,delta=1
   131                           	psect	text107,global,reloc=2,class=CODE,delta=1
   132                           	psect	text108,global,reloc=2,class=CODE,delta=1
   133                           	psect	text109,global,reloc=2,class=CODE,delta=1
   134                           	psect	text110,global,reloc=2,class=CODE,delta=1
   135                           	psect	text111,global,reloc=2,class=CODE,delta=1
   136                           	psect	text112,global,reloc=2,class=CODE,delta=1
   137                           	psect	text113,global,reloc=2,class=CODE,delta=1
   138                           	psect	text114,global,reloc=2,class=CODE,delta=1
   139                           	psect	text115,global,reloc=2,class=CODE,delta=1
   140                           	psect	text116,global,reloc=2,class=CODE,delta=1
   141                           	psect	text117,global,reloc=2,class=CODE,delta=1
   142                           	psect	text118,global,reloc=2,class=CODE,delta=1
   143                           	psect	text119,global,reloc=2,class=CODE,delta=1
   144                           	psect	text120,global,reloc=2,class=CODE,delta=1
   145                           	psect	text121,global,reloc=2,class=CODE,delta=1
   146                           	psect	text122,global,reloc=2,class=CODE,delta=1,group=1
   147                           	psect	text123,global,reloc=2,class=CODE,delta=1
   148                           	psect	text124,global,reloc=2,class=CODE,delta=1,group=1
   149                           	psect	text125,global,reloc=2,class=CODE,delta=1
   150                           	psect	text126,global,reloc=2,class=CODE,delta=1
   151                           	psect	text127,global,reloc=2,class=CODE,delta=1
   152                           	psect	text128,global,reloc=2,class=CODE,delta=1
   153                           	psect	text129,global,reloc=2,class=CODE,delta=1,group=2
   154                           	psect	text130,global,reloc=2,class=CODE,delta=1
   155                           	psect	text131,global,reloc=2,class=CODE,delta=1
   156                           	psect	text132,global,reloc=2,class=CODE,delta=1,inline
   157                           	psect	text133,global,reloc=2,class=CODE,delta=1
   158                           	psect	text134,global,reloc=2,class=CODE,delta=1
   159                           	psect	text135,global,reloc=2,class=CODE,delta=1
   160                           	psect	text136,global,reloc=2,class=CODE,delta=1,inline
   161                           	psect	text137,global,reloc=2,class=CODE,delta=1,inline
   162                           	psect	text138,global,reloc=2,class=CODE,delta=1
   163                           	psect	text139,global,reloc=2,class=CODE,delta=1
   164                           	psect	text140,global,reloc=2,class=CODE,delta=1
   165                           	psect	text141,global,reloc=2,class=CODE,delta=1
   166                           	psect	text142,global,reloc=2,class=CODE,delta=1
   167                           	psect	text143,global,reloc=2,class=CODE,delta=1
   168                           	psect	text144,global,reloc=2,class=CODE,delta=1
   169                           	psect	text145,global,reloc=2,class=CODE,delta=1
   170                           	psect	text146,global,reloc=2,class=CODE,delta=1
   171                           	psect	text147,global,reloc=2,class=CODE,delta=1
   172                           	psect	text148,global,reloc=2,class=CODE,delta=1
   173                           	psect	text149,global,reloc=2,class=CODE,delta=1
   174                           	psect	text150,global,reloc=2,class=CODE,delta=1
   175                           	psect	text151,global,reloc=2,class=CODE,delta=1
   176                           	psect	text152,global,reloc=2,class=CODE,delta=1
   177                           	psect	text153,global,reloc=2,class=CODE,delta=1
   178                           	psect	text154,global,reloc=2,class=CODE,delta=1,inline
   179                           	psect	text155,global,reloc=2,class=CODE,delta=1,inline
   180                           	psect	text156,global,reloc=2,class=CODE,delta=1,inline
   181                           	psect	text157,global,reloc=2,class=CODE,delta=1,inline
   182                           	psect	text158,global,reloc=2,class=CODE,delta=1,inline
   183                           	psect	text159,global,reloc=2,class=CODE,delta=1,inline
   184                           	psect	text160,global,reloc=2,class=CODE,delta=1,inline
   185                           	psect	text161,global,reloc=2,class=CODE,delta=1
   186                           	psect	text162,global,reloc=2,class=CODE,delta=1
   187                           	psect	text163,global,reloc=2,class=CODE,delta=1
   188                           	psect	text164,global,reloc=2,class=CODE,delta=1
   189                           	psect	text165,global,reloc=2,class=CODE,delta=1
   190                           	psect	text166,global,reloc=2,class=CODE,delta=1
   191                           	psect	text167,global,reloc=2,class=CODE,delta=1
   192                           	psect	text168,global,reloc=2,class=CODE,delta=1
   193                           	psect	text169,global,reloc=2,class=CODE,delta=1
   194                           	psect	text170,global,reloc=2,class=CODE,delta=1
   195                           	psect	text171,global,reloc=2,class=CODE,delta=1
   196                           	psect	text172,global,reloc=2,class=CODE,delta=1
   197                           	psect	text173,global,reloc=2,class=CODE,delta=1
   198                           	psect	text174,global,reloc=2,class=CODE,delta=1
   199                           	psect	text175,global,reloc=2,class=CODE,delta=1
   200                           	psect	text176,global,reloc=2,class=CODE,delta=1,inline
   201                           	psect	text177,global,reloc=2,class=CODE,delta=1,inline
   202                           	psect	text178,global,reloc=2,class=CODE,delta=1,inline
   203                           	psect	text179,global,reloc=2,class=CODE,delta=1
   204                           	psect	text180,global,reloc=2,class=CODE,delta=1,inline
   205                           	psect	text181,global,reloc=2,class=CODE,delta=1,inline
   206                           	psect	text182,global,reloc=2,class=CODE,delta=1,inline
   207                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   208                           	psect	text184,global,reloc=2,class=CODE,delta=1
   209                           	psect	text185,global,reloc=2,class=CODE,delta=1
   210                           	psect	text186,global,reloc=2,class=CODE,delta=1
   211                           	psect	text187,global,reloc=2,class=CODE,delta=1
   212                           	psect	text188,global,reloc=2,class=CODE,delta=1
   213                           	psect	text189,global,reloc=2,class=CODE,delta=1
   214                           	psect	text190,global,reloc=2,class=CODE,delta=1
   215                           	psect	text191,global,reloc=2,class=CODE,delta=1
   216                           	psect	text192,global,reloc=2,class=CODE,delta=1
   217                           	psect	text193,global,reloc=2,class=CODE,delta=1
   218                           	psect	text194,global,reloc=2,class=CODE,delta=1
   219                           	psect	text195,global,reloc=2,class=CODE,delta=1
   220                           	psect	text196,global,reloc=2,class=CODE,delta=1
   221                           	psect	text197,global,reloc=2,class=CODE,delta=1
   222                           	psect	text198,global,reloc=2,class=CODE,delta=1
   223                           	psect	text199,global,reloc=2,class=CODE,delta=1
   224                           	psect	text200,global,reloc=2,class=CODE,delta=1
   225                           	psect	text201,global,reloc=2,class=CODE,delta=1
   226                           	psect	text202,global,reloc=2,class=CODE,delta=1
   227                           	psect	text203,global,reloc=2,class=CODE,delta=1
   228                           	psect	text204,global,reloc=2,class=CODE,delta=1
   229                           	psect	text205,global,reloc=2,class=CODE,delta=1
   230                           	psect	text206,global,reloc=2,class=CODE,delta=1
   231                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   232                           	psect	text207,global,reloc=2,class=CODE,delta=1
   233                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   234                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   235                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   236                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   237  0000                     
   238                           ; Version 2.36
   239                           ; Generated 28/01/2022 GMT
   240                           ; 
   241                           ; Copyright © 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
   242                           ; All rights reserved.
   243                           ; 
   244                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   245                           ; 
   246                           ; Redistribution and use in source and binary forms, with or without modification, are
   247                           ; permitted provided that the following conditions are met:
   248                           ; 
   249                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   250                           ;        conditions and the following disclaimer.
   251                           ; 
   252                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   253                           ;        of conditions and the following disclaimer in the documentation and/or other
   254                           ;        materials provided with the distribution. Publication is not required when
   255                           ;        this file is used in an embedded application.
   256                           ; 
   257                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   258                           ;        software without specific prior written permission.
   259                           ; 
   260                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   261                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   262                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   263                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   264                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   265                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   266                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   267                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   268                           ; 
   269                           ; 
   270                           ; Code-generator required, PIC18F46K40 Definitions
   271                           ; 
   272                           ; SFR Addresses
   273  0000                     
   274                           	psect	idataBANK0
   275  0092A6                     __pidataBANK0:
   276                           	callstack 0
   277                           
   278                           ;initializer for _auxCounter
   279  0092A6  03E8               	dw	1000
   280                           
   281                           	psect	idataBANK1
   282  009274                     __pidataBANK1:
   283                           	callstack 0
   284                           
   285                           ;initializer for _tempCounter
   286  009274  3DDD               	dw	15837
   287  009276  000F               	dw	15
   288                           
   289                           ;initializer for _firstselectflag
   290  009278  01                 	db	1
   291                           
   292                           	psect	idataBANK2
   293  0092A8                     __pidataBANK2:
   294                           	callstack 0
   295                           
   296                           ;initializer for _zeroCrossingWaitTime
   297  0092A8  19                 	db	25
   298  0092A9  19                 	db	25
   299                           
   300                           	psect	idataBANK3
   301  008E4C                     __pidataBANK3:
   302                           	callstack 0
   303                           
   304                           ;initializer for _DispTable
   305  008E4C  6F                 	db	111
   306  008E4D  21                 	db	33
   307  008E4E  76                 	db	118
   308  008E4F  73                 	db	115
   309  008E50  39                 	db	57
   310  008E51  5B                 	db	91
   311  008E52  5F                 	db	95
   312  008E53  61                 	db	97
   313  008E54  7F                 	db	127
   314  008E55  7B                 	db	123
   315  008E56  7D                 	db	125
   316  008E57  7F                 	db	127
   317  008E58  4E                 	db	78
   318  008E59  37                 	db	55
   319  008E5A  5E                 	db	94
   320  008E5B  5C                 	db	92
   321  008E5C  7C                 	db	124
   322  008E5D  3D                 	db	61
   323  008E5E  0E                 	db	14
   324  008E5F  2F                 	db	47
   325  008E60  14                 	db	20
   326  008E61  1E                 	db	30
   327  008E62  07                 	db	7
   328  008E63  45                 	db	69
   329  008E64  10                 	db	16
   330  008E65  0C                 	db	12
   331  008E66  40                 	db	64
   332  008E67  20                 	db	32
   333  008E68  01                 	db	1
   334  008E69  02                 	db	2
   335  008E6A  04                 	db	4
   336  008E6B  08                 	db	8
   337  008E6C  00                 	db	0
   338  008E6D  3B                 	db	59
   339  008E6E  1F                 	db	31
   340  008E6F  16                 	db	22
   341  008E70  17                 	db	23
   342                           
   343                           	psect	smallconst
   344  000F00                     __psmallconst:
   345                           	callstack 0
   346  000F00  00                 	db	0
   347  000F01                     _i2c1_fsmStateTable:
   348                           	callstack 0
   349  000F01  EA                 	db	low _I2C1_DO_IDLE
   350  000F02  91                 	db	high _I2C1_DO_IDLE
   351  000F03  56                 	db	low _I2C1_DO_SEND_ADR_READ
   352  000F04  91                 	db	high _I2C1_DO_SEND_ADR_READ
   353  000F05  48                 	db	low _I2C1_DO_SEND_ADR_WRITE
   354  000F06  91                 	db	high _I2C1_DO_SEND_ADR_WRITE
   355  000F07  8E                 	db	low _I2C1_DO_TX
   356  000F08  77                 	db	high _I2C1_DO_TX
   357  000F09  2E                 	db	low _I2C1_DO_RX
   358  000F0A  7C                 	db	high _I2C1_DO_RX
   359  000F0B  E0                 	db	low _I2C1_DO_RCEN
   360  000F0C  91                 	db	high _I2C1_DO_RCEN
   361  000F0D  DA                 	db	low _I2C1_DO_TX_EMPTY
   362  000F0E  81                 	db	high _I2C1_DO_TX_EMPTY
   363  000F0F  34                 	db	low _I2C1_DO_SEND_RESTART_READ
   364  000F10  92                 	db	high _I2C1_DO_SEND_RESTART_READ
   365  000F11  2C                 	db	low _I2C1_DO_SEND_RESTART_WRITE
   366  000F12  92                 	db	high _I2C1_DO_SEND_RESTART_WRITE
   367  000F13  24                 	db	low _I2C1_DO_SEND_RESTART
   368  000F14  92                 	db	high _I2C1_DO_SEND_RESTART
   369  000F15  1C                 	db	low _I2C1_DO_SEND_STOP
   370  000F16  92                 	db	high _I2C1_DO_SEND_STOP
   371  000F17  14                 	db	low _I2C1_DO_RX_ACK
   372  000F18  92                 	db	high _I2C1_DO_RX_ACK
   373  000F19  0C                 	db	low _I2C1_DO_RX_NACK_STOP
   374  000F1A  92                 	db	high _I2C1_DO_RX_NACK_STOP
   375  000F1B  04                 	db	low _I2C1_DO_RX_NACK_RESTART
   376  000F1C  92                 	db	high _I2C1_DO_RX_NACK_RESTART
   377  000F1D  D6                 	db	low _I2C1_DO_RESET
   378  000F1E  91                 	db	high _I2C1_DO_RESET
   379  000F1F  94                 	db	low _I2C1_DO_ADDRESS_NACK
   380  000F20  86                 	db	high _I2C1_DO_ADDRESS_NACK
   381  000F21                     __end_of_i2c1_fsmStateTable:
   382                           	callstack 0
   383  0000                     _T2CON	set	4029
   384  0000                     _T1CON	set	4047
   385  0000                     _T1CLK	set	4050
   386  0000                     _T1GATE	set	4049
   387  0000                     _T0CON0	set	4053
   388  0000                     _INLVLD	set	3874
   389  0000                     _SLRCOND	set	3875
   390  0000                     _ODCOND	set	3876
   391  0000                     _WPUD	set	3877
   392  0000                     _TRISD	set	3979
   393  0000                     _TRISC	set	3978
   394  0000                     _TRISB	set	3977
   395  0000                     _TRISA	set	3976
   396  0000                     _TRISE	set	3980
   397  0000                     _LATC	set	3973
   398  0000                     _LATB	set	3972
   399  0000                     _OSCTUNE	set	3805
   400  0000                     _OSCFRQ	set	3806
   401  0000                     _ADERRL	set	3950
   402  0000                     _ADERRH	set	3951
   403  0000                     _ADPREVL	set	3937
   404  0000                     _ADPREVH	set	3938
   405  0000                     _ADFLTRL	set	3954
   406  0000                     _ADFLTRH	set	3955
   407  0000                     _ADACCL	set	3952
   408  0000                     _ADACCH	set	3953
   409  0000                     _ADCNT	set	3943
   410  0000                     _ADRESL	set	3939
   411  0000                     _ADRESH	set	3940
   412  0000                     _ADACQ	set	3932
   413  0000                     _ADCON0	set	3936
   414  0000                     _ADCLK	set	3927
   415  0000                     _ADSTAT	set	3941
   416  0000                     _ADCON3	set	3931
   417  0000                     _ADCON2	set	3930
   418  0000                     _ADPRE	set	3934
   419  0000                     _ADSTPTH	set	3945
   420  0000                     _ADUTHH	set	3949
   421  0000                     _ADUTHL	set	3948
   422  0000                     _ADLTHH	set	3947
   423  0000                     _SP1BRGH	set	3996
   424  0000                     _TX1STA	set	3998
   425  000F21  00                 	db	0	; dummy byte at the end
   426  0000                     
   427                           	psect	nvBANK1
   428  0001FE                     __pnvBANK1:
   429                           	callstack 0
   430  0001FE                     _eusart1TxBufferRemaining:
   431                           	callstack 0
   432  0001FE                     	ds	1
   433                           
   434                           	psect	nvBANK2
   435  0002DD                     __pnvBANK2:
   436                           	callstack 0
   437  0002DD                     _TMR2_InterruptHandler:
   438                           	callstack 0
   439  0002DD                     	ds	2
   440  0002DF                     _TMR1_InterruptHandler:
   441                           	callstack 0
   442  0002DF                     	ds	2
   443  0002E1                     _timer1ReloadVal:
   444                           	callstack 0
   445  0002E1                     	ds	2
   446  0002E3                     _TMR0_InterruptHandler:
   447                           	callstack 0
   448  0002E3                     	ds	2
   449  0002E5                     _EUSART1_ErrorHandler:
   450                           	callstack 0
   451  0002E5                     	ds	2
   452  0002E7                     _EUSART1_OverrunErrorHandler:
   453                           	callstack 0
   454  0002E7                     	ds	2
   455  0002E9                     _EUSART1_FramingErrorHandler:
   456                           	callstack 0
   457  0002E9                     	ds	2
   458  0002EB                     _EUSART1_RxDefaultInterruptHandler:
   459                           	callstack 0
   460  0002EB                     	ds	2
   461  0002ED                     _EUSART1_TxDefaultInterruptHandler:
   462                           	callstack 0
   463  0002ED                     	ds	2
   464  0000                     _WDTCON0bits	set	3794
   465  0000                     _TMR0IE	set	30229
   466  0000                     _TMR0IF	set	30293
   467  0000                     _LATEbits	set	3975
   468  0000                     _LATDbits	set	3974
   469  0000                     _LATAbits	set	3971
   470  0000                     _LATCbits	set	3973
   471  0000                     _PORTB	set	3982
   472  0000                     _T1CONbits	set	4047
   473  0000                     _SSP1CON2bits	set	3991
   474  0000                     _SSP1CON1bits	set	3990
   475  0000                     _ADCON0bits	set	3936
   476  0000                     _RC1STAbits	set	3997
   477  0000                     _GIE	set	32663
   478  0000                     _RX1PPS	set	3765
   479  0000                     _SSP1CLKPPS	set	3767
   480  0000                     _PIE0bits	set	3778
   481  0000                     _PIE3bits	set	3781
   482  0000                     _PIE4bits	set	3782
   483  0000                     _PIR0bits	set	3786
   484  0000                     _PIR3bits	set	3789
   485  0000                     _ADACT	set	3926
   486  0000                     _ADREF	set	3928
   487  0000                     _ADCON1	set	3929
   488  0000                     _ADCAP	set	3933
   489  0000                     _ADPCH	set	3935
   490  0000                     _ADRPT	set	3942
   491  0000                     _ADSTPTL	set	3944
   492  0000                     _ADLTHL	set	3946
   493  0000                     _RC1REG	set	3993
   494  0000                     _TX1REG	set	3994
   495  0000                     _SP1BRGL	set	3995
   496  0000                     _RC1STA	set	3997
   497  0000                     _BAUD1CON	set	3999
   498  0000                     _T2TMR	set	4027
   499  0000                     _T2PR	set	4028
   500  0000                     _T2HLT	set	4030
   501  0000                     _T2CLKCON	set	4031
   502  0000                     _TMR1L	set	4045
   503  0000                     _TMR1H	set	4046
   504  0000                     _T1GCON	set	4048
   505  0000                     _TMR0L	set	4051
   506  0000                     _TMR0H	set	4052
   507  0000                     _T0CON1	set	4054
   508  0000                     _PCON0bits	set	4055
   509  0000                     _INTCONbits	set	4082
   510  0000                     _LATA	set	3971
   511  0000                     _LATD	set	3974
   512  0000                     _LATE	set	3975
   513  0000                     _SSP1BUF	set	3986
   514  0000                     _SSP1ADD	set	3987
   515  0000                     _SSP1STAT	set	3989
   516  0000                     _SSP1CON2	set	3991
   517  0000                     _SSP1CON1	set	3990
   518  0000                     _WDTCON0	set	3794
   519  0000                     _OSCCON1	set	3800
   520  0000                     _PIR4bits	set	3790
   521  0000                     _OSCCON3	set	3802
   522  0000                     _OSCEN	set	3804
   523  0000                     _PMD0	set	3809
   524  0000                     _RC3PPS	set	3834
   525  0000                     _INLVLA	set	3853
   526  0000                     _SLRCONA	set	3854
   527  0000                     _ODCONA	set	3855
   528  0000                     _WPUA	set	3856
   529  0000                     _ANSELA	set	3857
   530  0000                     _ANSELB	set	3865
   531  0000                     _ANSELC	set	3873
   532  0000                     _ANSELD	set	3878
   533  0000                     _PMD5	set	3814
   534  0000                     _PMD4	set	3813
   535  0000                     _PMD3	set	3812
   536  0000                     _PMD2	set	3811
   537  0000                     _PMD1	set	3810
   538  0000                     _WDTCON1	set	3795
   539  0000                     _PORTEbits	set	3985
   540  0000                     _PORTBbits	set	3982
   541  0000                     _PORTAbits	set	3981
   542  0000                     _INLVLE	set	3882
   543  0000                     _SLRCONE	set	3883
   544  0000                     _ODCONE	set	3884
   545  0000                     _WPUE	set	3885
   546  0000                     _ANSELE	set	3886
   547  0000                     _INLVLC	set	3869
   548  0000                     _SLRCONC	set	3870
   549  0000                     _ODCONC	set	3871
   550  0000                     _WPUC	set	3872
   551  0000                     _INLVLB	set	3861
   552  0000                     _SLRCONB	set	3862
   553  0000                     _ODCONB	set	3863
   554  0000                     _WPUB	set	3864
   555  0000                     _IOCBN3	set	30875
   556  0000                     _IOCBP3	set	30883
   557  0000                     _SSP1DATPPS	set	3768
   558  0000                     _RC7PPS	set	3838
   559  0000                     _RC4PPS	set	3835
   560  0000                     _T2RST	set	4032
   561                           
   562                           ; #config settings
   563                           
   564                           	psect	cinit
   565  0070C2                     __pcinit:
   566                           	callstack 0
   567  0070C2                     start_initialization:
   568                           	callstack 0
   569  0070C2                     __initialization:
   570                           	callstack 0
   571                           
   572                           ; Initialize objects allocated to BANK3 (37 bytes)
   573                           ; load TBLPTR registers with __pidataBANK3
   574  0070C2  0E4C               	movlw	low __pidataBANK3
   575  0070C4  6EF6               	movwf	tblptrl,c
   576  0070C6  0E8E               	movlw	high __pidataBANK3
   577  0070C8  6EF7               	movwf	tblptrh,c
   578  0070CA  0E00               	movlw	low (__pidataBANK3 shr (0+16))
   579  0070CC  6EF8               	movwf	tblptru,c
   580  0070CE  EE03  F0D2         	lfsr	0,__pdataBANK3
   581  0070D2  EE10 F025          	lfsr	1,37
   582  0070D6                     copy_data0:
   583  0070D6  0009               	tblrd		*+
   584  0070D8  CFF5 FFEE          	movff	tablat,postinc0
   585  0070DC  50E5               	movf	postdec1,w,c
   586  0070DE  50E1               	movf	fsr1l,w,c
   587  0070E0  E1FA               	bnz	copy_data0
   588                           
   589                           ; Initialize objects allocated to BANK2 (2 bytes)
   590                           ; load TBLPTR registers with __pidataBANK2
   591  0070E2  0EA8               	movlw	low __pidataBANK2
   592  0070E4  6EF6               	movwf	tblptrl,c
   593  0070E6  0E92               	movlw	high __pidataBANK2
   594  0070E8  6EF7               	movwf	tblptrh,c
   595  0070EA  0E00               	movlw	low (__pidataBANK2 shr (0+16))
   596  0070EC  6EF8               	movwf	tblptru,c
   597  0070EE  0009               	tblrd		*+	;fetch initializer
   598  0070F0  CFF5 F2EF          	movff	tablat,__pdataBANK2
   599  0070F4  0009               	tblrd		*+	;fetch initializer
   600  0070F6  CFF5 F2F0          	movff	tablat,__pdataBANK2+1
   601                           
   602                           ; Initialize objects allocated to BANK1 (5 bytes)
   603                           ; load TBLPTR registers with __pidataBANK1
   604  0070FA  0E74               	movlw	low __pidataBANK1
   605  0070FC  6EF6               	movwf	tblptrl,c
   606  0070FE  0E92               	movlw	high __pidataBANK1
   607  007100  6EF7               	movwf	tblptrh,c
   608  007102  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   609  007104  6EF8               	movwf	tblptru,c
   610  007106  EE01  F0F9         	lfsr	0,__pdataBANK1
   611  00710A  EE10 F005          	lfsr	1,5
   612  00710E                     copy_data1:
   613  00710E  0009               	tblrd		*+
   614  007110  CFF5 FFEE          	movff	tablat,postinc0
   615  007114  50E5               	movf	postdec1,w,c
   616  007116  50E1               	movf	fsr1l,w,c
   617  007118  E1FA               	bnz	copy_data1
   618                           
   619                           ; Initialize objects allocated to BANK0 (2 bytes)
   620                           ; load TBLPTR registers with __pidataBANK0
   621  00711A  0EA6               	movlw	low __pidataBANK0
   622  00711C  6EF6               	movwf	tblptrl,c
   623  00711E  0E92               	movlw	high __pidataBANK0
   624  007120  6EF7               	movwf	tblptrh,c
   625  007122  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   626  007124  6EF8               	movwf	tblptru,c
   627  007126  0009               	tblrd		*+	;fetch initializer
   628  007128  CFF5 F0F8          	movff	tablat,__pdataBANK0
   629  00712C  0009               	tblrd		*+	;fetch initializer
   630  00712E  CFF5 F0F9          	movff	tablat,__pdataBANK0+1
   631                           
   632                           ; Clear objects allocated to BANK3 (210 bytes)
   633  007132  EE03  F000         	lfsr	0,__pbssBANK3
   634  007136  0ED2               	movlw	210
   635  007138                     clear_0:
   636  007138  6AEE               	clrf	postinc0,c
   637  00713A  06E8               	decf	wreg,f,c
   638  00713C  E1FD               	bnz	clear_0
   639                           
   640                           ; Clear objects allocated to BANK2 (221 bytes)
   641  00713E  EE02  F000         	lfsr	0,__pbssBANK2
   642  007142  0EDD               	movlw	221
   643  007144                     clear_1:
   644  007144  6AEE               	clrf	postinc0,c
   645  007146  06E8               	decf	wreg,f,c
   646  007148  E1FD               	bnz	clear_1
   647                           
   648                           ; Clear objects allocated to BANK1 (249 bytes)
   649  00714A  EE01  F000         	lfsr	0,__pbssBANK1
   650  00714E  0EF9               	movlw	249
   651  007150                     clear_2:
   652  007150  6AEE               	clrf	postinc0,c
   653  007152  06E8               	decf	wreg,f,c
   654  007154  E1FD               	bnz	clear_2
   655                           
   656                           ; Clear objects allocated to BANK0 (120 bytes)
   657  007156  EE00  F060         	lfsr	0,__pbssBANK0
   658  00715A  0E78               	movlw	120
   659  00715C                     clear_3:
   660  00715C  6AEE               	clrf	postinc0,c
   661  00715E  06E8               	decf	wreg,f,c
   662  007160  E1FD               	bnz	clear_3
   663                           
   664                           ; Clear objects allocated to COMRAM (21 bytes)
   665  007162  EE00  F03B         	lfsr	0,__pbssCOMRAM
   666  007166  0E15               	movlw	21
   667  007168                     clear_4:
   668  007168  6AEE               	clrf	postinc0,c
   669  00716A  06E8               	decf	wreg,f,c
   670  00716C  E1FD               	bnz	clear_4
   671  00716E                     end_of_initialization:
   672                           	callstack 0
   673  00716E                     __end_of__initialization:
   674                           	callstack 0
   675  00716E  9050               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   676  007170  9250               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   677  007172  0100               	movlb	0
   678  007174  EF6B  F02E         	goto	_main	;jump to C main() function
   679                           
   680                           	psect	bssCOMRAM
   681  00003B                     __pbssCOMRAM:
   682                           	callstack 0
   683  00003B                     _rfCMD:
   684                           	callstack 0
   685  00003B                     	ds	11
   686  000046                     _edit_Param:
   687                           	callstack 0
   688  000046                     	ds	6
   689  00004C                     _button_struct:
   690                           	callstack 0
   691  00004C                     	ds	4
   692                           
   693                           	psect	bssBANK0
   694  000060                     __pbssBANK0:
   695                           	callstack 0
   696  000060                     _learn_st:
   697                           	callstack 0
   698  000060                     	ds	18
   699  000072                     _dispStruct:
   700                           	callstack 0
   701  000072                     	ds	6
   702  000078                     _brakeElectric_st:
   703                           	callstack 0
   704  000078                     	ds	2
   705  00007A                     _pointSync:
   706                           	callstack 0
   707  00007A                     	ds	2
   708  00007C                     _Hop:
   709                           	callstack 0
   710  00007C                     	ds	2
   711  00007E                     _RFcount:
   712                           	callstack 0
   713  00007E                     	ds	2
   714  000080                     _temp:
   715                           	callstack 0
   716  000080                     	ds	1
   717  000081                     _control_limit_switch:
   718                           	callstack 0
   719  000081                     	ds	1
   720  000082                     _fullmotorPower:
   721                           	callstack 0
   722  000082                     	ds	1
   723  000083                     _stateMotor:
   724                           	callstack 0
   725  000083                     	ds	1
   726  000084                     _zeroCrossingWaitTimeIdx:
   727                           	callstack 0
   728  000084                     	ds	1
   729  000085                     _programmer_enable:
   730                           	callstack 0
   731  000085                     	ds	1
   732  000086                     readbutton@key1:
   733                           	callstack 0
   734  000086                     	ds	1
   735  000087                     readRFButtons@keyType:
   736                           	callstack 0
   737  000087                     	ds	1
   738  000088                     readRFButtons@key1:
   739                           	callstack 0
   740  000088                     	ds	1
   741  000089                     _RFBit:
   742                           	callstack 0
   743  000089                     	ds	1
   744  00008A                     _RFFull_12BIT:
   745                           	callstack 0
   746  00008A                     	ds	1
   747  00008B                     _RFFull:
   748                           	callstack 0
   749  00008B                     	ds	1
   750  00008C                     _BitCount:
   751                           	callstack 0
   752  00008C                     	ds	1
   753  00008D                     _Bptr:
   754                           	callstack 0
   755  00008D                     	ds	1
   756  00008E                     _numberOfErrorCurrent:
   757                           	callstack 0
   758  00008E                     	ds	1
   759  00008F                     _idxAdcZeroAquisition:
   760                           	callstack 0
   761  00008F                     	ds	1
   762  000090                     _idxSaveEnergyADCHist:
   763                           	callstack 0
   764  000090                     	ds	1
   765  000091                     _idxAdcAquisition:
   766                           	callstack 0
   767  000091                     	ds	1
   768  000092                     _Counterchoose:
   769                           	callstack 0
   770  000092                     	ds	1
   771  000093                     _eusart1RxCount:
   772                           	callstack 0
   773  000093                     	ds	1
   774  000094                     _eusart1RxTail:
   775                           	callstack 0
   776  000094                     	ds	1
   777  000095                     _eusart1RxHead:
   778                           	callstack 0
   779  000095                     	ds	1
   780  000096                     _eusart1TxTail:
   781                           	callstack 0
   782  000096                     	ds	1
   783  000097                     _eusart1TxHead:
   784                           	callstack 0
   785  000097                     	ds	1
   786  000098                     _var_sys_NVM:
   787                           	callstack 0
   788  000098                     	ds	64
   789                           
   790                           	psect	dataBANK0
   791  0000F8                     __pdataBANK0:
   792                           	callstack 0
   793  0000F8                     _auxCounter:
   794                           	callstack 0
   795  0000F8                     	ds	2
   796                           
   797                           	psect	bssBANK1
   798  000100                     __pbssBANK1:
   799                           	callstack 0
   800  000100                     _var_sys:
   801                           	callstack 0
   802  000100                     	ds	81
   803  000151                     _menu_st:
   804                           	callstack 0
   805  000151                     	ds	25
   806  00016A                     _security:
   807                           	callstack 0
   808  00016A                     	ds	11
   809  000175                     _fimdecurso:
   810                           	callstack 0
   811  000175                     	ds	6
   812  00017B                     _powerControl_st:
   813                           	callstack 0
   814  00017B                     	ds	6
   815  000181                     readRFButtons@serial:
   816                           	callstack 0
   817  000181                     	ds	4
   818  000185                     readRFButtons@rollingCode:
   819                           	callstack 0
   820  000185                     	ds	2
   821  000187                     _BufferRF_12BIT:
   822                           	callstack 0
   823  000187                     	ds	2
   824  000189                     _erroranterior:
   825                           	callstack 0
   826  000189                     	ds	2
   827  00018B                     _aux_in_auto_close:
   828                           	callstack 0
   829  00018B                     	ds	1
   830  00018C                     _aux_i:
   831                           	callstack 0
   832  00018C                     	ds	1
   833  00018D                     _Abertura_pedonal:
   834                           	callstack 0
   835  00018D                     	ds	1
   836  00018E                     _temppower:
   837                           	callstack 0
   838  00018E                     	ds	1
   839  00018F                     _difTime:
   840                           	callstack 0
   841  00018F                     	ds	1
   842  000190                     _StateTRIAC:
   843                           	callstack 0
   844  000190                     	ds	1
   845  000191                     _waitZeroPeak:
   846                           	callstack 0
   847  000191                     	ds	1
   848  000192                     _zeroCrossing:
   849                           	callstack 0
   850  000192                     	ds	1
   851  000193                     _zeroCrossingLength:
   852                           	callstack 0
   853  000193                     	ds	1
   854  000194                     _lastKey:
   855                           	callstack 0
   856  000194                     	ds	1
   857  000195                     _F2Chance:
   858                           	callstack 0
   859  000195                     	ds	1
   860  000196                     readbutton@key2:
   861                           	callstack 0
   862  000196                     	ds	1
   863  000197                     readRFButtons@typeRemote:
   864                           	callstack 0
   865  000197                     	ds	1
   866  000198                     _RFstate:
   867                           	callstack 0
   868  000198                     	ds	1
   869  000199                     _eusart1RxLastError:
   870                           	callstack 0
   871  000199                     	ds	1
   872  00019A                     _ts_system:
   873                           	callstack 0
   874  00019A                     	ds	72
   875  0001E2                     _controlGate_stateMachine:
   876                           	callstack 0
   877  0001E2                     	ds	11
   878  0001ED                     _main_stateMachine:
   879                           	callstack 0
   880  0001ED                     	ds	11
   881  0001F8                     setValueToEdit@value:
   882                           	callstack 0
   883  0001F8                     	ds	1
   884                           
   885                           	psect	dataBANK1
   886  0001F9                     __pdataBANK1:
   887                           	callstack 0
   888  0001F9                     _tempCounter:
   889                           	callstack 0
   890  0001F9                     	ds	4
   891  0001FD                     _firstselectflag:
   892                           	callstack 0
   893  0001FD                     	ds	1
   894                           
   895                           	psect	bssBANK2
   896  000200                     __pbssBANK2:
   897                           	callstack 0
   898  000200                     _ADC_array:
   899                           	callstack 0
   900  000200                     	ds	60
   901  00023C                     _I2C1_Status:
   902                           	callstack 0
   903  00023C                     	ds	36
   904  000260                     _SumEnergyADCHist_array:
   905                           	callstack 0
   906  000260                     	ds	20
   907  000274                     _eusart1RxStatusBuffer:
   908                           	callstack 0
   909  000274                     	ds	8
   910  00027C                     _eusart1RxBuffer:
   911                           	callstack 0
   912  00027C                     	ds	8
   913  000284                     _eusart1TxBuffer:
   914                           	callstack 0
   915  000284                     	ds	8
   916  00028C                     _EHop:
   917                           	callstack 0
   918  00028C                     	ds	2
   919  00028E                     _NextHop:
   920                           	callstack 0
   921  00028E                     	ds	2
   922  000290                     _timer0ReloadVal16bit:
   923                           	callstack 0
   924  000290                     	ds	2
   925  000292                     _classic_data:
   926                           	callstack 0
   927  000292                     	ds	16
   928  0002A2                     _memoryTEMP:
   929                           	callstack 0
   930  0002A2                     	ds	16
   931  0002B2                     _controlLearning_stateMachine:
   932                           	callstack 0
   933  0002B2                     	ds	11
   934  0002BD                     _menuConfiguration_stateMachine:
   935                           	callstack 0
   936  0002BD                     	ds	11
   937  0002C8                     _BufferRF:
   938                           	callstack 0
   939  0002C8                     	ds	9
   940  0002D1                     _DKEY:
   941                           	callstack 0
   942  0002D1                     	ds	8
   943  0002D9                     NormalKeyGen@SEED:
   944                           	callstack 0
   945  0002D9                     	ds	4
   946                           
   947                           	psect	dataBANK2
   948  0002EF                     __pdataBANK2:
   949                           	callstack 0
   950  0002EF                     _zeroCrossingWaitTime:
   951                           	callstack 0
   952  0002EF                     	ds	2
   953                           
   954                           	psect	bssBANK3
   955  000300                     __pbssBANK3:
   956                           	callstack 0
   957  000300                     _listSyncValues:
   958                           	callstack 0
   959  000300                     	ds	150
   960  000396                     _ADC_zero_array:
   961                           	callstack 0
   962  000396                     	ds	60
   963                           
   964                           	psect	dataBANK3
   965  0003D2                     __pdataBANK3:
   966                           	callstack 0
   967  0003D2                     _DispTable:
   968                           	callstack 0
   969  0003D2                     	ds	37
   970                           
   971                           	psect	cstackBANK0
   972  0000D8                     __pcstackBANK0:
   973                           	callstack 0
   974  0000D8                     ??_keeloq_classic_decrypt_packet:
   975  0000D8                     ??_setPositionInvertionInClosing:
   976  0000D8                     ??_validateRemoteSerialNumber:
   977  0000D8                     ??_RemoveSerial:
   978  0000D8                     SaveNVM_VarSystem@page:
   979                           	callstack 0
   980  0000D8                     getStateOpenPosition@state:
   981                           	callstack 0
   982  0000D8                     saveNewSerial@tempSerial:
   983                           	callstack 0
   984                           
   985                           ; 4 bytes @ 0x0
   986  0000D8                     	ds	1
   987  0000D9                     getStateOpenPosition@stateMotor:
   988                           	callstack 0
   989  0000D9                     SaveNVM_VarSystem@tempAdd:
   990                           	callstack 0
   991                           
   992                           ; 2 bytes @ 0x1
   993  0000D9                     	ds	1
   994  0000DA                     ??_controlVelocity:
   995  0000DA                     RemoveSerial@cmdType:
   996                           	callstack 0
   997                           
   998                           ; 1 bytes @ 0x2
   999  0000DA                     	ds	1
  1000  0000DB                     SaveNVM_VarSystem@point:
  1001                           	callstack 0
  1002  0000DB                     RemoveSerial@tempSerial:
  1003                           	callstack 0
  1004                           
  1005                           ; 4 bytes @ 0x3
  1006  0000DB                     	ds	1
  1007  0000DC                     ??_eusartparser:
  1008  0000DC                     ??_setValueToEdit:
  1009  0000DC                     saveNewSerial@position:
  1010                           	callstack 0
  1011  0000DC                     sm_execute_ControlLearning@psm:
  1012                           	callstack 0
  1013                           
  1014                           ; 2 bytes @ 0x4
  1015  0000DC                     	ds	1
  1016  0000DD                     ??_saveNewSerial:
  1017                           
  1018                           ; 1 bytes @ 0x5
  1019  0000DD                     	ds	1
  1020  0000DE                     ??_sm_execute_ControlLearning:
  1021  0000DE                     setValueToEdit@menuType:
  1022                           	callstack 0
  1023                           
  1024                           ; 1 bytes @ 0x6
  1025  0000DE                     	ds	1
  1026  0000DF                     setValueToEdit@posindex:
  1027                           	callstack 0
  1028                           
  1029                           ; 1 bytes @ 0x7
  1030  0000DF                     	ds	1
  1031  0000E0                     ??_controlSelectRemote:
  1032  0000E0                     setValueToEdit@haveValueToEdit:
  1033                           	callstack 0
  1034  0000E0                     keeloqDecryptPacket@data:
  1035                           	callstack 0
  1036  0000E0                     DecryptPacket_12BIT@data:
  1037                           	callstack 0
  1038                           
  1039                           ; 2 bytes @ 0x8
  1040  0000E0                     	ds	1
  1041  0000E1                     controlSelectRemote@validSerial:
  1042                           	callstack 0
  1043                           
  1044                           ; 1 bytes @ 0x9
  1045  0000E1                     	ds	1
  1046  0000E2                     controlSelectRemote@pos:
  1047                           	callstack 0
  1048  0000E2                     keeloqDecryptPacket@classic_data:
  1049                           	callstack 0
  1050  0000E2                     DecryptPacket_12BIT@classic_data:
  1051                           	callstack 0
  1052                           
  1053                           ; 2 bytes @ 0xA
  1054  0000E2                     	ds	1
  1055  0000E3                     controlSelectRemote@typeRemote:
  1056                           	callstack 0
  1057                           
  1058                           ; 1 bytes @ 0xB
  1059  0000E3                     	ds	1
  1060  0000E4                     ??_keeloqDecryptPacket:
  1061  0000E4                     DecryptPacket_12BIT@commandType:
  1062                           	callstack 0
  1063  0000E4                     actionZone_Opening@securityClosing:
  1064                           	callstack 0
  1065  0000E4                     controlSelectRemote@tempSerial:
  1066                           	callstack 0
  1067                           
  1068                           ; 4 bytes @ 0xC
  1069  0000E4                     	ds	1
  1070  0000E5                     actionZone_Opening@securityOpening:
  1071                           	callstack 0
  1072                           
  1073                           ; 1 bytes @ 0xD
  1074  0000E5                     	ds	1
  1075  0000E6                     actionZone_Opening@typeOpenOrder:
  1076                           	callstack 0
  1077                           
  1078                           ; 1 bytes @ 0xE
  1079  0000E6                     	ds	1
  1080  0000E7                     sm_execute_ControlGate@psm:
  1081                           	callstack 0
  1082                           
  1083                           ; 2 bytes @ 0xF
  1084  0000E7                     	ds	1
  1085  0000E8                     keeloqDecryptPacket@hop_error:
  1086                           	callstack 0
  1087  0000E8                     controlSelectRemote@temp:
  1088                           	callstack 0
  1089                           
  1090                           ; 1 bytes @ 0x10
  1091  0000E8                     	ds	1
  1092  0000E9                     ??_sm_execute_ControlGate:
  1093  0000E9                     keeloqDecryptPacket@commandType:
  1094                           	callstack 0
  1095  0000E9                     sm_execute_menuConfiguration@psm:
  1096                           	callstack 0
  1097                           
  1098                           ; 2 bytes @ 0x11
  1099  0000E9                     	ds	2
  1100  0000EB                     ??_sm_execute_menuConfiguration:
  1101  0000EB                     sm_execute_ControlGate@typeOpenOrder:
  1102                           	callstack 0
  1103                           
  1104                           ; 1 bytes @ 0x13
  1105  0000EB                     	ds	2
  1106  0000ED                     sm_execute_main@psm:
  1107                           	callstack 0
  1108                           
  1109                           ; 2 bytes @ 0x15
  1110  0000ED                     	ds	2
  1111  0000EF                     ??_sm_execute_main:
  1112                           
  1113                           ; 1 bytes @ 0x17
  1114  0000EF                     	ds	2
  1115  0000F1                     main@package:
  1116                           	callstack 0
  1117                           
  1118                           ; 7 bytes @ 0x19
  1119  0000F1                     	ds	7
  1120                           
  1121                           	psect	cstackCOMRAM
  1122  000001                     __pcstackCOMRAM:
  1123                           	callstack 0
  1124  000001                     ??_rxi:
  1125  000001                     ??i2_GetMotorPower:
  1126  000001                     ADCC_GetSingleConversion@channel:
  1127                           	callstack 0
  1128  000001                     Segments_Set@value:
  1129                           	callstack 0
  1130  000001                     i2VerifyElectricalBrake@tempState:
  1131                           	callstack 0
  1132  000001                     TMR1_WriteTimer@timerVal:
  1133                           	callstack 0
  1134  000001                     decrementTimeslot@ts:
  1135                           	callstack 0
  1136                           
  1137                           ; 2 bytes @ 0x0
  1138  000001                     	ds	1
  1139  000002                     ??_ReadADC:
  1140  000002                     i2VerifyElectricalBrake@actualState:
  1141                           	callstack 0
  1142                           
  1143                           ; 1 bytes @ 0x1
  1144  000002                     	ds	1
  1145  000003                     
  1146                           ; 1 bytes @ 0x2
  1147  000003                     	ds	1
  1148  000004                     i2GetMotorPower@defineatraso:
  1149                           	callstack 0
  1150                           
  1151                           ; 1 bytes @ 0x3
  1152  000004                     	ds	1
  1153  000005                     ??_controlMotorForce:
  1154  000005                     
  1155                           ; 1 bytes @ 0x4
  1156  000005                     	ds	5
  1157  00000A                     ??_INTERRUPT_InterruptManager:
  1158                           
  1159                           ; 1 bytes @ 0x9
  1160  00000A                     	ds	6
  1161  000010                     ??_GetMotorPower:
  1162  000010                     ??_SetSegmentValueLearn:
  1163  000010                     ?_sumEnergyADC:
  1164                           	callstack 0
  1165  000010                     ?_sm_get_current_state:
  1166                           	callstack 0
  1167  000010                     ?___wmul:
  1168                           	callstack 0
  1169  000010                     ?___lwdiv:
  1170                           	callstack 0
  1171  000010                     ?_calculateMean:
  1172                           	callstack 0
  1173  000010                     ?_sumHIST:
  1174                           	callstack 0
  1175  000010                     ?___lldiv:
  1176                           	callstack 0
  1177  000010                     EUSART1_Read@readValue:
  1178                           	callstack 0
  1179  000010                     EUSART1_Write@txData:
  1180                           	callstack 0
  1181  000010                     I2C1_Open@address:
  1182                           	callstack 0
  1183  000010                     I2C1_Close@returnValue:
  1184                           	callstack 0
  1185  000010                     I2C1_MasterSendTxData@data:
  1186                           	callstack 0
  1187  000010                     WWDT_TimerClear@state:
  1188                           	callstack 0
  1189  000010                     getKeyPressed@temp:
  1190                           	callstack 0
  1191  000010                     RGB_Set@value:
  1192                           	callstack 0
  1193  000010                     SetSegmentValueIntermitent@d2:
  1194                           	callstack 0
  1195  000010                     VerifyElectricalBrake@tempState:
  1196                           	callstack 0
  1197  000010                     VerifyFollowMe@securityClose:
  1198                           	callstack 0
  1199  000010                     ___lbdiv@divisor:
  1200                           	callstack 0
  1201  000010                     ___lbmod@divisor:
  1202                           	callstack 0
  1203  000010                     EUSART1_SetFramingErrorHandler@interruptHandler:
  1204                           	callstack 0
  1205  000010                     EUSART1_SetOverrunErrorHandler@interruptHandler:
  1206                           	callstack 0
  1207  000010                     EUSART1_SetErrorHandler@interruptHandler:
  1208                           	callstack 0
  1209  000010                     EUSART1_SetTxInterruptHandler@interruptHandler:
  1210                           	callstack 0
  1211  000010                     EUSART1_SetRxInterruptHandler@interruptHandler:
  1212                           	callstack 0
  1213  000010                     I2C1_SetBuffer@buffer:
  1214                           	callstack 0
  1215  000010                     I2C1_SetCallback@cb:
  1216                           	callstack 0
  1217  000010                     TMR0_SetInterruptHandler@InterruptHandler:
  1218                           	callstack 0
  1219  000010                     TMR1_SetInterruptHandler@InterruptHandler:
  1220                           	callstack 0
  1221  000010                     TMR2_SetInterruptHandler@InterruptHandler:
  1222                           	callstack 0
  1223  000010                     saveEnergyADCHist@valueToSave:
  1224                           	callstack 0
  1225  000010                     DecCHK@data:
  1226                           	callstack 0
  1227  000010                     ReqResync@CurrentHop:
  1228                           	callstack 0
  1229  000010                     verifyProgramingMode@classic_data:
  1230                           	callstack 0
  1231  000010                     setFlashLigth_ON@Freq:
  1232                           	callstack 0
  1233  000010                     sm_restart@psm:
  1234                           	callstack 0
  1235  000010                     sm_get_current_state@psm:
  1236                           	callstack 0
  1237  000010                     ___wmul@multiplier:
  1238                           	callstack 0
  1239  000010                     ___lwdiv@dividend:
  1240                           	callstack 0
  1241  000010                     memcpy@d1:
  1242                           	callstack 0
  1243  000010                     calculateMean@meanValue:
  1244                           	callstack 0
  1245  000010                     ___lldiv@dividend:
  1246                           	callstack 0
  1247  000010                     write_eusartparser@package:
  1248                           	callstack 0
  1249                           
  1250                           ; 7 bytes @ 0xF
  1251  000010                     	ds	1
  1252  000011                     ?_read_package:
  1253                           	callstack 0
  1254  000011                     I2C1_Open@returnValue:
  1255                           	callstack 0
  1256  000011                     VerifyElectricalBrake@actualState:
  1257                           	callstack 0
  1258  000011                     ___lbdiv@dividend:
  1259                           	callstack 0
  1260  000011                     ___lbmod@dividend:
  1261                           	callstack 0
  1262  000011                     SetSegmentValueIntermitent@time:
  1263                           	callstack 0
  1264  000011                     setRGB_ON@Freq:
  1265                           	callstack 0
  1266  000011                     write_package@package:
  1267                           	callstack 0
  1268                           
  1269                           ; 7 bytes @ 0x10
  1270  000011                     	ds	1
  1271  000012                     ??_TMR1_Initialize:
  1272  000012                     ??_ControlMotor:
  1273  000012                     ??_sumEnergyADC:
  1274  000012                     ??_DecCHK:
  1275  000012                     SetSegmentValueLearn@direction:
  1276                           	callstack 0
  1277  000012                     ___lbdiv@counter:
  1278                           	callstack 0
  1279  000012                     ___lbmod@counter:
  1280                           	callstack 0
  1281  000012                     I2C1_SetBuffer@bufferSize:
  1282                           	callstack 0
  1283  000012                     I2C1_SetCallback@ptr:
  1284                           	callstack 0
  1285  000012                     sm_init@psm:
  1286                           	callstack 0
  1287  000012                     sm_send_event@psm:
  1288                           	callstack 0
  1289  000012                     ___wmul@multiplicand:
  1290                           	callstack 0
  1291  000012                     ___lwdiv@divisor:
  1292                           	callstack 0
  1293  000012                     memcpy@s1:
  1294                           	callstack 0
  1295                           
  1296                           ; 2 bytes @ 0x11
  1297  000012                     	ds	1
  1298  000013                     ??_setRGB_ON:
  1299  000013                     SetSegmentValueIntermitent@d1:
  1300                           	callstack 0
  1301  000013                     GetMotorPower@defineatraso:
  1302                           	callstack 0
  1303  000013                     ___lbdiv@quotient:
  1304                           	callstack 0
  1305  000013                     ___lbmod@rem:
  1306                           	callstack 0
  1307                           
  1308                           ; 1 bytes @ 0x12
  1309  000013                     	ds	1
  1310  000014                     ??_InitSoftStop:
  1311  000014                     ??_InitSoftStart:
  1312  000014                     ??_sumHIST:
  1313  000014                     ?___awdiv:
  1314                           	callstack 0
  1315  000014                     I2C1_SetCallback@idx:
  1316                           	callstack 0
  1317  000014                     sumEnergyADC@sumE:
  1318                           	callstack 0
  1319  000014                     sm_init@initial_state:
  1320                           	callstack 0
  1321  000014                     sm_send_event@event:
  1322                           	callstack 0
  1323  000014                     ___wmul@product:
  1324                           	callstack 0
  1325  000014                     ___awdiv@dividend:
  1326                           	callstack 0
  1327  000014                     ___lwdiv@quotient:
  1328                           	callstack 0
  1329  000014                     memcpy@n:
  1330                           	callstack 0
  1331  000014                     calculateMean@newValue:
  1332                           	callstack 0
  1333  000014                     ___lldiv@divisor:
  1334                           	callstack 0
  1335                           
  1336                           ; 4 bytes @ 0x13
  1337  000014                     	ds	1
  1338  000015                     setRGB_ON@RGBLigth:
  1339                           	callstack 0
  1340  000015                     I2C1_SetDataCompleteCallback@cb:
  1341                           	callstack 0
  1342  000015                     I2C1_SetAddressNackCallback@cb:
  1343                           	callstack 0
  1344                           
  1345                           ; 2 bytes @ 0x14
  1346  000015                     	ds	1
  1347  000016                     ?_getHopCode:
  1348                           	callstack 0
  1349  000016                     ?_getCurrentComparator:
  1350                           	callstack 0
  1351  000016                     sm_init@hist_mode:
  1352                           	callstack 0
  1353  000016                     ___lwdiv@counter:
  1354                           	callstack 0
  1355  000016                     memcpy@tmp:
  1356                           	callstack 0
  1357  000016                     sumEnergyADC@auxValue:
  1358                           	callstack 0
  1359  000016                     getHopCode@data:
  1360                           	callstack 0
  1361  000016                     ___awdiv@divisor:
  1362                           	callstack 0
  1363                           
  1364                           ; 2 bytes @ 0x15
  1365  000016                     	ds	1
  1366  000017                     ??_write_eusartparser:
  1367  000017                     refreshADCZeroOffset@i:
  1368                           	callstack 0
  1369  000017                     I2C1_SetDataCompleteCallback@ptr:
  1370                           	callstack 0
  1371  000017                     I2C1_SetAddressNackCallback@ptr:
  1372                           	callstack 0
  1373  000017                     memcpy@d:
  1374                           	callstack 0
  1375                           
  1376                           ; 2 bytes @ 0x16
  1377  000017                     	ds	1
  1378  000018                     ??_getHopCode:
  1379  000018                     ??_calculateMean:
  1380  000018                     ??_OpenWalkOrder:
  1381  000018                     sumEnergyADC@i:
  1382                           	callstack 0
  1383  000018                     ControlMotor@stateMotor:
  1384                           	callstack 0
  1385  000018                     read_eusartparser@package:
  1386                           	callstack 0
  1387  000018                     ___awdiv@counter:
  1388                           	callstack 0
  1389  000018                     refreshADCZeroOffset@media:
  1390                           	callstack 0
  1391  000018                     sumHIST@max:
  1392                           	callstack 0
  1393  000018                     ___lldiv@quotient:
  1394                           	callstack 0
  1395  000018                     read_package@package:
  1396                           	callstack 0
  1397                           
  1398                           ; 7 bytes @ 0x17
  1399  000018                     	ds	1
  1400  000019                     ??_read_eusartparser:
  1401  000019                     ___awdiv@sign:
  1402                           	callstack 0
  1403  000019                     wr1RegCompleteHandler@p:
  1404                           	callstack 0
  1405  000019                     rd1RegCompleteHandler@p:
  1406                           	callstack 0
  1407  000019                     rd2RegCompleteHandler@p:
  1408                           	callstack 0
  1409  000019                     wr2RegCompleteHandler@p:
  1410                           	callstack 0
  1411  000019                     rdBlkRegCompleteHandler@p:
  1412                           	callstack 0
  1413  000019                     rd1RegCompleteHandler@i2c1_master_example$F500@ptr:
  1414                           	callstack 0
  1415  000019                     rd2RegCompleteHandler@i2c1_master_example$F511@ptr:
  1416                           	callstack 0
  1417  000019                     wr1RegCompleteHandler@i2c1_master_example$F517@ptr:
  1418                           	callstack 0
  1419  000019                     wr2RegCompleteHandler@i2c1_master_example$F523@ptr:
  1420                           	callstack 0
  1421  000019                     rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr:
  1422                           	callstack 0
  1423  000019                     I2C1_CallbackReturnReset@funPtr:
  1424                           	callstack 0
  1425  000019                     memcpy@s:
  1426                           	callstack 0
  1427                           
  1428                           ; 2 bytes @ 0x18
  1429  000019                     	ds	1
  1430  00001A                     ??_getCurrentComparator:
  1431  00001A                     sumHIST@min:
  1432                           	callstack 0
  1433  00001A                     OpenWalkOrder@diffTime:
  1434                           	callstack 0
  1435  00001A                     ___awdiv@quotient:
  1436                           	callstack 0
  1437                           
  1438                           ; 2 bytes @ 0x19
  1439  00001A                     	ds	1
  1440  00001B                     ??_I2C1_DO_TX:
  1441  00001B                     ??_I2C1_DO_RX:
  1442  00001B                     ??_I2C1_DO_TX_EMPTY:
  1443  00001B                     ??_I2C1_DO_ADDRESS_NACK:
  1444  00001B                     getSerialCmd@serial:
  1445                           	callstack 0
  1446  00001B                     Decrypt@packet:
  1447                           	callstack 0
  1448                           
  1449                           ; 2 bytes @ 0x1A
  1450  00001B                     	ds	1
  1451  00001C                     getSerialCmd@temp:
  1452                           	callstack 0
  1453  00001C                     SetSegmentValueMain@d2:
  1454                           	callstack 0
  1455  00001C                     SetSegmentValue@d2:
  1456                           	callstack 0
  1457  00001C                     SetSegmentValueIntermitentMain@d2:
  1458                           	callstack 0
  1459  00001C                     ___lldiv@counter:
  1460                           	callstack 0
  1461  00001C                     sumHIST@sumH:
  1462                           	callstack 0
  1463                           
  1464                           ; 4 bytes @ 0x1B
  1465  00001C                     	ds	1
  1466  00001D                     ??_I2C1_MasterFsm:
  1467  00001D                     ?___lmul:
  1468                           	callstack 0
  1469  00001D                     Decrypt@key:
  1470                           	callstack 0
  1471  00001D                     SetSegmentValueMain@d1:
  1472                           	callstack 0
  1473  00001D                     SetSegmentValue@d1:
  1474                           	callstack 0
  1475  00001D                     SetSegmentValueIntermitentMain@time:
  1476                           	callstack 0
  1477  00001D                     ___lmul@multiplier:
  1478                           	callstack 0
  1479                           
  1480                           ; 4 bytes @ 0x1C
  1481  00001D                     	ds	1
  1482  00001E                     Decrypt@i:
  1483                           	callstack 0
  1484                           
  1485                           ; 1 bytes @ 0x1D
  1486  00001E                     	ds	1
  1487  00001F                     Decrypt@j:
  1488                           	callstack 0
  1489  00001F                     SetSegmentValueIntermitentMain@d1:
  1490                           	callstack 0
  1491  00001F                     write_eusartparser@debug:
  1492                           	callstack 0
  1493                           
  1494                           ; 2 bytes @ 0x1E
  1495  00001F                     	ds	1
  1496  000020                     ??_load_New_Menu:
  1497  000020                     ??_controlSaveRemote:
  1498  000020                     I2C1_MasterOperation@read:
  1499                           	callstack 0
  1500  000020                     sumHIST@i:
  1501                           	callstack 0
  1502  000020                     Decrypt@p:
  1503                           	callstack 0
  1504  000020                     actionZone_Closed@securityOpening:
  1505                           	callstack 0
  1506  000020                     actionZone_Opened@securityClosing:
  1507                           	callstack 0
  1508  000020                     getCurrentComparator@tempOffset:
  1509                           	callstack 0
  1510  000020                     getHopCode@tempHop:
  1511                           	callstack 0
  1512                           
  1513                           ; 2 bytes @ 0x1F
  1514  000020                     	ds	1
  1515  000021                     I2C1_MasterOperation@returnValue:
  1516                           	callstack 0
  1517  000021                     Decrypt@aux:
  1518                           	callstack 0
  1519  000021                     actionZone_Closed@typeOpenOrder:
  1520                           	callstack 0
  1521  000021                     actionZone_Opened@typeOpenOrder:
  1522                           	callstack 0
  1523  000021                     write_eusartparser@debug2:
  1524                           	callstack 0
  1525  000021                     ___lmul@multiplicand:
  1526                           	callstack 0
  1527                           
  1528                           ; 4 bytes @ 0x20
  1529  000021                     	ds	1
  1530  000022                     I2C1_Read1ByteRegister@reg:
  1531                           	callstack 0
  1532  000022                     getCurrentComparator@x:
  1533                           	callstack 0
  1534  000022                     getHopCode@tempPos:
  1535                           	callstack 0
  1536  000022                     load_New_Menu@Menu:
  1537                           	callstack 0
  1538  000022                     i2c_writeNBytes@reg:
  1539                           	callstack 0
  1540  000022                     i2c_readDataBlock@reg:
  1541                           	callstack 0
  1542  000022                     Decrypt@Buffer:
  1543                           	callstack 0
  1544                           
  1545                           ; 4 bytes @ 0x21
  1546  000022                     	ds	1
  1547  000023                     ??_ControlCurrent:
  1548  000023                     I2C1_Read1ByteRegister@address:
  1549                           	callstack 0
  1550  000023                     getHopCode@i:
  1551                           	callstack 0
  1552  000023                     load_New_Menu@i:
  1553                           	callstack 0
  1554                           
  1555                           ; 1 bytes @ 0x22
  1556  000023                     	ds	1
  1557  000024                     i2c_writeNBytes@data:
  1558                           	callstack 0
  1559  000024                     I2C1_Read1ByteRegister@returnValue:
  1560                           	callstack 0
  1561  000024                     i2c_readDataBlock@data:
  1562                           	callstack 0
  1563  000024                     HopCHK@data:
  1564                           	callstack 0
  1565                           
  1566                           ; 2 bytes @ 0x23
  1567  000024                     	ds	1
  1568  000025                     i2c_writeNBytes@len:
  1569                           	callstack 0
  1570  000025                     ___lmul@product:
  1571                           	callstack 0
  1572                           
  1573                           ; 4 bytes @ 0x24
  1574  000025                     	ds	1
  1575  000026                     i2c_readDataBlock@len:
  1576                           	callstack 0
  1577  000026                     NormalKeyGen@serial:
  1578                           	callstack 0
  1579  000026                     HopCHK@hopDiff:
  1580                           	callstack 0
  1581                           
  1582                           ; 2 bytes @ 0x25
  1583  000026                     	ds	1
  1584  000027                     ??_i2c_writeNBytes:
  1585                           
  1586                           ; 1 bytes @ 0x26
  1587  000027                     	ds	1
  1588  000028                     ??_i2c_readDataBlock:
  1589  000028                     NormalKeyGen@HOPtemp:
  1590                           	callstack 0
  1591  000028                     i2c_writeNBytes@dat:
  1592                           	callstack 0
  1593                           
  1594                           ; 17 bytes @ 0x27
  1595  000028                     	ds	1
  1596  000029                     ?_getTimeDecelaration:
  1597                           	callstack 0
  1598  000029                     i2c_readDataBlock@address:
  1599                           	callstack 0
  1600                           
  1601                           ; 1 bytes @ 0x28
  1602  000029                     	ds	1
  1603  00002A                     i2c_readDataBlock@d:
  1604                           	callstack 0
  1605                           
  1606                           ; 4 bytes @ 0x29
  1607  00002A                     	ds	2
  1608  00002C                     NormalKeyGen@SKEYtemp:
  1609                           	callstack 0
  1610                           
  1611                           ; 4 bytes @ 0x2B
  1612  00002C                     	ds	1
  1613  00002D                     ??_getTimeDecelaration:
  1614                           
  1615                           ; 1 bytes @ 0x2C
  1616  00002D                     	ds	1
  1617  00002E                     cmdMemoryIsEmpty@position:
  1618                           	callstack 0
  1619  00002E                     validateRemoteSerialNumber@serial:
  1620                           	callstack 0
  1621                           
  1622                           ; 4 bytes @ 0x2D
  1623  00002E                     	ds	1
  1624  00002F                     ??_cmdMemoryIsEmpty:
  1625                           
  1626                           ; 1 bytes @ 0x2E
  1627  00002F                     	ds	1
  1628  000030                     NormalKeyGen@Buffer:
  1629                           	callstack 0
  1630                           
  1631                           ; 8 bytes @ 0x2F
  1632  000030                     	ds	1
  1633  000031                     cmdMemoryIsEmpty@cmdType:
  1634                           	callstack 0
  1635  000031                     getTimeDecelaration@state:
  1636                           	callstack 0
  1637                           
  1638                           ; 1 bytes @ 0x30
  1639  000031                     	ds	1
  1640  000032                     ??_setPositionInvertionInOpening:
  1641  000032                     ??_getStateOpenPosition:
  1642  000032                     validateRemoteSerialNumber@VerifyOnlySerial:
  1643                           	callstack 0
  1644  000032                     actionZone_Closing@securityClosing:
  1645                           	callstack 0
  1646  000032                     cmdMemoryIsEmpty@tempSerial:
  1647                           	callstack 0
  1648                           
  1649                           ; 4 bytes @ 0x31
  1650  000032                     	ds	1
  1651  000033                     actionZone_Closing@typeOpenOrder:
  1652                           	callstack 0
  1653  000033                     validateRemoteSerialNumber@position:
  1654                           	callstack 0
  1655                           
  1656                           ; 2 bytes @ 0x32
  1657  000033                     	ds	2
  1658  000035                     validateRemoteSerialNumber@mask:
  1659                           	callstack 0
  1660                           
  1661                           ; 4 bytes @ 0x34
  1662  000035                     	ds	3
  1663  000038                     keeloq_classic_decrypt_packet@data:
  1664                           	callstack 0
  1665                           
  1666                           ; 2 bytes @ 0x37
  1667  000038                     	ds	1
  1668  000039                     i2c_writeNBytes@address:
  1669                           	callstack 0
  1670  000039                     validateRemoteSerialNumber@j:
  1671                           	callstack 0
  1672                           
  1673                           ; 1 bytes @ 0x38
  1674  000039                     	ds	1
  1675  00003A                     validateRemoteSerialNumber@i:
  1676                           	callstack 0
  1677  00003A                     saveNewSerial@cmdType:
  1678                           	callstack 0
  1679  00003A                     RemoveSerial@position:
  1680                           	callstack 0
  1681  00003A                     ResetDefaultMemory@type:
  1682                           	callstack 0
  1683  00003A                     checkNVM_VarSystem@saveParam:
  1684                           	callstack 0
  1685  00003A                     sm_execute_ControlLearning@typeOpenOrder:
  1686                           	callstack 0
  1687  00003A                     setValueToEdit@ParameterSelected:
  1688                           	callstack 0
  1689  00003A                     eusartparser@package:
  1690                           	callstack 0
  1691                           
  1692                           ; 1 bytes @ 0x39
  1693  00003A                     	ds	1
  1694  00003B                     
  1695                           ; 1 bytes @ 0x3A
  1696 ;;
  1697 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1698 ;;
  1699 ;; *************** function _main *****************
  1700 ;; Defined at:
  1701 ;;		line 63 in file "main_MC50.c"
  1702 ;; Parameters:    Size  Location     Type
  1703 ;;		None
  1704 ;; Auto vars:     Size  Location     Type
  1705 ;;  package         7   25[BANK0 ] struct package_t
  1706 ;; Return value:  Size  Location     Type
  1707 ;;                  1    wreg      void 
  1708 ;; Registers used:
  1709 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  1710 ;; Tracked objects:
  1711 ;;		On entry : 0/0
  1712 ;;		On exit  : 3F/1
  1713 ;;		Unchanged: 0/0
  1714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1716 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1718 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1719 ;;Total ram usage:        7 bytes
  1720 ;; Hardware stack levels required when called: 17
  1721 ;; This function calls:
  1722 ;;		_ControlCounterMoves
  1723 ;;		_ControlCurrent
  1724 ;;		_ControlInputs
  1725 ;;		_ControlLights
  1726 ;;		_ControlMotor
  1727 ;;		_EUSART1_is_rx_ready
  1728 ;;		_InitReceiver
  1729 ;;		_SYSTEM_Initialize
  1730 ;;		_SetSegmentValue
  1731 ;;		_ShowVersion
  1732 ;;		_WWDT_SoftEnable
  1733 ;;		_WWDT_TimerClear
  1734 ;;		_controlVelocity
  1735 ;;		_eusartparser
  1736 ;;		_getKeyPressed
  1737 ;;		_loadNVM_VarSystem
  1738 ;;		_readInputs
  1739 ;;		_readRFButtons
  1740 ;;		_read_package
  1741 ;;		_readbutton
  1742 ;;		_sm_execute_ControlGate
  1743 ;;		_sm_execute_main
  1744 ;;		_sm_init
  1745 ;; This function is called by:
  1746 ;;		Startup code after reset
  1747 ;; This function uses a non-reentrant model
  1748 ;;
  1749                           
  1750                           	psect	text0
  1751  005CD6                     __ptext0:
  1752                           	callstack 0
  1753  005CD6                     _main:
  1754                           	callstack 14
  1755                           
  1756                           ;main_MC50.c: 70:     dispStruct.display_grp.value_display1=dMinus;
  1757                           
  1758                           ;incstack = 0
  1759  005CD6  0E18               	movlw	24
  1760  005CD8  0100               	movlb	0	; () banked
  1761  005CDA  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  1762                           
  1763                           ;main_MC50.c: 71:     dispStruct.display_grp.value_display1=dMinus;
  1764  005CDC  0E18               	movlw	24
  1765  005CDE  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  1766                           
  1767                           ;main_MC50.c: 72:     dispStruct.intermitentFreq=0;
  1768  005CE0  0E00               	movlw	0
  1769  005CE2  6F76               	movwf	(_dispStruct+4)& (0+255),b	;volatile
  1770  005CE4  0E00               	movlw	0
  1771  005CE6  6F75               	movwf	(_dispStruct+3)& (0+255),b	;volatile
  1772                           
  1773                           ;main_MC50.c: 73:     dispStruct.upFase=1;
  1774  005CE8  0E01               	movlw	1
  1775  005CEA  6F77               	movwf	(_dispStruct+5)& (0+255),b	;volatile
  1776                           
  1777                           ; BSR set to: 0
  1778                           ;main_MC50.c: 76:     SYSTEM_Initialize();
  1779  005CEC  EC7D  F045         	call	_SYSTEM_Initialize	;wreg free
  1780                           
  1781                           ; BSR set to: 14
  1782                           ;main_MC50.c: 77:     WWDT_SoftEnable();
  1783  005CF0  EC3D  F049         	call	_WWDT_SoftEnable	;wreg free
  1784                           
  1785                           ; BSR set to: 14
  1786                           ;main_MC50.c: 80:       (INTCONbits.GIE = 1);
  1787  005CF4  8EF2               	bsf	242,7,c	;volatile
  1788                           
  1789                           ; BSR set to: 14
  1790                           ;main_MC50.c: 83:      (INTCONbits.PEIE = 1);
  1791  005CF6  8CF2               	bsf	242,6,c	;volatile
  1792                           
  1793                           ; BSR set to: 14
  1794                           ;main_MC50.c: 86:     IOCBP3=1;
  1795  005CF8  010F               	movlb	15	; () banked
  1796  005CFA  8714               	bsf	20,3,b	;volatile
  1797                           
  1798                           ; BSR set to: 15
  1799                           ;main_MC50.c: 87:     IOCBN3=1;
  1800  005CFC  8713               	bsf	19,3,b	;volatile
  1801                           
  1802                           ; BSR set to: 15
  1803                           ;main_MC50.c: 94:     InitReceiver();
  1804  005CFE  ECC7  F047         	call	_InitReceiver	;wreg free
  1805                           
  1806                           ; BSR set to: 0
  1807                           ;main_MC50.c: 95:     loadNVM_VarSystem();
  1808  005D02  EC24  F031         	call	_loadNVM_VarSystem	;wreg free
  1809                           
  1810                           ;main_MC50.c: 97:     WWDT_TimerClear();
  1811  005D06  EC9D  F047         	call	_WWDT_TimerClear	;wreg free
  1812                           
  1813                           ;main_MC50.c: 99:     SetSegmentValue(dMinus,dMinus);
  1814  005D0A  0E18               	movlw	24
  1815  005D0C  6E1C               	movwf	SetSegmentValue@d2^0,c
  1816  005D0E  0E18               	movlw	24
  1817  005D10  ECEE  F047         	call	_SetSegmentValue
  1818                           
  1819                           ; BSR set to: 0
  1820                           ;main_MC50.c: 100:     ts_system.ts_TimeSlot1ms = ( 100/50);
  1821  005D14  0E02               	movlw	2
  1822  005D16  0101               	movlb	1	; () banked
  1823  005D18  6F9C               	movwf	(_ts_system+2)& (0+255),b	;volatile
  1824                           
  1825                           ;main_MC50.c: 101:     while ( ts_system.ts_TimeSlot1ms > 0 )
  1826  005D1A  D00B               	goto	l23276
  1827  005D1C                     l23266:
  1828                           
  1829                           ; BSR set to: 1
  1830                           ;main_MC50.c: 102:     {;main_MC50.c: 103:         if ( ts_system.ts_TimeSlotMain<=0 )
  1831  005D1C  519D               	movf	(_ts_system+3)& (0+255),w,b	;volatile
  1832  005D1E  A4D8               	btfss	status,2,c
  1833  005D20  D008               	goto	l23276
  1834                           
  1835                           ; BSR set to: 1
  1836                           ;main_MC50.c: 104:         {;main_MC50.c: 105:             WWDT_TimerClear();
  1837  005D22  EC9D  F047         	call	_WWDT_TimerClear	;wreg free
  1838                           
  1839                           ;main_MC50.c: 106:             ts_system.ts_TimeSlotMain = 50;
  1840  005D26  0E32               	movlw	50
  1841  005D28  0101               	movlb	1	; () banked
  1842  005D2A  6F9D               	movwf	(_ts_system+3)& (0+255),b	;volatile
  1843                           
  1844                           ; BSR set to: 1
  1845                           ;main_MC50.c: 108:             ts_system.ts_TimeSlot1ms--;
  1846  005D2C  079C               	decf	(_ts_system+2)& (0+255),f,b	;volatile
  1847                           
  1848                           ; BSR set to: 1
  1849                           ;main_MC50.c: 109:             readInputs();
  1850  005D2E  ECF0  F033         	call	_readInputs	;wreg free
  1851  005D32                     l23276:
  1852                           
  1853                           ;main_MC50.c: 101:     while ( ts_system.ts_TimeSlot1ms > 0 )
  1854  005D32  0101               	movlb	1	; () banked
  1855  005D34  519C               	movf	(_ts_system+2)& (0+255),w,b	;volatile
  1856  005D36  A4D8               	btfss	status,2,c
  1857  005D38  D7F1               	goto	l23266
  1858                           
  1859                           ; BSR set to: 1
  1860                           ;main_MC50.c: 117:     sm_init(&menuConfiguration_stateMachine,st_MainMenu,HIST_NONE);
  1861  005D3A  0EBD               	movlw	low _menuConfiguration_stateMachine
  1862  005D3C  6E12               	movwf	sm_init@psm^0,c
  1863  005D3E  0E02               	movlw	high _menuConfiguration_stateMachine
  1864  005D40  6E13               	movwf	(sm_init@psm+1)^0,c
  1865  005D42  0E00               	movlw	0
  1866  005D44  6E15               	movwf	(sm_init@initial_state+1)^0,c
  1867  005D46  0E00               	movlw	0
  1868  005D48  6E14               	movwf	sm_init@initial_state^0,c
  1869  005D4A  0E00               	movlw	0
  1870  005D4C  6E16               	movwf	sm_init@hist_mode^0,c
  1871  005D4E  ECFF  F041         	call	_sm_init	;wreg free
  1872                           
  1873                           ;main_MC50.c: 118:     sm_init(&main_stateMachine,st_standBy,HIST_NONE);
  1874  005D52  0EED               	movlw	low _main_stateMachine
  1875  005D54  6E12               	movwf	sm_init@psm^0,c
  1876  005D56  0E01               	movlw	high _main_stateMachine
  1877  005D58  6E13               	movwf	(sm_init@psm+1)^0,c
  1878  005D5A  0E00               	movlw	0
  1879  005D5C  6E15               	movwf	(sm_init@initial_state+1)^0,c
  1880  005D5E  0E00               	movlw	0
  1881  005D60  6E14               	movwf	sm_init@initial_state^0,c
  1882  005D62  0E00               	movlw	0
  1883  005D64  6E16               	movwf	sm_init@hist_mode^0,c
  1884  005D66  ECFF  F041         	call	_sm_init	;wreg free
  1885                           
  1886                           ;main_MC50.c: 119:     sm_init(&controlGate_stateMachine,st_Idle,HIST_NONE);
  1887  005D6A  0EE2               	movlw	low _controlGate_stateMachine
  1888  005D6C  6E12               	movwf	sm_init@psm^0,c
  1889  005D6E  0E01               	movlw	high _controlGate_stateMachine
  1890  005D70  6E13               	movwf	(sm_init@psm+1)^0,c
  1891  005D72  0E00               	movlw	0
  1892  005D74  6E15               	movwf	(sm_init@initial_state+1)^0,c
  1893  005D76  0E00               	movlw	0
  1894  005D78  6E14               	movwf	sm_init@initial_state^0,c
  1895  005D7A  0E00               	movlw	0
  1896  005D7C  6E16               	movwf	sm_init@hist_mode^0,c
  1897  005D7E  ECFF  F041         	call	_sm_init	;wreg free
  1898                           
  1899                           ;main_MC50.c: 120:     sm_init(&controlLearning_stateMachine,st_InitLearning,HIST_NONE);
  1900  005D82  0EB2               	movlw	low _controlLearning_stateMachine
  1901  005D84  6E12               	movwf	sm_init@psm^0,c
  1902  005D86  0E02               	movlw	high _controlLearning_stateMachine
  1903  005D88  6E13               	movwf	(sm_init@psm+1)^0,c
  1904  005D8A  0E00               	movlw	0
  1905  005D8C  6E15               	movwf	(sm_init@initial_state+1)^0,c
  1906  005D8E  0E00               	movlw	0
  1907  005D90  6E14               	movwf	sm_init@initial_state^0,c
  1908  005D92  0E00               	movlw	0
  1909  005D94  6E16               	movwf	sm_init@hist_mode^0,c
  1910  005D96  ECFF  F041         	call	_sm_init	;wreg free
  1911                           
  1912                           ;main_MC50.c: 122:     ts_system.Debug_TS=(1000/50);
  1913  005D9A  0E00               	movlw	0
  1914  005D9C  0101               	movlb	1	; () banked
  1915  005D9E  6FA3               	movwf	(_ts_system+9)& (0+255),b	;volatile
  1916  005DA0  0E14               	movlw	20
  1917  005DA2  6FA2               	movwf	(_ts_system+8)& (0+255),b	;volatile
  1918                           
  1919                           ; BSR set to: 1
  1920                           ;main_MC50.c: 124:     var_sys.ADCZeroOffset = 510;
  1921  005DA4  0E01               	movlw	1
  1922  005DA6  6F4C               	movwf	(_var_sys+76)& (0+255),b	;volatile
  1923  005DA8  0EFE               	movlw	254
  1924  005DAA  6F4B               	movwf	(_var_sys+75)& (0+255),b	;volatile
  1925                           
  1926                           ; BSR set to: 1
  1927                           ;main_MC50.c: 125:     ts_system.TimeStopADCZeroOffsetCalc = (5*(1000/50));
  1928  005DAC  0E00               	movlw	0
  1929  005DAE  6FD9               	movwf	(_ts_system+63)& (0+255),b	;volatile
  1930  005DB0  0E64               	movlw	100
  1931  005DB2  6FD8               	movwf	(_ts_system+62)& (0+255),b	;volatile
  1932                           
  1933                           ; BSR set to: 1
  1934                           ;main_MC50.c: 126:     ts_system.TimeStopElectricBrake = 0;
  1935  005DB4  0E00               	movlw	0
  1936  005DB6  6FDB               	movwf	(_ts_system+65)& (0+255),b	;volatile
  1937  005DB8  0E00               	movlw	0
  1938  005DBA  6FDA               	movwf	(_ts_system+64)& (0+255),b	;volatile
  1939                           
  1940                           ; BSR set to: 1
  1941                           ;main_MC50.c: 129:     var_sys.StateMotor = Stopped;
  1942  005DBC  0E00               	movlw	0
  1943  005DBE  6F00               	movwf	_var_sys& (0+255),b	;volatile
  1944  005DC0                     l23290:
  1945                           
  1946                           ;main_MC50.c: 136:     {;main_MC50.c: 140:         struct package_t package;;main_MC50.c
      +                          : 141:         if(EUSART1_is_rx_ready()){
  1947  005DC0  EC8D  F048         	call	_EUSART1_is_rx_ready	;wreg free
  1948  005DC4  0900               	iorlw	0
  1949  005DC6  B4D8               	btfsc	status,2,c
  1950  005DC8  D00D               	goto	l23296
  1951                           
  1952                           ; BSR set to: 0
  1953                           ;main_MC50.c: 142:             package=read_package();
  1954  005DCA  ECD3  F042         	call	_read_package	;wreg free
  1955  005DCE  EE20  F0F1         	lfsr	2,main@package
  1956  005DD2  0E06               	movlw	6
  1957  005DD4                     u28791:
  1958  005DD4  CFEB FFDB          	movff	plusw0,plusw2
  1959  005DD8  06E8               	decf	wreg,f,c
  1960  005DDA  E2FC               	bc	u28791
  1961                           
  1962                           ; BSR set to: 14
  1963                           ;main_MC50.c: 143:             eusartparser(&package);
  1964  005DDC  0EF1               	movlw	low main@package
  1965  005DDE  6E3A               	movwf	eusartparser@package^0,c
  1966  005DE0  EC36  F037         	call	_eusartparser	;wreg free
  1967  005DE4                     l23296:
  1968                           
  1969                           ;main_MC50.c: 147:         if ( ts_system.ts_TimeSlotMain<=0 )
  1970  005DE4  0101               	movlb	1	; () banked
  1971  005DE6  519D               	movf	(_ts_system+3)& (0+255),w,b	;volatile
  1972  005DE8  A4D8               	btfss	status,2,c
  1973  005DEA  D7EA               	goto	l23290
  1974                           
  1975                           ; BSR set to: 1
  1976                           ;main_MC50.c: 148:         {;main_MC50.c: 149:              ts_system.ts_TimeSlotMain = 
      +                          50;
  1977  005DEC  0E32               	movlw	50
  1978  005DEE  6F9D               	movwf	(_ts_system+3)& (0+255),b	;volatile
  1979                           
  1980                           ; BSR set to: 1
  1981                           ;main_MC50.c: 150:             WWDT_TimerClear();
  1982  005DF0  EC9D  F047         	call	_WWDT_TimerClear	;wreg free
  1983                           
  1984                           ;main_MC50.c: 152:             if(var_sys.StateVersion<4)
  1985  005DF4  0E04               	movlw	4
  1986  005DF6  0101               	movlb	1	; () banked
  1987  005DF8  6149               	cpfslt	(_var_sys+73)& (0+255),b	;volatile
  1988  005DFA  D003               	goto	l23306
  1989                           
  1990                           ; BSR set to: 1
  1991                           ;main_MC50.c: 154:             {;main_MC50.c: 155:                 ShowVersion();
  1992  005DFC  EC89  F040         	call	_ShowVersion	;wreg free
  1993                           
  1994                           ;main_MC50.c: 156:             }
  1995  005E00  D7DF               	goto	l23290
  1996  005E02                     l23306:
  1997                           
  1998                           ; BSR set to: 1
  1999                           ;main_MC50.c: 158:             {;main_MC50.c: 160:                 readbutton();
  2000  005E02  EC1F  F040         	call	_readbutton	;wreg free
  2001                           
  2002                           ; BSR set to: 1
  2003                           ;main_MC50.c: 162:                 readRFButtons();
  2004  005E06  ECDB  F02C         	call	_readRFButtons	;wreg free
  2005                           
  2006                           ;main_MC50.c: 163:                lastKey=getKeyPressed();
  2007  005E0A  EC20  F048         	call	_getKeyPressed	;wreg free
  2008  005E0E  0101               	movlb	1	; () banked
  2009  005E10  6F94               	movwf	_lastKey& (0+255),b
  2010                           
  2011                           ; BSR set to: 1
  2012                           ;main_MC50.c: 165:                 readInputs();
  2013  005E12  ECF0  F033         	call	_readInputs	;wreg free
  2014                           
  2015                           ;main_MC50.c: 166:                 ControlInputs();
  2016  005E16  EC4F  F032         	call	_ControlInputs	;wreg free
  2017                           
  2018                           ;main_MC50.c: 167:                 ControlCurrent();
  2019  005E1A  EC2C  F02F         	call	_ControlCurrent	;wreg free
  2020                           
  2021                           ;main_MC50.c: 168:                 controlVelocity();
  2022  005E1E  ECD0  F025         	call	_controlVelocity	;wreg free
  2023                           
  2024                           ;main_MC50.c: 169:                 ControlMotor();
  2025  005E22  EC9A  F023         	call	_ControlMotor	;wreg free
  2026                           
  2027                           ;main_MC50.c: 170:                 ControlLights();
  2028  005E26  ECE2  F01C         	call	_ControlLights	;wreg free
  2029                           
  2030                           ;main_MC50.c: 171:                 ControlCounterMoves();
  2031  005E2A  ECA6  F041         	call	_ControlCounterMoves	;wreg free
  2032                           
  2033                           ;main_MC50.c: 173:                 sm_execute_main(&main_stateMachine);
  2034  005E2E  0EED               	movlw	low _main_stateMachine
  2035  005E30  0100               	movlb	0	; () banked
  2036  005E32  6FED               	movwf	sm_execute_main@psm& (0+255),b
  2037  005E34  0E01               	movlw	high _main_stateMachine
  2038  005E36  6FEE               	movwf	(sm_execute_main@psm+1)& (0+255),b
  2039  005E38  ECCA  F00F         	call	_sm_execute_main	;wreg free
  2040                           
  2041                           ;main_MC50.c: 174:                 sm_execute_ControlGate(&controlGate_stateMachine);
  2042  005E3C  0EE2               	movlw	low _controlGate_stateMachine
  2043  005E3E  0100               	movlb	0	; () banked
  2044  005E40  6FE7               	movwf	sm_execute_ControlGate@psm& (0+255),b
  2045  005E42  0E01               	movlw	high _controlGate_stateMachine
  2046  005E44  6FE8               	movwf	(sm_execute_ControlGate@psm+1)& (0+255),b
  2047  005E46  EC3D  F01B         	call	_sm_execute_ControlGate	;wreg free
  2048                           
  2049                           ;main_MC50.c: 177:                 if(lastKey!=0xff)
  2050  005E4A  0101               	movlb	1	; () banked
  2051  005E4C  2994               	incf	_lastKey& (0+255),w,b
  2052  005E4E  B4D8               	btfsc	status,2,c
  2053  005E50  D7B7               	goto	l23290
  2054                           
  2055                           ; BSR set to: 1
  2056                           ;main_MC50.c: 178:                 {;main_MC50.c: 180:                       InitReceive
      +                          r();
  2057  005E52  ECC7  F047         	call	_InitReceiver	;wreg free
  2058                           
  2059                           ; BSR set to: 1
  2060                           
  2061                           ;main_MC50.c: 185:         }
  2062  005E56  D7B4               	goto	l23290
  2063  005E58                     __end_of_main:
  2064                           	callstack 0
  2065                           
  2066 ;; *************** function _sm_execute_main *****************
  2067 ;; Defined at:
  2068 ;;		line 26 in file "sm_Main_MC50.c"
  2069 ;; Parameters:    Size  Location     Type
  2070 ;;  psm             2   21[BANK0 ] PTR struct .
  2071 ;;		 -> main_stateMachine(11), 
  2072 ;; Auto vars:     Size  Location     Type
  2073 ;;		None
  2074 ;; Return value:  Size  Location     Type
  2075 ;;                  1    wreg      void 
  2076 ;; Registers used:
  2077 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2078 ;; Tracked objects:
  2079 ;;		On entry : 3F/0
  2080 ;;		On exit  : 0/0
  2081 ;;		Unchanged: 0/0
  2082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2083 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2084 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2085 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2086 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2087 ;;Total ram usage:        4 bytes
  2088 ;; Hardware stack levels used: 1
  2089 ;; Hardware stack levels required when called: 16
  2090 ;; This function calls:
  2091 ;;		_SetSegmentValueIntermitentMain
  2092 ;;		_SetSegmentValueMain
  2093 ;;		_load_New_Menu
  2094 ;;		_sm_execute_menuConfiguration
  2095 ;;		_sm_send_event
  2096 ;; This function is called by:
  2097 ;;		_main
  2098 ;; This function uses a non-reentrant model
  2099 ;;
  2100                           
  2101                           	psect	text1
  2102  001F94                     __ptext1:
  2103                           	callstack 0
  2104  001F94                     _sm_execute_main:
  2105                           	callstack 14
  2106                           
  2107                           ; BSR set to: 0
  2108                           ;sm_Main_MC50.c: 29:     switch((sm_state_Main_t) psm->current_state)
  2109                           
  2110                           ; BSR set to: 1
  2111                           ;incstack = 0
  2112  001F94  D053               	goto	l22792
  2113  001F96                     l22768:
  2114                           
  2115                           ; BSR set to: 0
  2116                           ;sm_Main_MC50.c: 32:         {;sm_Main_MC50.c: 33:             if(programmer_enable==0)
  2117  001F96  5185               	movf	_programmer_enable& (0+255),w,b
  2118  001F98  A4D8               	btfss	status,2,c
  2119  001F9A  D066               	goto	l22794
  2120                           
  2121                           ; BSR set to: 0
  2122                           ;sm_Main_MC50.c: 34:                 if(psm->last_event==ev_goto_MenuConfig)
  2123  001F9C  EE20 F004          	lfsr	2,4
  2124  001FA0  51ED               	movf	sm_execute_main@psm& (0+255),w,b
  2125  001FA2  26D9               	addwf	fsr2l,f,c
  2126  001FA4  51EE               	movf	(sm_execute_main@psm+1)& (0+255),w,b
  2127  001FA6  22DA               	addwfc	fsr2h,f,c
  2128  001FA8  0E06               	movlw	6
  2129  001FAA  18DE               	xorwf	postinc2,w,c
  2130  001FAC  10DE               	iorwf	postinc2,w,c
  2131  001FAE  A4D8               	btfss	status,2,c
  2132  001FB0  D006               	goto	l22774
  2133  001FB2                     u27790:
  2134                           
  2135                           ; BSR set to: 0
  2136                           ;sm_Main_MC50.c: 35:                 {;sm_Main_MC50.c: 37:                     psm->curr
      +                          ent_state = st_MenuConfiguration;
  2137  001FB2  C0ED  FFD9         	movff	sm_execute_main@psm,fsr2l
  2138  001FB6  C0EE  FFDA         	movff	sm_execute_main@psm+1,fsr2h
  2139  001FBA  0E01               	movlw	1
  2140  001FBC  D01D               	goto	L2
  2141  001FBE                     l22774:
  2142                           
  2143                           ; BSR set to: 0
  2144  001FBE  EE20 F004          	lfsr	2,4
  2145  001FC2  51ED               	movf	sm_execute_main@psm& (0+255),w,b
  2146  001FC4  26D9               	addwf	fsr2l,f,c
  2147  001FC6  51EE               	movf	(sm_execute_main@psm+1)& (0+255),w,b
  2148  001FC8  22DA               	addwfc	fsr2h,f,c
  2149  001FCA  0E11               	movlw	17
  2150  001FCC  18DE               	xorwf	postinc2,w,c
  2151  001FCE  10DE               	iorwf	postinc2,w,c
  2152  001FD0  A4D8               	btfss	status,2,c
  2153  001FD2  D04A               	goto	l22794
  2154                           
  2155                           ; BSR set to: 0
  2156                           ;sm_Main_MC50.c: 40:                 {;sm_Main_MC50.c: 41:                     psm->curr
      +                          ent_state = st_MotorON;
  2157  001FD4  C0ED  FFD9         	movff	sm_execute_main@psm,fsr2l
  2158  001FD8  C0EE  FFDA         	movff	sm_execute_main@psm+1,fsr2h
  2159  001FDC  0E02               	movlw	2
  2160  001FDE  D00C               	goto	L2
  2161  001FE0                     l22778:
  2162                           
  2163                           ; BSR set to: 0
  2164                           ;sm_Main_MC50.c: 46:         {;sm_Main_MC50.c: 47:             if(psm->last_event==ev_go
      +                          to_StandBy)
  2165  001FE0  EE20 F004          	lfsr	2,4
  2166  001FE4  51ED               	movf	sm_execute_main@psm& (0+255),w,b
  2167  001FE6  26D9               	addwf	fsr2l,f,c
  2168  001FE8  51EE               	movf	(sm_execute_main@psm+1)& (0+255),w,b
  2169  001FEA  22DA               	addwfc	fsr2h,f,c
  2170  001FEC  0E07               	movlw	7
  2171  001FEE  18DE               	xorwf	postinc2,w,c
  2172  001FF0  10DE               	iorwf	postinc2,w,c
  2173  001FF2  A4D8               	btfss	status,2,c
  2174  001FF4  D039               	goto	l22794
  2175  001FF6  D00F               	goto	u27820
  2176  001FF8                     L2:
  2177  001FF8  6EDE               	movwf	postinc2,c
  2178  001FFA  0E00               	movlw	0
  2179  001FFC  6EDD               	movwf	postdec2,c
  2180  001FFE  D034               	goto	l22794
  2181  002000                     l22782:
  2182                           
  2183                           ; BSR set to: 0
  2184                           ;sm_Main_MC50.c: 54:         {;sm_Main_MC50.c: 55:             if(psm->last_event==ev_go
      +                          to_StandBy)
  2185  002000  EE20 F004          	lfsr	2,4
  2186  002004  51ED               	movf	sm_execute_main@psm& (0+255),w,b
  2187  002006  26D9               	addwf	fsr2l,f,c
  2188  002008  51EE               	movf	(sm_execute_main@psm+1)& (0+255),w,b
  2189  00200A  22DA               	addwfc	fsr2h,f,c
  2190  00200C  0E07               	movlw	7
  2191  00200E  18DE               	xorwf	postinc2,w,c
  2192  002010  10DE               	iorwf	postinc2,w,c
  2193  002012  A4D8               	btfss	status,2,c
  2194  002014  D006               	goto	l22786
  2195  002016                     u27820:
  2196                           
  2197                           ; BSR set to: 0
  2198                           ;sm_Main_MC50.c: 56:             {;sm_Main_MC50.c: 57:                 psm->current_stat
      +                          e = st_standBy;
  2199  002016  C0ED  FFD9         	movff	sm_execute_main@psm,fsr2l
  2200  00201A  C0EE  FFDA         	movff	sm_execute_main@psm+1,fsr2h
  2201  00201E  0E00               	movlw	0
  2202  002020  D7EB               	goto	L2
  2203  002022                     l22786:
  2204                           
  2205                           ; BSR set to: 0
  2206  002022  EE20 F004          	lfsr	2,4
  2207  002026  51ED               	movf	sm_execute_main@psm& (0+255),w,b
  2208  002028  26D9               	addwf	fsr2l,f,c
  2209  00202A  51EE               	movf	(sm_execute_main@psm+1)& (0+255),w,b
  2210  00202C  22DA               	addwfc	fsr2h,f,c
  2211  00202E  0E06               	movlw	6
  2212  002030  18DE               	xorwf	postinc2,w,c
  2213  002032  10DE               	iorwf	postinc2,w,c
  2214  002034  A4D8               	btfss	status,2,c
  2215  002036  D018               	goto	l22794
  2216  002038  D7BC               	goto	u27790
  2217  00203A                     l3048:
  2218                           
  2219                           ; BSR set to: 0
  2220  00203A  D7FF               	goto	l3048
  2221  00203C                     l22792:
  2222                           
  2223                           ; BSR set to: 0
  2224  00203C  C0ED  FFD9         	movff	sm_execute_main@psm,fsr2l
  2225  002040  C0EE  FFDA         	movff	sm_execute_main@psm+1,fsr2h
  2226  002044  50DF               	movf	indf2,w,c
  2227  002046  6FEF               	movwf	??_sm_execute_main& (0+255),b
  2228  002048  6BF0               	clrf	(??_sm_execute_main+1)& (0+255),b
  2229                           
  2230                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2231                           ; Switch size 1, requested type "simple"
  2232                           ; Number of cases is 1, Range of values is 0 to 0
  2233                           ; switch strategies available:
  2234                           ; Name         Instructions Cycles
  2235                           ; simple_byte            4     3 (average)
  2236                           ;	Chosen strategy is simple_byte
  2237  00204A  51F0               	movf	(??_sm_execute_main+1)& (0+255),w,b
  2238  00204C  0A00               	xorlw	0	; case 0
  2239  00204E  A4D8               	btfss	status,2,c
  2240  002050  D7F4               	goto	l3048
  2241                           
  2242                           ; BSR set to: 0
  2243                           ; Switch size 1, requested type "simple"
  2244                           ; Number of cases is 3, Range of values is 0 to 2
  2245                           ; switch strategies available:
  2246                           ; Name         Instructions Cycles
  2247                           ; simple_byte           10     6 (average)
  2248                           ;	Chosen strategy is simple_byte
  2249  002052  51EF               	movf	??_sm_execute_main& (0+255),w,b
  2250  002054  0A00               	xorlw	0	; case 0
  2251  002056  B4D8               	btfsc	status,2,c
  2252  002058  D79E               	goto	l22768
  2253  00205A  0A01               	xorlw	1	; case 1
  2254  00205C  B4D8               	btfsc	status,2,c
  2255  00205E  D7C0               	goto	l22778
  2256  002060  0A03               	xorlw	3	; case 2
  2257  002062  B4D8               	btfsc	status,2,c
  2258  002064  D7CD               	goto	l22782
  2259  002066  D7E9               	goto	l3048
  2260  002068                     l22794:
  2261                           
  2262                           ; BSR set to: 0
  2263                           ;sm_Main_MC50.c: 77:     sm_send_event(&main_stateMachine, ev_NULL);
  2264  002068  0EED               	movlw	low _main_stateMachine
  2265  00206A  6E12               	movwf	sm_send_event@psm^0,c
  2266  00206C  0E01               	movlw	high _main_stateMachine
  2267  00206E  6E13               	movwf	(sm_send_event@psm+1)^0,c
  2268  002070  0E00               	movlw	0
  2269  002072  6E15               	movwf	(sm_send_event@event+1)^0,c
  2270  002074  0E00               	movlw	0
  2271  002076  6E14               	movwf	sm_send_event@event^0,c
  2272  002078  EC1C  F041         	call	_sm_send_event	;wreg free
  2273                           
  2274                           ;sm_Main_MC50.c: 82:     switch((sm_state_Main_t) psm->current_state)
  2275  00207C  D1F8               	goto	l23072
  2276  00207E                     l22796:
  2277                           
  2278                           ; BSR set to: 0
  2279                           ;sm_Main_MC50.c: 85:         {;sm_Main_MC50.c: 86:             if (button_struct.current
      +                          ==0 && button_struct.timer>((1000/50)*5))
  2280  00207E  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  2281  002080  A4D8               	btfss	status,2,c
  2282  002082  D016               	goto	l22808
  2283                           
  2284                           ; BSR set to: 0
  2285  002084  0E64               	movlw	100
  2286  002086  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2287  002088  D013               	goto	l22808
  2288                           
  2289                           ; BSR set to: 0
  2290                           ;sm_Main_MC50.c: 87:             {;sm_Main_MC50.c: 88:                 load_New_Menu(E_M
      +                          enu);
  2291  00208A  0E01               	movlw	1
  2292  00208C  EC74  F01E         	call	_load_New_Menu
  2293  002090                     l22802:
  2294                           
  2295                           ;sm_Main_MC50.c: 89:                 sm_send_event(&main_stateMachine, ev_goto_MenuConfi
      +                          g);
  2296  002090  0EED               	movlw	low _main_stateMachine
  2297  002092  6E12               	movwf	sm_send_event@psm^0,c
  2298  002094  0E01               	movlw	high _main_stateMachine
  2299  002096  6E13               	movwf	(sm_send_event@psm+1)^0,c
  2300  002098  0E00               	movlw	0
  2301  00209A  6E15               	movwf	(sm_send_event@event+1)^0,c
  2302  00209C  0E06               	movlw	6
  2303  00209E  6E14               	movwf	sm_send_event@event^0,c
  2304  0020A0  EC1C  F041         	call	_sm_send_event	;wreg free
  2305                           
  2306                           ;sm_Main_MC50.c: 90:                 button_struct.processed=1;
  2307  0020A4  0E01               	movlw	1
  2308  0020A6  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  2309                           
  2310                           ;sm_Main_MC50.c: 91:                 temp=0;
  2311  0020A8  0E00               	movlw	0
  2312  0020AA  0100               	movlb	0	; () banked
  2313  0020AC  6F80               	movwf	_temp& (0+255),b
  2314                           
  2315                           ;sm_Main_MC50.c: 92:             }
  2316  0020AE  0012               	return	
  2317  0020B0                     l22808:
  2318                           
  2319                           ; BSR set to: 0
  2320  0020B0  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  2321  0020B2  A4D8               	btfss	status,2,c
  2322  0020B4  D00B               	goto	l22816
  2323                           
  2324                           ; BSR set to: 0
  2325  0020B6  0E14               	movlw	20
  2326  0020B8  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2327  0020BA  D008               	goto	l22816
  2328                           
  2329                           ; BSR set to: 0
  2330                           ;sm_Main_MC50.c: 94:             {;sm_Main_MC50.c: 97:                 SetSegmentValueMa
      +                          in(dP,d0);
  2331  0020BC  0E00               	movlw	0
  2332  0020BE  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  2333  0020C0  0E10               	movlw	16
  2334  0020C2  ECD4  F047         	call	_SetSegmentValueMain
  2335                           
  2336                           ; BSR set to: 0
  2337                           ;sm_Main_MC50.c: 98:                 temp=1;
  2338  0020C6  0E01               	movlw	1
  2339  0020C8  6F80               	movwf	_temp& (0+255),b
  2340                           
  2341                           ;sm_Main_MC50.c: 99:             }
  2342  0020CA  0012               	return	
  2343  0020CC                     l22816:
  2344                           
  2345                           ; BSR set to: 0
  2346  0020CC  0580               	decf	_temp& (0+255),w,b
  2347  0020CE  A4D8               	btfss	status,2,c
  2348  0020D0  D004               	goto	l22826
  2349                           
  2350                           ; BSR set to: 0
  2351                           ;sm_Main_MC50.c: 101:             {;sm_Main_MC50.c: 102:                 load_New_Menu(P
      +                          _Menu);
  2352  0020D2  0E00               	movlw	0
  2353  0020D4  EC74  F01E         	call	_load_New_Menu
  2354  0020D8  D7DB               	goto	l22802
  2355  0020DA                     l22826:
  2356                           
  2357                           ; BSR set to: 0
  2358  0020DA  0E27               	movlw	39
  2359  0020DC  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  2360  0020DE  A4D8               	btfss	status,2,c
  2361  0020E0  D007               	goto	l22838
  2362                           
  2363                           ; BSR set to: 0
  2364  0020E2  0E78               	movlw	120
  2365  0020E4  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2366  0020E6  D004               	goto	l22838
  2367                           
  2368                           ; BSR set to: 0
  2369                           ;sm_Main_MC50.c: 108:             {;sm_Main_MC50.c: 110:                 load_New_Menu(D
      +                          el_Menu);
  2370  0020E8  0E0D               	movlw	13
  2371  0020EA  EC74  F01E         	call	_load_New_Menu
  2372  0020EE  D7D0               	goto	l22802
  2373  0020F0                     l22838:
  2374                           
  2375                           ; BSR set to: 0
  2376  0020F0  0E27               	movlw	39
  2377  0020F2  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  2378  0020F4  A4D8               	btfss	status,2,c
  2379  0020F6  D00B               	goto	l22846
  2380                           
  2381                           ; BSR set to: 0
  2382  0020F8  0E14               	movlw	20
  2383  0020FA  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2384  0020FC  D008               	goto	l22846
  2385                           
  2386                           ; BSR set to: 0
  2387                           ;sm_Main_MC50.c: 116:             {;sm_Main_MC50.c: 118:                 SetSegmentValue
      +                          Main(d5,dU);
  2388  0020FE  0E13               	movlw	19
  2389  002100  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  2390  002102  0E05               	movlw	5
  2391  002104  ECD4  F047         	call	_SetSegmentValueMain
  2392                           
  2393                           ; BSR set to: 0
  2394                           ;sm_Main_MC50.c: 119:                 temp=2;
  2395  002108  0E02               	movlw	2
  2396  00210A  6F80               	movwf	_temp& (0+255),b
  2397                           
  2398                           ;sm_Main_MC50.c: 120:             }
  2399  00210C  0012               	return	
  2400  00210E                     l22846:
  2401                           
  2402                           ; BSR set to: 0
  2403  00210E  0E02               	movlw	2
  2404  002110  1980               	xorwf	_temp& (0+255),w,b
  2405  002112  A4D8               	btfss	status,2,c
  2406  002114  D004               	goto	l22856
  2407                           
  2408                           ; BSR set to: 0
  2409                           ;sm_Main_MC50.c: 122:             {;sm_Main_MC50.c: 123:                 load_New_Menu(S
      +                          _Menu);
  2410  002116  0E0C               	movlw	12
  2411  002118  EC74  F01E         	call	_load_New_Menu
  2412  00211C  D7B9               	goto	l22802
  2413  00211E                     l22856:
  2414                           
  2415                           ; BSR set to: 0
  2416  00211E  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  2417  002120  A4D8               	btfss	status,2,c
  2418  002122  D009               	goto	l22862
  2419                           
  2420                           ; BSR set to: 0
  2421  002124  0101               	movlb	1	; () banked
  2422  002126  5103               	movf	(_var_sys+3)& (0+255),w,b	;volatile
  2423  002128  A4D8               	btfss	status,2,c
  2424  00212A  D005               	goto	l22862
  2425                           
  2426                           ; BSR set to: 1
  2427                           ;sm_Main_MC50.c: 129:             {;sm_Main_MC50.c: 130:                 var_sys.StartFr
      +                          omButton=YES;
  2428  00212C  0E01               	movlw	1
  2429  00212E  6F09               	movwf	(_var_sys+9)& (0+255),b	;volatile
  2430                           
  2431                           ;sm_Main_MC50.c: 131:                 var_sys.StateMotor=InClose;
  2432  002130  0E03               	movlw	3
  2433  002132  6F00               	movwf	_var_sys& (0+255),b	;volatile
  2434                           
  2435                           ;sm_Main_MC50.c: 132:             }
  2436  002134  0012               	return	
  2437  002136                     l22862:
  2438  002136  0E17               	movlw	23
  2439  002138  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  2440  00213A  A4D8               	btfss	status,2,c
  2441  00213C  D009               	goto	l22868
  2442  00213E  0101               	movlb	1	; () banked
  2443  002140  5104               	movf	(_var_sys+4)& (0+255),w,b	;volatile
  2444  002142  A4D8               	btfss	status,2,c
  2445  002144  D005               	goto	l22868
  2446                           
  2447                           ; BSR set to: 1
  2448                           ;sm_Main_MC50.c: 134:             {;sm_Main_MC50.c: 135:                 var_sys.StartFr
      +                          omButton=YES;
  2449  002146  0E01               	movlw	1
  2450  002148  6F09               	movwf	(_var_sys+9)& (0+255),b	;volatile
  2451                           
  2452                           ;sm_Main_MC50.c: 136:                 var_sys.StateMotor=InOpenFull;
  2453  00214A  0E01               	movlw	1
  2454  00214C  6F00               	movwf	_var_sys& (0+255),b	;volatile
  2455                           
  2456                           ;sm_Main_MC50.c: 137:             }
  2457  00214E  0012               	return	
  2458  002150                     l22868:
  2459  002150  0101               	movlb	1	; () banked
  2460  002152  0509               	decf	(_var_sys+9)& (0+255),w,b	;volatile
  2461  002154  A4D8               	btfss	status,2,c
  2462  002156  D005               	goto	l22872
  2463                           
  2464                           ; BSR set to: 1
  2465                           ;sm_Main_MC50.c: 139:             {;sm_Main_MC50.c: 140:                 var_sys.StartFr
      +                          omButton=NO;
  2466  002158  0E00               	movlw	0
  2467  00215A  6F09               	movwf	(_var_sys+9)& (0+255),b	;volatile
  2468                           
  2469                           ;sm_Main_MC50.c: 141:                 var_sys.StateMotor = Stopped;
  2470  00215C  0E00               	movlw	0
  2471  00215E  6F00               	movwf	_var_sys& (0+255),b	;volatile
  2472                           
  2473                           ;sm_Main_MC50.c: 142:             }
  2474  002160  0012               	return	
  2475  002162                     l22872:
  2476                           
  2477                           ; BSR set to: 1
  2478  002162  0E06               	movlw	6
  2479  002164  183B               	xorwf	_rfCMD^0,w,c	;volatile
  2480  002166  B4D8               	btfsc	status,2,c
  2481  002168  D004               	goto	u28000
  2482                           
  2483                           ; BSR set to: 1
  2484  00216A  0E05               	movlw	5
  2485  00216C  183B               	xorwf	_rfCMD^0,w,c	;volatile
  2486  00216E  A4D8               	btfss	status,2,c
  2487  002170  D015               	goto	l22886
  2488  002172                     u28000:
  2489                           
  2490                           ; BSR set to: 1
  2491  002172  0E63               	movlw	99
  2492  002174  6444               	cpfsgt	(_rfCMD+9)^0,c	;volatile
  2493  002176  D012               	goto	l22886
  2494                           
  2495                           ; BSR set to: 1
  2496                           ;sm_Main_MC50.c: 144:             {;sm_Main_MC50.c: 145:                 load_New_Menu(S
      +                          _Menu);
  2497  002178  0E0C               	movlw	12
  2498  00217A  EC74  F01E         	call	_load_New_Menu
  2499                           
  2500                           ;sm_Main_MC50.c: 146:                 sm_send_event(&main_stateMachine, ev_goto_MenuConf
      +                          ig);
  2501  00217E  0EED               	movlw	low _main_stateMachine
  2502  002180  6E12               	movwf	sm_send_event@psm^0,c
  2503  002182  0E01               	movlw	high _main_stateMachine
  2504  002184  6E13               	movwf	(sm_send_event@psm+1)^0,c
  2505  002186  0E00               	movlw	0
  2506  002188  6E15               	movwf	(sm_send_event@event+1)^0,c
  2507  00218A  0E06               	movlw	6
  2508  00218C  6E14               	movwf	sm_send_event@event^0,c
  2509  00218E  EC1C  F041         	call	_sm_send_event	;wreg free
  2510                           
  2511                           ;sm_Main_MC50.c: 147:                 var_sys.ProgrammingDistanceIs=rfCMD.currentType;
  2512  002192  C03B  F13B         	movff	_rfCMD,_var_sys+59	;volatile
  2513                           
  2514                           ;sm_Main_MC50.c: 148:                 rfCMD.processed=1;
  2515  002196  0E01               	movlw	1
  2516  002198  6E45               	movwf	(_rfCMD+10)^0,c	;volatile
  2517                           
  2518                           ;sm_Main_MC50.c: 149:             }
  2519  00219A  0012               	return	
  2520  00219C                     l22886:
  2521                           
  2522                           ; BSR set to: 1
  2523  00219C  BFA7               	btfsc	(_ts_system+13)& (0+255),7,b	;volatile
  2524  00219E  D005               	goto	u28020
  2525  0021A0  51A7               	movf	(_ts_system+13)& (0+255),w,b	;volatile
  2526  0021A2  E111               	bnz	l3060
  2527  0021A4  05A6               	decf	(_ts_system+12)& (0+255),w,b	;volatile
  2528  0021A6  B0D8               	btfsc	status,0,c
  2529  0021A8  0012               	return	
  2530  0021AA                     u28020:
  2531                           
  2532                           ; BSR set to: 1
  2533                           ;sm_Main_MC50.c: 151:             {;sm_Main_MC50.c: 152:                 if(var_sys.FimC
      +                          urso_CloseIsEnabled == YES)
  2534  0021AA  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
  2535  0021AC  A4D8               	btfss	status,2,c
  2536  0021AE  D006               	goto	l22892
  2537                           
  2538                           ; BSR set to: 1
  2539                           ;sm_Main_MC50.c: 154:                     {;sm_Main_MC50.c: 156:                        
      +                           SetSegmentValueMain(dF,dC);
  2540  0021B0  0E0C               	movlw	12
  2541  0021B2  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  2542  0021B4  0E0F               	movlw	15
  2543  0021B6  ECD4  F047         	call	_SetSegmentValueMain
  2544                           
  2545                           ;sm_Main_MC50.c: 157:                     }
  2546  0021BA  0012               	return	
  2547  0021BC                     l22892:
  2548                           
  2549                           ; BSR set to: 1
  2550                           ;sm_Main_MC50.c: 160:                 SetSegmentValueMain(dMinus,dMinus);
  2551  0021BC  0E18               	movlw	24
  2552  0021BE  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  2553  0021C0  0E18               	movlw	24
  2554  0021C2  ECD4  F047         	call	_SetSegmentValueMain
  2555  0021C6                     l3060:
  2556                           
  2557                           ; BSR set to: 1
  2558  0021C6  0012               	return	
  2559  0021C8                     l22894:
  2560                           
  2561                           ; BSR set to: 0
  2562                           ;sm_Main_MC50.c: 167:         {;sm_Main_MC50.c: 168:             sm_execute_menuConfigur
      +                          ation(&menuConfiguration_stateMachine);
  2563  0021C8  0EBD               	movlw	low _menuConfiguration_stateMachine
  2564  0021CA  6FE9               	movwf	sm_execute_menuConfiguration@psm& (0+255),b
  2565  0021CC  0E02               	movlw	high _menuConfiguration_stateMachine
  2566  0021CE  6FEA               	movwf	(sm_execute_menuConfiguration@psm+1)& (0+255),b
  2567  0021D0  EC91  F007         	call	_sm_execute_menuConfiguration	;wreg free
  2568                           
  2569                           ;sm_Main_MC50.c: 169:         };sm_Main_MC50.c: 170:         break;
  2570  0021D4  0012               	return	
  2571  0021D6                     l22896:
  2572                           
  2573                           ; BSR set to: 0
  2574                           ;sm_Main_MC50.c: 172:         {;sm_Main_MC50.c: 175:             aux_in_auto_close = NO;
  2575  0021D6  0E00               	movlw	0
  2576  0021D8  0101               	movlb	1	; () banked
  2577  0021DA  6F8B               	movwf	_aux_in_auto_close& (0+255),b
  2578                           
  2579                           ; BSR set to: 1
  2580                           ;sm_Main_MC50.c: 176:             if ( controlGate_stateMachine.current_state == st_Open
      +                          ed )
  2581  0021DC  0E04               	movlw	4
  2582  0021DE  19E2               	xorwf	_controlGate_stateMachine& (0+255),w,b
  2583  0021E0  11E3               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
  2584  0021E2  A4D8               	btfss	status,2,c
  2585  0021E4  D013               	goto	l3083
  2586                           
  2587                           ; BSR set to: 1
  2588                           ;sm_Main_MC50.c: 177:             {;sm_Main_MC50.c: 179:                 if ( var_sys_NV
      +                          M.operationMode == ModoPassoPasso && var_sys.passoAPassoAutoClose == YES )
  2589  0021E6  0100               	movlb	0	; () banked
  2590  0021E8  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
  2591  0021EA  A4D8               	btfss	status,2,c
  2592  0021EC  D007               	goto	l22906
  2593                           
  2594                           ; BSR set to: 0
  2595  0021EE  0101               	movlb	1	; () banked
  2596  0021F0  0550               	decf	(_var_sys+80)& (0+255),w,b	;volatile
  2597  0021F2  A4D8               	btfss	status,2,c
  2598  0021F4  D003               	goto	l22906
  2599  0021F6                     u28060:
  2600                           
  2601                           ; BSR set to: 1
  2602                           ;sm_Main_MC50.c: 180:                 {;sm_Main_MC50.c: 181:                     aux_in_
      +                          auto_close = YES;
  2603  0021F6  0E01               	movlw	1
  2604  0021F8  6F8B               	movwf	_aux_in_auto_close& (0+255),b
  2605                           
  2606                           ;sm_Main_MC50.c: 182:                 }
  2607  0021FA  D008               	goto	l3083
  2608  0021FC                     l22906:
  2609  0021FC  0100               	movlb	0	; () banked
  2610  0021FE  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
  2611  002200  B4D8               	btfsc	status,2,c
  2612  002202  D004               	goto	l3083
  2613                           
  2614                           ; BSR set to: 0
  2615  002204  0101               	movlb	1	; () banked
  2616  002206  5123               	movf	(_var_sys+35)& (0+255),w,b	;volatile
  2617  002208  A4D8               	btfss	status,2,c
  2618  00220A  D7F5               	goto	u28060
  2619  00220C                     l3083:
  2620                           
  2621                           ;sm_Main_MC50.c: 193:             if(var_sys.StateMotor==Stopped && ( (controlGate_state
      +                          Machine.current_state==st_Opened && aux_in_auto_close==NO) || controlGate_stateMachine.c
      +                          urrent_state==st_Closed || controlGate_stateMachine.current_state==st_Idle ) )
  2622  00220C  0101               	movlb	1	; () banked
  2623  00220E  5100               	movf	_var_sys& (0+255),w,b	;volatile
  2624  002210  A4D8               	btfss	status,2,c
  2625  002212  D069               	goto	l3097
  2626                           
  2627                           ; BSR set to: 1
  2628  002214  0E04               	movlw	4
  2629  002216  19E2               	xorwf	_controlGate_stateMachine& (0+255),w,b
  2630  002218  11E3               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
  2631  00221A  A4D8               	btfss	status,2,c
  2632  00221C  D003               	goto	u28110
  2633                           
  2634                           ; BSR set to: 1
  2635  00221E  518B               	movf	_aux_in_auto_close& (0+255),w,b
  2636  002220  B4D8               	btfsc	status,2,c
  2637  002222  D008               	goto	u28130
  2638  002224                     u28110:
  2639                           
  2640                           ; BSR set to: 1
  2641  002224  05E2               	decf	_controlGate_stateMachine& (0+255),w,b
  2642  002226  11E3               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
  2643  002228  B4D8               	btfsc	status,2,c
  2644  00222A  D004               	goto	u28130
  2645                           
  2646                           ; BSR set to: 1
  2647  00222C  51E2               	movf	_controlGate_stateMachine& (0+255),w,b
  2648  00222E  11E3               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
  2649  002230  A4D8               	btfss	status,2,c
  2650  002232  D059               	goto	l3097
  2651  002234                     u28130:
  2652                           
  2653                           ; BSR set to: 1
  2654                           ;sm_Main_MC50.c: 194:             {;sm_Main_MC50.c: 195:                 if (button_stru
      +                          ct.current==0 && button_struct.timer>((1000/50)*5))
  2655  002234  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  2656  002236  A4D8               	btfss	status,2,c
  2657  002238  D015               	goto	l22934
  2658                           
  2659                           ; BSR set to: 1
  2660  00223A  0E64               	movlw	100
  2661  00223C  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2662  00223E  D012               	goto	l22934
  2663                           
  2664                           ; BSR set to: 1
  2665                           ;sm_Main_MC50.c: 196:                 {;sm_Main_MC50.c: 197:                     load_Ne
      +                          w_Menu(E_Menu);
  2666  002240  0E01               	movlw	1
  2667  002242  EC74  F01E         	call	_load_New_Menu
  2668  002246                     l22928:
  2669                           
  2670                           ;sm_Main_MC50.c: 198:                     sm_send_event(&main_stateMachine, ev_goto_Menu
      +                          Config);
  2671  002246  0EED               	movlw	low _main_stateMachine
  2672  002248  6E12               	movwf	sm_send_event@psm^0,c
  2673  00224A  0E01               	movlw	high _main_stateMachine
  2674  00224C  6E13               	movwf	(sm_send_event@psm+1)^0,c
  2675  00224E  0E00               	movlw	0
  2676  002250  6E15               	movwf	(sm_send_event@event+1)^0,c
  2677  002252  0E06               	movlw	6
  2678  002254  6E14               	movwf	sm_send_event@event^0,c
  2679  002256  EC1C  F041         	call	_sm_send_event	;wreg free
  2680                           
  2681                           ;sm_Main_MC50.c: 199:                     button_struct.processed=1;
  2682  00225A  0E01               	movlw	1
  2683  00225C  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  2684                           
  2685                           ;sm_Main_MC50.c: 200:                     temp=0;
  2686  00225E  0E00               	movlw	0
  2687  002260  0100               	movlb	0	; () banked
  2688  002262  D037               	goto	L4
  2689  002264                     l22934:
  2690                           
  2691                           ; BSR set to: 1
  2692  002264  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  2693  002266  A4D8               	btfss	status,2,c
  2694  002268  D00A               	goto	l22942
  2695                           
  2696                           ; BSR set to: 1
  2697  00226A  0E14               	movlw	20
  2698  00226C  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2699  00226E  D007               	goto	l22942
  2700                           
  2701                           ; BSR set to: 1
  2702                           ;sm_Main_MC50.c: 203:                 {;sm_Main_MC50.c: 205:                     SetSegm
      +                          entValueMain(dP,d0);
  2703  002270  0E00               	movlw	0
  2704  002272  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  2705  002274  0E10               	movlw	16
  2706  002276  ECD4  F047         	call	_SetSegmentValueMain
  2707                           
  2708                           ; BSR set to: 0
  2709                           ;sm_Main_MC50.c: 206:                     temp=1;
  2710  00227A  0E01               	movlw	1
  2711  00227C  D02A               	goto	L4
  2712  00227E                     l22942:
  2713                           
  2714                           ; BSR set to: 1
  2715  00227E  0100               	movlb	0	; () banked
  2716  002280  0580               	decf	_temp& (0+255),w,b
  2717  002282  A4D8               	btfss	status,2,c
  2718  002284  D00E               	goto	l22956
  2719                           
  2720                           ; BSR set to: 0
  2721                           ;sm_Main_MC50.c: 209:                 {;sm_Main_MC50.c: 210:                     load_Ne
      +                          w_Menu(P_Menu);
  2722  002286  0E00               	movlw	0
  2723  002288  EC74  F01E         	call	_load_New_Menu
  2724                           
  2725                           ;sm_Main_MC50.c: 212:                     button_struct.processed=1;
  2726  00228C  0E01               	movlw	1
  2727  00228E  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  2728                           
  2729                           ;sm_Main_MC50.c: 213:                     temp=0;
  2730  002290  0E00               	movlw	0
  2731  002292  0100               	movlb	0	; () banked
  2732  002294  6F80               	movwf	_temp& (0+255),b
  2733                           
  2734                           ; BSR set to: 0
  2735                           ;sm_Main_MC50.c: 214:                     main_stateMachine.current_state = st_MenuConfi
      +                          guration;
  2736  002296  0E00               	movlw	0
  2737  002298  0101               	movlb	1	; () banked
  2738  00229A  6FEE               	movwf	(_main_stateMachine+1)& (0+255),b
  2739  00229C  0E01               	movlw	1
  2740  00229E  6FED               	movwf	_main_stateMachine& (0+255),b
  2741  0022A0  0012               	return	
  2742  0022A2                     l22956:
  2743                           
  2744                           ; BSR set to: 0
  2745  0022A2  0E27               	movlw	39
  2746  0022A4  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  2747  0022A6  A4D8               	btfss	status,2,c
  2748  0022A8  D007               	goto	l22968
  2749                           
  2750                           ; BSR set to: 0
  2751  0022AA  0E78               	movlw	120
  2752  0022AC  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2753  0022AE  D004               	goto	l22968
  2754                           
  2755                           ; BSR set to: 0
  2756                           ;sm_Main_MC50.c: 218:             {;sm_Main_MC50.c: 220:                 load_New_Menu(D
      +                          el_Menu);
  2757  0022B0  0E0D               	movlw	13
  2758  0022B2  EC74  F01E         	call	_load_New_Menu
  2759  0022B6  D7C7               	goto	l22928
  2760  0022B8                     l22968:
  2761                           
  2762                           ; BSR set to: 0
  2763  0022B8  0E27               	movlw	39
  2764  0022BA  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  2765  0022BC  A4D8               	btfss	status,2,c
  2766  0022BE  D00B               	goto	l22976
  2767                           
  2768                           ; BSR set to: 0
  2769  0022C0  0E14               	movlw	20
  2770  0022C2  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2771  0022C4  D008               	goto	l22976
  2772                           
  2773                           ; BSR set to: 0
  2774                           ;sm_Main_MC50.c: 226:             {;sm_Main_MC50.c: 228:                 SetSegmentValue
      +                          Main(d5,dU);
  2775  0022C6  0E13               	movlw	19
  2776  0022C8  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  2777  0022CA  0E05               	movlw	5
  2778  0022CC  ECD4  F047         	call	_SetSegmentValueMain
  2779                           
  2780                           ; BSR set to: 0
  2781                           ;sm_Main_MC50.c: 229:                 temp=2;
  2782  0022D0  0E02               	movlw	2
  2783  0022D2                     L4:
  2784  0022D2  6F80               	movwf	_temp& (0+255),b
  2785                           
  2786                           ;sm_Main_MC50.c: 230:             }
  2787  0022D4  D008               	goto	l3097
  2788  0022D6                     l22976:
  2789                           
  2790                           ; BSR set to: 0
  2791  0022D6  0E02               	movlw	2
  2792  0022D8  1980               	xorwf	_temp& (0+255),w,b
  2793  0022DA  A4D8               	btfss	status,2,c
  2794  0022DC  D004               	goto	l3097
  2795                           
  2796                           ; BSR set to: 0
  2797                           ;sm_Main_MC50.c: 232:             {;sm_Main_MC50.c: 233:                 load_New_Menu(S
      +                          _Menu);
  2798  0022DE  0E0C               	movlw	12
  2799  0022E0  EC74  F01E         	call	_load_New_Menu
  2800  0022E4  D6D5               	goto	l22802
  2801  0022E6                     l3097:
  2802                           
  2803                           ;sm_Main_MC50.c: 243:             if( ts_system.timeSinalizationDigit<=0 && (button_stru
      +                          ct.current!=0 && button_struct.current!=0x27) )
  2804                           
  2805                           ; BSR set to: 0
  2806  0022E6  0101               	movlb	1	; () banked
  2807  0022E8  BFA7               	btfsc	(_ts_system+13)& (0+255),7,b	;volatile
  2808  0022EA  D005               	goto	u28240
  2809  0022EC  51A7               	movf	(_ts_system+13)& (0+255),w,b	;volatile
  2810  0022EE  E102               	bnz	u28241
  2811  0022F0  05A6               	decf	(_ts_system+12)& (0+255),w,b	;volatile
  2812  0022F2  B0D8               	btfsc	status,0,c
  2813  0022F4                     u28241:
  2814  0022F4  0012               	return	
  2815  0022F6                     u28240:
  2816                           
  2817                           ; BSR set to: 1
  2818  0022F6  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  2819  0022F8  B4D8               	btfsc	status,2,c
  2820  0022FA  0012               	return	
  2821                           
  2822                           ; BSR set to: 1
  2823  0022FC  0E27               	movlw	39
  2824  0022FE  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  2825  002300  B4D8               	btfsc	status,2,c
  2826  002302  0012               	return	
  2827                           
  2828                           ; BSR set to: 1
  2829                           ;sm_Main_MC50.c: 244:             {;sm_Main_MC50.c: 245:                 if(var_sys.Stat
      +                          eMotor==InClose )
  2830  002304  0E03               	movlw	3
  2831  002306  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
  2832  002308  A4D8               	btfss	status,2,c
  2833  00230A  D011               	goto	l23002
  2834                           
  2835                           ; BSR set to: 1
  2836                           ;sm_Main_MC50.c: 246:                 {;sm_Main_MC50.c: 248:                    SetSegme
      +                          ntValueIntermitentMain(dC,dL,( 500/50));
  2837  00230C  0E12               	movlw	18
  2838  00230E  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  2839  002310  0E00               	movlw	0
  2840  002312  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  2841  002314  0E0A               	movlw	10
  2842  002316  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  2843  002318  0E0C               	movlw	12
  2844  00231A  EC70  F048         	call	_SetSegmentValueIntermitentMain
  2845  00231E                     l22998:
  2846                           
  2847                           ;sm_Main_MC50.c: 249:                    ts_system.timeSinalizationDigit=( 200/50);
  2848  00231E  0E00               	movlw	0
  2849  002320  0101               	movlb	1	; () banked
  2850  002322  6FA7               	movwf	(_ts_system+13)& (0+255),b	;volatile
  2851  002324  0E04               	movlw	4
  2852  002326  6FA6               	movwf	(_ts_system+12)& (0+255),b	;volatile
  2853                           
  2854                           ; BSR set to: 1
  2855                           ;sm_Main_MC50.c: 251:                     var_sys.showAP = NO;
  2856  002328  0E00               	movlw	0
  2857  00232A  6F4F               	movwf	(_var_sys+79)& (0+255),b	;volatile
  2858                           
  2859                           ;sm_Main_MC50.c: 252:                 }
  2860  00232C  0012               	return	
  2861  00232E                     l23002:
  2862                           
  2863                           ; BSR set to: 1
  2864  00232E  0E02               	movlw	2
  2865  002330  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
  2866  002332  B4D8               	btfsc	status,2,c
  2867  002334  D003               	goto	u28290
  2868                           
  2869                           ; BSR set to: 1
  2870  002336  0500               	decf	_var_sys& (0+255),w,b	;volatile
  2871  002338  A4D8               	btfss	status,2,c
  2872  00233A  D00A               	goto	l23012
  2873  00233C                     u28290:
  2874                           
  2875                           ; BSR set to: 1
  2876                           ;sm_Main_MC50.c: 254:                 {;sm_Main_MC50.c: 256:                     SetSegm
      +                          entValueIntermitentMain(d0,dP,( 500/50));
  2877  00233C  0E10               	movlw	16
  2878  00233E  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  2879  002340  0E00               	movlw	0
  2880  002342  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  2881  002344  0E0A               	movlw	10
  2882  002346  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  2883  002348  0E00               	movlw	0
  2884  00234A  EC70  F048         	call	_SetSegmentValueIntermitentMain
  2885  00234E  D7E7               	goto	l22998
  2886  002350                     l23012:
  2887                           
  2888                           ; BSR set to: 1
  2889  002350  5100               	movf	_var_sys& (0+255),w,b	;volatile
  2890  002352  A4D8               	btfss	status,2,c
  2891  002354  D00F               	goto	l23018
  2892                           
  2893                           ; BSR set to: 1
  2894  002356  05E2               	decf	_controlGate_stateMachine& (0+255),w,b
  2895  002358  11E3               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
  2896  00235A  A4D8               	btfss	status,2,c
  2897  00235C  D00B               	goto	l23018
  2898                           
  2899                           ; BSR set to: 1
  2900                           ;sm_Main_MC50.c: 262:                 {;sm_Main_MC50.c: 263:                     sm_send
      +                          _event(&main_stateMachine, ev_goto_StandBy);
  2901  00235E  0EED               	movlw	low _main_stateMachine
  2902  002360  6E12               	movwf	sm_send_event@psm^0,c
  2903  002362  0E01               	movlw	high _main_stateMachine
  2904  002364  6E13               	movwf	(sm_send_event@psm+1)^0,c
  2905  002366  0E00               	movlw	0
  2906  002368  6E15               	movwf	(sm_send_event@event+1)^0,c
  2907  00236A  0E07               	movlw	7
  2908  00236C  6E14               	movwf	sm_send_event@event^0,c
  2909  00236E  EC1C  F041         	call	_sm_send_event	;wreg free
  2910                           
  2911                           ;sm_Main_MC50.c: 264:                 }
  2912  002372  0012               	return	
  2913  002374                     l23018:
  2914                           
  2915                           ; BSR set to: 1
  2916  002374  5100               	movf	_var_sys& (0+255),w,b	;volatile
  2917  002376  A4D8               	btfss	status,2,c
  2918  002378  D074               	goto	l23068
  2919                           
  2920                           ; BSR set to: 1
  2921  00237A  0E04               	movlw	4
  2922  00237C  19E2               	xorwf	_controlGate_stateMachine& (0+255),w,b
  2923  00237E  11E3               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
  2924  002380  A4D8               	btfss	status,2,c
  2925  002382  D06F               	goto	l23068
  2926                           
  2927                           ; BSR set to: 1
  2928                           ;sm_Main_MC50.c: 266:                 {;sm_Main_MC50.c: 268:                     if
  2929  002384  0100               	movlb	0	; () banked
  2930  002386  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
  2931  002388  B4D8               	btfsc	status,2,c
  2932  00238A  D00B               	goto	u28370
  2933                           
  2934                           ; BSR set to: 0
  2935  00238C  0101               	movlb	1	; () banked
  2936  00238E  5123               	movf	(_var_sys+35)& (0+255),w,b	;volatile
  2937  002390  B4D8               	btfsc	status,2,c
  2938  002392  D007               	goto	u28370
  2939                           
  2940                           ; BSR set to: 1
  2941  002394  050B               	decf	(_var_sys+11)& (0+255),w,b	;volatile
  2942  002396  B4D8               	btfsc	status,2,c
  2943  002398  D013               	goto	u28410
  2944                           
  2945                           ; BSR set to: 1
  2946  00239A  0E03               	movlw	3
  2947  00239C  190B               	xorwf	(_var_sys+11)& (0+255),w,b	;volatile
  2948  00239E  B4D8               	btfsc	status,2,c
  2949  0023A0  D00F               	goto	u28410
  2950  0023A2                     u28370:
  2951  0023A2  0100               	movlb	0	; () banked
  2952  0023A4  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
  2953  0023A6  A4D8               	btfss	status,2,c
  2954  0023A8  D026               	goto	l23046
  2955                           
  2956                           ; BSR set to: 0
  2957  0023AA  0101               	movlb	1	; () banked
  2958  0023AC  0550               	decf	(_var_sys+80)& (0+255),w,b	;volatile
  2959  0023AE  A4D8               	btfss	status,2,c
  2960  0023B0  D022               	goto	l23046
  2961                           
  2962                           ; BSR set to: 1
  2963  0023B2  0E02               	movlw	2
  2964  0023B4  190B               	xorwf	(_var_sys+11)& (0+255),w,b	;volatile
  2965  0023B6  B4D8               	btfsc	status,2,c
  2966  0023B8  D01E               	goto	l23046
  2967                           
  2968                           ; BSR set to: 1
  2969  0023BA  5123               	movf	(_var_sys+35)& (0+255),w,b	;volatile
  2970  0023BC  B4D8               	btfsc	status,2,c
  2971  0023BE  D01B               	goto	l23046
  2972  0023C0                     u28410:
  2973                           
  2974                           ; BSR set to: 1
  2975                           ;sm_Main_MC50.c: 273:                     {;sm_Main_MC50.c: 274:                        
      +                           ts_system.timeSinalizationDigit=( 500/50);
  2976  0023C0  0E00               	movlw	0
  2977  0023C2  6FA7               	movwf	(_ts_system+13)& (0+255),b	;volatile
  2978  0023C4  0E0A               	movlw	10
  2979  0023C6  6FA6               	movwf	(_ts_system+12)& (0+255),b	;volatile
  2980                           
  2981                           ; BSR set to: 1
  2982                           ;sm_Main_MC50.c: 279:                         if ( var_sys.showAP == YES )
  2983  0023C8  054F               	decf	(_var_sys+79)& (0+255),w,b	;volatile
  2984  0023CA  A4D8               	btfss	status,2,c
  2985  0023CC  D00A               	goto	l23044
  2986                           
  2987                           ; BSR set to: 1
  2988                           ;sm_Main_MC50.c: 280:                         {;sm_Main_MC50.c: 281:                    
      +                                   SetSegmentValueIntermitentMain(dA,dP,( 500/50));
  2989  0023CE  0E10               	movlw	16
  2990  0023D0  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  2991  0023D2  0E00               	movlw	0
  2992  0023D4  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  2993  0023D6  0E0A               	movlw	10
  2994  0023D8  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  2995  0023DA  0E0A               	movlw	10
  2996  0023DC  EC70  F048         	call	_SetSegmentValueIntermitentMain
  2997                           
  2998                           ;sm_Main_MC50.c: 282:                         }
  2999  0023E0  0012               	return	
  3000  0023E2                     l23044:
  3001                           
  3002                           ; BSR set to: 1
  3003                           ;sm_Main_MC50.c: 284:                         {;sm_Main_MC50.c: 285:                    
      +                                   SetSegmentValueIntermitentMain(dA,dF,( 500/50));
  3004  0023E2  0E0F               	movlw	15
  3005  0023E4  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  3006  0023E6  0E00               	movlw	0
  3007  0023E8  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  3008  0023EA  0E0A               	movlw	10
  3009  0023EC  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  3010  0023EE  0E0A               	movlw	10
  3011  0023F0  EC70  F048         	call	_SetSegmentValueIntermitentMain
  3012  0023F4  0012               	return	
  3013  0023F6                     l23046:
  3014  0023F6  0100               	movlb	0	; () banked
  3015  0023F8  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
  3016  0023FA  B4D8               	btfsc	status,2,c
  3017  0023FC  D008               	goto	u28450
  3018                           
  3019                           ; BSR set to: 0
  3020  0023FE  0101               	movlb	1	; () banked
  3021  002400  5123               	movf	(_var_sys+35)& (0+255),w,b	;volatile
  3022  002402  B4D8               	btfsc	status,2,c
  3023  002404  D004               	goto	u28450
  3024                           
  3025                           ; BSR set to: 1
  3026  002406  0E02               	movlw	2
  3027  002408  190B               	xorwf	(_var_sys+11)& (0+255),w,b	;volatile
  3028  00240A  B4D8               	btfsc	status,2,c
  3029  00240C  D00C               	goto	u28480
  3030  00240E                     u28450:
  3031  00240E  0100               	movlb	0	; () banked
  3032  002410  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
  3033  002412  A4D8               	btfss	status,2,c
  3034  002414  D016               	goto	l23062
  3035                           
  3036                           ; BSR set to: 0
  3037  002416  0101               	movlb	1	; () banked
  3038  002418  0550               	decf	(_var_sys+80)& (0+255),w,b	;volatile
  3039  00241A  A4D8               	btfss	status,2,c
  3040  00241C  D012               	goto	l23062
  3041                           
  3042                           ; BSR set to: 1
  3043  00241E  0E02               	movlw	2
  3044  002420  190B               	xorwf	(_var_sys+11)& (0+255),w,b	;volatile
  3045  002422  A4D8               	btfss	status,2,c
  3046  002424  D00E               	goto	l23062
  3047  002426                     u28480:
  3048                           
  3049                           ; BSR set to: 1
  3050                           ;sm_Main_MC50.c: 294:                     {;sm_Main_MC50.c: 295:                        
      +                           ts_system.timeSinalizationDigit=( 500/50);
  3051  002426  0E00               	movlw	0
  3052  002428  6FA7               	movwf	(_ts_system+13)& (0+255),b	;volatile
  3053  00242A  0E0A               	movlw	10
  3054  00242C  6FA6               	movwf	(_ts_system+12)& (0+255),b	;volatile
  3055                           
  3056                           ; BSR set to: 1
  3057                           ;sm_Main_MC50.c: 297:                         SetSegmentValueIntermitentMain(dA,dP,( 500
      +                          /50));
  3058  00242E  0E10               	movlw	16
  3059  002430  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  3060  002432  0E00               	movlw	0
  3061  002434  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  3062  002436  0E0A               	movlw	10
  3063  002438  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  3064  00243A  0E0A               	movlw	10
  3065  00243C  EC70  F048         	call	_SetSegmentValueIntermitentMain
  3066                           
  3067                           ;sm_Main_MC50.c: 298:                     }
  3068  002440  0012               	return	
  3069  002442                     l23062:
  3070  002442  0101               	movlb	1	; () banked
  3071  002444  0504               	decf	(_var_sys+4)& (0+255),w,b	;volatile
  3072  002446  A4D8               	btfss	status,2,c
  3073  002448  D006               	goto	l23066
  3074                           
  3075                           ; BSR set to: 1
  3076                           ;sm_Main_MC50.c: 301:                     {;sm_Main_MC50.c: 303:                        
      +                           SetSegmentValueMain(dF,d0);
  3077  00244A  0E00               	movlw	0
  3078  00244C  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3079  00244E  0E0F               	movlw	15
  3080  002450  ECD4  F047         	call	_SetSegmentValueMain
  3081                           
  3082                           ;sm_Main_MC50.c: 304:                     }
  3083  002454  0012               	return	
  3084  002456                     l23066:
  3085                           
  3086                           ; BSR set to: 1
  3087                           ;sm_Main_MC50.c: 306:                     {;sm_Main_MC50.c: 307:                       S
      +                          etSegmentValueMain(dMinus,dMinus);
  3088  002456  0E18               	movlw	24
  3089  002458  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3090  00245A  0E18               	movlw	24
  3091  00245C  ECD4  F047         	call	_SetSegmentValueMain
  3092  002460  0012               	return	
  3093  002462                     l23068:
  3094                           
  3095                           ; BSR set to: 1
  3096                           ;sm_Main_MC50.c: 311:                 {;sm_Main_MC50.c: 313:                     SetSegm
      +                          entValueMain(dMinus,dMinus);
  3097  002462  0E18               	movlw	24
  3098  002464  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3099  002466  0E18               	movlw	24
  3100  002468  ECD4  F047         	call	_SetSegmentValueMain
  3101  00246C  0012               	return	
  3102  00246E                     l23072:
  3103  00246E  C0ED  FFD9         	movff	sm_execute_main@psm,fsr2l
  3104  002472  C0EE  FFDA         	movff	sm_execute_main@psm+1,fsr2h
  3105  002476  50DF               	movf	indf2,w,c
  3106  002478  0100               	movlb	0	; () banked
  3107  00247A  6FEF               	movwf	??_sm_execute_main& (0+255),b
  3108  00247C  6BF0               	clrf	(??_sm_execute_main+1)& (0+255),b
  3109                           
  3110                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3111                           ; Switch size 1, requested type "simple"
  3112                           ; Number of cases is 1, Range of values is 0 to 0
  3113                           ; switch strategies available:
  3114                           ; Name         Instructions Cycles
  3115                           ; simple_byte            4     3 (average)
  3116                           ;	Chosen strategy is simple_byte
  3117  00247E  51F0               	movf	(??_sm_execute_main+1)& (0+255),w,b
  3118  002480  0A00               	xorlw	0	; case 0
  3119  002482  A4D8               	btfss	status,2,c
  3120  002484  0012               	return	
  3121                           
  3122                           ; BSR set to: 0
  3123                           ; Switch size 1, requested type "simple"
  3124                           ; Number of cases is 3, Range of values is 0 to 2
  3125                           ; switch strategies available:
  3126                           ; Name         Instructions Cycles
  3127                           ; simple_byte           10     6 (average)
  3128                           ;	Chosen strategy is simple_byte
  3129  002486  51EF               	movf	??_sm_execute_main& (0+255),w,b
  3130  002488  0A00               	xorlw	0	; case 0
  3131  00248A  B4D8               	btfsc	status,2,c
  3132  00248C  D5F8               	goto	l22796
  3133  00248E  0A01               	xorlw	1	; case 1
  3134  002490  B4D8               	btfsc	status,2,c
  3135  002492  D69A               	goto	l22894
  3136  002494  0A03               	xorlw	3	; case 2
  3137  002496  A4D8               	btfss	status,2,c
  3138  002498  0012               	return	
  3139  00249A  D69D               	goto	l22896
  3140  00249C                     __end_of_sm_execute_main:
  3141                           	callstack 0
  3142                           
  3143 ;; *************** function _sm_execute_menuConfiguration *****************
  3144 ;; Defined at:
  3145 ;;		line 33 in file "sm_MenuConfiguration_MC50.c"
  3146 ;; Parameters:    Size  Location     Type
  3147 ;;  psm             2   17[BANK0 ] PTR struct .
  3148 ;;		 -> menuConfiguration_stateMachine(11), 
  3149 ;; Auto vars:     Size  Location     Type
  3150 ;;		None
  3151 ;; Return value:  Size  Location     Type
  3152 ;;                  1    wreg      void 
  3153 ;; Registers used:
  3154 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3155 ;; Tracked objects:
  3156 ;;		On entry : 3F/0
  3157 ;;		On exit  : 0/0
  3158 ;;		Unchanged: 0/0
  3159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3160 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3161 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3162 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3163 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3164 ;;Total ram usage:        4 bytes
  3165 ;; Hardware stack levels used: 1
  3166 ;; Hardware stack levels required when called: 15
  3167 ;; This function calls:
  3168 ;;		_ClearFlag_rfCMD
  3169 ;;		_ResetDefaultMemory
  3170 ;;		_SaveNVM_VarSystem
  3171 ;;		_SetSegmentValueIntermitentMain
  3172 ;;		_SetSegmentValueMain
  3173 ;;		___lbdiv
  3174 ;;		___lldiv
  3175 ;;		___lmul
  3176 ;;		___lwdiv
  3177 ;;		_controlLearnDigit
  3178 ;;		_controlSaveRemote
  3179 ;;		_controlSelectRemote
  3180 ;;		_load_New_Menu
  3181 ;;		_setValueToEdit
  3182 ;;		_sm_send_event
  3183 ;; This function is called by:
  3184 ;;		_sm_execute_main
  3185 ;; This function uses a non-reentrant model
  3186 ;;
  3187                           
  3188                           	psect	text2
  3189  000F22                     __ptext2:
  3190                           	callstack 0
  3191  000F22                     _sm_execute_menuConfiguration:
  3192                           	callstack 14
  3193                           
  3194                           ; BSR set to: 0
  3195                           ;sm_MenuConfiguration_MC50.c: 36:     switch((sm_state_Menu_t) psm->current_state)
  3196                           
  3197                           ;incstack = 0
  3198  000F22  D0A2               	goto	l22220
  3199  000F24                     l22162:
  3200                           
  3201                           ; BSR set to: 0
  3202                           ;sm_MenuConfiguration_MC50.c: 39:         {;sm_MenuConfiguration_MC50.c: 40:            
      +                           if(psm->last_event==ev_ParameterIsSelected)
  3203  000F24  EE20 F004          	lfsr	2,4
  3204  000F28  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3205  000F2A  26D9               	addwf	fsr2l,f,c
  3206  000F2C  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3207  000F2E  22DA               	addwfc	fsr2h,f,c
  3208  000F30  04DE               	decf	postinc2,w,c
  3209  000F32  10DE               	iorwf	postinc2,w,c
  3210  000F34  A4D8               	btfss	status,2,c
  3211  000F36  D006               	goto	l22166
  3212                           
  3213                           ; BSR set to: 0
  3214                           ;sm_MenuConfiguration_MC50.c: 41:             {;sm_MenuConfiguration_MC50.c: 42:        
      +                                   psm->current_state = st_EditParameter;
  3215  000F38  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3216  000F3C  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3217  000F40  0E01               	movlw	1
  3218  000F42  D04C               	goto	L9
  3219  000F44                     l22166:
  3220                           
  3221                           ; BSR set to: 0
  3222  000F44  EE20 F004          	lfsr	2,4
  3223  000F48  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3224  000F4A  26D9               	addwf	fsr2l,f,c
  3225  000F4C  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3226  000F4E  22DA               	addwfc	fsr2h,f,c
  3227  000F50  0E05               	movlw	5
  3228  000F52  18DE               	xorwf	postinc2,w,c
  3229  000F54  10DE               	iorwf	postinc2,w,c
  3230  000F56  A4D8               	btfss	status,2,c
  3231  000F58  D006               	goto	l22170
  3232                           
  3233                           ; BSR set to: 0
  3234                           ;sm_MenuConfiguration_MC50.c: 45:             {;sm_MenuConfiguration_MC50.c: 46:        
      +                                   psm->current_state = st_Counter;
  3235  000F5A  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3236  000F5E  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3237  000F62  0E03               	movlw	3
  3238  000F64  D03B               	goto	L9
  3239  000F66                     l22170:
  3240                           
  3241                           ; BSR set to: 0
  3242  000F66  EE20 F004          	lfsr	2,4
  3243  000F6A  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3244  000F6C  26D9               	addwf	fsr2l,f,c
  3245  000F6E  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3246  000F70  22DA               	addwfc	fsr2h,f,c
  3247  000F72  0E08               	movlw	8
  3248  000F74  18DE               	xorwf	postinc2,w,c
  3249  000F76  10DE               	iorwf	postinc2,w,c
  3250  000F78  A4D8               	btfss	status,2,c
  3251  000F7A  D006               	goto	l22174
  3252                           
  3253                           ; BSR set to: 0
  3254                           ;sm_MenuConfiguration_MC50.c: 49:             {;sm_MenuConfiguration_MC50.c: 50:        
      +                                   psm->current_state = st_SelectRemote;
  3255  000F7C  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3256  000F80  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3257  000F84  0E04               	movlw	4
  3258  000F86  D02A               	goto	L9
  3259  000F88                     l22174:
  3260                           
  3261                           ; BSR set to: 0
  3262  000F88  EE20 F004          	lfsr	2,4
  3263  000F8C  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3264  000F8E  26D9               	addwf	fsr2l,f,c
  3265  000F90  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3266  000F92  22DA               	addwfc	fsr2h,f,c
  3267  000F94  0E14               	movlw	20
  3268  000F96  18DE               	xorwf	postinc2,w,c
  3269  000F98  10DE               	iorwf	postinc2,w,c
  3270  000F9A  A4D8               	btfss	status,2,c
  3271  000F9C  D087               	goto	l22222
  3272                           
  3273                           ; BSR set to: 0
  3274                           ;sm_MenuConfiguration_MC50.c: 53:             {;sm_MenuConfiguration_MC50.c: 55:        
      +                                   psm->current_state = st_LearningMode;
  3275  000F9E  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3276  000FA2  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3277  000FA6  0E06               	movlw	6
  3278  000FA8  D019               	goto	L9
  3279  000FAA                     l22178:
  3280                           
  3281                           ; BSR set to: 0
  3282                           ;sm_MenuConfiguration_MC50.c: 65:         {;sm_MenuConfiguration_MC50.c: 66:            
      +                           if(psm->last_event==ev_ParameterIsEdited)
  3283  000FAA  EE20 F004          	lfsr	2,4
  3284  000FAE  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3285  000FB0  26D9               	addwf	fsr2l,f,c
  3286  000FB2  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3287  000FB4  22DA               	addwfc	fsr2h,f,c
  3288  000FB6  0E02               	movlw	2
  3289  000FB8  18DE               	xorwf	postinc2,w,c
  3290  000FBA  10DE               	iorwf	postinc2,w,c
  3291  000FBC  A4D8               	btfss	status,2,c
  3292  000FBE  D006               	goto	l22182
  3293                           
  3294                           ; BSR set to: 0
  3295                           ;sm_MenuConfiguration_MC50.c: 67:             {;sm_MenuConfiguration_MC50.c: 68:        
      +                                   psm->current_state = st_SaveParameter;
  3296  000FC0  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3297  000FC4  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3298  000FC8  0E02               	movlw	2
  3299  000FCA  D008               	goto	L9
  3300  000FCC                     l22182:
  3301                           
  3302                           ; BSR set to: 0
  3303  000FCC  EE20 F004          	lfsr	2,4
  3304  000FD0  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3305  000FD2  26D9               	addwf	fsr2l,f,c
  3306  000FD4  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3307  000FD6  22DA               	addwfc	fsr2h,f,c
  3308  000FD8  0E03               	movlw	3
  3309  000FDA  D03B               	goto	L123
  3310  000FDC                     L9:
  3311  000FDC  6EDE               	movwf	postinc2,c
  3312  000FDE  0E00               	movlw	0
  3313  000FE0  6EDD               	movwf	postdec2,c
  3314  000FE2  D064               	goto	l22222
  3315  000FE4                     l22190:
  3316                           
  3317                           ; BSR set to: 0
  3318                           ;sm_MenuConfiguration_MC50.c: 85:         {;sm_MenuConfiguration_MC50.c: 86:            
      +                           if(psm->last_event==ev_ParameterIsSaved)
  3319  000FE4  EE20 F004          	lfsr	2,4
  3320  000FE8  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3321  000FEA  26D9               	addwf	fsr2l,f,c
  3322  000FEC  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3323  000FEE  22DA               	addwfc	fsr2h,f,c
  3324  000FF0  0E04               	movlw	4
  3325  000FF2  18DE               	xorwf	postinc2,w,c
  3326  000FF4  10DE               	iorwf	postinc2,w,c
  3327  000FF6  A4D8               	btfss	status,2,c
  3328  000FF8  D7E9               	goto	l22182
  3329  000FFA  D02F               	goto	u26730
  3330  000FFC                     l22198:
  3331                           
  3332                           ; BSR set to: 0
  3333                           ;sm_MenuConfiguration_MC50.c: 97:         {;sm_MenuConfiguration_MC50.c: 98:            
      +                           if(psm->last_event==ev_addRemotes)
  3334  000FFC  EE20 F004          	lfsr	2,4
  3335  001000  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3336  001002  26D9               	addwf	fsr2l,f,c
  3337  001004  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3338  001006  22DA               	addwfc	fsr2h,f,c
  3339  001008  0E08               	movlw	8
  3340  00100A  18DE               	xorwf	postinc2,w,c
  3341  00100C  10DE               	iorwf	postinc2,w,c
  3342  00100E  A4D8               	btfss	status,2,c
  3343  001010  D7DD               	goto	l22182
  3344                           
  3345                           ; BSR set to: 0
  3346                           ;sm_MenuConfiguration_MC50.c: 99:             {;sm_MenuConfiguration_MC50.c: 100:       
      +                                    psm->current_state = st_SaveRemotes;
  3347  001012  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3348  001016  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3349  00101A  0E05               	movlw	5
  3350  00101C  D7DF               	goto	L9
  3351  00101E                     l22206:
  3352                           
  3353                           ; BSR set to: 0
  3354                           ;sm_MenuConfiguration_MC50.c: 109:         {;sm_MenuConfiguration_MC50.c: 110:          
      +                             if(psm->last_event==ev_NextRemote)
  3355  00101E  EE20 F004          	lfsr	2,4
  3356  001022  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3357  001024  26D9               	addwf	fsr2l,f,c
  3358  001026  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3359  001028  22DA               	addwfc	fsr2h,f,c
  3360  00102A  0E09               	movlw	9
  3361  00102C  18DE               	xorwf	postinc2,w,c
  3362  00102E  10DE               	iorwf	postinc2,w,c
  3363  001030  A4D8               	btfss	status,2,c
  3364  001032  D008               	goto	l22214
  3365                           
  3366                           ; BSR set to: 0
  3367                           ;sm_MenuConfiguration_MC50.c: 111:             {;sm_MenuConfiguration_MC50.c: 112:      
      +                                     psm->current_state = st_SelectRemote;
  3368  001034  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3369  001038  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3370  00103C  0E04               	movlw	4
  3371  00103E  6EDE               	movwf	postinc2,c
  3372  001040  0E00               	movlw	0
  3373  001042  6EDD               	movwf	postdec2,c
  3374  001044                     l22214:
  3375                           
  3376                           ; BSR set to: 0
  3377                           ;sm_MenuConfiguration_MC50.c: 121:         {;sm_MenuConfiguration_MC50.c: 122:          
      +                             if(psm->last_event==ev_ParameterIsSaved)
  3378  001044  EE20 F004          	lfsr	2,4
  3379  001048  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3380  00104A  26D9               	addwf	fsr2l,f,c
  3381  00104C  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3382  00104E  22DA               	addwfc	fsr2h,f,c
  3383  001050  0E04               	movlw	4
  3384  001052                     L123:
  3385  001052  18DE               	xorwf	postinc2,w,c
  3386  001054  10DE               	iorwf	postinc2,w,c
  3387  001056  A4D8               	btfss	status,2,c
  3388  001058  D029               	goto	l22222
  3389  00105A                     u26730:
  3390                           
  3391                           ; BSR set to: 0
  3392                           ;sm_MenuConfiguration_MC50.c: 123:             {;sm_MenuConfiguration_MC50.c: 124:      
      +                                     psm->current_state = st_MainMenu;
  3393  00105A  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3394  00105E  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3395  001062  0E00               	movlw	0
  3396  001064  D7BB               	goto	L9
  3397  001066                     l3228:
  3398                           
  3399                           ; BSR set to: 0
  3400  001066  D7FF               	goto	l3228
  3401  001068                     l22220:
  3402                           
  3403                           ; BSR set to: 0
  3404  001068  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3405  00106C  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3406  001070  50DF               	movf	indf2,w,c
  3407  001072  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  3408  001074  6BEC               	clrf	(??_sm_execute_menuConfiguration+1)& (0+255),b
  3409                           
  3410                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3411                           ; Switch size 1, requested type "simple"
  3412                           ; Number of cases is 1, Range of values is 0 to 0
  3413                           ; switch strategies available:
  3414                           ; Name         Instructions Cycles
  3415                           ; simple_byte            4     3 (average)
  3416                           ;	Chosen strategy is simple_byte
  3417  001076  51EC               	movf	(??_sm_execute_menuConfiguration+1)& (0+255),w,b
  3418  001078  0A00               	xorlw	0	; case 0
  3419  00107A  A4D8               	btfss	status,2,c
  3420  00107C  D7F4               	goto	l3228
  3421                           
  3422                           ; BSR set to: 0
  3423                           ; Switch size 1, requested type "simple"
  3424                           ; Number of cases is 7, Range of values is 0 to 6
  3425                           ; switch strategies available:
  3426                           ; Name         Instructions Cycles
  3427                           ; simple_byte           22    12 (average)
  3428                           ;	Chosen strategy is simple_byte
  3429  00107E  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  3430  001080  0A00               	xorlw	0	; case 0
  3431  001082  B4D8               	btfsc	status,2,c
  3432  001084  D74F               	goto	l22162
  3433  001086  0A01               	xorlw	1	; case 1
  3434  001088  B4D8               	btfsc	status,2,c
  3435  00108A  D78F               	goto	l22178
  3436  00108C  0A03               	xorlw	3	; case 2
  3437  00108E  B4D8               	btfsc	status,2,c
  3438  001090  D7D9               	goto	l22214
  3439  001092  0A01               	xorlw	1	; case 3
  3440  001094  B4D8               	btfsc	status,2,c
  3441  001096  D7A6               	goto	l22190
  3442  001098  0A07               	xorlw	7	; case 4
  3443  00109A  B4D8               	btfsc	status,2,c
  3444  00109C  D7AF               	goto	l22198
  3445  00109E  0A01               	xorlw	1	; case 5
  3446  0010A0  B4D8               	btfsc	status,2,c
  3447  0010A2  D7BD               	goto	l22206
  3448  0010A4  0A03               	xorlw	3	; case 6
  3449  0010A6  B4D8               	btfsc	status,2,c
  3450  0010A8  D7CD               	goto	l22214
  3451  0010AA  D7DD               	goto	l3228
  3452  0010AC                     l22222:
  3453                           
  3454                           ; BSR set to: 0
  3455                           ;sm_MenuConfiguration_MC50.c: 137:     sm_send_event(&menuConfiguration_stateMachine, ev
      +                          _NULL);
  3456  0010AC  0EBD               	movlw	low _menuConfiguration_stateMachine
  3457  0010AE  6E12               	movwf	sm_send_event@psm^0,c
  3458  0010B0  0E02               	movlw	high _menuConfiguration_stateMachine
  3459  0010B2  6E13               	movwf	(sm_send_event@psm+1)^0,c
  3460  0010B4  0E00               	movlw	0
  3461  0010B6  6E15               	movwf	(sm_send_event@event+1)^0,c
  3462  0010B8  0E00               	movlw	0
  3463  0010BA  6E14               	movwf	sm_send_event@event^0,c
  3464  0010BC  EC1C  F041         	call	_sm_send_event	;wreg free
  3465                           
  3466                           ;sm_MenuConfiguration_MC50.c: 142:     switch((sm_state_Menu_t) psm->current_state)
  3467  0010C0  D3BF               	goto	l22534
  3468  0010C2                     l22224:
  3469                           
  3470                           ; BSR set to: 0
  3471                           ;sm_MenuConfiguration_MC50.c: 145:         {;sm_MenuConfiguration_MC50.c: 146:          
      +                             if(var_sys.ProgrammingDistanceIs==TypeProgrammingModeFull)
  3472  0010C2  0E06               	movlw	6
  3473  0010C4  0101               	movlb	1	; () banked
  3474  0010C6  193B               	xorwf	(_var_sys+59)& (0+255),w,b	;volatile
  3475  0010C8  A4D8               	btfss	status,2,c
  3476  0010CA  D02F               	goto	l22234
  3477                           
  3478                           ; BSR set to: 1
  3479                           ;sm_MenuConfiguration_MC50.c: 147:             {;sm_MenuConfiguration_MC50.c: 148:      
      +                                     ts_system.timeoutMenu=10*(1000/50);
  3480  0010CC  0E00               	movlw	0
  3481  0010CE  6FA9               	movwf	(_ts_system+15)& (0+255),b	;volatile
  3482  0010D0  0EC8               	movlw	200
  3483  0010D2  6FA8               	movwf	(_ts_system+14)& (0+255),b	;volatile
  3484                           
  3485                           ;sm_MenuConfiguration_MC50.c: 149:                 var_sys.DistanceProgrammingActive=YES
      +                          ;
  3486  0010D4  0E01               	movlw	1
  3487  0010D6  6F40               	movwf	(_var_sys+64)& (0+255),b	;volatile
  3488                           
  3489                           ;sm_MenuConfiguration_MC50.c: 150:                 menu_st.parameterSelected=0;
  3490  0010D8  0E00               	movlw	0
  3491  0010DA  6F68               	movwf	(_menu_st+23)& (0+255),b
  3492                           
  3493                           ; BSR set to: 1
  3494                           ;sm_MenuConfiguration_MC50.c: 151:                 if (setValueToEdit(menu_st.actualMenu
      +                          ,menu_st.parameterSelected)) {
  3495  0010DC  C168  F03A         	movff	_menu_st+23,setValueToEdit@ParameterSelected
  3496  0010E0  5166               	movf	(_menu_st+21)& (0+255),w,b
  3497  0010E2  ECD2  F014         	call	_setValueToEdit
  3498  0010E6  0900               	iorlw	0
  3499  0010E8  B4D8               	btfsc	status,2,c
  3500  0010EA  0012               	return	
  3501                           
  3502                           ; BSR set to: 0
  3503                           ;sm_MenuConfiguration_MC50.c: 153:                      sm_send_event(&menuConfiguration
      +                          _stateMachine, ev_addRemotes);
  3504  0010EC  0EBD               	movlw	low _menuConfiguration_stateMachine
  3505  0010EE  6E12               	movwf	sm_send_event@psm^0,c
  3506  0010F0  0E02               	movlw	high _menuConfiguration_stateMachine
  3507  0010F2  6E13               	movwf	(sm_send_event@psm+1)^0,c
  3508  0010F4  0E00               	movlw	0
  3509  0010F6  6E15               	movwf	(sm_send_event@event+1)^0,c
  3510  0010F8  0E08               	movlw	8
  3511  0010FA  6E14               	movwf	sm_send_event@event^0,c
  3512  0010FC  EC1C  F041         	call	_sm_send_event	;wreg free
  3513                           
  3514                           ;sm_MenuConfiguration_MC50.c: 154:                      SetSegmentValueIntermitentMain(e
      +                          dit_Param.tempValue/10, edit_Param.tempValue-((edit_Param.tempValue/10)*10),(1000/50));
  3515  001100  0E0A               	movlw	10
  3516  001102  6E10               	movwf	___lbdiv@divisor^0,c
  3517  001104  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3518  001106  ECE0  F044         	call	___lbdiv
  3519  00110A  0DF6               	mullw	246
  3520  00110C  50F3               	movf	243,w,c
  3521  00110E  2449               	addwf	(_edit_Param+3)^0,w,c	;volatile
  3522  001110  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  3523  001112  0E00               	movlw	0
  3524  001114  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  3525  001116  0E14               	movlw	20
  3526  001118  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  3527  00111A  0E0A               	movlw	10
  3528  00111C  6E10               	movwf	___lbdiv@divisor^0,c
  3529  00111E  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3530  001120  ECE0  F044         	call	___lbdiv
  3531  001124  EC70  F048         	call	_SetSegmentValueIntermitentMain
  3532  001128  0012               	return	
  3533  00112A                     l22234:
  3534                           
  3535                           ; BSR set to: 1
  3536  00112A  0E05               	movlw	5
  3537  00112C  193B               	xorwf	(_var_sys+59)& (0+255),w,b	;volatile
  3538  00112E  A4D8               	btfss	status,2,c
  3539  001130  D02F               	goto	l22244
  3540                           
  3541                           ; BSR set to: 1
  3542                           ;sm_MenuConfiguration_MC50.c: 158:             {;sm_MenuConfiguration_MC50.c: 159:      
      +                                     ts_system.timeoutMenu=10*(1000/50);
  3543  001132  0E00               	movlw	0
  3544  001134  6FA9               	movwf	(_ts_system+15)& (0+255),b	;volatile
  3545  001136  0EC8               	movlw	200
  3546  001138  6FA8               	movwf	(_ts_system+14)& (0+255),b	;volatile
  3547                           
  3548                           ;sm_MenuConfiguration_MC50.c: 160:                 var_sys.DistanceProgrammingActive=YES
      +                          ;
  3549  00113A  0E01               	movlw	1
  3550  00113C  6F40               	movwf	(_var_sys+64)& (0+255),b	;volatile
  3551                           
  3552                           ;sm_MenuConfiguration_MC50.c: 161:                 menu_st.parameterSelected=1;
  3553  00113E  0E01               	movlw	1
  3554  001140  6F68               	movwf	(_menu_st+23)& (0+255),b
  3555                           
  3556                           ; BSR set to: 1
  3557                           ;sm_MenuConfiguration_MC50.c: 162:                 if (setValueToEdit(menu_st.actualMenu
      +                          ,menu_st.parameterSelected)) {
  3558  001142  C168  F03A         	movff	_menu_st+23,setValueToEdit@ParameterSelected
  3559  001146  5166               	movf	(_menu_st+21)& (0+255),w,b
  3560  001148  ECD2  F014         	call	_setValueToEdit
  3561  00114C  0900               	iorlw	0
  3562  00114E  B4D8               	btfsc	status,2,c
  3563  001150  0012               	return	
  3564                           
  3565                           ; BSR set to: 0
  3566                           ;sm_MenuConfiguration_MC50.c: 164:                      sm_send_event(&menuConfiguration
      +                          _stateMachine, ev_addRemotes);
  3567  001152  0EBD               	movlw	low _menuConfiguration_stateMachine
  3568  001154  6E12               	movwf	sm_send_event@psm^0,c
  3569  001156  0E02               	movlw	high _menuConfiguration_stateMachine
  3570  001158  6E13               	movwf	(sm_send_event@psm+1)^0,c
  3571  00115A  0E00               	movlw	0
  3572  00115C  6E15               	movwf	(sm_send_event@event+1)^0,c
  3573  00115E  0E08               	movlw	8
  3574  001160  6E14               	movwf	sm_send_event@event^0,c
  3575  001162  EC1C  F041         	call	_sm_send_event	;wreg free
  3576                           
  3577                           ;sm_MenuConfiguration_MC50.c: 165:                      SetSegmentValueIntermitentMain(e
      +                          dit_Param.tempValue/10, edit_Param.tempValue-((edit_Param.tempValue/10)*10),(1000/50));
  3578  001166  0E0A               	movlw	10
  3579  001168  6E10               	movwf	___lbdiv@divisor^0,c
  3580  00116A  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3581  00116C  ECE0  F044         	call	___lbdiv
  3582  001170  0DF6               	mullw	246
  3583  001172  50F3               	movf	243,w,c
  3584  001174  2449               	addwf	(_edit_Param+3)^0,w,c	;volatile
  3585  001176  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  3586  001178  0E00               	movlw	0
  3587  00117A  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  3588  00117C  0E14               	movlw	20
  3589  00117E  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  3590  001180  0E0A               	movlw	10
  3591  001182  6E10               	movwf	___lbdiv@divisor^0,c
  3592  001184  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3593  001186  ECE0  F044         	call	___lbdiv
  3594  00118A  EC70  F048         	call	_SetSegmentValueIntermitentMain
  3595                           
  3596                           ; BSR set to: 1
  3597                           ;sm_MenuConfiguration_MC50.c: 167:             }
  3598                           
  3599                           ;sm_MenuConfiguration_MC50.c: 166:                 }
  3600  00118E  0012               	return	
  3601  001190                     l22244:
  3602                           
  3603                           ; BSR set to: 1
  3604  001190  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  3605  001192  A4D8               	btfss	status,2,c
  3606  001194  D023               	goto	l22256
  3607                           
  3608                           ; BSR set to: 1
  3609                           ;sm_MenuConfiguration_MC50.c: 169:             {;sm_MenuConfiguration_MC50.c: 170:      
      +                                     ts_system.timeoutMenu= ((1000/50)*5) ;
  3610  001196  0E00               	movlw	0
  3611  001198  6FA9               	movwf	(_ts_system+15)& (0+255),b	;volatile
  3612  00119A  0E64               	movlw	100
  3613  00119C  6FA8               	movwf	(_ts_system+14)& (0+255),b	;volatile
  3614                           
  3615                           ;sm_MenuConfiguration_MC50.c: 171:                 if(menu_st.parameterSelected==0)
  3616  00119E  5168               	movf	(_menu_st+23)& (0+255),w,b
  3617  0011A0  A4D8               	btfss	status,2,c
  3618  0011A2  D003               	goto	l22250
  3619                           
  3620                           ; BSR set to: 1
  3621                           ;sm_MenuConfiguration_MC50.c: 172:                 {;sm_MenuConfiguration_MC50.c: 173:  
      +                                             menu_st.parameterSelected=menu_st.menuSize-1;
  3622  0011A4  0567               	decf	(_menu_st+22)& (0+255),w,b
  3623  0011A6  6F68               	movwf	(_menu_st+23)& (0+255),b
  3624                           
  3625                           ;sm_MenuConfiguration_MC50.c: 174:                 }
  3626  0011A8  D001               	goto	l22252
  3627  0011AA                     l22250:
  3628                           
  3629                           ; BSR set to: 1
  3630                           ;sm_MenuConfiguration_MC50.c: 176:                 {;sm_MenuConfiguration_MC50.c: 177:  
      +                                             menu_st.parameterSelected--;
  3631  0011AA  0768               	decf	(_menu_st+23)& (0+255),f,b
  3632  0011AC                     l22252:
  3633                           
  3634                           ; BSR set to: 1
  3635                           ;sm_MenuConfiguration_MC50.c: 179:                 SetSegmentValueMain(menu_st.menuList[
      +                          menu_st.parameterSelected].value_display1, menu_st.menuList[menu_st.parameterSelected].v
      +                          alue_display2);
  3636  0011AC  5168               	movf	(_menu_st+23)& (0+255),w,b
  3637  0011AE  0D02               	mullw	2
  3638  0011B0  0E52               	movlw	low (_menu_st+1)
  3639  0011B2  24F3               	addwf	243,w,c
  3640  0011B4  6ED9               	movwf	fsr2l,c
  3641  0011B6  0E01               	movlw	high (_menu_st+1)
  3642  0011B8  20F4               	addwfc	prodh,w,c
  3643  0011BA  6EDA               	movwf	fsr2h,c
  3644  0011BC  50DF               	movf	indf2,w,c
  3645  0011BE  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3646  0011C0  5168               	movf	(_menu_st+23)& (0+255),w,b
  3647  0011C2  0D02               	mullw	2
  3648  0011C4  0E51               	movlw	low _menu_st
  3649  0011C6  24F3               	addwf	243,w,c
  3650  0011C8  6ED9               	movwf	fsr2l,c
  3651  0011CA  0E01               	movlw	high _menu_st
  3652  0011CC  20F4               	addwfc	prodh,w,c
  3653  0011CE  6EDA               	movwf	fsr2h,c
  3654  0011D0  50DF               	movf	indf2,w,c
  3655  0011D2  ECD4  F047         	call	_SetSegmentValueMain
  3656  0011D6                     l22254:
  3657                           
  3658                           ;sm_MenuConfiguration_MC50.c: 180:                 button_struct.processed=1;
  3659  0011D6  0E01               	movlw	1
  3660  0011D8  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  3661                           
  3662                           ;sm_MenuConfiguration_MC50.c: 181:             }
  3663  0011DA  0012               	return	
  3664  0011DC                     l22256:
  3665                           
  3666                           ; BSR set to: 1
  3667  0011DC  0E17               	movlw	23
  3668  0011DE  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  3669  0011E0  A4D8               	btfss	status,2,c
  3670  0011E2  D021               	goto	l22270
  3671                           
  3672                           ; BSR set to: 1
  3673                           ;sm_MenuConfiguration_MC50.c: 183:             {;sm_MenuConfiguration_MC50.c: 184:      
      +                                     ts_system.timeoutMenu=((1000/50)*5) ;
  3674  0011E4  0E00               	movlw	0
  3675  0011E6  6FA9               	movwf	(_ts_system+15)& (0+255),b	;volatile
  3676  0011E8  0E64               	movlw	100
  3677  0011EA  6FA8               	movwf	(_ts_system+14)& (0+255),b	;volatile
  3678                           
  3679                           ; BSR set to: 1
  3680                           ;sm_MenuConfiguration_MC50.c: 185:                 menu_st.parameterSelected++;
  3681  0011EC  2B68               	incf	(_menu_st+23)& (0+255),f,b
  3682                           
  3683                           ; BSR set to: 1
  3684                           ;sm_MenuConfiguration_MC50.c: 186:                 if(menu_st.parameterSelected>=menu_st
      +                          .menuSize)
  3685  0011EE  5167               	movf	(_menu_st+22)& (0+255),w,b
  3686  0011F0  5D68               	subwf	(_menu_st+23)& (0+255),w,b
  3687  0011F2  A0D8               	btfss	status,0,c
  3688  0011F4  D002               	goto	l22266
  3689                           
  3690                           ; BSR set to: 1
  3691                           ;sm_MenuConfiguration_MC50.c: 187:                 {;sm_MenuConfiguration_MC50.c: 188:  
      +                                             menu_st.parameterSelected=0;
  3692  0011F6  0E00               	movlw	0
  3693  0011F8  6F68               	movwf	(_menu_st+23)& (0+255),b
  3694  0011FA                     l22266:
  3695                           
  3696                           ; BSR set to: 1
  3697                           ;sm_MenuConfiguration_MC50.c: 190:                 SetSegmentValueMain(menu_st.menuList[
      +                          menu_st.parameterSelected].value_display1, menu_st.menuList[menu_st.parameterSelected].v
      +                          alue_display2);
  3698  0011FA  5168               	movf	(_menu_st+23)& (0+255),w,b
  3699  0011FC  0D02               	mullw	2
  3700  0011FE  0E52               	movlw	low (_menu_st+1)
  3701  001200  24F3               	addwf	243,w,c
  3702  001202  6ED9               	movwf	fsr2l,c
  3703  001204  0E01               	movlw	high (_menu_st+1)
  3704  001206  20F4               	addwfc	prodh,w,c
  3705  001208  6EDA               	movwf	fsr2h,c
  3706  00120A  50DF               	movf	indf2,w,c
  3707  00120C  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3708  00120E  5168               	movf	(_menu_st+23)& (0+255),w,b
  3709  001210  0D02               	mullw	2
  3710  001212  0E51               	movlw	low _menu_st
  3711  001214  24F3               	addwf	243,w,c
  3712  001216  6ED9               	movwf	fsr2l,c
  3713  001218  0E01               	movlw	high _menu_st
  3714  00121A  20F4               	addwfc	prodh,w,c
  3715  00121C  6EDA               	movwf	fsr2h,c
  3716  00121E  50DF               	movf	indf2,w,c
  3717  001220  ECD4  F047         	call	_SetSegmentValueMain
  3718  001224  D7D8               	goto	l22254
  3719  001226                     l22270:
  3720                           
  3721                           ; BSR set to: 1
  3722  001226  0E0C               	movlw	12
  3723  001228  6166               	cpfslt	(_menu_st+21)& (0+255),b
  3724  00122A  D09A               	goto	l22326
  3725                           
  3726                           ; BSR set to: 1
  3727                           ;sm_MenuConfiguration_MC50.c: 194:             {;sm_MenuConfiguration_MC50.c: 195:      
      +                                     if (button_struct.current==0 && button_struct.timer>(( 500/50)) )
  3728  00122C  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  3729  00122E  A4D8               	btfss	status,2,c
  3730  001230  D053               	goto	l22292
  3731                           
  3732                           ; BSR set to: 1
  3733  001232  0E0A               	movlw	10
  3734  001234  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  3735  001236  D050               	goto	l22292
  3736                           
  3737                           ; BSR set to: 1
  3738                           ;sm_MenuConfiguration_MC50.c: 196:                 {;sm_MenuConfiguration_MC50.c: 197:  
      +                                             ts_system.timeoutMenu=((1000/50)*5) ;
  3739  001238  0E00               	movlw	0
  3740  00123A  6FA9               	movwf	(_ts_system+15)& (0+255),b	;volatile
  3741  00123C  0E64               	movlw	100
  3742  00123E  6FA8               	movwf	(_ts_system+14)& (0+255),b	;volatile
  3743                           
  3744                           ; BSR set to: 1
  3745                           ;sm_MenuConfiguration_MC50.c: 199:                     if (setValueToEdit(menu_st.actual
      +                          Menu,menu_st.parameterSelected))
  3746  001240  C168  F03A         	movff	_menu_st+23,setValueToEdit@ParameterSelected
  3747  001244  5166               	movf	(_menu_st+21)& (0+255),w,b
  3748  001246  ECD2  F014         	call	_setValueToEdit
  3749  00124A  0900               	iorlw	0
  3750  00124C  B4D8               	btfsc	status,2,c
  3751  00124E  D7C3               	goto	l22254
  3752                           
  3753                           ; BSR set to: 0
  3754                           ;sm_MenuConfiguration_MC50.c: 200:                     {;sm_MenuConfiguration_MC50.c: 20
      +                          2:                          sm_send_event(&menuConfiguration_stateMachine, ev_ParameterI
      +                          sSelected);
  3755  001250  0EBD               	movlw	low _menuConfiguration_stateMachine
  3756  001252  6E12               	movwf	sm_send_event@psm^0,c
  3757  001254  0E02               	movlw	high _menuConfiguration_stateMachine
  3758  001256  6E13               	movwf	(sm_send_event@psm+1)^0,c
  3759  001258  0E00               	movlw	0
  3760  00125A  6E15               	movwf	(sm_send_event@event+1)^0,c
  3761  00125C  0E01               	movlw	1
  3762  00125E  6E14               	movwf	sm_send_event@event^0,c
  3763  001260  EC1C  F041         	call	_sm_send_event	;wreg free
  3764                           
  3765                           ;sm_MenuConfiguration_MC50.c: 203:                          if((edit_Param.Value==(unsig
      +                          ned char*)&var_sys_NVM.TypeofMotor)||(edit_Param.Value==(unsigned char*)&var_sys_NVM.Dir
      +                          ection_motor)){
  3766  001264  0E98               	movlw	_var_sys_NVM& (0+255)
  3767  001266  0F1C               	addlw	28
  3768  001268  0100               	movlb	0	; () banked
  3769  00126A  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  3770  00126C  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  3771  00126E  1847               	xorwf	(_edit_Param+1)^0,w,c	;volatile
  3772  001270  E101               	bnz	u26865
  3773  001272  5248               	movf	(_edit_Param+2)^0,f,c	;volatile
  3774  001274                     u26865:
  3775  001274  B4D8               	btfsc	status,2,c
  3776  001276  D009               	goto	u26870
  3777                           
  3778                           ; BSR set to: 0
  3779  001278  0E98               	movlw	_var_sys_NVM& (0+255)
  3780  00127A  0F1B               	addlw	27
  3781  00127C  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  3782  00127E  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  3783  001280  1847               	xorwf	(_edit_Param+1)^0,w,c	;volatile
  3784  001282  E101               	bnz	u26875
  3785  001284  5248               	movf	(_edit_Param+2)^0,f,c	;volatile
  3786  001286                     u26875:
  3787  001286  A4D8               	btfss	status,2,c
  3788  001288  D016               	goto	l22288
  3789  00128A                     u26870:
  3790                           
  3791                           ; BSR set to: 0
  3792                           ;sm_MenuConfiguration_MC50.c: 204:                            SetSegmentValueMain(menu_s
      +                          t.menuList[edit_Param.tempValue].value_display1, menu_st.menuList[edit_Param.tempValue].
      +                          value_display2);
  3793  00128A  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3794  00128C  0D02               	mullw	2
  3795  00128E  0E52               	movlw	low (_menu_st+1)
  3796  001290  24F3               	addwf	243,w,c
  3797  001292  6ED9               	movwf	fsr2l,c
  3798  001294  0E01               	movlw	high (_menu_st+1)
  3799  001296  20F4               	addwfc	prodh,w,c
  3800  001298  6EDA               	movwf	fsr2h,c
  3801  00129A  50DF               	movf	indf2,w,c
  3802  00129C  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3803  00129E  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3804  0012A0  0D02               	mullw	2
  3805  0012A2  0E51               	movlw	low _menu_st
  3806  0012A4  24F3               	addwf	243,w,c
  3807  0012A6  6ED9               	movwf	fsr2l,c
  3808  0012A8  0E01               	movlw	high _menu_st
  3809  0012AA  20F4               	addwfc	prodh,w,c
  3810  0012AC  6EDA               	movwf	fsr2h,c
  3811  0012AE  50DF               	movf	indf2,w,c
  3812  0012B0  ECD4  F047         	call	_SetSegmentValueMain
  3813                           
  3814                           ;sm_MenuConfiguration_MC50.c: 206:                          }
  3815  0012B4  D790               	goto	l22254
  3816  0012B6                     l22288:
  3817                           
  3818                           ; BSR set to: 0
  3819                           ;sm_MenuConfiguration_MC50.c: 208:                          SetSegmentValueMain(edit_Par
      +                          am.tempValue/10, edit_Param.tempValue-((edit_Param.tempValue/10)*10));
  3820  0012B6  0E0A               	movlw	10
  3821  0012B8  6E10               	movwf	___lbdiv@divisor^0,c
  3822  0012BA  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3823  0012BC  ECE0  F044         	call	___lbdiv
  3824  0012C0  0DF6               	mullw	246
  3825  0012C2  50F3               	movf	243,w,c
  3826  0012C4  2449               	addwf	(_edit_Param+3)^0,w,c	;volatile
  3827  0012C6  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3828  0012C8  0E0A               	movlw	10
  3829  0012CA  6E10               	movwf	___lbdiv@divisor^0,c
  3830  0012CC  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3831  0012CE  ECE0  F044         	call	___lbdiv
  3832  0012D2  ECD4  F047         	call	_SetSegmentValueMain
  3833  0012D6  D77F               	goto	l22254
  3834  0012D8                     l22292:
  3835                           
  3836                           ; BSR set to: 1
  3837  0012D8  BFA9               	btfsc	(_ts_system+15)& (0+255),7,b	;volatile
  3838  0012DA  D008               	goto	u26890
  3839  0012DC  51A9               	movf	(_ts_system+15)& (0+255),w,b	;volatile
  3840  0012DE  E103               	bnz	u26880
  3841  0012E0  05A8               	decf	(_ts_system+14)& (0+255),w,b	;volatile
  3842  0012E2  A0D8               	btfss	status,0,c
  3843  0012E4  D003               	goto	u26890
  3844  0012E6                     u26880:
  3845                           
  3846                           ; BSR set to: 1
  3847  0012E6  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  3848  0012E8  A4D8               	btfss	status,2,c
  3849  0012EA  D01E               	goto	l22310
  3850  0012EC                     u26890:
  3851                           
  3852                           ; BSR set to: 1
  3853  0012EC  0E02               	movlw	2
  3854  0012EE  6166               	cpfslt	(_menu_st+21)& (0+255),b
  3855  0012F0  D01B               	goto	l22310
  3856                           
  3857                           ; BSR set to: 1
  3858                           ;sm_MenuConfiguration_MC50.c: 216:                 {;sm_MenuConfiguration_MC50.c: 217:  
      +                                             ts_system.timeoutMenu=0;
  3859  0012F2  0E00               	movlw	0
  3860  0012F4  6FA9               	movwf	(_ts_system+15)& (0+255),b	;volatile
  3861  0012F6  0E00               	movlw	0
  3862  0012F8  6FA8               	movwf	(_ts_system+14)& (0+255),b	;volatile
  3863                           
  3864                           ; BSR set to: 1
  3865                           ;sm_MenuConfiguration_MC50.c: 218:                     sm_send_event(&main_stateMachine,
      +                           ev_goto_StandBy);
  3866  0012FA  0EED               	movlw	low _main_stateMachine
  3867  0012FC  6E12               	movwf	sm_send_event@psm^0,c
  3868  0012FE  0E01               	movlw	high _main_stateMachine
  3869  001300  6E13               	movwf	(sm_send_event@psm+1)^0,c
  3870  001302  0E00               	movlw	0
  3871  001304  6E15               	movwf	(sm_send_event@event+1)^0,c
  3872  001306  0E07               	movlw	7
  3873  001308  6E14               	movwf	sm_send_event@event^0,c
  3874  00130A  EC1C  F041         	call	_sm_send_event	;wreg free
  3875                           
  3876                           ;sm_MenuConfiguration_MC50.c: 219:                     SetSegmentValueMain(dMinus,dMinus
      +                          );
  3877  00130E  0E18               	movlw	24
  3878  001310  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3879  001312  0E18               	movlw	24
  3880  001314  ECD4  F047         	call	_SetSegmentValueMain
  3881                           
  3882                           ; BSR set to: 0
  3883                           ;sm_MenuConfiguration_MC50.c: 220:                     menu_st.lastMainParameterSelected
      +                           = 0;
  3884  001318  0E00               	movlw	0
  3885  00131A  0101               	movlb	1	; () banked
  3886  00131C  6F69               	movwf	(_menu_st+24)& (0+255),b
  3887                           
  3888                           ; BSR set to: 1
  3889                           ;sm_MenuConfiguration_MC50.c: 221:                     button_struct.processed=1;
  3890  00131E  0E01               	movlw	1
  3891  001320  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  3892                           
  3893                           ; BSR set to: 1
  3894                           ;sm_MenuConfiguration_MC50.c: 222:                     ClearFlag_rfCMD();
  3895  001322  EC25  F049         	call	_ClearFlag_rfCMD	;wreg free
  3896                           
  3897                           ;sm_MenuConfiguration_MC50.c: 224:                 }
  3898  001326  0012               	return	
  3899  001328                     l22310:
  3900                           
  3901                           ; BSR set to: 1
  3902  001328  BFA9               	btfsc	(_ts_system+15)& (0+255),7,b	;volatile
  3903  00132A  D008               	goto	u26920
  3904  00132C  51A9               	movf	(_ts_system+15)& (0+255),w,b	;volatile
  3905  00132E  E103               	bnz	u26910
  3906  001330  05A8               	decf	(_ts_system+14)& (0+255),w,b	;volatile
  3907  001332  A0D8               	btfss	status,0,c
  3908  001334  D003               	goto	u26920
  3909  001336                     u26910:
  3910                           
  3911                           ; BSR set to: 1
  3912  001336  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  3913  001338  A4D8               	btfss	status,2,c
  3914  00133A  D004               	goto	l22318
  3915  00133C                     u26920:
  3916                           
  3917                           ; BSR set to: 1
  3918                           ;sm_MenuConfiguration_MC50.c: 226:                 {;sm_MenuConfiguration_MC50.c: 228:  
      +                                             load_New_Menu(menu_st.lastMenu);
  3919  00133C  5165               	movf	(_menu_st+20)& (0+255),w,b
  3920  00133E  EC74  F01E         	call	_load_New_Menu
  3921  001342  D749               	goto	l22254
  3922  001344                     l22318:
  3923                           
  3924                           ; BSR set to: 1
  3925  001344  BFA9               	btfsc	(_ts_system+15)& (0+255),7,b	;volatile
  3926  001346  D005               	goto	u26930
  3927  001348  51A9               	movf	(_ts_system+15)& (0+255),w,b	;volatile
  3928  00134A  E102               	bnz	u26931
  3929  00134C  05A8               	decf	(_ts_system+14)& (0+255),w,b	;volatile
  3930  00134E  B0D8               	btfsc	status,0,c
  3931  001350                     u26931:
  3932  001350  0012               	return	
  3933  001352                     u26930:
  3934                           
  3935                           ; BSR set to: 1
  3936  001352  0E01               	movlw	1
  3937  001354  6566               	cpfsgt	(_menu_st+21)& (0+255),b
  3938  001356  0012               	return	
  3939                           
  3940                           ; BSR set to: 1
  3941                           ;sm_MenuConfiguration_MC50.c: 232:                 {;sm_MenuConfiguration_MC50.c: 234:  
      +                                             load_New_Menu(menu_st.lastMenu);
  3942  001358  5165               	movf	(_menu_st+20)& (0+255),w,b
  3943  00135A  EC74  F01E         	call	_load_New_Menu
  3944  00135E  D73B               	goto	l22254
  3945  001360                     l22326:
  3946                           
  3947                           ; BSR set to: 1
  3948  001360  0E27               	movlw	39
  3949  001362  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  3950  001364  A4D8               	btfss	status,2,c
  3951  001366  D032               	goto	l22342
  3952                           
  3953                           ; BSR set to: 1
  3954  001368  0E0A               	movlw	10
  3955  00136A  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  3956  00136C  D02F               	goto	l22342
  3957                           
  3958                           ; BSR set to: 1
  3959  00136E  0E0D               	movlw	13
  3960  001370  1966               	xorwf	(_menu_st+21)& (0+255),w,b
  3961  001372  B4D8               	btfsc	status,2,c
  3962  001374  D02B               	goto	l22342
  3963                           
  3964                           ; BSR set to: 1
  3965                           ;sm_MenuConfiguration_MC50.c: 239:             {;sm_MenuConfiguration_MC50.c: 240:      
      +                                         ts_system.timeoutMenu=((1000/50)*5);
  3966  001376  0E00               	movlw	0
  3967  001378  6FA9               	movwf	(_ts_system+15)& (0+255),b	;volatile
  3968  00137A  0E64               	movlw	100
  3969  00137C  6FA8               	movwf	(_ts_system+14)& (0+255),b	;volatile
  3970                           
  3971                           ; BSR set to: 1
  3972                           ;sm_MenuConfiguration_MC50.c: 241:                     if (setValueToEdit(menu_st.actual
      +                          Menu,menu_st.parameterSelected))
  3973  00137E  C168  F03A         	movff	_menu_st+23,setValueToEdit@ParameterSelected
  3974  001382  5166               	movf	(_menu_st+21)& (0+255),w,b
  3975  001384  ECD2  F014         	call	_setValueToEdit
  3976  001388  0900               	iorlw	0
  3977  00138A  B4D8               	btfsc	status,2,c
  3978  00138C  D724               	goto	l22254
  3979                           
  3980                           ; BSR set to: 0
  3981                           ;sm_MenuConfiguration_MC50.c: 243:                     {;sm_MenuConfiguration_MC50.c: 24
      +                          4:                         sm_send_event(&menuConfiguration_stateMachine, ev_addRemotes)
      +                          ;
  3982  00138E  0EBD               	movlw	low _menuConfiguration_stateMachine
  3983  001390  6E12               	movwf	sm_send_event@psm^0,c
  3984  001392  0E02               	movlw	high _menuConfiguration_stateMachine
  3985  001394  6E13               	movwf	(sm_send_event@psm+1)^0,c
  3986  001396  0E00               	movlw	0
  3987  001398  6E15               	movwf	(sm_send_event@event+1)^0,c
  3988  00139A  0E08               	movlw	8
  3989  00139C  6E14               	movwf	sm_send_event@event^0,c
  3990  00139E  EC1C  F041         	call	_sm_send_event	;wreg free
  3991                           
  3992                           ;sm_MenuConfiguration_MC50.c: 245:                         SetSegmentValueIntermitentMai
      +                          n(edit_Param.tempValue/10, edit_Param.tempValue-((edit_Param.tempValue/10)*10),(1000/50)
      +                          );
  3993  0013A2  0E0A               	movlw	10
  3994  0013A4  6E10               	movwf	___lbdiv@divisor^0,c
  3995  0013A6  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3996  0013A8  ECE0  F044         	call	___lbdiv
  3997  0013AC  0DF6               	mullw	246
  3998  0013AE  50F3               	movf	243,w,c
  3999  0013B0  2449               	addwf	(_edit_Param+3)^0,w,c	;volatile
  4000  0013B2  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  4001  0013B4  0E00               	movlw	0
  4002  0013B6  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  4003  0013B8  0E14               	movlw	20
  4004  0013BA  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  4005  0013BC  0E0A               	movlw	10
  4006  0013BE  6E10               	movwf	___lbdiv@divisor^0,c
  4007  0013C0  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4008  0013C2  ECE0  F044         	call	___lbdiv
  4009  0013C6  EC70  F048         	call	_SetSegmentValueIntermitentMain
  4010  0013CA  D705               	goto	l22254
  4011  0013CC                     l22342:
  4012                           
  4013                           ; BSR set to: 1
  4014  0013CC  0E0D               	movlw	13
  4015  0013CE  1966               	xorwf	(_menu_st+21)& (0+255),w,b
  4016  0013D0  A4D8               	btfss	status,2,c
  4017  0013D2  D027               	goto	l22360
  4018                           
  4019                           ; BSR set to: 1
  4020  0013D4  51A6               	movf	(_ts_system+12)& (0+255),w,b	;volatile
  4021  0013D6  11A7               	iorwf	(_ts_system+13)& (0+255),w,b	;volatile
  4022  0013D8  A4D8               	btfss	status,2,c
  4023  0013DA  D023               	goto	l22360
  4024                           
  4025                           ; BSR set to: 1
  4026                           ;sm_MenuConfiguration_MC50.c: 250:             {;sm_MenuConfiguration_MC50.c: 251:      
      +                                     var_sys_NVM.positionRemotesFull=0;
  4027  0013DC  0E00               	movlw	0
  4028  0013DE  0100               	movlb	0	; () banked
  4029  0013E0  6FB8               	movwf	(_var_sys_NVM+32)& (0+255),b	;volatile
  4030                           
  4031                           ;sm_MenuConfiguration_MC50.c: 252:                 var_sys_NVM.positionRemotesWalk=0;
  4032  0013E2  0E00               	movlw	0
  4033  0013E4  6FB9               	movwf	(_var_sys_NVM+33)& (0+255),b	;volatile
  4034                           
  4035                           ;sm_MenuConfiguration_MC50.c: 253:                 var_sys_NVM.OnlyRollingCode=NO;
  4036  0013E6  0E00               	movlw	0
  4037  0013E8  6FBE               	movwf	(_var_sys_NVM+38)& (0+255),b	;volatile
  4038                           
  4039                           ; BSR set to: 0
  4040                           ;sm_MenuConfiguration_MC50.c: 254:                 SaveNVM_VarSystem(pageMemoryCounters)
      +                          ;
  4041  0013EA  0E02               	movlw	2
  4042  0013EC  ECFD  F044         	call	_SaveNVM_VarSystem
  4043                           
  4044                           ;sm_MenuConfiguration_MC50.c: 255:                 sm_send_event(&main_stateMachine, ev_
      +                          goto_StandBy);
  4045  0013F0  0EED               	movlw	low _main_stateMachine
  4046  0013F2  6E12               	movwf	sm_send_event@psm^0,c
  4047  0013F4  0E01               	movlw	high _main_stateMachine
  4048  0013F6  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4049  0013F8  0E00               	movlw	0
  4050  0013FA  6E15               	movwf	(sm_send_event@event+1)^0,c
  4051  0013FC  0E07               	movlw	7
  4052  0013FE  6E14               	movwf	sm_send_event@event^0,c
  4053  001400  EC1C  F041         	call	_sm_send_event	;wreg free
  4054                           
  4055                           ;sm_MenuConfiguration_MC50.c: 256:                 SetSegmentValueMain(dMinus,dMinus);
  4056  001404  0E18               	movlw	24
  4057  001406  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4058  001408  0E18               	movlw	24
  4059  00140A  ECD4  F047         	call	_SetSegmentValueMain
  4060                           
  4061                           ; BSR set to: 0
  4062                           ;sm_MenuConfiguration_MC50.c: 257:                 button_struct.processed=1;
  4063  00140E  0E01               	movlw	1
  4064  001410  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  4065  001412                     l22356:
  4066                           
  4067                           ;sm_MenuConfiguration_MC50.c: 258:                 ClearFlag_rfCMD();
  4068  001412  EC25  F049         	call	_ClearFlag_rfCMD	;wreg free
  4069  001416                     l22358:
  4070                           
  4071                           ;sm_MenuConfiguration_MC50.c: 259:                  ts_system.timeoutMenu=0;
  4072  001416  0E00               	movlw	0
  4073  001418  0101               	movlb	1	; () banked
  4074  00141A  6FA9               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4075  00141C  0E00               	movlw	0
  4076  00141E  6FA8               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4077                           
  4078                           ;sm_MenuConfiguration_MC50.c: 260:             }
  4079  001420  0012               	return	
  4080  001422                     l22360:
  4081                           
  4082                           ; BSR set to: 1
  4083  001422  BFA9               	btfsc	(_ts_system+15)& (0+255),7,b	;volatile
  4084  001424  D008               	goto	u27020
  4085  001426  51A9               	movf	(_ts_system+15)& (0+255),w,b	;volatile
  4086  001428  E103               	bnz	u27010
  4087  00142A  05A8               	decf	(_ts_system+14)& (0+255),w,b	;volatile
  4088  00142C  A0D8               	btfss	status,0,c
  4089  00142E  D003               	goto	u27020
  4090  001430                     u27010:
  4091                           
  4092                           ; BSR set to: 1
  4093  001430  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  4094  001432  A4D8               	btfss	status,2,c
  4095  001434  0012               	return	
  4096  001436                     u27020:
  4097                           
  4098                           ; BSR set to: 1
  4099                           ;sm_MenuConfiguration_MC50.c: 262:             {;sm_MenuConfiguration_MC50.c: 263:      
      +                                      sm_send_event(&main_stateMachine, ev_goto_StandBy);
  4100  001436  0EED               	movlw	low _main_stateMachine
  4101  001438  6E12               	movwf	sm_send_event@psm^0,c
  4102  00143A  0E01               	movlw	high _main_stateMachine
  4103  00143C  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4104  00143E  0E00               	movlw	0
  4105  001440  6E15               	movwf	(sm_send_event@event+1)^0,c
  4106  001442  0E07               	movlw	7
  4107  001444  6E14               	movwf	sm_send_event@event^0,c
  4108  001446  EC1C  F041         	call	_sm_send_event	;wreg free
  4109                           
  4110                           ;sm_MenuConfiguration_MC50.c: 264:                  SetSegmentValueMain(dMinus,dMinus);
  4111  00144A  0E18               	movlw	24
  4112  00144C  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4113  00144E  0E18               	movlw	24
  4114  001450  ECD4  F047         	call	_SetSegmentValueMain
  4115                           
  4116                           ; BSR set to: 0
  4117                           ;sm_MenuConfiguration_MC50.c: 265:                  ClearFlag_rfCMD();
  4118  001454  EC25  F049         	call	_ClearFlag_rfCMD	;wreg free
  4119                           
  4120                           ;sm_MenuConfiguration_MC50.c: 266:                  button_struct.processed=1;
  4121  001458  0E01               	movlw	1
  4122  00145A  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  4123  00145C  D7DC               	goto	l22358
  4124  00145E                     l22374:
  4125                           
  4126                           ; BSR set to: 0
  4127                           ;sm_MenuConfiguration_MC50.c: 272:         {;sm_MenuConfiguration_MC50.c: 273:          
      +                             if (button_struct.current==0x00)
  4128  00145E  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  4129  001460  A4D8               	btfss	status,2,c
  4130  001462  D047               	goto	l22394
  4131                           
  4132                           ; BSR set to: 0
  4133                           ;sm_MenuConfiguration_MC50.c: 274:             {;sm_MenuConfiguration_MC50.c: 275:      
      +                                     ts_system.timeoutMenu=((1000/50)*5);
  4134  001464  0E00               	movlw	0
  4135  001466  0101               	movlb	1	; () banked
  4136  001468  6FA9               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4137  00146A  0E64               	movlw	100
  4138  00146C  6FA8               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4139                           
  4140                           ; BSR set to: 1
  4141                           ;sm_MenuConfiguration_MC50.c: 276:                 if(edit_Param.tempValue<=edit_Param.M
      +                          in)
  4142  00146E  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4143  001470  5C4B               	subwf	(_edit_Param+5)^0,w,c	;volatile
  4144  001472  A0D8               	btfss	status,0,c
  4145  001474  D003               	goto	l22382
  4146                           
  4147                           ; BSR set to: 1
  4148                           ;sm_MenuConfiguration_MC50.c: 277:                 {;sm_MenuConfiguration_MC50.c: 278:  
      +                                             edit_Param.tempValue=edit_Param.Max;
  4149  001476  C04A  F049         	movff	_edit_Param+4,_edit_Param+3	;volatile
  4150                           
  4151                           ;sm_MenuConfiguration_MC50.c: 279:                 }
  4152  00147A  D001               	goto	l22384
  4153  00147C                     l22382:
  4154                           
  4155                           ; BSR set to: 1
  4156                           ;sm_MenuConfiguration_MC50.c: 281:                 {;sm_MenuConfiguration_MC50.c: 282:  
      +                                             edit_Param.tempValue--;
  4157  00147C  0649               	decf	(_edit_Param+3)^0,f,c	;volatile
  4158  00147E                     l22384:
  4159                           
  4160                           ; BSR set to: 1
  4161                           ;sm_MenuConfiguration_MC50.c: 284:                 if ((edit_Param.Value==(unsigned char
      +                          *)&var_sys_NVM.TypeofMotor)||(edit_Param.Value==(unsigned char*)&var_sys_NVM.Direction_m
      +                          otor)){
  4162  00147E  0E98               	movlw	_var_sys_NVM& (0+255)
  4163  001480  0F1C               	addlw	28
  4164  001482  0100               	movlb	0	; () banked
  4165  001484  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  4166  001486  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  4167  001488  1847               	xorwf	(_edit_Param+1)^0,w,c	;volatile
  4168  00148A  E101               	bnz	u27055
  4169  00148C  5248               	movf	(_edit_Param+2)^0,f,c	;volatile
  4170  00148E                     u27055:
  4171  00148E  B4D8               	btfsc	status,2,c
  4172  001490  D009               	goto	u27060
  4173                           
  4174                           ; BSR set to: 0
  4175  001492  0E98               	movlw	_var_sys_NVM& (0+255)
  4176  001494  0F1B               	addlw	27
  4177  001496  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  4178  001498  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  4179  00149A  1847               	xorwf	(_edit_Param+1)^0,w,c	;volatile
  4180  00149C  E101               	bnz	u27065
  4181  00149E  5248               	movf	(_edit_Param+2)^0,f,c	;volatile
  4182  0014A0                     u27065:
  4183  0014A0  A4D8               	btfss	status,2,c
  4184  0014A2  D016               	goto	l22390
  4185  0014A4                     u27060:
  4186                           
  4187                           ; BSR set to: 0
  4188                           ;sm_MenuConfiguration_MC50.c: 285:                 SetSegmentValueMain(menu_st.menuList[
      +                          edit_Param.tempValue].value_display1, menu_st.menuList[edit_Param.tempValue].value_displ
      +                          ay2);
  4189  0014A4  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4190  0014A6  0D02               	mullw	2
  4191  0014A8  0E52               	movlw	low (_menu_st+1)
  4192  0014AA  24F3               	addwf	243,w,c
  4193  0014AC  6ED9               	movwf	fsr2l,c
  4194  0014AE  0E01               	movlw	high (_menu_st+1)
  4195  0014B0  20F4               	addwfc	prodh,w,c
  4196  0014B2  6EDA               	movwf	fsr2h,c
  4197  0014B4  50DF               	movf	indf2,w,c
  4198  0014B6  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4199  0014B8  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4200  0014BA  0D02               	mullw	2
  4201  0014BC  0E51               	movlw	low _menu_st
  4202  0014BE  24F3               	addwf	243,w,c
  4203  0014C0  6ED9               	movwf	fsr2l,c
  4204  0014C2  0E01               	movlw	high _menu_st
  4205  0014C4  20F4               	addwfc	prodh,w,c
  4206  0014C6  6EDA               	movwf	fsr2h,c
  4207  0014C8  50DF               	movf	indf2,w,c
  4208  0014CA  ECD4  F047         	call	_SetSegmentValueMain
  4209                           
  4210                           ;sm_MenuConfiguration_MC50.c: 286:                 }
  4211  0014CE  D683               	goto	l22254
  4212  0014D0                     l22390:
  4213                           
  4214                           ; BSR set to: 0
  4215                           ;sm_MenuConfiguration_MC50.c: 289:                 SetSegmentValueMain(edit_Param.tempVa
      +                          lue/10, edit_Param.tempValue-((edit_Param.tempValue/10)*10));
  4216  0014D0  0E0A               	movlw	10
  4217  0014D2  6E10               	movwf	___lbdiv@divisor^0,c
  4218  0014D4  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4219  0014D6  ECE0  F044         	call	___lbdiv
  4220  0014DA  0DF6               	mullw	246
  4221  0014DC  50F3               	movf	243,w,c
  4222  0014DE  2449               	addwf	(_edit_Param+3)^0,w,c	;volatile
  4223  0014E0  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4224  0014E2  0E0A               	movlw	10
  4225  0014E4  6E10               	movwf	___lbdiv@divisor^0,c
  4226  0014E6  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4227  0014E8  ECE0  F044         	call	___lbdiv
  4228  0014EC  ECD4  F047         	call	_SetSegmentValueMain
  4229  0014F0  D672               	goto	l22254
  4230  0014F2                     l22394:
  4231                           
  4232                           ; BSR set to: 0
  4233  0014F2  0E17               	movlw	23
  4234  0014F4  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  4235  0014F6  A4D8               	btfss	status,2,c
  4236  0014F8  D045               	goto	l22414
  4237                           
  4238                           ; BSR set to: 0
  4239                           ;sm_MenuConfiguration_MC50.c: 294:             {;sm_MenuConfiguration_MC50.c: 295:      
      +                                     ts_system.timeoutMenu=((1000/50)*5) ;
  4240  0014FA  0E00               	movlw	0
  4241  0014FC  0101               	movlb	1	; () banked
  4242  0014FE  6FA9               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4243  001500  0E64               	movlw	100
  4244  001502  6FA8               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4245                           
  4246                           ; BSR set to: 1
  4247                           ;sm_MenuConfiguration_MC50.c: 296:                 edit_Param.tempValue++;
  4248  001504  2A49               	incf	(_edit_Param+3)^0,f,c	;volatile
  4249                           
  4250                           ; BSR set to: 1
  4251                           ;sm_MenuConfiguration_MC50.c: 297:                 if(edit_Param.tempValue>edit_Param.Ma
      +                          x)
  4252  001506  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4253  001508  5C4A               	subwf	(_edit_Param+4)^0,w,c	;volatile
  4254  00150A  A0D8               	btfss	status,0,c
  4255                           
  4256                           ; BSR set to: 1
  4257                           ;sm_MenuConfiguration_MC50.c: 298:                 {;sm_MenuConfiguration_MC50.c: 299:  
      +                                              edit_Param.tempValue=edit_Param.Min;
  4258  00150C  C04B  F049         	movff	_edit_Param+5,_edit_Param+3	;volatile
  4259                           
  4260                           ; BSR set to: 1
  4261                           ;sm_MenuConfiguration_MC50.c: 301:                 if ((edit_Param.Value==(unsigned char
      +                          *)&var_sys_NVM.TypeofMotor)||(edit_Param.Value==(unsigned char*)&var_sys_NVM.Direction_m
      +                          otor)){
  4262  001510  0E98               	movlw	_var_sys_NVM& (0+255)
  4263  001512  0F1C               	addlw	28
  4264  001514  0100               	movlb	0	; () banked
  4265  001516  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  4266  001518  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  4267  00151A  1847               	xorwf	(_edit_Param+1)^0,w,c	;volatile
  4268  00151C  E101               	bnz	u27095
  4269  00151E  5248               	movf	(_edit_Param+2)^0,f,c	;volatile
  4270  001520                     u27095:
  4271  001520  B4D8               	btfsc	status,2,c
  4272  001522  D009               	goto	u27100
  4273                           
  4274                           ; BSR set to: 0
  4275  001524  0E98               	movlw	_var_sys_NVM& (0+255)
  4276  001526  0F1B               	addlw	27
  4277  001528  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  4278  00152A  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  4279  00152C  1847               	xorwf	(_edit_Param+1)^0,w,c	;volatile
  4280  00152E  E101               	bnz	u27105
  4281  001530  5248               	movf	(_edit_Param+2)^0,f,c	;volatile
  4282  001532                     u27105:
  4283  001532  A4D8               	btfss	status,2,c
  4284  001534  D016               	goto	l22410
  4285  001536                     u27100:
  4286                           
  4287                           ; BSR set to: 0
  4288                           ;sm_MenuConfiguration_MC50.c: 302:                     SetSegmentValueMain(menu_st.menuL
      +                          ist[edit_Param.tempValue].value_display1, menu_st.menuList[edit_Param.tempValue].value_d
      +                          isplay2);
  4289  001536  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4290  001538  0D02               	mullw	2
  4291  00153A  0E52               	movlw	low (_menu_st+1)
  4292  00153C  24F3               	addwf	243,w,c
  4293  00153E  6ED9               	movwf	fsr2l,c
  4294  001540  0E01               	movlw	high (_menu_st+1)
  4295  001542  20F4               	addwfc	prodh,w,c
  4296  001544  6EDA               	movwf	fsr2h,c
  4297  001546  50DF               	movf	indf2,w,c
  4298  001548  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4299  00154A  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4300  00154C  0D02               	mullw	2
  4301  00154E  0E51               	movlw	low _menu_st
  4302  001550  24F3               	addwf	243,w,c
  4303  001552  6ED9               	movwf	fsr2l,c
  4304  001554  0E01               	movlw	high _menu_st
  4305  001556  20F4               	addwfc	prodh,w,c
  4306  001558  6EDA               	movwf	fsr2h,c
  4307  00155A  50DF               	movf	indf2,w,c
  4308  00155C  ECD4  F047         	call	_SetSegmentValueMain
  4309                           
  4310                           ;sm_MenuConfiguration_MC50.c: 303:                 }
  4311  001560  D63A               	goto	l22254
  4312  001562                     l22410:
  4313                           
  4314                           ; BSR set to: 0
  4315                           ;sm_MenuConfiguration_MC50.c: 306:                 SetSegmentValueMain(edit_Param.tempVa
      +                          lue/10, edit_Param.tempValue-((edit_Param.tempValue/10)*10));
  4316  001562  0E0A               	movlw	10
  4317  001564  6E10               	movwf	___lbdiv@divisor^0,c
  4318  001566  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4319  001568  ECE0  F044         	call	___lbdiv
  4320  00156C  0DF6               	mullw	246
  4321  00156E  50F3               	movf	243,w,c
  4322  001570  2449               	addwf	(_edit_Param+3)^0,w,c	;volatile
  4323  001572  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4324  001574  0E0A               	movlw	10
  4325  001576  6E10               	movwf	___lbdiv@divisor^0,c
  4326  001578  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4327  00157A  ECE0  F044         	call	___lbdiv
  4328  00157E  ECD4  F047         	call	_SetSegmentValueMain
  4329  001582  D629               	goto	l22254
  4330  001584                     l22414:
  4331                           
  4332                           ; BSR set to: 0
  4333  001584  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  4334  001586  A4D8               	btfss	status,2,c
  4335  001588  D023               	goto	l22430
  4336                           
  4337                           ; BSR set to: 0
  4338  00158A  0E09               	movlw	9
  4339  00158C  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  4340  00158E  D020               	goto	l22430
  4341                           
  4342                           ; BSR set to: 0
  4343                           ;sm_MenuConfiguration_MC50.c: 312:             {;sm_MenuConfiguration_MC50.c: 313:      
      +                                     ts_system.timeoutMenu=((1000/50)*5) ;
  4344  001590  0E00               	movlw	0
  4345  001592  0101               	movlb	1	; () banked
  4346  001594  6FA9               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4347  001596  0E64               	movlw	100
  4348  001598  6FA8               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4349                           
  4350                           ; BSR set to: 1
  4351                           ;sm_MenuConfiguration_MC50.c: 315:                 edit_Param.Value[0]=edit_Param.tempVa
      +                          lue;
  4352  00159A  C047  FFD9         	movff	_edit_Param+1,fsr2l	;volatile
  4353  00159E  C048  FFDA         	movff	_edit_Param+2,fsr2h	;volatile
  4354  0015A2  C049  FFDF         	movff	_edit_Param+3,indf2	;volatile
  4355                           
  4356                           ; BSR set to: 1
  4357                           ;sm_MenuConfiguration_MC50.c: 316:                 sm_send_event(&menuConfiguration_stat
      +                          eMachine, ev_ParameterIsEdited);
  4358  0015A6  0EBD               	movlw	low _menuConfiguration_stateMachine
  4359  0015A8  6E12               	movwf	sm_send_event@psm^0,c
  4360  0015AA  0E02               	movlw	high _menuConfiguration_stateMachine
  4361  0015AC  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4362  0015AE  0E00               	movlw	0
  4363  0015B0  6E15               	movwf	(sm_send_event@event+1)^0,c
  4364  0015B2  0E02               	movlw	2
  4365  0015B4  6E14               	movwf	sm_send_event@event^0,c
  4366  0015B6  EC1C  F041         	call	_sm_send_event	;wreg free
  4367                           
  4368                           ;sm_MenuConfiguration_MC50.c: 317:                 SetSegmentValueMain(dBar,d1);
  4369  0015BA  0E01               	movlw	1
  4370  0015BC  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4371  0015BE  0E19               	movlw	25
  4372  0015C0  ECD4  F047         	call	_SetSegmentValueMain
  4373                           
  4374                           ; BSR set to: 0
  4375                           ;sm_MenuConfiguration_MC50.c: 318:                 ts_system.timeSinalizationDigit=((100
      +                          0/50)*2);
  4376  0015C4  0E00               	movlw	0
  4377  0015C6  0101               	movlb	1	; () banked
  4378  0015C8  6FA7               	movwf	(_ts_system+13)& (0+255),b	;volatile
  4379  0015CA  0E28               	movlw	40
  4380  0015CC  6FA6               	movwf	(_ts_system+12)& (0+255),b	;volatile
  4381  0015CE  D603               	goto	l22254
  4382  0015D0                     l22430:
  4383                           
  4384                           ; BSR set to: 0
  4385  0015D0  0101               	movlb	1	; () banked
  4386  0015D2  BFA9               	btfsc	(_ts_system+15)& (0+255),7,b	;volatile
  4387  0015D4  D008               	goto	u27140
  4388  0015D6  51A9               	movf	(_ts_system+15)& (0+255),w,b	;volatile
  4389  0015D8  E103               	bnz	u27130
  4390  0015DA  05A8               	decf	(_ts_system+14)& (0+255),w,b	;volatile
  4391  0015DC  A0D8               	btfss	status,0,c
  4392  0015DE  D003               	goto	u27140
  4393  0015E0                     u27130:
  4394                           
  4395                           ; BSR set to: 1
  4396  0015E0  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  4397  0015E2  A4D8               	btfss	status,2,c
  4398  0015E4  0012               	return	
  4399  0015E6                     u27140:
  4400                           
  4401                           ; BSR set to: 1
  4402                           ;sm_MenuConfiguration_MC50.c: 323:             {;sm_MenuConfiguration_MC50.c: 324:      
      +                                     ts_system.timeoutMenu=((1000/50)*5) ;
  4403  0015E6  0E00               	movlw	0
  4404  0015E8  6FA9               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4405  0015EA  0E64               	movlw	100
  4406  0015EC  6FA8               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4407                           
  4408                           ; BSR set to: 1
  4409                           ;sm_MenuConfiguration_MC50.c: 325:                 load_New_Menu(menu_st.actualMenu);
  4410  0015EE  5166               	movf	(_menu_st+21)& (0+255),w,b
  4411  0015F0  EC74  F01E         	call	_load_New_Menu
  4412                           
  4413                           ;sm_MenuConfiguration_MC50.c: 326:                 sm_send_event(&menuConfiguration_stat
      +                          eMachine, ev_CancelEdition);
  4414  0015F4  0EBD               	movlw	low _menuConfiguration_stateMachine
  4415  0015F6  6E12               	movwf	sm_send_event@psm^0,c
  4416  0015F8  0E02               	movlw	high _menuConfiguration_stateMachine
  4417  0015FA  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4418  0015FC  0E00               	movlw	0
  4419  0015FE  6E15               	movwf	(sm_send_event@event+1)^0,c
  4420  001600  0E03               	movlw	3
  4421  001602  6E14               	movwf	sm_send_event@event^0,c
  4422  001604  EC1C  F041         	call	_sm_send_event	;wreg free
  4423  001608  D5E6               	goto	l22254
  4424  00160A                     l22442:
  4425                           
  4426                           ; BSR set to: 0
  4427                           ;sm_MenuConfiguration_MC50.c: 332:         {;sm_MenuConfiguration_MC50.c: 333:          
      +                             if (ts_system.timeSinalizationDigit<=0)
  4428  00160A  0101               	movlb	1	; () banked
  4429  00160C  BFA7               	btfsc	(_ts_system+13)& (0+255),7,b	;volatile
  4430  00160E  D005               	goto	u27150
  4431  001610  51A7               	movf	(_ts_system+13)& (0+255),w,b	;volatile
  4432  001612  E102               	bnz	u27151
  4433  001614  05A6               	decf	(_ts_system+12)& (0+255),w,b	;volatile
  4434  001616  B0D8               	btfsc	status,0,c
  4435  001618                     u27151:
  4436  001618  0012               	return	
  4437  00161A                     u27150:
  4438                           
  4439                           ; BSR set to: 1
  4440                           ;sm_MenuConfiguration_MC50.c: 334:             {;sm_MenuConfiguration_MC50.c: 335:      
      +                                     ts_system.timeoutMenu=((1000/50)*5) ;
  4441  00161A  0E00               	movlw	0
  4442  00161C  6FA9               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4443  00161E  0E64               	movlw	100
  4444  001620  6FA8               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4445                           
  4446                           ; BSR set to: 1
  4447                           ;sm_MenuConfiguration_MC50.c: 337:                 if((menu_st.actualMenu==E_Menu && men
      +                          u_st.parameterSelected==8)||(edit_Param.Value==(unsigned char*)&var_sys_NVM.TypeofMotor)
      +                          )
  4448  001622  0566               	decf	(_menu_st+21)& (0+255),w,b
  4449  001624  A4D8               	btfss	status,2,c
  4450  001626  D004               	goto	u27170
  4451                           
  4452                           ; BSR set to: 1
  4453  001628  0E08               	movlw	8
  4454  00162A  1968               	xorwf	(_menu_st+23)& (0+255),w,b
  4455  00162C  B4D8               	btfsc	status,2,c
  4456  00162E  D00A               	goto	u27180
  4457  001630                     u27170:
  4458                           
  4459                           ; BSR set to: 1
  4460  001630  0E98               	movlw	_var_sys_NVM& (0+255)
  4461  001632  0F1C               	addlw	28
  4462  001634  0100               	movlb	0	; () banked
  4463  001636  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  4464  001638  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  4465  00163A  1847               	xorwf	(_edit_Param+1)^0,w,c	;volatile
  4466  00163C  E101               	bnz	u27185
  4467  00163E  5248               	movf	(_edit_Param+2)^0,f,c	;volatile
  4468  001640                     u27185:
  4469  001640  A4D8               	btfss	status,2,c
  4470  001642  D005               	goto	l22454
  4471  001644                     u27180:
  4472                           
  4473                           ;sm_MenuConfiguration_MC50.c: 338:                 {;sm_MenuConfiguration_MC50.c: 341:  
      +                                             ResetDefaultMemory(var_sys_NVM.TypeofMotor);
  4474  001644  0100               	movlb	0	; () banked
  4475  001646  51B4               	movf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
  4476  001648  ECA6  F02D         	call	_ResetDefaultMemory
  4477                           
  4478                           ;sm_MenuConfiguration_MC50.c: 343:                 }
  4479  00164C  D023               	goto	l22472
  4480  00164E                     l22454:
  4481                           
  4482                           ; BSR set to: 0
  4483  00164E  0101               	movlb	1	; () banked
  4484  001650  0566               	decf	(_menu_st+21)& (0+255),w,b
  4485  001652  B4D8               	btfsc	status,2,c
  4486  001654  D004               	goto	u27200
  4487                           
  4488                           ; BSR set to: 1
  4489  001656  0E0A               	movlw	10
  4490  001658  1966               	xorwf	(_menu_st+21)& (0+255),w,b
  4491  00165A  A4D8               	btfss	status,2,c
  4492  00165C  D004               	goto	l22460
  4493  00165E                     u27200:
  4494                           
  4495                           ; BSR set to: 1
  4496                           ;sm_MenuConfiguration_MC50.c: 345:                 {;sm_MenuConfiguration_MC50.c: 346:  
      +                                             SaveNVM_VarSystem(pageMemoryE);
  4497  00165E  0E01               	movlw	1
  4498  001660  ECFD  F044         	call	_SaveNVM_VarSystem
  4499                           
  4500                           ;sm_MenuConfiguration_MC50.c: 347:                 }
  4501  001664  D017               	goto	l22472
  4502  001666                     l22460:
  4503                           
  4504                           ; BSR set to: 1
  4505                           ;sm_MenuConfiguration_MC50.c: 349:                 {;sm_MenuConfiguration_MC50.c: 350:  
      +                                             if (menu_st.parameterSelected == 1 && edit_Param.Value[0] >=1 && menu
      +                          _st.actualMenu == P2_SMenu )
  4506  001666  0568               	decf	(_menu_st+23)& (0+255),w,b
  4507  001668  A4D8               	btfss	status,2,c
  4508  00166A  D00E               	goto	l22468
  4509                           
  4510                           ; BSR set to: 1
  4511  00166C  C047  FFD9         	movff	_edit_Param+1,fsr2l	;volatile
  4512  001670  C048  FFDA         	movff	_edit_Param+2,fsr2h	;volatile
  4513  001674  50DF               	movf	indf2,w,c
  4514  001676  B4D8               	btfsc	status,2,c
  4515  001678  D007               	goto	l22468
  4516                           
  4517                           ; BSR set to: 1
  4518  00167A  0E06               	movlw	6
  4519  00167C  1966               	xorwf	(_menu_st+21)& (0+255),w,b
  4520  00167E  A4D8               	btfss	status,2,c
  4521  001680  D003               	goto	l22468
  4522                           
  4523                           ; BSR set to: 1
  4524                           ;sm_MenuConfiguration_MC50.c: 351:                     {;sm_MenuConfiguration_MC50.c: 35
      +                          2:                       var_sys_NVM.motorPower = 9;
  4525  001682  0E09               	movlw	9
  4526  001684  0100               	movlb	0	; () banked
  4527  001686  6F9A               	movwf	(_var_sys_NVM+2)& (0+255),b	;volatile
  4528  001688                     l22468:
  4529                           
  4530                           ;sm_MenuConfiguration_MC50.c: 355:                       SaveNVM_VarSystem(pageMemoryE);
  4531  001688  0E01               	movlw	1
  4532  00168A  ECFD  F044         	call	_SaveNVM_VarSystem
  4533                           
  4534                           ;sm_MenuConfiguration_MC50.c: 356:                       SaveNVM_VarSystem(pageMemoryP);
  4535  00168E  0E00               	movlw	0
  4536  001690  ECFD  F044         	call	_SaveNVM_VarSystem
  4537  001694                     l22472:
  4538                           
  4539                           ;sm_MenuConfiguration_MC50.c: 360:                 sm_send_event(&menuConfiguration_stat
      +                          eMachine, ev_ParameterIsSaved);
  4540  001694  0EBD               	movlw	low _menuConfiguration_stateMachine
  4541  001696  6E12               	movwf	sm_send_event@psm^0,c
  4542  001698  0E02               	movlw	high _menuConfiguration_stateMachine
  4543  00169A  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4544  00169C  0E00               	movlw	0
  4545  00169E  6E15               	movwf	(sm_send_event@event+1)^0,c
  4546  0016A0  0E04               	movlw	4
  4547  0016A2  6E14               	movwf	sm_send_event@event^0,c
  4548  0016A4  EC1C  F041         	call	_sm_send_event	;wreg free
  4549                           
  4550                           ;sm_MenuConfiguration_MC50.c: 363:                 menu_st.parameterSelected++;
  4551  0016A8  0101               	movlb	1	; () banked
  4552  0016AA  2B68               	incf	(_menu_st+23)& (0+255),f,b
  4553                           
  4554                           ; BSR set to: 1
  4555                           ;sm_MenuConfiguration_MC50.c: 364:                 if(menu_st.actualMenu<=E_Menu)
  4556  0016AC  0E02               	movlw	2
  4557  0016AE  6166               	cpfslt	(_menu_st+21)& (0+255),b
  4558  0016B0  D005               	goto	l22482
  4559                           
  4560                           ; BSR set to: 1
  4561                           ;sm_MenuConfiguration_MC50.c: 365:                 {;sm_MenuConfiguration_MC50.c: 366:  
      +                                             menu_st.lastMainParameterSelected++;
  4562  0016B2  2B69               	incf	(_menu_st+24)& (0+255),f,b
  4563                           
  4564                           ; BSR set to: 1
  4565                           ;sm_MenuConfiguration_MC50.c: 367:                     load_New_Menu(menu_st.actualMenu)
      +                          ;
  4566  0016B4  5166               	movf	(_menu_st+21)& (0+255),w,b
  4567  0016B6  EC74  F01E         	call	_load_New_Menu
  4568                           
  4569                           ;sm_MenuConfiguration_MC50.c: 368:                 }
  4570  0016BA  0012               	return	
  4571  0016BC                     l22482:
  4572                           
  4573                           ; BSR set to: 1
  4574  0016BC  5167               	movf	(_menu_st+22)& (0+255),w,b
  4575  0016BE  5D68               	subwf	(_menu_st+23)& (0+255),w,b
  4576  0016C0  A0D8               	btfss	status,0,c
  4577  0016C2  D005               	goto	l22488
  4578                           
  4579                           ; BSR set to: 1
  4580                           ;sm_MenuConfiguration_MC50.c: 370:                 {;sm_MenuConfiguration_MC50.c: 371:  
      +                                             menu_st.lastMainParameterSelected++;
  4581  0016C4  2B69               	incf	(_menu_st+24)& (0+255),f,b
  4582                           
  4583                           ; BSR set to: 1
  4584                           ;sm_MenuConfiguration_MC50.c: 372:                     load_New_Menu(menu_st.lastMenu);
  4585  0016C6  5165               	movf	(_menu_st+20)& (0+255),w,b
  4586  0016C8  EC74  F01E         	call	_load_New_Menu
  4587                           
  4588                           ;sm_MenuConfiguration_MC50.c: 373:                 }
  4589  0016CC  0012               	return	
  4590  0016CE                     l22488:
  4591                           
  4592                           ; BSR set to: 1
  4593                           ;sm_MenuConfiguration_MC50.c: 375:                 {;sm_MenuConfiguration_MC50.c: 376:  
      +                                             load_New_Menu(menu_st.actualMenu);
  4594  0016CE  5166               	movf	(_menu_st+21)& (0+255),w,b
  4595  0016D0  EC74  F01E         	call	_load_New_Menu
  4596  0016D4  0012               	return	
  4597  0016D6                     l22490:
  4598                           
  4599                           ; BSR set to: 0
  4600                           ;sm_MenuConfiguration_MC50.c: 382:         {;sm_MenuConfiguration_MC50.c: 383:          
      +                             if(ts_system.timeoutMenu<=0)
  4601  0016D6  0101               	movlb	1	; () banked
  4602  0016D8  BFA9               	btfsc	(_ts_system+15)& (0+255),7,b	;volatile
  4603  0016DA  D005               	goto	u27260
  4604  0016DC  51A9               	movf	(_ts_system+15)& (0+255),w,b	;volatile
  4605  0016DE  E102               	bnz	u27261
  4606  0016E0  05A8               	decf	(_ts_system+14)& (0+255),w,b	;volatile
  4607  0016E2  B0D8               	btfsc	status,0,c
  4608  0016E4                     u27261:
  4609  0016E4  0012               	return	
  4610  0016E6                     u27260:
  4611                           
  4612                           ; BSR set to: 1
  4613                           ;sm_MenuConfiguration_MC50.c: 384:             {;sm_MenuConfiguration_MC50.c: 386:      
      +                                     if(auxCounter<=0){
  4614  0016E6  0100               	movlb	0	; () banked
  4615  0016E8  51F8               	movf	_auxCounter& (0+255),w,b
  4616  0016EA  11F9               	iorwf	(_auxCounter+1)& (0+255),w,b
  4617  0016EC  A4D8               	btfss	status,2,c
  4618  0016EE  D010               	goto	l22500
  4619                           
  4620                           ; BSR set to: 0
  4621                           ;sm_MenuConfiguration_MC50.c: 387:                     menu_st.lastMainParameterSelected
      +                          ++;
  4622  0016F0  0101               	movlb	1	; () banked
  4623  0016F2  2B69               	incf	(_menu_st+24)& (0+255),f,b
  4624                           
  4625                           ; BSR set to: 1
  4626                           ;sm_MenuConfiguration_MC50.c: 388:                     load_New_Menu(menu_st.actualMenu)
      +                          ;
  4627  0016F4  5166               	movf	(_menu_st+21)& (0+255),w,b
  4628  0016F6  EC74  F01E         	call	_load_New_Menu
  4629                           
  4630                           ;sm_MenuConfiguration_MC50.c: 389:                     sm_send_event(&menuConfiguration_
      +                          stateMachine, ev_ParameterIsSaved);
  4631  0016FA  0EBD               	movlw	low _menuConfiguration_stateMachine
  4632  0016FC  6E12               	movwf	sm_send_event@psm^0,c
  4633  0016FE  0E02               	movlw	high _menuConfiguration_stateMachine
  4634  001700  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4635  001702  0E00               	movlw	0
  4636  001704  6E15               	movwf	(sm_send_event@event+1)^0,c
  4637  001706  0E04               	movlw	4
  4638  001708  6E14               	movwf	sm_send_event@event^0,c
  4639  00170A  EC1C  F041         	call	_sm_send_event	;wreg free
  4640                           
  4641                           ;sm_MenuConfiguration_MC50.c: 390:                 }
  4642  00170E  0012               	return	
  4643  001710                     l22500:
  4644                           
  4645                           ; BSR set to: 0
  4646                           ;sm_MenuConfiguration_MC50.c: 392:                 {;sm_MenuConfiguration_MC50.c: 393:  
      +                                             ts_system.timeoutMenu=(1000/50)*3;
  4647  001710  0E00               	movlw	0
  4648  001712  0101               	movlb	1	; () banked
  4649  001714  6FA9               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4650  001716  0E3C               	movlw	60
  4651  001718  6FA8               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4652                           
  4653                           ; BSR set to: 1
  4654                           ;sm_MenuConfiguration_MC50.c: 394:                     edit_Param.tempValue=(unsigned ch
      +                          ar)(tempCounter/auxCounter);
  4655  00171A  C1F9  F010         	movff	_tempCounter,___lldiv@dividend
  4656  00171E  C1FA  F011         	movff	_tempCounter+1,___lldiv@dividend+1
  4657  001722  C1FB  F012         	movff	_tempCounter+2,___lldiv@dividend+2
  4658  001726  C1FC  F013         	movff	_tempCounter+3,___lldiv@dividend+3
  4659  00172A  C0F8  F014         	movff	_auxCounter,___lldiv@divisor
  4660  00172E  C0F9  F015         	movff	_auxCounter+1,___lldiv@divisor+1
  4661  001732  6A16               	clrf	(___lldiv@divisor+2)^0,c
  4662  001734  6A17               	clrf	(___lldiv@divisor+3)^0,c
  4663  001736  EC19  F03D         	call	___lldiv	;wreg free
  4664  00173A  5010               	movf	?___lldiv^0,w,c
  4665  00173C  6E49               	movwf	(_edit_Param+3)^0,c	;volatile
  4666                           
  4667                           ;sm_MenuConfiguration_MC50.c: 395:                     tempCounter=tempCounter-(tempCoun
      +                          ter/auxCounter*auxCounter);
  4668  00173E  C0F8  F014         	movff	_auxCounter,___lldiv@divisor
  4669  001742  C0F9  F015         	movff	_auxCounter+1,___lldiv@divisor+1
  4670  001746  6A16               	clrf	(___lldiv@divisor+2)^0,c
  4671  001748  6A17               	clrf	(___lldiv@divisor+3)^0,c
  4672  00174A  C1F9  F010         	movff	_tempCounter,___lldiv@dividend
  4673  00174E  C1FA  F011         	movff	_tempCounter+1,___lldiv@dividend+1
  4674  001752  C1FB  F012         	movff	_tempCounter+2,___lldiv@dividend+2
  4675  001756  C1FC  F013         	movff	_tempCounter+3,___lldiv@dividend+3
  4676  00175A  EC19  F03D         	call	___lldiv	;wreg free
  4677  00175E  C010  F01D         	movff	?___lldiv,___lmul@multiplier
  4678  001762  C011  F01E         	movff	?___lldiv+1,___lmul@multiplier+1
  4679  001766  C012  F01F         	movff	?___lldiv+2,___lmul@multiplier+2
  4680  00176A  C013  F020         	movff	?___lldiv+3,___lmul@multiplier+3
  4681  00176E  C0F8  F021         	movff	_auxCounter,___lmul@multiplicand
  4682  001772  C0F9  F022         	movff	_auxCounter+1,___lmul@multiplicand+1
  4683  001776  6A23               	clrf	(___lmul@multiplicand+2)^0,c
  4684  001778  6A24               	clrf	(___lmul@multiplicand+3)^0,c
  4685  00177A  EC2A  F042         	call	___lmul	;wreg free
  4686  00177E  501D               	movf	?___lmul^0,w,c
  4687  001780  0101               	movlb	1	; () banked
  4688  001782  5DF9               	subwf	_tempCounter& (0+255),w,b
  4689  001784  6FF9               	movwf	_tempCounter& (0+255),b
  4690  001786  501E               	movf	(?___lmul+1)^0,w,c
  4691  001788  59FA               	subwfb	(_tempCounter+1)& (0+255),w,b
  4692  00178A  6FFA               	movwf	(_tempCounter+1)& (0+255),b
  4693  00178C  501F               	movf	(?___lmul+2)^0,w,c
  4694  00178E  59FB               	subwfb	(_tempCounter+2)& (0+255),w,b
  4695  001790  6FFB               	movwf	(_tempCounter+2)& (0+255),b
  4696  001792  5020               	movf	(?___lmul+3)^0,w,c
  4697  001794  59FC               	subwfb	(_tempCounter+3)& (0+255),w,b
  4698  001796  6FFC               	movwf	(_tempCounter+3)& (0+255),b
  4699                           
  4700                           ; BSR set to: 1
  4701                           ;sm_MenuConfiguration_MC50.c: 396:                     auxCounter=auxCounter/100;
  4702  001798  C0F8  F010         	movff	_auxCounter,___lwdiv@dividend
  4703  00179C  C0F9  F011         	movff	_auxCounter+1,___lwdiv@dividend+1
  4704  0017A0  0E00               	movlw	0
  4705  0017A2  6E13               	movwf	(___lwdiv@divisor+1)^0,c
  4706  0017A4  0E64               	movlw	100
  4707  0017A6  6E12               	movwf	___lwdiv@divisor^0,c
  4708  0017A8  ECAA  F042         	call	___lwdiv	;wreg free
  4709  0017AC  C010  F0F8         	movff	?___lwdiv,_auxCounter
  4710  0017B0  C011  F0F9         	movff	?___lwdiv+1,_auxCounter+1
  4711                           
  4712                           ;sm_MenuConfiguration_MC50.c: 397:                     SetSegmentValueIntermitentMain(ed
      +                          it_Param.tempValue/10, edit_Param.tempValue-((edit_Param.tempValue/10)*10),( 500/50));
  4713  0017B4  0E0A               	movlw	10
  4714  0017B6  6E10               	movwf	___lbdiv@divisor^0,c
  4715  0017B8  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4716  0017BA  ECE0  F044         	call	___lbdiv
  4717  0017BE  0DF6               	mullw	246
  4718  0017C0  50F3               	movf	243,w,c
  4719  0017C2  2449               	addwf	(_edit_Param+3)^0,w,c	;volatile
  4720  0017C4  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  4721  0017C6  0E00               	movlw	0
  4722  0017C8  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  4723  0017CA  0E0A               	movlw	10
  4724  0017CC  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  4725  0017CE  0E0A               	movlw	10
  4726  0017D0  6E10               	movwf	___lbdiv@divisor^0,c
  4727  0017D2  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4728  0017D4  ECE0  F044         	call	___lbdiv
  4729  0017D8  EC70  F048         	call	_SetSegmentValueIntermitentMain
  4730  0017DC  0012               	return	
  4731  0017DE                     l22510:
  4732                           
  4733                           ; BSR set to: 0
  4734                           ;sm_MenuConfiguration_MC50.c: 403:         {;sm_MenuConfiguration_MC50.c: 404:          
      +                             if(firstselectflag==1){
  4735  0017DE  0101               	movlb	1	; () banked
  4736  0017E0  05FD               	decf	_firstselectflag& (0+255),w,b
  4737  0017E2  A4D8               	btfss	status,2,c
  4738  0017E4  D004               	goto	l22514
  4739                           
  4740                           ; BSR set to: 1
  4741                           ;sm_MenuConfiguration_MC50.c: 405:                 edit_Param.tempValue=0;
  4742  0017E6  0E00               	movlw	0
  4743  0017E8  6E49               	movwf	(_edit_Param+3)^0,c	;volatile
  4744                           
  4745                           ;sm_MenuConfiguration_MC50.c: 406:                 firstselectflag=0;
  4746  0017EA  0E00               	movlw	0
  4747  0017EC  6FFD               	movwf	_firstselectflag& (0+255),b
  4748  0017EE                     l22514:
  4749                           
  4750                           ; BSR set to: 1
  4751                           ;sm_MenuConfiguration_MC50.c: 408:             controlSelectRemote();
  4752  0017EE  EC66  F019         	call	_controlSelectRemote	;wreg free
  4753                           
  4754                           ;sm_MenuConfiguration_MC50.c: 409:         };sm_MenuConfiguration_MC50.c: 410:         b
      +                          reak;
  4755  0017F2  0012               	return	
  4756  0017F4                     l22516:
  4757                           
  4758                           ; BSR set to: 0
  4759                           ;sm_MenuConfiguration_MC50.c: 412:         {;sm_MenuConfiguration_MC50.c: 413:          
      +                             controlSaveRemote();
  4760  0017F4  ECBC  F038         	call	_controlSaveRemote	;wreg free
  4761                           
  4762                           ;sm_MenuConfiguration_MC50.c: 414:         };sm_MenuConfiguration_MC50.c: 415:         b
      +                          reak;
  4763  0017F8  0012               	return	
  4764  0017FA                     l22518:
  4765                           
  4766                           ; BSR set to: 0
  4767                           ;sm_MenuConfiguration_MC50.c: 417:         {;sm_MenuConfiguration_MC50.c: 418:          
      +                             controlLearnDigit();
  4768  0017FA  EC65  F045         	call	_controlLearnDigit	;wreg free
  4769                           
  4770                           ;sm_MenuConfiguration_MC50.c: 419:             if(var_sys.LearningIsEnabled==NO)
  4771  0017FE  0101               	movlb	1	; () banked
  4772  001800  5126               	movf	(_var_sys+38)& (0+255),w,b	;volatile
  4773  001802  A4D8               	btfss	status,2,c
  4774  001804  0012               	return	
  4775                           
  4776                           ; BSR set to: 1
  4777                           ;sm_MenuConfiguration_MC50.c: 420:             {;sm_MenuConfiguration_MC50.c: 421:      
      +                                     sm_send_event(&main_stateMachine, ev_goto_StandBy);
  4778  001806  0EED               	movlw	low _main_stateMachine
  4779  001808  6E12               	movwf	sm_send_event@psm^0,c
  4780  00180A  0E01               	movlw	high _main_stateMachine
  4781  00180C  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4782  00180E  0E00               	movlw	0
  4783  001810  6E15               	movwf	(sm_send_event@event+1)^0,c
  4784  001812  0E07               	movlw	7
  4785  001814  6E14               	movwf	sm_send_event@event^0,c
  4786  001816  EC1C  F041         	call	_sm_send_event	;wreg free
  4787                           
  4788                           ;sm_MenuConfiguration_MC50.c: 422:                 sm_send_event(&menuConfiguration_stat
      +                          eMachine, ev_ParameterIsSaved);
  4789  00181A  0EBD               	movlw	low _menuConfiguration_stateMachine
  4790  00181C  6E12               	movwf	sm_send_event@psm^0,c
  4791  00181E  0E02               	movlw	high _menuConfiguration_stateMachine
  4792  001820  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4793  001822  0E00               	movlw	0
  4794  001824  6E15               	movwf	(sm_send_event@event+1)^0,c
  4795  001826  0E04               	movlw	4
  4796  001828  6E14               	movwf	sm_send_event@event^0,c
  4797  00182A  EC1C  F041         	call	_sm_send_event	;wreg free
  4798                           
  4799                           ;sm_MenuConfiguration_MC50.c: 423:                 SetSegmentValueMain(dMinus,dMinus);
  4800  00182E  0E18               	movlw	24
  4801  001830  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4802  001832  0E18               	movlw	24
  4803  001834  ECD4  F047         	call	_SetSegmentValueMain
  4804                           
  4805                           ; BSR set to: 0
  4806                           ;sm_MenuConfiguration_MC50.c: 424:                 SaveNVM_VarSystem(pageMemoryCounters)
      +                          ;
  4807  001838  0E02               	movlw	2
  4808  00183A  ECFD  F044         	call	_SaveNVM_VarSystem
  4809  00183E  D5E9               	goto	l22356
  4810  001840                     l22534:
  4811  001840  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  4812  001844  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  4813  001848  50DF               	movf	indf2,w,c
  4814  00184A  0100               	movlb	0	; () banked
  4815  00184C  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  4816  00184E  6BEC               	clrf	(??_sm_execute_menuConfiguration+1)& (0+255),b
  4817                           
  4818                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4819                           ; Switch size 1, requested type "simple"
  4820                           ; Number of cases is 1, Range of values is 0 to 0
  4821                           ; switch strategies available:
  4822                           ; Name         Instructions Cycles
  4823                           ; simple_byte            4     3 (average)
  4824                           ;	Chosen strategy is simple_byte
  4825  001850  51EC               	movf	(??_sm_execute_menuConfiguration+1)& (0+255),w,b
  4826  001852  0A00               	xorlw	0	; case 0
  4827  001854  A4D8               	btfss	status,2,c
  4828  001856  0012               	return	
  4829                           
  4830                           ; BSR set to: 0
  4831                           ; Switch size 1, requested type "simple"
  4832                           ; Number of cases is 7, Range of values is 0 to 6
  4833                           ; switch strategies available:
  4834                           ; Name         Instructions Cycles
  4835                           ; simple_byte           22    12 (average)
  4836                           ;	Chosen strategy is simple_byte
  4837  001858  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  4838  00185A  0A00               	xorlw	0	; case 0
  4839  00185C  B4D8               	btfsc	status,2,c
  4840  00185E  D431               	goto	l22224
  4841  001860  0A01               	xorlw	1	; case 1
  4842  001862  B4D8               	btfsc	status,2,c
  4843  001864  D5FC               	goto	l22374
  4844  001866  0A03               	xorlw	3	; case 2
  4845  001868  B4D8               	btfsc	status,2,c
  4846  00186A  D6CF               	goto	l22442
  4847  00186C  0A01               	xorlw	1	; case 3
  4848  00186E  B4D8               	btfsc	status,2,c
  4849  001870  D732               	goto	l22490
  4850  001872  0A07               	xorlw	7	; case 4
  4851  001874  B4D8               	btfsc	status,2,c
  4852  001876  D7B3               	goto	l22510
  4853  001878  0A01               	xorlw	1	; case 5
  4854  00187A  B4D8               	btfsc	status,2,c
  4855  00187C  D7BB               	goto	l22516
  4856  00187E  0A03               	xorlw	3	; case 6
  4857  001880  A4D8               	btfss	status,2,c
  4858  001882  0012               	return	
  4859  001884  D7BA               	goto	l22518
  4860  001886                     __end_of_sm_execute_menuConfiguration:
  4861                           	callstack 0
  4862                           
  4863 ;; *************** function _setValueToEdit *****************
  4864 ;; Defined at:
  4865 ;;		line 648 in file "sm_MenuConfiguration_MC50.c"
  4866 ;; Parameters:    Size  Location     Type
  4867 ;;  menuType        1    wreg     enum E10813
  4868 ;;  ParameterSel    1   57[COMRAM] unsigned char 
  4869 ;; Auto vars:     Size  Location     Type
  4870 ;;  menuType        1    6[BANK0 ] enum E10813
  4871 ;;  posindex        1    7[BANK0 ] unsigned char 
  4872 ;;  haveValueToE    1    8[BANK0 ] unsigned char 
  4873 ;; Return value:  Size  Location     Type
  4874 ;;                  1    wreg      unsigned char 
  4875 ;; Registers used:
  4876 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4877 ;; Tracked objects:
  4878 ;;		On entry : 3F/1
  4879 ;;		On exit  : 3F/0
  4880 ;;		Unchanged: 0/0
  4881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4882 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4883 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4884 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4885 ;;      Totals:         1       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4886 ;;Total ram usage:        6 bytes
  4887 ;; Hardware stack levels used: 1
  4888 ;; Hardware stack levels required when called: 14
  4889 ;; This function calls:
  4890 ;;		_InitReceiver
  4891 ;;		_SaveNVM_VarSystem
  4892 ;;		_cmdMemoryIsEmpty
  4893 ;;		_load_New_Menu
  4894 ;;		_sm_send_event
  4895 ;; This function is called by:
  4896 ;;		_sm_execute_menuConfiguration
  4897 ;; This function uses a non-reentrant model
  4898 ;;
  4899                           
  4900                           	psect	text3
  4901  0029A4                     __ptext3:
  4902                           	callstack 0
  4903  0029A4                     _setValueToEdit:
  4904                           	callstack 14
  4905                           
  4906                           ;incstack = 0
  4907                           ;setValueToEdit@menuType stored from wreg
  4908  0029A4  0100               	movlb	0	; () banked
  4909  0029A6  6FDE               	movwf	setValueToEdit@menuType& (0+255),b
  4910                           
  4911                           ;sm_MenuConfiguration_MC50.c: 649:     char haveValueToEdit=0;
  4912  0029A8  0E00               	movlw	0
  4913  0029AA  0100               	movlb	0	; () banked
  4914  0029AC  6FE0               	movwf	setValueToEdit@haveValueToEdit& (0+255),b
  4915                           
  4916                           ;sm_MenuConfiguration_MC50.c: 652:     switch (menuType)
  4917  0029AE  D250               	goto	l20782
  4918  0029B0                     l3353:
  4919                           
  4920                           ; BSR set to: 0
  4921                           ;sm_MenuConfiguration_MC50.c: 655:         {;sm_MenuConfiguration_MC50.c: 656:          
      +                             menu_st.lastMainParameterSelected= menu_st.parameterSelected;
  4922  0029B0  C168  F169         	movff	_menu_st+23,_menu_st+24
  4923                           
  4924                           ; BSR set to: 0
  4925                           ;sm_MenuConfiguration_MC50.c: 657:             edit_Param.Min=0;
  4926  0029B4  0E00               	movlw	0
  4927  0029B6  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  4928                           
  4929                           ;sm_MenuConfiguration_MC50.c: 658:             switch (ParameterSelected)
  4930  0029B8  D034               	goto	l20540
  4931  0029BA                     l20494:
  4932                           
  4933                           ; BSR set to: 0
  4934                           ;sm_MenuConfiguration_MC50.c: 661:                 {;sm_MenuConfiguration_MC50.c: 662:  
      +                                             load_New_Menu(P0_SMenu);
  4935  0029BA  0E04               	movlw	4
  4936  0029BC  EC74  F01E         	call	_load_New_Menu
  4937                           
  4938                           ;sm_MenuConfiguration_MC50.c: 664:                 };sm_MenuConfiguration_MC50.c: 665:  
      +                                         break;
  4939  0029C0  D270               	goto	l20784
  4940  0029C2                     l20496:
  4941                           
  4942                           ; BSR set to: 0
  4943                           ;sm_MenuConfiguration_MC50.c: 667:                 {;sm_MenuConfiguration_MC50.c: 668:  
      +                                             load_New_Menu(P1_SMenu);
  4944  0029C2  0E05               	movlw	5
  4945  0029C4  EC74  F01E         	call	_load_New_Menu
  4946                           
  4947                           ;sm_MenuConfiguration_MC50.c: 669:                 };sm_MenuConfiguration_MC50.c: 670:  
      +                                         break;
  4948  0029C8  D26C               	goto	l20784
  4949  0029CA                     l20498:
  4950                           
  4951                           ; BSR set to: 0
  4952                           ;sm_MenuConfiguration_MC50.c: 672:                 {;sm_MenuConfiguration_MC50.c: 673:  
      +                                             load_New_Menu(P2_SMenu);
  4953  0029CA  0E06               	movlw	6
  4954  0029CC  EC74  F01E         	call	_load_New_Menu
  4955                           
  4956                           ;sm_MenuConfiguration_MC50.c: 674:                 };sm_MenuConfiguration_MC50.c: 675:  
      +                                         break;
  4957  0029D0  D268               	goto	l20784
  4958  0029D2                     l20500:
  4959                           
  4960                           ; BSR set to: 0
  4961                           ;sm_MenuConfiguration_MC50.c: 677:                 {;sm_MenuConfiguration_MC50.c: 678:  
      +                                             edit_Param.Max=99;
  4962  0029D2  0E63               	movlw	99
  4963  0029D4  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  4964                           
  4965                           ; BSR set to: 0
  4966                           ;sm_MenuConfiguration_MC50.c: 680:                     edit_Param.tempValue=var_sys_NVM.
      +                          walkTime;
  4967  0029D6  C09C  F049         	movff	_var_sys_NVM+4,_edit_Param+3	;volatile
  4968                           
  4969                           ; BSR set to: 0
  4970                           ;sm_MenuConfiguration_MC50.c: 681:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.walkTime;
  4971  0029DA  0E9C               	movlw	low (_var_sys_NVM+4)
  4972  0029DC                     L13:
  4973  0029DC  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  4974  0029DE  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  4975                           
  4976                           ; BSR set to: 0
  4977                           ;sm_MenuConfiguration_MC50.c: 682:                     haveValueToEdit=1;
  4978  0029E0  0E01               	movlw	1
  4979  0029E2  6FE0               	movwf	setValueToEdit@haveValueToEdit& (0+255),b
  4980                           
  4981                           ;sm_MenuConfiguration_MC50.c: 683:                 };sm_MenuConfiguration_MC50.c: 684:  
      +                                         break;
  4982  0029E4  D25E               	goto	l20784
  4983  0029E6                     l20508:
  4984                           
  4985                           ; BSR set to: 0
  4986                           ;sm_MenuConfiguration_MC50.c: 686:                 {;sm_MenuConfiguration_MC50.c: 687:  
      +                                             load_New_Menu(P4_SMenu);
  4987  0029E6  0E07               	movlw	7
  4988  0029E8  EC74  F01E         	call	_load_New_Menu
  4989                           
  4990                           ;sm_MenuConfiguration_MC50.c: 688:                 };sm_MenuConfiguration_MC50.c: 689:  
      +                                         break;
  4991  0029EC  D25A               	goto	l20784
  4992  0029EE                     l20510:
  4993                           
  4994                           ; BSR set to: 0
  4995                           ;sm_MenuConfiguration_MC50.c: 691:                 {;sm_MenuConfiguration_MC50.c: 692:  
      +                                             load_New_Menu(P5_SMenu);
  4996  0029EE  0E08               	movlw	8
  4997  0029F0  EC74  F01E         	call	_load_New_Menu
  4998                           
  4999                           ;sm_MenuConfiguration_MC50.c: 693:                 };sm_MenuConfiguration_MC50.c: 694:  
      +                                         break;
  5000  0029F4  D256               	goto	l20784
  5001  0029F6                     l20512:
  5002                           
  5003                           ; BSR set to: 0
  5004                           ;sm_MenuConfiguration_MC50.c: 696:                 {;sm_MenuConfiguration_MC50.c: 697:  
      +                                             load_New_Menu(P6_SMenu);
  5005  0029F6  0E09               	movlw	9
  5006  0029F8  EC74  F01E         	call	_load_New_Menu
  5007                           
  5008                           ;sm_MenuConfiguration_MC50.c: 698:                 };sm_MenuConfiguration_MC50.c: 699:  
      +                                         break;
  5009  0029FC  D252               	goto	l20784
  5010  0029FE                     l20514:
  5011                           
  5012                           ; BSR set to: 0
  5013                           ;sm_MenuConfiguration_MC50.c: 701:                 {;sm_MenuConfiguration_MC50.c: 702:  
      +                                             edit_Param.Max=2;
  5014  0029FE  0E02               	movlw	2
  5015  002A00  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5016                           
  5017                           ; BSR set to: 0
  5018                           ;sm_MenuConfiguration_MC50.c: 704:                     edit_Param.tempValue=var_sys_NVM.
      +                          operationMode;
  5019  002A02  C0A4  F049         	movff	_var_sys_NVM+12,_edit_Param+3	;volatile
  5020                           
  5021                           ; BSR set to: 0
  5022                           ;sm_MenuConfiguration_MC50.c: 705:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.operationMode;
  5023  002A06  0EA4               	movlw	low (_var_sys_NVM+12)
  5024  002A08  D7E9               	goto	L13
  5025  002A0A                     l20522:
  5026                           
  5027                           ; BSR set to: 0
  5028                           ;sm_MenuConfiguration_MC50.c: 710:                 {;sm_MenuConfiguration_MC50.c: 711:  
      +                                             edit_Param.Max=3;
  5029  002A0A  0E03               	movlw	3
  5030  002A0C  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5031                           
  5032                           ; BSR set to: 0
  5033                           ;sm_MenuConfiguration_MC50.c: 713:                     edit_Param.tempValue=var_sys_NVM.
      +                          flashLightMode;
  5034  002A0E  C0A5  F049         	movff	_var_sys_NVM+13,_edit_Param+3	;volatile
  5035                           
  5036                           ; BSR set to: 0
  5037                           ;sm_MenuConfiguration_MC50.c: 714:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.flashLightMode;
  5038  002A12  0EA5               	movlw	low (_var_sys_NVM+13)
  5039  002A14  D7E3               	goto	L13
  5040  002A16                     l20530:
  5041                           
  5042                           ; BSR set to: 0
  5043                           ;sm_MenuConfiguration_MC50.c: 719:                 {;sm_MenuConfiguration_MC50.c: 720:  
      +                                             edit_Param.Max=1;
  5044  002A16  0E01               	movlw	1
  5045  002A18  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5046                           
  5047                           ; BSR set to: 0
  5048                           ;sm_MenuConfiguration_MC50.c: 722:                     edit_Param.tempValue=var_sys_NVM.
      +                          programmingDistance;
  5049  002A1A  C0A6  F049         	movff	_var_sys_NVM+14,_edit_Param+3	;volatile
  5050                           
  5051                           ; BSR set to: 0
  5052                           ;sm_MenuConfiguration_MC50.c: 723:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.programmingDistance;
  5053  002A1E  0EA6               	movlw	low (_var_sys_NVM+14)
  5054  002A20  D7DD               	goto	L13
  5055  002A22                     l20540:
  5056                           
  5057                           ; BSR set to: 0
  5058  002A22  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5059  002A24  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5060  002A26  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5061                           
  5062                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5063                           ; Switch size 1, requested type "simple"
  5064                           ; Number of cases is 1, Range of values is 0 to 0
  5065                           ; switch strategies available:
  5066                           ; Name         Instructions Cycles
  5067                           ; simple_byte            4     3 (average)
  5068                           ;	Chosen strategy is simple_byte
  5069  002A28  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5070  002A2A  0A00               	xorlw	0	; case 0
  5071  002A2C  A4D8               	btfss	status,2,c
  5072  002A2E  D239               	goto	l20784
  5073                           
  5074                           ; BSR set to: 0
  5075                           ; Switch size 1, requested type "simple"
  5076                           ; Number of cases is 10, Range of values is 0 to 9
  5077                           ; switch strategies available:
  5078                           ; Name         Instructions Cycles
  5079                           ; simple_byte           31    16 (average)
  5080                           ;	Chosen strategy is simple_byte
  5081  002A30  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5082  002A32  0A00               	xorlw	0	; case 0
  5083  002A34  B4D8               	btfsc	status,2,c
  5084  002A36  D7C1               	goto	l20494
  5085  002A38  0A01               	xorlw	1	; case 1
  5086  002A3A  B4D8               	btfsc	status,2,c
  5087  002A3C  D7C2               	goto	l20496
  5088  002A3E  0A03               	xorlw	3	; case 2
  5089  002A40  B4D8               	btfsc	status,2,c
  5090  002A42  D7C3               	goto	l20498
  5091  002A44  0A01               	xorlw	1	; case 3
  5092  002A46  B4D8               	btfsc	status,2,c
  5093  002A48  D7C4               	goto	l20500
  5094  002A4A  0A07               	xorlw	7	; case 4
  5095  002A4C  B4D8               	btfsc	status,2,c
  5096  002A4E  D7CB               	goto	l20508
  5097  002A50  0A01               	xorlw	1	; case 5
  5098  002A52  B4D8               	btfsc	status,2,c
  5099  002A54  D7CC               	goto	l20510
  5100  002A56  0A03               	xorlw	3	; case 6
  5101  002A58  B4D8               	btfsc	status,2,c
  5102  002A5A  D7CD               	goto	l20512
  5103  002A5C  0A01               	xorlw	1	; case 7
  5104  002A5E  B4D8               	btfsc	status,2,c
  5105  002A60  D7CE               	goto	l20514
  5106  002A62  0A0F               	xorlw	15	; case 8
  5107  002A64  B4D8               	btfsc	status,2,c
  5108  002A66  D7D1               	goto	l20522
  5109  002A68  0A01               	xorlw	1	; case 9
  5110  002A6A  B4D8               	btfsc	status,2,c
  5111  002A6C  D7D4               	goto	l20530
  5112  002A6E  D219               	goto	l20784
  5113  002A70                     l3367:
  5114                           
  5115                           ; BSR set to: 0
  5116                           ;sm_MenuConfiguration_MC50.c: 733:         {;sm_MenuConfiguration_MC50.c: 734:          
      +                             menu_st.lastMainParameterSelected= menu_st.parameterSelected;
  5117  002A70  C168  F169         	movff	_menu_st+23,_menu_st+24
  5118                           
  5119                           ; BSR set to: 0
  5120                           ;sm_MenuConfiguration_MC50.c: 735:             edit_Param.Max=1;
  5121  002A74  0E01               	movlw	1
  5122  002A76  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5123                           
  5124                           ;sm_MenuConfiguration_MC50.c: 736:             edit_Param.Min=0;
  5125  002A78  0E00               	movlw	0
  5126  002A7A  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5127                           
  5128                           ;sm_MenuConfiguration_MC50.c: 737:             switch (ParameterSelected)
  5129  002A7C  D057               	goto	l20596
  5130  002A7E                     l20544:
  5131                           
  5132                           ; BSR set to: 0
  5133                           ;sm_MenuConfiguration_MC50.c: 740:                 {;sm_MenuConfiguration_MC50.c: 741:  
      +                                             load_New_Menu(E0_SMenu);
  5134  002A7E  0E0A               	movlw	10
  5135  002A80  EC74  F01E         	call	_load_New_Menu
  5136                           
  5137                           ;sm_MenuConfiguration_MC50.c: 742:                 };sm_MenuConfiguration_MC50.c: 743:  
      +                                         break;
  5138  002A84  D20E               	goto	l20784
  5139  002A86                     l20546:
  5140                           
  5141                           ; BSR set to: 0
  5142                           ;sm_MenuConfiguration_MC50.c: 745:                 {;sm_MenuConfiguration_MC50.c: 748:  
      +                                             load_New_Menu(E1_SMenu);
  5143  002A86  0E0B               	movlw	11
  5144  002A88  EC74  F01E         	call	_load_New_Menu
  5145                           
  5146                           ;sm_MenuConfiguration_MC50.c: 750:                 };sm_MenuConfiguration_MC50.c: 751:  
      +                                         break;
  5147  002A8C  D20A               	goto	l20784
  5148  002A8E                     l20548:
  5149                           
  5150                           ; BSR set to: 0
  5151                           ;sm_MenuConfiguration_MC50.c: 753:                 {;sm_MenuConfiguration_MC50.c: 754:  
      +                                             edit_Param.Max=99;
  5152  002A8E  0E63               	movlw	99
  5153  002A90  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5154                           
  5155                           ; BSR set to: 0
  5156                           ;sm_MenuConfiguration_MC50.c: 756:                     edit_Param.tempValue=var_sys_NVM.
      +                          ligthTime;
  5157  002A92  C0AC  F049         	movff	_var_sys_NVM+20,_edit_Param+3	;volatile
  5158                           
  5159                           ; BSR set to: 0
  5160                           ;sm_MenuConfiguration_MC50.c: 757:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.ligthTime;
  5161  002A96  0EAC               	movlw	low (_var_sys_NVM+20)
  5162  002A98  D7A1               	goto	L13
  5163  002A9A                     l20556:
  5164                           
  5165                           ; BSR set to: 0
  5166                           ;sm_MenuConfiguration_MC50.c: 762:                 {;sm_MenuConfiguration_MC50.c: 763:  
      +                                            edit_Param.Max=9;
  5167  002A9A  0E09               	movlw	9
  5168  002A9C  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5169                           
  5170                           ;sm_MenuConfiguration_MC50.c: 764:                    edit_Param.Min=1;
  5171  002A9E  0E01               	movlw	1
  5172  002AA0  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5173                           
  5174                           ; BSR set to: 0
  5175                           ;sm_MenuConfiguration_MC50.c: 765:                    edit_Param.tempValue=var_sys_NVM.f
      +                          olow_me;
  5176  002AA2  C0AD  F049         	movff	_var_sys_NVM+21,_edit_Param+3	;volatile
  5177                           
  5178                           ; BSR set to: 0
  5179                           ;sm_MenuConfiguration_MC50.c: 766:                    edit_Param.Value=(unsigned char*)&
      +                          var_sys_NVM.folow_me;
  5180  002AA6  0EAD               	movlw	low (_var_sys_NVM+21)
  5181  002AA8  D799               	goto	L13
  5182  002AAA                     l3375:
  5183                           
  5184                           ; BSR set to: 0
  5185                           ;sm_MenuConfiguration_MC50.c: 778:                 {;sm_MenuConfiguration_MC50.c: 779:  
      +                                            edit_Param.tempValue=var_sys_NVM.electricBrake;
  5186  002AAA  C0AF  F049         	movff	_var_sys_NVM+23,_edit_Param+3	;volatile
  5187                           
  5188                           ; BSR set to: 0
  5189                           ;sm_MenuConfiguration_MC50.c: 780:                    edit_Param.Value=(unsigned char*)&
      +                          var_sys_NVM.electricBrake;
  5190  002AAE  0EAF               	movlw	low (_var_sys_NVM+23)
  5191  002AB0  D795               	goto	L13
  5192  002AB2                     l20568:
  5193                           
  5194                           ; BSR set to: 0
  5195                           ;sm_MenuConfiguration_MC50.c: 785:                 {;sm_MenuConfiguration_MC50.c: 786:  
      +                                             edit_Param.Max=9;
  5196  002AB2  0E09               	movlw	9
  5197  002AB4  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5198                           
  5199                           ;sm_MenuConfiguration_MC50.c: 787:                     edit_Param.Min=1;
  5200  002AB6  0E01               	movlw	1
  5201  002AB8  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5202                           
  5203                           ; BSR set to: 0
  5204                           ;sm_MenuConfiguration_MC50.c: 788:                     edit_Param.tempValue=var_sys_NVM.
      +                          velocityDecelaration;
  5205  002ABA  C0B0  F049         	movff	_var_sys_NVM+24,_edit_Param+3	;volatile
  5206                           
  5207                           ; BSR set to: 0
  5208                           ;sm_MenuConfiguration_MC50.c: 789:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.velocityDecelaration;
  5209  002ABE  0EB0               	movlw	low (_var_sys_NVM+24)
  5210  002AC0  D78D               	goto	L13
  5211  002AC2                     l20576:
  5212                           
  5213                           ; BSR set to: 0
  5214                           ;sm_MenuConfiguration_MC50.c: 794:                 {;sm_MenuConfiguration_MC50.c: 795:  
      +                                             edit_Param.tempValue=0;
  5215  002AC2  0E00               	movlw	0
  5216  002AC4  6E49               	movwf	(_edit_Param+3)^0,c	;volatile
  5217                           
  5218                           ;sm_MenuConfiguration_MC50.c: 796:                     ts_system.timeoutMenu=0;
  5219  002AC6  0E00               	movlw	0
  5220  002AC8  0101               	movlb	1	; () banked
  5221  002ACA  6FA9               	movwf	(_ts_system+15)& (0+255),b	;volatile
  5222  002ACC  0E00               	movlw	0
  5223  002ACE  6FA8               	movwf	(_ts_system+14)& (0+255),b	;volatile
  5224                           
  5225                           ;sm_MenuConfiguration_MC50.c: 798:                     auxCounter=10000;
  5226  002AD0  0E27               	movlw	39
  5227  002AD2  0100               	movlb	0	; () banked
  5228  002AD4  6FF9               	movwf	(_auxCounter+1)& (0+255),b
  5229  002AD6  0E10               	movlw	16
  5230  002AD8  6FF8               	movwf	_auxCounter& (0+255),b
  5231                           
  5232                           ;sm_MenuConfiguration_MC50.c: 799:                     ts_system.timeBetweenSaveCounters
      +                          =0;
  5233  002ADA  0E00               	movlw	0
  5234  002ADC  0101               	movlb	1	; () banked
  5235  002ADE  6FC1               	movwf	(_ts_system+39)& (0+255),b	;volatile
  5236  002AE0  0E00               	movlw	0
  5237  002AE2  6FC0               	movwf	(_ts_system+38)& (0+255),b	;volatile
  5238                           
  5239                           ; BSR set to: 1
  5240                           ;sm_MenuConfiguration_MC50.c: 800:                     tempCounter=var_sys.actualCounter
      +                          Moves;
  5241  002AE4  C13C  F1F9         	movff	_var_sys+60,_tempCounter	;volatile
  5242  002AE8  C13D  F1FA         	movff	_var_sys+61,_tempCounter+1	;volatile
  5243  002AEC  C13E  F1FB         	movff	_var_sys+62,_tempCounter+2	;volatile
  5244  002AF0  C13F  F1FC         	movff	_var_sys+63,_tempCounter+3	;volatile
  5245                           
  5246                           ; BSR set to: 1
  5247                           ;sm_MenuConfiguration_MC50.c: 801:                     sm_send_event(&menuConfiguration_
      +                          stateMachine, ev_showCounter);
  5248  002AF4  0EBD               	movlw	low _menuConfiguration_stateMachine
  5249  002AF6  6E12               	movwf	sm_send_event@psm^0,c
  5250  002AF8  0E02               	movlw	high _menuConfiguration_stateMachine
  5251  002AFA  6E13               	movwf	(sm_send_event@psm+1)^0,c
  5252  002AFC  0E00               	movlw	0
  5253  002AFE  6E15               	movwf	(sm_send_event@event+1)^0,c
  5254  002B00  0E05               	movlw	5
  5255  002B02  6E14               	movwf	sm_send_event@event^0,c
  5256  002B04  EC1C  F041         	call	_sm_send_event	;wreg free
  5257                           
  5258                           ;sm_MenuConfiguration_MC50.c: 802:                 };sm_MenuConfiguration_MC50.c: 803:  
      +                                         break;
  5259  002B08  D1CC               	goto	l20784
  5260  002B0A                     l20582:
  5261                           
  5262                           ; BSR set to: 0
  5263                           ;sm_MenuConfiguration_MC50.c: 805:                 {;sm_MenuConfiguration_MC50.c: 806:  
      +                                             edit_Param.tempValue=0;
  5264  002B0A  0E00               	movlw	0
  5265  002B0C  6E49               	movwf	(_edit_Param+3)^0,c	;volatile
  5266                           
  5267                           ;sm_MenuConfiguration_MC50.c: 807:                     haveValueToEdit=1;
  5268  002B0E  0E01               	movlw	1
  5269  002B10  6FE0               	movwf	setValueToEdit@haveValueToEdit& (0+255),b
  5270                           
  5271                           ; BSR set to: 0
  5272                           ;sm_MenuConfiguration_MC50.c: 808:                     edit_Param.Value = 0;
  5273  002B12  0E00               	movlw	0
  5274  002B14  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5275  002B16  0E00               	movlw	0
  5276  002B18  6E48               	movwf	(_edit_Param+2)^0,c	;volatile
  5277                           
  5278                           ;sm_MenuConfiguration_MC50.c: 809:                 };sm_MenuConfiguration_MC50.c: 810:  
      +                                         break;
  5279  002B1A  D1C3               	goto	l20784
  5280  002B1C                     l20586:
  5281                           
  5282                           ; BSR set to: 0
  5283                           ;sm_MenuConfiguration_MC50.c: 812:                 {;sm_MenuConfiguration_MC50.c: 813:  
      +                                             edit_Param.Max=3;
  5284  002B1C  0E03               	movlw	3
  5285  002B1E  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5286                           
  5287                           ;sm_MenuConfiguration_MC50.c: 814:                     edit_Param.Min=0;
  5288  002B20  0E00               	movlw	0
  5289  002B22  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5290                           
  5291                           ; BSR set to: 0
  5292                           ;sm_MenuConfiguration_MC50.c: 815:                     edit_Param.tempValue=var_sys_NVM.
      +                          flashRGBMode;
  5293  002B24  C0B1  F049         	movff	_var_sys_NVM+25,_edit_Param+3	;volatile
  5294                           
  5295                           ; BSR set to: 0
  5296                           ;sm_MenuConfiguration_MC50.c: 816:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.flashRGBMode;
  5297  002B28  0EB1               	movlw	low (_var_sys_NVM+25)
  5298  002B2A  D758               	goto	L13
  5299  002B2C                     l20596:
  5300                           
  5301                           ; BSR set to: 0
  5302  002B2C  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5303  002B2E  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5304  002B30  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5305                           
  5306                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5307                           ; Switch size 1, requested type "simple"
  5308                           ; Number of cases is 1, Range of values is 0 to 0
  5309                           ; switch strategies available:
  5310                           ; Name         Instructions Cycles
  5311                           ; simple_byte            4     3 (average)
  5312                           ;	Chosen strategy is simple_byte
  5313  002B32  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5314  002B34  0A00               	xorlw	0	; case 0
  5315  002B36  A4D8               	btfss	status,2,c
  5316  002B38  D1B4               	goto	l20784
  5317                           
  5318                           ; BSR set to: 0
  5319                           ; Switch size 1, requested type "simple"
  5320                           ; Number of cases is 10, Range of values is 0 to 9
  5321                           ; switch strategies available:
  5322                           ; Name         Instructions Cycles
  5323                           ; simple_byte           31    16 (average)
  5324                           ;	Chosen strategy is simple_byte
  5325  002B3A  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5326  002B3C  0A00               	xorlw	0	; case 0
  5327  002B3E  B4D8               	btfsc	status,2,c
  5328  002B40  D79E               	goto	l20544
  5329  002B42  0A01               	xorlw	1	; case 1
  5330  002B44  B4D8               	btfsc	status,2,c
  5331  002B46  D79F               	goto	l20546
  5332  002B48  0A03               	xorlw	3	; case 2
  5333  002B4A  B4D8               	btfsc	status,2,c
  5334  002B4C  D7A0               	goto	l20548
  5335  002B4E  0A01               	xorlw	1	; case 3
  5336  002B50  B4D8               	btfsc	status,2,c
  5337  002B52  D7A3               	goto	l20556
  5338  002B54  0A07               	xorlw	7	; case 4
  5339  002B56  B4D8               	btfsc	status,2,c
  5340  002B58  D1A4               	goto	l20784
  5341  002B5A  0A01               	xorlw	1	; case 5
  5342  002B5C  B4D8               	btfsc	status,2,c
  5343  002B5E  D7A5               	goto	l3375
  5344  002B60  0A03               	xorlw	3	; case 6
  5345  002B62  B4D8               	btfsc	status,2,c
  5346  002B64  D7A6               	goto	l20568
  5347  002B66  0A01               	xorlw	1	; case 7
  5348  002B68  B4D8               	btfsc	status,2,c
  5349  002B6A  D7AB               	goto	l20576
  5350  002B6C  0A0F               	xorlw	15	; case 8
  5351  002B6E  B4D8               	btfsc	status,2,c
  5352  002B70  D7CC               	goto	l20582
  5353  002B72  0A01               	xorlw	1	; case 9
  5354  002B74  B4D8               	btfsc	status,2,c
  5355  002B76  D7D2               	goto	l20586
  5356  002B78  D194               	goto	l20784
  5357  002B7A                     l20598:
  5358                           
  5359                           ; BSR set to: 0
  5360                           ;sm_MenuConfiguration_MC50.c: 829:                 {;sm_MenuConfiguration_MC50.c: 830:  
      +                                          sm_send_event(&menuConfiguration_stateMachine, ev_SartLearning);
  5361  002B7A  0EBD               	movlw	low _menuConfiguration_stateMachine
  5362  002B7C  6E12               	movwf	sm_send_event@psm^0,c
  5363  002B7E  0E02               	movlw	high _menuConfiguration_stateMachine
  5364  002B80  6E13               	movwf	(sm_send_event@psm+1)^0,c
  5365  002B82  0E00               	movlw	0
  5366  002B84  6E15               	movwf	(sm_send_event@event+1)^0,c
  5367  002B86  0E14               	movlw	20
  5368  002B88  6E14               	movwf	sm_send_event@event^0,c
  5369  002B8A  EC1C  F041         	call	_sm_send_event	;wreg free
  5370                           
  5371                           ;sm_MenuConfiguration_MC50.c: 831:                  sm_send_event(&controlGate_stateMach
      +                          ine,ev_SartLearning );
  5372  002B8E  0EE2               	movlw	low _controlGate_stateMachine
  5373  002B90  6E12               	movwf	sm_send_event@psm^0,c
  5374  002B92  0E01               	movlw	high _controlGate_stateMachine
  5375  002B94  6E13               	movwf	(sm_send_event@psm+1)^0,c
  5376  002B96  0E00               	movlw	0
  5377  002B98  6E15               	movwf	(sm_send_event@event+1)^0,c
  5378  002B9A  0E14               	movlw	20
  5379  002B9C  6E14               	movwf	sm_send_event@event^0,c
  5380  002B9E  EC1C  F041         	call	_sm_send_event	;wreg free
  5381                           
  5382                           ;sm_MenuConfiguration_MC50.c: 832:                  var_sys.LearningIsEnabled=YES;
  5383  002BA2  0E01               	movlw	1
  5384  002BA4  0101               	movlb	1	; () banked
  5385  002BA6  6F26               	movwf	(_var_sys+38)& (0+255),b	;volatile
  5386                           
  5387                           ; BSR set to: 1
  5388                           ;sm_MenuConfiguration_MC50.c: 833:                  var_sys.programinAutomatic = Automat
      +                          ic;
  5389  002BA8  0E00               	movlw	0
  5390  002BAA  6F2A               	movwf	(_var_sys+42)& (0+255),b	;volatile
  5391                           
  5392                           ; BSR set to: 1
  5393                           ;sm_MenuConfiguration_MC50.c: 834:                  SaveNVM_VarSystem(pageMemoryE);
  5394  002BAC  0E01               	movlw	1
  5395  002BAE  ECFD  F044         	call	_SaveNVM_VarSystem
  5396                           
  5397                           ;sm_MenuConfiguration_MC50.c: 837:                 };sm_MenuConfiguration_MC50.c: 838:  
      +                                         break;
  5398  002BB2  D177               	goto	l20784
  5399  002BB4                     l20606:
  5400                           
  5401                           ; BSR set to: 0
  5402                           ;sm_MenuConfiguration_MC50.c: 840:                 {;sm_MenuConfiguration_MC50.c: 841:  
      +                                          sm_send_event(&menuConfiguration_stateMachine, ev_SartLearning);
  5403  002BB4  0EBD               	movlw	low _menuConfiguration_stateMachine
  5404  002BB6  6E12               	movwf	sm_send_event@psm^0,c
  5405  002BB8  0E02               	movlw	high _menuConfiguration_stateMachine
  5406  002BBA  6E13               	movwf	(sm_send_event@psm+1)^0,c
  5407  002BBC  0E00               	movlw	0
  5408  002BBE  6E15               	movwf	(sm_send_event@event+1)^0,c
  5409  002BC0  0E14               	movlw	20
  5410  002BC2  6E14               	movwf	sm_send_event@event^0,c
  5411  002BC4  EC1C  F041         	call	_sm_send_event	;wreg free
  5412                           
  5413                           ;sm_MenuConfiguration_MC50.c: 842:                  sm_send_event(&controlGate_stateMach
      +                          ine, ev_SartLearning);
  5414  002BC8  0EE2               	movlw	low _controlGate_stateMachine
  5415  002BCA  6E12               	movwf	sm_send_event@psm^0,c
  5416  002BCC  0E01               	movlw	high _controlGate_stateMachine
  5417  002BCE  6E13               	movwf	(sm_send_event@psm+1)^0,c
  5418  002BD0  0E00               	movlw	0
  5419  002BD2  6E15               	movwf	(sm_send_event@event+1)^0,c
  5420  002BD4  0E14               	movlw	20
  5421  002BD6  6E14               	movwf	sm_send_event@event^0,c
  5422  002BD8  EC1C  F041         	call	_sm_send_event	;wreg free
  5423                           
  5424                           ;sm_MenuConfiguration_MC50.c: 843:                  var_sys.LearningIsEnabled=YES;
  5425  002BDC  0E01               	movlw	1
  5426  002BDE  0101               	movlb	1	; () banked
  5427  002BE0  6F26               	movwf	(_var_sys+38)& (0+255),b	;volatile
  5428                           
  5429                           ; BSR set to: 1
  5430                           ;sm_MenuConfiguration_MC50.c: 844:                  var_sys.programinAutomatic = Manual;
  5431  002BE2  0E01               	movlw	1
  5432  002BE4  6F2A               	movwf	(_var_sys+42)& (0+255),b	;volatile
  5433                           
  5434                           ; BSR set to: 1
  5435                           ;sm_MenuConfiguration_MC50.c: 845:                  SaveNVM_VarSystem(pageMemoryE);
  5436  002BE6  0E01               	movlw	1
  5437  002BE8  ECFD  F044         	call	_SaveNVM_VarSystem
  5438                           
  5439                           ;sm_MenuConfiguration_MC50.c: 848:                 };sm_MenuConfiguration_MC50.c: 849:  
      +                                         break;
  5440  002BEC  D15A               	goto	l20784
  5441  002BEE                     l3385:
  5442                           
  5443                           ; BSR set to: 0
  5444                           ;sm_MenuConfiguration_MC50.c: 851:                 {;sm_MenuConfiguration_MC50.c: 852:  
      +                                          edit_Param.tempValue=var_sys_NVM.TypeofMotor;
  5445  002BEE  C0B4  F049         	movff	_var_sys_NVM+28,_edit_Param+3	;volatile
  5446                           
  5447                           ; BSR set to: 0
  5448                           ;sm_MenuConfiguration_MC50.c: 853:                  load_New_Menu(TypeMotor_Menu);
  5449  002BF2  0E03               	movlw	3
  5450  002BF4  EC74  F01E         	call	_load_New_Menu
  5451                           
  5452                           ;sm_MenuConfiguration_MC50.c: 854:                  edit_Param.Value=(unsigned char*)&va
      +                          r_sys_NVM.TypeofMotor;
  5453  002BF8  0EB4               	movlw	low (_var_sys_NVM+28)
  5454  002BFA  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5455  002BFC  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5456                           
  5457                           ;sm_MenuConfiguration_MC50.c: 855:                  haveValueToEdit=1;
  5458  002BFE  0E01               	movlw	1
  5459  002C00  0100               	movlb	0	; () banked
  5460  002C02  6FE0               	movwf	setValueToEdit@haveValueToEdit& (0+255),b
  5461                           
  5462                           ; BSR set to: 0
  5463                           ;sm_MenuConfiguration_MC50.c: 856:                  edit_Param.Max=2;
  5464  002C04  0E02               	movlw	2
  5465  002C06  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5466                           
  5467                           ; BSR set to: 0
  5468                           ;sm_MenuConfiguration_MC50.c: 857:                  edit_Param.Min=0;
  5469  002C08  0E00               	movlw	0
  5470  002C0A  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5471                           
  5472                           ;sm_MenuConfiguration_MC50.c: 859:                 };sm_MenuConfiguration_MC50.c: 860:  
      +                                         break;
  5473  002C0C  D14A               	goto	l20784
  5474  002C0E                     l3386:
  5475                           
  5476                           ; BSR set to: 0
  5477                           ;sm_MenuConfiguration_MC50.c: 862:                 {;sm_MenuConfiguration_MC50.c: 863:  
      +                                          edit_Param.tempValue=var_sys_NVM.Direction_motor;
  5478  002C0E  C0B3  F049         	movff	_var_sys_NVM+27,_edit_Param+3	;volatile
  5479                           
  5480                           ; BSR set to: 0
  5481                           ;sm_MenuConfiguration_MC50.c: 864:                  load_New_Menu(Direction_Menu);
  5482  002C12  0E02               	movlw	2
  5483  002C14  EC74  F01E         	call	_load_New_Menu
  5484                           
  5485                           ;sm_MenuConfiguration_MC50.c: 865:                  edit_Param.Value=(unsigned char*)&va
      +                          r_sys_NVM.Direction_motor;
  5486  002C18  0EB3               	movlw	low (_var_sys_NVM+27)
  5487  002C1A  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5488  002C1C  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5489                           
  5490                           ;sm_MenuConfiguration_MC50.c: 866:                  haveValueToEdit=1;
  5491  002C1E  0E01               	movlw	1
  5492  002C20  0100               	movlb	0	; () banked
  5493  002C22  6FE0               	movwf	setValueToEdit@haveValueToEdit& (0+255),b
  5494                           
  5495                           ; BSR set to: 0
  5496                           ;sm_MenuConfiguration_MC50.c: 867:                  edit_Param.Max=1;
  5497  002C24  0E01               	movlw	1
  5498  002C26  D7EF               	goto	L14
  5499  002C28                     l20636:
  5500                           
  5501                           ; BSR set to: 0
  5502  002C28  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5503  002C2A  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5504  002C2C  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5505                           
  5506                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5507                           ; Switch size 1, requested type "simple"
  5508                           ; Number of cases is 1, Range of values is 0 to 0
  5509                           ; switch strategies available:
  5510                           ; Name         Instructions Cycles
  5511                           ; simple_byte            4     3 (average)
  5512                           ;	Chosen strategy is simple_byte
  5513  002C2E  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5514  002C30  0A00               	xorlw	0	; case 0
  5515  002C32  A4D8               	btfss	status,2,c
  5516  002C34  D136               	goto	l20784
  5517                           
  5518                           ; BSR set to: 0
  5519                           ; Switch size 1, requested type "simple"
  5520                           ; Number of cases is 4, Range of values is 0 to 3
  5521                           ; switch strategies available:
  5522                           ; Name         Instructions Cycles
  5523                           ; simple_byte           13     7 (average)
  5524                           ;	Chosen strategy is simple_byte
  5525  002C36  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5526  002C38  0A00               	xorlw	0	; case 0
  5527  002C3A  B4D8               	btfsc	status,2,c
  5528  002C3C  D79E               	goto	l20598
  5529  002C3E  0A01               	xorlw	1	; case 1
  5530  002C40  B4D8               	btfsc	status,2,c
  5531  002C42  D7B8               	goto	l20606
  5532  002C44  0A03               	xorlw	3	; case 2
  5533  002C46  B4D8               	btfsc	status,2,c
  5534  002C48  D7D2               	goto	l3385
  5535  002C4A  0A01               	xorlw	1	; case 3
  5536  002C4C  B4D8               	btfsc	status,2,c
  5537  002C4E  D7DF               	goto	l3386
  5538  002C50  D128               	goto	l20784
  5539  002C52                     l20638:
  5540                           
  5541                           ; BSR set to: 0
  5542                           ;sm_MenuConfiguration_MC50.c: 883:                 {;sm_MenuConfiguration_MC50.c: 884:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.decelarationOpen;
  5543  002C52  0E98               	movlw	low _var_sys_NVM
  5544  002C54  D001               	goto	L15
  5545  002C56                     l20640:
  5546                           
  5547                           ; BSR set to: 0
  5548                           ;sm_MenuConfiguration_MC50.c: 888:                 {;sm_MenuConfiguration_MC50.c: 889:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.decelarationClose;
  5549  002C56  0E99               	movlw	low (_var_sys_NVM+1)
  5550  002C58                     L15:
  5551  002C58  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5552  002C5A  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5553                           
  5554                           ;sm_MenuConfiguration_MC50.c: 890:                 };sm_MenuConfiguration_MC50.c: 891:  
      +                                         break;
  5555  002C5C  D00E               	goto	l20646
  5556  002C5E                     l20644:
  5557                           
  5558                           ; BSR set to: 0
  5559  002C5E  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5560  002C60  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5561  002C62  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5562                           
  5563                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5564                           ; Switch size 1, requested type "simple"
  5565                           ; Number of cases is 1, Range of values is 0 to 0
  5566                           ; switch strategies available:
  5567                           ; Name         Instructions Cycles
  5568                           ; simple_byte            4     3 (average)
  5569                           ;	Chosen strategy is simple_byte
  5570  002C64  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5571  002C66  0A00               	xorlw	0	; case 0
  5572  002C68  A4D8               	btfss	status,2,c
  5573  002C6A  D007               	goto	l20646
  5574                           
  5575                           ; BSR set to: 0
  5576                           ; Switch size 1, requested type "simple"
  5577                           ; Number of cases is 2, Range of values is 0 to 1
  5578                           ; switch strategies available:
  5579                           ; Name         Instructions Cycles
  5580                           ; simple_byte            7     4 (average)
  5581                           ;	Chosen strategy is simple_byte
  5582  002C6C  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5583  002C6E  0A00               	xorlw	0	; case 0
  5584  002C70  B4D8               	btfsc	status,2,c
  5585  002C72  D7EF               	goto	l20638
  5586  002C74  0A01               	xorlw	1	; case 1
  5587  002C76  B4D8               	btfsc	status,2,c
  5588  002C78  D7EE               	goto	l20640
  5589  002C7A                     l20646:
  5590                           
  5591                           ; BSR set to: 0
  5592                           ;sm_MenuConfiguration_MC50.c: 895:                 edit_Param.Max=45;
  5593  002C7A  0E2D               	movlw	45
  5594  002C7C                     L29:
  5595  002C7C  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5596                           
  5597                           ;sm_MenuConfiguration_MC50.c: 896:                 edit_Param.Min=0;
  5598  002C7E  0E00               	movlw	0
  5599  002C80  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5600  002C82                     L19:
  5601                           
  5602                           ;sm_MenuConfiguration_MC50.c: 899:             haveValueToEdit=1;
  5603  002C82  0E01               	movlw	1
  5604  002C84  6FE0               	movwf	setValueToEdit@haveValueToEdit& (0+255),b
  5605                           
  5606                           ; BSR set to: 0
  5607                           ;sm_MenuConfiguration_MC50.c: 900:             edit_Param.tempValue= edit_Param.Value[0]
      +                          ;
  5608  002C86  C047  FFD9         	movff	_edit_Param+1,fsr2l	;volatile
  5609  002C8A  C048  FFDA         	movff	_edit_Param+2,fsr2h	;volatile
  5610  002C8E  50DF               	movf	indf2,w,c
  5611  002C90  6E49               	movwf	(_edit_Param+3)^0,c	;volatile
  5612                           
  5613                           ;sm_MenuConfiguration_MC50.c: 901:         };sm_MenuConfiguration_MC50.c: 902:         b
      +                          reak;
  5614  002C92  D107               	goto	l20784
  5615  002C94                     l20650:
  5616                           
  5617                           ; BSR set to: 0
  5618                           ;sm_MenuConfiguration_MC50.c: 904:         {;sm_MenuConfiguration_MC50.c: 905:          
      +                             edit_Param.Max=9;
  5619  002C94  0E09               	movlw	9
  5620  002C96  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5621                           
  5622                           ;sm_MenuConfiguration_MC50.c: 906:             edit_Param.Min=0;
  5623  002C98  0E00               	movlw	0
  5624  002C9A  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5625                           
  5626                           ;sm_MenuConfiguration_MC50.c: 907:             switch (ParameterSelected)
  5627  002C9C  D00F               	goto	l20666
  5628  002C9E                     l20652:
  5629                           
  5630                           ; BSR set to: 0
  5631                           ;sm_MenuConfiguration_MC50.c: 910:                 {;sm_MenuConfiguration_MC50.c: 911:  
      +                                               if (var_sys_NVM.motorSensitivity <2)
  5632  002C9E  0E02               	movlw	2
  5633  002CA0  619B               	cpfslt	(_var_sys_NVM+3)& (0+255),b	;volatile
  5634  002CA2  D002               	goto	l20656
  5635                           
  5636                           ; BSR set to: 0
  5637                           ;sm_MenuConfiguration_MC50.c: 912:                       {;sm_MenuConfiguration_MC50.c: 
      +                          913:                         edit_Param.Min=0;
  5638  002CA4  0E00               	movlw	0
  5639  002CA6  D001               	goto	L16
  5640  002CA8                     l20656:
  5641                           
  5642                           ; BSR set to: 0
  5643                           ;sm_MenuConfiguration_MC50.c: 916:                       {;sm_MenuConfiguration_MC50.c: 
      +                          917:                         edit_Param.Min=9;
  5644  002CA8  0E09               	movlw	9
  5645  002CAA                     L16:
  5646  002CAA  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5647                           
  5648                           ; BSR set to: 0
  5649                           ;sm_MenuConfiguration_MC50.c: 919:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.motorPower;
  5650  002CAC  0E9A               	movlw	low (_var_sys_NVM+2)
  5651  002CAE  D003               	goto	L18
  5652  002CB0                     l20660:
  5653                           
  5654                           ; BSR set to: 0
  5655                           ;sm_MenuConfiguration_MC50.c: 923:                 {;sm_MenuConfiguration_MC50.c: 924:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.motorSensitivity;
  5656  002CB0  0E9B               	movlw	low (_var_sys_NVM+3)
  5657  002CB2  D001               	goto	L18
  5658  002CB4                     l20662:
  5659                           
  5660                           ; BSR set to: 0
  5661                           ;sm_MenuConfiguration_MC50.c: 928:                 {;sm_MenuConfiguration_MC50.c: 929:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.decelarationSensivity;
  5662  002CB4  0EA7               	movlw	low (_var_sys_NVM+15)
  5663  002CB6                     L18:
  5664  002CB6  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5665  002CB8  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5666                           
  5667                           ;sm_MenuConfiguration_MC50.c: 930:                 };sm_MenuConfiguration_MC50.c: 931:  
      +                                         break;
  5668  002CBA  D7E3               	goto	L19
  5669  002CBC                     l20666:
  5670                           
  5671                           ; BSR set to: 0
  5672  002CBC  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5673  002CBE  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5674  002CC0  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5675                           
  5676                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5677                           ; Switch size 1, requested type "simple"
  5678                           ; Number of cases is 1, Range of values is 0 to 0
  5679                           ; switch strategies available:
  5680                           ; Name         Instructions Cycles
  5681                           ; simple_byte            4     3 (average)
  5682                           ;	Chosen strategy is simple_byte
  5683  002CC2  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5684  002CC4  0A00               	xorlw	0	; case 0
  5685  002CC6  A4D8               	btfss	status,2,c
  5686  002CC8  D7DC               	goto	L19
  5687                           
  5688                           ; BSR set to: 0
  5689                           ; Switch size 1, requested type "simple"
  5690                           ; Number of cases is 3, Range of values is 0 to 2
  5691                           ; switch strategies available:
  5692                           ; Name         Instructions Cycles
  5693                           ; simple_byte           10     6 (average)
  5694                           ;	Chosen strategy is simple_byte
  5695  002CCA  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5696  002CCC  0A00               	xorlw	0	; case 0
  5697  002CCE  B4D8               	btfsc	status,2,c
  5698  002CD0  D7E6               	goto	l20652
  5699  002CD2  0A01               	xorlw	1	; case 1
  5700  002CD4  B4D8               	btfsc	status,2,c
  5701  002CD6  D7EC               	goto	l20660
  5702  002CD8  0A03               	xorlw	3	; case 2
  5703  002CDA  B4D8               	btfsc	status,2,c
  5704  002CDC  D7EB               	goto	l20662
  5705  002CDE  D7D1               	goto	L19
  5706  002CE0                     l20672:
  5707                           
  5708                           ; BSR set to: 0
  5709                           ;sm_MenuConfiguration_MC50.c: 942:                 {;sm_MenuConfiguration_MC50.c: 943:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.autoTimeFullClose;
  5710  002CE0  0E9D               	movlw	low (_var_sys_NVM+5)
  5711  002CE2  D001               	goto	L20
  5712  002CE4                     l20674:
  5713                           
  5714                           ; BSR set to: 0
  5715                           ;sm_MenuConfiguration_MC50.c: 947:                 {;sm_MenuConfiguration_MC50.c: 948:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.autoTimeWalkClose;
  5716  002CE4  0E9E               	movlw	low (_var_sys_NVM+6)
  5717  002CE6                     L20:
  5718  002CE6  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5719  002CE8  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5720                           
  5721                           ;sm_MenuConfiguration_MC50.c: 949:                 };sm_MenuConfiguration_MC50.c: 950:  
      +                                         break;
  5722  002CEA  D00E               	goto	l20680
  5723  002CEC                     l20678:
  5724                           
  5725                           ; BSR set to: 0
  5726  002CEC  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5727  002CEE  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5728  002CF0  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5729                           
  5730                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5731                           ; Switch size 1, requested type "simple"
  5732                           ; Number of cases is 1, Range of values is 0 to 0
  5733                           ; switch strategies available:
  5734                           ; Name         Instructions Cycles
  5735                           ; simple_byte            4     3 (average)
  5736                           ;	Chosen strategy is simple_byte
  5737  002CF2  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5738  002CF4  0A00               	xorlw	0	; case 0
  5739  002CF6  A4D8               	btfss	status,2,c
  5740  002CF8  D007               	goto	l20680
  5741                           
  5742                           ; BSR set to: 0
  5743                           ; Switch size 1, requested type "simple"
  5744                           ; Number of cases is 2, Range of values is 0 to 1
  5745                           ; switch strategies available:
  5746                           ; Name         Instructions Cycles
  5747                           ; simple_byte            7     4 (average)
  5748                           ;	Chosen strategy is simple_byte
  5749  002CFA  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5750  002CFC  0A00               	xorlw	0	; case 0
  5751  002CFE  B4D8               	btfsc	status,2,c
  5752  002D00  D7EF               	goto	l20672
  5753  002D02  0A01               	xorlw	1	; case 1
  5754  002D04  B4D8               	btfsc	status,2,c
  5755  002D06  D7EE               	goto	l20674
  5756  002D08                     l20680:
  5757                           
  5758                           ; BSR set to: 0
  5759                           ;sm_MenuConfiguration_MC50.c: 952:             edit_Param.Max=99;
  5760  002D08  0E63               	movlw	99
  5761  002D0A  D7B8               	goto	L29
  5762  002D0C                     l20684:
  5763                           
  5764                           ; BSR set to: 0
  5765                           ;sm_MenuConfiguration_MC50.c: 963:                 {;sm_MenuConfiguration_MC50.c: 964:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.photoCellIsON;
  5766  002D0C  0E9F               	movlw	low (_var_sys_NVM+7)
  5767  002D0E  D034               	goto	L125
  5768  002D10                     l20686:
  5769                           
  5770                           ; BSR set to: 0
  5771                           ;sm_MenuConfiguration_MC50.c: 968:                 {;sm_MenuConfiguration_MC50.c: 969:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.photoCellInOpen;
  5772  002D10  0EA0               	movlw	low (_var_sys_NVM+8)
  5773  002D12  D032               	goto	L125
  5774  002D14                     l20690:
  5775                           
  5776                           ; BSR set to: 0
  5777  002D14  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5778  002D16  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5779  002D18  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5780                           
  5781                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5782                           ; Switch size 1, requested type "simple"
  5783                           ; Number of cases is 1, Range of values is 0 to 0
  5784                           ; switch strategies available:
  5785                           ; Name         Instructions Cycles
  5786                           ; simple_byte            4     3 (average)
  5787                           ;	Chosen strategy is simple_byte
  5788  002D1A  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5789  002D1C  0A00               	xorlw	0	; case 0
  5790  002D1E  A4D8               	btfss	status,2,c
  5791  002D20  D02D               	goto	L124
  5792                           
  5793                           ; BSR set to: 0
  5794                           ; Switch size 1, requested type "simple"
  5795                           ; Number of cases is 2, Range of values is 0 to 1
  5796                           ; switch strategies available:
  5797                           ; Name         Instructions Cycles
  5798                           ; simple_byte            7     4 (average)
  5799                           ;	Chosen strategy is simple_byte
  5800  002D22  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5801  002D24  0A00               	xorlw	0	; case 0
  5802  002D26  B4D8               	btfsc	status,2,c
  5803  002D28  D7F1               	goto	l20684
  5804  002D2A  0A01               	xorlw	1	; case 1
  5805  002D2C  B4D8               	btfsc	status,2,c
  5806  002D2E  D7F0               	goto	l20686
  5807  002D30  D025               	goto	L124
  5808  002D32                     l20696:
  5809                           
  5810                           ; BSR set to: 0
  5811                           ;sm_MenuConfiguration_MC50.c: 984:                 {;sm_MenuConfiguration_MC50.c: 985:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.securityBandIsON;
  5812  002D32  0EA1               	movlw	low (_var_sys_NVM+9)
  5813  002D34  D021               	goto	L125
  5814  002D36                     l20698:
  5815                           
  5816                           ; BSR set to: 0
  5817                           ;sm_MenuConfiguration_MC50.c: 989:                 {;sm_MenuConfiguration_MC50.c: 990:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.securityBandType;
  5818  002D36  0EA2               	movlw	low (_var_sys_NVM+10)
  5819  002D38  D01F               	goto	L125
  5820  002D3A                     l20700:
  5821                           
  5822                           ; BSR set to: 0
  5823                           ;sm_MenuConfiguration_MC50.c: 994:                 {;sm_MenuConfiguration_MC50.c: 995:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.securityBandInOpen;
  5824  002D3A  0EA3               	movlw	low (_var_sys_NVM+11)
  5825  002D3C  D01D               	goto	L125
  5826  002D3E                     l20702:
  5827                           
  5828                           ; BSR set to: 0
  5829                           ;sm_MenuConfiguration_MC50.c: 999:                 {;sm_MenuConfiguration_MC50.c: 1000: 
      +                                              edit_Param.Value=(unsigned char*)&var_sys_NVM.Stopboton;
  5830  002D3E  0EAE               	movlw	low (_var_sys_NVM+22)
  5831  002D40  D01B               	goto	L125
  5832  002D42                     l20706:
  5833                           
  5834                           ; BSR set to: 0
  5835  002D42  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5836  002D44  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5837  002D46  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5838                           
  5839                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5840                           ; Switch size 1, requested type "simple"
  5841                           ; Number of cases is 1, Range of values is 0 to 0
  5842                           ; switch strategies available:
  5843                           ; Name         Instructions Cycles
  5844                           ; simple_byte            4     3 (average)
  5845                           ;	Chosen strategy is simple_byte
  5846  002D48  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5847  002D4A  0A00               	xorlw	0	; case 0
  5848  002D4C  A4D8               	btfss	status,2,c
  5849  002D4E  D016               	goto	L124
  5850                           
  5851                           ; BSR set to: 0
  5852                           ; Switch size 1, requested type "simple"
  5853                           ; Number of cases is 4, Range of values is 0 to 3
  5854                           ; switch strategies available:
  5855                           ; Name         Instructions Cycles
  5856                           ; simple_byte           13     7 (average)
  5857                           ;	Chosen strategy is simple_byte
  5858  002D50  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5859  002D52  0A00               	xorlw	0	; case 0
  5860  002D54  B4D8               	btfsc	status,2,c
  5861  002D56  D7ED               	goto	l20696
  5862  002D58  0A01               	xorlw	1	; case 1
  5863  002D5A  B4D8               	btfsc	status,2,c
  5864  002D5C  D7EC               	goto	l20698
  5865  002D5E  0A03               	xorlw	3	; case 2
  5866  002D60  B4D8               	btfsc	status,2,c
  5867  002D62  D7EB               	goto	l20700
  5868  002D64  0A01               	xorlw	1	; case 3
  5869  002D66  B4D8               	btfsc	status,2,c
  5870  002D68  D7EA               	goto	l20702
  5871  002D6A  D008               	goto	L124
  5872  002D6C                     l20712:
  5873                           
  5874                           ; BSR set to: 0
  5875                           ;sm_MenuConfiguration_MC50.c: 1018:                 {;sm_MenuConfiguration_MC50.c: 1019:
      +                                               edit_Param.Value=(unsigned char*)&var_sys_NVM.homemPresente;
  5876  002D6C  0EA8               	movlw	low (_var_sys_NVM+16)
  5877  002D6E  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5878  002D70  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5879                           
  5880                           ; BSR set to: 0
  5881                           ;sm_MenuConfiguration_MC50.c: 1020:                       edit_Param.Max=2;
  5882  002D72  0E02               	movlw	2
  5883  002D74  D783               	goto	L29
  5884  002D76                     l20718:
  5885                           
  5886                           ; BSR set to: 0
  5887                           ;sm_MenuConfiguration_MC50.c: 1025:                 {;sm_MenuConfiguration_MC50.c: 1026:
      +                                               edit_Param.Value=(unsigned char*)&var_sys_NVM.logicDigital;
  5888  002D76  0EA9               	movlw	low (_var_sys_NVM+17)
  5889  002D78                     L125:
  5890  002D78  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5891  002D7A  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5892  002D7C                     L124:
  5893                           
  5894                           ; BSR set to: 0
  5895                           ;sm_MenuConfiguration_MC50.c: 1027:                     edit_Param.Max=1;
  5896  002D7C  0E01               	movlw	1
  5897  002D7E  D77E               	goto	L29
  5898  002D80                     l20726:
  5899                           
  5900                           ; BSR set to: 0
  5901  002D80  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5902  002D82  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5903  002D84  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5904                           
  5905                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5906                           ; Switch size 1, requested type "simple"
  5907                           ; Number of cases is 1, Range of values is 0 to 0
  5908                           ; switch strategies available:
  5909                           ; Name         Instructions Cycles
  5910                           ; simple_byte            4     3 (average)
  5911                           ;	Chosen strategy is simple_byte
  5912  002D86  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5913  002D88  0A00               	xorlw	0	; case 0
  5914  002D8A  A4D8               	btfss	status,2,c
  5915  002D8C  D77A               	goto	L19
  5916                           
  5917                           ; BSR set to: 0
  5918                           ; Switch size 1, requested type "simple"
  5919                           ; Number of cases is 2, Range of values is 0 to 1
  5920                           ; switch strategies available:
  5921                           ; Name         Instructions Cycles
  5922                           ; simple_byte            7     4 (average)
  5923                           ;	Chosen strategy is simple_byte
  5924  002D8E  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5925  002D90  0A00               	xorlw	0	; case 0
  5926  002D92  B4D8               	btfsc	status,2,c
  5927  002D94  D7EB               	goto	l20712
  5928  002D96  0A01               	xorlw	1	; case 1
  5929  002D98  B4D8               	btfsc	status,2,c
  5930  002D9A  D7ED               	goto	l20718
  5931  002D9C  D772               	goto	L19
  5932  002D9E                     l20732:
  5933                           
  5934                           ; BSR set to: 0
  5935                           ;sm_MenuConfiguration_MC50.c: 1042:                 {;sm_MenuConfiguration_MC50.c: 1043:
      +                                               edit_Param.Value=(unsigned char*)&var_sys_NVM.softStart;
  5936  002D9E  0EAA               	movlw	low (_var_sys_NVM+18)
  5937  002DA0  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5938  002DA2  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5939                           
  5940                           ; BSR set to: 0
  5941                           ;sm_MenuConfiguration_MC50.c: 1044:                      edit_Param.Max=9;
  5942  002DA4  0E09               	movlw	9
  5943  002DA6  D76A               	goto	L29
  5944  002DA8                     l20738:
  5945                           
  5946                           ; BSR set to: 0
  5947                           ;sm_MenuConfiguration_MC50.c: 1049:                 {;sm_MenuConfiguration_MC50.c: 1050:
      +                                               edit_Param.Value=(unsigned char*)&var_sys_NVM.softstop;
  5948  002DA8  0EAB               	movlw	low (_var_sys_NVM+19)
  5949  002DAA  D7FA               	goto	L27
  5950  002DAC                     l20746:
  5951                           
  5952                           ; BSR set to: 0
  5953  002DAC  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5954  002DAE  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5955  002DB0  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5956                           
  5957                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5958                           ; Switch size 1, requested type "simple"
  5959                           ; Number of cases is 1, Range of values is 0 to 0
  5960                           ; switch strategies available:
  5961                           ; Name         Instructions Cycles
  5962                           ; simple_byte            4     3 (average)
  5963                           ;	Chosen strategy is simple_byte
  5964  002DB2  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5965  002DB4  0A00               	xorlw	0	; case 0
  5966  002DB6  A4D8               	btfss	status,2,c
  5967  002DB8  D764               	goto	L19
  5968                           
  5969                           ; BSR set to: 0
  5970                           ; Switch size 1, requested type "simple"
  5971                           ; Number of cases is 2, Range of values is 0 to 1
  5972                           ; switch strategies available:
  5973                           ; Name         Instructions Cycles
  5974                           ; simple_byte            7     4 (average)
  5975                           ;	Chosen strategy is simple_byte
  5976  002DBA  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5977  002DBC  0A00               	xorlw	0	; case 0
  5978  002DBE  B4D8               	btfsc	status,2,c
  5979  002DC0  D7EE               	goto	l20732
  5980  002DC2  0A01               	xorlw	1	; case 1
  5981  002DC4  B4D8               	btfsc	status,2,c
  5982  002DC6  D7F0               	goto	l20738
  5983  002DC8  D75C               	goto	L19
  5984  002DCA                     l20752:
  5985                           
  5986                           ; BSR set to: 0
  5987                           ;sm_MenuConfiguration_MC50.c: 1068:                 {;sm_MenuConfiguration_MC50.c: 1069:
      +                                 edit_Param.Value=&value;
  5988  002DCA  0EF8               	movlw	low setValueToEdit@value
  5989  002DCC  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5990  002DCE  0E01               	movlw	high setValueToEdit@value
  5991  002DD0  6E48               	movwf	(_edit_Param+2)^0,c	;volatile
  5992                           
  5993                           ; BSR set to: 0
  5994                           ;sm_MenuConfiguration_MC50.c: 1070:                     for(unsigned char posindex=0; po
      +                          sindex <= *(unsigned char*)&var_sys_NVM.positionRemotesFull; posindex++)
  5995  002DD2  0E00               	movlw	0
  5996  002DD4  6FDF               	movwf	setValueToEdit@posindex& (0+255),b
  5997  002DD6  D00D               	goto	l20762
  5998  002DD8                     l3433:
  5999                           
  6000                           ; BSR set to: 0
  6001                           ;sm_MenuConfiguration_MC50.c: 1071:                     {;sm_MenuConfiguration_MC50.c: 1
      +                          072:                         value=posindex;
  6002  002DD8  C0DF  F1F8         	movff	setValueToEdit@posindex,setValueToEdit@value
  6003                           
  6004                           ; BSR set to: 0
  6005                           ;sm_MenuConfiguration_MC50.c: 1073:                         if(cmdMemoryIsEmpty(menu_st.
      +                          parameterSelected, posindex))
  6006  002DDC  C0DF  F02E         	movff	setValueToEdit@posindex,cmdMemoryIsEmpty@position
  6007  002DE0  0101               	movlb	1	; () banked
  6008  002DE2  5168               	movf	(_menu_st+23)& (0+255),w,b
  6009  002DE4  ECAA  F03A         	call	_cmdMemoryIsEmpty
  6010  002DE8  0900               	iorlw	0
  6011  002DEA  A4D8               	btfss	status,2,c
  6012  002DEC  D008               	goto	u23860
  6013                           
  6014                           ;sm_MenuConfiguration_MC50.c: 1075:                     }
  6015  002DEE  0100               	movlb	0	; () banked
  6016  002DF0  2BDF               	incf	setValueToEdit@posindex& (0+255),f,b
  6017  002DF2                     l20762:
  6018                           
  6019                           ; BSR set to: 0
  6020  002DF2  EE20  F0B8         	lfsr	2,_var_sys_NVM+32
  6021  002DF6  51DF               	movf	setValueToEdit@posindex& (0+255),w,b
  6022  002DF8  5CDE               	subwf	postinc2,w,c
  6023  002DFA  B0D8               	btfsc	status,0,c
  6024  002DFC  D7ED               	goto	l3433
  6025  002DFE                     u23860:
  6026                           
  6027                           ;sm_MenuConfiguration_MC50.c: 1076:                     edit_Param.Max=*(unsigned char*)
      +                          &var_sys_NVM.positionRemotesFull;
  6028  002DFE  EE20  F0B8         	lfsr	2,_var_sys_NVM+32
  6029  002E02  D005               	goto	L28
  6030  002E04                     l20766:
  6031                           
  6032                           ; BSR set to: 0
  6033                           ;sm_MenuConfiguration_MC50.c: 1080:                 {;sm_MenuConfiguration_MC50.c: 1081:
      +                                               edit_Param.Value=(unsigned char*)&var_sys_NVM.positionRemotesWalk;
  6034  002E04  0EB9               	movlw	low (_var_sys_NVM+33)
  6035  002E06  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  6036  002E08  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  6037                           
  6038                           ; BSR set to: 0
  6039                           ;sm_MenuConfiguration_MC50.c: 1082:       edit_Param.Max=*(unsigned char*)&var_sys_NVM.p
      +                          ositionRemotesWalk;
  6040  002E0A  EE20  F0B9         	lfsr	2,_var_sys_NVM+33
  6041  002E0E                     L28:
  6042  002E0E  50DF               	movf	indf2,w,c
  6043  002E10  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  6044                           
  6045                           ;sm_MenuConfiguration_MC50.c: 1083:                 };sm_MenuConfiguration_MC50.c: 1084:
      +                                           break;
  6046  002E12  D00E               	goto	l20774
  6047  002E14                     l20772:
  6048                           
  6049                           ; BSR set to: 0
  6050  002E14  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  6051  002E16  6FDC               	movwf	??_setValueToEdit& (0+255),b
  6052  002E18  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  6053                           
  6054                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6055                           ; Switch size 1, requested type "simple"
  6056                           ; Number of cases is 1, Range of values is 0 to 0
  6057                           ; switch strategies available:
  6058                           ; Name         Instructions Cycles
  6059                           ; simple_byte            4     3 (average)
  6060                           ;	Chosen strategy is simple_byte
  6061  002E1A  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  6062  002E1C  0A00               	xorlw	0	; case 0
  6063  002E1E  A4D8               	btfss	status,2,c
  6064  002E20  D007               	goto	l20774
  6065                           
  6066                           ; BSR set to: 0
  6067                           ; Switch size 1, requested type "simple"
  6068                           ; Number of cases is 2, Range of values is 0 to 1
  6069                           ; switch strategies available:
  6070                           ; Name         Instructions Cycles
  6071                           ; simple_byte            7     4 (average)
  6072                           ;	Chosen strategy is simple_byte
  6073  002E22  51DC               	movf	??_setValueToEdit& (0+255),w,b
  6074  002E24  0A00               	xorlw	0	; case 0
  6075  002E26  B4D8               	btfsc	status,2,c
  6076  002E28  D7D0               	goto	l20752
  6077  002E2A  0A01               	xorlw	1	; case 1
  6078  002E2C  B4D8               	btfsc	status,2,c
  6079  002E2E  D7EA               	goto	l20766
  6080  002E30                     l20774:
  6081                           
  6082                           ;sm_MenuConfiguration_MC50.c: 1086:             edit_Param.position=0;
  6083  002E30  0E00               	movlw	0
  6084  002E32  6E46               	movwf	_edit_Param^0,c	;volatile
  6085                           
  6086                           ;sm_MenuConfiguration_MC50.c: 1087:             edit_Param.Min=0;
  6087  002E34  0E00               	movlw	0
  6088  002E36  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  6089                           
  6090                           ;sm_MenuConfiguration_MC50.c: 1088:             haveValueToEdit=1;
  6091  002E38  0E01               	movlw	1
  6092  002E3A  0100               	movlb	0	; () banked
  6093  002E3C  6FE0               	movwf	setValueToEdit@haveValueToEdit& (0+255),b
  6094                           
  6095                           ; BSR set to: 0
  6096                           ;sm_MenuConfiguration_MC50.c: 1089:             edit_Param.tempValue=*edit_Param.Value;
  6097  002E3E  C047  FFD9         	movff	_edit_Param+1,fsr2l	;volatile
  6098  002E42  C048  FFDA         	movff	_edit_Param+2,fsr2h	;volatile
  6099  002E46  50DF               	movf	indf2,w,c
  6100  002E48  6E49               	movwf	(_edit_Param+3)^0,c	;volatile
  6101                           
  6102                           ; BSR set to: 0
  6103                           ;sm_MenuConfiguration_MC50.c: 1090:             InitReceiver();
  6104  002E4A  ECC7  F047         	call	_InitReceiver	;wreg free
  6105                           
  6106                           ;sm_MenuConfiguration_MC50.c: 1091:         };sm_MenuConfiguration_MC50.c: 1092:        
      +                           break;
  6107  002E4E  D029               	goto	l20784
  6108  002E50                     l20782:
  6109                           
  6110                           ; BSR set to: 0
  6111  002E50  51DE               	movf	setValueToEdit@menuType& (0+255),w,b
  6112  002E52  6FDC               	movwf	??_setValueToEdit& (0+255),b
  6113  002E54  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  6114                           
  6115                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6116                           ; Switch size 1, requested type "simple"
  6117                           ; Number of cases is 1, Range of values is 0 to 0
  6118                           ; switch strategies available:
  6119                           ; Name         Instructions Cycles
  6120                           ; simple_byte            4     3 (average)
  6121                           ;	Chosen strategy is simple_byte
  6122  002E56  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  6123  002E58  0A00               	xorlw	0	; case 0
  6124  002E5A  A4D8               	btfss	status,2,c
  6125  002E5C  D022               	goto	l20784
  6126                           
  6127                           ; BSR set to: 0
  6128                           ; Switch size 1, requested type "simple"
  6129                           ; Number of cases is 11, Range of values is 0 to 12
  6130                           ; switch strategies available:
  6131                           ; Name         Instructions Cycles
  6132                           ; simple_byte           34    18 (average)
  6133                           ;	Chosen strategy is simple_byte
  6134  002E5E  51DC               	movf	??_setValueToEdit& (0+255),w,b
  6135  002E60  0A00               	xorlw	0	; case 0
  6136  002E62  B4D8               	btfsc	status,2,c
  6137  002E64  D5A5               	goto	l3353
  6138  002E66  0A01               	xorlw	1	; case 1
  6139  002E68  B4D8               	btfsc	status,2,c
  6140  002E6A  D602               	goto	l3367
  6141  002E6C  0A05               	xorlw	5	; case 4
  6142  002E6E  B4D8               	btfsc	status,2,c
  6143  002E70  D6DB               	goto	l20636
  6144  002E72  0A01               	xorlw	1	; case 5
  6145  002E74  B4D8               	btfsc	status,2,c
  6146  002E76  D6F3               	goto	l20644
  6147  002E78  0A03               	xorlw	3	; case 6
  6148  002E7A  B4D8               	btfsc	status,2,c
  6149  002E7C  D70B               	goto	l20650
  6150  002E7E  0A01               	xorlw	1	; case 7
  6151  002E80  B4D8               	btfsc	status,2,c
  6152  002E82  D734               	goto	l20678
  6153  002E84  0A0F               	xorlw	15	; case 8
  6154  002E86  B4D8               	btfsc	status,2,c
  6155  002E88  D745               	goto	l20690
  6156  002E8A  0A01               	xorlw	1	; case 9
  6157  002E8C  B4D8               	btfsc	status,2,c
  6158  002E8E  D759               	goto	l20706
  6159  002E90  0A03               	xorlw	3	; case 10
  6160  002E92  B4D8               	btfsc	status,2,c
  6161  002E94  D775               	goto	l20726
  6162  002E96  0A01               	xorlw	1	; case 11
  6163  002E98  B4D8               	btfsc	status,2,c
  6164  002E9A  D788               	goto	l20746
  6165  002E9C  0A07               	xorlw	7	; case 12
  6166  002E9E  B4D8               	btfsc	status,2,c
  6167  002EA0  D7B9               	goto	l20772
  6168  002EA2                     l20784:
  6169                           
  6170                           ;sm_MenuConfiguration_MC50.c: 1095:     return haveValueToEdit;
  6171  002EA2  0100               	movlb	0	; () banked
  6172  002EA4  51E0               	movf	setValueToEdit@haveValueToEdit& (0+255),w,b
  6173                           
  6174                           ; BSR set to: 0
  6175  002EA6  0012               	return		;funcret
  6176  002EA8                     __end_of_setValueToEdit:
  6177                           	callstack 0
  6178                           
  6179 ;; *************** function _load_New_Menu *****************
  6180 ;; Defined at:
  6181 ;;		line 434 in file "sm_MenuConfiguration_MC50.c"
  6182 ;; Parameters:    Size  Location     Type
  6183 ;;  Menu            1    wreg     enum E10813
  6184 ;; Auto vars:     Size  Location     Type
  6185 ;;  Menu            1   33[COMRAM] enum E10813
  6186 ;;  i               1   34[COMRAM] unsigned char 
  6187 ;; Return value:  Size  Location     Type
  6188 ;;                  1    wreg      void 
  6189 ;; Registers used:
  6190 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6191 ;; Tracked objects:
  6192 ;;		On entry : 0/0
  6193 ;;		On exit  : 0/0
  6194 ;;		Unchanged: 0/0
  6195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6196 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6197 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6198 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6199 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6200 ;;Total ram usage:        4 bytes
  6201 ;; Hardware stack levels used: 1
  6202 ;; Hardware stack levels required when called: 5
  6203 ;; This function calls:
  6204 ;;		_SetSegmentValueIntermitentMain
  6205 ;;		_SetSegmentValueMain
  6206 ;; This function is called by:
  6207 ;;		_sm_execute_main
  6208 ;;		_sm_execute_menuConfiguration
  6209 ;;		_setValueToEdit
  6210 ;; This function uses a non-reentrant model
  6211 ;;
  6212                           
  6213                           	psect	text4
  6214  003CE8                     __ptext4:
  6215                           	callstack 0
  6216  003CE8                     _load_New_Menu:
  6217                           	callstack 22
  6218                           
  6219                           ; BSR set to: 0
  6220                           ;incstack = 0
  6221                           ;load_New_Menu@Menu stored from wreg
  6222  003CE8  6E22               	movwf	load_New_Menu@Menu^0,c
  6223                           
  6224                           ;sm_MenuConfiguration_MC50.c: 435:     ts_system.timeoutMenu=((1000/50)*5) ;
  6225  003CEA  0E00               	movlw	0
  6226  003CEC  0101               	movlb	1	; () banked
  6227  003CEE  6FA9               	movwf	(_ts_system+15)& (0+255),b	;volatile
  6228  003CF0  0E64               	movlw	100
  6229  003CF2  6FA8               	movwf	(_ts_system+14)& (0+255),b	;volatile
  6230                           
  6231                           ; BSR set to: 1
  6232                           ;sm_MenuConfiguration_MC50.c: 439:     if(menu_st.actualMenu!=Menu && Menu>E_Menu)
  6233  003CF4  5022               	movf	load_New_Menu@Menu^0,w,c
  6234  003CF6  1966               	xorwf	(_menu_st+21)& (0+255),w,b
  6235  003CF8  B4D8               	btfsc	status,2,c
  6236  003CFA  D006               	goto	l19794
  6237                           
  6238                           ; BSR set to: 1
  6239  003CFC  0E01               	movlw	1
  6240  003CFE  6422               	cpfsgt	load_New_Menu@Menu^0,c
  6241  003D00  D003               	goto	l19794
  6242                           
  6243                           ; BSR set to: 1
  6244                           ;sm_MenuConfiguration_MC50.c: 440:     {;sm_MenuConfiguration_MC50.c: 441:         menu_
      +                          st.parameterSelected=0;
  6245  003D02  0E00               	movlw	0
  6246  003D04  6F68               	movwf	(_menu_st+23)& (0+255),b
  6247                           
  6248                           ;sm_MenuConfiguration_MC50.c: 442:     }
  6249  003D06  D005               	goto	l19798
  6250  003D08                     l19794:
  6251                           
  6252                           ; BSR set to: 1
  6253  003D08  0E02               	movlw	2
  6254  003D0A  6022               	cpfslt	load_New_Menu@Menu^0,c
  6255  003D0C  D002               	goto	l19798
  6256                           
  6257                           ; BSR set to: 1
  6258                           ;sm_MenuConfiguration_MC50.c: 444:     {;sm_MenuConfiguration_MC50.c: 445:        menu_s
      +                          t.parameterSelected = menu_st.lastMainParameterSelected;
  6259  003D0E  C169  F168         	movff	_menu_st+24,_menu_st+23
  6260  003D12                     l19798:
  6261                           
  6262                           ; BSR set to: 1
  6263                           ;sm_MenuConfiguration_MC50.c: 449:     menu_st.lastMenu=((void*)0);
  6264  003D12  0E00               	movlw	0
  6265  003D14  6F65               	movwf	(_menu_st+20)& (0+255),b
  6266                           
  6267                           ;sm_MenuConfiguration_MC50.c: 450:     switch (Menu)
  6268  003D16  D0F6               	goto	l19850
  6269  003D18                     l19800:
  6270                           
  6271                           ; BSR set to: 1
  6272                           ;sm_MenuConfiguration_MC50.c: 453:         {;sm_MenuConfiguration_MC50.c: 455:          
      +                             menu_st.actualMenu=P_Menu;
  6273  003D18  0E00               	movlw	0
  6274  003D1A  6F66               	movwf	(_menu_st+21)& (0+255),b
  6275                           
  6276                           ;sm_MenuConfiguration_MC50.c: 456:             menu_st.menuSize=10;
  6277  003D1C  0E0A               	movlw	10
  6278  003D1E  6F67               	movwf	(_menu_st+22)& (0+255),b
  6279                           
  6280                           ;sm_MenuConfiguration_MC50.c: 457:             menu_st.lastMainParameterSelected=0;
  6281  003D20  0E00               	movlw	0
  6282  003D22  6F69               	movwf	(_menu_st+24)& (0+255),b
  6283                           
  6284                           ;sm_MenuConfiguration_MC50.c: 458:             for (i=0;i<(10);i++)
  6285  003D24  0E00               	movlw	0
  6286  003D26  6E23               	movwf	load_New_Menu@i^0,c
  6287  003D28                     l19806:
  6288                           
  6289                           ;sm_MenuConfiguration_MC50.c: 459:             {;sm_MenuConfiguration_MC50.c: 460:      
      +                                    menu_st.menuList[i].value_display1=dP;
  6290  003D28  5023               	movf	load_New_Menu@i^0,w,c
  6291  003D2A  0D02               	mullw	2
  6292  003D2C  0E51               	movlw	low _menu_st
  6293  003D2E  24F3               	addwf	243,w,c
  6294  003D30  6ED9               	movwf	fsr2l,c
  6295  003D32  0E01               	movlw	high _menu_st
  6296  003D34  20F4               	addwfc	prodh,w,c
  6297  003D36  6EDA               	movwf	fsr2h,c
  6298  003D38  0E10               	movlw	16
  6299  003D3A  6EDF               	movwf	indf2,c
  6300                           
  6301                           ;sm_MenuConfiguration_MC50.c: 461:                menu_st.menuList[i].value_display2=i;
  6302  003D3C  5023               	movf	load_New_Menu@i^0,w,c
  6303  003D3E  0D02               	mullw	2
  6304  003D40  0E52               	movlw	low (_menu_st+1)
  6305  003D42  24F3               	addwf	243,w,c
  6306  003D44  6ED9               	movwf	fsr2l,c
  6307  003D46  0E01               	movlw	high (_menu_st+1)
  6308  003D48  20F4               	addwfc	prodh,w,c
  6309  003D4A  6EDA               	movwf	fsr2h,c
  6310  003D4C  C023  FFDF         	movff	load_New_Menu@i,indf2
  6311                           
  6312                           ;sm_MenuConfiguration_MC50.c: 462:             }
  6313  003D50  2A23               	incf	load_New_Menu@i^0,f,c
  6314  003D52  0E09               	movlw	9
  6315  003D54  6423               	cpfsgt	load_New_Menu@i^0,c
  6316  003D56  D7E8               	goto	l19806
  6317  003D58  D107               	goto	l19852
  6318  003D5A                     l19812:
  6319                           
  6320                           ; BSR set to: 1
  6321                           ;sm_MenuConfiguration_MC50.c: 466:         {;sm_MenuConfiguration_MC50.c: 468:          
      +                             menu_st.actualMenu=E_Menu;
  6322  003D5A  0E01               	movlw	1
  6323  003D5C  6F66               	movwf	(_menu_st+21)& (0+255),b
  6324                           
  6325                           ;sm_MenuConfiguration_MC50.c: 469:             menu_st.menuSize=10;
  6326  003D5E  0E0A               	movlw	10
  6327  003D60  6F67               	movwf	(_menu_st+22)& (0+255),b
  6328                           
  6329                           ;sm_MenuConfiguration_MC50.c: 470:             menu_st.lastMainParameterSelected=0;
  6330  003D62  0E00               	movlw	0
  6331  003D64  6F69               	movwf	(_menu_st+24)& (0+255),b
  6332                           
  6333                           ;sm_MenuConfiguration_MC50.c: 471:             for (i=0;i<(10);i++)
  6334  003D66  0E00               	movlw	0
  6335  003D68  6E23               	movwf	load_New_Menu@i^0,c
  6336  003D6A                     l19818:
  6337                           
  6338                           ;sm_MenuConfiguration_MC50.c: 472:             {;sm_MenuConfiguration_MC50.c: 473:      
      +                                    menu_st.menuList[i].value_display1=dE;
  6339  003D6A  5023               	movf	load_New_Menu@i^0,w,c
  6340  003D6C  0D02               	mullw	2
  6341  003D6E  0E51               	movlw	low _menu_st
  6342  003D70  24F3               	addwf	243,w,c
  6343  003D72  6ED9               	movwf	fsr2l,c
  6344  003D74  0E01               	movlw	high _menu_st
  6345  003D76  20F4               	addwfc	prodh,w,c
  6346  003D78  6EDA               	movwf	fsr2h,c
  6347  003D7A  0E0E               	movlw	14
  6348  003D7C  6EDF               	movwf	indf2,c
  6349                           
  6350                           ;sm_MenuConfiguration_MC50.c: 474:                menu_st.menuList[i].value_display2=i;
  6351  003D7E  5023               	movf	load_New_Menu@i^0,w,c
  6352  003D80  0D02               	mullw	2
  6353  003D82  0E52               	movlw	low (_menu_st+1)
  6354  003D84  24F3               	addwf	243,w,c
  6355  003D86  6ED9               	movwf	fsr2l,c
  6356  003D88  0E01               	movlw	high (_menu_st+1)
  6357  003D8A  20F4               	addwfc	prodh,w,c
  6358  003D8C  6EDA               	movwf	fsr2h,c
  6359  003D8E  C023  FFDF         	movff	load_New_Menu@i,indf2
  6360                           
  6361                           ;sm_MenuConfiguration_MC50.c: 475:             }
  6362  003D92  2A23               	incf	load_New_Menu@i^0,f,c
  6363  003D94  0E09               	movlw	9
  6364  003D96  6423               	cpfsgt	load_New_Menu@i^0,c
  6365  003D98  D7E8               	goto	l19818
  6366  003D9A  D0E6               	goto	l19852
  6367  003D9C                     l19824:
  6368                           
  6369                           ; BSR set to: 1
  6370                           ;sm_MenuConfiguration_MC50.c: 479:         {;sm_MenuConfiguration_MC50.c: 480:          
      +                             menu_st.lastMenu=P_Menu;
  6371  003D9C  0E00               	movlw	0
  6372  003D9E  6F65               	movwf	(_menu_st+20)& (0+255),b
  6373                           
  6374                           ;sm_MenuConfiguration_MC50.c: 481:             menu_st.actualMenu=P0_SMenu;
  6375  003DA0  0E04               	movlw	4
  6376  003DA2  6F66               	movwf	(_menu_st+21)& (0+255),b
  6377                           
  6378                           ;sm_MenuConfiguration_MC50.c: 482:             menu_st.menuSize=4;
  6379  003DA4  0E04               	movlw	4
  6380  003DA6  6F67               	movwf	(_menu_st+22)& (0+255),b
  6381                           
  6382                           ;sm_MenuConfiguration_MC50.c: 483:             menu_st.menuList[0].value_display1=dA;
  6383  003DA8  0E0A               	movlw	10
  6384  003DAA  6F51               	movwf	_menu_st& (0+255),b
  6385                           
  6386                           ;sm_MenuConfiguration_MC50.c: 484:             menu_st.menuList[0].value_display2=dU;
  6387  003DAC  0E13               	movlw	19
  6388  003DAE  6F52               	movwf	(_menu_st+1)& (0+255),b
  6389                           
  6390                           ;sm_MenuConfiguration_MC50.c: 485:             menu_st.menuList[1].value_display1=dM;
  6391  003DB0  0E17               	movlw	23
  6392  003DB2  6F53               	movwf	(_menu_st+2)& (0+255),b
  6393                           
  6394                           ;sm_MenuConfiguration_MC50.c: 486:             menu_st.menuList[1].value_display2=dA;
  6395  003DB4  0E0A               	movlw	10
  6396  003DB6  6F54               	movwf	(_menu_st+3)& (0+255),b
  6397                           
  6398                           ;sm_MenuConfiguration_MC50.c: 487:             menu_st.menuList[2].value_display1=d5;
  6399  003DB8  0E05               	movlw	5
  6400  003DBA  6F55               	movwf	(_menu_st+4)& (0+255),b
  6401                           
  6402                           ;sm_MenuConfiguration_MC50.c: 488:             menu_st.menuList[2].value_display2=dy;
  6403  003DBC  0E21               	movlw	33
  6404  003DBE  6F56               	movwf	(_menu_st+5)& (0+255),b
  6405                           
  6406                           ;sm_MenuConfiguration_MC50.c: 489:             menu_st.menuList[3].value_display1=dd;
  6407  003DC0  0E0D               	movlw	13
  6408  003DC2  6F57               	movwf	(_menu_st+6)& (0+255),b
  6409                           
  6410                           ;sm_MenuConfiguration_MC50.c: 490:             menu_st.menuList[3].value_display2=d1;
  6411  003DC4  0E01               	movlw	1
  6412  003DC6  D051               	goto	L31
  6413  003DC8                     l19826:
  6414                           
  6415                           ; BSR set to: 1
  6416                           ;sm_MenuConfiguration_MC50.c: 494:         {;sm_MenuConfiguration_MC50.c: 495:          
      +                             menu_st.lastMenu=P_Menu;
  6417  003DC8  0E00               	movlw	0
  6418  003DCA  6F65               	movwf	(_menu_st+20)& (0+255),b
  6419                           
  6420                           ;sm_MenuConfiguration_MC50.c: 496:             menu_st.actualMenu=P1_SMenu;
  6421  003DCC  0E05               	movlw	5
  6422  003DCE  6F66               	movwf	(_menu_st+21)& (0+255),b
  6423                           
  6424                           ;sm_MenuConfiguration_MC50.c: 497:             menu_st.menuSize=2;
  6425  003DD0  0E02               	movlw	2
  6426  003DD2  6F67               	movwf	(_menu_st+22)& (0+255),b
  6427                           
  6428                           ;sm_MenuConfiguration_MC50.c: 498:             menu_st.menuList[0].value_display1=dd;
  6429  003DD4  0E0D               	movlw	13
  6430  003DD6  6F51               	movwf	_menu_st& (0+255),b
  6431                           
  6432                           ;sm_MenuConfiguration_MC50.c: 499:             menu_st.menuList[0].value_display2=dA;
  6433  003DD8  0E0A               	movlw	10
  6434  003DDA  6F52               	movwf	(_menu_st+1)& (0+255),b
  6435                           
  6436                           ;sm_MenuConfiguration_MC50.c: 500:             menu_st.menuList[1].value_display1=dd;
  6437  003DDC  0E0D               	movlw	13
  6438  003DDE  6F53               	movwf	(_menu_st+2)& (0+255),b
  6439                           
  6440                           ;sm_MenuConfiguration_MC50.c: 501:             menu_st.menuList[1].value_display2=dF;
  6441  003DE0  0E0F               	movlw	15
  6442  003DE2  D08E               	goto	L38
  6443  003DE4                     l19828:
  6444                           
  6445                           ; BSR set to: 1
  6446                           ;sm_MenuConfiguration_MC50.c: 508:         {;sm_MenuConfiguration_MC50.c: 509:          
      +                             menu_st.lastMenu=P_Menu;
  6447  003DE4  0E00               	movlw	0
  6448  003DE6  6F65               	movwf	(_menu_st+20)& (0+255),b
  6449                           
  6450                           ;sm_MenuConfiguration_MC50.c: 510:             menu_st.actualMenu=P2_SMenu;
  6451  003DE8  0E06               	movlw	6
  6452  003DEA  6F66               	movwf	(_menu_st+21)& (0+255),b
  6453                           
  6454                           ;sm_MenuConfiguration_MC50.c: 511:             menu_st.menuSize=3;
  6455  003DEC  0E03               	movlw	3
  6456  003DEE  6F67               	movwf	(_menu_st+22)& (0+255),b
  6457                           
  6458                           ;sm_MenuConfiguration_MC50.c: 512:             menu_st.menuList[0].value_display1=dF;
  6459  003DF0  0E0F               	movlw	15
  6460  003DF2  6F51               	movwf	_menu_st& (0+255),b
  6461                           
  6462                           ;sm_MenuConfiguration_MC50.c: 513:             menu_st.menuList[0].value_display2=d0;
  6463  003DF4  0E00               	movlw	0
  6464  003DF6  6F52               	movwf	(_menu_st+1)& (0+255),b
  6465                           
  6466                           ;sm_MenuConfiguration_MC50.c: 514:             menu_st.menuList[1].value_display1=dF;
  6467  003DF8  0E0F               	movlw	15
  6468  003DFA  6F53               	movwf	(_menu_st+2)& (0+255),b
  6469                           
  6470                           ;sm_MenuConfiguration_MC50.c: 515:             menu_st.menuList[1].value_display2=d5;
  6471  003DFC  0E05               	movlw	5
  6472  003DFE  6F54               	movwf	(_menu_st+3)& (0+255),b
  6473                           
  6474                           ;sm_MenuConfiguration_MC50.c: 516:             menu_st.menuList[2].value_display1=dF;
  6475  003E00  0E0F               	movlw	15
  6476  003E02  6F55               	movwf	(_menu_st+4)& (0+255),b
  6477                           
  6478                           ;sm_MenuConfiguration_MC50.c: 517:             menu_st.menuList[2].value_display2=dd;
  6479  003E04  0E0D               	movlw	13
  6480  003E06  D073               	goto	L33
  6481  003E08                     l19830:
  6482                           
  6483                           ; BSR set to: 1
  6484                           ;sm_MenuConfiguration_MC50.c: 521:         {;sm_MenuConfiguration_MC50.c: 522:          
      +                             menu_st.lastMenu=P_Menu;
  6485  003E08  0E00               	movlw	0
  6486  003E0A  6F65               	movwf	(_menu_st+20)& (0+255),b
  6487                           
  6488                           ;sm_MenuConfiguration_MC50.c: 523:             menu_st.actualMenu=P4_SMenu;
  6489  003E0C  0E07               	movlw	7
  6490  003E0E  6F66               	movwf	(_menu_st+21)& (0+255),b
  6491                           
  6492                           ;sm_MenuConfiguration_MC50.c: 524:             menu_st.menuSize=2;
  6493  003E10  0E02               	movlw	2
  6494  003E12  6F67               	movwf	(_menu_st+22)& (0+255),b
  6495                           
  6496                           ;sm_MenuConfiguration_MC50.c: 525:             menu_st.menuList[0].value_display1=dA;
  6497  003E14  0E0A               	movlw	10
  6498  003E16  6F51               	movwf	_menu_st& (0+255),b
  6499                           
  6500                           ;sm_MenuConfiguration_MC50.c: 526:             menu_st.menuList[0].value_display2=dF;
  6501  003E18  0E0F               	movlw	15
  6502  003E1A  6F52               	movwf	(_menu_st+1)& (0+255),b
  6503                           
  6504                           ;sm_MenuConfiguration_MC50.c: 527:             menu_st.menuList[1].value_display1=dA;
  6505  003E1C  0E0A               	movlw	10
  6506  003E1E  6F53               	movwf	(_menu_st+2)& (0+255),b
  6507                           
  6508                           ;sm_MenuConfiguration_MC50.c: 528:             menu_st.menuList[1].value_display2=dP;
  6509  003E20  0E10               	movlw	16
  6510  003E22  D06E               	goto	L38
  6511  003E24                     l19832:
  6512                           
  6513                           ; BSR set to: 1
  6514                           ;sm_MenuConfiguration_MC50.c: 532:         {;sm_MenuConfiguration_MC50.c: 533:          
      +                             menu_st.lastMenu=P_Menu;
  6515  003E24  0E00               	movlw	0
  6516  003E26  6F65               	movwf	(_menu_st+20)& (0+255),b
  6517                           
  6518                           ;sm_MenuConfiguration_MC50.c: 534:             menu_st.actualMenu=P5_SMenu;
  6519  003E28  0E08               	movlw	8
  6520  003E2A  6F66               	movwf	(_menu_st+21)& (0+255),b
  6521                           
  6522                           ;sm_MenuConfiguration_MC50.c: 535:             menu_st.menuSize=2;
  6523  003E2C  0E02               	movlw	2
  6524  003E2E  6F67               	movwf	(_menu_st+22)& (0+255),b
  6525                           
  6526                           ;sm_MenuConfiguration_MC50.c: 536:             menu_st.menuList[0].value_display1=dL;
  6527  003E30  0E12               	movlw	18
  6528  003E32  6F51               	movwf	_menu_st& (0+255),b
  6529                           
  6530                           ;sm_MenuConfiguration_MC50.c: 537:             menu_st.menuList[0].value_display2=dE;
  6531  003E34  0E0E               	movlw	14
  6532  003E36  6F52               	movwf	(_menu_st+1)& (0+255),b
  6533                           
  6534                           ;sm_MenuConfiguration_MC50.c: 538:             menu_st.menuList[1].value_display1=dH;
  6535  003E38  0E11               	movlw	17
  6536  003E3A  6F53               	movwf	(_menu_st+2)& (0+255),b
  6537                           
  6538                           ;sm_MenuConfiguration_MC50.c: 539:             menu_st.menuList[1].value_display2=dC;
  6539  003E3C  0E0C               	movlw	12
  6540  003E3E  D060               	goto	L38
  6541  003E40                     l19834:
  6542                           
  6543                           ; BSR set to: 1
  6544                           ;sm_MenuConfiguration_MC50.c: 543:         {;sm_MenuConfiguration_MC50.c: 544:          
      +                             menu_st.lastMenu=P_Menu;
  6545  003E40  0E00               	movlw	0
  6546  003E42  6F65               	movwf	(_menu_st+20)& (0+255),b
  6547                           
  6548                           ;sm_MenuConfiguration_MC50.c: 545:             menu_st.actualMenu=P6_SMenu;
  6549  003E44  0E09               	movlw	9
  6550  003E46  6F66               	movwf	(_menu_st+21)& (0+255),b
  6551                           
  6552                           ;sm_MenuConfiguration_MC50.c: 546:             menu_st.menuSize=4;
  6553  003E48  0E04               	movlw	4
  6554  003E4A  6F67               	movwf	(_menu_st+22)& (0+255),b
  6555                           
  6556                           ;sm_MenuConfiguration_MC50.c: 547:             menu_st.menuList[0].value_display1=dL;
  6557  003E4C  0E12               	movlw	18
  6558  003E4E  6F51               	movwf	_menu_st& (0+255),b
  6559                           
  6560                           ;sm_MenuConfiguration_MC50.c: 548:             menu_st.menuList[0].value_display2=dA;
  6561  003E50  0E0A               	movlw	10
  6562  003E52  6F52               	movwf	(_menu_st+1)& (0+255),b
  6563                           
  6564                           ;sm_MenuConfiguration_MC50.c: 549:             menu_st.menuList[1].value_display1=dH;
  6565  003E54  0E11               	movlw	17
  6566  003E56  6F53               	movwf	(_menu_st+2)& (0+255),b
  6567                           
  6568                           ;sm_MenuConfiguration_MC50.c: 550:             menu_st.menuList[1].value_display2=dA;
  6569  003E58  0E0A               	movlw	10
  6570  003E5A  6F54               	movwf	(_menu_st+3)& (0+255),b
  6571                           
  6572                           ;sm_MenuConfiguration_MC50.c: 551:             menu_st.menuList[2].value_display1=dH;
  6573  003E5C  0E11               	movlw	17
  6574  003E5E  6F55               	movwf	(_menu_st+4)& (0+255),b
  6575                           
  6576                           ;sm_MenuConfiguration_MC50.c: 552:             menu_st.menuList[2].value_display2=dL;
  6577  003E60  0E12               	movlw	18
  6578  003E62  6F56               	movwf	(_menu_st+5)& (0+255),b
  6579                           
  6580                           ;sm_MenuConfiguration_MC50.c: 553:             menu_st.menuList[3].value_display1=d5;
  6581  003E64  0E05               	movlw	5
  6582  003E66  6F57               	movwf	(_menu_st+6)& (0+255),b
  6583                           
  6584                           ;sm_MenuConfiguration_MC50.c: 554:             menu_st.menuList[3].value_display2=dt;
  6585  003E68  0E15               	movlw	21
  6586  003E6A                     L31:
  6587  003E6A  6F58               	movwf	(_menu_st+7)& (0+255),b
  6588                           
  6589                           ;sm_MenuConfiguration_MC50.c: 556:         };sm_MenuConfiguration_MC50.c: 557:         b
      +                          reak;
  6590  003E6C  D07D               	goto	l19852
  6591  003E6E                     l19836:
  6592                           
  6593                           ; BSR set to: 1
  6594                           ;sm_MenuConfiguration_MC50.c: 559:         {;sm_MenuConfiguration_MC50.c: 560:          
      +                             menu_st.lastMenu=E_Menu;
  6595  003E6E  0E01               	movlw	1
  6596  003E70  6F65               	movwf	(_menu_st+20)& (0+255),b
  6597                           
  6598                           ;sm_MenuConfiguration_MC50.c: 561:             menu_st.actualMenu=E0_SMenu;
  6599  003E72  0E0A               	movlw	10
  6600  003E74  6F66               	movwf	(_menu_st+21)& (0+255),b
  6601                           
  6602                           ;sm_MenuConfiguration_MC50.c: 562:             menu_st.menuSize=2;
  6603  003E76  0E02               	movlw	2
  6604  003E78  6F67               	movwf	(_menu_st+22)& (0+255),b
  6605                           
  6606                           ;sm_MenuConfiguration_MC50.c: 563:             menu_st.menuList[0].value_display1=dH;
  6607  003E7A  0E11               	movlw	17
  6608  003E7C  6F51               	movwf	_menu_st& (0+255),b
  6609                           
  6610                           ;sm_MenuConfiguration_MC50.c: 564:             menu_st.menuList[0].value_display2=dP;
  6611  003E7E  0E10               	movlw	16
  6612  003E80  6F52               	movwf	(_menu_st+1)& (0+255),b
  6613                           
  6614                           ;sm_MenuConfiguration_MC50.c: 565:             menu_st.menuList[1].value_display1=dP;
  6615  003E82  0E10               	movlw	16
  6616  003E84  6F53               	movwf	(_menu_st+2)& (0+255),b
  6617                           
  6618                           ;sm_MenuConfiguration_MC50.c: 566:             menu_st.menuList[1].value_display2=dL;
  6619  003E86  0E12               	movlw	18
  6620  003E88  D03B               	goto	L38
  6621  003E8A                     l19838:
  6622                           
  6623                           ; BSR set to: 1
  6624                           ;sm_MenuConfiguration_MC50.c: 570:         {;sm_MenuConfiguration_MC50.c: 571:          
      +                             menu_st.lastMenu=E_Menu;
  6625  003E8A  0E01               	movlw	1
  6626  003E8C  6F65               	movwf	(_menu_st+20)& (0+255),b
  6627                           
  6628                           ;sm_MenuConfiguration_MC50.c: 572:             menu_st.actualMenu=E1_SMenu;
  6629  003E8E  0E0B               	movlw	11
  6630  003E90  6F66               	movwf	(_menu_st+21)& (0+255),b
  6631                           
  6632                           ;sm_MenuConfiguration_MC50.c: 573:             menu_st.menuSize=2;
  6633  003E92  0E02               	movlw	2
  6634  003E94  6F67               	movwf	(_menu_st+22)& (0+255),b
  6635                           
  6636                           ;sm_MenuConfiguration_MC50.c: 574:             menu_st.menuList[0].value_display1=dr;
  6637  003E96  0E14               	movlw	20
  6638  003E98  6F51               	movwf	_menu_st& (0+255),b
  6639                           
  6640                           ;sm_MenuConfiguration_MC50.c: 575:             menu_st.menuList[0].value_display2=dq;
  6641  003E9A  0E24               	movlw	36
  6642  003E9C  6F52               	movwf	(_menu_st+1)& (0+255),b
  6643                           
  6644                           ;sm_MenuConfiguration_MC50.c: 576:             menu_st.menuList[1].value_display1=dr;
  6645  003E9E  0E14               	movlw	20
  6646  003EA0  6F53               	movwf	(_menu_st+2)& (0+255),b
  6647                           
  6648                           ;sm_MenuConfiguration_MC50.c: 577:             menu_st.menuList[1].value_display2=dc;
  6649  003EA2  0E23               	movlw	35
  6650  003EA4  D02D               	goto	L38
  6651  003EA6                     l19840:
  6652                           
  6653                           ; BSR set to: 1
  6654                           ;sm_MenuConfiguration_MC50.c: 581:         {;sm_MenuConfiguration_MC50.c: 583:          
      +                             menu_st.actualMenu=S_Menu;
  6655  003EA6  0E0C               	movlw	12
  6656  003EA8  6F66               	movwf	(_menu_st+21)& (0+255),b
  6657                           
  6658                           ;sm_MenuConfiguration_MC50.c: 584:             menu_st.parameterSelected=0;
  6659  003EAA  0E00               	movlw	0
  6660  003EAC  6F68               	movwf	(_menu_st+23)& (0+255),b
  6661                           
  6662                           ;sm_MenuConfiguration_MC50.c: 585:             menu_st.menuSize=2;
  6663  003EAE  0E02               	movlw	2
  6664  003EB0  6F67               	movwf	(_menu_st+22)& (0+255),b
  6665                           
  6666                           ;sm_MenuConfiguration_MC50.c: 586:             menu_st.menuList[0].value_display1=d5;
  6667  003EB2  0E05               	movlw	5
  6668  003EB4  6F51               	movwf	_menu_st& (0+255),b
  6669                           
  6670                           ;sm_MenuConfiguration_MC50.c: 587:             menu_st.menuList[0].value_display2=dU;
  6671  003EB6  0E13               	movlw	19
  6672  003EB8  6F52               	movwf	(_menu_st+1)& (0+255),b
  6673                           
  6674                           ;sm_MenuConfiguration_MC50.c: 588:             menu_st.menuList[1].value_display1=d5;
  6675  003EBA  0E05               	movlw	5
  6676  003EBC  D7B0               	goto	L39
  6677  003EBE                     l19842:
  6678                           
  6679                           ; BSR set to: 1
  6680                           ;sm_MenuConfiguration_MC50.c: 593:         {;sm_MenuConfiguration_MC50.c: 595:          
      +                             menu_st.actualMenu=Del_Menu;
  6681  003EBE  0E0D               	movlw	13
  6682  003EC0  6F66               	movwf	(_menu_st+21)& (0+255),b
  6683                           
  6684                           ;sm_MenuConfiguration_MC50.c: 596:             menu_st.menuSize=1;
  6685  003EC2  0E01               	movlw	1
  6686  003EC4  6F67               	movwf	(_menu_st+22)& (0+255),b
  6687                           
  6688                           ;sm_MenuConfiguration_MC50.c: 597:             menu_st.menuList[0].value_display1=dd;
  6689  003EC6  0E0D               	movlw	13
  6690  003EC8  6F51               	movwf	_menu_st& (0+255),b
  6691                           
  6692                           ;sm_MenuConfiguration_MC50.c: 598:             menu_st.menuList[0].value_display2=dL;
  6693  003ECA  0E12               	movlw	18
  6694  003ECC  6F52               	movwf	(_menu_st+1)& (0+255),b
  6695                           
  6696                           ;sm_MenuConfiguration_MC50.c: 599:             ts_system.timeSinalizationDigit=(1000/50)
      +                          *3;
  6697  003ECE  0E00               	movlw	0
  6698  003ED0  6FA7               	movwf	(_ts_system+13)& (0+255),b	;volatile
  6699  003ED2  0E3C               	movlw	60
  6700  003ED4  6FA6               	movwf	(_ts_system+12)& (0+255),b	;volatile
  6701                           
  6702                           ;sm_MenuConfiguration_MC50.c: 600:         };sm_MenuConfiguration_MC50.c: 601:         b
      +                          reak;
  6703  003ED6  D048               	goto	l19852
  6704  003ED8                     l19844:
  6705                           
  6706                           ; BSR set to: 1
  6707                           ;sm_MenuConfiguration_MC50.c: 604:         {;sm_MenuConfiguration_MC50.c: 608:          
      +                             menu_st.menuList[0].value_display1=d5;
  6708  003ED8  0E05               	movlw	5
  6709  003EDA  6F51               	movwf	_menu_st& (0+255),b
  6710                           
  6711                           ;sm_MenuConfiguration_MC50.c: 609:             menu_st.menuList[0].value_display2=dC;
  6712  003EDC  0E0C               	movlw	12
  6713  003EDE  6F52               	movwf	(_menu_st+1)& (0+255),b
  6714                           
  6715                           ;sm_MenuConfiguration_MC50.c: 610:             menu_st.menuList[1].value_display1=d5;
  6716  003EE0  0E05               	movlw	5
  6717  003EE2  6F53               	movwf	(_menu_st+2)& (0+255),b
  6718                           
  6719                           ;sm_MenuConfiguration_MC50.c: 611:             menu_st.menuList[1].value_display2=dE;
  6720  003EE4  0E0E               	movlw	14
  6721  003EE6  6F54               	movwf	(_menu_st+3)& (0+255),b
  6722                           
  6723                           ;sm_MenuConfiguration_MC50.c: 612:             menu_st.menuList[2].value_display1=db;
  6724  003EE8  0E22               	movlw	34
  6725  003EEA  6F55               	movwf	(_menu_st+4)& (0+255),b
  6726                           
  6727                           ;sm_MenuConfiguration_MC50.c: 613:             menu_st.menuList[2].value_display2=dr;
  6728  003EEC  0E14               	movlw	20
  6729  003EEE                     L33:
  6730  003EEE  6F56               	movwf	(_menu_st+5)& (0+255),b
  6731                           
  6732                           ;sm_MenuConfiguration_MC50.c: 614:         };sm_MenuConfiguration_MC50.c: 615:         b
      +                          reak;
  6733  003EF0  D03B               	goto	l19852
  6734  003EF2                     l19846:
  6735                           
  6736                           ; BSR set to: 1
  6737                           ;sm_MenuConfiguration_MC50.c: 617:         {;sm_MenuConfiguration_MC50.c: 621:          
      +                             menu_st.menuList[0].value_display1=dL;
  6738  003EF2  0E12               	movlw	18
  6739  003EF4  6F51               	movwf	_menu_st& (0+255),b
  6740                           
  6741                           ;sm_MenuConfiguration_MC50.c: 622:             menu_st.menuList[0].value_display2=dE;
  6742  003EF6  0E0E               	movlw	14
  6743  003EF8  6F52               	movwf	(_menu_st+1)& (0+255),b
  6744                           
  6745                           ;sm_MenuConfiguration_MC50.c: 623:             menu_st.menuList[1].value_display1=dr;
  6746  003EFA  0E14               	movlw	20
  6747  003EFC  6F53               	movwf	(_menu_st+2)& (0+255),b
  6748                           
  6749                           ;sm_MenuConfiguration_MC50.c: 624:             menu_st.menuList[1].value_display2=dt;
  6750  003EFE  0E15               	movlw	21
  6751  003F00                     L38:
  6752  003F00  6F54               	movwf	(_menu_st+3)& (0+255),b
  6753                           
  6754                           ;sm_MenuConfiguration_MC50.c: 626:         };sm_MenuConfiguration_MC50.c: 627:         b
      +                          reak;
  6755  003F02  D032               	goto	l19852
  6756  003F04                     l19850:
  6757                           
  6758                           ; BSR set to: 1
  6759  003F04  5022               	movf	load_New_Menu@Menu^0,w,c
  6760  003F06  6E20               	movwf	??_load_New_Menu^0,c
  6761  003F08  6A21               	clrf	(??_load_New_Menu+1)^0,c
  6762                           
  6763                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6764                           ; Switch size 1, requested type "simple"
  6765                           ; Number of cases is 1, Range of values is 0 to 0
  6766                           ; switch strategies available:
  6767                           ; Name         Instructions Cycles
  6768                           ; simple_byte            4     3 (average)
  6769                           ;	Chosen strategy is simple_byte
  6770  003F0A  5021               	movf	(??_load_New_Menu+1)^0,w,c
  6771  003F0C  0A00               	xorlw	0	; case 0
  6772  003F0E  A4D8               	btfss	status,2,c
  6773  003F10  D02B               	goto	l19852
  6774                           
  6775                           ; BSR set to: 1
  6776                           ; Switch size 1, requested type "simple"
  6777                           ; Number of cases is 14, Range of values is 0 to 13
  6778                           ; switch strategies available:
  6779                           ; Name         Instructions Cycles
  6780                           ; simple_byte           43    22 (average)
  6781                           ;	Chosen strategy is simple_byte
  6782  003F12  5020               	movf	??_load_New_Menu^0,w,c
  6783  003F14  0A00               	xorlw	0	; case 0
  6784  003F16  B4D8               	btfsc	status,2,c
  6785  003F18  D6FF               	goto	l19800
  6786  003F1A  0A01               	xorlw	1	; case 1
  6787  003F1C  B4D8               	btfsc	status,2,c
  6788  003F1E  D71D               	goto	l19812
  6789  003F20  0A03               	xorlw	3	; case 2
  6790  003F22  B4D8               	btfsc	status,2,c
  6791  003F24  D7E6               	goto	l19846
  6792  003F26  0A01               	xorlw	1	; case 3
  6793  003F28  B4D8               	btfsc	status,2,c
  6794  003F2A  D7D6               	goto	l19844
  6795  003F2C  0A07               	xorlw	7	; case 4
  6796  003F2E  B4D8               	btfsc	status,2,c
  6797  003F30  D735               	goto	l19824
  6798  003F32  0A01               	xorlw	1	; case 5
  6799  003F34  B4D8               	btfsc	status,2,c
  6800  003F36  D748               	goto	l19826
  6801  003F38  0A03               	xorlw	3	; case 6
  6802  003F3A  B4D8               	btfsc	status,2,c
  6803  003F3C  D753               	goto	l19828
  6804  003F3E  0A01               	xorlw	1	; case 7
  6805  003F40  B4D8               	btfsc	status,2,c
  6806  003F42  D762               	goto	l19830
  6807  003F44  0A0F               	xorlw	15	; case 8
  6808  003F46  B4D8               	btfsc	status,2,c
  6809  003F48  D76D               	goto	l19832
  6810  003F4A  0A01               	xorlw	1	; case 9
  6811  003F4C  B4D8               	btfsc	status,2,c
  6812  003F4E  D778               	goto	l19834
  6813  003F50  0A03               	xorlw	3	; case 10
  6814  003F52  B4D8               	btfsc	status,2,c
  6815  003F54  D78C               	goto	l19836
  6816  003F56  0A01               	xorlw	1	; case 11
  6817  003F58  B4D8               	btfsc	status,2,c
  6818  003F5A  D797               	goto	l19838
  6819  003F5C  0A07               	xorlw	7	; case 12
  6820  003F5E  B4D8               	btfsc	status,2,c
  6821  003F60  D7A2               	goto	l19840
  6822  003F62  0A01               	xorlw	1	; case 13
  6823  003F64  B4D8               	btfsc	status,2,c
  6824  003F66  D7AB               	goto	l19842
  6825  003F68                     l19852:
  6826                           
  6827                           ;sm_MenuConfiguration_MC50.c: 632:     if(menu_st.parameterSelected>=menu_st.menuSize)
  6828  003F68  0101               	movlb	1	; () banked
  6829  003F6A  5167               	movf	(_menu_st+22)& (0+255),w,b
  6830  003F6C  5D68               	subwf	(_menu_st+23)& (0+255),w,b
  6831  003F6E  A0D8               	btfss	status,0,c
  6832  003F70  D002               	goto	l19856
  6833                           
  6834                           ; BSR set to: 1
  6835                           ;sm_MenuConfiguration_MC50.c: 633:     {;sm_MenuConfiguration_MC50.c: 634:         menu_
      +                          st.parameterSelected=0;
  6836  003F72  0E00               	movlw	0
  6837  003F74  6F68               	movwf	(_menu_st+23)& (0+255),b
  6838  003F76                     l19856:
  6839                           
  6840                           ; BSR set to: 1
  6841                           ;sm_MenuConfiguration_MC50.c: 637:     if(Menu==Del_Menu)
  6842  003F76  0E0D               	movlw	13
  6843  003F78  1822               	xorwf	load_New_Menu@Menu^0,w,c
  6844  003F7A  A4D8               	btfss	status,2,c
  6845  003F7C  D01A               	goto	l19860
  6846                           
  6847                           ; BSR set to: 1
  6848                           ;sm_MenuConfiguration_MC50.c: 638:     {;sm_MenuConfiguration_MC50.c: 639:         SetSe
      +                          gmentValueIntermitentMain(menu_st.menuList[ menu_st.parameterSelected].value_display1, m
      +                          enu_st.menuList[ menu_st.parameterSelected].value_display2,( 500/50));
  6849  003F7E  5168               	movf	(_menu_st+23)& (0+255),w,b
  6850  003F80  0D02               	mullw	2
  6851  003F82  0E52               	movlw	low (_menu_st+1)
  6852  003F84  24F3               	addwf	243,w,c
  6853  003F86  6ED9               	movwf	fsr2l,c
  6854  003F88  0E01               	movlw	high (_menu_st+1)
  6855  003F8A  20F4               	addwfc	prodh,w,c
  6856  003F8C  6EDA               	movwf	fsr2h,c
  6857  003F8E  50DF               	movf	indf2,w,c
  6858  003F90  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  6859  003F92  0E00               	movlw	0
  6860  003F94  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  6861  003F96  0E0A               	movlw	10
  6862  003F98  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  6863  003F9A  5168               	movf	(_menu_st+23)& (0+255),w,b
  6864  003F9C  0D02               	mullw	2
  6865  003F9E  0E51               	movlw	low _menu_st
  6866  003FA0  24F3               	addwf	243,w,c
  6867  003FA2  6ED9               	movwf	fsr2l,c
  6868  003FA4  0E01               	movlw	high _menu_st
  6869  003FA6  20F4               	addwfc	prodh,w,c
  6870  003FA8  6EDA               	movwf	fsr2h,c
  6871  003FAA  50DF               	movf	indf2,w,c
  6872  003FAC  EC70  F048         	call	_SetSegmentValueIntermitentMain
  6873                           
  6874                           ;sm_MenuConfiguration_MC50.c: 640:     }
  6875  003FB0  0012               	return	
  6876  003FB2                     l19860:
  6877                           
  6878                           ; BSR set to: 1
  6879                           ;sm_MenuConfiguration_MC50.c: 642:     {;sm_MenuConfiguration_MC50.c: 643:         SetSe
      +                          gmentValueMain(menu_st.menuList[ menu_st.parameterSelected].value_display1, menu_st.menu
      +                          List[ menu_st.parameterSelected].value_display2);
  6880  003FB2  5168               	movf	(_menu_st+23)& (0+255),w,b
  6881  003FB4  0D02               	mullw	2
  6882  003FB6  0E52               	movlw	low (_menu_st+1)
  6883  003FB8  24F3               	addwf	243,w,c
  6884  003FBA  6ED9               	movwf	fsr2l,c
  6885  003FBC  0E01               	movlw	high (_menu_st+1)
  6886  003FBE  20F4               	addwfc	prodh,w,c
  6887  003FC0  6EDA               	movwf	fsr2h,c
  6888  003FC2  50DF               	movf	indf2,w,c
  6889  003FC4  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  6890  003FC6  5168               	movf	(_menu_st+23)& (0+255),w,b
  6891  003FC8  0D02               	mullw	2
  6892  003FCA  0E51               	movlw	low _menu_st
  6893  003FCC  24F3               	addwf	243,w,c
  6894  003FCE  6ED9               	movwf	fsr2l,c
  6895  003FD0  0E01               	movlw	high _menu_st
  6896  003FD2  20F4               	addwfc	prodh,w,c
  6897  003FD4  6EDA               	movwf	fsr2h,c
  6898  003FD6  50DF               	movf	indf2,w,c
  6899  003FD8  ECD4  F047         	call	_SetSegmentValueMain
  6900  003FDC  0012               	return		;funcret
  6901  003FDE                     __end_of_load_New_Menu:
  6902                           	callstack 0
  6903                           
  6904 ;; *************** function _InitReceiver *****************
  6905 ;; Defined at:
  6906 ;;		line 207 in file "inputs_MC50.c"
  6907 ;; Parameters:    Size  Location     Type
  6908 ;;		None
  6909 ;; Auto vars:     Size  Location     Type
  6910 ;;		None
  6911 ;; Return value:  Size  Location     Type
  6912 ;;                  1    wreg      void 
  6913 ;; Registers used:
  6914 ;;		wreg, status,2
  6915 ;; Tracked objects:
  6916 ;;		On entry : 30/F
  6917 ;;		On exit  : 3F/0
  6918 ;;		Unchanged: 0/0
  6919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6923 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6924 ;;Total ram usage:        0 bytes
  6925 ;; Hardware stack levels used: 1
  6926 ;; Hardware stack levels required when called: 4
  6927 ;; This function calls:
  6928 ;;		Nothing
  6929 ;; This function is called by:
  6930 ;;		_main
  6931 ;;		_setValueToEdit
  6932 ;; This function uses a non-reentrant model
  6933 ;;
  6934                           
  6935                           	psect	text5
  6936  008F8E                     __ptext5:
  6937                           	callstack 0
  6938  008F8E                     _InitReceiver:
  6939                           	callstack 23
  6940                           
  6941                           ;inputs_MC50.c: 208:     TMR0IF = 0;
  6942                           
  6943                           ;incstack = 0
  6944  008F8E  010E               	movlb	14	; () banked
  6945  008F90  9BCA               	bcf	202,5,b	;volatile
  6946                           
  6947                           ;inputs_MC50.c: 209:     TMR0IE = 1;
  6948  008F92  8BC2               	bsf	194,5,b	;volatile
  6949                           
  6950                           ;inputs_MC50.c: 210:     GIE = 1;
  6951  008F94  8EF2               	bsf	4082,7,c	;volatile
  6952                           
  6953                           ; BSR set to: 14
  6954                           ;inputs_MC50.c: 211:     RFstate = 0;
  6955  008F96  0E00               	movlw	0
  6956  008F98  0101               	movlb	1	; () banked
  6957  008F9A  6F98               	movwf	_RFstate& (0+255),b
  6958                           
  6959                           ;inputs_MC50.c: 212:     RFFull_12BIT=0;
  6960  008F9C  0E00               	movlw	0
  6961  008F9E  0100               	movlb	0	; () banked
  6962  008FA0  6F8A               	movwf	_RFFull_12BIT& (0+255),b	;volatile
  6963                           
  6964                           ;inputs_MC50.c: 213:     RFFull = 0;
  6965  008FA2  0E00               	movlw	0
  6966  008FA4  6F8B               	movwf	_RFFull& (0+255),b	;volatile
  6967                           
  6968                           ; BSR set to: 0
  6969  008FA6  0012               	return		;funcret
  6970  008FA8                     __end_of_InitReceiver:
  6971                           	callstack 0
  6972                           
  6973 ;; *************** function _controlSelectRemote *****************
  6974 ;; Defined at:
  6975 ;;		line 1098 in file "sm_MenuConfiguration_MC50.c"
  6976 ;; Parameters:    Size  Location     Type
  6977 ;;		None
  6978 ;; Auto vars:     Size  Location     Type
  6979 ;;  typeRemote      1   11[BANK0 ] enum E10392
  6980 ;;  pos             1   10[BANK0 ] unsigned char 
  6981 ;;  tempSerial      4   12[BANK0 ] unsigned long 
  6982 ;;  temp            1   16[BANK0 ] unsigned char 
  6983 ;;  validSerial     1    9[BANK0 ] unsigned char 
  6984 ;; Return value:  Size  Location     Type
  6985 ;;                  1    wreg      void 
  6986 ;; Registers used:
  6987 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6988 ;; Tracked objects:
  6989 ;;		On entry : 3F/1
  6990 ;;		On exit  : 0/0
  6991 ;;		Unchanged: 0/0
  6992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6994 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6995 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6996 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6997 ;;Total ram usage:        9 bytes
  6998 ;; Hardware stack levels used: 1
  6999 ;; Hardware stack levels required when called: 14
  7000 ;; This function calls:
  7001 ;;		_ClearFlag_rfCMD
  7002 ;;		_RemoveSerial
  7003 ;;		_SaveNVM_VarSystem
  7004 ;;		_SetSegmentValue
  7005 ;;		_SetSegmentValueIntermitentMain
  7006 ;;		_SetSegmentValueMain
  7007 ;;		___awdiv
  7008 ;;		___lbmod
  7009 ;;		_cmdMemoryIsEmpty
  7010 ;;		_getSerialCmd
  7011 ;;		_getTypeRemote
  7012 ;;		_saveNewSerial
  7013 ;;		_sm_send_event
  7014 ;;		_validateRemoteSerialNumber
  7015 ;; This function is called by:
  7016 ;;		_sm_execute_menuConfiguration
  7017 ;; This function uses a non-reentrant model
  7018 ;;
  7019                           
  7020                           	psect	text6
  7021  0032CC                     __ptext6:
  7022                           	callstack 0
  7023  0032CC                     _controlSelectRemote:
  7024                           	callstack 14
  7025                           
  7026                           ; BSR set to: 1
  7027                           ;sm_MenuConfiguration_MC50.c: 1099:     unsigned long tempSerial;;sm_MenuConfiguration_M
      +                          C50.c: 1100:     char temp=getSerialCmd(&tempSerial);
  7028                           
  7029                           ; BSR set to: 0
  7030                           ;incstack = 0
  7031  0032CC  0EE4               	movlw	low controlSelectRemote@tempSerial
  7032  0032CE  6E1B               	movwf	getSerialCmd@serial^0,c
  7033  0032D0  EC23  F043         	call	_getSerialCmd	;wreg free
  7034  0032D4  0100               	movlb	0	; () banked
  7035  0032D6  6FE8               	movwf	controlSelectRemote@temp& (0+255),b
  7036                           
  7037                           ; BSR set to: 0
  7038                           ;sm_MenuConfiguration_MC50.c: 1101:     char validSerial;;sm_MenuConfiguration_MC50.c: 1
      +                          102:     if(ts_system.timeoutMenu<=0 || button_struct.current==0x00)
  7039  0032D8  0101               	movlb	1	; () banked
  7040  0032DA  BFA9               	btfsc	(_ts_system+15)& (0+255),7,b	;volatile
  7041  0032DC  D008               	goto	u23880
  7042  0032DE  51A9               	movf	(_ts_system+15)& (0+255),w,b	;volatile
  7043  0032E0  E103               	bnz	u23870
  7044  0032E2  05A8               	decf	(_ts_system+14)& (0+255),w,b	;volatile
  7045  0032E4  A0D8               	btfss	status,0,c
  7046  0032E6  D003               	goto	u23880
  7047  0032E8                     u23870:
  7048                           
  7049                           ; BSR set to: 1
  7050  0032E8  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  7051  0032EA  A4D8               	btfss	status,2,c
  7052  0032EC  D028               	goto	l20928
  7053  0032EE                     u23880:
  7054                           
  7055                           ; BSR set to: 1
  7056                           ;sm_MenuConfiguration_MC50.c: 1103:     {;sm_MenuConfiguration_MC50.c: 1104:         sm_
      +                          send_event(&main_stateMachine, ev_goto_StandBy);
  7057  0032EE  0EED               	movlw	low _main_stateMachine
  7058  0032F0  6E12               	movwf	sm_send_event@psm^0,c
  7059  0032F2  0E01               	movlw	high _main_stateMachine
  7060  0032F4  6E13               	movwf	(sm_send_event@psm+1)^0,c
  7061  0032F6  0E00               	movlw	0
  7062  0032F8  6E15               	movwf	(sm_send_event@event+1)^0,c
  7063  0032FA  0E07               	movlw	7
  7064  0032FC  6E14               	movwf	sm_send_event@event^0,c
  7065  0032FE  EC1C  F041         	call	_sm_send_event	;wreg free
  7066                           
  7067                           ;sm_MenuConfiguration_MC50.c: 1105:         sm_send_event(&menuConfiguration_stateMachin
      +                          e, ev_CancelEdition);
  7068  003302  0EBD               	movlw	low _menuConfiguration_stateMachine
  7069  003304  6E12               	movwf	sm_send_event@psm^0,c
  7070  003306  0E02               	movlw	high _menuConfiguration_stateMachine
  7071  003308  6E13               	movwf	(sm_send_event@psm+1)^0,c
  7072  00330A  0E00               	movlw	0
  7073  00330C  6E15               	movwf	(sm_send_event@event+1)^0,c
  7074  00330E  0E03               	movlw	3
  7075  003310  6E14               	movwf	sm_send_event@event^0,c
  7076  003312  EC1C  F041         	call	_sm_send_event	;wreg free
  7077                           
  7078                           ;sm_MenuConfiguration_MC50.c: 1106:         var_sys.DistanceProgrammingActive=NO;
  7079  003316  0E00               	movlw	0
  7080  003318  0101               	movlb	1	; () banked
  7081  00331A  6F40               	movwf	(_var_sys+64)& (0+255),b	;volatile
  7082                           
  7083                           ; BSR set to: 1
  7084                           ;sm_MenuConfiguration_MC50.c: 1107:         var_sys.ProgrammingDistanceIs=NoCMD;
  7085  00331C  0E00               	movlw	0
  7086  00331E  6F3B               	movwf	(_var_sys+59)& (0+255),b	;volatile
  7087                           
  7088                           ; BSR set to: 1
  7089                           ;sm_MenuConfiguration_MC50.c: 1108:         SetSegmentValueMain(dMinus,dMinus);
  7090  003320  0E18               	movlw	24
  7091  003322  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  7092  003324  0E18               	movlw	24
  7093  003326  ECD4  F047         	call	_SetSegmentValueMain
  7094                           
  7095                           ; BSR set to: 0
  7096                           ;sm_MenuConfiguration_MC50.c: 1109:         ClearFlag_rfCMD();
  7097  00332A  EC25  F049         	call	_ClearFlag_rfCMD	;wreg free
  7098                           
  7099                           ;sm_MenuConfiguration_MC50.c: 1110:         button_struct.processed=1;
  7100  00332E  0E01               	movlw	1
  7101  003330  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  7102                           
  7103                           ;sm_MenuConfiguration_MC50.c: 1111:         ts_system.timeoutMenu = 0;
  7104  003332  0E00               	movlw	0
  7105  003334  0101               	movlb	1	; () banked
  7106  003336  6FA9               	movwf	(_ts_system+15)& (0+255),b	;volatile
  7107  003338  0E00               	movlw	0
  7108  00333A  6FA8               	movwf	(_ts_system+14)& (0+255),b	;volatile
  7109                           
  7110                           ;sm_MenuConfiguration_MC50.c: 1113:     }
  7111  00333C  0012               	return	
  7112  00333E                     l20928:
  7113                           
  7114                           ; BSR set to: 1
  7115  00333E  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  7116  003340  A4D8               	btfss	status,2,c
  7117  003342  D05B               	goto	l20950
  7118                           
  7119                           ; BSR set to: 1
  7120  003344  504A               	movf	(_edit_Param+4)^0,w,c	;volatile
  7121  003346  B4D8               	btfsc	status,2,c
  7122  003348  D058               	goto	l20950
  7123                           
  7124                           ; BSR set to: 1
  7125                           ;sm_MenuConfiguration_MC50.c: 1115:     {;sm_MenuConfiguration_MC50.c: 1116:         ts_
      +                          system.timeoutMenu=((1000/50)*5) ;
  7126  00334A  0E00               	movlw	0
  7127  00334C  6FA9               	movwf	(_ts_system+15)& (0+255),b	;volatile
  7128  00334E  0E64               	movlw	100
  7129  003350  6FA8               	movwf	(_ts_system+14)& (0+255),b	;volatile
  7130                           
  7131                           ; BSR set to: 1
  7132                           ;sm_MenuConfiguration_MC50.c: 1117:         if(edit_Param.tempValue<=edit_Param.Min)
  7133  003352  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7134  003354  5C4B               	subwf	(_edit_Param+5)^0,w,c	;volatile
  7135  003356  A0D8               	btfss	status,0,c
  7136  003358  D003               	goto	l20938
  7137                           
  7138                           ; BSR set to: 1
  7139                           ;sm_MenuConfiguration_MC50.c: 1118:         {;sm_MenuConfiguration_MC50.c: 1119:        
      +                               edit_Param.tempValue=edit_Param.Max;
  7140  00335A  C04A  F049         	movff	_edit_Param+4,_edit_Param+3	;volatile
  7141                           
  7142                           ;sm_MenuConfiguration_MC50.c: 1120:         }
  7143  00335E  D001               	goto	l20940
  7144  003360                     l20938:
  7145                           
  7146                           ; BSR set to: 1
  7147                           ;sm_MenuConfiguration_MC50.c: 1122:         {;sm_MenuConfiguration_MC50.c: 1123:        
      +                               edit_Param.tempValue--;
  7148  003360  0649               	decf	(_edit_Param+3)^0,f,c	;volatile
  7149  003362                     l20940:
  7150                           
  7151                           ; BSR set to: 1
  7152                           ;sm_MenuConfiguration_MC50.c: 1125:         if(cmdMemoryIsEmpty(menu_st.parameterSelecte
      +                          d,edit_Param.tempValue)==1 || edit_Param.tempValue==edit_Param.Max)
  7153  003362  C049  F02E         	movff	_edit_Param+3,cmdMemoryIsEmpty@position	;volatile
  7154  003366  5168               	movf	(_menu_st+23)& (0+255),w,b
  7155  003368  ECAA  F03A         	call	_cmdMemoryIsEmpty
  7156  00336C  06E8               	decf	wreg,f,c
  7157  00336E  B4D8               	btfsc	status,2,c
  7158  003370  D004               	goto	u23930
  7159  003372  504A               	movf	(_edit_Param+4)^0,w,c	;volatile
  7160  003374  1849               	xorwf	(_edit_Param+3)^0,w,c	;volatile
  7161  003376  A4D8               	btfss	status,2,c
  7162  003378  D021               	goto	l20946
  7163  00337A                     u23930:
  7164                           
  7165                           ;sm_MenuConfiguration_MC50.c: 1126:         {;sm_MenuConfiguration_MC50.c: 1127:        
      +                               SetSegmentValueIntermitentMain((edit_Param.tempValue-edit_Param.tempValue%10)/10, e
      +                          dit_Param.tempValue%10,(1000/50));
  7166  00337A  0E0A               	movlw	10
  7167  00337C  6E10               	movwf	___lbmod@divisor^0,c
  7168  00337E  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7169  003380  EC9C  F046         	call	___lbmod
  7170  003384  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  7171  003386  0E00               	movlw	0
  7172  003388  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  7173  00338A  0E14               	movlw	20
  7174  00338C  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  7175  00338E  0E0A               	movlw	10
  7176  003390  6E10               	movwf	___lbmod@divisor^0,c
  7177  003392  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7178  003394  EC9C  F046         	call	___lbmod
  7179  003398  0100               	movlb	0	; () banked
  7180  00339A  6FE0               	movwf	??_controlSelectRemote& (0+255),b
  7181  00339C  51E0               	movf	??_controlSelectRemote& (0+255),w,b
  7182  00339E  5C49               	subwf	(_edit_Param+3)^0,w,c	;volatile
  7183  0033A0  6E14               	movwf	___awdiv@dividend^0,c
  7184  0033A2  6A15               	clrf	(___awdiv@dividend+1)^0,c
  7185  0033A4  A0D8               	btfss	status,0,c
  7186  0033A6  0615               	decf	(___awdiv@dividend+1)^0,f,c
  7187  0033A8  0E00               	movlw	0
  7188  0033AA  6E17               	movwf	(___awdiv@divisor+1)^0,c
  7189  0033AC  0E0A               	movlw	10
  7190  0033AE  6E16               	movwf	___awdiv@divisor^0,c
  7191  0033B0  EC95  F03C         	call	___awdiv	;wreg free
  7192  0033B4  5014               	movf	?___awdiv^0,w,c
  7193  0033B6  EC70  F048         	call	_SetSegmentValueIntermitentMain
  7194                           
  7195                           ;sm_MenuConfiguration_MC50.c: 1128:         }
  7196  0033BA  D01C               	goto	l20948
  7197  0033BC                     l20946:
  7198                           
  7199                           ;sm_MenuConfiguration_MC50.c: 1130:         {;sm_MenuConfiguration_MC50.c: 1131:        
      +                               SetSegmentValueMain((edit_Param.tempValue-edit_Param.tempValue%10)/10, edit_Param.t
      +                          empValue%10);
  7200  0033BC  0E0A               	movlw	10
  7201  0033BE  6E10               	movwf	___lbmod@divisor^0,c
  7202  0033C0  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7203  0033C2  EC9C  F046         	call	___lbmod
  7204  0033C6  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  7205  0033C8  0E0A               	movlw	10
  7206  0033CA  6E10               	movwf	___lbmod@divisor^0,c
  7207  0033CC  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7208  0033CE  EC9C  F046         	call	___lbmod
  7209  0033D2  0100               	movlb	0	; () banked
  7210  0033D4  6FE0               	movwf	??_controlSelectRemote& (0+255),b
  7211  0033D6  51E0               	movf	??_controlSelectRemote& (0+255),w,b
  7212  0033D8  5C49               	subwf	(_edit_Param+3)^0,w,c	;volatile
  7213  0033DA  6E14               	movwf	___awdiv@dividend^0,c
  7214  0033DC  6A15               	clrf	(___awdiv@dividend+1)^0,c
  7215  0033DE  A0D8               	btfss	status,0,c
  7216  0033E0  0615               	decf	(___awdiv@dividend+1)^0,f,c
  7217  0033E2  0E00               	movlw	0
  7218  0033E4  6E17               	movwf	(___awdiv@divisor+1)^0,c
  7219  0033E6  0E0A               	movlw	10
  7220  0033E8  6E16               	movwf	___awdiv@divisor^0,c
  7221  0033EA  EC95  F03C         	call	___awdiv	;wreg free
  7222  0033EE  5014               	movf	?___awdiv^0,w,c
  7223  0033F0  ECD4  F047         	call	_SetSegmentValueMain
  7224  0033F4                     l20948:
  7225                           
  7226                           ;sm_MenuConfiguration_MC50.c: 1133:         button_struct.processed=1;
  7227  0033F4  0E01               	movlw	1
  7228  0033F6  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  7229                           
  7230                           ;sm_MenuConfiguration_MC50.c: 1134:     }
  7231  0033F8  0012               	return	
  7232  0033FA                     l20950:
  7233                           
  7234                           ; BSR set to: 1
  7235  0033FA  0E17               	movlw	23
  7236  0033FC  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  7237  0033FE  A4D8               	btfss	status,2,c
  7238  003400  D057               	goto	l20972
  7239                           
  7240                           ; BSR set to: 1
  7241  003402  504A               	movf	(_edit_Param+4)^0,w,c	;volatile
  7242  003404  B4D8               	btfsc	status,2,c
  7243  003406  D054               	goto	l20972
  7244                           
  7245                           ; BSR set to: 1
  7246                           ;sm_MenuConfiguration_MC50.c: 1136:     {;sm_MenuConfiguration_MC50.c: 1137:         ts_
      +                          system.timeoutMenu=((1000/50)*5) ;
  7247  003408  0E00               	movlw	0
  7248  00340A  6FA9               	movwf	(_ts_system+15)& (0+255),b	;volatile
  7249  00340C  0E64               	movlw	100
  7250  00340E  6FA8               	movwf	(_ts_system+14)& (0+255),b	;volatile
  7251                           
  7252                           ; BSR set to: 1
  7253                           ;sm_MenuConfiguration_MC50.c: 1138:         edit_Param.tempValue++;
  7254  003410  2A49               	incf	(_edit_Param+3)^0,f,c	;volatile
  7255                           
  7256                           ; BSR set to: 1
  7257                           ;sm_MenuConfiguration_MC50.c: 1139:         if(edit_Param.tempValue>edit_Param.Max)
  7258  003412  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7259  003414  5C4A               	subwf	(_edit_Param+4)^0,w,c	;volatile
  7260  003416  A0D8               	btfss	status,0,c
  7261                           
  7262                           ; BSR set to: 1
  7263                           ;sm_MenuConfiguration_MC50.c: 1140:         {;sm_MenuConfiguration_MC50.c: 1141:        
      +                                edit_Param.tempValue=edit_Param.Min;
  7264  003418  C04B  F049         	movff	_edit_Param+5,_edit_Param+3	;volatile
  7265                           
  7266                           ; BSR set to: 1
  7267                           ;sm_MenuConfiguration_MC50.c: 1143:         if(cmdMemoryIsEmpty(menu_st.parameterSelecte
      +                          d,edit_Param.tempValue)==1|| edit_Param.tempValue==edit_Param.Max)
  7268  00341C  C049  F02E         	movff	_edit_Param+3,cmdMemoryIsEmpty@position	;volatile
  7269  003420  5168               	movf	(_menu_st+23)& (0+255),w,b
  7270  003422  ECAA  F03A         	call	_cmdMemoryIsEmpty
  7271  003426  06E8               	decf	wreg,f,c
  7272  003428  B4D8               	btfsc	status,2,c
  7273  00342A  D004               	goto	u23980
  7274  00342C  504A               	movf	(_edit_Param+4)^0,w,c	;volatile
  7275  00342E  1849               	xorwf	(_edit_Param+3)^0,w,c	;volatile
  7276  003430  A4D8               	btfss	status,2,c
  7277  003432  D021               	goto	l20968
  7278  003434                     u23980:
  7279                           
  7280                           ;sm_MenuConfiguration_MC50.c: 1144:         {;sm_MenuConfiguration_MC50.c: 1145:        
      +                               SetSegmentValueIntermitentMain((edit_Param.tempValue-edit_Param.tempValue%10)/10, e
      +                          dit_Param.tempValue%10,(1000/50));
  7281  003434  0E0A               	movlw	10
  7282  003436  6E10               	movwf	___lbmod@divisor^0,c
  7283  003438  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7284  00343A  EC9C  F046         	call	___lbmod
  7285  00343E  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  7286  003440  0E00               	movlw	0
  7287  003442  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  7288  003444  0E14               	movlw	20
  7289  003446  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  7290  003448  0E0A               	movlw	10
  7291  00344A  6E10               	movwf	___lbmod@divisor^0,c
  7292  00344C  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7293  00344E  EC9C  F046         	call	___lbmod
  7294  003452  0100               	movlb	0	; () banked
  7295  003454  6FE0               	movwf	??_controlSelectRemote& (0+255),b
  7296  003456  51E0               	movf	??_controlSelectRemote& (0+255),w,b
  7297  003458  5C49               	subwf	(_edit_Param+3)^0,w,c	;volatile
  7298  00345A  6E14               	movwf	___awdiv@dividend^0,c
  7299  00345C  6A15               	clrf	(___awdiv@dividend+1)^0,c
  7300  00345E  A0D8               	btfss	status,0,c
  7301  003460  0615               	decf	(___awdiv@dividend+1)^0,f,c
  7302  003462  0E00               	movlw	0
  7303  003464  6E17               	movwf	(___awdiv@divisor+1)^0,c
  7304  003466  0E0A               	movlw	10
  7305  003468  6E16               	movwf	___awdiv@divisor^0,c
  7306  00346A  EC95  F03C         	call	___awdiv	;wreg free
  7307  00346E  5014               	movf	?___awdiv^0,w,c
  7308  003470  EC70  F048         	call	_SetSegmentValueIntermitentMain
  7309                           
  7310                           ;sm_MenuConfiguration_MC50.c: 1146:         }
  7311  003474  D7BF               	goto	l20948
  7312  003476                     l20968:
  7313                           
  7314                           ;sm_MenuConfiguration_MC50.c: 1148:         {;sm_MenuConfiguration_MC50.c: 1149:        
      +                               SetSegmentValue((edit_Param.tempValue-edit_Param.tempValue%10)/10, edit_Param.tempV
      +                          alue%10);
  7315  003476  0E0A               	movlw	10
  7316  003478  6E10               	movwf	___lbmod@divisor^0,c
  7317  00347A  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7318  00347C  EC9C  F046         	call	___lbmod
  7319  003480  6E1C               	movwf	SetSegmentValue@d2^0,c
  7320  003482  0E0A               	movlw	10
  7321  003484  6E10               	movwf	___lbmod@divisor^0,c
  7322  003486  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7323  003488  EC9C  F046         	call	___lbmod
  7324  00348C  0100               	movlb	0	; () banked
  7325  00348E  6FE0               	movwf	??_controlSelectRemote& (0+255),b
  7326  003490  51E0               	movf	??_controlSelectRemote& (0+255),w,b
  7327  003492  5C49               	subwf	(_edit_Param+3)^0,w,c	;volatile
  7328  003494  6E14               	movwf	___awdiv@dividend^0,c
  7329  003496  6A15               	clrf	(___awdiv@dividend+1)^0,c
  7330  003498  A0D8               	btfss	status,0,c
  7331  00349A  0615               	decf	(___awdiv@dividend+1)^0,f,c
  7332  00349C  0E00               	movlw	0
  7333  00349E  6E17               	movwf	(___awdiv@divisor+1)^0,c
  7334  0034A0  0E0A               	movlw	10
  7335  0034A2  6E16               	movwf	___awdiv@divisor^0,c
  7336  0034A4  EC95  F03C         	call	___awdiv	;wreg free
  7337  0034A8  5014               	movf	?___awdiv^0,w,c
  7338  0034AA  ECEE  F047         	call	_SetSegmentValue
  7339  0034AE  D7A2               	goto	l20948
  7340  0034B0                     l20972:
  7341                           
  7342                           ; BSR set to: 1
  7343  0034B0  0E63               	movlw	99
  7344  0034B2  644A               	cpfsgt	(_edit_Param+4)^0,c	;volatile
  7345  0034B4  D01A               	goto	l20982
  7346                           
  7347                           ; BSR set to: 1
  7348  0034B6  0E63               	movlw	99
  7349  0034B8  6449               	cpfsgt	(_edit_Param+3)^0,c	;volatile
  7350  0034BA  D017               	goto	l20982
  7351                           
  7352                           ; BSR set to: 1
  7353                           ;sm_MenuConfiguration_MC50.c: 1154:     {;sm_MenuConfiguration_MC50.c: 1155:         if(
      +                          menu_st.parameterSelected==0)
  7354  0034BC  5168               	movf	(_menu_st+23)& (0+255),w,b
  7355  0034BE  A4D8               	btfss	status,2,c
  7356  0034C0  D00A               	goto	l20980
  7357                           
  7358                           ; BSR set to: 1
  7359                           ;sm_MenuConfiguration_MC50.c: 1156:         {;sm_MenuConfiguration_MC50.c: 1157:        
      +                               SetSegmentValueIntermitentMain(dL, dU,( 500/50));
  7360  0034C2  0E13               	movlw	19
  7361  0034C4  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  7362  0034C6  0E00               	movlw	0
  7363  0034C8  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  7364  0034CA  0E0A               	movlw	10
  7365  0034CC  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  7366  0034CE  0E12               	movlw	18
  7367  0034D0  EC70  F048         	call	_SetSegmentValueIntermitentMain
  7368                           
  7369                           ;sm_MenuConfiguration_MC50.c: 1158:         }
  7370  0034D4  0012               	return	
  7371  0034D6                     l20980:
  7372                           
  7373                           ; BSR set to: 1
  7374                           ;sm_MenuConfiguration_MC50.c: 1160:         {;sm_MenuConfiguration_MC50.c: 1161:        
      +                               SetSegmentValueIntermitentMain(dL, dP,( 500/50));
  7375  0034D6  0E10               	movlw	16
  7376  0034D8  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  7377  0034DA  0E00               	movlw	0
  7378  0034DC  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  7379  0034DE  0E0A               	movlw	10
  7380  0034E0  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  7381  0034E2  0E12               	movlw	18
  7382  0034E4  EC70  F048         	call	_SetSegmentValueIntermitentMain
  7383  0034E8  0012               	return	
  7384  0034EA                     l20982:
  7385                           
  7386                           ; BSR set to: 1
  7387  0034EA  0100               	movlb	0	; () banked
  7388  0034EC  29E8               	incf	controlSelectRemote@temp& (0+255),w,b
  7389  0034EE  B4D8               	btfsc	status,2,c
  7390  0034F0  D08E               	goto	l21034
  7391                           
  7392                           ; BSR set to: 0
  7393  0034F2  51E8               	movf	controlSelectRemote@temp& (0+255),w,b
  7394  0034F4  B4D8               	btfsc	status,2,c
  7395  0034F6  D00F               	goto	u24070
  7396                           
  7397                           ; BSR set to: 0
  7398  0034F8  05E8               	decf	controlSelectRemote@temp& (0+255),w,b
  7399  0034FA  B4D8               	btfsc	status,2,c
  7400  0034FC  D00C               	goto	u24070
  7401                           
  7402                           ; BSR set to: 0
  7403  0034FE  0E02               	movlw	2
  7404  003500  19E8               	xorwf	controlSelectRemote@temp& (0+255),w,b
  7405  003502  B4D8               	btfsc	status,2,c
  7406  003504  D008               	goto	u24070
  7407                           
  7408                           ; BSR set to: 0
  7409  003506  0E04               	movlw	4
  7410  003508  19E8               	xorwf	controlSelectRemote@temp& (0+255),w,b
  7411  00350A  B4D8               	btfsc	status,2,c
  7412  00350C  D004               	goto	u24070
  7413                           
  7414                           ; BSR set to: 0
  7415  00350E  0E08               	movlw	8
  7416  003510  19E8               	xorwf	controlSelectRemote@temp& (0+255),w,b
  7417  003512  A4D8               	btfss	status,2,c
  7418  003514  D07C               	goto	l21034
  7419  003516                     u24070:
  7420                           
  7421                           ; BSR set to: 0
  7422                           ;sm_MenuConfiguration_MC50.c: 1165:     {;sm_MenuConfiguration_MC50.c: 1166:         cha
      +                          r pos;;sm_MenuConfiguration_MC50.c: 1167:         validSerial=validateRemoteSerialNumber
      +                          (tempSerial,NO,&pos);
  7423  003516  C0E4  F02E         	movff	controlSelectRemote@tempSerial,validateRemoteSerialNumber@serial
  7424  00351A  C0E5  F02F         	movff	controlSelectRemote@tempSerial+1,validateRemoteSerialNumber@serial+1
  7425  00351E  C0E6  F030         	movff	controlSelectRemote@tempSerial+2,validateRemoteSerialNumber@serial+2
  7426  003522  C0E7  F031         	movff	controlSelectRemote@tempSerial+3,validateRemoteSerialNumber@serial+3
  7427  003526  0E00               	movlw	0
  7428  003528  6E32               	movwf	validateRemoteSerialNumber@VerifyOnlySerial^0,c
  7429  00352A  0EE2               	movlw	low controlSelectRemote@pos
  7430  00352C  6E33               	movwf	validateRemoteSerialNumber@position^0,c
  7431  00352E  6A34               	clrf	(validateRemoteSerialNumber@position+1)^0,c
  7432  003530  EC73  F02A         	call	_validateRemoteSerialNumber	;wreg free
  7433  003534  6FE1               	movwf	controlSelectRemote@validSerial& (0+255),b
  7434                           
  7435                           ; BSR set to: 0
  7436                           ;sm_MenuConfiguration_MC50.c: 1169:         TypeRemote_st typeRemote = getTypeRemote();
  7437  003536  EC22  F049         	call	_getTypeRemote	;wreg free
  7438  00353A  0100               	movlb	0	; () banked
  7439  00353C  6FE3               	movwf	controlSelectRemote@typeRemote& (0+255),b
  7440                           
  7441                           ; BSR set to: 0
  7442                           ;sm_MenuConfiguration_MC50.c: 1170:         if(validSerial==0&&(typeRemote==Keeloq_Rolli
      +                          ngCode || (var_sys_NVM.OnlyRollingCode==NO)))
  7443  00353E  51E1               	movf	controlSelectRemote@validSerial& (0+255),w,b
  7444  003540  A4D8               	btfss	status,2,c
  7445  003542  0012               	return	
  7446                           
  7447                           ; BSR set to: 0
  7448  003544  51E3               	movf	controlSelectRemote@typeRemote& (0+255),w,b
  7449  003546  B4D8               	btfsc	status,2,c
  7450  003548  D003               	goto	u24100
  7451                           
  7452                           ; BSR set to: 0
  7453  00354A  51BE               	movf	(_var_sys_NVM+38)& (0+255),w,b	;volatile
  7454  00354C  A4D8               	btfss	status,2,c
  7455  00354E  0012               	return	
  7456  003550                     u24100:
  7457                           
  7458                           ; BSR set to: 0
  7459                           ;sm_MenuConfiguration_MC50.c: 1171:         {;sm_MenuConfiguration_MC50.c: 1172:        
      +                               saveNewSerial(menu_st.parameterSelected,tempSerial,edit_Param.tempValue);
  7460  003550  C0E4  F0D8         	movff	controlSelectRemote@tempSerial,saveNewSerial@tempSerial
  7461  003554  C0E5  F0D9         	movff	controlSelectRemote@tempSerial+1,saveNewSerial@tempSerial+1
  7462  003558  C0E6  F0DA         	movff	controlSelectRemote@tempSerial+2,saveNewSerial@tempSerial+2
  7463  00355C  C0E7  F0DB         	movff	controlSelectRemote@tempSerial+3,saveNewSerial@tempSerial+3
  7464  003560  C049  F0DC         	movff	_edit_Param+3,saveNewSerial@position	;volatile
  7465  003564  0101               	movlb	1	; () banked
  7466  003566  5168               	movf	(_menu_st+23)& (0+255),w,b
  7467  003568  EC41  F03F         	call	_saveNewSerial
  7468                           
  7469                           ;sm_MenuConfiguration_MC50.c: 1173:             sm_send_event(&menuConfiguration_stateMa
      +                          chine, ev_addRemotes);
  7470  00356C  0EBD               	movlw	low _menuConfiguration_stateMachine
  7471  00356E  6E12               	movwf	sm_send_event@psm^0,c
  7472  003570  0E02               	movlw	high _menuConfiguration_stateMachine
  7473  003572  6E13               	movwf	(sm_send_event@psm+1)^0,c
  7474  003574  0E00               	movlw	0
  7475  003576  6E15               	movwf	(sm_send_event@event+1)^0,c
  7476  003578  0E08               	movlw	8
  7477  00357A  6E14               	movwf	sm_send_event@event^0,c
  7478  00357C  EC1C  F041         	call	_sm_send_event	;wreg free
  7479                           
  7480                           ;sm_MenuConfiguration_MC50.c: 1174:             var_sys.DistanceProgrammingActive=NO;
  7481  003580  0E00               	movlw	0
  7482  003582  0101               	movlb	1	; () banked
  7483  003584  6F40               	movwf	(_var_sys+64)& (0+255),b	;volatile
  7484                           
  7485                           ; BSR set to: 1
  7486                           ;sm_MenuConfiguration_MC50.c: 1175:             var_sys.ProgrammingDistanceIs=NoCMD;
  7487  003586  0E00               	movlw	0
  7488  003588  6F3B               	movwf	(_var_sys+59)& (0+255),b	;volatile
  7489                           
  7490                           ; BSR set to: 1
  7491                           ;sm_MenuConfiguration_MC50.c: 1176:             ts_system.timeSinalizationDigit=(1000/50
      +                          )*2;
  7492  00358A  0E00               	movlw	0
  7493  00358C  6FA7               	movwf	(_ts_system+13)& (0+255),b	;volatile
  7494  00358E  0E28               	movlw	40
  7495  003590  6FA6               	movwf	(_ts_system+12)& (0+255),b	;volatile
  7496                           
  7497                           ; BSR set to: 1
  7498                           ;sm_MenuConfiguration_MC50.c: 1177:             SetSegmentValueIntermitentMain((edit_Par
      +                          am.tempValue-edit_Param.tempValue%10)/10, edit_Param.tempValue%10,( 200/50));
  7499  003592  0E0A               	movlw	10
  7500  003594  6E10               	movwf	___lbmod@divisor^0,c
  7501  003596  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7502  003598  EC9C  F046         	call	___lbmod
  7503  00359C  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  7504  00359E  0E00               	movlw	0
  7505  0035A0  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  7506  0035A2  0E04               	movlw	4
  7507  0035A4  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  7508  0035A6  0E0A               	movlw	10
  7509  0035A8  6E10               	movwf	___lbmod@divisor^0,c
  7510  0035AA  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7511  0035AC  EC9C  F046         	call	___lbmod
  7512  0035B0  0100               	movlb	0	; () banked
  7513  0035B2  6FE0               	movwf	??_controlSelectRemote& (0+255),b
  7514  0035B4  51E0               	movf	??_controlSelectRemote& (0+255),w,b
  7515  0035B6  5C49               	subwf	(_edit_Param+3)^0,w,c	;volatile
  7516  0035B8  6E14               	movwf	___awdiv@dividend^0,c
  7517  0035BA  6A15               	clrf	(___awdiv@dividend+1)^0,c
  7518  0035BC  A0D8               	btfss	status,0,c
  7519  0035BE  0615               	decf	(___awdiv@dividend+1)^0,f,c
  7520  0035C0  0E00               	movlw	0
  7521  0035C2  6E17               	movwf	(___awdiv@divisor+1)^0,c
  7522  0035C4  0E0A               	movlw	10
  7523  0035C6  6E16               	movwf	___awdiv@divisor^0,c
  7524  0035C8  EC95  F03C         	call	___awdiv	;wreg free
  7525  0035CC  5014               	movf	?___awdiv^0,w,c
  7526  0035CE  EC70  F048         	call	_SetSegmentValueIntermitentMain
  7527                           
  7528                           ;sm_MenuConfiguration_MC50.c: 1178:             if(edit_Param.Max==edit_Param.tempValue 
      +                          || edit_Param.Max==0 )
  7529  0035D2  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7530  0035D4  184A               	xorwf	(_edit_Param+4)^0,w,c	;volatile
  7531  0035D6  B4D8               	btfsc	status,2,c
  7532  0035D8  D003               	goto	u24120
  7533  0035DA  504A               	movf	(_edit_Param+4)^0,w,c	;volatile
  7534  0035DC  A4D8               	btfss	status,2,c
  7535  0035DE  0012               	return	
  7536  0035E0                     u24120:
  7537                           
  7538                           ;sm_MenuConfiguration_MC50.c: 1179:             {;sm_MenuConfiguration_MC50.c: 1183:    
      +                                       if(var_sys_NVM.positionRemotesFull==0 && var_sys_NVM.positionRemotesFull==0
      +                           && typeRemote==Keeloq_RollingCode)
  7539  0035E0  0100               	movlb	0	; () banked
  7540  0035E2  51B8               	movf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
  7541  0035E4  A4D8               	btfss	status,2,c
  7542  0035E6  D008               	goto	l21028
  7543                           
  7544                           ; BSR set to: 0
  7545  0035E8  51B8               	movf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
  7546  0035EA  A4D8               	btfss	status,2,c
  7547  0035EC  D005               	goto	l21028
  7548                           
  7549                           ; BSR set to: 0
  7550  0035EE  51E3               	movf	controlSelectRemote@typeRemote& (0+255),w,b
  7551  0035F0  A4D8               	btfss	status,2,c
  7552  0035F2  D002               	goto	l21028
  7553                           
  7554                           ; BSR set to: 0
  7555                           ;sm_MenuConfiguration_MC50.c: 1184:                 {;sm_MenuConfiguration_MC50.c: 1186:
      +                                               var_sys_NVM.OnlyRollingCode=YES;
  7556  0035F4  0E01               	movlw	1
  7557  0035F6  6FBE               	movwf	(_var_sys_NVM+38)& (0+255),b	;volatile
  7558  0035F8                     l21028:
  7559                           
  7560                           ; BSR set to: 0
  7561                           ;sm_MenuConfiguration_MC50.c: 1190:                 edit_Param.tempValue++;
  7562  0035F8  2A49               	incf	(_edit_Param+3)^0,f,c	;volatile
  7563                           
  7564                           ; BSR set to: 0
  7565                           ;sm_MenuConfiguration_MC50.c: 1191:                 edit_Param.Value[0]=edit_Param.tempV
      +                          alue;
  7566  0035FA  C047  FFD9         	movff	_edit_Param+1,fsr2l	;volatile
  7567  0035FE  C048  FFDA         	movff	_edit_Param+2,fsr2h	;volatile
  7568  003602  C049  FFDF         	movff	_edit_Param+3,indf2	;volatile
  7569                           
  7570                           ; BSR set to: 0
  7571                           ;sm_MenuConfiguration_MC50.c: 1192:                 SaveNVM_VarSystem(pageMemoryCounters
      +                          );
  7572  003606  0E02               	movlw	2
  7573  003608  ECFD  F044         	call	_SaveNVM_VarSystem
  7574  00360C  0012               	return	
  7575  00360E                     l21034:
  7576                           
  7577                           ; BSR set to: 0
  7578  00360E  504A               	movf	(_edit_Param+4)^0,w,c	;volatile
  7579  003610  1849               	xorwf	(_edit_Param+3)^0,w,c	;volatile
  7580  003612  B4D8               	btfsc	status,2,c
  7581  003614  0012               	return	
  7582                           
  7583                           ; BSR set to: 0
  7584  003616  0E27               	movlw	39
  7585  003618  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  7586  00361A  A4D8               	btfss	status,2,c
  7587  00361C  0012               	return	
  7588                           
  7589                           ; BSR set to: 0
  7590  00361E  0E27               	movlw	39
  7591  003620  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  7592  003622  0012               	return	
  7593                           
  7594                           ; BSR set to: 0
  7595                           ;sm_MenuConfiguration_MC50.c: 1199:     {;sm_MenuConfiguration_MC50.c: 1200:         ts_
      +                          system.timeoutMenu=((1000/50)*5) ;
  7596  003624  0E00               	movlw	0
  7597  003626  0101               	movlb	1	; () banked
  7598  003628  6FA9               	movwf	(_ts_system+15)& (0+255),b	;volatile
  7599  00362A  0E64               	movlw	100
  7600  00362C  6FA8               	movwf	(_ts_system+14)& (0+255),b	;volatile
  7601                           
  7602                           ; BSR set to: 1
  7603                           ;sm_MenuConfiguration_MC50.c: 1201:         RemoveSerial(menu_st.parameterSelected,edit_
      +                          Param.tempValue);
  7604  00362E  C049  F03A         	movff	_edit_Param+3,RemoveSerial@position	;volatile
  7605  003632  5168               	movf	(_menu_st+23)& (0+255),w,b
  7606  003634  EC5A  F03D         	call	_RemoveSerial
  7607                           
  7608                           ;sm_MenuConfiguration_MC50.c: 1202:         SetSegmentValueIntermitentMain((edit_Param.t
      +                          empValue-edit_Param.tempValue%10)/10, edit_Param.tempValue%10,(1000/50));
  7609  003638  0E0A               	movlw	10
  7610  00363A  6E10               	movwf	___lbmod@divisor^0,c
  7611  00363C  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7612  00363E  EC9C  F046         	call	___lbmod
  7613  003642  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  7614  003644  0E00               	movlw	0
  7615  003646  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  7616  003648  0E14               	movlw	20
  7617  00364A  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  7618  00364C  0E0A               	movlw	10
  7619  00364E  6E10               	movwf	___lbmod@divisor^0,c
  7620  003650  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7621  003652  EC9C  F046         	call	___lbmod
  7622  003656  0100               	movlb	0	; () banked
  7623  003658  6FE0               	movwf	??_controlSelectRemote& (0+255),b
  7624  00365A  51E0               	movf	??_controlSelectRemote& (0+255),w,b
  7625  00365C  5C49               	subwf	(_edit_Param+3)^0,w,c	;volatile
  7626  00365E  6E14               	movwf	___awdiv@dividend^0,c
  7627  003660  6A15               	clrf	(___awdiv@dividend+1)^0,c
  7628  003662  A0D8               	btfss	status,0,c
  7629  003664  0615               	decf	(___awdiv@dividend+1)^0,f,c
  7630  003666  0E00               	movlw	0
  7631  003668  6E17               	movwf	(___awdiv@divisor+1)^0,c
  7632  00366A  0E0A               	movlw	10
  7633  00366C  6E16               	movwf	___awdiv@divisor^0,c
  7634  00366E  EC95  F03C         	call	___awdiv	;wreg free
  7635  003672  5014               	movf	?___awdiv^0,w,c
  7636  003674  EC70  F048         	call	_SetSegmentValueIntermitentMain
  7637  003678  0012               	return	
  7638  00367A                     __end_of_controlSelectRemote:
  7639                           	callstack 0
  7640                           
  7641 ;; *************** function _saveNewSerial *****************
  7642 ;; Defined at:
  7643 ;;		line 81 in file "controlMemory_MC50.c"
  7644 ;; Parameters:    Size  Location     Type
  7645 ;;  cmdType         1    wreg     unsigned char 
  7646 ;;  tempSerial      4    0[BANK0 ] unsigned long 
  7647 ;;  position        1    4[BANK0 ] unsigned char 
  7648 ;; Auto vars:     Size  Location     Type
  7649 ;;  cmdType         1   57[COMRAM] unsigned char 
  7650 ;; Return value:  Size  Location     Type
  7651 ;;                  1    wreg      void 
  7652 ;; Registers used:
  7653 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7654 ;; Tracked objects:
  7655 ;;		On entry : 3F/1
  7656 ;;		On exit  : 0/0
  7657 ;;		Unchanged: 0/0
  7658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7659 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7660 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7661 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7662 ;;      Totals:         1       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7663 ;;Total ram usage:        8 bytes
  7664 ;; Hardware stack levels used: 1
  7665 ;; Hardware stack levels required when called: 13
  7666 ;; This function calls:
  7667 ;;		_i2c_writeNBytes
  7668 ;; This function is called by:
  7669 ;;		_controlSelectRemote
  7670 ;; This function uses a non-reentrant model
  7671 ;;
  7672                           
  7673                           	psect	text7
  7674  007E82                     __ptext7:
  7675                           	callstack 0
  7676  007E82                     _saveNewSerial:
  7677                           	callstack 14
  7678                           
  7679                           ;incstack = 0
  7680                           ;saveNewSerial@cmdType stored from wreg
  7681  007E82  6E3A               	movwf	saveNewSerial@cmdType^0,c
  7682                           
  7683                           ;controlMemory_MC50.c: 81: void saveNewSerial(char cmdType,unsigned long tempSerial, cha
      +                          r position);controlMemory_MC50.c: 82: {;controlMemory_MC50.c: 83:     if(cmdType==0)
  7684  007E84  503A               	movf	saveNewSerial@cmdType^0,w,c
  7685  007E86  A4D8               	btfss	status,2,c
  7686  007E88  D01A               	goto	l19580
  7687                           
  7688                           ;controlMemory_MC50.c: 84:     {;controlMemory_MC50.c: 86:         i2c_writeNBytes(0x50,
      +                           (uint16_t)(0x0200 + (position * 4)), (char*)&tempSerial, 4);
  7689  007E8A  0100               	movlb	0	; () banked
  7690  007E8C  51DC               	movf	saveNewSerial@position& (0+255),w,b
  7691  007E8E  6FDD               	movwf	??_saveNewSerial& (0+255),b
  7692  007E90  6BDE               	clrf	(??_saveNewSerial+1)& (0+255),b
  7693  007E92  90D8               	bcf	status,0,c
  7694  007E94  37DD               	rlcf	??_saveNewSerial& (0+255),f,b
  7695  007E96  37DE               	rlcf	(??_saveNewSerial+1)& (0+255),f,b
  7696  007E98  90D8               	bcf	status,0,c
  7697  007E9A  37DD               	rlcf	??_saveNewSerial& (0+255),f,b
  7698  007E9C  37DE               	rlcf	(??_saveNewSerial+1)& (0+255),f,b
  7699  007E9E  0E00               	movlw	0
  7700  007EA0  25DD               	addwf	??_saveNewSerial& (0+255),w,b
  7701  007EA2  6E22               	movwf	i2c_writeNBytes@reg^0,c
  7702  007EA4  0E02               	movlw	2
  7703  007EA6  21DE               	addwfc	(??_saveNewSerial+1)& (0+255),w,b
  7704  007EA8  6E23               	movwf	(i2c_writeNBytes@reg+1)^0,c
  7705  007EAA  0ED8               	movlw	low saveNewSerial@tempSerial
  7706  007EAC  6E24               	movwf	i2c_writeNBytes@data^0,c
  7707  007EAE  0E00               	movlw	0
  7708  007EB0  6E26               	movwf	(i2c_writeNBytes@len+1)^0,c
  7709  007EB2  0E04               	movlw	4
  7710  007EB4  6E25               	movwf	i2c_writeNBytes@len^0,c
  7711  007EB6  0E50               	movlw	80
  7712  007EB8  EC07  F03F         	call	_i2c_writeNBytes
  7713                           
  7714                           ;controlMemory_MC50.c: 87:     }
  7715  007EBC  0012               	return	
  7716  007EBE                     l19580:
  7717                           
  7718                           ;controlMemory_MC50.c: 89:     {;controlMemory_MC50.c: 91:         i2c_writeNBytes(0x50,
      +                           (uint16_t)(0x0500 + (position * 4)), (char*)&tempSerial, 4);
  7719  007EBE  0100               	movlb	0	; () banked
  7720  007EC0  51DC               	movf	saveNewSerial@position& (0+255),w,b
  7721  007EC2  6FDD               	movwf	??_saveNewSerial& (0+255),b
  7722  007EC4  6BDE               	clrf	(??_saveNewSerial+1)& (0+255),b
  7723  007EC6  90D8               	bcf	status,0,c
  7724  007EC8  37DD               	rlcf	??_saveNewSerial& (0+255),f,b
  7725  007ECA  37DE               	rlcf	(??_saveNewSerial+1)& (0+255),f,b
  7726  007ECC  90D8               	bcf	status,0,c
  7727  007ECE  37DD               	rlcf	??_saveNewSerial& (0+255),f,b
  7728  007ED0  37DE               	rlcf	(??_saveNewSerial+1)& (0+255),f,b
  7729  007ED2  0E00               	movlw	0
  7730  007ED4  25DD               	addwf	??_saveNewSerial& (0+255),w,b
  7731  007ED6  6E22               	movwf	i2c_writeNBytes@reg^0,c
  7732  007ED8  0E05               	movlw	5
  7733  007EDA  21DE               	addwfc	(??_saveNewSerial+1)& (0+255),w,b
  7734  007EDC  6E23               	movwf	(i2c_writeNBytes@reg+1)^0,c
  7735  007EDE  0ED8               	movlw	low saveNewSerial@tempSerial
  7736  007EE0  6E24               	movwf	i2c_writeNBytes@data^0,c
  7737  007EE2  0E00               	movlw	0
  7738  007EE4  6E26               	movwf	(i2c_writeNBytes@len+1)^0,c
  7739  007EE6  0E04               	movlw	4
  7740  007EE8  6E25               	movwf	i2c_writeNBytes@len^0,c
  7741  007EEA  0E50               	movlw	80
  7742  007EEC  EC07  F03F         	call	_i2c_writeNBytes
  7743  007EF0  0012               	return		;funcret
  7744  007EF2                     __end_of_saveNewSerial:
  7745                           	callstack 0
  7746                           
  7747 ;; *************** function _getTypeRemote *****************
  7748 ;; Defined at:
  7749 ;;		line 459 in file "inputs_MC50.c"
  7750 ;; Parameters:    Size  Location     Type
  7751 ;;		None
  7752 ;; Auto vars:     Size  Location     Type
  7753 ;;		None
  7754 ;; Return value:  Size  Location     Type
  7755 ;;                  1    wreg      enum E10559
  7756 ;; Registers used:
  7757 ;;		wreg, status,2
  7758 ;; Tracked objects:
  7759 ;;		On entry : 3F/0
  7760 ;;		On exit  : 3F/2
  7761 ;;		Unchanged: 0/0
  7762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7763 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7764 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7766 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7767 ;;Total ram usage:        0 bytes
  7768 ;; Hardware stack levels used: 1
  7769 ;; Hardware stack levels required when called: 4
  7770 ;; This function calls:
  7771 ;;		Nothing
  7772 ;; This function is called by:
  7773 ;;		_controlSelectRemote
  7774 ;; This function uses a non-reentrant model
  7775 ;;
  7776                           
  7777                           	psect	text8
  7778  009244                     __ptext8:
  7779                           	callstack 0
  7780  009244                     _getTypeRemote:
  7781                           	callstack 23
  7782                           
  7783                           ; BSR set to: 0
  7784                           ;inputs_MC50.c: 460:     return classic_data.type;
  7785                           
  7786                           ;incstack = 0
  7787  009244  0102               	movlb	2	; () banked
  7788  009246  51A0               	movf	(_classic_data+14)& (0+255),w,b
  7789                           
  7790                           ; BSR set to: 2
  7791  009248  0012               	return		;funcret
  7792  00924A                     __end_of_getTypeRemote:
  7793                           	callstack 0
  7794                           
  7795 ;; *************** function _getSerialCmd *****************
  7796 ;; Defined at:
  7797 ;;		line 442 in file "inputs_MC50.c"
  7798 ;; Parameters:    Size  Location     Type
  7799 ;;  serial          1   26[COMRAM] PTR unsigned long 
  7800 ;;		 -> controlSelectRemote@tempSerial(4), 
  7801 ;; Auto vars:     Size  Location     Type
  7802 ;;  temp            1   27[COMRAM] char 
  7803 ;; Return value:  Size  Location     Type
  7804 ;;                  1    wreg      char 
  7805 ;; Registers used:
  7806 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7807 ;; Tracked objects:
  7808 ;;		On entry : 3F/1
  7809 ;;		On exit  : 0/0
  7810 ;;		Unchanged: 0/0
  7811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7812 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7813 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7815 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7816 ;;Total ram usage:        2 bytes
  7817 ;; Hardware stack levels used: 1
  7818 ;; Hardware stack levels required when called: 5
  7819 ;; This function calls:
  7820 ;;		_memcpy
  7821 ;; This function is called by:
  7822 ;;		_controlSelectRemote
  7823 ;; This function uses a non-reentrant model
  7824 ;;
  7825                           
  7826                           	psect	text9
  7827  008646                     __ptext9:
  7828                           	callstack 0
  7829  008646                     _getSerialCmd:
  7830                           	callstack 22
  7831                           
  7832                           ; BSR set to: 1
  7833                           ;inputs_MC50.c: 443:     signed char temp=-1;
  7834                           
  7835                           ; BSR set to: 2
  7836                           ;incstack = 0
  7837  008646  681C               	setf	getSerialCmd@temp^0,c
  7838                           
  7839                           ; BSR set to: 1
  7840                           ;inputs_MC50.c: 444:     if(RFFull)
  7841  008648  0100               	movlb	0	; () banked
  7842  00864A  518B               	movf	_RFFull& (0+255),w,b	;volatile
  7843  00864C  B4D8               	btfsc	status,2,c
  7844  00864E  D020               	goto	l19630
  7845                           
  7846                           ; BSR set to: 0
  7847                           ;inputs_MC50.c: 445:     {;inputs_MC50.c: 446:         if(RFFull_12BIT)
  7848  008650  518A               	movf	_RFFull_12BIT& (0+255),w,b	;volatile
  7849  008652  B4D8               	btfsc	status,2,c
  7850  008654  D00E               	goto	l19626
  7851                           
  7852                           ; BSR set to: 0
  7853                           ;inputs_MC50.c: 447:         {;inputs_MC50.c: 448:             memcpy((char*)serial,&cla
      +                          ssic_data.serialnumber,4);
  7854  008656  C01B  F010         	movff	getSerialCmd@serial,memcpy@d1
  7855  00865A  6A11               	clrf	(memcpy@d1+1)^0,c
  7856  00865C  0E96               	movlw	low (_classic_data+4)
  7857  00865E  6E12               	movwf	memcpy@s1^0,c
  7858  008660  0E02               	movlw	high (_classic_data+4)
  7859  008662  6E13               	movwf	(memcpy@s1+1)^0,c
  7860  008664  0E00               	movlw	0
  7861  008666  6E15               	movwf	(memcpy@n+1)^0,c
  7862  008668  0E04               	movlw	4
  7863  00866A  6E14               	movwf	memcpy@n^0,c
  7864  00866C  ECFF  F043         	call	_memcpy	;wreg free
  7865                           
  7866                           ;inputs_MC50.c: 449:         }
  7867  008670  D00D               	goto	l19628
  7868  008672                     l19626:
  7869                           
  7870                           ; BSR set to: 0
  7871                           ;inputs_MC50.c: 451:         {;inputs_MC50.c: 452:             memcpy((char*)serial,(cha
      +                          r*)BufferRF+4,4);
  7872  008672  C01B  F010         	movff	getSerialCmd@serial,memcpy@d1
  7873  008676  6A11               	clrf	(memcpy@d1+1)^0,c
  7874  008678  0ECC               	movlw	low (_BufferRF+4)
  7875  00867A  6E12               	movwf	memcpy@s1^0,c
  7876  00867C  0E02               	movlw	high (_BufferRF+4)
  7877  00867E  6E13               	movwf	(memcpy@s1+1)^0,c
  7878  008680  0E00               	movlw	0
  7879  008682  6E15               	movwf	(memcpy@n+1)^0,c
  7880  008684  0E04               	movlw	4
  7881  008686  6E14               	movwf	memcpy@n^0,c
  7882  008688  ECFF  F043         	call	_memcpy	;wreg free
  7883  00868C                     l19628:
  7884                           
  7885                           ;inputs_MC50.c: 454:         temp=classic_data.fcode1;
  7886  00868C  C29E  F01C         	movff	_classic_data+12,getSerialCmd@temp
  7887  008690                     l19630:
  7888                           
  7889                           ;inputs_MC50.c: 456:     return temp;
  7890  008690  501C               	movf	getSerialCmd@temp^0,w,c
  7891  008692  0012               	return		;funcret
  7892  008694                     __end_of_getSerialCmd:
  7893                           	callstack 0
  7894                           
  7895 ;; *************** function _cmdMemoryIsEmpty *****************
  7896 ;; Defined at:
  7897 ;;		line 110 in file "controlMemory_MC50.c"
  7898 ;; Parameters:    Size  Location     Type
  7899 ;;  cmdType         1    wreg     unsigned char 
  7900 ;;  position        1   45[COMRAM] unsigned char 
  7901 ;; Auto vars:     Size  Location     Type
  7902 ;;  cmdType         1   48[COMRAM] unsigned char 
  7903 ;;  tempSerial      4   49[COMRAM] unsigned long 
  7904 ;; Return value:  Size  Location     Type
  7905 ;;                  1    wreg      unsigned char 
  7906 ;; Registers used:
  7907 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7908 ;; Tracked objects:
  7909 ;;		On entry : 3F/1
  7910 ;;		On exit  : 0/0
  7911 ;;		Unchanged: 0/0
  7912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7913 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7914 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7915 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7916 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7917 ;;Total ram usage:        8 bytes
  7918 ;; Hardware stack levels used: 1
  7919 ;; Hardware stack levels required when called: 13
  7920 ;; This function calls:
  7921 ;;		_i2c_readDataBlock
  7922 ;; This function is called by:
  7923 ;;		_setValueToEdit
  7924 ;;		_controlSelectRemote
  7925 ;; This function uses a non-reentrant model
  7926 ;;
  7927                           
  7928                           	psect	text10
  7929  007554                     __ptext10:
  7930                           	callstack 0
  7931  007554                     _cmdMemoryIsEmpty:
  7932                           	callstack 14
  7933                           
  7934                           ;incstack = 0
  7935                           ;cmdMemoryIsEmpty@cmdType stored from wreg
  7936  007554  6E31               	movwf	cmdMemoryIsEmpty@cmdType^0,c
  7937                           
  7938                           ;controlMemory_MC50.c: 110: char cmdMemoryIsEmpty(char cmdType, char position);controlMe
      +                          mory_MC50.c: 111: {;controlMemory_MC50.c: 112:     unsigned long tempSerial=0;
  7939  007556  0E00               	movlw	0
  7940  007558  6E32               	movwf	cmdMemoryIsEmpty@tempSerial^0,c
  7941  00755A  0E00               	movlw	0
  7942  00755C  6E33               	movwf	(cmdMemoryIsEmpty@tempSerial+1)^0,c
  7943  00755E  0E00               	movlw	0
  7944  007560  6E34               	movwf	(cmdMemoryIsEmpty@tempSerial+2)^0,c
  7945  007562  0E00               	movlw	0
  7946  007564  6E35               	movwf	(cmdMemoryIsEmpty@tempSerial+3)^0,c
  7947                           
  7948                           ;controlMemory_MC50.c: 115:      if(cmdType==0)
  7949  007566  5031               	movf	cmdMemoryIsEmpty@cmdType^0,w,c
  7950  007568  A4D8               	btfss	status,2,c
  7951  00756A  D01A               	goto	l19596
  7952                           
  7953                           ;controlMemory_MC50.c: 116:     {;controlMemory_MC50.c: 117:          i2c_readDataBlock(
      +                          0x50, (uint16_t)(0x0200 + (position * 4)),(char*)&tempSerial, 4);
  7954  00756C  502E               	movf	cmdMemoryIsEmpty@position^0,w,c
  7955  00756E  6E2F               	movwf	??_cmdMemoryIsEmpty^0,c
  7956  007570  6A30               	clrf	(??_cmdMemoryIsEmpty+1)^0,c
  7957  007572  90D8               	bcf	status,0,c
  7958  007574  362F               	rlcf	??_cmdMemoryIsEmpty^0,f,c
  7959  007576  3630               	rlcf	(??_cmdMemoryIsEmpty+1)^0,f,c
  7960  007578  90D8               	bcf	status,0,c
  7961  00757A  362F               	rlcf	??_cmdMemoryIsEmpty^0,f,c
  7962  00757C  3630               	rlcf	(??_cmdMemoryIsEmpty+1)^0,f,c
  7963  00757E  0E00               	movlw	0
  7964  007580  242F               	addwf	??_cmdMemoryIsEmpty^0,w,c
  7965  007582  6E22               	movwf	i2c_readDataBlock@reg^0,c
  7966  007584  0E02               	movlw	2
  7967  007586  2030               	addwfc	(??_cmdMemoryIsEmpty+1)^0,w,c
  7968  007588  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
  7969  00758A  0E32               	movlw	low cmdMemoryIsEmpty@tempSerial
  7970  00758C  6E24               	movwf	i2c_readDataBlock@data^0,c
  7971  00758E  6A25               	clrf	(i2c_readDataBlock@data+1)^0,c
  7972  007590  0E00               	movlw	0
  7973  007592  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
  7974  007594  0E04               	movlw	4
  7975  007596  6E26               	movwf	i2c_readDataBlock@len^0,c
  7976  007598  0E50               	movlw	80
  7977  00759A  ECCC  F03E         	call	_i2c_readDataBlock
  7978                           
  7979                           ;controlMemory_MC50.c: 118:     }
  7980  00759E  D019               	goto	l19598
  7981  0075A0                     l19596:
  7982                           
  7983                           ;controlMemory_MC50.c: 120:     {;controlMemory_MC50.c: 121:          i2c_readDataBlock(
      +                          0x50, (uint16_t)(0x0500 + (position * 4)),(char*)&tempSerial, 4);
  7984  0075A0  502E               	movf	cmdMemoryIsEmpty@position^0,w,c
  7985  0075A2  6E2F               	movwf	??_cmdMemoryIsEmpty^0,c
  7986  0075A4  6A30               	clrf	(??_cmdMemoryIsEmpty+1)^0,c
  7987  0075A6  90D8               	bcf	status,0,c
  7988  0075A8  362F               	rlcf	??_cmdMemoryIsEmpty^0,f,c
  7989  0075AA  3630               	rlcf	(??_cmdMemoryIsEmpty+1)^0,f,c
  7990  0075AC  90D8               	bcf	status,0,c
  7991  0075AE  362F               	rlcf	??_cmdMemoryIsEmpty^0,f,c
  7992  0075B0  3630               	rlcf	(??_cmdMemoryIsEmpty+1)^0,f,c
  7993  0075B2  0E00               	movlw	0
  7994  0075B4  242F               	addwf	??_cmdMemoryIsEmpty^0,w,c
  7995  0075B6  6E22               	movwf	i2c_readDataBlock@reg^0,c
  7996  0075B8  0E05               	movlw	5
  7997  0075BA  2030               	addwfc	(??_cmdMemoryIsEmpty+1)^0,w,c
  7998  0075BC  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
  7999  0075BE  0E32               	movlw	low cmdMemoryIsEmpty@tempSerial
  8000  0075C0  6E24               	movwf	i2c_readDataBlock@data^0,c
  8001  0075C2  6A25               	clrf	(i2c_readDataBlock@data+1)^0,c
  8002  0075C4  0E00               	movlw	0
  8003  0075C6  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
  8004  0075C8  0E04               	movlw	4
  8005  0075CA  6E26               	movwf	i2c_readDataBlock@len^0,c
  8006  0075CC  0E50               	movlw	80
  8007  0075CE  ECCC  F03E         	call	_i2c_readDataBlock
  8008  0075D2                     l19598:
  8009                           
  8010                           ;controlMemory_MC50.c: 124:      if( tempSerial==0)
  8011  0075D2  5032               	movf	cmdMemoryIsEmpty@tempSerial^0,w,c
  8012  0075D4  1033               	iorwf	(cmdMemoryIsEmpty@tempSerial+1)^0,w,c
  8013  0075D6  1034               	iorwf	(cmdMemoryIsEmpty@tempSerial+2)^0,w,c
  8014  0075D8  1035               	iorwf	(cmdMemoryIsEmpty@tempSerial+3)^0,w,c
  8015  0075DA  A4D8               	btfss	status,2,c
  8016  0075DC  D002               	goto	l19606
  8017                           
  8018                           ;controlMemory_MC50.c: 125:      {;controlMemory_MC50.c: 126:          return 1;
  8019  0075DE  0E01               	movlw	1
  8020  0075E0  0012               	return	
  8021  0075E2                     l19606:
  8022                           
  8023                           ;controlMemory_MC50.c: 129:      {;controlMemory_MC50.c: 130:          return 0;
  8024  0075E2  0E00               	movlw	0
  8025  0075E4  0012               	return		;funcret
  8026  0075E6                     __end_of_cmdMemoryIsEmpty:
  8027                           	callstack 0
  8028                           
  8029 ;; *************** function _RemoveSerial *****************
  8030 ;; Defined at:
  8031 ;;		line 95 in file "controlMemory_MC50.c"
  8032 ;; Parameters:    Size  Location     Type
  8033 ;;  cmdType         1    wreg     unsigned char 
  8034 ;;  position        1   57[COMRAM] unsigned char 
  8035 ;; Auto vars:     Size  Location     Type
  8036 ;;  cmdType         1    2[BANK0 ] unsigned char 
  8037 ;;  tempSerial      4    3[BANK0 ] unsigned long 
  8038 ;; Return value:  Size  Location     Type
  8039 ;;                  1    wreg      void 
  8040 ;; Registers used:
  8041 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8042 ;; Tracked objects:
  8043 ;;		On entry : 3F/1
  8044 ;;		On exit  : 0/0
  8045 ;;		Unchanged: 0/0
  8046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8047 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8048 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8049 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8050 ;;      Totals:         1       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8051 ;;Total ram usage:        8 bytes
  8052 ;; Hardware stack levels used: 1
  8053 ;; Hardware stack levels required when called: 13
  8054 ;; This function calls:
  8055 ;;		_i2c_writeNBytes
  8056 ;; This function is called by:
  8057 ;;		_controlSelectRemote
  8058 ;; This function uses a non-reentrant model
  8059 ;;
  8060                           
  8061                           	psect	text11
  8062  007AB4                     __ptext11:
  8063                           	callstack 0
  8064  007AB4                     _RemoveSerial:
  8065                           	callstack 14
  8066                           
  8067                           ;incstack = 0
  8068                           ;RemoveSerial@cmdType stored from wreg
  8069  007AB4  0100               	movlb	0	; () banked
  8070  007AB6  6FDA               	movwf	RemoveSerial@cmdType& (0+255),b
  8071                           
  8072                           ;controlMemory_MC50.c: 95: void RemoveSerial(char cmdType, char position);controlMemory_
      +                          MC50.c: 96: {;controlMemory_MC50.c: 97:     unsigned long tempSerial=0;
  8073  007AB8  0E00               	movlw	0
  8074  007ABA  0100               	movlb	0	; () banked
  8075  007ABC  6FDB               	movwf	RemoveSerial@tempSerial& (0+255),b
  8076  007ABE  0E00               	movlw	0
  8077  007AC0  6FDC               	movwf	(RemoveSerial@tempSerial+1)& (0+255),b
  8078  007AC2  0E00               	movlw	0
  8079  007AC4  6FDD               	movwf	(RemoveSerial@tempSerial+2)& (0+255),b
  8080  007AC6  0E00               	movlw	0
  8081  007AC8  6FDE               	movwf	(RemoveSerial@tempSerial+3)& (0+255),b
  8082                           
  8083                           ; BSR set to: 0
  8084                           ;controlMemory_MC50.c: 100:     if(cmdType==0)
  8085  007ACA  51DA               	movf	RemoveSerial@cmdType& (0+255),w,b
  8086  007ACC  A4D8               	btfss	status,2,c
  8087  007ACE  D019               	goto	l19588
  8088                           
  8089                           ; BSR set to: 0
  8090                           ;controlMemory_MC50.c: 101:     {;controlMemory_MC50.c: 102:        i2c_writeNBytes(0x50
      +                          , (uint16_t)(0x0200 + (position * 4)), (char*)&tempSerial, 4);
  8091  007AD0  503A               	movf	RemoveSerial@position^0,w,c
  8092  007AD2  6FD8               	movwf	??_RemoveSerial& (0+255),b
  8093  007AD4  6BD9               	clrf	(??_RemoveSerial+1)& (0+255),b
  8094  007AD6  90D8               	bcf	status,0,c
  8095  007AD8  37D8               	rlcf	??_RemoveSerial& (0+255),f,b
  8096  007ADA  37D9               	rlcf	(??_RemoveSerial+1)& (0+255),f,b
  8097  007ADC  90D8               	bcf	status,0,c
  8098  007ADE  37D8               	rlcf	??_RemoveSerial& (0+255),f,b
  8099  007AE0  37D9               	rlcf	(??_RemoveSerial+1)& (0+255),f,b
  8100  007AE2  0E00               	movlw	0
  8101  007AE4  25D8               	addwf	??_RemoveSerial& (0+255),w,b
  8102  007AE6  6E22               	movwf	i2c_writeNBytes@reg^0,c
  8103  007AE8  0E02               	movlw	2
  8104  007AEA  21D9               	addwfc	(??_RemoveSerial+1)& (0+255),w,b
  8105  007AEC  6E23               	movwf	(i2c_writeNBytes@reg+1)^0,c
  8106  007AEE  0EDB               	movlw	low RemoveSerial@tempSerial
  8107  007AF0  6E24               	movwf	i2c_writeNBytes@data^0,c
  8108  007AF2  0E00               	movlw	0
  8109  007AF4  6E26               	movwf	(i2c_writeNBytes@len+1)^0,c
  8110  007AF6  0E04               	movlw	4
  8111  007AF8  6E25               	movwf	i2c_writeNBytes@len^0,c
  8112  007AFA  0E50               	movlw	80
  8113  007AFC  EC07  F03F         	call	_i2c_writeNBytes
  8114                           
  8115                           ;controlMemory_MC50.c: 103:     }
  8116  007B00  0012               	return	
  8117  007B02                     l19588:
  8118                           
  8119                           ; BSR set to: 0
  8120                           ;controlMemory_MC50.c: 105:     {;controlMemory_MC50.c: 106:        i2c_writeNBytes(0x50
      +                          , (uint16_t)(0x0500 + (position * 4)), (char*)&tempSerial, 4);
  8121  007B02  503A               	movf	RemoveSerial@position^0,w,c
  8122  007B04  6FD8               	movwf	??_RemoveSerial& (0+255),b
  8123  007B06  6BD9               	clrf	(??_RemoveSerial+1)& (0+255),b
  8124  007B08  90D8               	bcf	status,0,c
  8125  007B0A  37D8               	rlcf	??_RemoveSerial& (0+255),f,b
  8126  007B0C  37D9               	rlcf	(??_RemoveSerial+1)& (0+255),f,b
  8127  007B0E  90D8               	bcf	status,0,c
  8128  007B10  37D8               	rlcf	??_RemoveSerial& (0+255),f,b
  8129  007B12  37D9               	rlcf	(??_RemoveSerial+1)& (0+255),f,b
  8130  007B14  0E00               	movlw	0
  8131  007B16  25D8               	addwf	??_RemoveSerial& (0+255),w,b
  8132  007B18  6E22               	movwf	i2c_writeNBytes@reg^0,c
  8133  007B1A  0E05               	movlw	5
  8134  007B1C  21D9               	addwfc	(??_RemoveSerial+1)& (0+255),w,b
  8135  007B1E  6E23               	movwf	(i2c_writeNBytes@reg+1)^0,c
  8136  007B20  0EDB               	movlw	low RemoveSerial@tempSerial
  8137  007B22  6E24               	movwf	i2c_writeNBytes@data^0,c
  8138  007B24  0E00               	movlw	0
  8139  007B26  6E26               	movwf	(i2c_writeNBytes@len+1)^0,c
  8140  007B28  0E04               	movlw	4
  8141  007B2A  6E25               	movwf	i2c_writeNBytes@len^0,c
  8142  007B2C  0E50               	movlw	80
  8143  007B2E  EC07  F03F         	call	_i2c_writeNBytes
  8144  007B32  0012               	return		;funcret
  8145  007B34                     __end_of_RemoveSerial:
  8146                           	callstack 0
  8147                           
  8148 ;; *************** function _controlSaveRemote *****************
  8149 ;; Defined at:
  8150 ;;		line 1207 in file "sm_MenuConfiguration_MC50.c"
  8151 ;; Parameters:    Size  Location     Type
  8152 ;;		None
  8153 ;; Auto vars:     Size  Location     Type
  8154 ;;		None
  8155 ;; Return value:  Size  Location     Type
  8156 ;;                  1    wreg      void 
  8157 ;; Registers used:
  8158 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8159 ;; Tracked objects:
  8160 ;;		On entry : 3F/0
  8161 ;;		On exit  : 0/0
  8162 ;;		Unchanged: 0/0
  8163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8164 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8165 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8166 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8167 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8168 ;;Total ram usage:        1 bytes
  8169 ;; Hardware stack levels used: 1
  8170 ;; Hardware stack levels required when called: 6
  8171 ;; This function calls:
  8172 ;;		_ClearFlag_rfCMD
  8173 ;;		_SetSegmentValueIntermitentMain
  8174 ;;		_SetSegmentValueMain
  8175 ;;		___awdiv
  8176 ;;		___lbmod
  8177 ;;		_sm_send_event
  8178 ;; This function is called by:
  8179 ;;		_sm_execute_menuConfiguration
  8180 ;; This function uses a non-reentrant model
  8181 ;;
  8182                           
  8183                           	psect	text12
  8184  007178                     __ptext12:
  8185                           	callstack 0
  8186  007178                     _controlSaveRemote:
  8187                           	callstack 22
  8188                           
  8189                           ; BSR set to: 0
  8190                           ;sm_MenuConfiguration_MC50.c: 1208:      if (ts_system.timeSinalizationDigit<=0)
  8191                           
  8192                           ;incstack = 0
  8193  007178  0101               	movlb	1	; () banked
  8194  00717A  BFA7               	btfsc	(_ts_system+13)& (0+255),7,b	;volatile
  8195  00717C  D005               	goto	u24190
  8196  00717E  51A7               	movf	(_ts_system+13)& (0+255),w,b	;volatile
  8197  007180  E154               	bnz	l3482
  8198  007182  05A6               	decf	(_ts_system+12)& (0+255),w,b	;volatile
  8199  007184  B0D8               	btfsc	status,0,c
  8200  007186  0012               	return	
  8201  007188                     u24190:
  8202                           
  8203                           ; BSR set to: 1
  8204                           ;sm_MenuConfiguration_MC50.c: 1209:      {;sm_MenuConfiguration_MC50.c: 1210:          i
      +                          f(edit_Param.Max==0)
  8205  007188  504A               	movf	(_edit_Param+4)^0,w,c	;volatile
  8206  00718A  A4D8               	btfss	status,2,c
  8207  00718C  D02E               	goto	l21056
  8208                           
  8209                           ; BSR set to: 1
  8210                           ;sm_MenuConfiguration_MC50.c: 1211:          {;sm_MenuConfiguration_MC50.c: 1212:       
      +                                 ts_system.timeoutMenu=10*(1000/50);
  8211  00718E  0E00               	movlw	0
  8212  007190  6FA9               	movwf	(_ts_system+15)& (0+255),b	;volatile
  8213  007192  0EC8               	movlw	200
  8214  007194  6FA8               	movwf	(_ts_system+14)& (0+255),b	;volatile
  8215                           
  8216                           ; BSR set to: 1
  8217                           ;sm_MenuConfiguration_MC50.c: 1213:              sm_send_event(&menuConfiguration_stateM
      +                          achine, ev_NextRemote);
  8218  007196  0EBD               	movlw	low _menuConfiguration_stateMachine
  8219  007198  6E12               	movwf	sm_send_event@psm^0,c
  8220  00719A  0E02               	movlw	high _menuConfiguration_stateMachine
  8221  00719C  6E13               	movwf	(sm_send_event@psm+1)^0,c
  8222  00719E  0E00               	movlw	0
  8223  0071A0  6E15               	movwf	(sm_send_event@event+1)^0,c
  8224  0071A2  0E09               	movlw	9
  8225  0071A4  6E14               	movwf	sm_send_event@event^0,c
  8226  0071A6  EC1C  F041         	call	_sm_send_event	;wreg free
  8227                           
  8228                           ;sm_MenuConfiguration_MC50.c: 1214:              SetSegmentValueIntermitentMain((edit_Pa
      +                          ram.tempValue-edit_Param.tempValue%10)/10, edit_Param.tempValue%10,(1000/50));
  8229  0071AA  0E0A               	movlw	10
  8230  0071AC  6E10               	movwf	___lbmod@divisor^0,c
  8231  0071AE  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  8232  0071B0  EC9C  F046         	call	___lbmod
  8233  0071B4  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  8234  0071B6  0E00               	movlw	0
  8235  0071B8  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  8236  0071BA  0E14               	movlw	20
  8237  0071BC  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  8238  0071BE  0E0A               	movlw	10
  8239  0071C0  6E10               	movwf	___lbmod@divisor^0,c
  8240  0071C2  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  8241  0071C4  EC9C  F046         	call	___lbmod
  8242  0071C8  6E20               	movwf	??_controlSaveRemote^0,c
  8243  0071CA  5020               	movf	??_controlSaveRemote^0,w,c
  8244  0071CC  5C49               	subwf	(_edit_Param+3)^0,w,c	;volatile
  8245  0071CE  6E14               	movwf	___awdiv@dividend^0,c
  8246  0071D0  6A15               	clrf	(___awdiv@dividend+1)^0,c
  8247  0071D2  A0D8               	btfss	status,0,c
  8248  0071D4  0615               	decf	(___awdiv@dividend+1)^0,f,c
  8249  0071D6  0E00               	movlw	0
  8250  0071D8  6E17               	movwf	(___awdiv@divisor+1)^0,c
  8251  0071DA  0E0A               	movlw	10
  8252  0071DC  6E16               	movwf	___awdiv@divisor^0,c
  8253  0071DE  EC95  F03C         	call	___awdiv	;wreg free
  8254  0071E2  5014               	movf	?___awdiv^0,w,c
  8255  0071E4  EC70  F048         	call	_SetSegmentValueIntermitentMain
  8256                           
  8257                           ;sm_MenuConfiguration_MC50.c: 1215:          }
  8258  0071E8  0012               	return	
  8259  0071EA                     l21056:
  8260                           
  8261                           ; BSR set to: 1
  8262                           ;sm_MenuConfiguration_MC50.c: 1217:          {;sm_MenuConfiguration_MC50.c: 1218:       
      +                                sm_send_event(&main_stateMachine, ev_goto_StandBy);
  8263  0071EA  0EED               	movlw	low _main_stateMachine
  8264  0071EC  6E12               	movwf	sm_send_event@psm^0,c
  8265  0071EE  0E01               	movlw	high _main_stateMachine
  8266  0071F0  6E13               	movwf	(sm_send_event@psm+1)^0,c
  8267  0071F2  0E00               	movlw	0
  8268  0071F4  6E15               	movwf	(sm_send_event@event+1)^0,c
  8269  0071F6  0E07               	movlw	7
  8270  0071F8  6E14               	movwf	sm_send_event@event^0,c
  8271  0071FA  EC1C  F041         	call	_sm_send_event	;wreg free
  8272                           
  8273                           ;sm_MenuConfiguration_MC50.c: 1219:             sm_send_event(&menuConfiguration_stateMa
      +                          chine, ev_ParameterIsSaved);
  8274  0071FE  0EBD               	movlw	low _menuConfiguration_stateMachine
  8275  007200  6E12               	movwf	sm_send_event@psm^0,c
  8276  007202  0E02               	movlw	high _menuConfiguration_stateMachine
  8277  007204  6E13               	movwf	(sm_send_event@psm+1)^0,c
  8278  007206  0E00               	movlw	0
  8279  007208  6E15               	movwf	(sm_send_event@event+1)^0,c
  8280  00720A  0E04               	movlw	4
  8281  00720C  6E14               	movwf	sm_send_event@event^0,c
  8282  00720E  EC1C  F041         	call	_sm_send_event	;wreg free
  8283                           
  8284                           ;sm_MenuConfiguration_MC50.c: 1220:             SetSegmentValueMain(dMinus,dMinus);
  8285  007212  0E18               	movlw	24
  8286  007214  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  8287  007216  0E18               	movlw	24
  8288  007218  ECD4  F047         	call	_SetSegmentValueMain
  8289                           
  8290                           ; BSR set to: 0
  8291                           ;sm_MenuConfiguration_MC50.c: 1221:             ClearFlag_rfCMD();
  8292  00721C  EC25  F049         	call	_ClearFlag_rfCMD	;wreg free
  8293                           
  8294                           ;sm_MenuConfiguration_MC50.c: 1222:             ts_system.timeoutMenu = 0;
  8295  007220  0E00               	movlw	0
  8296  007222  0101               	movlb	1	; () banked
  8297  007224  6FA9               	movwf	(_ts_system+15)& (0+255),b	;volatile
  8298  007226  0E00               	movlw	0
  8299  007228  6FA8               	movwf	(_ts_system+14)& (0+255),b	;volatile
  8300  00722A                     l3482:
  8301  00722A  0012               	return		;funcret
  8302  00722C                     __end_of_controlSaveRemote:
  8303                           	callstack 0
  8304                           
  8305 ;; *************** function ___lbmod *****************
  8306 ;; Defined at:
  8307 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\lbmod.c"
  8308 ;; Parameters:    Size  Location     Type
  8309 ;;  dividend        1    wreg     unsigned char 
  8310 ;;  divisor         1   15[COMRAM] unsigned char 
  8311 ;; Auto vars:     Size  Location     Type
  8312 ;;  dividend        1   16[COMRAM] unsigned char 
  8313 ;;  rem             1   18[COMRAM] unsigned char 
  8314 ;;  counter         1   17[COMRAM] unsigned char 
  8315 ;; Return value:  Size  Location     Type
  8316 ;;                  1    wreg      unsigned char 
  8317 ;; Registers used:
  8318 ;;		wreg, status,2, status,0
  8319 ;; Tracked objects:
  8320 ;;		On entry : 0/1
  8321 ;;		On exit  : 0/0
  8322 ;;		Unchanged: 0/0
  8323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8324 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8325 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8327 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8328 ;;Total ram usage:        4 bytes
  8329 ;; Hardware stack levels used: 1
  8330 ;; Hardware stack levels required when called: 4
  8331 ;; This function calls:
  8332 ;;		Nothing
  8333 ;; This function is called by:
  8334 ;;		_controlSelectRemote
  8335 ;;		_controlSaveRemote
  8336 ;; This function uses a non-reentrant model
  8337 ;;
  8338                           
  8339                           	psect	text13
  8340  008D38                     __ptext13:
  8341                           	callstack 0
  8342  008D38                     ___lbmod:
  8343                           	callstack 23
  8344                           
  8345                           ;incstack = 0
  8346                           ;___lbmod@dividend stored from wreg
  8347  008D38  6E11               	movwf	___lbmod@dividend^0,c
  8348  008D3A  0E08               	movlw	8
  8349  008D3C  6E12               	movwf	___lbmod@counter^0,c
  8350  008D3E  0E00               	movlw	0
  8351  008D40  6E13               	movwf	___lbmod@rem^0,c
  8352  008D42                     l12512:
  8353  008D42  90D8               	bcf	status,0,c
  8354  008D44  3411               	rlcf	___lbmod@dividend^0,w,c
  8355  008D46  3413               	rlcf	___lbmod@rem^0,w,c
  8356  008D48  6E13               	movwf	___lbmod@rem^0,c
  8357  008D4A  90D8               	bcf	status,0,c
  8358  008D4C  3611               	rlcf	___lbmod@dividend^0,f,c
  8359  008D4E  5010               	movf	___lbmod@divisor^0,w,c
  8360  008D50  5C13               	subwf	___lbmod@rem^0,w,c
  8361  008D52  A0D8               	btfss	status,0,c
  8362  008D54  D002               	goto	l12520
  8363  008D56  5010               	movf	___lbmod@divisor^0,w,c
  8364  008D58  5E13               	subwf	___lbmod@rem^0,f,c
  8365  008D5A                     l12520:
  8366  008D5A  2E12               	decfsz	___lbmod@counter^0,f,c
  8367  008D5C  D7F2               	goto	l12512
  8368  008D5E  5013               	movf	___lbmod@rem^0,w,c
  8369  008D60  0012               	return		;funcret
  8370  008D62                     __end_of___lbmod:
  8371                           	callstack 0
  8372                           
  8373 ;; *************** function ___awdiv *****************
  8374 ;; Defined at:
  8375 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awdiv.c"
  8376 ;; Parameters:    Size  Location     Type
  8377 ;;  dividend        2   19[COMRAM] int 
  8378 ;;  divisor         2   21[COMRAM] int 
  8379 ;; Auto vars:     Size  Location     Type
  8380 ;;  quotient        2   25[COMRAM] int 
  8381 ;;  sign            1   24[COMRAM] unsigned char 
  8382 ;;  counter         1   23[COMRAM] unsigned char 
  8383 ;; Return value:  Size  Location     Type
  8384 ;;                  2   19[COMRAM] int 
  8385 ;; Registers used:
  8386 ;;		wreg, status,2, status,0
  8387 ;; Tracked objects:
  8388 ;;		On entry : 0/0
  8389 ;;		On exit  : 0/0
  8390 ;;		Unchanged: 0/0
  8391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8392 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8393 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8395 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8396 ;;Total ram usage:        8 bytes
  8397 ;; Hardware stack levels used: 1
  8398 ;; Hardware stack levels required when called: 4
  8399 ;; This function calls:
  8400 ;;		Nothing
  8401 ;; This function is called by:
  8402 ;;		_controlSelectRemote
  8403 ;;		_controlSaveRemote
  8404 ;; This function uses a non-reentrant model
  8405 ;;
  8406                           
  8407                           	psect	text14
  8408  00792A                     __ptext14:
  8409                           	callstack 0
  8410  00792A                     ___awdiv:
  8411                           	callstack 23
  8412                           
  8413                           ;incstack = 0
  8414  00792A  0E00               	movlw	0
  8415  00792C  6E19               	movwf	___awdiv@sign^0,c
  8416  00792E  AE17               	btfss	(___awdiv@divisor+1)^0,7,c
  8417  007930  D006               	goto	l12448
  8418  007932  6C16               	negf	___awdiv@divisor^0,c
  8419  007934  1E17               	comf	(___awdiv@divisor+1)^0,f,c
  8420  007936  B0D8               	btfsc	status,0,c
  8421  007938  2A17               	incf	(___awdiv@divisor+1)^0,f,c
  8422  00793A  0E01               	movlw	1
  8423  00793C  6E19               	movwf	___awdiv@sign^0,c
  8424  00793E                     l12448:
  8425  00793E  AE15               	btfss	(___awdiv@dividend+1)^0,7,c
  8426  007940  D006               	goto	l12454
  8427  007942  6C14               	negf	___awdiv@dividend^0,c
  8428  007944  1E15               	comf	(___awdiv@dividend+1)^0,f,c
  8429  007946  B0D8               	btfsc	status,0,c
  8430  007948  2A15               	incf	(___awdiv@dividend+1)^0,f,c
  8431  00794A  0E01               	movlw	1
  8432  00794C  1A19               	xorwf	___awdiv@sign^0,f,c
  8433  00794E                     l12454:
  8434  00794E  0E00               	movlw	0
  8435  007950  6E1B               	movwf	(___awdiv@quotient+1)^0,c
  8436  007952  0E00               	movlw	0
  8437  007954  6E1A               	movwf	___awdiv@quotient^0,c
  8438  007956  5016               	movf	___awdiv@divisor^0,w,c
  8439  007958  1017               	iorwf	(___awdiv@divisor+1)^0,w,c
  8440  00795A  B4D8               	btfsc	status,2,c
  8441  00795C  D01C               	goto	l12476
  8442  00795E  0E01               	movlw	1
  8443  007960  6E18               	movwf	___awdiv@counter^0,c
  8444  007962  D004               	goto	l12462
  8445  007964                     l12460:
  8446  007964  90D8               	bcf	status,0,c
  8447  007966  3616               	rlcf	___awdiv@divisor^0,f,c
  8448  007968  3617               	rlcf	(___awdiv@divisor+1)^0,f,c
  8449  00796A  2A18               	incf	___awdiv@counter^0,f,c
  8450  00796C                     l12462:
  8451  00796C  AE17               	btfss	(___awdiv@divisor+1)^0,7,c
  8452  00796E  D7FA               	goto	l12460
  8453  007970                     u12080:
  8454  007970  90D8               	bcf	status,0,c
  8455  007972  361A               	rlcf	___awdiv@quotient^0,f,c
  8456  007974  361B               	rlcf	(___awdiv@quotient+1)^0,f,c
  8457  007976  5016               	movf	___awdiv@divisor^0,w,c
  8458  007978  5C14               	subwf	___awdiv@dividend^0,w,c
  8459  00797A  5017               	movf	(___awdiv@divisor+1)^0,w,c
  8460  00797C  5815               	subwfb	(___awdiv@dividend+1)^0,w,c
  8461  00797E  A0D8               	btfss	status,0,c
  8462  007980  D005               	goto	l12472
  8463  007982  5016               	movf	___awdiv@divisor^0,w,c
  8464  007984  5E14               	subwf	___awdiv@dividend^0,f,c
  8465  007986  5017               	movf	(___awdiv@divisor+1)^0,w,c
  8466  007988  5A15               	subwfb	(___awdiv@dividend+1)^0,f,c
  8467  00798A  801A               	bsf	___awdiv@quotient^0,0,c
  8468  00798C                     l12472:
  8469  00798C  90D8               	bcf	status,0,c
  8470  00798E  3217               	rrcf	(___awdiv@divisor+1)^0,f,c
  8471  007990  3216               	rrcf	___awdiv@divisor^0,f,c
  8472  007992  2E18               	decfsz	___awdiv@counter^0,f,c
  8473  007994  D7ED               	goto	u12080
  8474  007996                     l12476:
  8475  007996  5019               	movf	___awdiv@sign^0,w,c
  8476  007998  B4D8               	btfsc	status,2,c
  8477  00799A  D004               	goto	l12480
  8478  00799C  6C1A               	negf	___awdiv@quotient^0,c
  8479  00799E  1E1B               	comf	(___awdiv@quotient+1)^0,f,c
  8480  0079A0  B0D8               	btfsc	status,0,c
  8481  0079A2  2A1B               	incf	(___awdiv@quotient+1)^0,f,c
  8482  0079A4                     l12480:
  8483  0079A4  C01A  F014         	movff	___awdiv@quotient,?___awdiv
  8484  0079A8  C01B  F015         	movff	___awdiv@quotient+1,?___awdiv+1
  8485  0079AC  0012               	return		;funcret
  8486  0079AE                     __end_of___awdiv:
  8487                           	callstack 0
  8488                           
  8489 ;; *************** function _SetSegmentValueMain *****************
  8490 ;; Defined at:
  8491 ;;		line 104 in file "outputs_MC50.c"
  8492 ;; Parameters:    Size  Location     Type
  8493 ;;  d1              1    wreg     unsigned char 
  8494 ;;  d2              1   27[COMRAM] unsigned char 
  8495 ;; Auto vars:     Size  Location     Type
  8496 ;;  d1              1   28[COMRAM] unsigned char 
  8497 ;; Return value:  Size  Location     Type
  8498 ;;                  1    wreg      void 
  8499 ;; Registers used:
  8500 ;;		wreg, status,2
  8501 ;; Tracked objects:
  8502 ;;		On entry : 0/0
  8503 ;;		On exit  : 3F/0
  8504 ;;		Unchanged: 0/0
  8505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8506 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8507 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8509 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8510 ;;Total ram usage:        2 bytes
  8511 ;; Hardware stack levels used: 1
  8512 ;; Hardware stack levels required when called: 4
  8513 ;; This function calls:
  8514 ;;		Nothing
  8515 ;; This function is called by:
  8516 ;;		_sm_execute_main
  8517 ;;		_sm_execute_menuConfiguration
  8518 ;;		_load_New_Menu
  8519 ;;		_controlSelectRemote
  8520 ;;		_controlSaveRemote
  8521 ;; This function uses a non-reentrant model
  8522 ;;
  8523                           
  8524                           	psect	text15
  8525  008FA8                     __ptext15:
  8526                           	callstack 0
  8527  008FA8                     _SetSegmentValueMain:
  8528                           	callstack 22
  8529                           
  8530                           ;incstack = 0
  8531                           ;SetSegmentValueMain@d1 stored from wreg
  8532  008FA8  6E1D               	movwf	SetSegmentValueMain@d1^0,c
  8533                           
  8534                           ;outputs_MC50.c: 104: void SetSegmentValueMain(char d1, char d2);outputs_MC50.c: 105: {;
      +                          outputs_MC50.c: 106:     dispStruct.display_grp.value_display1=d1;
  8535  008FAA  C01D  F072         	movff	SetSegmentValueMain@d1,_dispStruct	;volatile
  8536                           
  8537                           ;outputs_MC50.c: 107:     dispStruct.display_grp.value_display2=d2;
  8538  008FAE  C01C  F073         	movff	SetSegmentValueMain@d2,_dispStruct+1	;volatile
  8539                           
  8540                           ;outputs_MC50.c: 108:     dispStruct.intermitentFreq=0;
  8541  008FB2  0E00               	movlw	0
  8542  008FB4  0100               	movlb	0	; () banked
  8543  008FB6  6F76               	movwf	(_dispStruct+4)& (0+255),b	;volatile
  8544  008FB8  0E00               	movlw	0
  8545  008FBA  6F75               	movwf	(_dispStruct+3)& (0+255),b	;volatile
  8546                           
  8547                           ; BSR set to: 0
  8548                           ;outputs_MC50.c: 109:     dispStruct.upFase=0;
  8549  008FBC  0E00               	movlw	0
  8550  008FBE  6F77               	movwf	(_dispStruct+5)& (0+255),b	;volatile
  8551                           
  8552                           ; BSR set to: 0
  8553  008FC0  0012               	return		;funcret
  8554  008FC2                     __end_of_SetSegmentValueMain:
  8555                           	callstack 0
  8556                           
  8557 ;; *************** function _ClearFlag_rfCMD *****************
  8558 ;; Defined at:
  8559 ;;		line 463 in file "inputs_MC50.c"
  8560 ;; Parameters:    Size  Location     Type
  8561 ;;		None
  8562 ;; Auto vars:     Size  Location     Type
  8563 ;;		None
  8564 ;; Return value:  Size  Location     Type
  8565 ;;                  1    wreg      void 
  8566 ;; Registers used:
  8567 ;;		wreg, status,2
  8568 ;; Tracked objects:
  8569 ;;		On entry : 0/1
  8570 ;;		On exit  : 0/0
  8571 ;;		Unchanged: 0/0
  8572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8573 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8574 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8576 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8577 ;;Total ram usage:        0 bytes
  8578 ;; Hardware stack levels used: 1
  8579 ;; Hardware stack levels required when called: 4
  8580 ;; This function calls:
  8581 ;;		Nothing
  8582 ;; This function is called by:
  8583 ;;		_sm_execute_menuConfiguration
  8584 ;;		_controlSelectRemote
  8585 ;;		_controlSaveRemote
  8586 ;; This function uses a non-reentrant model
  8587 ;;
  8588                           
  8589                           	psect	text16
  8590  00924A                     __ptext16:
  8591                           	callstack 0
  8592  00924A                     _ClearFlag_rfCMD:
  8593                           	callstack 23
  8594                           
  8595                           ;inputs_MC50.c: 464:     rfCMD.processed=1;
  8596                           
  8597                           ; BSR set to: 0
  8598                           ;incstack = 0
  8599  00924A  0E01               	movlw	1
  8600  00924C  6E45               	movwf	(_rfCMD+10)^0,c	;volatile
  8601  00924E  0012               	return		;funcret
  8602  009250                     __end_of_ClearFlag_rfCMD:
  8603                           	callstack 0
  8604                           
  8605 ;; *************** function _controlLearnDigit *****************
  8606 ;; Defined at:
  8607 ;;		line 1228 in file "sm_MenuConfiguration_MC50.c"
  8608 ;; Parameters:    Size  Location     Type
  8609 ;;		None
  8610 ;; Auto vars:     Size  Location     Type
  8611 ;;		None
  8612 ;; Return value:  Size  Location     Type
  8613 ;;                  1    wreg      void 
  8614 ;; Registers used:
  8615 ;;		wreg, status,2, status,0, cstack
  8616 ;; Tracked objects:
  8617 ;;		On entry : 3F/0
  8618 ;;		On exit  : 3E/0
  8619 ;;		Unchanged: 0/0
  8620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8621 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8622 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8624 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8625 ;;Total ram usage:        0 bytes
  8626 ;; Hardware stack levels used: 1
  8627 ;; Hardware stack levels required when called: 5
  8628 ;; This function calls:
  8629 ;;		_SetSegmentValueLearn
  8630 ;; This function is called by:
  8631 ;;		_sm_execute_menuConfiguration
  8632 ;; This function uses a non-reentrant model
  8633 ;;
  8634                           
  8635                           	psect	text17
  8636  008ACA                     __ptext17:
  8637                           	callstack 0
  8638  008ACA                     _controlLearnDigit:
  8639                           	callstack 23
  8640                           
  8641                           ; BSR set to: 0
  8642                           ;sm_MenuConfiguration_MC50.c: 1230:     if(ts_system.timeSinalizationDigit<=0 )
  8643                           
  8644                           ;incstack = 0
  8645  008ACA  0101               	movlb	1	; () banked
  8646  008ACC  BFA7               	btfsc	(_ts_system+13)& (0+255),7,b	;volatile
  8647  008ACE  D005               	goto	u13620
  8648  008AD0  51A7               	movf	(_ts_system+13)& (0+255),w,b	;volatile
  8649  008AD2  E112               	bnz	l3488
  8650  008AD4  05A6               	decf	(_ts_system+12)& (0+255),w,b	;volatile
  8651  008AD6  B0D8               	btfsc	status,0,c
  8652  008AD8  0012               	return	
  8653  008ADA                     u13620:
  8654                           
  8655                           ; BSR set to: 1
  8656                           ;sm_MenuConfiguration_MC50.c: 1231:     {;sm_MenuConfiguration_MC50.c: 1232:         ts_
      +                          system.timeSinalizationDigit=( 100/50);
  8657  008ADA  0E00               	movlw	0
  8658  008ADC  6FA7               	movwf	(_ts_system+13)& (0+255),b	;volatile
  8659  008ADE  0E02               	movlw	2
  8660  008AE0  6FA6               	movwf	(_ts_system+12)& (0+255),b	;volatile
  8661                           
  8662                           ; BSR set to: 1
  8663                           ;sm_MenuConfiguration_MC50.c: 1233:         if(var_sys.StateMotor==InClose)
  8664  008AE2  0E03               	movlw	3
  8665  008AE4  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
  8666  008AE6  A4D8               	btfss	status,2,c
  8667  008AE8  D004               	goto	l13826
  8668                           
  8669                           ; BSR set to: 1
  8670                           ;sm_MenuConfiguration_MC50.c: 1234:         {;sm_MenuConfiguration_MC50.c: 1235:        
      +                               SetSegmentValueLearn(Left);
  8671  008AEA  0E00               	movlw	0
  8672  008AEC  ECF3  F034         	call	_SetSegmentValueLearn
  8673                           
  8674                           ;sm_MenuConfiguration_MC50.c: 1236:         }
  8675  008AF0  0012               	return	
  8676  008AF2                     l13826:
  8677                           
  8678                           ; BSR set to: 1
  8679                           ;sm_MenuConfiguration_MC50.c: 1238:         {;sm_MenuConfiguration_MC50.c: 1239:        
      +                               SetSegmentValueLearn(Rigth);
  8680  008AF2  0E01               	movlw	1
  8681  008AF4  ECF3  F034         	call	_SetSegmentValueLearn
  8682  008AF8                     l3488:
  8683  008AF8  0012               	return		;funcret
  8684  008AFA                     __end_of_controlLearnDigit:
  8685                           	callstack 0
  8686                           
  8687 ;; *************** function _SetSegmentValueLearn *****************
  8688 ;; Defined at:
  8689 ;;		line 124 in file "outputs_MC50.c"
  8690 ;; Parameters:    Size  Location     Type
  8691 ;;  direction       1    wreg     enum E10602
  8692 ;; Auto vars:     Size  Location     Type
  8693 ;;  direction       1   17[COMRAM] enum E10602
  8694 ;; Return value:  Size  Location     Type
  8695 ;;                  1    wreg      void 
  8696 ;; Registers used:
  8697 ;;		wreg, status,2, status,0
  8698 ;; Tracked objects:
  8699 ;;		On entry : 3F/1
  8700 ;;		On exit  : 3F/0
  8701 ;;		Unchanged: 0/0
  8702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8703 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8704 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8705 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8706 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8707 ;;Total ram usage:        3 bytes
  8708 ;; Hardware stack levels used: 1
  8709 ;; Hardware stack levels required when called: 4
  8710 ;; This function calls:
  8711 ;;		Nothing
  8712 ;; This function is called by:
  8713 ;;		_controlLearnDigit
  8714 ;; This function uses a non-reentrant model
  8715 ;;
  8716                           
  8717                           	psect	text18
  8718  0069E6                     __ptext18:
  8719                           	callstack 0
  8720  0069E6                     _SetSegmentValueLearn:
  8721                           	callstack 23
  8722                           
  8723                           ;incstack = 0
  8724                           ;SetSegmentValueLearn@direction stored from wreg
  8725  0069E6  6E12               	movwf	SetSegmentValueLearn@direction^0,c
  8726                           
  8727                           ;outputs_MC50.c: 124: void SetSegmentValueLearn(Direction_en direction);outputs_MC50.c: 
      +                          125: {;outputs_MC50.c: 126:     dispStruct.intermitentFreq=0;
  8728  0069E8  0E00               	movlw	0
  8729  0069EA  0100               	movlb	0	; () banked
  8730  0069EC  6F76               	movwf	(_dispStruct+4)& (0+255),b	;volatile
  8731  0069EE  0E00               	movlw	0
  8732  0069F0  6F75               	movwf	(_dispStruct+3)& (0+255),b	;volatile
  8733                           
  8734                           ;outputs_MC50.c: 127:     dispStruct.upFase=0;
  8735  0069F2  0E00               	movlw	0
  8736  0069F4  6F77               	movwf	(_dispStruct+5)& (0+255),b	;volatile
  8737                           
  8738                           ;outputs_MC50.c: 128:     switch (direction)
  8739  0069F6  D066               	goto	l12286
  8740  0069F8                     l12232:
  8741                           
  8742                           ; BSR set to: 0
  8743                           ;outputs_MC50.c: 131:             if(dispStruct.display_grp.value_display1==sA && dispSt
      +                          ruct.display_grp.value_display2==dBlank)
  8744  0069F8  0E1A               	movlw	26
  8745  0069FA  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8746  0069FC  A4D8               	btfss	status,2,c
  8747  0069FE  D009               	goto	l12238
  8748                           
  8749                           ; BSR set to: 0
  8750  006A00  0E20               	movlw	32
  8751  006A02  1973               	xorwf	(_dispStruct+1)& (0+255),w,b	;volatile
  8752  006A04  A4D8               	btfss	status,2,c
  8753  006A06  D005               	goto	l12238
  8754                           
  8755                           ; BSR set to: 0
  8756                           ;outputs_MC50.c: 132:             {;outputs_MC50.c: 133:                dispStruct.displ
      +                          ay_grp.value_display1=dBlank;
  8757  006A08  0E20               	movlw	32
  8758  006A0A  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8759                           
  8760                           ;outputs_MC50.c: 134:                dispStruct.display_grp.value_display2=sA;
  8761  006A0C  0E1A               	movlw	26
  8762  006A0E  6F73               	movwf	(_dispStruct+1)& (0+255),b	;volatile
  8763                           
  8764                           ;outputs_MC50.c: 135:             }
  8765  006A10  0012               	return	
  8766  006A12                     l12238:
  8767                           
  8768                           ; BSR set to: 0
  8769  006A12  0E20               	movlw	32
  8770  006A14  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8771  006A16  A4D8               	btfss	status,2,c
  8772  006A18  D009               	goto	l12244
  8773                           
  8774                           ; BSR set to: 0
  8775  006A1A  0E1D               	movlw	29
  8776  006A1C  1973               	xorwf	(_dispStruct+1)& (0+255),w,b	;volatile
  8777  006A1E  A4D8               	btfss	status,2,c
  8778  006A20  D005               	goto	l12244
  8779                           
  8780                           ; BSR set to: 0
  8781                           ;outputs_MC50.c: 137:             {;outputs_MC50.c: 138:                dispStruct.displ
      +                          ay_grp.value_display1=sD;
  8782  006A22  0E1D               	movlw	29
  8783  006A24  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8784                           
  8785                           ;outputs_MC50.c: 139:                dispStruct.display_grp.value_display2=dBlank;
  8786  006A26  0E20               	movlw	32
  8787  006A28  6F73               	movwf	(_dispStruct+1)& (0+255),b	;volatile
  8788                           
  8789                           ;outputs_MC50.c: 140:             }
  8790  006A2A  0012               	return	
  8791  006A2C                     l12244:
  8792                           
  8793                           ; BSR set to: 0
  8794  006A2C  0E1F               	movlw	31
  8795  006A2E  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8796  006A30  A4D8               	btfss	status,2,c
  8797  006A32  D005               	goto	l12248
  8798                           
  8799                           ; BSR set to: 0
  8800                           ;outputs_MC50.c: 142:             {;outputs_MC50.c: 143:                dispStruct.displ
      +                          ay_grp.value_display1=sA;
  8801  006A34  0E1A               	movlw	26
  8802  006A36  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8803                           
  8804                           ;outputs_MC50.c: 144:                dispStruct.display_grp.value_display2=dBlank;
  8805  006A38  0E20               	movlw	32
  8806  006A3A  6F73               	movwf	(_dispStruct+1)& (0+255),b	;volatile
  8807                           
  8808                           ;outputs_MC50.c: 145:             }
  8809  006A3C  0012               	return	
  8810  006A3E                     l12248:
  8811                           
  8812                           ; BSR set to: 0
  8813  006A3E  0E20               	movlw	32
  8814  006A40  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8815  006A42  A4D8               	btfss	status,2,c
  8816  006A44  D002               	goto	l12252
  8817                           
  8818                           ; BSR set to: 0
  8819                           ;outputs_MC50.c: 147:             {;outputs_MC50.c: 148:                dispStruct.displ
      +                          ay_grp.value_display2++;
  8820  006A46  2B73               	incf	(_dispStruct+1)& (0+255),f,b	;volatile
  8821                           
  8822                           ;outputs_MC50.c: 149:             }
  8823  006A48  0012               	return	
  8824  006A4A                     l12252:
  8825                           
  8826                           ; BSR set to: 0
  8827  006A4A  0E20               	movlw	32
  8828  006A4C  1973               	xorwf	(_dispStruct+1)& (0+255),w,b	;volatile
  8829  006A4E  A4D8               	btfss	status,2,c
  8830  006A50  D002               	goto	l12256
  8831                           
  8832                           ; BSR set to: 0
  8833                           ;outputs_MC50.c: 151:             {;outputs_MC50.c: 152:                dispStruct.displ
      +                          ay_grp.value_display1++;
  8834  006A52  2B72               	incf	_dispStruct& (0+255),f,b	;volatile
  8835                           
  8836                           ;outputs_MC50.c: 153:             }
  8837  006A54  0012               	return	
  8838  006A56                     l12256:
  8839                           
  8840                           ; BSR set to: 0
  8841                           ;outputs_MC50.c: 155:             {;outputs_MC50.c: 156:                dispStruct.displ
      +                          ay_grp.value_display1=sA;
  8842  006A56  0E1A               	movlw	26
  8843  006A58  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8844                           
  8845                           ;outputs_MC50.c: 157:                dispStruct.display_grp.value_display2=dBlank;
  8846  006A5A  0E20               	movlw	32
  8847  006A5C  6F73               	movwf	(_dispStruct+1)& (0+255),b	;volatile
  8848  006A5E  0012               	return	
  8849  006A60                     l12258:
  8850                           
  8851                           ; BSR set to: 0
  8852                           ;outputs_MC50.c: 161:             if(dispStruct.display_grp.value_display2==sA && dispSt
      +                          ruct.display_grp.value_display1==dBlank)
  8853  006A60  0E1A               	movlw	26
  8854  006A62  1973               	xorwf	(_dispStruct+1)& (0+255),w,b	;volatile
  8855  006A64  A4D8               	btfss	status,2,c
  8856  006A66  D009               	goto	l12264
  8857                           
  8858                           ; BSR set to: 0
  8859  006A68  0E20               	movlw	32
  8860  006A6A  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8861  006A6C  A4D8               	btfss	status,2,c
  8862  006A6E  D005               	goto	l12264
  8863                           
  8864                           ; BSR set to: 0
  8865                           ;outputs_MC50.c: 162:             {;outputs_MC50.c: 163:                dispStruct.displ
      +                          ay_grp.value_display1=sA;
  8866  006A70  0E1A               	movlw	26
  8867  006A72  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8868                           
  8869                           ;outputs_MC50.c: 164:                dispStruct.display_grp.value_display2=dBlank;
  8870  006A74  0E20               	movlw	32
  8871  006A76  6F73               	movwf	(_dispStruct+1)& (0+255),b	;volatile
  8872                           
  8873                           ;outputs_MC50.c: 165:             }
  8874  006A78  0012               	return	
  8875  006A7A                     l12264:
  8876                           
  8877                           ; BSR set to: 0
  8878  006A7A  0E20               	movlw	32
  8879  006A7C  1973               	xorwf	(_dispStruct+1)& (0+255),w,b	;volatile
  8880  006A7E  A4D8               	btfss	status,2,c
  8881  006A80  D009               	goto	l12270
  8882                           
  8883                           ; BSR set to: 0
  8884  006A82  0E1D               	movlw	29
  8885  006A84  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8886  006A86  A4D8               	btfss	status,2,c
  8887  006A88  D005               	goto	l12270
  8888                           
  8889                           ; BSR set to: 0
  8890                           ;outputs_MC50.c: 167:             {;outputs_MC50.c: 168:                dispStruct.displ
      +                          ay_grp.value_display1=dBlank;
  8891  006A8A  0E20               	movlw	32
  8892  006A8C  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8893                           
  8894                           ;outputs_MC50.c: 169:                dispStruct.display_grp.value_display2=sD;
  8895  006A8E  0E1D               	movlw	29
  8896  006A90  6F73               	movwf	(_dispStruct+1)& (0+255),b	;volatile
  8897                           
  8898                           ;outputs_MC50.c: 170:             }
  8899  006A92  0012               	return	
  8900  006A94                     l12270:
  8901                           
  8902                           ; BSR set to: 0
  8903  006A94  0E1A               	movlw	26
  8904  006A96  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8905  006A98  A4D8               	btfss	status,2,c
  8906  006A9A  D003               	goto	l12274
  8907                           
  8908                           ; BSR set to: 0
  8909                           ;outputs_MC50.c: 172:             {;outputs_MC50.c: 173:                dispStruct.displ
      +                          ay_grp.value_display1=sF;
  8910  006A9C  0E1F               	movlw	31
  8911  006A9E  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8912                           
  8913                           ;outputs_MC50.c: 174:             }
  8914  006AA0  0012               	return	
  8915  006AA2                     l12274:
  8916                           
  8917                           ; BSR set to: 0
  8918  006AA2  0E20               	movlw	32
  8919  006AA4  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8920  006AA6  A4D8               	btfss	status,2,c
  8921  006AA8  D002               	goto	l12278
  8922                           
  8923                           ; BSR set to: 0
  8924                           ;outputs_MC50.c: 176:             {;outputs_MC50.c: 177:                dispStruct.displ
      +                          ay_grp.value_display2--;
  8925  006AAA  0773               	decf	(_dispStruct+1)& (0+255),f,b	;volatile
  8926                           
  8927                           ;outputs_MC50.c: 178:             }
  8928  006AAC  0012               	return	
  8929  006AAE                     l12278:
  8930                           
  8931                           ; BSR set to: 0
  8932  006AAE  0E20               	movlw	32
  8933  006AB0  1973               	xorwf	(_dispStruct+1)& (0+255),w,b	;volatile
  8934  006AB2  A4D8               	btfss	status,2,c
  8935  006AB4  D002               	goto	l12282
  8936                           
  8937                           ; BSR set to: 0
  8938                           ;outputs_MC50.c: 180:             {;outputs_MC50.c: 181:                dispStruct.displ
      +                          ay_grp.value_display1--;
  8939  006AB6  0772               	decf	_dispStruct& (0+255),f,b	;volatile
  8940                           
  8941                           ;outputs_MC50.c: 182:             }
  8942  006AB8  0012               	return	
  8943  006ABA                     l12282:
  8944                           
  8945                           ; BSR set to: 0
  8946                           ;outputs_MC50.c: 184:             {;outputs_MC50.c: 185:                dispStruct.displ
      +                          ay_grp.value_display1=sA;
  8947  006ABA  0E1A               	movlw	26
  8948  006ABC  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8949                           
  8950                           ;outputs_MC50.c: 186:                dispStruct.display_grp.value_display2=dBlank;
  8951  006ABE  0E20               	movlw	32
  8952  006AC0  6F73               	movwf	(_dispStruct+1)& (0+255),b	;volatile
  8953  006AC2  0012               	return	
  8954  006AC4                     l12286:
  8955                           
  8956                           ; BSR set to: 0
  8957  006AC4  5012               	movf	SetSegmentValueLearn@direction^0,w,c
  8958  006AC6  6E10               	movwf	??_SetSegmentValueLearn^0,c
  8959  006AC8  6A11               	clrf	(??_SetSegmentValueLearn+1)^0,c
  8960                           
  8961                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8962                           ; Switch size 1, requested type "simple"
  8963                           ; Number of cases is 1, Range of values is 0 to 0
  8964                           ; switch strategies available:
  8965                           ; Name         Instructions Cycles
  8966                           ; simple_byte            4     3 (average)
  8967                           ;	Chosen strategy is simple_byte
  8968  006ACA  5011               	movf	(??_SetSegmentValueLearn+1)^0,w,c
  8969  006ACC  0A00               	xorlw	0	; case 0
  8970  006ACE  A4D8               	btfss	status,2,c
  8971  006AD0  0012               	return	
  8972                           
  8973                           ; BSR set to: 0
  8974                           ; Switch size 1, requested type "simple"
  8975                           ; Number of cases is 2, Range of values is 0 to 1
  8976                           ; switch strategies available:
  8977                           ; Name         Instructions Cycles
  8978                           ; simple_byte            7     4 (average)
  8979                           ;	Chosen strategy is simple_byte
  8980  006AD2  5010               	movf	??_SetSegmentValueLearn^0,w,c
  8981  006AD4  0A00               	xorlw	0	; case 0
  8982  006AD6  B4D8               	btfsc	status,2,c
  8983  006AD8  D7C3               	goto	l12258
  8984  006ADA  0A01               	xorlw	1	; case 1
  8985  006ADC  A4D8               	btfss	status,2,c
  8986  006ADE  0012               	return	
  8987  006AE0  D78B               	goto	l12232
  8988  006AE2                     __end_of_SetSegmentValueLearn:
  8989                           	callstack 0
  8990                           
  8991 ;; *************** function ___lldiv *****************
  8992 ;; Defined at:
  8993 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\__lldiv.c"
  8994 ;; Parameters:    Size  Location     Type
  8995 ;;  dividend        4   15[COMRAM] unsigned long 
  8996 ;;  divisor         4   19[COMRAM] unsigned long 
  8997 ;; Auto vars:     Size  Location     Type
  8998 ;;  quotient        4   23[COMRAM] unsigned long 
  8999 ;;  counter         1   27[COMRAM] unsigned char 
  9000 ;; Return value:  Size  Location     Type
  9001 ;;                  4   15[COMRAM] unsigned long 
  9002 ;; Registers used:
  9003 ;;		wreg, status,2, status,0
  9004 ;; Tracked objects:
  9005 ;;		On entry : 0/1
  9006 ;;		On exit  : 0/0
  9007 ;;		Unchanged: 0/0
  9008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9009 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9010 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9012 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9013 ;;Total ram usage:       13 bytes
  9014 ;; Hardware stack levels used: 1
  9015 ;; Hardware stack levels required when called: 4
  9016 ;; This function calls:
  9017 ;;		Nothing
  9018 ;; This function is called by:
  9019 ;;		_sm_execute_menuConfiguration
  9020 ;; This function uses a non-reentrant model
  9021 ;;
  9022                           
  9023                           	psect	text19
  9024  007A32                     __ptext19:
  9025                           	callstack 0
  9026  007A32                     ___lldiv:
  9027                           	callstack 24
  9028                           
  9029                           ; BSR set to: 0
  9030                           ;incstack = 0
  9031  007A32  0E00               	movlw	0
  9032  007A34  6E18               	movwf	___lldiv@quotient^0,c
  9033  007A36  0E00               	movlw	0
  9034  007A38  6E19               	movwf	(___lldiv@quotient+1)^0,c
  9035  007A3A  0E00               	movlw	0
  9036  007A3C  6E1A               	movwf	(___lldiv@quotient+2)^0,c
  9037  007A3E  0E00               	movlw	0
  9038  007A40  6E1B               	movwf	(___lldiv@quotient+3)^0,c
  9039  007A42  5014               	movf	___lldiv@divisor^0,w,c
  9040  007A44  1015               	iorwf	(___lldiv@divisor+1)^0,w,c
  9041  007A46  1016               	iorwf	(___lldiv@divisor+2)^0,w,c
  9042  007A48  1017               	iorwf	(___lldiv@divisor+3)^0,w,c
  9043  007A4A  B4D8               	btfsc	status,2,c
  9044  007A4C  D02A               	goto	l3674
  9045  007A4E  0E01               	movlw	1
  9046  007A50  6E1C               	movwf	___lldiv@counter^0,c
  9047  007A52  D006               	goto	l13844
  9048  007A54                     l13842:
  9049  007A54  90D8               	bcf	status,0,c
  9050  007A56  3614               	rlcf	___lldiv@divisor^0,f,c
  9051  007A58  3615               	rlcf	(___lldiv@divisor+1)^0,f,c
  9052  007A5A  3616               	rlcf	(___lldiv@divisor+2)^0,f,c
  9053  007A5C  3617               	rlcf	(___lldiv@divisor+3)^0,f,c
  9054  007A5E  2A1C               	incf	___lldiv@counter^0,f,c
  9055  007A60                     l13844:
  9056  007A60  AE17               	btfss	(___lldiv@divisor+3)^0,7,c
  9057  007A62  D7F8               	goto	l13842
  9058  007A64                     u13660:
  9059  007A64  90D8               	bcf	status,0,c
  9060  007A66  3618               	rlcf	___lldiv@quotient^0,f,c
  9061  007A68  3619               	rlcf	(___lldiv@quotient+1)^0,f,c
  9062  007A6A  361A               	rlcf	(___lldiv@quotient+2)^0,f,c
  9063  007A6C  361B               	rlcf	(___lldiv@quotient+3)^0,f,c
  9064  007A6E  5014               	movf	___lldiv@divisor^0,w,c
  9065  007A70  5C10               	subwf	___lldiv@dividend^0,w,c
  9066  007A72  5015               	movf	(___lldiv@divisor+1)^0,w,c
  9067  007A74  5811               	subwfb	(___lldiv@dividend+1)^0,w,c
  9068  007A76  5016               	movf	(___lldiv@divisor+2)^0,w,c
  9069  007A78  5812               	subwfb	(___lldiv@dividend+2)^0,w,c
  9070  007A7A  5017               	movf	(___lldiv@divisor+3)^0,w,c
  9071  007A7C  5813               	subwfb	(___lldiv@dividend+3)^0,w,c
  9072  007A7E  A0D8               	btfss	status,0,c
  9073  007A80  D009               	goto	l13854
  9074  007A82  5014               	movf	___lldiv@divisor^0,w,c
  9075  007A84  5E10               	subwf	___lldiv@dividend^0,f,c
  9076  007A86  5015               	movf	(___lldiv@divisor+1)^0,w,c
  9077  007A88  5A11               	subwfb	(___lldiv@dividend+1)^0,f,c
  9078  007A8A  5016               	movf	(___lldiv@divisor+2)^0,w,c
  9079  007A8C  5A12               	subwfb	(___lldiv@dividend+2)^0,f,c
  9080  007A8E  5017               	movf	(___lldiv@divisor+3)^0,w,c
  9081  007A90  5A13               	subwfb	(___lldiv@dividend+3)^0,f,c
  9082  007A92  8018               	bsf	___lldiv@quotient^0,0,c
  9083  007A94                     l13854:
  9084  007A94  90D8               	bcf	status,0,c
  9085  007A96  3217               	rrcf	(___lldiv@divisor+3)^0,f,c
  9086  007A98  3216               	rrcf	(___lldiv@divisor+2)^0,f,c
  9087  007A9A  3215               	rrcf	(___lldiv@divisor+1)^0,f,c
  9088  007A9C  3214               	rrcf	___lldiv@divisor^0,f,c
  9089  007A9E  2E1C               	decfsz	___lldiv@counter^0,f,c
  9090  007AA0  D7E1               	goto	u13660
  9091  007AA2                     l3674:
  9092  007AA2  C018  F010         	movff	___lldiv@quotient,?___lldiv
  9093  007AA6  C019  F011         	movff	___lldiv@quotient+1,?___lldiv+1
  9094  007AAA  C01A  F012         	movff	___lldiv@quotient+2,?___lldiv+2
  9095  007AAE  C01B  F013         	movff	___lldiv@quotient+3,?___lldiv+3
  9096  007AB2  0012               	return		;funcret
  9097  007AB4                     __end_of___lldiv:
  9098                           	callstack 0
  9099                           
  9100 ;; *************** function _sm_execute_ControlGate *****************
  9101 ;; Defined at:
  9102 ;;		line 128 in file "sm_ControlGate_MC50.c"
  9103 ;; Parameters:    Size  Location     Type
  9104 ;;  psm             2   15[BANK0 ] PTR struct .
  9105 ;;		 -> controlGate_stateMachine(11), 
  9106 ;; Auto vars:     Size  Location     Type
  9107 ;;  typeOpenOrde    1   19[BANK0 ] enum E10372
  9108 ;; Return value:  Size  Location     Type
  9109 ;;                  1    wreg      void 
  9110 ;; Registers used:
  9111 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  9112 ;; Tracked objects:
  9113 ;;		On entry : 3F/0
  9114 ;;		On exit  : 0/0
  9115 ;;		Unchanged: 0/0
  9116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9117 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9118 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9119 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9120 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9121 ;;Total ram usage:        5 bytes
  9122 ;; Hardware stack levels used: 1
  9123 ;; Hardware stack levels required when called: 15
  9124 ;; This function calls:
  9125 ;;		_GetOpenOrder
  9126 ;;		_SetSegmentValueIntermitent
  9127 ;;		_WaitPreFlash
  9128 ;;		_actionZone_Closed
  9129 ;;		_actionZone_Closing
  9130 ;;		_actionZone_Opened
  9131 ;;		_actionZone_Opening
  9132 ;;		_sm_execute_ControlLearning
  9133 ;;		_sm_send_event
  9134 ;; This function is called by:
  9135 ;;		_main
  9136 ;; This function uses a non-reentrant model
  9137 ;;
  9138                           
  9139                           	psect	text20
  9140  00367A                     __ptext20:
  9141                           	callstack 0
  9142  00367A                     _sm_execute_ControlGate:
  9143                           	callstack 15
  9144                           
  9145                           ; BSR set to: 0
  9146                           ;sm_ControlGate_MC50.c: 129:     TypeCMD typeOpenOrder;;sm_ControlGate_MC50.c: 133:     
      +                          if ( (main_stateMachine.current_state == st_MenuConfiguration) && (menuConfiguration_sta
      +                          teMachine.current_state != st_LearningMode) )
  9147                           
  9148                           ;incstack = 0
  9149  00367A  0101               	movlb	1	; () banked
  9150  00367C  05ED               	decf	_main_stateMachine& (0+255),w,b
  9151  00367E  11EE               	iorwf	(_main_stateMachine+1)& (0+255),w,b
  9152  003680  A4D8               	btfss	status,2,c
  9153  003682  D006               	goto	l23088
  9154                           
  9155                           ; BSR set to: 1
  9156  003684  0E06               	movlw	6
  9157  003686  0102               	movlb	2	; () banked
  9158  003688  19BD               	xorwf	_menuConfiguration_stateMachine& (0+255),w,b
  9159  00368A  11BE               	iorwf	(_menuConfiguration_stateMachine+1)& (0+255),w,b
  9160  00368C  A4D8               	btfss	status,2,c
  9161  00368E  0012               	return	
  9162  003690                     l23088:
  9163                           
  9164                           ;sm_ControlGate_MC50.c: 137:         if (var_sys.preflashingcontrol == YES){
  9165  003690  0101               	movlb	1	; () banked
  9166  003692  051D               	decf	(_var_sys+29)& (0+255),w,b	;volatile
  9167  003694  A4D8               	btfss	status,2,c
  9168  003696  D0CE               	goto	l23162
  9169                           
  9170                           ; BSR set to: 1
  9171                           ;sm_ControlGate_MC50.c: 139:         WaitPreFlash();
  9172  003698  EC79  F03F         	call	_WaitPreFlash	;wreg free
  9173  00369C  D0CB               	goto	l23162
  9174  00369E                     l23092:
  9175                           
  9176                           ; BSR set to: 0
  9177                           ;sm_ControlGate_MC50.c: 145:         {;sm_ControlGate_MC50.c: 148:             if (psm->
      +                          last_event == ev_GateClosed) {
  9178  00369E  EE20 F004          	lfsr	2,4
  9179  0036A2  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9180  0036A4  26D9               	addwf	fsr2l,f,c
  9181  0036A6  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9182  0036A8  22DA               	addwfc	fsr2h,f,c
  9183  0036AA  0E0A               	movlw	10
  9184  0036AC  18DE               	xorwf	postinc2,w,c
  9185  0036AE  10DE               	iorwf	postinc2,w,c
  9186  0036B0  A4D8               	btfss	status,2,c
  9187  0036B2  D006               	goto	l23096
  9188  0036B4                     u28530:
  9189                           
  9190                           ; BSR set to: 0
  9191                           ;sm_ControlGate_MC50.c: 149:                 psm->current_state = st_Closed;
  9192  0036B4  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  9193  0036B8  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  9194  0036BC  0E01               	movlw	1
  9195  0036BE  D0B5               	goto	L55
  9196  0036C0                     l23096:
  9197                           
  9198                           ; BSR set to: 0
  9199  0036C0  EE20 F004          	lfsr	2,4
  9200  0036C4  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9201  0036C6  26D9               	addwf	fsr2l,f,c
  9202  0036C8  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9203  0036CA  22DA               	addwfc	fsr2h,f,c
  9204  0036CC  0E0B               	movlw	11
  9205  0036CE  18DE               	xorwf	postinc2,w,c
  9206  0036D0  10DE               	iorwf	postinc2,w,c
  9207  0036D2  A4D8               	btfss	status,2,c
  9208  0036D4  D0CF               	goto	l23164
  9209  0036D6  D038               	goto	u28600
  9210  0036D8                     l23100:
  9211                           
  9212                           ; BSR set to: 0
  9213                           ;sm_ControlGate_MC50.c: 160:         {;sm_ControlGate_MC50.c: 161:             if (psm->
      +                          last_event == ev_OpenGate) {
  9214  0036D8  EE20 F004          	lfsr	2,4
  9215  0036DC  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9216  0036DE  26D9               	addwf	fsr2l,f,c
  9217  0036E0  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9218  0036E2  22DA               	addwfc	fsr2h,f,c
  9219  0036E4  0E0C               	movlw	12
  9220  0036E6  18DE               	xorwf	postinc2,w,c
  9221  0036E8  10DE               	iorwf	postinc2,w,c
  9222  0036EA  A4D8               	btfss	status,2,c
  9223  0036EC  D072               	goto	l23148
  9224  0036EE                     u28550:
  9225                           
  9226                           ; BSR set to: 0
  9227                           ;sm_ControlGate_MC50.c: 162:                 psm->current_state = st_Opening;
  9228  0036EE  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  9229  0036F2  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  9230  0036F6  0E02               	movlw	2
  9231  0036F8  D098               	goto	L55
  9232  0036FA                     l23108:
  9233                           
  9234                           ; BSR set to: 0
  9235                           ;sm_ControlGate_MC50.c: 169:         {;sm_ControlGate_MC50.c: 170:             if (psm->
      +                          last_event == ev_StopGate) {
  9236  0036FA  EE20 F004          	lfsr	2,4
  9237  0036FE  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9238  003700  26D9               	addwf	fsr2l,f,c
  9239  003702  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9240  003704  22DA               	addwfc	fsr2h,f,c
  9241  003706  0E0D               	movlw	13
  9242  003708  18DE               	xorwf	postinc2,w,c
  9243  00370A  10DE               	iorwf	postinc2,w,c
  9244  00370C  B4D8               	btfsc	status,2,c
  9245  00370E  D01C               	goto	u28600
  9246                           
  9247                           ; BSR set to: 0
  9248                           
  9249                           ;sm_ControlGate_MC50.c: 172:             } else if (psm->last_event == ev_CloseGate) {
  9250                           
  9251                           ; BSR set to: 0
  9252                           ;sm_ControlGate_MC50.c: 171:                 psm->current_state = st_Opened;
  9253  003710  EE20 F004          	lfsr	2,4
  9254  003714  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9255  003716  26D9               	addwf	fsr2l,f,c
  9256  003718  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9257  00371A  22DA               	addwfc	fsr2h,f,c
  9258  00371C  0E0E               	movlw	14
  9259  00371E  18DE               	xorwf	postinc2,w,c
  9260  003720  10DE               	iorwf	postinc2,w,c
  9261  003722  A4D8               	btfss	status,2,c
  9262  003724  D02D               	goto	L129
  9263  003726                     u28580:
  9264                           
  9265                           ; BSR set to: 0
  9266                           ;sm_ControlGate_MC50.c: 173:                 psm->current_state = st_Closing;
  9267  003726  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  9268  00372A  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  9269  00372E  0E03               	movlw	3
  9270  003730  D07C               	goto	L55
  9271  003732                     l23120:
  9272                           
  9273                           ; BSR set to: 0
  9274                           ;sm_ControlGate_MC50.c: 180:         {;sm_ControlGate_MC50.c: 181:             if (psm->
      +                          last_event == ev_StopGate) {
  9275  003732  EE20 F004          	lfsr	2,4
  9276  003736  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9277  003738  26D9               	addwf	fsr2l,f,c
  9278  00373A  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9279  00373C  22DA               	addwfc	fsr2h,f,c
  9280  00373E  0E0D               	movlw	13
  9281  003740  18DE               	xorwf	postinc2,w,c
  9282  003742  10DE               	iorwf	postinc2,w,c
  9283  003744  A4D8               	btfss	status,2,c
  9284  003746  D006               	goto	l23124
  9285  003748                     u28600:
  9286                           
  9287                           ; BSR set to: 0
  9288                           ;sm_ControlGate_MC50.c: 182:                 psm->current_state = st_Opened;
  9289  003748  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  9290  00374C  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  9291  003750  0E04               	movlw	4
  9292  003752  D06B               	goto	L55
  9293  003754                     l23124:
  9294                           
  9295                           ; BSR set to: 0
  9296  003754  EE20 F004          	lfsr	2,4
  9297  003758  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9298  00375A  26D9               	addwf	fsr2l,f,c
  9299  00375C  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9300  00375E  22DA               	addwfc	fsr2h,f,c
  9301  003760  0E0F               	movlw	15
  9302  003762  18DE               	xorwf	postinc2,w,c
  9303  003764  10DE               	iorwf	postinc2,w,c
  9304  003766  B4D8               	btfsc	status,2,c
  9305  003768  D7A5               	goto	u28530
  9306                           
  9307                           ; BSR set to: 0
  9308                           
  9309                           ;sm_ControlGate_MC50.c: 185:             } else if (psm->last_event == ev_OpenGate) {
  9310                           
  9311                           ; BSR set to: 0
  9312                           ;sm_ControlGate_MC50.c: 184:                 psm->current_state = st_Closed;
  9313  00376A  EE20 F004          	lfsr	2,4
  9314  00376E  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9315  003770  26D9               	addwf	fsr2l,f,c
  9316  003772  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9317  003774  22DA               	addwfc	fsr2h,f,c
  9318  003776  0E0C               	movlw	12
  9319  003778  18DE               	xorwf	postinc2,w,c
  9320  00377A  10DE               	iorwf	postinc2,w,c
  9321  00377C  B4D8               	btfsc	status,2,c
  9322  00377E  D7B7               	goto	u28550
  9323  003780                     L129:
  9324                           
  9325                           ; BSR set to: 0
  9326                           
  9327                           ;sm_ControlGate_MC50.c: 187:             } else if (psm->last_event == ev_ErrorGate) {
  9328                           
  9329                           ; BSR set to: 0
  9330                           ;sm_ControlGate_MC50.c: 186:                 psm->current_state = st_Opening;
  9331  003780  EE20 F004          	lfsr	2,4
  9332  003784  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9333  003786  26D9               	addwf	fsr2l,f,c
  9334  003788  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9335  00378A  22DA               	addwfc	fsr2h,f,c
  9336  00378C  0E10               	movlw	16
  9337  00378E  D044               	goto	L126
  9338  003790                     l23136:
  9339                           
  9340                           ; BSR set to: 0
  9341                           ;sm_ControlGate_MC50.c: 193:         {;sm_ControlGate_MC50.c: 194:             if (psm->
      +                          last_event == ev_CloseGate) {
  9342  003790  EE20 F004          	lfsr	2,4
  9343  003794  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9344  003796  26D9               	addwf	fsr2l,f,c
  9345  003798  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9346  00379A  22DA               	addwfc	fsr2h,f,c
  9347  00379C  0E0E               	movlw	14
  9348  00379E  18DE               	xorwf	postinc2,w,c
  9349  0037A0  10DE               	iorwf	postinc2,w,c
  9350  0037A2  B4D8               	btfsc	status,2,c
  9351  0037A4  D7C0               	goto	u28580
  9352                           
  9353                           ; BSR set to: 0
  9354                           
  9355                           ;sm_ControlGate_MC50.c: 196:             } else if (psm->last_event == ev_OpenGate) {
  9356                           
  9357                           ; BSR set to: 0
  9358                           ;sm_ControlGate_MC50.c: 195:                 psm->current_state = st_Closing;
  9359  0037A6  EE20 F004          	lfsr	2,4
  9360  0037AA  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9361  0037AC  26D9               	addwf	fsr2l,f,c
  9362  0037AE  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9363  0037B0  22DA               	addwfc	fsr2h,f,c
  9364  0037B2  0E0C               	movlw	12
  9365  0037B4  18DE               	xorwf	postinc2,w,c
  9366  0037B6  10DE               	iorwf	postinc2,w,c
  9367  0037B8  B4D8               	btfsc	status,2,c
  9368  0037BA  D799               	goto	u28550
  9369                           
  9370                           ; BSR set to: 0
  9371                           
  9372                           ;sm_ControlGate_MC50.c: 198:             } else if (psm->last_event == ev_ErrorGate) {
  9373                           
  9374                           ; BSR set to: 0
  9375                           ;sm_ControlGate_MC50.c: 197:                 psm->current_state = st_Opening;
  9376  0037BC  EE20 F004          	lfsr	2,4
  9377  0037C0  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9378  0037C2  26D9               	addwf	fsr2l,f,c
  9379  0037C4  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9380  0037C6  22DA               	addwfc	fsr2h,f,c
  9381  0037C8  0E10               	movlw	16
  9382  0037CA  18DE               	xorwf	postinc2,w,c
  9383  0037CC  10DE               	iorwf	postinc2,w,c
  9384  0037CE  B4D8               	btfsc	status,2,c
  9385  0037D0  D027               	goto	L127
  9386  0037D2                     l23148:
  9387                           
  9388                           ; BSR set to: 0
  9389  0037D2  EE20 F004          	lfsr	2,4
  9390  0037D6  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9391  0037D8  26D9               	addwf	fsr2l,f,c
  9392  0037DA  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9393  0037DC  22DA               	addwfc	fsr2h,f,c
  9394  0037DE  0E14               	movlw	20
  9395  0037E0  18DE               	xorwf	postinc2,w,c
  9396  0037E2  10DE               	iorwf	postinc2,w,c
  9397  0037E4  A4D8               	btfss	status,2,c
  9398  0037E6  D046               	goto	l23164
  9399                           
  9400                           ; BSR set to: 0
  9401                           ;sm_ControlGate_MC50.c: 205:                 psm->current_state = st_Learning;
  9402  0037E8  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  9403  0037EC  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  9404  0037F0  0E05               	movlw	5
  9405  0037F2  D01B               	goto	L55
  9406  0037F4                     l23152:
  9407                           
  9408                           ; BSR set to: 0
  9409                           ;sm_ControlGate_MC50.c: 217:         {;sm_ControlGate_MC50.c: 218:             if (psm->
      +                          last_event == ev_LearningComplete) {
  9410  0037F4  EE20 F004          	lfsr	2,4
  9411  0037F8  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9412  0037FA  26D9               	addwf	fsr2l,f,c
  9413  0037FC  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9414  0037FE  22DA               	addwfc	fsr2h,f,c
  9415  003800  0E13               	movlw	19
  9416  003802  18DE               	xorwf	postinc2,w,c
  9417  003804  10DE               	iorwf	postinc2,w,c
  9418  003806  B4D8               	btfsc	status,2,c
  9419  003808  D755               	goto	u28530
  9420                           
  9421                           ; BSR set to: 0
  9422                           
  9423                           ;sm_ControlGate_MC50.c: 220:             } else if (psm->last_event == ev_ErrorLearning)
      +                           {
  9424                           
  9425                           ; BSR set to: 0
  9426                           ;sm_ControlGate_MC50.c: 219:                 psm->current_state = st_Closed;
  9427  00380A  EE20 F004          	lfsr	2,4
  9428  00380E  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9429  003810  26D9               	addwf	fsr2l,f,c
  9430  003812  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9431  003814  22DA               	addwfc	fsr2h,f,c
  9432  003816  0E12               	movlw	18
  9433  003818                     L126:
  9434  003818  18DE               	xorwf	postinc2,w,c
  9435  00381A  10DE               	iorwf	postinc2,w,c
  9436  00381C  A4D8               	btfss	status,2,c
  9437  00381E  D02A               	goto	l23164
  9438  003820                     L127:
  9439                           
  9440                           ; BSR set to: 0
  9441                           ;sm_ControlGate_MC50.c: 221:                 psm->current_state = st_Idle;
  9442  003820  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  9443  003824  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  9444  003828  0E00               	movlw	0
  9445  00382A                     L55:
  9446  00382A  6EDE               	movwf	postinc2,c
  9447  00382C  0E00               	movlw	0
  9448  00382E  6EDD               	movwf	postdec2,c
  9449  003830  D021               	goto	l23164
  9450  003832                     l2648:
  9451                           
  9452                           ; BSR set to: 0
  9453  003832  D7FF               	goto	l2648
  9454  003834                     l23162:
  9455                           
  9456                           ; BSR set to: 1
  9457  003834  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  9458  003838  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  9459  00383C  50DF               	movf	indf2,w,c
  9460  00383E  0100               	movlb	0	; () banked
  9461  003840  6FE9               	movwf	??_sm_execute_ControlGate& (0+255),b
  9462  003842  6BEA               	clrf	(??_sm_execute_ControlGate+1)& (0+255),b
  9463                           
  9464                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9465                           ; Switch size 1, requested type "simple"
  9466                           ; Number of cases is 1, Range of values is 0 to 0
  9467                           ; switch strategies available:
  9468                           ; Name         Instructions Cycles
  9469                           ; simple_byte            4     3 (average)
  9470                           ;	Chosen strategy is simple_byte
  9471  003844  51EA               	movf	(??_sm_execute_ControlGate+1)& (0+255),w,b
  9472  003846  0A00               	xorlw	0	; case 0
  9473  003848  A4D8               	btfss	status,2,c
  9474  00384A  D7F3               	goto	l2648
  9475                           
  9476                           ; BSR set to: 0
  9477                           ; Switch size 1, requested type "simple"
  9478                           ; Number of cases is 6, Range of values is 0 to 5
  9479                           ; switch strategies available:
  9480                           ; Name         Instructions Cycles
  9481                           ; simple_byte           19    10 (average)
  9482                           ;	Chosen strategy is simple_byte
  9483  00384C  51E9               	movf	??_sm_execute_ControlGate& (0+255),w,b
  9484  00384E  0A00               	xorlw	0	; case 0
  9485  003850  B4D8               	btfsc	status,2,c
  9486  003852  D725               	goto	l23092
  9487  003854  0A01               	xorlw	1	; case 1
  9488  003856  B4D8               	btfsc	status,2,c
  9489  003858  D73F               	goto	l23100
  9490  00385A  0A03               	xorlw	3	; case 2
  9491  00385C  B4D8               	btfsc	status,2,c
  9492  00385E  D74D               	goto	l23108
  9493  003860  0A01               	xorlw	1	; case 3
  9494  003862  B4D8               	btfsc	status,2,c
  9495  003864  D766               	goto	l23120
  9496  003866  0A07               	xorlw	7	; case 4
  9497  003868  B4D8               	btfsc	status,2,c
  9498  00386A  D792               	goto	l23136
  9499  00386C  0A01               	xorlw	1	; case 5
  9500  00386E  B4D8               	btfsc	status,2,c
  9501  003870  D7C1               	goto	l23152
  9502  003872  D7DF               	goto	l2648
  9503  003874                     l23164:
  9504                           
  9505                           ; BSR set to: 0
  9506                           ;sm_ControlGate_MC50.c: 234:     sm_send_event(&controlGate_stateMachine, ev_NULL);
  9507  003874  0EE2               	movlw	low _controlGate_stateMachine
  9508  003876  6E12               	movwf	sm_send_event@psm^0,c
  9509  003878  0E01               	movlw	high _controlGate_stateMachine
  9510  00387A  6E13               	movwf	(sm_send_event@psm+1)^0,c
  9511  00387C  0E00               	movlw	0
  9512  00387E  6E15               	movwf	(sm_send_event@event+1)^0,c
  9513  003880  0E00               	movlw	0
  9514  003882  6E14               	movwf	sm_send_event@event^0,c
  9515  003884  EC1C  F041         	call	_sm_send_event	;wreg free
  9516                           
  9517                           ;sm_ControlGate_MC50.c: 239:     switch ((sm_state_ControlGate_t) psm->current_state) {
  9518  003888  D07D               	goto	l23228
  9519  00388A                     l23166:
  9520                           
  9521                           ; BSR set to: 0
  9522                           ;sm_ControlGate_MC50.c: 241:         {;sm_ControlGate_MC50.c: 244:             ts_system
      +                          .TimeStopADCZeroOffsetCalc = (5 * (1000/50));
  9523  00388A  0E00               	movlw	0
  9524  00388C  0101               	movlb	1	; () banked
  9525  00388E  6FD9               	movwf	(_ts_system+63)& (0+255),b	;volatile
  9526  003890  0E64               	movlw	100
  9527  003892  6FD8               	movwf	(_ts_system+62)& (0+255),b	;volatile
  9528                           
  9529                           ;sm_ControlGate_MC50.c: 247:             var_sys.PositionIsLost = YES;
  9530  003894  0E01               	movlw	1
  9531  003896  6F48               	movwf	(_var_sys+72)& (0+255),b	;volatile
  9532                           
  9533                           ; BSR set to: 1
  9534                           ;sm_ControlGate_MC50.c: 248:             if (var_sys.WorkTimeMaxAlarmState == EmAlarme |
      +                          | var_sys.NumberOffErrors > 3)
  9535  003898  0E02               	movlw	2
  9536  00389A  1942               	xorwf	(_var_sys+66)& (0+255),w,b	;volatile
  9537  00389C  B4D8               	btfsc	status,2,c
  9538  00389E  D003               	goto	u28710
  9539                           
  9540                           ; BSR set to: 1
  9541  0038A0  0E03               	movlw	3
  9542  0038A2  6543               	cpfsgt	(_var_sys+67)& (0+255),b	;volatile
  9543  0038A4  D027               	goto	l23188
  9544  0038A6                     u28710:
  9545                           
  9546                           ; BSR set to: 1
  9547                           ;sm_ControlGate_MC50.c: 249:             {;sm_ControlGate_MC50.c: 252:                 t
      +                          ypeOpenOrder = GetOpenOrder();
  9548  0038A6  ECBF  F028         	call	_GetOpenOrder	;wreg free
  9549  0038AA  0100               	movlb	0	; () banked
  9550  0038AC  6FEB               	movwf	sm_execute_ControlGate@typeOpenOrder& (0+255),b
  9551                           
  9552                           ; BSR set to: 0
  9553                           ;sm_ControlGate_MC50.c: 253:                 SetSegmentValueIntermitent(dE,dr, (1000/50)
      +                          );
  9554  0038AE  0E14               	movlw	20
  9555  0038B0  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
  9556  0038B2  0E00               	movlw	0
  9557  0038B4  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
  9558  0038B6  0E14               	movlw	20
  9559  0038B8  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
  9560  0038BA  0E0E               	movlw	14
  9561  0038BC  EC94  F045         	call	_SetSegmentValueIntermitent
  9562                           
  9563                           ; BSR set to: 1
  9564                           ;sm_ControlGate_MC50.c: 254:                 ts_system.timeSinalizationDigit = ( 500/50)
      +                          ;
  9565  0038C0  0E00               	movlw	0
  9566  0038C2  6FA7               	movwf	(_ts_system+13)& (0+255),b	;volatile
  9567  0038C4  0E0A               	movlw	10
  9568  0038C6  6FA6               	movwf	(_ts_system+12)& (0+255),b	;volatile
  9569                           
  9570                           ; BSR set to: 1
  9571                           ;sm_ControlGate_MC50.c: 255:                 if ((typeOpenOrder != NoCMD) ||(button_stru
      +                          ct.current==0 || button_struct.current==0x00 ||button_struct.current==0x17 ))
  9572  0038C8  0100               	movlb	0	; () banked
  9573  0038CA  51EB               	movf	sm_execute_ControlGate@typeOpenOrder& (0+255),w,b
  9574  0038CC  A4D8               	btfss	status,2,c
  9575  0038CE  D00A               	goto	u28750
  9576                           
  9577                           ; BSR set to: 0
  9578  0038D0  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  9579  0038D2  B4D8               	btfsc	status,2,c
  9580  0038D4  D007               	goto	u28750
  9581                           
  9582                           ; BSR set to: 0
  9583  0038D6  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  9584  0038D8  B4D8               	btfsc	status,2,c
  9585  0038DA  D004               	goto	u28750
  9586                           
  9587                           ; BSR set to: 0
  9588  0038DC  0E17               	movlw	23
  9589  0038DE  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  9590  0038E0  A4D8               	btfss	status,2,c
  9591  0038E2  0012               	return	
  9592  0038E4                     u28750:
  9593                           
  9594                           ; BSR set to: 0
  9595                           ;sm_ControlGate_MC50.c: 256:                 {;sm_ControlGate_MC50.c: 257:              
      +                                 var_sys.WorkTimeMaxAlarmState = Clear;
  9596  0038E4  0E00               	movlw	0
  9597  0038E6  0101               	movlb	1	; () banked
  9598  0038E8  6F42               	movwf	(_var_sys+66)& (0+255),b	;volatile
  9599                           
  9600                           ;sm_ControlGate_MC50.c: 258:                     var_sys.NumberOffErrors = 0;
  9601  0038EA  0E00               	movlw	0
  9602  0038EC  6F43               	movwf	(_var_sys+67)& (0+255),b	;volatile
  9603                           
  9604                           ;sm_ControlGate_MC50.c: 259:                     button_struct.processed=1;
  9605  0038EE  0E01               	movlw	1
  9606  0038F0  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  9607  0038F2  0012               	return	
  9608  0038F4                     l23188:
  9609                           
  9610                           ; BSR set to: 1
  9611                           ;sm_ControlGate_MC50.c: 264:             {;sm_ControlGate_MC50.c: 267:                  
      +                             var_sys.Statedoorcontrol = st_Closed;
  9612  0038F4  0E01               	movlw	1
  9613  0038F6  6F1C               	movwf	(_var_sys+28)& (0+255),b	;volatile
  9614                           
  9615                           ; BSR set to: 1
  9616                           ;sm_ControlGate_MC50.c: 268:                     var_sys.actualCounterMoves++;
  9617  0038F8  0E01               	movlw	1
  9618  0038FA  273C               	addwf	(_var_sys+60)& (0+255),f,b	;volatile
  9619  0038FC  0E00               	movlw	0
  9620  0038FE  233D               	addwfc	(_var_sys+61)& (0+255),f,b	;volatile
  9621  003900  233E               	addwfc	(_var_sys+62)& (0+255),f,b	;volatile
  9622  003902  233F               	addwfc	(_var_sys+63)& (0+255),f,b	;volatile
  9623                           
  9624                           ; BSR set to: 1
  9625                           ;sm_ControlGate_MC50.c: 269:                     var_sys.Timewalkisactived = 0;
  9626  003904  0E00               	movlw	0
  9627  003906  6F4A               	movwf	(_var_sys+74)& (0+255),b	;volatile
  9628                           
  9629                           ; BSR set to: 1
  9630                           ;sm_ControlGate_MC50.c: 270:                     var_sys.PositionActual = 0;
  9631  003908  0E00               	movlw	0
  9632  00390A  6F1E               	movwf	(_var_sys+30)& (0+255),b	;volatile
  9633  00390C  0E00               	movlw	0
  9634  00390E  6F1F               	movwf	(_var_sys+31)& (0+255),b	;volatile
  9635  003910  0E00               	movlw	0
  9636  003912  6F20               	movwf	(_var_sys+32)& (0+255),b	;volatile
  9637  003914  0E00               	movlw	0
  9638  003916  6F21               	movwf	(_var_sys+33)& (0+255),b	;volatile
  9639                           
  9640                           ; BSR set to: 1
  9641                           ;sm_ControlGate_MC50.c: 272:                     var_sys.PositionIsLost = NO;
  9642  003918  0E00               	movlw	0
  9643  00391A  6F48               	movwf	(_var_sys+72)& (0+255),b	;volatile
  9644                           
  9645                           ; BSR set to: 1
  9646                           ;sm_ControlGate_MC50.c: 273:                     var_sys.NumberOffErrors = 0;
  9647  00391C  0E00               	movlw	0
  9648  00391E  6F43               	movwf	(_var_sys+67)& (0+255),b	;volatile
  9649                           
  9650                           ; BSR set to: 1
  9651                           ;sm_ControlGate_MC50.c: 274:                     var_sys.StateMotor = Stopped;
  9652  003920  0E00               	movlw	0
  9653  003922  6F00               	movwf	_var_sys& (0+255),b	;volatile
  9654                           
  9655                           ; BSR set to: 1
  9656                           ;sm_ControlGate_MC50.c: 276:                     ts_system.timeSinalizationDigit = (1000
      +                          /50) * 2;
  9657  003924  0E00               	movlw	0
  9658  003926  6FA7               	movwf	(_ts_system+13)& (0+255),b	;volatile
  9659  003928  0E28               	movlw	40
  9660  00392A  6FA6               	movwf	(_ts_system+12)& (0+255),b	;volatile
  9661                           
  9662                           ; BSR set to: 1
  9663                           ;sm_ControlGate_MC50.c: 277:                     SetSegmentValueIntermitent(dF, dC, ( 20
      +                          0/50));
  9664  00392C  0E0C               	movlw	12
  9665  00392E  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
  9666  003930  0E00               	movlw	0
  9667  003932  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
  9668  003934  0E04               	movlw	4
  9669  003936  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
  9670  003938  0E0F               	movlw	15
  9671  00393A  EC94  F045         	call	_SetSegmentValueIntermitent
  9672                           
  9673                           ; BSR set to: 1
  9674                           ;sm_ControlGate_MC50.c: 278:                     sm_send_event(&controlGate_stateMachine
      +                          , ev_GateClosed);
  9675  00393E  0EE2               	movlw	low _controlGate_stateMachine
  9676  003940  6E12               	movwf	sm_send_event@psm^0,c
  9677  003942  0E01               	movlw	high _controlGate_stateMachine
  9678  003944  6E13               	movwf	(sm_send_event@psm+1)^0,c
  9679  003946  0E00               	movlw	0
  9680  003948  6E15               	movwf	(sm_send_event@event+1)^0,c
  9681  00394A  0E0A               	movlw	10
  9682  00394C  6E14               	movwf	sm_send_event@event^0,c
  9683  00394E  EC1C  F041         	call	_sm_send_event	;wreg free
  9684  003952  0012               	return	
  9685  003954                     l23208:
  9686                           
  9687                           ; BSR set to: 0
  9688                           ;sm_ControlGate_MC50.c: 285:         {;sm_ControlGate_MC50.c: 287:             actionZon
      +                          e_Closed();
  9689  003954  EC16  F039         	call	_actionZone_Closed	;wreg free
  9690                           
  9691                           ;sm_ControlGate_MC50.c: 288:         };sm_ControlGate_MC50.c: 289:             break;
  9692  003958  0012               	return	
  9693  00395A                     l23210:
  9694                           
  9695                           ; BSR set to: 0
  9696                           ;sm_ControlGate_MC50.c: 291:         {;sm_ControlGate_MC50.c: 293:             actionZon
      +                          e_Opening();
  9697  00395A  EC70  F022         	call	_actionZone_Opening	;wreg free
  9698  00395E                     l23212:
  9699                           
  9700                           ;sm_ControlGate_MC50.c: 295:             ts_system.TimeStopADCZeroOffsetCalc = (5 * (100
      +                          0/50));
  9701  00395E  0E00               	movlw	0
  9702  003960  0101               	movlb	1	; () banked
  9703  003962  6FD9               	movwf	(_ts_system+63)& (0+255),b	;volatile
  9704  003964  0E64               	movlw	100
  9705  003966  6FD8               	movwf	(_ts_system+62)& (0+255),b	;volatile
  9706                           
  9707                           ;sm_ControlGate_MC50.c: 296:         };sm_ControlGate_MC50.c: 297:             break;
  9708  003968  0012               	return	
  9709  00396A                     l23214:
  9710                           
  9711                           ; BSR set to: 0
  9712                           ;sm_ControlGate_MC50.c: 299:         {;sm_ControlGate_MC50.c: 301:             actionZon
      +                          e_Opened();
  9713  00396A  ECDF  F026         	call	_actionZone_Opened	;wreg free
  9714  00396E  D7F7               	goto	l23212
  9715  003970                     l23218:
  9716                           
  9717                           ; BSR set to: 0
  9718                           ;sm_ControlGate_MC50.c: 307:         {;sm_ControlGate_MC50.c: 309:             actionZon
      +                          e_Closing();
  9719  003970  ECEF  F01F         	call	_actionZone_Closing	;wreg free
  9720  003974  D7F4               	goto	l23212
  9721  003976                     l23222:
  9722                           
  9723                           ; BSR set to: 0
  9724                           ;sm_ControlGate_MC50.c: 315:         {;sm_ControlGate_MC50.c: 316:             sm_execut
      +                          e_ControlLearning(&controlLearning_stateMachine);
  9725  003976  0EB2               	movlw	low _controlLearning_stateMachine
  9726  003978  6FDC               	movwf	sm_execute_ControlLearning@psm& (0+255),b
  9727  00397A  0E02               	movlw	high _controlLearning_stateMachine
  9728  00397C  6FDD               	movwf	(sm_execute_ControlLearning@psm+1)& (0+255),b
  9729  00397E  EC43  F00C         	call	_sm_execute_ControlLearning	;wreg free
  9730  003982  D7ED               	goto	l23212
  9731  003984                     l23228:
  9732  003984  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  9733  003988  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  9734  00398C  50DF               	movf	indf2,w,c
  9735  00398E  0100               	movlb	0	; () banked
  9736  003990  6FE9               	movwf	??_sm_execute_ControlGate& (0+255),b
  9737  003992  6BEA               	clrf	(??_sm_execute_ControlGate+1)& (0+255),b
  9738                           
  9739                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9740                           ; Switch size 1, requested type "simple"
  9741                           ; Number of cases is 1, Range of values is 0 to 0
  9742                           ; switch strategies available:
  9743                           ; Name         Instructions Cycles
  9744                           ; simple_byte            4     3 (average)
  9745                           ;	Chosen strategy is simple_byte
  9746  003994  51EA               	movf	(??_sm_execute_ControlGate+1)& (0+255),w,b
  9747  003996  0A00               	xorlw	0	; case 0
  9748  003998  A4D8               	btfss	status,2,c
  9749  00399A  0012               	return	
  9750                           
  9751                           ; BSR set to: 0
  9752                           ; Switch size 1, requested type "simple"
  9753                           ; Number of cases is 6, Range of values is 0 to 5
  9754                           ; switch strategies available:
  9755                           ; Name         Instructions Cycles
  9756                           ; simple_byte           19    10 (average)
  9757                           ;	Chosen strategy is simple_byte
  9758  00399C  51E9               	movf	??_sm_execute_ControlGate& (0+255),w,b
  9759  00399E  0A00               	xorlw	0	; case 0
  9760  0039A0  B4D8               	btfsc	status,2,c
  9761  0039A2  D773               	goto	l23166
  9762  0039A4  0A01               	xorlw	1	; case 1
  9763  0039A6  B4D8               	btfsc	status,2,c
  9764  0039A8  D7D5               	goto	l23208
  9765  0039AA  0A03               	xorlw	3	; case 2
  9766  0039AC  B4D8               	btfsc	status,2,c
  9767  0039AE  D7D5               	goto	l23210
  9768  0039B0  0A01               	xorlw	1	; case 3
  9769  0039B2  B4D8               	btfsc	status,2,c
  9770  0039B4  D7DD               	goto	l23218
  9771  0039B6  0A07               	xorlw	7	; case 4
  9772  0039B8  B4D8               	btfsc	status,2,c
  9773  0039BA  D7D7               	goto	l23214
  9774  0039BC  0A01               	xorlw	1	; case 5
  9775  0039BE  A4D8               	btfss	status,2,c
  9776  0039C0  0012               	return	
  9777  0039C2  D7D9               	goto	l23222
  9778  0039C4                     __end_of_sm_execute_ControlGate:
  9779                           	callstack 0
  9780                           
  9781 ;; *************** function _sm_execute_ControlLearning *****************
  9782 ;; Defined at:
  9783 ;;		line 29 in file "sm_ControlLearning_MC50.c"
  9784 ;; Parameters:    Size  Location     Type
  9785 ;;  psm             2    4[BANK0 ] PTR struct .
  9786 ;;		 -> controlLearning_stateMachine(11), 
  9787 ;; Auto vars:     Size  Location     Type
  9788 ;;  typeOpenOrde    1   57[COMRAM] enum E10372
  9789 ;; Return value:  Size  Location     Type
  9790 ;;                  1    wreg      void 
  9791 ;; Registers used:
  9792 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  9793 ;; Tracked objects:
  9794 ;;		On entry : 3F/0
  9795 ;;		On exit  : 0/0
  9796 ;;		Unchanged: 0/0
  9797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9798 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9799 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9800 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9801 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9802 ;;Total ram usage:        5 bytes
  9803 ;; Hardware stack levels used: 1
  9804 ;; Hardware stack levels required when called: 14
  9805 ;; This function calls:
  9806 ;;		_GetOpenOrder
  9807 ;;		_SaveNVM_VarSystem
  9808 ;;		_calculateMean
  9809 ;;		_clearLearningValue
  9810 ;;		_generateErrorLearnig
  9811 ;;		_sm_send_event
  9812 ;; This function is called by:
  9813 ;;		_sm_execute_ControlGate
  9814 ;; This function uses a non-reentrant model
  9815 ;;
  9816                           
  9817                           	psect	text21
  9818  001886                     __ptext21:
  9819                           	callstack 0
  9820  001886                     _sm_execute_ControlLearning:
  9821                           	callstack 15
  9822                           
  9823                           ; BSR set to: 0
  9824                           ;sm_ControlLearning_MC50.c: 31:    TypeCMD typeOpenOrder = GetOpenOrder();
  9825                           
  9826                           ;incstack = 0
  9827  001886  ECBF  F028         	call	_GetOpenOrder	;wreg free
  9828  00188A  6E3A               	movwf	sm_execute_ControlLearning@typeOpenOrder^0,c
  9829                           
  9830                           ;sm_ControlLearning_MC50.c: 33:     switch((sm_state_ControlLearning_t) psm->current_sta
      +                          te)
  9831  00188C  D0B8               	goto	l21888
  9832  00188E                     l21814:
  9833                           
  9834                           ; BSR set to: 0
  9835                           ;sm_ControlLearning_MC50.c: 36:         {;sm_ControlLearning_MC50.c: 37:              if
      +                          ((psm->last_event==ev_GateClosed)&&(var_sys_NVM.decelarationSensivity != 0)&& (var_sys.p
      +                          rograminAutomatic == 0))
  9836  00188E  EE20 F004          	lfsr	2,4
  9837  001892  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9838  001894  26D9               	addwf	fsr2l,f,c
  9839  001896  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9840  001898  22DA               	addwfc	fsr2h,f,c
  9841  00189A  0E0A               	movlw	10
  9842  00189C  18DE               	xorwf	postinc2,w,c
  9843  00189E  10DE               	iorwf	postinc2,w,c
  9844  0018A0  A4D8               	btfss	status,2,c
  9845  0018A2  D00D               	goto	l21822
  9846                           
  9847                           ; BSR set to: 0
  9848  0018A4  51A7               	movf	(_var_sys_NVM+15)& (0+255),w,b	;volatile
  9849  0018A6  B4D8               	btfsc	status,2,c
  9850  0018A8  D00A               	goto	l21822
  9851                           
  9852                           ; BSR set to: 0
  9853  0018AA  0101               	movlb	1	; () banked
  9854  0018AC  512A               	movf	(_var_sys+42)& (0+255),w,b	;volatile
  9855  0018AE  A4D8               	btfss	status,2,c
  9856  0018B0  D006               	goto	l21822
  9857  0018B2                     u25850:
  9858                           
  9859                           ; BSR set to: 1
  9860                           ;sm_ControlLearning_MC50.c: 38:             {;sm_ControlLearning_MC50.c: 39:            
      +                               psm->current_state = st_WaitLearnigOpen;
  9861  0018B2  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
  9862  0018B6  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
  9863  0018BA  0E02               	movlw	2
  9864  0018BC  D08A               	goto	L66
  9865  0018BE                     l21822:
  9866  0018BE  0100               	movlb	0	; () banked
  9867  0018C0  EE20 F004          	lfsr	2,4
  9868  0018C4  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9869  0018C6  26D9               	addwf	fsr2l,f,c
  9870  0018C8  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9871  0018CA  22DA               	addwfc	fsr2h,f,c
  9872  0018CC  0E0A               	movlw	10
  9873  0018CE  18DE               	xorwf	postinc2,w,c
  9874  0018D0  10DE               	iorwf	postinc2,w,c
  9875  0018D2  A4D8               	btfss	status,2,c
  9876  0018D4  D00D               	goto	l21830
  9877                           
  9878                           ; BSR set to: 0
  9879  0018D6  51A7               	movf	(_var_sys_NVM+15)& (0+255),w,b	;volatile
  9880  0018D8  B4D8               	btfsc	status,2,c
  9881  0018DA  D004               	goto	u25880
  9882                           
  9883                           ; BSR set to: 0
  9884  0018DC  0101               	movlb	1	; () banked
  9885  0018DE  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
  9886  0018E0  A4D8               	btfss	status,2,c
  9887  0018E2  D006               	goto	l21830
  9888  0018E4                     u25880:
  9889                           
  9890                           ;sm_ControlLearning_MC50.c: 43:             {;sm_ControlLearning_MC50.c: 44:            
      +                               psm->current_state = st_WaitForOpened;
  9891  0018E4  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
  9892  0018E8  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
  9893  0018EC  0E04               	movlw	4
  9894  0018EE  D071               	goto	L66
  9895  0018F0                     l21830:
  9896  0018F0  0100               	movlb	0	; () banked
  9897  0018F2  EE20 F004          	lfsr	2,4
  9898  0018F6  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9899  0018F8  26D9               	addwf	fsr2l,f,c
  9900  0018FA  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9901  0018FC  22DA               	addwfc	fsr2h,f,c
  9902  0018FE  0E0B               	movlw	11
  9903  001900  18DE               	xorwf	postinc2,w,c
  9904  001902  10DE               	iorwf	postinc2,w,c
  9905  001904  A4D8               	btfss	status,2,c
  9906  001906  D09B               	goto	l21890
  9907                           
  9908                           ; BSR set to: 0
  9909                           ;sm_ControlLearning_MC50.c: 47:             {;sm_ControlLearning_MC50.c: 48:            
      +                               psm->current_state = st_WaitForClosed;
  9910  001908  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
  9911  00190C  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
  9912  001910  0E01               	movlw	1
  9913  001912  D05F               	goto	L66
  9914  001914                     l21834:
  9915                           
  9916                           ; BSR set to: 0
  9917                           ;sm_ControlLearning_MC50.c: 53:         {;sm_ControlLearning_MC50.c: 54:             if(
      +                          (psm->last_event==ev_GateClosed)&&(var_sys_NVM.decelarationSensivity != 0) && (var_sys.p
      +                          rograminAutomatic == 0))
  9918  001914  EE20 F004          	lfsr	2,4
  9919  001918  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9920  00191A  26D9               	addwf	fsr2l,f,c
  9921  00191C  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9922  00191E  22DA               	addwfc	fsr2h,f,c
  9923  001920  0E0A               	movlw	10
  9924  001922  18DE               	xorwf	postinc2,w,c
  9925  001924  10DE               	iorwf	postinc2,w,c
  9926  001926  A4D8               	btfss	status,2,c
  9927  001928  D007               	goto	l21842
  9928                           
  9929                           ; BSR set to: 0
  9930  00192A  51A7               	movf	(_var_sys_NVM+15)& (0+255),w,b	;volatile
  9931  00192C  B4D8               	btfsc	status,2,c
  9932  00192E  D004               	goto	l21842
  9933                           
  9934                           ; BSR set to: 0
  9935  001930  0101               	movlb	1	; () banked
  9936  001932  512A               	movf	(_var_sys+42)& (0+255),w,b	;volatile
  9937  001934  B4D8               	btfsc	status,2,c
  9938  001936  D7BD               	goto	u25850
  9939  001938                     l21842:
  9940  001938  0100               	movlb	0	; () banked
  9941  00193A  EE20 F004          	lfsr	2,4
  9942  00193E  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9943  001940  26D9               	addwf	fsr2l,f,c
  9944  001942  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9945  001944  22DA               	addwfc	fsr2h,f,c
  9946  001946  0E0A               	movlw	10
  9947  001948  18DE               	xorwf	postinc2,w,c
  9948  00194A  10DE               	iorwf	postinc2,w,c
  9949  00194C  A4D8               	btfss	status,2,c
  9950  00194E  D007               	goto	l21850
  9951                           
  9952                           ; BSR set to: 0
  9953  001950  51A7               	movf	(_var_sys_NVM+15)& (0+255),w,b	;volatile
  9954  001952  B4D8               	btfsc	status,2,c
  9955  001954  D7C7               	goto	u25880
  9956                           
  9957                           ; BSR set to: 0
  9958  001956  0101               	movlb	1	; () banked
  9959  001958  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
  9960  00195A  B4D8               	btfsc	status,2,c
  9961  00195C  D7C3               	goto	u25880
  9962  00195E                     l21850:
  9963  00195E  0100               	movlb	0	; () banked
  9964  001960                     L68:
  9965  001960  EE20 F004          	lfsr	2,4
  9966  001964  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9967  001966  26D9               	addwf	fsr2l,f,c
  9968  001968  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9969  00196A  22DA               	addwfc	fsr2h,f,c
  9970  00196C  0E10               	movlw	16
  9971  00196E  18DE               	xorwf	postinc2,w,c
  9972  001970  10DE               	iorwf	postinc2,w,c
  9973  001972  A4D8               	btfss	status,2,c
  9974  001974  D064               	goto	l21890
  9975  001976  D03C               	goto	L128
  9976  001978                     l21854:
  9977                           
  9978                           ; BSR set to: 0
  9979                           ;sm_ControlLearning_MC50.c: 70:         {;sm_ControlLearning_MC50.c: 71:             if(
      +                          psm->last_event==ev_GateOpened)
  9980  001978  EE20 F004          	lfsr	2,4
  9981  00197C  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9982  00197E  26D9               	addwf	fsr2l,f,c
  9983  001980  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9984  001982  22DA               	addwfc	fsr2h,f,c
  9985  001984  0E0B               	movlw	11
  9986  001986  18DE               	xorwf	postinc2,w,c
  9987  001988  10DE               	iorwf	postinc2,w,c
  9988  00198A  A4D8               	btfss	status,2,c
  9989  00198C  D7E9               	goto	L68
  9990                           
  9991                           ; BSR set to: 0
  9992                           ;sm_ControlLearning_MC50.c: 72:             {;sm_ControlLearning_MC50.c: 73:            
      +                               psm->current_state = st_WaitLearnigClose;
  9993  00198E  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
  9994  001992  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
  9995  001996  0E03               	movlw	3
  9996  001998  D01C               	goto	L66
  9997  00199A                     l21862:
  9998                           
  9999                           ; BSR set to: 0
 10000                           ;sm_ControlLearning_MC50.c: 82:         {;sm_ControlLearning_MC50.c: 83:             if(
      +                          psm->last_event==ev_GateClosed)
 10001  00199A  EE20 F004          	lfsr	2,4
 10002  00199E  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
 10003  0019A0  26D9               	addwf	fsr2l,f,c
 10004  0019A2  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
 10005  0019A4  22DA               	addwfc	fsr2h,f,c
 10006  0019A6  0E0A               	movlw	10
 10007  0019A8  18DE               	xorwf	postinc2,w,c
 10008  0019AA  10DE               	iorwf	postinc2,w,c
 10009  0019AC  A4D8               	btfss	status,2,c
 10010  0019AE  D7D8               	goto	L68
 10011  0019B0  D799               	goto	u25880
 10012  0019B2                     l21870:
 10013                           
 10014                           ; BSR set to: 0
 10015                           ;sm_ControlLearning_MC50.c: 94:         {;sm_ControlLearning_MC50.c: 95:             if(
      +                          psm->last_event==ev_GateOpened)
 10016  0019B2  EE20 F004          	lfsr	2,4
 10017  0019B6  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
 10018  0019B8  26D9               	addwf	fsr2l,f,c
 10019  0019BA  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
 10020  0019BC  22DA               	addwfc	fsr2h,f,c
 10021  0019BE  0E0B               	movlw	11
 10022  0019C0  18DE               	xorwf	postinc2,w,c
 10023  0019C2  10DE               	iorwf	postinc2,w,c
 10024  0019C4  A4D8               	btfss	status,2,c
 10025  0019C6  D7CC               	goto	L68
 10026                           
 10027                           ; BSR set to: 0
 10028                           ;sm_ControlLearning_MC50.c: 96:             {;sm_ControlLearning_MC50.c: 97:            
      +                               psm->current_state = st_WaitForEndLearn;
 10029  0019C8  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
 10030  0019CC  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
 10031  0019D0  0E05               	movlw	5
 10032  0019D2                     L66:
 10033  0019D2  6EDE               	movwf	postinc2,c
 10034  0019D4  0E00               	movlw	0
 10035  0019D6  6EDD               	movwf	postdec2,c
 10036  0019D8  D032               	goto	l21890
 10037  0019DA                     l21878:
 10038                           
 10039                           ; BSR set to: 0
 10040                           ;sm_ControlLearning_MC50.c: 106:         {;sm_ControlLearning_MC50.c: 107:             i
      +                          f(psm->last_event==ev_GateClosed)
 10041  0019DA  EE20 F004          	lfsr	2,4
 10042  0019DE  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
 10043  0019E0  26D9               	addwf	fsr2l,f,c
 10044  0019E2  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
 10045  0019E4  22DA               	addwfc	fsr2h,f,c
 10046  0019E6  0E0A               	movlw	10
 10047  0019E8  18DE               	xorwf	postinc2,w,c
 10048  0019EA  10DE               	iorwf	postinc2,w,c
 10049  0019EC  A4D8               	btfss	status,2,c
 10050  0019EE  D7B8               	goto	L68
 10051  0019F0                     L128:
 10052                           
 10053                           ; BSR set to: 0
 10054                           ;sm_ControlLearning_MC50.c: 112:             {;sm_ControlLearning_MC50.c: 113:          
      +                                 psm->current_state = st_InitLearning;
 10055  0019F0  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
 10056  0019F4  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
 10057  0019F8  0E00               	movlw	0
 10058  0019FA  D7EB               	goto	L66
 10059  0019FC                     l2907:
 10060                           
 10061                           ; BSR set to: 0
 10062  0019FC  D7FF               	goto	l2907
 10063  0019FE                     l21888:
 10064  0019FE  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
 10065  001A02  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
 10066  001A06  50DF               	movf	indf2,w,c
 10067  001A08  0100               	movlb	0	; () banked
 10068  001A0A  6FDE               	movwf	??_sm_execute_ControlLearning& (0+255),b
 10069  001A0C  6BDF               	clrf	(??_sm_execute_ControlLearning+1)& (0+255),b
 10070                           
 10071                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10072                           ; Switch size 1, requested type "simple"
 10073                           ; Number of cases is 1, Range of values is 0 to 0
 10074                           ; switch strategies available:
 10075                           ; Name         Instructions Cycles
 10076                           ; simple_byte            4     3 (average)
 10077                           ;	Chosen strategy is simple_byte
 10078  001A0E  51DF               	movf	(??_sm_execute_ControlLearning+1)& (0+255),w,b
 10079  001A10  0A00               	xorlw	0	; case 0
 10080  001A12  A4D8               	btfss	status,2,c
 10081  001A14  D7F3               	goto	l2907
 10082                           
 10083                           ; BSR set to: 0
 10084                           ; Switch size 1, requested type "simple"
 10085                           ; Number of cases is 6, Range of values is 0 to 5
 10086                           ; switch strategies available:
 10087                           ; Name         Instructions Cycles
 10088                           ; simple_byte           19    10 (average)
 10089                           ;	Chosen strategy is simple_byte
 10090  001A16  51DE               	movf	??_sm_execute_ControlLearning& (0+255),w,b
 10091  001A18  0A00               	xorlw	0	; case 0
 10092  001A1A  B4D8               	btfsc	status,2,c
 10093  001A1C  D738               	goto	l21814
 10094  001A1E  0A01               	xorlw	1	; case 1
 10095  001A20  B4D8               	btfsc	status,2,c
 10096  001A22  D778               	goto	l21834
 10097  001A24  0A03               	xorlw	3	; case 2
 10098  001A26  B4D8               	btfsc	status,2,c
 10099  001A28  D7A7               	goto	l21854
 10100  001A2A  0A01               	xorlw	1	; case 3
 10101  001A2C  B4D8               	btfsc	status,2,c
 10102  001A2E  D7B5               	goto	l21862
 10103  001A30  0A07               	xorlw	7	; case 4
 10104  001A32  B4D8               	btfsc	status,2,c
 10105  001A34  D7BE               	goto	l21870
 10106  001A36  0A01               	xorlw	1	; case 5
 10107  001A38  B4D8               	btfsc	status,2,c
 10108  001A3A  D7CF               	goto	l21878
 10109  001A3C  D7DF               	goto	l2907
 10110  001A3E                     l21890:
 10111                           
 10112                           ;sm_ControlLearning_MC50.c: 126:     sm_send_event(&controlLearning_stateMachine, ev_NUL
      +                          L);
 10113  001A3E  0EB2               	movlw	low _controlLearning_stateMachine
 10114  001A40  6E12               	movwf	sm_send_event@psm^0,c
 10115  001A42  0E02               	movlw	high _controlLearning_stateMachine
 10116  001A44  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10117  001A46  0E00               	movlw	0
 10118  001A48  6E15               	movwf	(sm_send_event@event+1)^0,c
 10119  001A4A  0E00               	movlw	0
 10120  001A4C  6E14               	movwf	sm_send_event@event^0,c
 10121  001A4E  EC1C  F041         	call	_sm_send_event	;wreg free
 10122                           
 10123                           ;sm_ControlLearning_MC50.c: 131:     switch((sm_state_ControlGate_t) psm->current_state)
 10124  001A52  D280               	goto	l22146
 10125  001A54                     l21892:
 10126                           
 10127                           ; BSR set to: 0
 10128                           ;sm_ControlLearning_MC50.c: 134:         {;sm_ControlLearning_MC50.c: 135:             i
      +                          f(var_sys.FimCurso_CloseIsEnabled==YES)
 10129  001A54  0101               	movlb	1	; () banked
 10130  001A56  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
 10131  001A58  A4D8               	btfss	status,2,c
 10132  001A5A  D03A               	goto	l21910
 10133                           
 10134                           ; BSR set to: 1
 10135                           ;sm_ControlLearning_MC50.c: 136:             {;sm_ControlLearning_MC50.c: 137:          
      +                                 control_limit_switch = 1;
 10136  001A5C  0E01               	movlw	1
 10137  001A5E  0100               	movlb	0	; () banked
 10138  001A60  6F81               	movwf	_control_limit_switch& (0+255),b
 10139                           
 10140                           ; BSR set to: 0
 10141                           ;sm_ControlLearning_MC50.c: 138:                 sm_send_event(&controlLearning_stateMac
      +                          hine, ev_GateClosed);
 10142  001A62  0EB2               	movlw	low _controlLearning_stateMachine
 10143  001A64  6E12               	movwf	sm_send_event@psm^0,c
 10144  001A66  0E02               	movlw	high _controlLearning_stateMachine
 10145  001A68  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10146  001A6A  0E00               	movlw	0
 10147  001A6C  6E15               	movwf	(sm_send_event@event+1)^0,c
 10148  001A6E  0E0A               	movlw	10
 10149  001A70  6E14               	movwf	sm_send_event@event^0,c
 10150  001A72  EC1C  F041         	call	_sm_send_event	;wreg free
 10151                           
 10152                           ;sm_ControlLearning_MC50.c: 139:                 var_sys.StateMotor=InOpenFull;
 10153  001A76  0E01               	movlw	1
 10154  001A78  0101               	movlb	1	; () banked
 10155  001A7A  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10156                           
 10157                           ; BSR set to: 1
 10158                           ;sm_ControlLearning_MC50.c: 140:                 clearLearningValue();
 10159  001A7C  ECD9  F03D         	call	_clearLearningValue	;wreg free
 10160                           
 10161                           ; BSR set to: 0
 10162                           ;sm_ControlLearning_MC50.c: 141:                  if ((var_sys_NVM.decelarationSensivity
      +                           != 0) && (var_sys.programinAutomatic == 0))
 10163  001A80  51A7               	movf	(_var_sys_NVM+15)& (0+255),w,b	;volatile
 10164  001A82  B4D8               	btfsc	status,2,c
 10165  001A84  D016               	goto	l21908
 10166                           
 10167                           ; BSR set to: 0
 10168  001A86  0101               	movlb	1	; () banked
 10169  001A88  512A               	movf	(_var_sys+42)& (0+255),w,b	;volatile
 10170  001A8A  A4D8               	btfss	status,2,c
 10171  001A8C  D012               	goto	l21908
 10172  001A8E                     u26070:
 10173                           
 10174                           ; BSR set to: 1
 10175                           ;sm_ControlLearning_MC50.c: 142:                          {;sm_ControlLearning_MC50.c: 1
      +                          43:                 ts_system.TimeLearningDecelaration=(1000/50)*15;
 10176  001A8E  0E01               	movlw	1
 10177  001A90  6FD1               	movwf	(_ts_system+55)& (0+255),b	;volatile
 10178  001A92  0E2C               	movlw	44
 10179  001A94  6FD0               	movwf	(_ts_system+54)& (0+255),b	;volatile
 10180                           
 10181                           ;sm_ControlLearning_MC50.c: 144:                 ts_system.TimeWaitToGetCurrent=(1000/50
      +                          )*6;
 10182  001A96  0E00               	movlw	0
 10183  001A98  6FCF               	movwf	(_ts_system+53)& (0+255),b	;volatile
 10184  001A9A  0E78               	movlw	120
 10185  001A9C  6FCE               	movwf	(_ts_system+52)& (0+255),b	;volatile
 10186                           
 10187                           ;sm_ControlLearning_MC50.c: 145:                 ts_system.TimeWaitReleCapacitor = (1000
      +                          /50);
 10188  001A9E  0E00               	movlw	0
 10189  001AA0  6FDF               	movwf	(_ts_system+69)& (0+255),b	;volatile
 10190  001AA2  0E14               	movlw	20
 10191  001AA4  6FDE               	movwf	(_ts_system+68)& (0+255),b	;volatile
 10192                           
 10193                           ;sm_ControlLearning_MC50.c: 146:                 var_sys.LearningDecelaration=YES;
 10194  001AA6  0E01               	movlw	1
 10195  001AA8  6F47               	movwf	(_var_sys+71)& (0+255),b	;volatile
 10196                           
 10197                           ;sm_ControlLearning_MC50.c: 147:                 control_limit_switch = 0;
 10198  001AAA  0E00               	movlw	0
 10199  001AAC  0100               	movlb	0	; () banked
 10200  001AAE  6F81               	movwf	_control_limit_switch& (0+255),b
 10201                           
 10202                           ;sm_ControlLearning_MC50.c: 148:                  }
 10203  001AB0  0012               	return	
 10204  001AB2                     l21908:
 10205                           
 10206                           ;sm_ControlLearning_MC50.c: 150:                 {;sm_ControlLearning_MC50.c: 151:      
      +                                     var_sys.LearningDecelaration=NO;
 10207  001AB2  0E00               	movlw	0
 10208  001AB4  0101               	movlb	1	; () banked
 10209  001AB6  6F47               	movwf	(_var_sys+71)& (0+255),b	;volatile
 10210                           
 10211                           ;sm_ControlLearning_MC50.c: 152:                 ts_system.TimeWaitToGetCurrent=(1000/50
      +                          )*4;
 10212  001AB8  0E00               	movlw	0
 10213  001ABA  6FCF               	movwf	(_ts_system+53)& (0+255),b	;volatile
 10214  001ABC  0E50               	movlw	80
 10215  001ABE  6FCE               	movwf	(_ts_system+52)& (0+255),b	;volatile
 10216                           
 10217                           ;sm_ControlLearning_MC50.c: 153:                 ts_system.TimeWaitReleCapacitor = (1000
      +                          /50);
 10218  001AC0  0E00               	movlw	0
 10219  001AC2  6FDF               	movwf	(_ts_system+69)& (0+255),b	;volatile
 10220  001AC4  0E14               	movlw	20
 10221  001AC6  6FDE               	movwf	(_ts_system+68)& (0+255),b	;volatile
 10222                           
 10223                           ;sm_ControlLearning_MC50.c: 154:                 control_limit_switch = 0;
 10224  001AC8  0E00               	movlw	0
 10225  001ACA  0100               	movlb	0	; () banked
 10226  001ACC  6F81               	movwf	_control_limit_switch& (0+255),b
 10227  001ACE  0012               	return	
 10228  001AD0                     l21910:
 10229                           
 10230                           ; BSR set to: 1
 10231                           ;sm_ControlLearning_MC50.c: 159:             {;sm_ControlLearning_MC50.c: 160:          
      +                                 sm_send_event(&controlLearning_stateMachine, ev_GateOpened);
 10232  001AD0  0EB2               	movlw	low _controlLearning_stateMachine
 10233  001AD2  6E12               	movwf	sm_send_event@psm^0,c
 10234  001AD4  0E02               	movlw	high _controlLearning_stateMachine
 10235  001AD6  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10236  001AD8  0E00               	movlw	0
 10237  001ADA  6E15               	movwf	(sm_send_event@event+1)^0,c
 10238  001ADC  0E0B               	movlw	11
 10239  001ADE  6E14               	movwf	sm_send_event@event^0,c
 10240  001AE0  EC1C  F041         	call	_sm_send_event	;wreg free
 10241                           
 10242                           ;sm_ControlLearning_MC50.c: 161:                 var_sys.StateMotor = InClose;
 10243  001AE4  0E03               	movlw	3
 10244  001AE6  0101               	movlb	1	; () banked
 10245  001AE8  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10246                           
 10247                           ; BSR set to: 1
 10248                           ;sm_ControlLearning_MC50.c: 162:                 var_sys.LearningDecelaration= YES;
 10249  001AEA  0E01               	movlw	1
 10250  001AEC  6F47               	movwf	(_var_sys+71)& (0+255),b	;volatile
 10251                           
 10252                           ; BSR set to: 1
 10253                           ;sm_ControlLearning_MC50.c: 164:         };sm_ControlLearning_MC50.c: 165:         break
      +                          ;
 10254                           
 10255                           ;sm_ControlLearning_MC50.c: 163:             }
 10256  001AEE  0012               	return	
 10257  001AF0                     l21916:
 10258                           
 10259                           ; BSR set to: 0
 10260                           ;sm_ControlLearning_MC50.c: 167:         {;sm_ControlLearning_MC50.c: 168:             i
      +                          f(((var_sys.FimCurso_CloseIsEnabled==YES)||(control_limit_switch == 1)) || ((button_stru
      +                          ct.current == 0 ||typeOpenOrder == TypeFull) && var_sys.programinAutomatic == 1))
 10261  001AF0  0101               	movlb	1	; () banked
 10262  001AF2  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
 10263  001AF4  B4D8               	btfsc	status,2,c
 10264  001AF6  D00E               	goto	u26120
 10265                           
 10266                           ; BSR set to: 1
 10267  001AF8  0100               	movlb	0	; () banked
 10268  001AFA  0581               	decf	_control_limit_switch& (0+255),w,b
 10269  001AFC  B4D8               	btfsc	status,2,c
 10270  001AFE  D00A               	goto	u26120
 10271                           
 10272                           ; BSR set to: 0
 10273  001B00  504D               	movf	(_button_struct+1)^0,w,c	;volatile
 10274  001B02  B4D8               	btfsc	status,2,c
 10275  001B04  D003               	goto	u26110
 10276                           
 10277                           ; BSR set to: 0
 10278  001B06  043A               	decf	sm_execute_ControlLearning@typeOpenOrder^0,w,c
 10279  001B08  A4D8               	btfss	status,2,c
 10280  001B0A  D028               	goto	l21944
 10281  001B0C                     u26110:
 10282                           
 10283                           ; BSR set to: 0
 10284  001B0C  0101               	movlb	1	; () banked
 10285  001B0E  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
 10286  001B10  A4D8               	btfss	status,2,c
 10287  001B12  D024               	goto	l21944
 10288  001B14                     u26120:
 10289                           
 10290                           ;sm_ControlLearning_MC50.c: 169:             {;sm_ControlLearning_MC50.c: 171:          
      +                                 control_limit_switch = 1;
 10291  001B14  0E01               	movlw	1
 10292  001B16  0100               	movlb	0	; () banked
 10293  001B18  6F81               	movwf	_control_limit_switch& (0+255),b
 10294                           
 10295                           ;sm_ControlLearning_MC50.c: 172:                 var_sys.StateMotor=Stopped;
 10296  001B1A  0E00               	movlw	0
 10297  001B1C  0101               	movlb	1	; () banked
 10298  001B1E  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10299                           
 10300                           ; BSR set to: 1
 10301                           ;sm_ControlLearning_MC50.c: 173:                 if(ts_system.TimeWaitToNextState<=0)
 10302  001B20  BFBF               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 10303  001B22  D005               	goto	u26130
 10304  001B24  51BF               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 10305  001B26  E102               	bnz	u26131
 10306  001B28  05BE               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 10307  001B2A  B0D8               	btfsc	status,0,c
 10308  001B2C                     u26131:
 10309  001B2C  0012               	return	
 10310  001B2E                     u26130:
 10311                           
 10312                           ; BSR set to: 1
 10313                           ;sm_ControlLearning_MC50.c: 174:                 {;sm_ControlLearning_MC50.c: 175:      
      +                                         sm_send_event(&controlLearning_stateMachine, ev_GateClosed);
 10314  001B2E  0EB2               	movlw	low _controlLearning_stateMachine
 10315  001B30  6E12               	movwf	sm_send_event@psm^0,c
 10316  001B32  0E02               	movlw	high _controlLearning_stateMachine
 10317  001B34  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10318  001B36  0E00               	movlw	0
 10319  001B38  6E15               	movwf	(sm_send_event@event+1)^0,c
 10320  001B3A  0E0A               	movlw	10
 10321  001B3C  6E14               	movwf	sm_send_event@event^0,c
 10322  001B3E  EC1C  F041         	call	_sm_send_event	;wreg free
 10323                           
 10324                           ;sm_ControlLearning_MC50.c: 176:                     var_sys.StateMotor=InOpenFull;
 10325  001B42  0E01               	movlw	1
 10326  001B44  0101               	movlb	1	; () banked
 10327  001B46  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10328                           
 10329                           ; BSR set to: 1
 10330                           ;sm_ControlLearning_MC50.c: 177:                     clearLearningValue();
 10331  001B48  ECD9  F03D         	call	_clearLearningValue	;wreg free
 10332                           
 10333                           ; BSR set to: 0
 10334                           ;sm_ControlLearning_MC50.c: 178:                         if ((var_sys_NVM.decelarationSe
      +                          nsivity != 0) && (var_sys.programinAutomatic == 0))
 10335  001B4C  51A7               	movf	(_var_sys_NVM+15)& (0+255),w,b	;volatile
 10336  001B4E  B4D8               	btfsc	status,2,c
 10337  001B50  D7B0               	goto	l21908
 10338                           
 10339                           ; BSR set to: 0
 10340  001B52  0101               	movlb	1	; () banked
 10341  001B54  512A               	movf	(_var_sys+42)& (0+255),w,b	;volatile
 10342  001B56  B4D8               	btfsc	status,2,c
 10343  001B58  D79A               	goto	u26070
 10344  001B5A  D7AB               	goto	l21908
 10345  001B5C                     l21944:
 10346  001B5C  0101               	movlb	1	; () banked
 10347  001B5E  5100               	movf	_var_sys& (0+255),w,b	;volatile
 10348  001B60  A4D8               	btfss	status,2,c
 10349  001B62  D003               	goto	l21948
 10350  001B64                     u26160:
 10351                           
 10352                           ; BSR set to: 1
 10353                           ;sm_ControlLearning_MC50.c: 196:             {;sm_ControlLearning_MC50.c: 197:          
      +                                 generateErrorLearnig();
 10354  001B64  EC55  F040         	call	_generateErrorLearnig	;wreg free
 10355                           
 10356                           ;sm_ControlLearning_MC50.c: 198:             }
 10357  001B68  0012               	return	
 10358  001B6A                     l21948:
 10359                           
 10360                           ; BSR set to: 1
 10361                           ;sm_ControlLearning_MC50.c: 200:             {;sm_ControlLearning_MC50.c: 201:          
      +                                 ts_system.TimeWaitToNextState=(2*(1000/50));
 10362  001B6A  0E00               	movlw	0
 10363  001B6C  6FBF               	movwf	(_ts_system+37)& (0+255),b	;volatile
 10364  001B6E  0E28               	movlw	40
 10365  001B70  6FBE               	movwf	(_ts_system+36)& (0+255),b	;volatile
 10366  001B72  0012               	return	
 10367  001B74                     l21950:
 10368                           
 10369                           ; BSR set to: 0
 10370                           ;sm_ControlLearning_MC50.c: 206:         {;sm_ControlLearning_MC50.c: 207:             i
      +                          f((var_sys.FimCurso_OpenIsEnabled==YES) || (ts_system.TimeLearningDecelaration<=0)||(con
      +                          trol_limit_switch == 1))
 10371  001B74  0101               	movlb	1	; () banked
 10372  001B76  0504               	decf	(_var_sys+4)& (0+255),w,b	;volatile
 10373  001B78  A4D8               	btfss	status,2,c
 10374                           
 10375                           ; BSR set to: 1
 10376  001B7A  BFD1               	btfsc	(_ts_system+55)& (0+255),7,b	;volatile
 10377  001B7C  D009               	goto	u26190
 10378  001B7E  51D1               	movf	(_ts_system+55)& (0+255),w,b	;volatile
 10379  001B80  E103               	bnz	u26180
 10380  001B82  05D0               	decf	(_ts_system+54)& (0+255),w,b	;volatile
 10381  001B84  A0D8               	btfss	status,0,c
 10382  001B86  D004               	goto	u26190
 10383  001B88                     u26180:
 10384                           
 10385                           ; BSR set to: 1
 10386  001B88  0100               	movlb	0	; () banked
 10387  001B8A  0581               	decf	_control_limit_switch& (0+255),w,b
 10388  001B8C  A4D8               	btfss	status,2,c
 10389  001B8E  D02A               	goto	l21972
 10390  001B90                     u26190:
 10391                           
 10392                           ;sm_ControlLearning_MC50.c: 209:             {;sm_ControlLearning_MC50.c: 210:          
      +                                  control_limit_switch = 1;
 10393  001B90  0E01               	movlw	1
 10394  001B92  0100               	movlb	0	; () banked
 10395  001B94  6F81               	movwf	_control_limit_switch& (0+255),b
 10396                           
 10397                           ;sm_ControlLearning_MC50.c: 211:                 var_sys.StateMotor=Stopped;
 10398  001B96  0E00               	movlw	0
 10399  001B98  0101               	movlb	1	; () banked
 10400  001B9A  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10401                           
 10402                           ; BSR set to: 1
 10403                           ;sm_ControlLearning_MC50.c: 212:             if(ts_system.TimeWaitToNextState<=0)
 10404  001B9C  BFBF               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 10405  001B9E  D005               	goto	u26200
 10406  001BA0  51BF               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 10407  001BA2  E102               	bnz	u26201
 10408  001BA4  05BE               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 10409  001BA6  B0D8               	btfsc	status,0,c
 10410  001BA8                     u26201:
 10411  001BA8  0012               	return	
 10412  001BAA                     u26200:
 10413                           
 10414                           ; BSR set to: 1
 10415                           ;sm_ControlLearning_MC50.c: 213:             {;sm_ControlLearning_MC50.c: 215:          
      +                                 sm_send_event(&controlLearning_stateMachine, ev_GateOpened);
 10416  001BAA  0EB2               	movlw	low _controlLearning_stateMachine
 10417  001BAC  6E12               	movwf	sm_send_event@psm^0,c
 10418  001BAE  0E02               	movlw	high _controlLearning_stateMachine
 10419  001BB0  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10420  001BB2  0E00               	movlw	0
 10421  001BB4  6E15               	movwf	(sm_send_event@event+1)^0,c
 10422  001BB6  0E0B               	movlw	11
 10423  001BB8  6E14               	movwf	sm_send_event@event^0,c
 10424  001BBA  EC1C  F041         	call	_sm_send_event	;wreg free
 10425                           
 10426                           ;sm_ControlLearning_MC50.c: 216:                 var_sys.StateMotor=InClose;
 10427  001BBE  0E03               	movlw	3
 10428  001BC0  0101               	movlb	1	; () banked
 10429  001BC2  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10430                           
 10431                           ; BSR set to: 1
 10432                           ;sm_ControlLearning_MC50.c: 217:                 ts_system.TimeLearningDecelaration=(100
      +                          0/50)*5;
 10433  001BC4  0E00               	movlw	0
 10434  001BC6  6FD1               	movwf	(_ts_system+55)& (0+255),b	;volatile
 10435  001BC8  0E64               	movlw	100
 10436  001BCA  6FD0               	movwf	(_ts_system+54)& (0+255),b	;volatile
 10437                           
 10438                           ; BSR set to: 1
 10439                           ;sm_ControlLearning_MC50.c: 218:                 ts_system.TimeWaitToGetCurrent=(1000/50
      +                          )*5;
 10440  001BCC  0E00               	movlw	0
 10441  001BCE  6FCF               	movwf	(_ts_system+53)& (0+255),b	;volatile
 10442  001BD0  0E64               	movlw	100
 10443  001BD2                     L67:
 10444  001BD2  6FCE               	movwf	(_ts_system+52)& (0+255),b	;volatile
 10445                           
 10446                           ; BSR set to: 1
 10447                           ;sm_ControlLearning_MC50.c: 219:                 ts_system.TimeWaitReleCapacitor = (1000
      +                          /50);
 10448  001BD4  0E00               	movlw	0
 10449  001BD6  6FDF               	movwf	(_ts_system+69)& (0+255),b	;volatile
 10450  001BD8  0E14               	movlw	20
 10451  001BDA  6FDE               	movwf	(_ts_system+68)& (0+255),b	;volatile
 10452                           
 10453                           ; BSR set to: 1
 10454                           ;sm_ControlLearning_MC50.c: 220:                 control_limit_switch = 0;
 10455  001BDC  0E00               	movlw	0
 10456  001BDE  0100               	movlb	0	; () banked
 10457  001BE0  6F81               	movwf	_control_limit_switch& (0+255),b
 10458  001BE2  0012               	return	
 10459  001BE4                     l21972:
 10460                           
 10461                           ; BSR set to: 0
 10462  001BE4  0101               	movlb	1	; () banked
 10463  001BE6  5100               	movf	_var_sys& (0+255),w,b	;volatile
 10464  001BE8  B4D8               	btfsc	status,2,c
 10465  001BEA  D7BC               	goto	u26160
 10466                           
 10467                           ; BSR set to: 1
 10468                           ;sm_ControlLearning_MC50.c: 230:             {;sm_ControlLearning_MC50.c: 231:          
      +                                 ts_system.TimeWaitToNextState=(2*(1000/50));
 10469  001BEC  0E00               	movlw	0
 10470  001BEE  6FBF               	movwf	(_ts_system+37)& (0+255),b	;volatile
 10471  001BF0  0E28               	movlw	40
 10472  001BF2  6FBE               	movwf	(_ts_system+36)& (0+255),b	;volatile
 10473                           
 10474                           ; BSR set to: 1
 10475                           ;sm_ControlLearning_MC50.c: 232:                 if (ts_system.TimeWaitReleCapacitor <=0
      +                          )
 10476  001BF4  BFDF               	btfsc	(_ts_system+69)& (0+255),7,b	;volatile
 10477  001BF6  D005               	goto	u26220
 10478  001BF8  51DF               	movf	(_ts_system+69)& (0+255),w,b	;volatile
 10479  001BFA  E102               	bnz	u26221
 10480  001BFC  05DE               	decf	(_ts_system+68)& (0+255),w,b	;volatile
 10481  001BFE  B0D8               	btfsc	status,0,c
 10482  001C00                     u26221:
 10483  001C00  0012               	return	
 10484  001C02                     u26220:
 10485                           
 10486                           ; BSR set to: 1
 10487                           ;sm_ControlLearning_MC50.c: 233:                 {;sm_ControlLearning_MC50.c: 234:      
      +                                     if(ts_system.TimeWaitToGetCurrent>0)
 10488  001C02  BFCF               	btfsc	(_ts_system+53)& (0+255),7,b	;volatile
 10489  001C04  0012               	return	
 10490  001C06  51CF               	movf	(_ts_system+53)& (0+255),w,b	;volatile
 10491  001C08  E103               	bnz	u26230
 10492  001C0A  05CE               	decf	(_ts_system+52)& (0+255),w,b	;volatile
 10493  001C0C  A0D8               	btfss	status,0,c
 10494  001C0E  0012               	return	
 10495  001C10                     u26230:
 10496                           
 10497                           ; BSR set to: 1
 10498                           ;sm_ControlLearning_MC50.c: 235:                 {;sm_ControlLearning_MC50.c: 236:      
      +                                         learn_st.openHistCurrent=calculateMean(learn_st.openHistCurrent,var_sys.A
      +                          ctualHistCurrent);
 10499  001C10  C06E  F010         	movff	_learn_st+14,calculateMean@meanValue	;volatile
 10500  001C14  C06F  F011         	movff	_learn_st+15,calculateMean@meanValue+1	;volatile
 10501  001C18  6A12               	clrf	(calculateMean@meanValue+2)^0,c
 10502  001C1A  6A13               	clrf	(calculateMean@meanValue+3)^0,c
 10503  001C1C  C130  F014         	movff	_var_sys+48,calculateMean@newValue	;volatile
 10504  001C20  C131  F015         	movff	_var_sys+49,calculateMean@newValue+1	;volatile
 10505  001C24  C132  F016         	movff	_var_sys+50,calculateMean@newValue+2	;volatile
 10506  001C28  C133  F017         	movff	_var_sys+51,calculateMean@newValue+3	;volatile
 10507  001C2C  ECBC  F040         	call	_calculateMean	;wreg free
 10508  001C30  C010  F06E         	movff	?_calculateMean,_learn_st+14	;volatile
 10509  001C34  C011  F06F         	movff	?_calculateMean+1,_learn_st+15	;volatile
 10510  001C38  0012               	return	
 10511  001C3A                     l21984:
 10512                           
 10513                           ; BSR set to: 0
 10514                           ;sm_ControlLearning_MC50.c: 243:         {;sm_ControlLearning_MC50.c: 244:             i
      +                          f((var_sys.FimCurso_CloseIsEnabled==YES)||(control_limit_switch == 1))
 10515  001C3A  0101               	movlb	1	; () banked
 10516  001C3C  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
 10517  001C3E  B4D8               	btfsc	status,2,c
 10518  001C40  D004               	goto	u26250
 10519                           
 10520                           ; BSR set to: 1
 10521  001C42  0100               	movlb	0	; () banked
 10522  001C44  0581               	decf	_control_limit_switch& (0+255),w,b
 10523  001C46  A4D8               	btfss	status,2,c
 10524  001C48  D020               	goto	l22004
 10525  001C4A                     u26250:
 10526                           
 10527                           ;sm_ControlLearning_MC50.c: 245:             {;sm_ControlLearning_MC50.c: 246:          
      +                                 control_limit_switch = 1;
 10528  001C4A  0E01               	movlw	1
 10529  001C4C  0100               	movlb	0	; () banked
 10530  001C4E  6F81               	movwf	_control_limit_switch& (0+255),b
 10531                           
 10532                           ;sm_ControlLearning_MC50.c: 247:                 var_sys.StateMotor=Stopped;
 10533  001C50  0E00               	movlw	0
 10534  001C52  0101               	movlb	1	; () banked
 10535  001C54  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10536                           
 10537                           ; BSR set to: 1
 10538                           ;sm_ControlLearning_MC50.c: 248:                 if(ts_system.TimeWaitToNextState<=0)
 10539  001C56  BFBF               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 10540  001C58  D005               	goto	u26260
 10541  001C5A  51BF               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 10542  001C5C  E102               	bnz	u26261
 10543  001C5E  05BE               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 10544  001C60  B0D8               	btfsc	status,0,c
 10545  001C62                     u26261:
 10546  001C62  0012               	return	
 10547  001C64                     u26260:
 10548                           
 10549                           ; BSR set to: 1
 10550                           ;sm_ControlLearning_MC50.c: 249:                 {;sm_ControlLearning_MC50.c: 250:      
      +                                         sm_send_event(&controlLearning_stateMachine, ev_GateClosed);
 10551  001C64  0EB2               	movlw	low _controlLearning_stateMachine
 10552  001C66  6E12               	movwf	sm_send_event@psm^0,c
 10553  001C68  0E02               	movlw	high _controlLearning_stateMachine
 10554  001C6A  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10555  001C6C  0E00               	movlw	0
 10556  001C6E  6E15               	movwf	(sm_send_event@event+1)^0,c
 10557  001C70  0E0A               	movlw	10
 10558  001C72  6E14               	movwf	sm_send_event@event^0,c
 10559  001C74  EC1C  F041         	call	_sm_send_event	;wreg free
 10560                           
 10561                           ;sm_ControlLearning_MC50.c: 251:                     var_sys.StateMotor=InOpenFull;
 10562  001C78  0E01               	movlw	1
 10563  001C7A  0101               	movlb	1	; () banked
 10564  001C7C  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10565                           
 10566                           ; BSR set to: 1
 10567                           ;sm_ControlLearning_MC50.c: 252:                     var_sys.LearningDecelaration=NO;
 10568  001C7E  0E00               	movlw	0
 10569  001C80  6F47               	movwf	(_var_sys+71)& (0+255),b	;volatile
 10570                           
 10571                           ; BSR set to: 1
 10572                           ;sm_ControlLearning_MC50.c: 253:                     ts_system.TimeWaitToGetCurrent=(100
      +                          0/50)*3;
 10573  001C82  0E00               	movlw	0
 10574  001C84  6FCF               	movwf	(_ts_system+53)& (0+255),b	;volatile
 10575  001C86  0E3C               	movlw	60
 10576  001C88  D7A4               	goto	L67
 10577  001C8A                     l22004:
 10578                           
 10579                           ; BSR set to: 0
 10580  001C8A  0101               	movlb	1	; () banked
 10581  001C8C  5100               	movf	_var_sys& (0+255),w,b	;volatile
 10582  001C8E  B4D8               	btfsc	status,2,c
 10583  001C90  D769               	goto	u26160
 10584                           
 10585                           ; BSR set to: 1
 10586                           ;sm_ControlLearning_MC50.c: 265:             {;sm_ControlLearning_MC50.c: 266:          
      +                                 ts_system.TimeWaitToNextState=(2*(1000/50));
 10587  001C92  0E00               	movlw	0
 10588  001C94  6FBF               	movwf	(_ts_system+37)& (0+255),b	;volatile
 10589  001C96  0E28               	movlw	40
 10590  001C98  6FBE               	movwf	(_ts_system+36)& (0+255),b	;volatile
 10591                           
 10592                           ; BSR set to: 1
 10593                           ;sm_ControlLearning_MC50.c: 267:                 if (ts_system.TimeWaitReleCapacitor <=0
      +                          )
 10594  001C9A  BFDF               	btfsc	(_ts_system+69)& (0+255),7,b	;volatile
 10595  001C9C  D005               	goto	u26280
 10596  001C9E  51DF               	movf	(_ts_system+69)& (0+255),w,b	;volatile
 10597  001CA0  E102               	bnz	u26281
 10598  001CA2  05DE               	decf	(_ts_system+68)& (0+255),w,b	;volatile
 10599  001CA4  B0D8               	btfsc	status,0,c
 10600  001CA6                     u26281:
 10601  001CA6  0012               	return	
 10602  001CA8                     u26280:
 10603                           
 10604                           ; BSR set to: 1
 10605                           ;sm_ControlLearning_MC50.c: 268:                 {;sm_ControlLearning_MC50.c: 269:      
      +                                     if(ts_system.TimeWaitToGetCurrent>0)
 10606  001CA8  BFCF               	btfsc	(_ts_system+53)& (0+255),7,b	;volatile
 10607  001CAA  0012               	return	
 10608  001CAC  51CF               	movf	(_ts_system+53)& (0+255),w,b	;volatile
 10609  001CAE  E103               	bnz	u26290
 10610  001CB0  05CE               	decf	(_ts_system+52)& (0+255),w,b	;volatile
 10611  001CB2  A0D8               	btfss	status,0,c
 10612  001CB4  0012               	return	
 10613  001CB6                     u26290:
 10614                           
 10615                           ; BSR set to: 1
 10616                           ;sm_ControlLearning_MC50.c: 270:                 {;sm_ControlLearning_MC50.c: 271:      
      +                                         learn_st.closeHistCurrent=calculateMean(learn_st.closeHistCurrent,var_sys
      +                          .ActualHistCurrent);
 10617  001CB6  C070  F010         	movff	_learn_st+16,calculateMean@meanValue	;volatile
 10618  001CBA  C071  F011         	movff	_learn_st+17,calculateMean@meanValue+1	;volatile
 10619  001CBE  6A12               	clrf	(calculateMean@meanValue+2)^0,c
 10620  001CC0  6A13               	clrf	(calculateMean@meanValue+3)^0,c
 10621  001CC2  C130  F014         	movff	_var_sys+48,calculateMean@newValue	;volatile
 10622  001CC6  C131  F015         	movff	_var_sys+49,calculateMean@newValue+1	;volatile
 10623  001CCA  C132  F016         	movff	_var_sys+50,calculateMean@newValue+2	;volatile
 10624  001CCE  C133  F017         	movff	_var_sys+51,calculateMean@newValue+3	;volatile
 10625  001CD2  ECBC  F040         	call	_calculateMean	;wreg free
 10626  001CD6  C010  F070         	movff	?_calculateMean,_learn_st+16	;volatile
 10627  001CDA  C011  F071         	movff	?_calculateMean+1,_learn_st+17	;volatile
 10628  001CDE  0012               	return	
 10629  001CE0                     l22016:
 10630                           
 10631                           ; BSR set to: 0
 10632                           ;sm_ControlLearning_MC50.c: 278:         {;sm_ControlLearning_MC50.c: 279:             i
      +                          f(((var_sys.FimCurso_OpenIsEnabled==YES)||control_limit_switch == 1)||(var_sys.LearningD
      +                          ecelaration==YES && (button_struct.current == 0 ||typeOpenOrder == TypeFull) && var_sys.
      +                          programinAutomatic == 1))
 10633  001CE0  0101               	movlb	1	; () banked
 10634  001CE2  0504               	decf	(_var_sys+4)& (0+255),w,b	;volatile
 10635  001CE4  B4D8               	btfsc	status,2,c
 10636  001CE6  D011               	goto	u26350
 10637                           
 10638                           ; BSR set to: 1
 10639  001CE8  0100               	movlb	0	; () banked
 10640  001CEA  0581               	decf	_control_limit_switch& (0+255),w,b
 10641  001CEC  B4D8               	btfsc	status,2,c
 10642  001CEE  D00D               	goto	u26350
 10643                           
 10644                           ; BSR set to: 0
 10645  001CF0  0101               	movlb	1	; () banked
 10646  001CF2  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 10647  001CF4  A4D8               	btfss	status,2,c
 10648  001CF6  D02C               	goto	l22042
 10649                           
 10650                           ; BSR set to: 1
 10651  001CF8  504D               	movf	(_button_struct+1)^0,w,c	;volatile
 10652  001CFA  B4D8               	btfsc	status,2,c
 10653  001CFC  D003               	goto	u26340
 10654                           
 10655                           ; BSR set to: 1
 10656  001CFE  043A               	decf	sm_execute_ControlLearning@typeOpenOrder^0,w,c
 10657  001D00  A4D8               	btfss	status,2,c
 10658  001D02  D026               	goto	l22042
 10659  001D04                     u26340:
 10660                           
 10661                           ; BSR set to: 1
 10662  001D04  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
 10663  001D06  A4D8               	btfss	status,2,c
 10664  001D08  D023               	goto	l22042
 10665  001D0A                     u26350:
 10666                           
 10667                           ;sm_ControlLearning_MC50.c: 280:             {;sm_ControlLearning_MC50.c: 282:          
      +                                 var_sys.Counter_Learning = 0;
 10668  001D0A  0E00               	movlw	0
 10669  001D0C  0101               	movlb	1	; () banked
 10670  001D0E  6F17               	movwf	(_var_sys+23)& (0+255),b	;volatile
 10671                           
 10672                           ;sm_ControlLearning_MC50.c: 283:                 var_sys.LearningDecelaration = NO;
 10673  001D10  0E00               	movlw	0
 10674  001D12  6F47               	movwf	(_var_sys+71)& (0+255),b	;volatile
 10675                           
 10676                           ;sm_ControlLearning_MC50.c: 284:                 control_limit_switch = 1;
 10677  001D14  0E01               	movlw	1
 10678  001D16  0100               	movlb	0	; () banked
 10679  001D18  6F81               	movwf	_control_limit_switch& (0+255),b
 10680                           
 10681                           ;sm_ControlLearning_MC50.c: 285:                 var_sys.StateMotor=Stopped;
 10682  001D1A  0E00               	movlw	0
 10683  001D1C  0101               	movlb	1	; () banked
 10684  001D1E  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10685                           
 10686                           ; BSR set to: 1
 10687                           ;sm_ControlLearning_MC50.c: 286:                 if(ts_system.TimeWaitToNextState<=0)
 10688  001D20  BFBF               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 10689  001D22  D005               	goto	u26360
 10690  001D24  51BF               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 10691  001D26  E102               	bnz	u26361
 10692  001D28  05BE               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 10693  001D2A  B0D8               	btfsc	status,0,c
 10694  001D2C                     u26361:
 10695  001D2C  0012               	return	
 10696  001D2E                     u26360:
 10697                           
 10698                           ; BSR set to: 1
 10699                           ;sm_ControlLearning_MC50.c: 287:                 {;sm_ControlLearning_MC50.c: 288:      
      +                                         sm_send_event(&controlLearning_stateMachine, ev_GateOpened);
 10700  001D2E  0EB2               	movlw	low _controlLearning_stateMachine
 10701  001D30  6E12               	movwf	sm_send_event@psm^0,c
 10702  001D32  0E02               	movlw	high _controlLearning_stateMachine
 10703  001D34  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10704  001D36  0E00               	movlw	0
 10705  001D38  6E15               	movwf	(sm_send_event@event+1)^0,c
 10706  001D3A  0E0B               	movlw	11
 10707  001D3C  6E14               	movwf	sm_send_event@event^0,c
 10708  001D3E  EC1C  F041         	call	_sm_send_event	;wreg free
 10709                           
 10710                           ;sm_ControlLearning_MC50.c: 289:                     var_sys.StateMotor=InClose;
 10711  001D42  0E03               	movlw	3
 10712  001D44  0101               	movlb	1	; () banked
 10713  001D46  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10714                           
 10715                           ; BSR set to: 1
 10716                           ;sm_ControlLearning_MC50.c: 290:                     ts_system.TimeWaitToGetCurrent=(100
      +                          0/50)*4;
 10717  001D48  0E00               	movlw	0
 10718  001D4A  6FCF               	movwf	(_ts_system+53)& (0+255),b	;volatile
 10719  001D4C  0E50               	movlw	80
 10720  001D4E  D741               	goto	L67
 10721  001D50                     l22042:
 10722                           
 10723                           ; BSR set to: 1
 10724  001D50  5100               	movf	_var_sys& (0+255),w,b	;volatile
 10725  001D52  B4D8               	btfsc	status,2,c
 10726  001D54  D707               	goto	u26160
 10727                           
 10728                           ; BSR set to: 1
 10729  001D56  504D               	movf	(_button_struct+1)^0,w,c	;volatile
 10730  001D58  B4D8               	btfsc	status,2,c
 10731  001D5A  D003               	goto	u26390
 10732                           
 10733                           ; BSR set to: 1
 10734  001D5C  043A               	decf	sm_execute_ControlLearning@typeOpenOrder^0,w,c
 10735  001D5E  A4D8               	btfss	status,2,c
 10736  001D60  D00F               	goto	l22056
 10737  001D62                     u26390:
 10738                           
 10739                           ; BSR set to: 1
 10740  001D62  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
 10741  001D64  A4D8               	btfss	status,2,c
 10742  001D66  D00C               	goto	l22056
 10743                           
 10744                           ; BSR set to: 1
 10745  001D68  5147               	movf	(_var_sys+71)& (0+255),w,b	;volatile
 10746  001D6A  A4D8               	btfss	status,2,c
 10747  001D6C  D009               	goto	l22056
 10748  001D6E                     u26410:
 10749                           
 10750                           ; BSR set to: 1
 10751                           ;sm_ControlLearning_MC50.c: 303:                 var_sys.LearningDecelaration=YES;
 10752  001D6E  0E01               	movlw	1
 10753  001D70  6F47               	movwf	(_var_sys+71)& (0+255),b	;volatile
 10754                           
 10755                           ;sm_ControlLearning_MC50.c: 306:                 button_struct.processed = 1;
 10756  001D72  0E01               	movlw	1
 10757  001D74  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
 10758                           
 10759                           ;sm_ControlLearning_MC50.c: 307:                 ts_system.TimeWaitToGetCurrent=(1000/50
      +                          )*4;
 10760  001D76  0E00               	movlw	0
 10761  001D78  6FCF               	movwf	(_ts_system+53)& (0+255),b	;volatile
 10762  001D7A  0E50               	movlw	80
 10763  001D7C  6FCE               	movwf	(_ts_system+52)& (0+255),b	;volatile
 10764                           
 10765                           ;sm_ControlLearning_MC50.c: 309:             }
 10766  001D7E  0012               	return	
 10767  001D80                     l22056:
 10768                           
 10769                           ; BSR set to: 1
 10770  001D80  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 10771  001D82  A4D8               	btfss	status,2,c
 10772  001D84  D00C               	goto	l22064
 10773                           
 10774                           ; BSR set to: 1
 10775                           ;sm_ControlLearning_MC50.c: 313:                 ts_system.TimeWaitToNextState=(2*(1000/
      +                          50));
 10776  001D86  0E00               	movlw	0
 10777  001D88  6FBF               	movwf	(_ts_system+37)& (0+255),b	;volatile
 10778  001D8A  0E28               	movlw	40
 10779  001D8C  6FBE               	movwf	(_ts_system+36)& (0+255),b	;volatile
 10780                           
 10781                           ; BSR set to: 1
 10782                           ;sm_ControlLearning_MC50.c: 315:                 if(ts_system.TimeWaitToGetCurrent>0)
 10783  001D8E  BFCF               	btfsc	(_ts_system+53)& (0+255),7,b	;volatile
 10784  001D90  0012               	return	
 10785  001D92  51CF               	movf	(_ts_system+53)& (0+255),w,b	;volatile
 10786  001D94  E103               	bnz	u26430
 10787  001D96  05CE               	decf	(_ts_system+52)& (0+255),w,b	;volatile
 10788  001D98  A0D8               	btfss	status,0,c
 10789  001D9A  0012               	return	
 10790  001D9C                     u26430:
 10791  001D9C  D739               	goto	u26230
 10792  001D9E                     l22064:
 10793                           
 10794                           ; BSR set to: 1
 10795                           ;sm_ControlLearning_MC50.c: 322:             {;sm_ControlLearning_MC50.c: 323:          
      +                                 var_sys.Counter_Learning = 1;
 10796  001D9E  0E01               	movlw	1
 10797  001DA0  6F17               	movwf	(_var_sys+23)& (0+255),b	;volatile
 10798                           
 10799                           ;sm_ControlLearning_MC50.c: 324:                 ts_system.TimeWaitToNextState=(2*(1000/
      +                          50));
 10800  001DA2  0E00               	movlw	0
 10801  001DA4  6FBF               	movwf	(_ts_system+37)& (0+255),b	;volatile
 10802  001DA6  0E28               	movlw	40
 10803  001DA8  6FBE               	movwf	(_ts_system+36)& (0+255),b	;volatile
 10804                           
 10805                           ; BSR set to: 1
 10806                           ;sm_ControlLearning_MC50.c: 326:                 if (ts_system.TimeWaitReleCapacitor <=0
      +                          )
 10807  001DAA  BFDF               	btfsc	(_ts_system+69)& (0+255),7,b	;volatile
 10808  001DAC  D005               	goto	u26440
 10809  001DAE  51DF               	movf	(_ts_system+69)& (0+255),w,b	;volatile
 10810  001DB0  E102               	bnz	u26441
 10811  001DB2  05DE               	decf	(_ts_system+68)& (0+255),w,b	;volatile
 10812  001DB4  B0D8               	btfsc	status,0,c
 10813  001DB6                     u26441:
 10814  001DB6  0012               	return	
 10815  001DB8                     u26440:
 10816                           
 10817                           ; BSR set to: 1
 10818                           ;sm_ControlLearning_MC50.c: 327:                 {;sm_ControlLearning_MC50.c: 328:      
      +                                     if(ts_system.TimeWaitToGetCurrent>0)
 10819  001DB8  BFCF               	btfsc	(_ts_system+53)& (0+255),7,b	;volatile
 10820  001DBA  0012               	return	
 10821  001DBC  51CF               	movf	(_ts_system+53)& (0+255),w,b	;volatile
 10822  001DBE  E103               	bnz	u26450
 10823  001DC0  05CE               	decf	(_ts_system+52)& (0+255),w,b	;volatile
 10824  001DC2  A0D8               	btfss	status,0,c
 10825  001DC4  0012               	return	
 10826  001DC6                     u26450:
 10827                           
 10828                           ; BSR set to: 1
 10829                           ;sm_ControlLearning_MC50.c: 329:                 {;sm_ControlLearning_MC50.c: 330:      
      +                                         learn_st.openCurrent=calculateMean(learn_st.openCurrent,var_sys.ActualCur
      +                          rent);
 10830  001DC6  C06A  F010         	movff	_learn_st+10,calculateMean@meanValue	;volatile
 10831  001DCA  C06B  F011         	movff	_learn_st+11,calculateMean@meanValue+1	;volatile
 10832  001DCE  6A12               	clrf	(calculateMean@meanValue+2)^0,c
 10833  001DD0  6A13               	clrf	(calculateMean@meanValue+3)^0,c
 10834  001DD2  C12E  F014         	movff	_var_sys+46,calculateMean@newValue	;volatile
 10835  001DD6  C12F  F015         	movff	_var_sys+47,calculateMean@newValue+1	;volatile
 10836  001DDA  6A16               	clrf	(calculateMean@newValue+2)^0,c
 10837  001DDC  6A17               	clrf	(calculateMean@newValue+3)^0,c
 10838  001DDE  ECBC  F040         	call	_calculateMean	;wreg free
 10839  001DE2  C010  F06A         	movff	?_calculateMean,_learn_st+10	;volatile
 10840  001DE6  C011  F06B         	movff	?_calculateMean+1,_learn_st+11	;volatile
 10841  001DEA  0012               	return	
 10842  001DEC                     l22072:
 10843                           
 10844                           ; BSR set to: 0
 10845                           ;sm_ControlLearning_MC50.c: 337:         {;sm_ControlLearning_MC50.c: 338:             i
      +                          f((var_sys.FimCurso_CloseIsEnabled==YES)||( var_sys.LearningDecelaration==YES && (button
      +                          _struct.current == 0 || typeOpenOrder == TypeFull) && var_sys.programinAutomatic == 1))
 10846  001DEC  0101               	movlb	1	; () banked
 10847  001DEE  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
 10848  001DF0  B4D8               	btfsc	status,2,c
 10849  001DF2  D00C               	goto	u26500
 10850                           
 10851                           ; BSR set to: 1
 10852  001DF4  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 10853  001DF6  A4D8               	btfss	status,2,c
 10854  001DF8  D06F               	goto	l22118
 10855                           
 10856                           ; BSR set to: 1
 10857  001DFA  504D               	movf	(_button_struct+1)^0,w,c	;volatile
 10858  001DFC  B4D8               	btfsc	status,2,c
 10859  001DFE  D003               	goto	u26490
 10860                           
 10861                           ; BSR set to: 1
 10862  001E00  043A               	decf	sm_execute_ControlLearning@typeOpenOrder^0,w,c
 10863  001E02  A4D8               	btfss	status,2,c
 10864  001E04  D069               	goto	l22118
 10865  001E06                     u26490:
 10866                           
 10867                           ; BSR set to: 1
 10868  001E06  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
 10869  001E08  A4D8               	btfss	status,2,c
 10870  001E0A  D066               	goto	l22118
 10871  001E0C                     u26500:
 10872                           
 10873                           ; BSR set to: 1
 10874                           ;sm_ControlLearning_MC50.c: 339:             {;sm_ControlLearning_MC50.c: 342:          
      +                                 var_sys.Statedoorcontrol = st_Closed;
 10875  001E0C  0E01               	movlw	1
 10876  001E0E  6F1C               	movwf	(_var_sys+28)& (0+255),b	;volatile
 10877                           
 10878                           ;sm_ControlLearning_MC50.c: 343:                 var_sys.Counter_Learning = 0;
 10879  001E10  0E00               	movlw	0
 10880  001E12  6F17               	movwf	(_var_sys+23)& (0+255),b	;volatile
 10881                           
 10882                           ;sm_ControlLearning_MC50.c: 344:                 var_sys.LearningDecelaration = NO;
 10883  001E14  0E00               	movlw	0
 10884  001E16  6F47               	movwf	(_var_sys+71)& (0+255),b	;volatile
 10885                           
 10886                           ;sm_ControlLearning_MC50.c: 345:                 var_sys.StateMotor=Stopped;
 10887  001E18  0E00               	movlw	0
 10888  001E1A  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10889                           
 10890                           ; BSR set to: 1
 10891                           ;sm_ControlLearning_MC50.c: 346:                 sm_send_event(&controlLearning_stateMac
      +                          hine, ev_GateClosed);
 10892  001E1C  0EB2               	movlw	low _controlLearning_stateMachine
 10893  001E1E  6E12               	movwf	sm_send_event@psm^0,c
 10894  001E20  0E02               	movlw	high _controlLearning_stateMachine
 10895  001E22  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10896  001E24  0E00               	movlw	0
 10897  001E26  6E15               	movwf	(sm_send_event@event+1)^0,c
 10898  001E28  0E0A               	movlw	10
 10899  001E2A  6E14               	movwf	sm_send_event@event^0,c
 10900  001E2C  EC1C  F041         	call	_sm_send_event	;wreg free
 10901                           
 10902                           ;sm_ControlLearning_MC50.c: 347:                 sm_send_event(&controlGate_stateMachine
      +                          , ev_LearningComplete);
 10903  001E30  0EE2               	movlw	low _controlGate_stateMachine
 10904  001E32  6E12               	movwf	sm_send_event@psm^0,c
 10905  001E34  0E01               	movlw	high _controlGate_stateMachine
 10906  001E36  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10907  001E38  0E00               	movlw	0
 10908  001E3A  6E15               	movwf	(sm_send_event@event+1)^0,c
 10909  001E3C  0E13               	movlw	19
 10910  001E3E  6E14               	movwf	sm_send_event@event^0,c
 10911  001E40  EC1C  F041         	call	_sm_send_event	;wreg free
 10912                           
 10913                           ;sm_ControlLearning_MC50.c: 348:                 var_sys_NVM.learningTimeToClose=learn_s
      +                          t.timeClose;
 10914  001E44  C060  F0D0         	movff	_learn_st,_var_sys_NVM+56	;volatile
 10915  001E48  C061  F0D1         	movff	_learn_st+1,_var_sys_NVM+57	;volatile
 10916  001E4C  C062  F0D2         	movff	_learn_st+2,_var_sys_NVM+58	;volatile
 10917  001E50  C063  F0D3         	movff	_learn_st+3,_var_sys_NVM+59	;volatile
 10918                           
 10919                           ;sm_ControlLearning_MC50.c: 349:                 var_sys_NVM.learningTimeToOpen=learn_st
      +                          .timeOpen;
 10920  001E54  C064  F0CC         	movff	_learn_st+4,_var_sys_NVM+52	;volatile
 10921  001E58  C065  F0CD         	movff	_learn_st+5,_var_sys_NVM+53	;volatile
 10922  001E5C  C066  F0CE         	movff	_learn_st+6,_var_sys_NVM+54	;volatile
 10923  001E60  C067  F0CF         	movff	_learn_st+7,_var_sys_NVM+55	;volatile
 10924                           
 10925                           ;sm_ControlLearning_MC50.c: 350:                 if (var_sys.programinAutomatic == 1){
 10926  001E64  0101               	movlb	1	; () banked
 10927  001E66  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
 10928  001E68  A4D8               	btfss	status,2,c
 10929  001E6A  D005               	goto	l22096
 10930                           
 10931                           ; BSR set to: 1
 10932                           ;sm_ControlLearning_MC50.c: 351:                     var_sys_NVM.decelarationClose=learn
      +                          _st.timeDecelerationClose ;
 10933  001E6C  C068  F099         	movff	_learn_st+8,_var_sys_NVM+1	;volatile
 10934                           
 10935                           ;sm_ControlLearning_MC50.c: 352:                     var_sys_NVM.decelarationOpen=learn_
      +                          st.timeDecelerationOpen ;
 10936  001E70  C069  F098         	movff	_learn_st+9,_var_sys_NVM	;volatile
 10937                           
 10938                           ;sm_ControlLearning_MC50.c: 353:                                 }
 10939  001E74  D005               	goto	l22098
 10940  001E76                     l22096:
 10941                           
 10942                           ; BSR set to: 1
 10943                           ;sm_ControlLearning_MC50.c: 355:                     var_sys_NVM.decelarationClose=4 ;
 10944  001E76  0E04               	movlw	4
 10945  001E78  0100               	movlb	0	; () banked
 10946  001E7A  6F99               	movwf	(_var_sys_NVM+1)& (0+255),b	;volatile
 10947                           
 10948                           ;sm_ControlLearning_MC50.c: 356:                     var_sys_NVM.decelarationOpen=4 ;
 10949  001E7C  0E04               	movlw	4
 10950  001E7E  6F98               	movwf	_var_sys_NVM& (0+255),b	;volatile
 10951  001E80                     l22098:
 10952                           
 10953                           ;sm_ControlLearning_MC50.c: 358:                 var_sys_NVM.learningCurrentNormalClose=
      +                          learn_st.closeCurrent;
 10954  001E80  C06C  F0C8         	movff	_learn_st+12,_var_sys_NVM+48	;volatile
 10955  001E84  C06D  F0C9         	movff	_learn_st+13,_var_sys_NVM+49	;volatile
 10956                           
 10957                           ;sm_ControlLearning_MC50.c: 359:                 var_sys_NVM.learningCurrentNormalOpen=l
      +                          earn_st.openCurrent;
 10958  001E88  C06A  F0CA         	movff	_learn_st+10,_var_sys_NVM+50	;volatile
 10959  001E8C  C06B  F0CB         	movff	_learn_st+11,_var_sys_NVM+51	;volatile
 10960                           
 10961                           ;sm_ControlLearning_MC50.c: 360:                 var_sys_NVM.learningCurrentDecelaration
      +                          Open=learn_st.openHistCurrent;
 10962  001E90  C06E  F0C4         	movff	_learn_st+14,_var_sys_NVM+44	;volatile
 10963  001E94  C06F  F0C5         	movff	_learn_st+15,_var_sys_NVM+45	;volatile
 10964  001E98  0100               	movlb	0	; () banked
 10965  001E9A  6BC6               	clrf	(_var_sys_NVM+46)& (0+255),b	;volatile
 10966  001E9C  6BC7               	clrf	(_var_sys_NVM+47)& (0+255),b	;volatile
 10967                           
 10968                           ; BSR set to: 0
 10969                           ;sm_ControlLearning_MC50.c: 361:                 var_sys_NVM.learningCurrentDecelaration
      +                          Close=learn_st.closeHistCurrent;
 10970  001E9E  C070  F0C0         	movff	_learn_st+16,_var_sys_NVM+40	;volatile
 10971  001EA2  C071  F0C1         	movff	_learn_st+17,_var_sys_NVM+41	;volatile
 10972  001EA6  6BC2               	clrf	(_var_sys_NVM+42)& (0+255),b	;volatile
 10973  001EA8  6BC3               	clrf	(_var_sys_NVM+43)& (0+255),b	;volatile
 10974                           
 10975                           ; BSR set to: 0
 10976                           ;sm_ControlLearning_MC50.c: 362:                 SaveNVM_VarSystem(pageMemoryP);
 10977  001EAA  0E00               	movlw	0
 10978  001EAC  ECFD  F044         	call	_SaveNVM_VarSystem
 10979                           
 10980                           ;sm_ControlLearning_MC50.c: 363:                 SaveNVM_VarSystem(pageMemoryLearningVar
      +                          s);
 10981  001EB0  0E03               	movlw	3
 10982  001EB2  ECFD  F044         	call	_SaveNVM_VarSystem
 10983                           
 10984                           ;sm_ControlLearning_MC50.c: 364:                 SaveNVM_VarSystem(pageMemoryCounters);
 10985  001EB6  0E02               	movlw	2
 10986  001EB8  ECFD  F044         	call	_SaveNVM_VarSystem
 10987                           
 10988                           ;sm_ControlLearning_MC50.c: 365:                 var_sys.LearningIsEnabled=NO;
 10989  001EBC  0E00               	movlw	0
 10990  001EBE  0101               	movlb	1	; () banked
 10991  001EC0  6F26               	movwf	(_var_sys+38)& (0+255),b	;volatile
 10992                           
 10993                           ; BSR set to: 1
 10994                           ;sm_ControlLearning_MC50.c: 366:                 var_sys.PositionActual=0;
 10995  001EC2  0E00               	movlw	0
 10996  001EC4  6F1E               	movwf	(_var_sys+30)& (0+255),b	;volatile
 10997  001EC6  0E00               	movlw	0
 10998  001EC8  6F1F               	movwf	(_var_sys+31)& (0+255),b	;volatile
 10999  001ECA  0E00               	movlw	0
 11000  001ECC  6F20               	movwf	(_var_sys+32)& (0+255),b	;volatile
 11001  001ECE  0E00               	movlw	0
 11002  001ED0  6F21               	movwf	(_var_sys+33)& (0+255),b	;volatile
 11003                           
 11004                           ; BSR set to: 1
 11005                           ;sm_ControlLearning_MC50.c: 367:                 var_sys.PositionIsLost = NO;
 11006  001ED2  0E00               	movlw	0
 11007  001ED4  6F48               	movwf	(_var_sys+72)& (0+255),b	;volatile
 11008                           
 11009                           ;sm_ControlLearning_MC50.c: 369:             }
 11010  001ED6  0012               	return	
 11011  001ED8                     l22118:
 11012                           
 11013                           ; BSR set to: 1
 11014  001ED8  5100               	movf	_var_sys& (0+255),w,b	;volatile
 11015  001EDA  B4D8               	btfsc	status,2,c
 11016  001EDC  D643               	goto	u26160
 11017                           
 11018                           ; BSR set to: 1
 11019  001EDE  504D               	movf	(_button_struct+1)^0,w,c	;volatile
 11020  001EE0  B4D8               	btfsc	status,2,c
 11021  001EE2  D003               	goto	u26540
 11022                           
 11023                           ; BSR set to: 1
 11024  001EE4  043A               	decf	sm_execute_ControlLearning@typeOpenOrder^0,w,c
 11025  001EE6  A4D8               	btfss	status,2,c
 11026  001EE8  D003               	goto	l22130
 11027  001EEA                     u26540:
 11028                           
 11029                           ; BSR set to: 1
 11030  001EEA  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
 11031  001EEC  B4D8               	btfsc	status,2,c
 11032  001EEE  D73F               	goto	u26410
 11033  001EF0                     l22130:
 11034                           
 11035                           ; BSR set to: 1
 11036  001EF0  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 11037  001EF2  A4D8               	btfss	status,2,c
 11038  001EF4  D008               	goto	l22136
 11039                           
 11040                           ; BSR set to: 1
 11041                           ;sm_ControlLearning_MC50.c: 384:                  if(ts_system.TimeWaitToGetCurrent>0)
 11042  001EF6  BFCF               	btfsc	(_ts_system+53)& (0+255),7,b	;volatile
 11043  001EF8  0012               	return	
 11044  001EFA  51CF               	movf	(_ts_system+53)& (0+255),w,b	;volatile
 11045  001EFC  E103               	bnz	u26570
 11046  001EFE  05CE               	decf	(_ts_system+52)& (0+255),w,b	;volatile
 11047  001F00  A0D8               	btfss	status,0,c
 11048  001F02  0012               	return	
 11049  001F04                     u26570:
 11050  001F04  D6D8               	goto	u26290
 11051  001F06                     l22136:
 11052                           
 11053                           ; BSR set to: 1
 11054                           ;sm_ControlLearning_MC50.c: 390:             {;sm_ControlLearning_MC50.c: 391:          
      +                                 var_sys.Counter_Learning = 1;
 11055  001F06  0E01               	movlw	1
 11056  001F08  6F17               	movwf	(_var_sys+23)& (0+255),b	;volatile
 11057                           
 11058                           ;sm_ControlLearning_MC50.c: 392:                 ts_system.TimeWaitToNextState=(2*(1000/
      +                          50));
 11059  001F0A  0E00               	movlw	0
 11060  001F0C  6FBF               	movwf	(_ts_system+37)& (0+255),b	;volatile
 11061  001F0E  0E28               	movlw	40
 11062  001F10  6FBE               	movwf	(_ts_system+36)& (0+255),b	;volatile
 11063                           
 11064                           ; BSR set to: 1
 11065                           ;sm_ControlLearning_MC50.c: 395:                 if (ts_system.TimeWaitReleCapacitor <=0
      +                          )
 11066  001F12  BFDF               	btfsc	(_ts_system+69)& (0+255),7,b	;volatile
 11067  001F14  D005               	goto	u26580
 11068  001F16  51DF               	movf	(_ts_system+69)& (0+255),w,b	;volatile
 11069  001F18  E102               	bnz	u26581
 11070  001F1A  05DE               	decf	(_ts_system+68)& (0+255),w,b	;volatile
 11071  001F1C  B0D8               	btfsc	status,0,c
 11072  001F1E                     u26581:
 11073  001F1E  0012               	return	
 11074  001F20                     u26580:
 11075                           
 11076                           ; BSR set to: 1
 11077                           ;sm_ControlLearning_MC50.c: 396:                 {;sm_ControlLearning_MC50.c: 397:      
      +                                     if(ts_system.TimeWaitToGetCurrent>0)
 11078  001F20  BFCF               	btfsc	(_ts_system+53)& (0+255),7,b	;volatile
 11079  001F22  0012               	return	
 11080  001F24  51CF               	movf	(_ts_system+53)& (0+255),w,b	;volatile
 11081  001F26  E103               	bnz	u26590
 11082  001F28  05CE               	decf	(_ts_system+52)& (0+255),w,b	;volatile
 11083  001F2A  A0D8               	btfss	status,0,c
 11084  001F2C  0012               	return	
 11085  001F2E                     u26590:
 11086                           
 11087                           ; BSR set to: 1
 11088                           ;sm_ControlLearning_MC50.c: 398:                 {;sm_ControlLearning_MC50.c: 399:      
      +                                         learn_st.closeCurrent=calculateMean(learn_st.closeCurrent,var_sys.ActualC
      +                          urrent);
 11089  001F2E  C06C  F010         	movff	_learn_st+12,calculateMean@meanValue	;volatile
 11090  001F32  C06D  F011         	movff	_learn_st+13,calculateMean@meanValue+1	;volatile
 11091  001F36  6A12               	clrf	(calculateMean@meanValue+2)^0,c
 11092  001F38  6A13               	clrf	(calculateMean@meanValue+3)^0,c
 11093  001F3A  C12E  F014         	movff	_var_sys+46,calculateMean@newValue	;volatile
 11094  001F3E  C12F  F015         	movff	_var_sys+47,calculateMean@newValue+1	;volatile
 11095  001F42  6A16               	clrf	(calculateMean@newValue+2)^0,c
 11096  001F44  6A17               	clrf	(calculateMean@newValue+3)^0,c
 11097  001F46  ECBC  F040         	call	_calculateMean	;wreg free
 11098  001F4A  C010  F06C         	movff	?_calculateMean,_learn_st+12	;volatile
 11099  001F4E  C011  F06D         	movff	?_calculateMean+1,_learn_st+13	;volatile
 11100  001F52  0012               	return	
 11101  001F54                     l22146:
 11102  001F54  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
 11103  001F58  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
 11104  001F5C  50DF               	movf	indf2,w,c
 11105  001F5E  0100               	movlb	0	; () banked
 11106  001F60  6FDE               	movwf	??_sm_execute_ControlLearning& (0+255),b
 11107  001F62  6BDF               	clrf	(??_sm_execute_ControlLearning+1)& (0+255),b
 11108                           
 11109                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11110                           ; Switch size 1, requested type "simple"
 11111                           ; Number of cases is 1, Range of values is 0 to 0
 11112                           ; switch strategies available:
 11113                           ; Name         Instructions Cycles
 11114                           ; simple_byte            4     3 (average)
 11115                           ;	Chosen strategy is simple_byte
 11116  001F64  51DF               	movf	(??_sm_execute_ControlLearning+1)& (0+255),w,b
 11117  001F66  0A00               	xorlw	0	; case 0
 11118  001F68  A4D8               	btfss	status,2,c
 11119  001F6A  0012               	return	
 11120                           
 11121                           ; BSR set to: 0
 11122                           ; Switch size 1, requested type "simple"
 11123                           ; Number of cases is 6, Range of values is 0 to 5
 11124                           ; switch strategies available:
 11125                           ; Name         Instructions Cycles
 11126                           ; simple_byte           19    10 (average)
 11127                           ;	Chosen strategy is simple_byte
 11128  001F6C  51DE               	movf	??_sm_execute_ControlLearning& (0+255),w,b
 11129  001F6E  0A00               	xorlw	0	; case 0
 11130  001F70  B4D8               	btfsc	status,2,c
 11131  001F72  D570               	goto	l21892
 11132  001F74  0A01               	xorlw	1	; case 1
 11133  001F76  B4D8               	btfsc	status,2,c
 11134  001F78  D5BB               	goto	l21916
 11135  001F7A  0A03               	xorlw	3	; case 2
 11136  001F7C  B4D8               	btfsc	status,2,c
 11137  001F7E  D5FA               	goto	l21950
 11138  001F80  0A01               	xorlw	1	; case 3
 11139  001F82  B4D8               	btfsc	status,2,c
 11140  001F84  D65A               	goto	l21984
 11141  001F86  0A07               	xorlw	7	; case 4
 11142  001F88  B4D8               	btfsc	status,2,c
 11143  001F8A  D6AA               	goto	l22016
 11144  001F8C  0A01               	xorlw	1	; case 5
 11145  001F8E  A4D8               	btfss	status,2,c
 11146  001F90  0012               	return	
 11147  001F92  D72C               	goto	l22072
 11148  001F94                     __end_of_sm_execute_ControlLearning:
 11149                           	callstack 0
 11150                           
 11151 ;; *************** function _generateErrorLearnig *****************
 11152 ;; Defined at:
 11153 ;;		line 424 in file "sm_ControlLearning_MC50.c"
 11154 ;; Parameters:    Size  Location     Type
 11155 ;;		None
 11156 ;; Auto vars:     Size  Location     Type
 11157 ;;		None
 11158 ;; Return value:  Size  Location     Type
 11159 ;;                  1    wreg      void 
 11160 ;; Registers used:
 11161 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11162 ;; Tracked objects:
 11163 ;;		On entry : 3E/1
 11164 ;;		On exit  : 0/0
 11165 ;;		Unchanged: 0/0
 11166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11167 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11168 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11169 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11170 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11171 ;;Total ram usage:        0 bytes
 11172 ;; Hardware stack levels used: 1
 11173 ;; Hardware stack levels required when called: 6
 11174 ;; This function calls:
 11175 ;;		_sm_init
 11176 ;; This function is called by:
 11177 ;;		_sm_execute_ControlLearning
 11178 ;; This function uses a non-reentrant model
 11179 ;;
 11180                           
 11181                           	psect	text22
 11182  0080AA                     __ptext22:
 11183                           	callstack 0
 11184  0080AA                     _generateErrorLearnig:
 11185                           	callstack 22
 11186                           
 11187                           ;sm_ControlLearning_MC50.c: 428:     var_sys.LearningIsEnabled=NO;
 11188                           
 11189                           ;incstack = 0
 11190  0080AA  0E00               	movlw	0
 11191  0080AC  0101               	movlb	1	; () banked
 11192  0080AE  6F26               	movwf	(_var_sys+38)& (0+255),b	;volatile
 11193                           
 11194                           ; BSR set to: 1
 11195                           ;sm_ControlLearning_MC50.c: 430:     sm_init(&menuConfiguration_stateMachine,st_MainMenu
      +                          ,HIST_NONE);
 11196  0080B0  0EBD               	movlw	low _menuConfiguration_stateMachine
 11197  0080B2  6E12               	movwf	sm_init@psm^0,c
 11198  0080B4  0E02               	movlw	high _menuConfiguration_stateMachine
 11199  0080B6  6E13               	movwf	(sm_init@psm+1)^0,c
 11200  0080B8  0E00               	movlw	0
 11201  0080BA  6E15               	movwf	(sm_init@initial_state+1)^0,c
 11202  0080BC  0E00               	movlw	0
 11203  0080BE  6E14               	movwf	sm_init@initial_state^0,c
 11204  0080C0  0E00               	movlw	0
 11205  0080C2  6E16               	movwf	sm_init@hist_mode^0,c
 11206  0080C4  ECFF  F041         	call	_sm_init	;wreg free
 11207                           
 11208                           ;sm_ControlLearning_MC50.c: 431:     sm_init(&main_stateMachine,st_standBy,HIST_NONE);
 11209  0080C8  0EED               	movlw	low _main_stateMachine
 11210  0080CA  6E12               	movwf	sm_init@psm^0,c
 11211  0080CC  0E01               	movlw	high _main_stateMachine
 11212  0080CE  6E13               	movwf	(sm_init@psm+1)^0,c
 11213  0080D0  0E00               	movlw	0
 11214  0080D2  6E15               	movwf	(sm_init@initial_state+1)^0,c
 11215  0080D4  0E00               	movlw	0
 11216  0080D6  6E14               	movwf	sm_init@initial_state^0,c
 11217  0080D8  0E00               	movlw	0
 11218  0080DA  6E16               	movwf	sm_init@hist_mode^0,c
 11219  0080DC  ECFF  F041         	call	_sm_init	;wreg free
 11220                           
 11221                           ;sm_ControlLearning_MC50.c: 432:     sm_init(&controlGate_stateMachine,st_Idle,HIST_NONE
      +                          );
 11222  0080E0  0EE2               	movlw	low _controlGate_stateMachine
 11223  0080E2  6E12               	movwf	sm_init@psm^0,c
 11224  0080E4  0E01               	movlw	high _controlGate_stateMachine
 11225  0080E6  6E13               	movwf	(sm_init@psm+1)^0,c
 11226  0080E8  0E00               	movlw	0
 11227  0080EA  6E15               	movwf	(sm_init@initial_state+1)^0,c
 11228  0080EC  0E00               	movlw	0
 11229  0080EE  6E14               	movwf	sm_init@initial_state^0,c
 11230  0080F0  0E00               	movlw	0
 11231  0080F2  6E16               	movwf	sm_init@hist_mode^0,c
 11232  0080F4  ECFF  F041         	call	_sm_init	;wreg free
 11233                           
 11234                           ;sm_ControlLearning_MC50.c: 433:     sm_init(&controlLearning_stateMachine,st_InitLearni
      +                          ng,HIST_NONE);
 11235  0080F8  0EB2               	movlw	low _controlLearning_stateMachine
 11236  0080FA  6E12               	movwf	sm_init@psm^0,c
 11237  0080FC  0E02               	movlw	high _controlLearning_stateMachine
 11238  0080FE  6E13               	movwf	(sm_init@psm+1)^0,c
 11239  008100  0E00               	movlw	0
 11240  008102  6E15               	movwf	(sm_init@initial_state+1)^0,c
 11241  008104  0E00               	movlw	0
 11242  008106  6E14               	movwf	sm_init@initial_state^0,c
 11243  008108  0E00               	movlw	0
 11244  00810A  6E16               	movwf	sm_init@hist_mode^0,c
 11245  00810C  ECFF  F041         	call	_sm_init	;wreg free
 11246  008110  0012               	return		;funcret
 11247  008112                     __end_of_generateErrorLearnig:
 11248                           	callstack 0
 11249                           
 11250 ;; *************** function _sm_init *****************
 11251 ;; Defined at:
 11252 ;;		line 12 in file "sm_common_MC50.c"
 11253 ;; Parameters:    Size  Location     Type
 11254 ;;  psm             2   17[COMRAM] PTR struct .
 11255 ;;		 -> controlLearning_stateMachine(11), controlGate_stateMachine(11), main_stateMachine(11), menuConfiguration_stateMa
      +chine(11), 
 11256 ;;  initial_stat    2   19[COMRAM] int 
 11257 ;;  hist_mode       1   21[COMRAM] enum E348
 11258 ;; Auto vars:     Size  Location     Type
 11259 ;;		None
 11260 ;; Return value:  Size  Location     Type
 11261 ;;                  1    wreg      void 
 11262 ;; Registers used:
 11263 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11264 ;; Tracked objects:
 11265 ;;		On entry : 0/1
 11266 ;;		On exit  : 0/0
 11267 ;;		Unchanged: 0/0
 11268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11269 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11270 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11272 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11273 ;;Total ram usage:        5 bytes
 11274 ;; Hardware stack levels used: 1
 11275 ;; Hardware stack levels required when called: 5
 11276 ;; This function calls:
 11277 ;;		_sm_restart
 11278 ;; This function is called by:
 11279 ;;		_main
 11280 ;;		_generateErrorLearnig
 11281 ;; This function uses a non-reentrant model
 11282 ;;
 11283                           
 11284                           	psect	text23
 11285  0083FE                     __ptext23:
 11286                           	callstack 0
 11287  0083FE                     _sm_init:
 11288                           	callstack 25
 11289                           
 11290                           ;sm_common_MC50.c: 12: void sm_init(sm_t *psm, int initial_state, sm_history_t hist_mode
      +                          );sm_common_MC50.c: 13: {;sm_common_MC50.c: 14:  psm->initial_state = initial_state;
 11291                           
 11292                           ;incstack = 0
 11293  0083FE  EE20 F002          	lfsr	2,2
 11294  008402  5012               	movf	sm_init@psm^0,w,c
 11295  008404  26D9               	addwf	fsr2l,f,c
 11296  008406  5013               	movf	(sm_init@psm+1)^0,w,c
 11297  008408  22DA               	addwfc	fsr2h,f,c
 11298  00840A  C014  FFDE         	movff	sm_init@initial_state,postinc2
 11299  00840E  C015  FFDD         	movff	sm_init@initial_state+1,postdec2
 11300                           
 11301                           ;sm_common_MC50.c: 15:  psm->history = hist_mode;
 11302  008412  EE20 F006          	lfsr	2,6
 11303  008416  5012               	movf	sm_init@psm^0,w,c
 11304  008418  26D9               	addwf	fsr2l,f,c
 11305  00841A  5013               	movf	(sm_init@psm+1)^0,w,c
 11306  00841C  22DA               	addwfc	fsr2h,f,c
 11307  00841E  C016  FFDF         	movff	sm_init@hist_mode,indf2
 11308                           
 11309                           ;sm_common_MC50.c: 16:  psm->current_state = initial_state;
 11310  008422  C012  FFD9         	movff	sm_init@psm,fsr2l
 11311  008426  C013  FFDA         	movff	sm_init@psm+1,fsr2h
 11312  00842A  C014  FFDE         	movff	sm_init@initial_state,postinc2
 11313  00842E  C015  FFDD         	movff	sm_init@initial_state+1,postdec2
 11314                           
 11315                           ;sm_common_MC50.c: 19:  psm->parent_machine = ((void*)0);
 11316  008432  EE20 F007          	lfsr	2,7
 11317  008436  5012               	movf	sm_init@psm^0,w,c
 11318  008438  26D9               	addwf	fsr2l,f,c
 11319  00843A  5013               	movf	(sm_init@psm+1)^0,w,c
 11320  00843C  22DA               	addwfc	fsr2h,f,c
 11321  00843E  0E00               	movlw	0
 11322  008440  6EDE               	movwf	postinc2,c
 11323  008442  0E00               	movlw	0
 11324  008444  6EDD               	movwf	postdec2,c
 11325                           
 11326                           ;sm_common_MC50.c: 20:  sm_restart(psm);
 11327  008446  C012  F010         	movff	sm_init@psm,sm_restart@psm
 11328  00844A  C013  F011         	movff	sm_init@psm+1,sm_restart@psm+1
 11329  00844E  ECDD  F043         	call	_sm_restart	;wreg free
 11330  008452  0012               	return		;funcret
 11331  008454                     __end_of_sm_init:
 11332                           	callstack 0
 11333                           
 11334 ;; *************** function _sm_restart *****************
 11335 ;; Defined at:
 11336 ;;		line 23 in file "sm_common_MC50.c"
 11337 ;; Parameters:    Size  Location     Type
 11338 ;;  psm             2   15[COMRAM] PTR struct .
 11339 ;;		 -> controlLearning_stateMachine(11), controlGate_stateMachine(11), main_stateMachine(11), menuConfiguration_stateMa
      +chine(11), 
 11340 ;; Auto vars:     Size  Location     Type
 11341 ;;		None
 11342 ;; Return value:  Size  Location     Type
 11343 ;;                  1    wreg      void 
 11344 ;; Registers used:
 11345 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 11346 ;; Tracked objects:
 11347 ;;		On entry : 0/1
 11348 ;;		On exit  : 0/0
 11349 ;;		Unchanged: 0/0
 11350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11351 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11352 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11354 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11355 ;;Total ram usage:        2 bytes
 11356 ;; Hardware stack levels used: 1
 11357 ;; Hardware stack levels required when called: 4
 11358 ;; This function calls:
 11359 ;;		Nothing
 11360 ;; This function is called by:
 11361 ;;		_sm_init
 11362 ;; This function uses a non-reentrant model
 11363 ;;
 11364                           
 11365                           	psect	text24
 11366  0087BA                     __ptext24:
 11367                           	callstack 0
 11368  0087BA                     _sm_restart:
 11369                           	callstack 25
 11370                           
 11371                           ;sm_common_MC50.c: 24:  if(psm->history == HIST_NONE){
 11372                           
 11373                           ;incstack = 0
 11374  0087BA  EE20 F006          	lfsr	2,6
 11375  0087BE  5010               	movf	sm_restart@psm^0,w,c
 11376  0087C0  26D9               	addwf	fsr2l,f,c
 11377  0087C2  5011               	movf	(sm_restart@psm+1)^0,w,c
 11378  0087C4  22DA               	addwfc	fsr2h,f,c
 11379  0087C6  50DF               	movf	indf2,w,c
 11380  0087C8  A4D8               	btfss	status,2,c
 11381  0087CA  D00E               	goto	l19524
 11382                           
 11383                           ;sm_common_MC50.c: 25:   psm->current_state = psm->initial_state;
 11384  0087CC  EE20 F002          	lfsr	2,2
 11385  0087D0  5010               	movf	sm_restart@psm^0,w,c
 11386  0087D2  26D9               	addwf	fsr2l,f,c
 11387  0087D4  5011               	movf	(sm_restart@psm+1)^0,w,c
 11388  0087D6  22DA               	addwfc	fsr2h,f,c
 11389  0087D8  C010  FFE1         	movff	sm_restart@psm,fsr1l
 11390  0087DC  C011  FFE2         	movff	sm_restart@psm+1,fsr1h
 11391  0087E0  CFDE FFE6          	movff	postinc2,postinc1
 11392  0087E4  CFDD FFE5          	movff	postdec2,postdec1
 11393  0087E8                     l19524:
 11394                           
 11395                           ;sm_common_MC50.c: 27:  psm->last_event = 0;
 11396  0087E8  EE20 F004          	lfsr	2,4
 11397  0087EC  5010               	movf	sm_restart@psm^0,w,c
 11398  0087EE  26D9               	addwf	fsr2l,f,c
 11399  0087F0  5011               	movf	(sm_restart@psm+1)^0,w,c
 11400  0087F2  22DA               	addwfc	fsr2h,f,c
 11401  0087F4  0E00               	movlw	0
 11402  0087F6  6EDE               	movwf	postinc2,c
 11403  0087F8  0E00               	movlw	0
 11404  0087FA  6EDD               	movwf	postdec2,c
 11405  0087FC  0012               	return		;funcret
 11406  0087FE                     __end_of_sm_restart:
 11407                           	callstack 0
 11408                           
 11409 ;; *************** function _clearLearningValue *****************
 11410 ;; Defined at:
 11411 ;;		line 436 in file "sm_ControlLearning_MC50.c"
 11412 ;; Parameters:    Size  Location     Type
 11413 ;;		None
 11414 ;; Auto vars:     Size  Location     Type
 11415 ;;		None
 11416 ;; Return value:  Size  Location     Type
 11417 ;;                  1    wreg      void 
 11418 ;; Registers used:
 11419 ;;		wreg, status,2
 11420 ;; Tracked objects:
 11421 ;;		On entry : 3F/1
 11422 ;;		On exit  : 3F/0
 11423 ;;		Unchanged: 0/0
 11424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11425 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11426 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11428 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11429 ;;Total ram usage:        0 bytes
 11430 ;; Hardware stack levels used: 1
 11431 ;; Hardware stack levels required when called: 4
 11432 ;; This function calls:
 11433 ;;		Nothing
 11434 ;; This function is called by:
 11435 ;;		_sm_execute_ControlLearning
 11436 ;; This function uses a non-reentrant model
 11437 ;;
 11438                           
 11439                           	psect	text25
 11440  007BB2                     __ptext25:
 11441                           	callstack 0
 11442  007BB2                     _clearLearningValue:
 11443                           	callstack 24
 11444                           
 11445                           ; BSR set to: 1
 11446                           ;sm_ControlLearning_MC50.c: 438:     learn_st.timeOpen=0;
 11447                           
 11448                           ;incstack = 0
 11449  007BB2  0E00               	movlw	0
 11450  007BB4  0100               	movlb	0	; () banked
 11451  007BB6  6F64               	movwf	(_learn_st+4)& (0+255),b	;volatile
 11452  007BB8  0E00               	movlw	0
 11453  007BBA  6F65               	movwf	(_learn_st+5)& (0+255),b	;volatile
 11454  007BBC  0E00               	movlw	0
 11455  007BBE  6F66               	movwf	(_learn_st+6)& (0+255),b	;volatile
 11456  007BC0  0E00               	movlw	0
 11457  007BC2  6F67               	movwf	(_learn_st+7)& (0+255),b	;volatile
 11458                           
 11459                           ;sm_ControlLearning_MC50.c: 439:     learn_st.timeClose=0;
 11460  007BC4  0E00               	movlw	0
 11461  007BC6  6F60               	movwf	_learn_st& (0+255),b	;volatile
 11462  007BC8  0E00               	movlw	0
 11463  007BCA  6F61               	movwf	(_learn_st+1)& (0+255),b	;volatile
 11464  007BCC  0E00               	movlw	0
 11465  007BCE  6F62               	movwf	(_learn_st+2)& (0+255),b	;volatile
 11466  007BD0  0E00               	movlw	0
 11467  007BD2  6F63               	movwf	(_learn_st+3)& (0+255),b	;volatile
 11468                           
 11469                           ;sm_ControlLearning_MC50.c: 440:     learn_st.timeDecelerationOpen=0;
 11470  007BD4  0E00               	movlw	0
 11471  007BD6  6F69               	movwf	(_learn_st+9)& (0+255),b	;volatile
 11472                           
 11473                           ;sm_ControlLearning_MC50.c: 441:     learn_st.timeDecelerationClose=0;
 11474  007BD8  0E00               	movlw	0
 11475  007BDA  6F68               	movwf	(_learn_st+8)& (0+255),b	;volatile
 11476                           
 11477                           ;sm_ControlLearning_MC50.c: 442:     learn_st.openCurrent=0;
 11478  007BDC  0E00               	movlw	0
 11479  007BDE  6F6B               	movwf	(_learn_st+11)& (0+255),b	;volatile
 11480  007BE0  0E00               	movlw	0
 11481  007BE2  6F6A               	movwf	(_learn_st+10)& (0+255),b	;volatile
 11482                           
 11483                           ;sm_ControlLearning_MC50.c: 443:     learn_st.closeCurrent=0;
 11484  007BE4  0E00               	movlw	0
 11485  007BE6  6F6D               	movwf	(_learn_st+13)& (0+255),b	;volatile
 11486  007BE8  0E00               	movlw	0
 11487  007BEA  6F6C               	movwf	(_learn_st+12)& (0+255),b	;volatile
 11488                           
 11489                           ;sm_ControlLearning_MC50.c: 444:     learn_st.openHistCurrent=0;
 11490  007BEC  0E00               	movlw	0
 11491  007BEE  6F6F               	movwf	(_learn_st+15)& (0+255),b	;volatile
 11492  007BF0  0E00               	movlw	0
 11493  007BF2  6F6E               	movwf	(_learn_st+14)& (0+255),b	;volatile
 11494                           
 11495                           ;sm_ControlLearning_MC50.c: 445:     learn_st.closeHistCurrent=0;
 11496  007BF4  0E00               	movlw	0
 11497  007BF6  6F71               	movwf	(_learn_st+17)& (0+255),b	;volatile
 11498  007BF8  0E00               	movlw	0
 11499  007BFA  6F70               	movwf	(_learn_st+16)& (0+255),b	;volatile
 11500                           
 11501                           ;sm_ControlLearning_MC50.c: 446:     var_sys_NVM.learningCurrentNormalClose=0;
 11502  007BFC  0E00               	movlw	0
 11503  007BFE  6FC9               	movwf	(_var_sys_NVM+49)& (0+255),b	;volatile
 11504  007C00  0E00               	movlw	0
 11505  007C02  6FC8               	movwf	(_var_sys_NVM+48)& (0+255),b	;volatile
 11506                           
 11507                           ;sm_ControlLearning_MC50.c: 447:     var_sys_NVM.learningCurrentNormalOpen=0;
 11508  007C04  0E00               	movlw	0
 11509  007C06  6FCB               	movwf	(_var_sys_NVM+51)& (0+255),b	;volatile
 11510  007C08  0E00               	movlw	0
 11511  007C0A  6FCA               	movwf	(_var_sys_NVM+50)& (0+255),b	;volatile
 11512                           
 11513                           ;sm_ControlLearning_MC50.c: 448:     var_sys_NVM.learningCurrentDecelarationClose=0;
 11514  007C0C  0E00               	movlw	0
 11515  007C0E  6FC0               	movwf	(_var_sys_NVM+40)& (0+255),b	;volatile
 11516  007C10  0E00               	movlw	0
 11517  007C12  6FC1               	movwf	(_var_sys_NVM+41)& (0+255),b	;volatile
 11518  007C14  0E00               	movlw	0
 11519  007C16  6FC2               	movwf	(_var_sys_NVM+42)& (0+255),b	;volatile
 11520  007C18  0E00               	movlw	0
 11521  007C1A  6FC3               	movwf	(_var_sys_NVM+43)& (0+255),b	;volatile
 11522                           
 11523                           ;sm_ControlLearning_MC50.c: 449:     var_sys_NVM.learningCurrentDecelarationOpen=0;
 11524  007C1C  0E00               	movlw	0
 11525  007C1E  6FC4               	movwf	(_var_sys_NVM+44)& (0+255),b	;volatile
 11526  007C20  0E00               	movlw	0
 11527  007C22  6FC5               	movwf	(_var_sys_NVM+45)& (0+255),b	;volatile
 11528  007C24  0E00               	movlw	0
 11529  007C26  6FC6               	movwf	(_var_sys_NVM+46)& (0+255),b	;volatile
 11530  007C28  0E00               	movlw	0
 11531  007C2A  6FC7               	movwf	(_var_sys_NVM+47)& (0+255),b	;volatile
 11532                           
 11533                           ; BSR set to: 0
 11534  007C2C  0012               	return		;funcret
 11535  007C2E                     __end_of_clearLearningValue:
 11536                           	callstack 0
 11537                           
 11538 ;; *************** function _calculateMean *****************
 11539 ;; Defined at:
 11540 ;;		line 411 in file "sm_ControlLearning_MC50.c"
 11541 ;; Parameters:    Size  Location     Type
 11542 ;;  meanValue       4   15[COMRAM] unsigned long 
 11543 ;;  newValue        4   19[COMRAM] unsigned long 
 11544 ;; Auto vars:     Size  Location     Type
 11545 ;;		None
 11546 ;; Return value:  Size  Location     Type
 11547 ;;                  4   15[COMRAM] unsigned long 
 11548 ;; Registers used:
 11549 ;;		wreg, status,2, status,0
 11550 ;; Tracked objects:
 11551 ;;		On entry : 3E/1
 11552 ;;		On exit  : 3E/0
 11553 ;;		Unchanged: 3E/0
 11554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11555 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11556 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11557 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11558 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11559 ;;Total ram usage:       12 bytes
 11560 ;; Hardware stack levels used: 1
 11561 ;; Hardware stack levels required when called: 4
 11562 ;; This function calls:
 11563 ;;		Nothing
 11564 ;; This function is called by:
 11565 ;;		_sm_execute_ControlLearning
 11566 ;; This function uses a non-reentrant model
 11567 ;;
 11568                           
 11569                           	psect	text26
 11570  008178                     __ptext26:
 11571                           	callstack 0
 11572  008178                     _calculateMean:
 11573                           	callstack 24
 11574                           
 11575                           ;sm_ControlLearning_MC50.c: 411: unsigned long calculateMean(unsigned long meanValue,uns
      +                          igned long newValue);sm_ControlLearning_MC50.c: 412: {;sm_ControlLearning_MC50.c: 413:  
      +                             if(meanValue==0)
 11576                           
 11577                           ; BSR set to: 0
 11578                           ;incstack = 0
 11579  008178  5010               	movf	calculateMean@meanValue^0,w,c
 11580  00817A  1011               	iorwf	(calculateMean@meanValue+1)^0,w,c
 11581  00817C  1012               	iorwf	(calculateMean@meanValue+2)^0,w,c
 11582  00817E  1013               	iorwf	(calculateMean@meanValue+3)^0,w,c
 11583  008180  A4D8               	btfss	status,2,c
 11584  008182  D009               	goto	l20484
 11585                           
 11586                           ;sm_ControlLearning_MC50.c: 414:     {;sm_ControlLearning_MC50.c: 415:         meanValue
      +                          =newValue;
 11587  008184  C014  F010         	movff	calculateMean@newValue,calculateMean@meanValue
 11588  008188  C015  F011         	movff	calculateMean@newValue+1,calculateMean@meanValue+1
 11589  00818C  C016  F012         	movff	calculateMean@newValue+2,calculateMean@meanValue+2
 11590  008190  C017  F013         	movff	calculateMean@newValue+3,calculateMean@meanValue+3
 11591                           
 11592                           ;sm_ControlLearning_MC50.c: 416:     }
 11593  008194  D019               	goto	l20486
 11594  008196                     l20484:
 11595                           
 11596                           ;sm_ControlLearning_MC50.c: 418:     {;sm_ControlLearning_MC50.c: 419:         meanValue
      +                          =(meanValue+newValue)/2;
 11597  008196  5014               	movf	calculateMean@newValue^0,w,c
 11598  008198  2410               	addwf	calculateMean@meanValue^0,w,c
 11599  00819A  6E18               	movwf	??_calculateMean^0,c
 11600  00819C  5015               	movf	(calculateMean@newValue+1)^0,w,c
 11601  00819E  2011               	addwfc	(calculateMean@meanValue+1)^0,w,c
 11602  0081A0  6E19               	movwf	(??_calculateMean+1)^0,c
 11603  0081A2  5016               	movf	(calculateMean@newValue+2)^0,w,c
 11604  0081A4  2012               	addwfc	(calculateMean@meanValue+2)^0,w,c
 11605  0081A6  6E1A               	movwf	(??_calculateMean+2)^0,c
 11606  0081A8  5017               	movf	(calculateMean@newValue+3)^0,w,c
 11607  0081AA  2013               	addwfc	(calculateMean@meanValue+3)^0,w,c
 11608  0081AC  6E1B               	movwf	(??_calculateMean+3)^0,c
 11609  0081AE  90D8               	bcf	status,0,c
 11610  0081B0  321B               	rrcf	(??_calculateMean+3)^0,f,c
 11611  0081B2  321A               	rrcf	(??_calculateMean+2)^0,f,c
 11612  0081B4  3219               	rrcf	(??_calculateMean+1)^0,f,c
 11613  0081B6  3218               	rrcf	??_calculateMean^0,f,c
 11614  0081B8  C018  F010         	movff	??_calculateMean,calculateMean@meanValue
 11615  0081BC  C019  F011         	movff	??_calculateMean+1,calculateMean@meanValue+1
 11616  0081C0  C01A  F012         	movff	??_calculateMean+2,calculateMean@meanValue+2
 11617  0081C4  C01B  F013         	movff	??_calculateMean+3,calculateMean@meanValue+3
 11618  0081C8                     l20486:
 11619                           
 11620                           ;sm_ControlLearning_MC50.c: 421:     return meanValue;
 11621  0081C8  C010  F010         	movff	calculateMean@meanValue,?_calculateMean
 11622  0081CC  C011  F011         	movff	calculateMean@meanValue+1,?_calculateMean+1
 11623  0081D0  C012  F012         	movff	calculateMean@meanValue+2,?_calculateMean+2
 11624  0081D4  C013  F013         	movff	calculateMean@meanValue+3,?_calculateMean+3
 11625  0081D8  0012               	return		;funcret
 11626  0081DA                     __end_of_calculateMean:
 11627                           	callstack 0
 11628                           
 11629 ;; *************** function _actionZone_Opening *****************
 11630 ;; Defined at:
 11631 ;;		line 374 in file "sm_ControlGate_MC50.c"
 11632 ;; Parameters:    Size  Location     Type
 11633 ;;		None
 11634 ;; Auto vars:     Size  Location     Type
 11635 ;;  typeOpenOrde    1   14[BANK0 ] enum E10372
 11636 ;;  securityOpen    1   13[BANK0 ] enum E10397
 11637 ;;  securityClos    1   12[BANK0 ] enum E10397
 11638 ;; Return value:  Size  Location     Type
 11639 ;;                  1    wreg      void 
 11640 ;; Registers used:
 11641 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11642 ;; Tracked objects:
 11643 ;;		On entry : 3F/0
 11644 ;;		On exit  : 0/0
 11645 ;;		Unchanged: 0/0
 11646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11648 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11650 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11651 ;;Total ram usage:        3 bytes
 11652 ;; Hardware stack levels used: 1
 11653 ;; Hardware stack levels required when called: 8
 11654 ;; This function calls:
 11655 ;;		_CloseOrder
 11656 ;;		_GetOpenOrder
 11657 ;;		_GetSecurityStateInClosing
 11658 ;;		_GetSecurityStateInOpening
 11659 ;;		_InitFullAutoTime
 11660 ;;		_InitWalkAutoTime
 11661 ;;		_SetSegmentValueIntermitent
 11662 ;;		_StopOrder
 11663 ;;		_VerifyFollowMe
 11664 ;;		_controlVelocity
 11665 ;;		_setPositionInvertionInClosing
 11666 ;;		_setPositionInvertionInOpening
 11667 ;;		_sm_send_event
 11668 ;; This function is called by:
 11669 ;;		_sm_execute_ControlGate
 11670 ;; This function uses a non-reentrant model
 11671 ;;
 11672                           
 11673                           	psect	text27
 11674  0044E0                     __ptext27:
 11675                           	callstack 0
 11676  0044E0                     _actionZone_Opening:
 11677                           	callstack 21
 11678                           
 11679                           ; BSR set to: 0
 11680                           ;sm_ControlGate_MC50.c: 375:     StateEnum securityClosing = GetSecurityStateInClosing()
      +                          ;
 11681                           
 11682                           ;incstack = 0
 11683  0044E0  EC6B  F039         	call	_GetSecurityStateInClosing	;wreg free
 11684  0044E4  0100               	movlb	0	; () banked
 11685  0044E6  6FE4               	movwf	actionZone_Opening@securityClosing& (0+255),b
 11686                           
 11687                           ;sm_ControlGate_MC50.c: 376:     StateEnum securityOpening = GetSecurityStateInOpening()
      +                          ;
 11688  0044E8  ECBE  F039         	call	_GetSecurityStateInOpening	;wreg free
 11689  0044EC  0100               	movlb	0	; () banked
 11690  0044EE  6FE5               	movwf	actionZone_Opening@securityOpening& (0+255),b
 11691                           
 11692                           ; BSR set to: 0
 11693                           ;sm_ControlGate_MC50.c: 377:     TypeCMD typeOpenOrder = GetOpenOrder();
 11694  0044F0  ECBF  F028         	call	_GetOpenOrder	;wreg free
 11695  0044F4  0100               	movlb	0	; () banked
 11696  0044F6  6FE6               	movwf	actionZone_Opening@typeOpenOrder& (0+255),b
 11697                           
 11698                           ; BSR set to: 0
 11699                           ;sm_ControlGate_MC50.c: 380:     controlVelocity();
 11700  0044F8  ECD0  F025         	call	_controlVelocity	;wreg free
 11701                           
 11702                           ;sm_ControlGate_MC50.c: 381:     InitFullAutoTime();
 11703  0044FC  ECE1  F047         	call	_InitFullAutoTime	;wreg free
 11704                           
 11705                           ; BSR set to: 0
 11706                           ;sm_ControlGate_MC50.c: 383:     var_sys.passoAPassoAutoClose = NO;
 11707  004500  0E00               	movlw	0
 11708  004502  0101               	movlb	1	; () banked
 11709  004504  6F50               	movwf	(_var_sys+80)& (0+255),b	;volatile
 11710                           
 11711                           ; BSR set to: 1
 11712                           ;sm_ControlGate_MC50.c: 385:     VerifyFollowMe(securityClosing);
 11713  004506  0100               	movlb	0	; () banked
 11714  004508  51E4               	movf	actionZone_Opening@securityClosing& (0+255),w,b
 11715  00450A  EC39  F047         	call	_VerifyFollowMe
 11716                           
 11717                           ;sm_ControlGate_MC50.c: 386:     if (var_sys.NumberOffErrors > 3) {
 11718  00450E  0E03               	movlw	3
 11719  004510  0101               	movlb	1	; () banked
 11720  004512  6543               	cpfsgt	(_var_sys+67)& (0+255),b	;volatile
 11721  004514  D00D               	goto	l21348
 11722                           
 11723                           ; BSR set to: 1
 11724                           ;sm_ControlGate_MC50.c: 388:         var_sys.StateMotor = Stopped;
 11725  004516  0E00               	movlw	0
 11726  004518  6F00               	movwf	_var_sys& (0+255),b	;volatile
 11727  00451A                     l21346:
 11728                           
 11729                           ; BSR set to: 1
 11730                           ;sm_ControlGate_MC50.c: 389:         sm_send_event(&controlGate_stateMachine, ev_ErrorGa
      +                          te);
 11731  00451A  0EE2               	movlw	low _controlGate_stateMachine
 11732  00451C  6E12               	movwf	sm_send_event@psm^0,c
 11733  00451E  0E01               	movlw	high _controlGate_stateMachine
 11734  004520  6E13               	movwf	(sm_send_event@psm+1)^0,c
 11735  004522  0E00               	movlw	0
 11736  004524  6E15               	movwf	(sm_send_event@event+1)^0,c
 11737  004526  0E10               	movlw	16
 11738  004528  6E14               	movwf	sm_send_event@event^0,c
 11739  00452A  EC1C  F041         	call	_sm_send_event	;wreg free
 11740                           
 11741                           ;sm_ControlGate_MC50.c: 390:     } else if (var_sys.StateMotor == InOpenWalk && ts_syste
      +                          m.timeOpenWalk <= 0)
 11742  00452E  0012               	return	
 11743  004530                     l21348:
 11744                           
 11745                           ; BSR set to: 1
 11746  004530  0E02               	movlw	2
 11747  004532  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 11748  004534  A4D8               	btfss	status,2,c
 11749  004536  D013               	goto	l21362
 11750                           
 11751                           ; BSR set to: 1
 11752  004538  BFAB               	btfsc	(_ts_system+17)& (0+255),7,b	;volatile
 11753  00453A  D005               	goto	u24780
 11754  00453C  51AB               	movf	(_ts_system+17)& (0+255),w,b	;volatile
 11755  00453E  E10F               	bnz	l21362
 11756  004540  05AA               	decf	(_ts_system+16)& (0+255),w,b	;volatile
 11757  004542  B0D8               	btfsc	status,0,c
 11758  004544  D00C               	goto	l21362
 11759  004546                     u24780:
 11760                           
 11761                           ; BSR set to: 1
 11762                           ;sm_ControlGate_MC50.c: 391:     {;sm_ControlGate_MC50.c: 396:         setPositionInvert
      +                          ionInOpening();
 11763  004546  EC62  F036         	call	_setPositionInvertionInOpening	;wreg free
 11764                           
 11765                           ; BSR set to: 1
 11766                           ;sm_ControlGate_MC50.c: 397:         StopOrder();
 11767  00454A  EC8F  F047         	call	_StopOrder	;wreg free
 11768                           
 11769                           ;sm_ControlGate_MC50.c: 398:         InitWalkAutoTime();
 11770  00454E  EC66  F048         	call	_InitWalkAutoTime	;wreg free
 11771                           
 11772                           ; BSR set to: 0
 11773                           ;sm_ControlGate_MC50.c: 399:         var_sys.passoAPassoAutoClose = YES;
 11774  004552  0E01               	movlw	1
 11775  004554  0101               	movlb	1	; () banked
 11776  004556  6F50               	movwf	(_var_sys+80)& (0+255),b	;volatile
 11777                           
 11778                           ; BSR set to: 1
 11779                           ;sm_ControlGate_MC50.c: 400:         Abertura_pedonal = 1;
 11780  004558  0E01               	movlw	1
 11781  00455A  6F8D               	movwf	_Abertura_pedonal& (0+255),b
 11782                           
 11783                           ;sm_ControlGate_MC50.c: 402:     } else if ((var_sys.FimCurso_OpenIsEnabled == YES)||(va
      +                          r_sys.TimeMaxMotorIsON<=0) && (var_sys.LearningIsEnabled==NO) && (var_sys.PositionIsLost
      +                          ==NO) && (var_sys.Statedoorcontrol == st_Opening))
 11784  00455C  0012               	return	
 11785  00455E                     l21362:
 11786                           
 11787                           ; BSR set to: 1
 11788  00455E  0504               	decf	(_var_sys+4)& (0+255),w,b	;volatile
 11789  004560  B4D8               	btfsc	status,2,c
 11790  004562  D010               	goto	u24830
 11791                           
 11792                           ; BSR set to: 1
 11793  004564  5118               	movf	(_var_sys+24)& (0+255),w,b	;volatile
 11794  004566  1119               	iorwf	(_var_sys+25)& (0+255),w,b	;volatile
 11795  004568  111A               	iorwf	(_var_sys+26)& (0+255),w,b	;volatile
 11796  00456A  111B               	iorwf	(_var_sys+27)& (0+255),w,b	;volatile
 11797  00456C  A4D8               	btfss	status,2,c
 11798  00456E  D02F               	goto	l21382
 11799                           
 11800                           ; BSR set to: 1
 11801  004570  5126               	movf	(_var_sys+38)& (0+255),w,b	;volatile
 11802  004572  A4D8               	btfss	status,2,c
 11803  004574  D02C               	goto	l21382
 11804                           
 11805                           ; BSR set to: 1
 11806  004576  5148               	movf	(_var_sys+72)& (0+255),w,b	;volatile
 11807  004578  A4D8               	btfss	status,2,c
 11808  00457A  D029               	goto	l21382
 11809                           
 11810                           ; BSR set to: 1
 11811  00457C  0E02               	movlw	2
 11812  00457E  191C               	xorwf	(_var_sys+28)& (0+255),w,b	;volatile
 11813  004580  A4D8               	btfss	status,2,c
 11814  004582  D025               	goto	l21382
 11815  004584                     u24830:
 11816                           
 11817                           ; BSR set to: 1
 11818                           ;sm_ControlGate_MC50.c: 403:     {;sm_ControlGate_MC50.c: 408:         var_sys.Statedoor
      +                          control = st_Opened;
 11819  004584  0E04               	movlw	4
 11820  004586  6F1C               	movwf	(_var_sys+28)& (0+255),b	;volatile
 11821                           
 11822                           ; BSR set to: 1
 11823                           ;sm_ControlGate_MC50.c: 409:         var_sys.PositionActual = var_sys_NVM.learningTimeTo
      +                          Close;
 11824  004588  C0D0  F11E         	movff	_var_sys_NVM+56,_var_sys+30	;volatile
 11825  00458C  C0D1  F11F         	movff	_var_sys_NVM+57,_var_sys+31	;volatile
 11826  004590  C0D2  F120         	movff	_var_sys_NVM+58,_var_sys+32	;volatile
 11827  004594  C0D3  F121         	movff	_var_sys_NVM+59,_var_sys+33	;volatile
 11828                           
 11829                           ;sm_ControlGate_MC50.c: 410:         var_sys.AutoInversionActiveStop = NO;
 11830  004598  0E00               	movlw	0
 11831  00459A  6F12               	movwf	(_var_sys+18)& (0+255),b	;volatile
 11832                           
 11833                           ;sm_ControlGate_MC50.c: 411:         var_sys.PositionIsLost = NO;
 11834  00459C  0E00               	movlw	0
 11835  00459E  6F48               	movwf	(_var_sys+72)& (0+255),b	;volatile
 11836                           
 11837                           ;sm_ControlGate_MC50.c: 412:         var_sys.DigitSinalizedTemp = 1;
 11838  0045A0  0E01               	movlw	1
 11839  0045A2  6F22               	movwf	(_var_sys+34)& (0+255),b	;volatile
 11840                           
 11841                           ;sm_ControlGate_MC50.c: 413:         var_sys.NumberOffErrors = 0;
 11842  0045A4  0E00               	movlw	0
 11843  0045A6  6F43               	movwf	(_var_sys+67)& (0+255),b	;volatile
 11844                           
 11845                           ;sm_ControlGate_MC50.c: 414:         ts_system.timeSinalizationDigit = (1000/50) * 2;
 11846  0045A8  0E00               	movlw	0
 11847  0045AA  6FA7               	movwf	(_ts_system+13)& (0+255),b	;volatile
 11848  0045AC  0E28               	movlw	40
 11849  0045AE  6FA6               	movwf	(_ts_system+12)& (0+255),b	;volatile
 11850                           
 11851                           ; BSR set to: 1
 11852                           ;sm_ControlGate_MC50.c: 415:         SetSegmentValueIntermitent(dF, d0, ( 200/50));
 11853  0045B0  0E00               	movlw	0
 11854  0045B2  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 11855  0045B4  0E00               	movlw	0
 11856  0045B6  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 11857  0045B8  0E04               	movlw	4
 11858  0045BA  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 11859  0045BC  0E0F               	movlw	15
 11860  0045BE  EC94  F045         	call	_SetSegmentValueIntermitent
 11861                           
 11862                           ; BSR set to: 1
 11863                           ;sm_ControlGate_MC50.c: 416:         StopOrder();
 11864  0045C2  EC8F  F047         	call	_StopOrder	;wreg free
 11865                           
 11866                           ;sm_ControlGate_MC50.c: 417:         var_sys.passoAPassoAutoClose = YES;
 11867  0045C6  0E01               	movlw	1
 11868  0045C8  0101               	movlb	1	; () banked
 11869  0045CA  6F50               	movwf	(_var_sys+80)& (0+255),b	;volatile
 11870                           
 11871                           ;sm_ControlGate_MC50.c: 419:     }
 11872  0045CC  0012               	return	
 11873  0045CE                     l21382:
 11874                           
 11875                           ; BSR set to: 1
 11876  0045CE  0100               	movlb	0	; () banked
 11877  0045D0  05E5               	decf	actionZone_Opening@securityOpening& (0+255),w,b
 11878  0045D2  B4D8               	btfsc	status,2,c
 11879  0045D4  D012               	goto	u24870
 11880                           
 11881                           ; BSR set to: 0
 11882  0045D6  0101               	movlb	1	; () banked
 11883  0045D8  BFC5               	btfsc	(_ts_system+43)& (0+255),7,b	;volatile
 11884  0045DA  D025               	goto	l21402
 11885  0045DC  51C5               	movf	(_ts_system+43)& (0+255),w,b	;volatile
 11886  0045DE  E103               	bnz	u24850
 11887  0045E0  05C4               	decf	(_ts_system+42)& (0+255),w,b	;volatile
 11888  0045E2  A0D8               	btfss	status,0,c
 11889  0045E4  D020               	goto	l21402
 11890  0045E6                     u24850:
 11891                           
 11892                           ; BSR set to: 1
 11893  0045E6  0541               	decf	(_var_sys+65)& (0+255),w,b	;volatile
 11894  0045E8  A4D8               	btfss	status,2,c
 11895  0045EA  D01D               	goto	l21402
 11896                           
 11897                           ; BSR set to: 1
 11898  0045EC  BFCB               	btfsc	(_ts_system+49)& (0+255),7,b	;volatile
 11899  0045EE  D005               	goto	u24870
 11900  0045F0  51CB               	movf	(_ts_system+49)& (0+255),w,b	;volatile
 11901  0045F2  E119               	bnz	l21402
 11902  0045F4  05CA               	decf	(_ts_system+48)& (0+255),w,b	;volatile
 11903  0045F6  B0D8               	btfsc	status,0,c
 11904  0045F8  D016               	goto	l21402
 11905  0045FA                     u24870:
 11906  0045FA  0101               	movlb	1	; () banked
 11907  0045FC  5127               	movf	(_var_sys+39)& (0+255),w,b	;volatile
 11908  0045FE  A4D8               	btfss	status,2,c
 11909  004600  D012               	goto	l21402
 11910                           
 11911                           ; BSR set to: 1
 11912                           ;sm_ControlGate_MC50.c: 422:         if (securityOpening != YES){
 11913  004602  0100               	movlb	0	; () banked
 11914  004604  05E5               	decf	actionZone_Opening@securityOpening& (0+255),w,b
 11915  004606  B4D8               	btfsc	status,2,c
 11916  004608  D002               	goto	l21396
 11917                           
 11918                           ; BSR set to: 0
 11919                           ;sm_ControlGate_MC50.c: 423:              var_sys.NumberOffErrors++;
 11920  00460A  0101               	movlb	1	; () banked
 11921  00460C  2B43               	incf	(_var_sys+67)& (0+255),f,b	;volatile
 11922  00460E                     l21396:
 11923                           
 11924                           ;sm_ControlGate_MC50.c: 426:         var_sys.AutoInversionActive = YES;
 11925  00460E  0E01               	movlw	1
 11926  004610  0101               	movlb	1	; () banked
 11927  004612  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 11928                           
 11929                           ; BSR set to: 1
 11930                           ;sm_ControlGate_MC50.c: 427:         ts_system.TimeWaitToNextState = ( 500/50);
 11931  004614  0E00               	movlw	0
 11932  004616  6FBF               	movwf	(_ts_system+37)& (0+255),b	;volatile
 11933  004618  0E0A               	movlw	10
 11934  00461A  6FBE               	movwf	(_ts_system+36)& (0+255),b	;volatile
 11935                           
 11936                           ; BSR set to: 1
 11937                           ;sm_ControlGate_MC50.c: 428:         ts_system.TimeStopElectricBrake = ((1000/50)+( 500/
      +                          50));
 11938  00461C  0E00               	movlw	0
 11939  00461E  6FDB               	movwf	(_ts_system+65)& (0+255),b	;volatile
 11940  004620  0E1E               	movlw	30
 11941  004622  6FDA               	movwf	(_ts_system+64)& (0+255),b	;volatile
 11942                           
 11943                           ;sm_ControlGate_MC50.c: 430:     }
 11944  004624  0012               	return	
 11945  004626                     l21402:
 11946                           
 11947                           ; BSR set to: 1
 11948  004626  BFC5               	btfsc	(_ts_system+43)& (0+255),7,b	;volatile
 11949  004628  D02D               	goto	l21432
 11950  00462A  51C5               	movf	(_ts_system+43)& (0+255),w,b	;volatile
 11951  00462C  E103               	bnz	u24900
 11952  00462E  05C4               	decf	(_ts_system+42)& (0+255),w,b	;volatile
 11953  004630  A0D8               	btfss	status,0,c
 11954  004632  D028               	goto	l21432
 11955  004634                     u24900:
 11956                           
 11957                           ; BSR set to: 1
 11958  004634  0527               	decf	(_var_sys+39)& (0+255),w,b	;volatile
 11959  004636  A4D8               	btfss	status,2,c
 11960  004638  D025               	goto	l21432
 11961                           
 11962                           ; BSR set to: 1
 11963                           ;sm_ControlGate_MC50.c: 432:         if (var_sys.InvertionCurrentClosing == YES) {
 11964  00463A  0544               	decf	(_var_sys+68)& (0+255),w,b	;volatile
 11965  00463C  A4D8               	btfss	status,2,c
 11966  00463E  D005               	goto	l21414
 11967                           
 11968                           ; BSR set to: 1
 11969                           ;sm_ControlGate_MC50.c: 434:             var_sys.StateMotor = Stopped;
 11970  004640  0E00               	movlw	0
 11971  004642  6F00               	movwf	_var_sys& (0+255),b	;volatile
 11972                           
 11973                           ; BSR set to: 1
 11974                           ;sm_ControlGate_MC50.c: 435:             setPositionInvertionInClosing();
 11975  004644  ECBB  F031         	call	_setPositionInvertionInClosing	;wreg free
 11976  004648  D768               	goto	l21346
 11977  00464A                     l21414:
 11978                           
 11979                           ; BSR set to: 1
 11980  00464A  BFBF               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 11981  00464C  D005               	goto	u24930
 11982  00464E  51BF               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 11983  004650  E116               	bnz	l21430
 11984  004652  05BE               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 11985  004654  B0D8               	btfsc	status,0,c
 11986  004656  D013               	goto	l21430
 11987  004658                     u24930:
 11988                           
 11989                           ; BSR set to: 1
 11990                           ;sm_ControlGate_MC50.c: 438:             CloseOrder();
 11991  004658  ECDA  F046         	call	_CloseOrder	;wreg free
 11992                           
 11993                           ;sm_ControlGate_MC50.c: 440:             setPositionInvertionInOpening();
 11994  00465C  EC62  F036         	call	_setPositionInvertionInOpening	;wreg free
 11995                           
 11996                           ; BSR set to: 1
 11997                           ;sm_ControlGate_MC50.c: 441:             var_sys.AutoInversionActive = NO;
 11998  004660  0E00               	movlw	0
 11999  004662  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 12000                           
 12001                           ; BSR set to: 1
 12002                           ;sm_ControlGate_MC50.c: 442:             var_sys.InvertionCurrentOpening = YES;
 12003  004664  0E01               	movlw	1
 12004  004666  6F45               	movwf	(_var_sys+69)& (0+255),b	;volatile
 12005                           
 12006                           ; BSR set to: 1
 12007                           ;sm_ControlGate_MC50.c: 443:             ts_system.TimeInversionStart = (1000/50);
 12008  004668  0E00               	movlw	0
 12009  00466A  6FCB               	movwf	(_ts_system+49)& (0+255),b	;volatile
 12010  00466C  0E14               	movlw	20
 12011  00466E  6FCA               	movwf	(_ts_system+48)& (0+255),b	;volatile
 12012                           
 12013                           ; BSR set to: 1
 12014                           ;sm_ControlGate_MC50.c: 444:             ts_system.InvertionTimeClosingFromOpen = (1000/
      +                          50) * 2;
 12015  004670  0E00               	movlw	0
 12016  004672  6FCD               	movwf	(_ts_system+51)& (0+255),b	;volatile
 12017  004674  0E28               	movlw	40
 12018  004676  6FCC               	movwf	(_ts_system+50)& (0+255),b	;volatile
 12019                           
 12020                           ; BSR set to: 1
 12021                           ;sm_ControlGate_MC50.c: 445:             var_sys.InvertionClosingFromOpen = YES;
 12022  004678  0E01               	movlw	1
 12023  00467A  6F46               	movwf	(_var_sys+70)& (0+255),b	;volatile
 12024                           
 12025                           ;sm_ControlGate_MC50.c: 449:         } else
 12026  00467C  0012               	return	
 12027  00467E                     l21430:
 12028                           
 12029                           ; BSR set to: 1
 12030                           ;sm_ControlGate_MC50.c: 450:         {;sm_ControlGate_MC50.c: 451:             var_sys.S
      +                          tateMotor = Stopped;
 12031  00467E  0E00               	movlw	0
 12032  004680  6F00               	movwf	_var_sys& (0+255),b	;volatile
 12033  004682  0012               	return	
 12034  004684                     l21432:
 12035                           
 12036                           ; BSR set to: 1
 12037  004684  0527               	decf	(_var_sys+39)& (0+255),w,b	;volatile
 12038  004686  A4D8               	btfss	status,2,c
 12039  004688  D00A               	goto	l21452
 12040                           
 12041                           ; BSR set to: 1
 12042                           ;sm_ControlGate_MC50.c: 457:                 var_sys.StateMotor = Stopped;
 12043  00468A  0E00               	movlw	0
 12044  00468C  6F00               	movwf	_var_sys& (0+255),b	;volatile
 12045                           
 12046                           ; BSR set to: 1
 12047                           ;sm_ControlGate_MC50.c: 460:         if (ts_system.TimeWaitToNextState <= 0) {
 12048  00468E  BFBF               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 12049  004690  D7E3               	goto	u24930
 12050  004692  51BF               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 12051  004694  E14E               	bnz	l2718
 12052  004696  05BE               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 12053  004698  B0D8               	btfsc	status,0,c
 12054  00469A  0012               	return	
 12055  00469C  D7DD               	goto	u24930
 12056  00469E                     l21452:
 12057                           
 12058                           ; BSR set to: 1
 12059  00469E  5100               	movf	_var_sys& (0+255),w,b	;volatile
 12060  0046A0  A4D8               	btfss	status,2,c
 12061  0046A2  D018               	goto	l21470
 12062                           
 12063                           ; BSR set to: 1
 12064  0046A4  BFBF               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 12065  0046A6  D005               	goto	u24970
 12066  0046A8  51BF               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 12067  0046AA  E114               	bnz	l21470
 12068  0046AC  05BE               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 12069  0046AE  B0D8               	btfsc	status,0,c
 12070  0046B0  D011               	goto	l21470
 12071  0046B2                     u24970:
 12072                           
 12073                           ; BSR set to: 1
 12074                           ;sm_ControlGate_MC50.c: 479:       if(securityOpening != ST){
 12075  0046B2  0E02               	movlw	2
 12076  0046B4  0100               	movlb	0	; () banked
 12077  0046B6  19E5               	xorwf	actionZone_Opening@securityOpening& (0+255),w,b
 12078  0046B8  B4D8               	btfsc	status,2,c
 12079  0046BA  D007               	goto	l21466
 12080                           
 12081                           ; BSR set to: 0
 12082                           ;sm_ControlGate_MC50.c: 480:         var_sys.NumberOffErrors++;
 12083  0046BC  0101               	movlb	1	; () banked
 12084  0046BE  2B43               	incf	(_var_sys+67)& (0+255),f,b	;volatile
 12085                           
 12086                           ; BSR set to: 1
 12087                           ;sm_ControlGate_MC50.c: 482:         var_sys.StateMotor = Stopped;
 12088  0046C0  0E00               	movlw	0
 12089  0046C2  6F00               	movwf	_var_sys& (0+255),b	;volatile
 12090                           
 12091                           ; BSR set to: 1
 12092                           ;sm_ControlGate_MC50.c: 483:         setPositionInvertionInOpening();
 12093  0046C4  EC62  F036         	call	_setPositionInvertionInOpening	;wreg free
 12094  0046C8  D728               	goto	l21346
 12095  0046CA                     l21466:
 12096                           
 12097                           ; BSR set to: 0
 12098                           ;sm_ControlGate_MC50.c: 486:           setPositionInvertionInOpening();
 12099  0046CA  EC62  F036         	call	_setPositionInvertionInOpening	;wreg free
 12100  0046CE                     l21468:
 12101                           
 12102                           ;sm_ControlGate_MC50.c: 487:           StopOrder();
 12103  0046CE  EC8F  F047         	call	_StopOrder	;wreg free
 12104  0046D2  0012               	return	
 12105  0046D4                     l21470:
 12106                           
 12107                           ; BSR set to: 1
 12108  0046D4  0100               	movlb	0	; () banked
 12109  0046D6  05A8               	decf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 12110  0046D8  A4D8               	btfss	status,2,c
 12111  0046DA  D005               	goto	l21476
 12112                           
 12113                           ; BSR set to: 0
 12114                           ;sm_ControlGate_MC50.c: 492:         if (typeOpenOrder != TypeFullOpen) {
 12115  0046DC  0E03               	movlw	3
 12116  0046DE  19E6               	xorwf	actionZone_Opening@typeOpenOrder& (0+255),w,b
 12117  0046E0  B4D8               	btfsc	status,2,c
 12118  0046E2  0012               	return	
 12119  0046E4  D7F4               	goto	l21468
 12120  0046E6                     l21476:
 12121                           
 12122                           ; BSR set to: 0
 12123  0046E6  0E02               	movlw	2
 12124  0046E8  19E6               	xorwf	actionZone_Opening@typeOpenOrder& (0+255),w,b
 12125  0046EA  A4D8               	btfss	status,2,c
 12126  0046EC  D011               	goto	l21488
 12127                           
 12128                           ; BSR set to: 0
 12129  0046EE  0E02               	movlw	2
 12130  0046F0  0101               	movlb	1	; () banked
 12131  0046F2  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 12132  0046F4  A4D8               	btfss	status,2,c
 12133  0046F6  D00C               	goto	l21488
 12134                           
 12135                           ; BSR set to: 1
 12136  0046F8  0E02               	movlw	2
 12137  0046FA  0100               	movlb	0	; () banked
 12138  0046FC  19A4               	xorwf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 12139  0046FE  B4D8               	btfsc	status,2,c
 12140  004700  D007               	goto	l21488
 12141                           
 12142                           ; BSR set to: 0
 12143                           ;sm_ControlGate_MC50.c: 502:         setPositionInvertionInOpening();
 12144  004702  EC62  F036         	call	_setPositionInvertionInOpening	;wreg free
 12145                           
 12146                           ; BSR set to: 1
 12147                           ;sm_ControlGate_MC50.c: 503:         StopOrder();
 12148  004706  EC8F  F047         	call	_StopOrder	;wreg free
 12149                           
 12150                           ;sm_ControlGate_MC50.c: 504:         InitWalkAutoTime();
 12151  00470A  EC66  F048         	call	_InitWalkAutoTime	;wreg free
 12152                           
 12153                           ;sm_ControlGate_MC50.c: 505:     } else if ((typeOpenOrder == TypeFull || typeOpenOrder 
      +                          == TypeFullOpen || typeOpenOrder == TypeFullClose) && var_sys_NVM.operationMode != ModoC
      +                          ondominio) {
 12154  00470E  0012               	return	
 12155  004710                     l21488:
 12156  004710  0100               	movlb	0	; () banked
 12157  004712  05E6               	decf	actionZone_Opening@typeOpenOrder& (0+255),w,b
 12158  004714  B4D8               	btfsc	status,2,c
 12159  004716  D008               	goto	u25060
 12160                           
 12161                           ; BSR set to: 0
 12162  004718  0E03               	movlw	3
 12163  00471A  19E6               	xorwf	actionZone_Opening@typeOpenOrder& (0+255),w,b
 12164  00471C  B4D8               	btfsc	status,2,c
 12165  00471E  D004               	goto	u25060
 12166                           
 12167                           ; BSR set to: 0
 12168  004720  0E04               	movlw	4
 12169  004722  19E6               	xorwf	actionZone_Opening@typeOpenOrder& (0+255),w,b
 12170  004724  A4D8               	btfss	status,2,c
 12171  004726  0012               	return	
 12172  004728                     u25060:
 12173                           
 12174                           ; BSR set to: 0
 12175  004728  0E02               	movlw	2
 12176  00472A  19A4               	xorwf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 12177  00472C  B4D8               	btfsc	status,2,c
 12178  00472E  0012               	return	
 12179  004730  D7CC               	goto	l21466
 12180  004732                     l2718:
 12181  004732  0012               	return		;funcret
 12182  004734                     __end_of_actionZone_Opening:
 12183                           	callstack 0
 12184                           
 12185 ;; *************** function _setPositionInvertionInOpening *****************
 12186 ;; Defined at:
 12187 ;;		line 894 in file "sm_ControlGate_MC50.c"
 12188 ;; Parameters:    Size  Location     Type
 12189 ;;		None
 12190 ;; Auto vars:     Size  Location     Type
 12191 ;;		None
 12192 ;; Return value:  Size  Location     Type
 12193 ;;                  1    wreg      void 
 12194 ;; Registers used:
 12195 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12196 ;; Tracked objects:
 12197 ;;		On entry : 3E/1
 12198 ;;		On exit  : 3F/1
 12199 ;;		Unchanged: 0/0
 12200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12201 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12202 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12203 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12204 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12205 ;;Total ram usage:        8 bytes
 12206 ;; Hardware stack levels used: 1
 12207 ;; Hardware stack levels required when called: 6
 12208 ;; This function calls:
 12209 ;;		_getTimeDecelaration
 12210 ;; This function is called by:
 12211 ;;		_actionZone_Opening
 12212 ;; This function uses a non-reentrant model
 12213 ;;
 12214                           
 12215                           	psect	text28
 12216  006CC4                     __ptext28:
 12217                           	callstack 0
 12218  006CC4                     _setPositionInvertionInOpening:
 12219                           	callstack 22
 12220                           
 12221                           ;sm_ControlGate_MC50.c: 896:     if(var_sys_NVM.TypeofMotor != 2){
 12222                           
 12223                           ;incstack = 0
 12224  006CC4  0E02               	movlw	2
 12225  006CC6  0100               	movlb	0	; () banked
 12226  006CC8  19B4               	xorwf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 12227  006CCA  B4D8               	btfsc	status,2,c
 12228  006CCC  D009               	goto	l20436
 12229                           
 12230                           ; BSR set to: 0
 12231                           ;sm_ControlGate_MC50.c: 897:        var_sys.PositionActual -= ( 100/50);
 12232  006CCE  0EFE               	movlw	254
 12233  006CD0  0101               	movlb	1	; () banked
 12234  006CD2  271E               	addwf	(_var_sys+30)& (0+255),f,b	;volatile
 12235  006CD4  0EFF               	movlw	255
 12236  006CD6  231F               	addwfc	(_var_sys+31)& (0+255),f,b	;volatile
 12237  006CD8  0EFF               	movlw	255
 12238  006CDA  2320               	addwfc	(_var_sys+32)& (0+255),f,b	;volatile
 12239  006CDC  0EFF               	movlw	255
 12240  006CDE  D006               	goto	L69
 12241  006CE0                     l20436:
 12242                           
 12243                           ; BSR set to: 0
 12244                           ;sm_ControlGate_MC50.c: 901:          var_sys.PositionActual += ( 50/50);
 12245  006CE0  0E01               	movlw	1
 12246  006CE2  0101               	movlb	1	; () banked
 12247  006CE4  271E               	addwf	(_var_sys+30)& (0+255),f,b	;volatile
 12248  006CE6  0E00               	movlw	0
 12249  006CE8  231F               	addwfc	(_var_sys+31)& (0+255),f,b	;volatile
 12250  006CEA  2320               	addwfc	(_var_sys+32)& (0+255),f,b	;volatile
 12251  006CEC                     L69:
 12252  006CEC  2321               	addwfc	(_var_sys+33)& (0+255),f,b	;volatile
 12253                           
 12254                           ; BSR set to: 1
 12255                           ;sm_ControlGate_MC50.c: 906:     if (var_sys.PositionActual < getTimeDecelaration(InClos
      +                          e)) {
 12256  006CEE  0E03               	movlw	3
 12257  006CF0  ECEE  F035         	call	_getTimeDecelaration
 12258  006CF4  5029               	movf	?_getTimeDecelaration^0,w,c
 12259  006CF6  0101               	movlb	1	; () banked
 12260  006CF8  5D1E               	subwf	(_var_sys+30)& (0+255),w,b	;volatile
 12261  006CFA  502A               	movf	(?_getTimeDecelaration+1)^0,w,c
 12262  006CFC  591F               	subwfb	(_var_sys+31)& (0+255),w,b	;volatile
 12263  006CFE  502B               	movf	(?_getTimeDecelaration+2)^0,w,c
 12264  006D00  5920               	subwfb	(_var_sys+32)& (0+255),w,b	;volatile
 12265  006D02  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 12266  006D04  0A80               	xorlw	128
 12267  006D06  6E32               	movwf	??_setPositionInvertionInOpening^0,c
 12268  006D08  502C               	movf	(?_getTimeDecelaration+3)^0,w,c
 12269  006D0A  0A80               	xorlw	128
 12270  006D0C  5832               	subwfb	??_setPositionInvertionInOpening^0,w,c
 12271  006D0E  B0D8               	btfsc	status,0,c
 12272  006D10  D004               	goto	l20442
 12273                           
 12274                           ; BSR set to: 1
 12275                           ;sm_ControlGate_MC50.c: 907:         var_sys.PositionActual = getTimeDecelaration(InClos
      +                          e);
 12276  006D12  0E03               	movlw	3
 12277  006D14  ECEE  F035         	call	_getTimeDecelaration
 12278  006D18  D015               	goto	L70
 12279  006D1A                     l20442:
 12280                           
 12281                           ; BSR set to: 1
 12282  006D1A  0E01               	movlw	1
 12283  006D1C  ECEE  F035         	call	_getTimeDecelaration
 12284  006D20  0101               	movlb	1	; () banked
 12285  006D22  511E               	movf	(_var_sys+30)& (0+255),w,b	;volatile
 12286  006D24  5C29               	subwf	?_getTimeDecelaration^0,w,c
 12287  006D26  511F               	movf	(_var_sys+31)& (0+255),w,b	;volatile
 12288  006D28  582A               	subwfb	(?_getTimeDecelaration+1)^0,w,c
 12289  006D2A  5120               	movf	(_var_sys+32)& (0+255),w,b	;volatile
 12290  006D2C  582B               	subwfb	(?_getTimeDecelaration+2)^0,w,c
 12291  006D2E  502C               	movf	(?_getTimeDecelaration+3)^0,w,c
 12292  006D30  0A80               	xorlw	128
 12293  006D32  6E32               	movwf	??_setPositionInvertionInOpening^0,c
 12294  006D34  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 12295  006D36  0A80               	xorlw	128
 12296  006D38  5832               	subwfb	??_setPositionInvertionInOpening^0,w,c
 12297  006D3A  B0D8               	btfsc	status,0,c
 12298  006D3C  D00B               	goto	l20446
 12299                           
 12300                           ; BSR set to: 1
 12301                           ;sm_ControlGate_MC50.c: 909:         var_sys.PositionActual = getTimeDecelaration(InOpen
      +                          Full);
 12302  006D3E  0E01               	movlw	1
 12303  006D40  ECEE  F035         	call	_getTimeDecelaration
 12304  006D44                     L70:
 12305  006D44  C029  F11E         	movff	?_getTimeDecelaration,_var_sys+30	;volatile
 12306  006D48  C02A  F11F         	movff	?_getTimeDecelaration+1,_var_sys+31	;volatile
 12307  006D4C  C02B  F120         	movff	?_getTimeDecelaration+2,_var_sys+32	;volatile
 12308  006D50  C02C  F121         	movff	?_getTimeDecelaration+3,_var_sys+33	;volatile
 12309  006D54                     l20446:
 12310                           
 12311                           ;sm_ControlGate_MC50.c: 911:     var_sys.TimeMaxMotorIsON = var_sys.PositionActual + var
      +                          _sys_NVM.decelarationClose*( 500/50) + (1000/50)*10;
 12312  006D54  0100               	movlb	0	; () banked
 12313  006D56  5199               	movf	(_var_sys_NVM+1)& (0+255),w,b	;volatile
 12314  006D58  0D0A               	mullw	10
 12315  006D5A  CFF3 F032          	movff	prodl,??_setPositionInvertionInOpening
 12316  006D5E  CFF4 F033          	movff	prodh,??_setPositionInvertionInOpening+1
 12317  006D62  0E00               	movlw	0
 12318  006D64  BE33               	btfsc	(??_setPositionInvertionInOpening+1)^0,7,c
 12319  006D66  0EFF               	movlw	255
 12320  006D68  6E34               	movwf	(??_setPositionInvertionInOpening+2)^0,c
 12321  006D6A  6E35               	movwf	(??_setPositionInvertionInOpening+3)^0,c
 12322  006D6C  0101               	movlb	1	; () banked
 12323  006D6E  511E               	movf	(_var_sys+30)& (0+255),w,b	;volatile
 12324  006D70  2432               	addwf	??_setPositionInvertionInOpening^0,w,c
 12325  006D72  6E36               	movwf	(??_setPositionInvertionInOpening+4)^0,c
 12326  006D74  511F               	movf	(_var_sys+31)& (0+255),w,b	;volatile
 12327  006D76  2033               	addwfc	(??_setPositionInvertionInOpening+1)^0,w,c
 12328  006D78  6E37               	movwf	(??_setPositionInvertionInOpening+5)^0,c
 12329  006D7A  5120               	movf	(_var_sys+32)& (0+255),w,b	;volatile
 12330  006D7C  2034               	addwfc	(??_setPositionInvertionInOpening+2)^0,w,c
 12331  006D7E  6E38               	movwf	(??_setPositionInvertionInOpening+6)^0,c
 12332  006D80  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 12333  006D82  2035               	addwfc	(??_setPositionInvertionInOpening+3)^0,w,c
 12334  006D84  6E39               	movwf	(??_setPositionInvertionInOpening+7)^0,c
 12335  006D86  0EC8               	movlw	200
 12336  006D88  2436               	addwf	(??_setPositionInvertionInOpening+4)^0,w,c
 12337  006D8A  6F18               	movwf	(_var_sys+24)& (0+255),b	;volatile
 12338  006D8C  0E00               	movlw	0
 12339  006D8E  2037               	addwfc	(??_setPositionInvertionInOpening+5)^0,w,c
 12340  006D90  6F19               	movwf	(_var_sys+25)& (0+255),b	;volatile
 12341  006D92  0E00               	movlw	0
 12342  006D94  2038               	addwfc	(??_setPositionInvertionInOpening+6)^0,w,c
 12343  006D96  6F1A               	movwf	(_var_sys+26)& (0+255),b	;volatile
 12344  006D98  0E00               	movlw	0
 12345  006D9A  2039               	addwfc	(??_setPositionInvertionInOpening+7)^0,w,c
 12346  006D9C  6F1B               	movwf	(_var_sys+27)& (0+255),b	;volatile
 12347                           
 12348                           ; BSR set to: 1
 12349  006D9E  0012               	return		;funcret
 12350  006DA0                     __end_of_setPositionInvertionInOpening:
 12351                           	callstack 0
 12352                           
 12353 ;; *************** function _controlVelocity *****************
 12354 ;; Defined at:
 12355 ;;		line 527 in file "outputs_MC50.c"
 12356 ;; Parameters:    Size  Location     Type
 12357 ;;		None
 12358 ;; Auto vars:     Size  Location     Type
 12359 ;;		None
 12360 ;; Return value:  Size  Location     Type
 12361 ;;                  1    wreg      void 
 12362 ;; Registers used:
 12363 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12364 ;; Tracked objects:
 12365 ;;		On entry : 3E/1
 12366 ;;		On exit  : 3E/0
 12367 ;;		Unchanged: 0/0
 12368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12369 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12370 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12371 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12372 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12373 ;;Total ram usage:        1 bytes
 12374 ;; Hardware stack levels used: 1
 12375 ;; Hardware stack levels required when called: 7
 12376 ;; This function calls:
 12377 ;;		_ControlDecelarationFactor
 12378 ;;		_InitSoftStop
 12379 ;;		_getStateOpenPosition
 12380 ;;		_getTimeDecelaration
 12381 ;; This function is called by:
 12382 ;;		_main
 12383 ;;		_actionZone_Opening
 12384 ;; This function uses a non-reentrant model
 12385 ;;
 12386                           
 12387                           	psect	text29
 12388  004BA0                     __ptext29:
 12389                           	callstack 0
 12390  004BA0                     _controlVelocity:
 12391                           	callstack 21
 12392                           
 12393                           ;outputs_MC50.c: 531:     if(var_sys.LearningIsEnabled==YES && var_sys.LearningDecelarat
      +                          ion==YES)
 12394                           
 12395                           ; BSR set to: 1
 12396                           ;incstack = 0
 12397  004BA0  0101               	movlb	1	; () banked
 12398  004BA2  0526               	decf	(_var_sys+38)& (0+255),w,b	;volatile
 12399  004BA4  A4D8               	btfss	status,2,c
 12400  004BA6  D017               	goto	l20248
 12401                           
 12402                           ; BSR set to: 1
 12403  004BA8  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 12404  004BAA  A4D8               	btfss	status,2,c
 12405  004BAC  D014               	goto	l20248
 12406                           
 12407                           ; BSR set to: 1
 12408                           ;outputs_MC50.c: 532:     {;outputs_MC50.c: 533:         if(powerControl_st.decelaration
      +                          Active==NO)
 12409  004BAE  517B               	movf	_powerControl_st& (0+255),w,b
 12410  004BB0  A4D8               	btfss	status,2,c
 12411  004BB2  D008               	goto	l20242
 12412                           
 12413                           ; BSR set to: 1
 12414                           ;outputs_MC50.c: 534:         {;outputs_MC50.c: 535:             ts_system.TimeStopedBef
      +                          oreDecelaration=( 500/50);
 12415  004BB4  0E00               	movlw	0
 12416  004BB6  6FC7               	movwf	(_ts_system+45)& (0+255),b	;volatile
 12417  004BB8  0E0A               	movlw	10
 12418  004BBA  6FC6               	movwf	(_ts_system+44)& (0+255),b	;volatile
 12419                           
 12420                           ;outputs_MC50.c: 536:             ts_system.TimeCurrentWaitForAlarm=(1000/50);
 12421  004BBC  0E00               	movlw	0
 12422  004BBE  6FC9               	movwf	(_ts_system+47)& (0+255),b	;volatile
 12423  004BC0  0E14               	movlw	20
 12424  004BC2  6FC8               	movwf	(_ts_system+46)& (0+255),b	;volatile
 12425  004BC4                     l20242:
 12426                           
 12427                           ; BSR set to: 1
 12428                           ;outputs_MC50.c: 538:         ControlDecelarationFactor();
 12429  004BC4  EC08  F048         	call	_ControlDecelarationFactor	;wreg free
 12430                           
 12431                           ; BSR set to: 1
 12432                           ;outputs_MC50.c: 539:         powerControl_st.decelarationActive=YES;
 12433  004BC8  0E01               	movlw	1
 12434  004BCA  6F7B               	movwf	_powerControl_st& (0+255),b
 12435                           
 12436                           ; BSR set to: 1
 12437                           ;outputs_MC50.c: 540:         var_sys.velocityFactor=0;
 12438  004BCC  0E00               	movlw	0
 12439  004BCE  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 12440  004BD0  0E00               	movlw	0
 12441  004BD2  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 12442                           
 12443                           ;outputs_MC50.c: 541:     }
 12444  004BD4  0012               	return	
 12445  004BD6                     l20248:
 12446                           
 12447                           ; BSR set to: 1
 12448  004BD6  0526               	decf	(_var_sys+38)& (0+255),w,b	;volatile
 12449  004BD8  B4D8               	btfsc	status,2,c
 12450  004BDA  D003               	goto	u23340
 12451                           
 12452                           ; BSR set to: 1
 12453  004BDC  0509               	decf	(_var_sys+9)& (0+255),w,b	;volatile
 12454  004BDE  A4D8               	btfss	status,2,c
 12455  004BE0  D007               	goto	l20254
 12456  004BE2                     u23340:
 12457                           
 12458                           ; BSR set to: 1
 12459                           ;outputs_MC50.c: 544:     {;outputs_MC50.c: 545:         var_sys.velocityFactor=0;
 12460  004BE2  0E00               	movlw	0
 12461  004BE4  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 12462  004BE6  0E00               	movlw	0
 12463  004BE8  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 12464                           
 12465                           ;outputs_MC50.c: 546:         powerControl_st.decelarationActive=NO;
 12466  004BEA  0E00               	movlw	0
 12467  004BEC  6F7B               	movwf	_powerControl_st& (0+255),b
 12468                           
 12469                           ;outputs_MC50.c: 547:     }
 12470  004BEE  0012               	return	
 12471  004BF0                     l20254:
 12472                           
 12473                           ; BSR set to: 1
 12474  004BF0  0E03               	movlw	3
 12475  004BF2  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 12476  004BF4  A4D8               	btfss	status,2,c
 12477  004BF6  D068               	goto	l20302
 12478                           
 12479                           ; BSR set to: 1
 12480  004BF8  0E03               	movlw	3
 12481  004BFA  ECEE  F035         	call	_getTimeDecelaration
 12482  004BFE  5029               	movf	?_getTimeDecelaration^0,w,c
 12483  004C00  0101               	movlb	1	; () banked
 12484  004C02  5D1E               	subwf	(_var_sys+30)& (0+255),w,b	;volatile
 12485  004C04  502A               	movf	(?_getTimeDecelaration+1)^0,w,c
 12486  004C06  591F               	subwfb	(_var_sys+31)& (0+255),w,b	;volatile
 12487  004C08  502B               	movf	(?_getTimeDecelaration+2)^0,w,c
 12488  004C0A  5920               	subwfb	(_var_sys+32)& (0+255),w,b	;volatile
 12489  004C0C  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 12490  004C0E  0A80               	xorlw	128
 12491  004C10  0100               	movlb	0	; () banked
 12492  004C12  6FDA               	movwf	??_controlVelocity& (0+255),b
 12493  004C14  502C               	movf	(?_getTimeDecelaration+3)^0,w,c
 12494  004C16  0A80               	xorlw	128
 12495  004C18  59DA               	subwfb	??_controlVelocity& (0+255),w,b
 12496  004C1A  A0D8               	btfss	status,0,c
 12497  004C1C  D004               	goto	u23370
 12498                           
 12499                           ; BSR set to: 0
 12500  004C1E  0101               	movlb	1	; () banked
 12501  004C20  0548               	decf	(_var_sys+72)& (0+255),w,b	;volatile
 12502  004C22  A4D8               	btfss	status,2,c
 12503  004C24  D051               	goto	l20302
 12504  004C26                     u23370:
 12505  004C26  0100               	movlb	0	; () banked
 12506  004C28  5199               	movf	(_var_sys_NVM+1)& (0+255),w,b	;volatile
 12507  004C2A  B4D8               	btfsc	status,2,c
 12508  004C2C  D004               	goto	u23390
 12509                           
 12510                           ; BSR set to: 0
 12511  004C2E  0101               	movlb	1	; () banked
 12512  004C30  5112               	movf	(_var_sys+18)& (0+255),w,b	;volatile
 12513  004C32  B4D8               	btfsc	status,2,c
 12514  004C34  D00C               	goto	u23410
 12515  004C36                     u23390:
 12516  004C36  0101               	movlb	1	; () banked
 12517  004C38  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 12518  004C3A  D005               	goto	u23400
 12519  004C3C  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 12520  004C3E  E144               	bnz	l20302
 12521  004C40  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 12522  004C42  B0D8               	btfsc	status,0,c
 12523  004C44  D041               	goto	l20302
 12524  004C46                     u23400:
 12525                           
 12526                           ; BSR set to: 1
 12527  004C46  0100               	movlb	0	; () banked
 12528  004C48  51AB               	movf	(_var_sys_NVM+19)& (0+255),w,b	;volatile
 12529  004C4A  B4D8               	btfsc	status,2,c
 12530  004C4C  D03D               	goto	l20302
 12531  004C4E                     u23410:
 12532                           
 12533                           ;outputs_MC50.c: 550:     {;outputs_MC50.c: 552:             if ((powerControl_st.decela
      +                          rationActive==NO) && (var_sys.AutoInversionActiveStop==NO ))
 12534  004C4E  0101               	movlb	1	; () banked
 12535  004C50  517B               	movf	_powerControl_st& (0+255),w,b
 12536  004C52  A4D8               	btfss	status,2,c
 12537  004C54  D022               	goto	l20288
 12538                           
 12539                           ; BSR set to: 1
 12540  004C56  5112               	movf	(_var_sys+18)& (0+255),w,b	;volatile
 12541  004C58  A4D8               	btfss	status,2,c
 12542  004C5A  D01F               	goto	l20288
 12543                           
 12544                           ; BSR set to: 1
 12545                           ;outputs_MC50.c: 553:                 {;outputs_MC50.c: 556:                     ts_syst
      +                          em.TimeCurrentWaitForAlarm=(1000/50);
 12546  004C5C  0E00               	movlw	0
 12547  004C5E  6FC9               	movwf	(_ts_system+47)& (0+255),b	;volatile
 12548  004C60  0E14               	movlw	20
 12549  004C62  6FC8               	movwf	(_ts_system+46)& (0+255),b	;volatile
 12550                           
 12551                           ;outputs_MC50.c: 558:                     if (var_sys_NVM.softstop > 0){
 12552  004C64  0100               	movlb	0	; () banked
 12553  004C66  51AB               	movf	(_var_sys_NVM+19)& (0+255),w,b	;volatile
 12554  004C68  B4D8               	btfsc	status,2,c
 12555  004C6A  D008               	goto	l20278
 12556                           
 12557                           ; BSR set to: 0
 12558                           ;outputs_MC50.c: 559:                         var_sys.AutoInversionActive = NO;
 12559  004C6C  0E00               	movlw	0
 12560  004C6E  0101               	movlb	1	; () banked
 12561  004C70  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 12562                           
 12563                           ;outputs_MC50.c: 560:                         var_sys.AutoInversionActiveStop = YES;
 12564  004C72  0E01               	movlw	1
 12565  004C74  6F12               	movwf	(_var_sys+18)& (0+255),b	;volatile
 12566                           
 12567                           ; BSR set to: 1
 12568                           ;outputs_MC50.c: 561:                         InitSoftStop();
 12569  004C76  EC71  F043         	call	_InitSoftStop	;wreg free
 12570                           
 12571                           ;outputs_MC50.c: 563:                     }
 12572  004C7A  D00F               	goto	l20288
 12573  004C7C                     l20278:
 12574                           
 12575                           ; BSR set to: 0
 12576                           ;outputs_MC50.c: 565:                     {;outputs_MC50.c: 566:                        
      +                           ts_system.TimeStopedBeforeDecelaration=( 500/50);
 12577  004C7C  0E00               	movlw	0
 12578  004C7E  0101               	movlb	1	; () banked
 12579  004C80  6FC7               	movwf	(_ts_system+45)& (0+255),b	;volatile
 12580  004C82  0E0A               	movlw	10
 12581  004C84  6FC6               	movwf	(_ts_system+44)& (0+255),b	;volatile
 12582                           
 12583                           ; BSR set to: 1
 12584                           ;outputs_MC50.c: 567:                         ControlDecelarationFactor();
 12585  004C86  EC08  F048         	call	_ControlDecelarationFactor	;wreg free
 12586                           
 12587                           ; BSR set to: 1
 12588                           ;outputs_MC50.c: 568:                         powerControl_st.decelarationActive=YES;
 12589  004C8A  0E01               	movlw	1
 12590  004C8C  6F7B               	movwf	_powerControl_st& (0+255),b
 12591                           
 12592                           ; BSR set to: 1
 12593                           ;outputs_MC50.c: 569:                         var_sys.velocityFactor=0;
 12594  004C8E  0E00               	movlw	0
 12595  004C90  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 12596  004C92  0E00               	movlw	0
 12597  004C94  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 12598                           
 12599                           ; BSR set to: 1
 12600                           ;outputs_MC50.c: 570:                          var_sys.AutoInversionActiveStop = NO;
 12601  004C96  0E00               	movlw	0
 12602  004C98  6F12               	movwf	(_var_sys+18)& (0+255),b	;volatile
 12603  004C9A                     l20288:
 12604                           
 12605                           ;outputs_MC50.c: 574:                 if ((var_sys.velocityFactorstop <= 0)&&(var_sys.Au
      +                          toInversionActiveStop == YES) && (var_sys_NVM.softstop > 0))
 12606  004C9A  0101               	movlb	1	; () banked
 12607  004C9C  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 12608  004C9E  D005               	goto	u23450
 12609  004CA0  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 12610  004CA2  E102               	bnz	u23451
 12611  004CA4  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 12612  004CA6  B0D8               	btfsc	status,0,c
 12613  004CA8                     u23451:
 12614  004CA8  0012               	return	
 12615  004CAA                     u23450:
 12616                           
 12617                           ; BSR set to: 1
 12618  004CAA  0512               	decf	(_var_sys+18)& (0+255),w,b	;volatile
 12619  004CAC  A4D8               	btfss	status,2,c
 12620  004CAE  0012               	return	
 12621                           
 12622                           ; BSR set to: 1
 12623  004CB0  0100               	movlb	0	; () banked
 12624  004CB2  51AB               	movf	(_var_sys_NVM+19)& (0+255),w,b	;volatile
 12625  004CB4  B4D8               	btfsc	status,2,c
 12626  004CB6  0012               	return	
 12627                           
 12628                           ; BSR set to: 0
 12629                           ;outputs_MC50.c: 575:                 {;outputs_MC50.c: 576:                 ts_system.T
      +                          imeStopedBeforeDecelaration=( 100/50);
 12630  004CB8  0E00               	movlw	0
 12631  004CBA  0101               	movlb	1	; () banked
 12632  004CBC  6FC7               	movwf	(_ts_system+45)& (0+255),b	;volatile
 12633  004CBE  0E02               	movlw	2
 12634  004CC0  6FC6               	movwf	(_ts_system+44)& (0+255),b	;volatile
 12635                           
 12636                           ;outputs_MC50.c: 577:                 var_sys.AutoInversionActiveStop = NO;
 12637  004CC2  0E00               	movlw	0
 12638  004CC4  6F12               	movwf	(_var_sys+18)& (0+255),b	;volatile
 12639  004CC6  D77E               	goto	l20242
 12640  004CC8                     l20302:
 12641  004CC8  0101               	movlb	1	; () banked
 12642  004CCA  5100               	movf	_var_sys& (0+255),w,b	;volatile
 12643  004CCC  ECE1  F032         	call	_getStateOpenPosition
 12644  004CD0  06E8               	decf	wreg,f,c
 12645  004CD2  A4D8               	btfss	status,2,c
 12646  004CD4  D042               	goto	l20344
 12647                           
 12648                           ; BSR set to: 0
 12649  004CD6  5198               	movf	_var_sys_NVM& (0+255),w,b	;volatile
 12650  004CD8  B4D8               	btfsc	status,2,c
 12651  004CDA  D004               	goto	u23500
 12652                           
 12653                           ; BSR set to: 0
 12654  004CDC  0101               	movlb	1	; () banked
 12655  004CDE  5112               	movf	(_var_sys+18)& (0+255),w,b	;volatile
 12656  004CE0  B4D8               	btfsc	status,2,c
 12657  004CE2  D00C               	goto	u23520
 12658  004CE4                     u23500:
 12659  004CE4  0101               	movlb	1	; () banked
 12660  004CE6  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 12661  004CE8  D005               	goto	u23510
 12662  004CEA  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 12663  004CEC  E136               	bnz	l20344
 12664  004CEE  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 12665  004CF0  B0D8               	btfsc	status,0,c
 12666  004CF2  D033               	goto	l20344
 12667  004CF4                     u23510:
 12668                           
 12669                           ; BSR set to: 1
 12670  004CF4  0100               	movlb	0	; () banked
 12671  004CF6  51AB               	movf	(_var_sys_NVM+19)& (0+255),w,b	;volatile
 12672  004CF8  B4D8               	btfsc	status,2,c
 12673  004CFA  D02F               	goto	l20344
 12674  004CFC                     u23520:
 12675                           
 12676                           ;outputs_MC50.c: 586:     {;outputs_MC50.c: 588:             if ((powerControl_st.decela
      +                          rationActive==NO) && (var_sys.AutoInversionActiveStop==NO ))
 12677  004CFC  0101               	movlb	1	; () banked
 12678  004CFE  517B               	movf	_powerControl_st& (0+255),w,b
 12679  004D00  A4D8               	btfss	status,2,c
 12680  004D02  D022               	goto	l20330
 12681                           
 12682                           ; BSR set to: 1
 12683  004D04  5112               	movf	(_var_sys+18)& (0+255),w,b	;volatile
 12684  004D06  A4D8               	btfss	status,2,c
 12685  004D08  D01F               	goto	l20330
 12686                           
 12687                           ; BSR set to: 1
 12688                           ;outputs_MC50.c: 589:         {;outputs_MC50.c: 592:             ts_system.TimeCurrentWa
      +                          itForAlarm=(1000/50);
 12689  004D0A  0E00               	movlw	0
 12690  004D0C  6FC9               	movwf	(_ts_system+47)& (0+255),b	;volatile
 12691  004D0E  0E14               	movlw	20
 12692  004D10  6FC8               	movwf	(_ts_system+46)& (0+255),b	;volatile
 12693                           
 12694                           ;outputs_MC50.c: 594:             if (var_sys_NVM.softstop > 0){
 12695  004D12  0100               	movlb	0	; () banked
 12696  004D14  51AB               	movf	(_var_sys_NVM+19)& (0+255),w,b	;volatile
 12697  004D16  B4D8               	btfsc	status,2,c
 12698  004D18  D008               	goto	l20322
 12699                           
 12700                           ; BSR set to: 0
 12701                           ;outputs_MC50.c: 595:                 var_sys.AutoInversionActive = NO;
 12702  004D1A  0E00               	movlw	0
 12703  004D1C  0101               	movlb	1	; () banked
 12704  004D1E  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 12705                           
 12706                           ;outputs_MC50.c: 596:                 var_sys.AutoInversionActiveStop = YES;
 12707  004D20  0E01               	movlw	1
 12708  004D22  6F12               	movwf	(_var_sys+18)& (0+255),b	;volatile
 12709                           
 12710                           ; BSR set to: 1
 12711                           ;outputs_MC50.c: 597:                 InitSoftStop();
 12712  004D24  EC71  F043         	call	_InitSoftStop	;wreg free
 12713                           
 12714                           ;outputs_MC50.c: 598:             }else{
 12715  004D28  D00F               	goto	l20330
 12716  004D2A                     l20322:
 12717                           
 12718                           ; BSR set to: 0
 12719                           ;outputs_MC50.c: 599:                 ts_system.TimeStopedBeforeDecelaration=( 500/50);
 12720  004D2A  0E00               	movlw	0
 12721  004D2C  0101               	movlb	1	; () banked
 12722  004D2E  6FC7               	movwf	(_ts_system+45)& (0+255),b	;volatile
 12723  004D30  0E0A               	movlw	10
 12724  004D32  6FC6               	movwf	(_ts_system+44)& (0+255),b	;volatile
 12725                           
 12726                           ;outputs_MC50.c: 600:                  var_sys.AutoInversionActiveStop = NO;
 12727  004D34  0E00               	movlw	0
 12728  004D36  6F12               	movwf	(_var_sys+18)& (0+255),b	;volatile
 12729                           
 12730                           ; BSR set to: 1
 12731                           ;outputs_MC50.c: 601:                 ControlDecelarationFactor();
 12732  004D38  EC08  F048         	call	_ControlDecelarationFactor	;wreg free
 12733                           
 12734                           ; BSR set to: 1
 12735                           ;outputs_MC50.c: 602:                 powerControl_st.decelarationActive=YES;
 12736  004D3C  0E01               	movlw	1
 12737  004D3E  6F7B               	movwf	_powerControl_st& (0+255),b
 12738                           
 12739                           ; BSR set to: 1
 12740                           ;outputs_MC50.c: 603:                 var_sys.velocityFactor=0;
 12741  004D40  0E00               	movlw	0
 12742  004D42  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 12743  004D44  0E00               	movlw	0
 12744  004D46  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 12745  004D48                     l20330:
 12746                           
 12747                           ;outputs_MC50.c: 607:         if ((var_sys.velocityFactorstop <= 0)&&(var_sys.AutoInvers
      +                          ionActiveStop == YES) && (var_sys_NVM.softstop > 0))
 12748  004D48  0101               	movlb	1	; () banked
 12749  004D4A  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 12750  004D4C  D7AE               	goto	u23450
 12751  004D4E  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 12752  004D50  E135               	bnz	l2306
 12753  004D52  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 12754  004D54  B0D8               	btfsc	status,0,c
 12755  004D56  0012               	return	
 12756  004D58  D7A8               	goto	u23450
 12757  004D5A                     l20344:
 12758  004D5A  0101               	movlb	1	; () banked
 12759  004D5C  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 12760  004D5E  D012               	goto	l20352
 12761  004D60  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 12762  004D62  E103               	bnz	u23590
 12763  004D64  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 12764  004D66  A0D8               	btfss	status,0,c
 12765  004D68  D00D               	goto	l20352
 12766  004D6A                     u23590:
 12767                           
 12768                           ; BSR set to: 1
 12769  004D6A  5100               	movf	_var_sys& (0+255),w,b	;volatile
 12770  004D6C  B4D8               	btfsc	status,2,c
 12771  004D6E  D00A               	goto	l20352
 12772                           
 12773                           ; BSR set to: 1
 12774                           ;outputs_MC50.c: 618:     {;outputs_MC50.c: 619:         var_sys.velocityFactorstop=(var
      +                          _sys.velocityFactorstop)- var_sys.SoftStopDecrementControl;
 12775  004D70  5113               	movf	(_var_sys+19)& (0+255),w,b	;volatile
 12776  004D72  5D10               	subwf	(_var_sys+16)& (0+255),w,b	;volatile
 12777  004D74  6F10               	movwf	(_var_sys+16)& (0+255),b	;volatile
 12778  004D76  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 12779  004D78  A0D8               	btfss	status,0,c
 12780  004D7A  0511               	decf	(_var_sys+17)& (0+255),w,b	;volatile
 12781  004D7C  6F11               	movwf	(_var_sys+17)& (0+255),b	;volatile
 12782  004D7E                     l20350:
 12783                           
 12784                           ; BSR set to: 1
 12785                           ;outputs_MC50.c: 620:         powerControl_st.decelarationActive=NO;
 12786  004D7E  0E00               	movlw	0
 12787  004D80  6F7B               	movwf	_powerControl_st& (0+255),b
 12788                           
 12789                           ;outputs_MC50.c: 623:     }
 12790  004D82  0012               	return	
 12791  004D84                     l20352:
 12792                           
 12793                           ; BSR set to: 1
 12794  004D84  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 12795  004D86  D010               	goto	l20360
 12796  004D88  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 12797  004D8A  E103               	bnz	u23610
 12798  004D8C  050E               	decf	(_var_sys+14)& (0+255),w,b	;volatile
 12799  004D8E  A0D8               	btfss	status,0,c
 12800  004D90  D00B               	goto	l20360
 12801  004D92                     u23610:
 12802                           
 12803                           ; BSR set to: 1
 12804  004D92  5100               	movf	_var_sys& (0+255),w,b	;volatile
 12805  004D94  B4D8               	btfsc	status,2,c
 12806  004D96  D008               	goto	l20360
 12807                           
 12808                           ; BSR set to: 1
 12809                           ;outputs_MC50.c: 626:     {;outputs_MC50.c: 627:         var_sys.velocityFactor=(var_sys
      +                          .velocityFactor)-var_sys.SoftStartDecrementControl;
 12810  004D98  5114               	movf	(_var_sys+20)& (0+255),w,b	;volatile
 12811  004D9A  5D0E               	subwf	(_var_sys+14)& (0+255),w,b	;volatile
 12812  004D9C  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 12813  004D9E  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 12814  004DA0  A0D8               	btfss	status,0,c
 12815  004DA2  050F               	decf	(_var_sys+15)& (0+255),w,b	;volatile
 12816  004DA4  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 12817  004DA6  D7EB               	goto	l20350
 12818  004DA8                     l20360:
 12819                           
 12820                           ; BSR set to: 1
 12821                           ;outputs_MC50.c: 634:     {;outputs_MC50.c: 635:          var_sys.velocityFactorstop = 0
      +                          ;
 12822  004DA8  0E00               	movlw	0
 12823  004DAA  6F11               	movwf	(_var_sys+17)& (0+255),b	;volatile
 12824  004DAC  0E00               	movlw	0
 12825  004DAE  6F10               	movwf	(_var_sys+16)& (0+255),b	;volatile
 12826                           
 12827                           ;outputs_MC50.c: 636:          var_sys.velocityFactor=0;
 12828  004DB0  0E00               	movlw	0
 12829  004DB2  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 12830  004DB4  0E00               	movlw	0
 12831  004DB6  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 12832                           
 12833                           ;outputs_MC50.c: 637:          powerControl_st.decelarationActive=NO;
 12834  004DB8  0E00               	movlw	0
 12835  004DBA  6F7B               	movwf	_powerControl_st& (0+255),b
 12836  004DBC                     l2306:
 12837  004DBC  0012               	return		;funcret
 12838  004DBE                     __end_of_controlVelocity:
 12839                           	callstack 0
 12840                           
 12841 ;; *************** function _getStateOpenPosition *****************
 12842 ;; Defined at:
 12843 ;;		line 470 in file "outputs_MC50.c"
 12844 ;; Parameters:    Size  Location     Type
 12845 ;;  stateMotor      1    wreg     enum E10381
 12846 ;; Auto vars:     Size  Location     Type
 12847 ;;  stateMotor      1    1[BANK0 ] enum E10381
 12848 ;;  state           1    0[BANK0 ] _Bool 
 12849 ;; Return value:  Size  Location     Type
 12850 ;;                  1    wreg      _Bool 
 12851 ;; Registers used:
 12852 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12853 ;; Tracked objects:
 12854 ;;		On entry : 3F/1
 12855 ;;		On exit  : 3F/0
 12856 ;;		Unchanged: 0/0
 12857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12858 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12859 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12860 ;;      Temps:          9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12861 ;;      Totals:         9       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12862 ;;Total ram usage:       11 bytes
 12863 ;; Hardware stack levels used: 1
 12864 ;; Hardware stack levels required when called: 6
 12865 ;; This function calls:
 12866 ;;		___lmul
 12867 ;;		_getTimeDecelaration
 12868 ;; This function is called by:
 12869 ;;		_controlVelocity
 12870 ;; This function uses a non-reentrant model
 12871 ;;
 12872                           
 12873                           	psect	text30
 12874  0065C2                     __ptext30:
 12875                           	callstack 0
 12876  0065C2                     _getStateOpenPosition:
 12877                           	callstack 21
 12878                           
 12879                           ;incstack = 0
 12880                           ;getStateOpenPosition@stateMotor stored from wreg
 12881  0065C2  0100               	movlb	0	; () banked
 12882  0065C4  6FD9               	movwf	getStateOpenPosition@stateMotor& (0+255),b
 12883                           
 12884                           ;outputs_MC50.c: 470: _Bool getStateOpenPosition(stateMotor_enum stateMotor);outputs_MC5
      +                          0.c: 471: {;outputs_MC50.c: 472:     _Bool state=0;
 12885  0065C6  0E00               	movlw	0
 12886  0065C8  0100               	movlb	0	; () banked
 12887  0065CA  6FD8               	movwf	getStateOpenPosition@state& (0+255),b
 12888                           
 12889                           ; BSR set to: 0
 12890                           ;outputs_MC50.c: 473:     if(var_sys.PositionIsLost==YES)
 12891  0065CC  0101               	movlb	1	; () banked
 12892  0065CE  0548               	decf	(_var_sys+72)& (0+255),w,b	;volatile
 12893  0065D0  A4D8               	btfss	status,2,c
 12894  0065D2  D002               	goto	l19728
 12895  0065D4                     u22590:
 12896                           
 12897                           ;outputs_MC50.c: 474:     {;outputs_MC50.c: 475:         state=1;
 12898  0065D4  0E01               	movlw	1
 12899  0065D6  D046               	goto	L71
 12900  0065D8                     l19728:
 12901                           
 12902                           ; BSR set to: 1
 12903  0065D8  0100               	movlb	0	; () banked
 12904  0065DA  519C               	movf	(_var_sys_NVM+4)& (0+255),w,b	;volatile
 12905  0065DC  0D14               	mullw	20
 12906  0065DE  CFF3 F032          	movff	prodl,??_getStateOpenPosition
 12907  0065E2  CFF4 F033          	movff	prodh,??_getStateOpenPosition+1
 12908  0065E6  0E00               	movlw	0
 12909  0065E8  BE33               	btfsc	(??_getStateOpenPosition+1)^0,7,c
 12910  0065EA  0EFF               	movlw	255
 12911  0065EC  6E34               	movwf	(??_getStateOpenPosition+2)^0,c
 12912  0065EE  6E35               	movwf	(??_getStateOpenPosition+3)^0,c
 12913  0065F0  51CC               	movf	(_var_sys_NVM+52)& (0+255),w,b	;volatile
 12914  0065F2  5C32               	subwf	??_getStateOpenPosition^0,w,c
 12915  0065F4  51CD               	movf	(_var_sys_NVM+53)& (0+255),w,b	;volatile
 12916  0065F6  5833               	subwfb	(??_getStateOpenPosition+1)^0,w,c
 12917  0065F8  51CE               	movf	(_var_sys_NVM+54)& (0+255),w,b	;volatile
 12918  0065FA  5834               	subwfb	(??_getStateOpenPosition+2)^0,w,c
 12919  0065FC  51CF               	movf	(_var_sys_NVM+55)& (0+255),w,b	;volatile
 12920  0065FE  5835               	subwfb	(??_getStateOpenPosition+3)^0,w,c
 12921  006600  B0D8               	btfsc	status,0,c
 12922  006602  D033               	goto	l19742
 12923                           
 12924                           ; BSR set to: 0
 12925  006604  0E02               	movlw	2
 12926  006606  19D9               	xorwf	getStateOpenPosition@stateMotor& (0+255),w,b
 12927  006608  A4D8               	btfss	status,2,c
 12928  00660A  D02F               	goto	l19742
 12929                           
 12930                           ; BSR set to: 0
 12931                           ;outputs_MC50.c: 478:     {;outputs_MC50.c: 479:         if(var_sys_NVM.walkTime<(var_sy
      +                          s_NVM.decelarationOpen/2))
 12932  00660C  90D8               	bcf	status,0,c
 12933  00660E  3198               	rrcf	_var_sys_NVM& (0+255),w,b	;volatile
 12934  006610  619C               	cpfslt	(_var_sys_NVM+4)& (0+255),b	;volatile
 12935  006612  D001               	goto	l19736
 12936  006614  D7DF               	goto	u22590
 12937  006616                     l19736:
 12938                           
 12939                           ; BSR set to: 0
 12940  006616  519C               	movf	(_var_sys_NVM+4)& (0+255),w,b	;volatile
 12941  006618  0D14               	mullw	20
 12942  00661A  CFF3 F032          	movff	prodl,??_getStateOpenPosition
 12943  00661E  CFF4 F033          	movff	prodh,??_getStateOpenPosition+1
 12944  006622  0E00               	movlw	0
 12945  006624  BE33               	btfsc	(??_getStateOpenPosition+1)^0,7,c
 12946  006626  0EFF               	movlw	255
 12947  006628  6E34               	movwf	(??_getStateOpenPosition+2)^0,c
 12948  00662A  6E35               	movwf	(??_getStateOpenPosition+3)^0,c
 12949  00662C  0ED8               	movlw	216
 12950  00662E  2432               	addwf	??_getStateOpenPosition^0,w,c
 12951  006630  6E36               	movwf	(??_getStateOpenPosition+4)^0,c
 12952  006632  0EFF               	movlw	255
 12953  006634  2033               	addwfc	(??_getStateOpenPosition+1)^0,w,c
 12954  006636  6E37               	movwf	(??_getStateOpenPosition+5)^0,c
 12955  006638  0EFF               	movlw	255
 12956  00663A  2034               	addwfc	(??_getStateOpenPosition+2)^0,w,c
 12957  00663C  6E38               	movwf	(??_getStateOpenPosition+6)^0,c
 12958  00663E  0EFF               	movlw	255
 12959  006640  2035               	addwfc	(??_getStateOpenPosition+3)^0,w,c
 12960  006642  6E39               	movwf	(??_getStateOpenPosition+7)^0,c
 12961  006644  0101               	movlb	1	; () banked
 12962  006646  511E               	movf	(_var_sys+30)& (0+255),w,b	;volatile
 12963  006648  5C36               	subwf	(??_getStateOpenPosition+4)^0,w,c
 12964  00664A  511F               	movf	(_var_sys+31)& (0+255),w,b	;volatile
 12965  00664C  5837               	subwfb	(??_getStateOpenPosition+5)^0,w,c
 12966  00664E  5120               	movf	(_var_sys+32)& (0+255),w,b	;volatile
 12967  006650  5838               	subwfb	(??_getStateOpenPosition+6)^0,w,c
 12968  006652  5039               	movf	(??_getStateOpenPosition+7)^0,w,c
 12969  006654  0A80               	xorlw	128
 12970  006656  6E3A               	movwf	(??_getStateOpenPosition+8)^0,c
 12971  006658  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 12972  00665A  0A80               	xorlw	128
 12973  00665C  583A               	subwfb	(??_getStateOpenPosition+8)^0,w,c
 12974  00665E  A0D8               	btfss	status,0,c
 12975  006660  D7B9               	goto	u22590
 12976                           
 12977                           ; BSR set to: 1
 12978                           ;outputs_MC50.c: 488:         {;outputs_MC50.c: 489:             state= 0;
 12979  006662  0E00               	movlw	0
 12980  006664                     L71:
 12981  006664  0100               	movlb	0	; () banked
 12982  006666  6FD8               	movwf	getStateOpenPosition@state& (0+255),b
 12983  006668  D032               	goto	l2249
 12984  00666A                     l19742:
 12985                           
 12986                           ; BSR set to: 0
 12987  00666A  0E02               	movlw	2
 12988  00666C  19D9               	xorwf	getStateOpenPosition@stateMotor& (0+255),w,b
 12989  00666E  B4D8               	btfsc	status,2,c
 12990  006670  D003               	goto	u22650
 12991                           
 12992                           ; BSR set to: 0
 12993  006672  05D9               	decf	getStateOpenPosition@stateMotor& (0+255),w,b
 12994  006674  A4D8               	btfss	status,2,c
 12995  006676  D02B               	goto	l2249
 12996  006678                     u22650:
 12997                           
 12998                           ; BSR set to: 0
 12999                           ;outputs_MC50.c: 493:     {;outputs_MC50.c: 494:          if((var_sys_NVM.learningTimeTo
      +                          Open)<(((unsigned long)var_sys_NVM.decelarationOpen*( 500/50))))
 13000  006678  5198               	movf	_var_sys_NVM& (0+255),w,b	;volatile
 13001  00667A  6E1D               	movwf	___lmul@multiplier^0,c
 13002  00667C  6A1E               	clrf	(___lmul@multiplier+1)^0,c
 13003  00667E  6A1F               	clrf	(___lmul@multiplier+2)^0,c
 13004  006680  6A20               	clrf	(___lmul@multiplier+3)^0,c
 13005  006682  0E0A               	movlw	10
 13006  006684  6E21               	movwf	___lmul@multiplicand^0,c
 13007  006686  0E00               	movlw	0
 13008  006688  6E22               	movwf	(___lmul@multiplicand+1)^0,c
 13009  00668A  0E00               	movlw	0
 13010  00668C  6E23               	movwf	(___lmul@multiplicand+2)^0,c
 13011  00668E  0E00               	movlw	0
 13012  006690  6E24               	movwf	(___lmul@multiplicand+3)^0,c
 13013  006692  EC2A  F042         	call	___lmul	;wreg free
 13014  006696  501D               	movf	?___lmul^0,w,c
 13015  006698  0100               	movlb	0	; () banked
 13016  00669A  5DCC               	subwf	(_var_sys_NVM+52)& (0+255),w,b	;volatile
 13017  00669C  501E               	movf	(?___lmul+1)^0,w,c
 13018  00669E  59CD               	subwfb	(_var_sys_NVM+53)& (0+255),w,b	;volatile
 13019  0066A0  501F               	movf	(?___lmul+2)^0,w,c
 13020  0066A2  59CE               	subwfb	(_var_sys_NVM+54)& (0+255),w,b	;volatile
 13021  0066A4  5020               	movf	(?___lmul+3)^0,w,c
 13022  0066A6  59CF               	subwfb	(_var_sys_NVM+55)& (0+255),w,b	;volatile
 13023  0066A8  A0D8               	btfss	status,0,c
 13024  0066AA  D794               	goto	u22590
 13025                           
 13026                           ; BSR set to: 0
 13027  0066AC  51D9               	movf	getStateOpenPosition@stateMotor& (0+255),w,b
 13028  0066AE  ECEE  F035         	call	_getTimeDecelaration
 13029  0066B2  0101               	movlb	1	; () banked
 13030  0066B4  511E               	movf	(_var_sys+30)& (0+255),w,b	;volatile
 13031  0066B6  5C29               	subwf	?_getTimeDecelaration^0,w,c
 13032  0066B8  511F               	movf	(_var_sys+31)& (0+255),w,b	;volatile
 13033  0066BA  582A               	subwfb	(?_getTimeDecelaration+1)^0,w,c
 13034  0066BC  5120               	movf	(_var_sys+32)& (0+255),w,b	;volatile
 13035  0066BE  582B               	subwfb	(?_getTimeDecelaration+2)^0,w,c
 13036  0066C0  502C               	movf	(?_getTimeDecelaration+3)^0,w,c
 13037  0066C2  0A80               	xorlw	128
 13038  0066C4  6E32               	movwf	??_getStateOpenPosition^0,c
 13039  0066C6  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 13040  0066C8  0A80               	xorlw	128
 13041  0066CA  5832               	subwfb	??_getStateOpenPosition^0,w,c
 13042  0066CC  D7C8               	goto	L72
 13043  0066CE                     l2249:
 13044                           
 13045                           ; BSR set to: 0
 13046                           ;outputs_MC50.c: 507:     return state;
 13047  0066CE  51D8               	movf	getStateOpenPosition@state& (0+255),w,b
 13048                           
 13049                           ; BSR set to: 0
 13050  0066D0  0012               	return		;funcret
 13051  0066D2                     __end_of_getStateOpenPosition:
 13052                           	callstack 0
 13053                           
 13054 ;; *************** function _InitSoftStop *****************
 13055 ;; Defined at:
 13056 ;;		line 849 in file "sm_ControlGate_MC50.c"
 13057 ;; Parameters:    Size  Location     Type
 13058 ;;		None
 13059 ;; Auto vars:     Size  Location     Type
 13060 ;;		None
 13061 ;; Return value:  Size  Location     Type
 13062 ;;                  1    wreg      void 
 13063 ;; Registers used:
 13064 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 13065 ;; Tracked objects:
 13066 ;;		On entry : 3F/1
 13067 ;;		On exit  : 3E/0
 13068 ;;		Unchanged: 0/0
 13069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13070 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13071 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13072 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13073 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13074 ;;Total ram usage:        1 bytes
 13075 ;; Hardware stack levels used: 1
 13076 ;; Hardware stack levels required when called: 5
 13077 ;; This function calls:
 13078 ;;		_GetMotorPower
 13079 ;; This function is called by:
 13080 ;;		_controlVelocity
 13081 ;; This function uses a non-reentrant model
 13082 ;;
 13083                           
 13084                           	psect	text31
 13085  0086E2                     __ptext31:
 13086                           	callstack 0
 13087  0086E2                     _InitSoftStop:
 13088                           	callstack 22
 13089                           
 13090                           ; BSR set to: 1
 13091                           ;sm_ControlGate_MC50.c: 850:     if (((var_sys.AutoInversionActiveStop == YES)|| (var_sy
      +                          s.AutoInversionActive == YES))&&(var_sys_NVM.softstop >0)) {
 13092                           
 13093                           ; BSR set to: 0
 13094                           ;incstack = 0
 13095  0086E2  0512               	decf	(_var_sys+18)& (0+255),w,b	;volatile
 13096  0086E4  B4D8               	btfsc	status,2,c
 13097  0086E6  D003               	goto	u22690
 13098                           
 13099                           ; BSR set to: 1
 13100  0086E8  0527               	decf	(_var_sys+39)& (0+255),w,b	;volatile
 13101  0086EA  A4D8               	btfss	status,2,c
 13102  0086EC  0012               	return	
 13103  0086EE                     u22690:
 13104                           
 13105                           ; BSR set to: 1
 13106  0086EE  0100               	movlb	0	; () banked
 13107  0086F0  51AB               	movf	(_var_sys_NVM+19)& (0+255),w,b	;volatile
 13108  0086F2  B4D8               	btfsc	status,2,c
 13109  0086F4  0012               	return	
 13110                           
 13111                           ; BSR set to: 0
 13112                           ;sm_ControlGate_MC50.c: 853:         var_sys.velocityFactor = 0;
 13113  0086F6  0E00               	movlw	0
 13114  0086F8  0101               	movlb	1	; () banked
 13115  0086FA  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 13116  0086FC  0E00               	movlw	0
 13117  0086FE  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 13118                           
 13119                           ;sm_ControlGate_MC50.c: 854:         var_sys.velocityFactorstop = 0;
 13120  008700  0E00               	movlw	0
 13121  008702  6F11               	movwf	(_var_sys+17)& (0+255),b	;volatile
 13122  008704  0E00               	movlw	0
 13123  008706  6F10               	movwf	(_var_sys+16)& (0+255),b	;volatile
 13124                           
 13125                           ; BSR set to: 1
 13126                           ;sm_ControlGate_MC50.c: 855:         var_sys.velocityFactorstop = GetMotorPower();
 13127  008708  EC9B  F037         	call	_GetMotorPower	;wreg free
 13128  00870C  6E14               	movwf	??_InitSoftStop^0,c
 13129  00870E  5014               	movf	??_InitSoftStop^0,w,c
 13130  008710  6F10               	movwf	(_var_sys+16)& (0+255),b	;volatile
 13131  008712  6B11               	clrf	(_var_sys+17)& (0+255),b	;volatile
 13132                           
 13133                           ; BSR set to: 1
 13134                           ;sm_ControlGate_MC50.c: 859:         ts_system.timeSoftStop = var_sys.velocityFactorstop
      +                           + 1;
 13135  008714  0E01               	movlw	1
 13136  008716  2510               	addwf	(_var_sys+16)& (0+255),w,b	;volatile
 13137  008718  6FB2               	movwf	(_ts_system+24)& (0+255),b	;volatile
 13138  00871A  0E00               	movlw	0
 13139  00871C  2111               	addwfc	(_var_sys+17)& (0+255),w,b	;volatile
 13140  00871E  6FB3               	movwf	(_ts_system+25)& (0+255),b	;volatile
 13141                           
 13142                           ; BSR set to: 1
 13143                           ;sm_ControlGate_MC50.c: 861:         var_sys.SoftStopDecrementControl = 10 - var_sys_NVM
      +                          .softstop;
 13144  008720  0100               	movlb	0	; () banked
 13145  008722  51AB               	movf	(_var_sys_NVM+19)& (0+255),w,b	;volatile
 13146  008724  080A               	sublw	10
 13147  008726  0101               	movlb	1	; () banked
 13148  008728  6F13               	movwf	(_var_sys+19)& (0+255),b	;volatile
 13149  00872A  0012               	return		;funcret
 13150  00872C                     __end_of_InitSoftStop:
 13151                           	callstack 0
 13152                           
 13153 ;; *************** function _ControlDecelarationFactor *****************
 13154 ;; Defined at:
 13155 ;;		line 463 in file "outputs_MC50.c"
 13156 ;; Parameters:    Size  Location     Type
 13157 ;;		None
 13158 ;; Auto vars:     Size  Location     Type
 13159 ;;		None
 13160 ;; Return value:  Size  Location     Type
 13161 ;;                  1    wreg      void 
 13162 ;; Registers used:
 13163 ;;		wreg, status,2, status,0, prodl, prodh
 13164 ;; Tracked objects:
 13165 ;;		On entry : 3E/1
 13166 ;;		On exit  : 3F/1
 13167 ;;		Unchanged: 0/0
 13168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13169 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13172 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13173 ;;Total ram usage:        0 bytes
 13174 ;; Hardware stack levels used: 1
 13175 ;; Hardware stack levels required when called: 4
 13176 ;; This function calls:
 13177 ;;		Nothing
 13178 ;; This function is called by:
 13179 ;;		_controlVelocity
 13180 ;; This function uses a non-reentrant model
 13181 ;;
 13182                           
 13183                           	psect	text32
 13184  009010                     __ptext32:
 13185                           	callstack 0
 13186  009010                     _ControlDecelarationFactor:
 13187                           	callstack 23
 13188                           
 13189                           ;outputs_MC50.c: 465:     powerControl_st.decelarationCyclesOn=1;
 13190                           
 13191                           ;incstack = 0
 13192  009010  0E01               	movlw	1
 13193  009012  0101               	movlb	1	; () banked
 13194  009014  6F7C               	movwf	(_powerControl_st+1)& (0+255),b
 13195                           
 13196                           ;outputs_MC50.c: 466:     powerControl_st.decelarationCyclesOff=2;
 13197  009016  0E02               	movlw	2
 13198  009018  6F7D               	movwf	(_powerControl_st+2)& (0+255),b
 13199                           
 13200                           ; BSR set to: 1
 13201                           ;outputs_MC50.c: 467:     powerControl_st.decelarationPower=var_sys_NVM.velocityDecelara
      +                          tion*var_sys.Torquerelanty;
 13202  00901A  0100               	movlb	0	; () banked
 13203  00901C  51B0               	movf	(_var_sys_NVM+24)& (0+255),w,b	;volatile
 13204  00901E  0101               	movlb	1	; () banked
 13205  009020  0315               	mulwf	(_var_sys+21)& (0+255),b	;volatile
 13206  009022  CFF3 F17E          	movff	prodl,_powerControl_st+3
 13207                           
 13208                           ; BSR set to: 1
 13209  009026  0012               	return		;funcret
 13210  009028                     __end_of_ControlDecelarationFactor:
 13211                           	callstack 0
 13212                           
 13213 ;; *************** function _actionZone_Opened *****************
 13214 ;; Defined at:
 13215 ;;		line 514 in file "sm_ControlGate_MC50.c"
 13216 ;; Parameters:    Size  Location     Type
 13217 ;;		None
 13218 ;; Auto vars:     Size  Location     Type
 13219 ;;  typeOpenOrde    1   32[COMRAM] enum E10372
 13220 ;;  securityClos    1   31[COMRAM] enum E10397
 13221 ;; Return value:  Size  Location     Type
 13222 ;;                  1    wreg      void 
 13223 ;; Registers used:
 13224 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13225 ;; Tracked objects:
 13226 ;;		On entry : 3F/0
 13227 ;;		On exit  : 3E/0
 13228 ;;		Unchanged: 0/0
 13229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13231 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13233 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13234 ;;Total ram usage:        2 bytes
 13235 ;; Hardware stack levels used: 1
 13236 ;; Hardware stack levels required when called: 7
 13237 ;; This function calls:
 13238 ;;		_CloseOrder
 13239 ;;		_GetOpenOrder
 13240 ;;		_GetSecurityStateInClosing
 13241 ;;		_InitFullAutoTime
 13242 ;;		_InitWalkAutoTime
 13243 ;;		_OpenFullOrder
 13244 ;;		_OpenWalkOrder
 13245 ;;		_VerifyFollowMe
 13246 ;; This function is called by:
 13247 ;;		_sm_execute_ControlGate
 13248 ;; This function uses a non-reentrant model
 13249 ;;
 13250                           
 13251                           	psect	text33
 13252  004DBE                     __ptext33:
 13253                           	callstack 0
 13254  004DBE                     _actionZone_Opened:
 13255                           	callstack 22
 13256                           
 13257                           ; BSR set to: 0
 13258                           ;sm_ControlGate_MC50.c: 515:     StateEnum securityClosing = GetSecurityStateInClosing()
      +                          ;
 13259                           
 13260                           ; BSR set to: 1
 13261                           ;incstack = 0
 13262  004DBE  EC6B  F039         	call	_GetSecurityStateInClosing	;wreg free
 13263  004DC2  6E20               	movwf	actionZone_Opened@securityClosing^0,c
 13264                           
 13265                           ;sm_ControlGate_MC50.c: 517:     if ((securityClosing != NO) && (Abertura_pedonal == 0))
      +                           {
 13266  004DC4  5020               	movf	actionZone_Opened@securityClosing^0,w,c
 13267  004DC6  B4D8               	btfsc	status,2,c
 13268  004DC8  D007               	goto	l21508
 13269  004DCA  0101               	movlb	1	; () banked
 13270  004DCC  518D               	movf	_Abertura_pedonal& (0+255),w,b
 13271  004DCE  A4D8               	btfss	status,2,c
 13272  004DD0  D003               	goto	l21508
 13273                           
 13274                           ; BSR set to: 1
 13275                           ;sm_ControlGate_MC50.c: 518:         InitFullAutoTime();
 13276  004DD2  ECE1  F047         	call	_InitFullAutoTime	;wreg free
 13277                           
 13278                           ;sm_ControlGate_MC50.c: 519:     }
 13279  004DD6  D008               	goto	l2722
 13280  004DD8                     l21508:
 13281  004DD8  5020               	movf	actionZone_Opened@securityClosing^0,w,c
 13282  004DDA  B4D8               	btfsc	status,2,c
 13283  004DDC  D005               	goto	l2722
 13284  004DDE  0101               	movlb	1	; () banked
 13285  004DE0  058D               	decf	_Abertura_pedonal& (0+255),w,b
 13286  004DE2  B4D8               	btfsc	status,2,c
 13287                           
 13288                           ; BSR set to: 1
 13289                           ;sm_ControlGate_MC50.c: 521:          InitWalkAutoTime();
 13290  004DE4  EC66  F048         	call	_InitWalkAutoTime	;wreg free
 13291  004DE8                     l2722:
 13292                           
 13293                           ;sm_ControlGate_MC50.c: 524:     TypeCMD typeOpenOrder = GetOpenOrder();
 13294  004DE8  ECBF  F028         	call	_GetOpenOrder	;wreg free
 13295  004DEC  6E21               	movwf	actionZone_Opened@typeOpenOrder^0,c
 13296                           
 13297                           ;sm_ControlGate_MC50.c: 526:     VerifyFollowMe(securityClosing);
 13298  004DEE  5020               	movf	actionZone_Opened@securityClosing^0,w,c
 13299  004DF0  EC39  F047         	call	_VerifyFollowMe
 13300                           
 13301                           ;sm_ControlGate_MC50.c: 530:     if ((PORTBbits.RB1==0) && (var_sys_NVM.autoTimeFullClos
      +                          e != 0)&&(var_sys.AutoCloseActive != 0) && (button_struct.current != 0x35)&& (var_sys_NV
      +                          M.operationMode == ModoCondominio)){
 13302  004DF4  B28E               	btfsc	142,1,c	;volatile
 13303  004DF6  D013               	goto	l2724
 13304  004DF8  0100               	movlb	0	; () banked
 13305  004DFA  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 13306  004DFC  B4D8               	btfsc	status,2,c
 13307  004DFE  D00F               	goto	l2724
 13308                           
 13309                           ; BSR set to: 0
 13310  004E00  0101               	movlb	1	; () banked
 13311  004E02  5123               	movf	(_var_sys+35)& (0+255),w,b	;volatile
 13312  004E04  B4D8               	btfsc	status,2,c
 13313  004E06  D00B               	goto	l2724
 13314                           
 13315                           ; BSR set to: 1
 13316  004E08  0E35               	movlw	53
 13317  004E0A  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 13318  004E0C  B4D8               	btfsc	status,2,c
 13319  004E0E  D007               	goto	l2724
 13320                           
 13321                           ; BSR set to: 1
 13322  004E10  0E02               	movlw	2
 13323  004E12  0100               	movlb	0	; () banked
 13324  004E14  19A4               	xorwf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 13325  004E16  A4D8               	btfss	status,2,c
 13326  004E18  D002               	goto	l2724
 13327                           
 13328                           ; BSR set to: 0
 13329                           ;sm_ControlGate_MC50.c: 531:       typeOpenOrder = NoCMD;
 13330  004E1A  0E00               	movlw	0
 13331  004E1C  6E21               	movwf	actionZone_Opened@typeOpenOrder^0,c
 13332  004E1E                     l2724:
 13333                           
 13334                           ;sm_ControlGate_MC50.c: 535:      if (typeOpenOrder != NoCMD)
 13335  004E1E  5021               	movf	actionZone_Opened@typeOpenOrder^0,w,c
 13336  004E20  B4D8               	btfsc	status,2,c
 13337  004E22  D05D               	goto	l2725
 13338                           
 13339                           ;sm_ControlGate_MC50.c: 536:      {;sm_ControlGate_MC50.c: 539:         ts_system.timeSi
      +                          nalizationDigit = (1000/50) * 3;
 13340  004E24  0E00               	movlw	0
 13341  004E26  0101               	movlb	1	; () banked
 13342  004E28  6FA7               	movwf	(_ts_system+13)& (0+255),b	;volatile
 13343  004E2A  0E3C               	movlw	60
 13344  004E2C  6FA6               	movwf	(_ts_system+12)& (0+255),b	;volatile
 13345                           
 13346                           ; BSR set to: 1
 13347                           ;sm_ControlGate_MC50.c: 541:        if ( var_sys_NVM.operationMode == ModoCondominio && 
      +                          var_sys_NVM.autoTimeFullClose == 0 && (typeOpenOrder == TypeFull|| typeOpenOrder == Type
      +                          FullClose ))
 13348  004E2E  0E02               	movlw	2
 13349  004E30  0100               	movlb	0	; () banked
 13350  004E32  19A4               	xorwf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 13351  004E34  A4D8               	btfss	status,2,c
 13352  004E36  D00D               	goto	l21540
 13353                           
 13354                           ; BSR set to: 0
 13355  004E38  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 13356  004E3A  A4D8               	btfss	status,2,c
 13357  004E3C  D00A               	goto	l21540
 13358                           
 13359                           ; BSR set to: 0
 13360  004E3E  0421               	decf	actionZone_Opened@typeOpenOrder^0,w,c
 13361  004E40  B4D8               	btfsc	status,2,c
 13362  004E42  D004               	goto	u25210
 13363                           
 13364                           ; BSR set to: 0
 13365  004E44  0E04               	movlw	4
 13366  004E46  1821               	xorwf	actionZone_Opened@typeOpenOrder^0,w,c
 13367  004E48  A4D8               	btfss	status,2,c
 13368  004E4A  D003               	goto	l21540
 13369  004E4C                     u25210:
 13370                           
 13371                           ;sm_ControlGate_MC50.c: 542:         {;sm_ControlGate_MC50.c: 544:             CloseOrde
      +                          r();
 13372  004E4C  ECDA  F046         	call	_CloseOrder	;wreg free
 13373                           
 13374                           ;sm_ControlGate_MC50.c: 546:         }
 13375  004E50  0012               	return	
 13376  004E52                     l21540:
 13377                           
 13378                           ; BSR set to: 0
 13379  004E52  51A8               	movf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 13380  004E54  B4D8               	btfsc	status,2,c
 13381  004E56  D014               	goto	l21554
 13382                           
 13383                           ; BSR set to: 0
 13384                           ;sm_ControlGate_MC50.c: 553:             if (typeOpenOrder == TypeFullOpen && var_sys.Fi
      +                          mCurso_OpenIsEnabled == NO && var_sys.Statedoorcontrol != st_Opened) {
 13385  004E58  0E03               	movlw	3
 13386  004E5A  1821               	xorwf	actionZone_Opened@typeOpenOrder^0,w,c
 13387  004E5C  A4D8               	btfss	status,2,c
 13388  004E5E  D00B               	goto	l21550
 13389                           
 13390                           ; BSR set to: 0
 13391  004E60  0101               	movlb	1	; () banked
 13392  004E62  5104               	movf	(_var_sys+4)& (0+255),w,b	;volatile
 13393  004E64  A4D8               	btfss	status,2,c
 13394  004E66  D007               	goto	l21550
 13395                           
 13396                           ; BSR set to: 1
 13397  004E68  0E04               	movlw	4
 13398  004E6A  191C               	xorwf	(_var_sys+28)& (0+255),w,b	;volatile
 13399  004E6C  B4D8               	btfsc	status,2,c
 13400  004E6E  D003               	goto	l21550
 13401  004E70                     u25250:
 13402                           
 13403                           ; BSR set to: 1
 13404                           ;sm_ControlGate_MC50.c: 555:                 OpenFullOrder();
 13405  004E70  ECED  F046         	call	_OpenFullOrder	;wreg free
 13406                           
 13407                           ;sm_ControlGate_MC50.c: 556:             } else if (typeOpenOrder == TypeFullClose) {
 13408  004E74  0012               	return	
 13409  004E76                     l21550:
 13410  004E76  0E04               	movlw	4
 13411  004E78  1821               	xorwf	actionZone_Opened@typeOpenOrder^0,w,c
 13412  004E7A  A4D8               	btfss	status,2,c
 13413  004E7C  0012               	return	
 13414  004E7E  D7E6               	goto	u25210
 13415  004E80                     l21554:
 13416                           
 13417                           ; BSR set to: 0
 13418  004E80  0E03               	movlw	3
 13419  004E82  0101               	movlb	1	; () banked
 13420  004E84  190B               	xorwf	(_var_sys+11)& (0+255),w,b	;volatile
 13421  004E86  A4D8               	btfss	status,2,c
 13422  004E88  D009               	goto	l21562
 13423                           
 13424                           ; BSR set to: 1
 13425  004E8A  0421               	decf	actionZone_Opened@typeOpenOrder^0,w,c
 13426  004E8C  A4D8               	btfss	status,2,c
 13427  004E8E  D006               	goto	l21562
 13428  004E90                     u25280:
 13429                           
 13430                           ; BSR set to: 1
 13431                           ;sm_ControlGate_MC50.c: 563:             OpenFullOrder();
 13432  004E90  ECED  F046         	call	_OpenFullOrder	;wreg free
 13433  004E94                     l21560:
 13434                           
 13435                           ;sm_ControlGate_MC50.c: 565:             var_sys.AutoInversionActive = NO;
 13436  004E94  0E00               	movlw	0
 13437  004E96  0101               	movlb	1	; () banked
 13438  004E98  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 13439                           
 13440                           ;sm_ControlGate_MC50.c: 567:         } else if (var_sys.LastState == InClose && typeOpen
      +                          Order == TypeWalk) {
 13441  004E9A  0012               	return	
 13442  004E9C                     l21562:
 13443                           
 13444                           ; BSR set to: 1
 13445  004E9C  0E03               	movlw	3
 13446  004E9E  190B               	xorwf	(_var_sys+11)& (0+255),w,b	;volatile
 13447  004EA0  A4D8               	btfss	status,2,c
 13448  004EA2  D007               	goto	l21570
 13449                           
 13450                           ; BSR set to: 1
 13451  004EA4  0E02               	movlw	2
 13452  004EA6  1821               	xorwf	actionZone_Opened@typeOpenOrder^0,w,c
 13453  004EA8  A4D8               	btfss	status,2,c
 13454  004EAA  D003               	goto	l21570
 13455                           
 13456                           ; BSR set to: 1
 13457                           ;sm_ControlGate_MC50.c: 569:             OpenWalkOrder();
 13458  004EAC  ECB1  F03F         	call	_OpenWalkOrder	;wreg free
 13459  004EB0  D7F1               	goto	l21560
 13460  004EB2                     l21570:
 13461                           
 13462                           ; BSR set to: 1
 13463  004EB2  0E03               	movlw	3
 13464  004EB4  1821               	xorwf	actionZone_Opened@typeOpenOrder^0,w,c
 13465  004EB6  A4D8               	btfss	status,2,c
 13466  004EB8  D005               	goto	l21580
 13467                           
 13468                           ; BSR set to: 1
 13469                           ;sm_ControlGate_MC50.c: 574:             if (var_sys.Statedoorcontrol == st_Opened){
 13470  004EBA  0E04               	movlw	4
 13471  004EBC  191C               	xorwf	(_var_sys+28)& (0+255),w,b	;volatile
 13472  004EBE  B4D8               	btfsc	status,2,c
 13473  004EC0  0012               	return	
 13474  004EC2  D7E6               	goto	u25280
 13475  004EC4                     l21580:
 13476                           
 13477                           ; BSR set to: 1
 13478  004EC4  0100               	movlb	0	; () banked
 13479  004EC6  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 13480  004EC8  B4D8               	btfsc	status,2,c
 13481  004ECA  D007               	goto	l21586
 13482                           
 13483                           ; BSR set to: 0
 13484  004ECC  0E02               	movlw	2
 13485  004ECE  19A4               	xorwf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 13486  004ED0  A4D8               	btfss	status,2,c
 13487  004ED2  D003               	goto	l21586
 13488                           
 13489                           ; BSR set to: 0
 13490                           ;sm_ControlGate_MC50.c: 582:         {;sm_ControlGate_MC50.c: 584:             InitFullA
      +                          utoTime();
 13491  004ED4  ECE1  F047         	call	_InitFullAutoTime	;wreg free
 13492                           
 13493                           ;sm_ControlGate_MC50.c: 586:         }
 13494  004ED8  0012               	return	
 13495  004EDA                     l21586:
 13496                           
 13497                           ; BSR set to: 0
 13498  004EDA  5020               	movf	actionZone_Opened@securityClosing^0,w,c
 13499  004EDC  D7CE               	goto	L73
 13500  004EDE                     l2725:
 13501  004EDE  B28E               	btfsc	142,1,c	;volatile
 13502  004EE0  D00B               	goto	l21594
 13503  004EE2  0100               	movlb	0	; () banked
 13504  004EE4  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 13505  004EE6  B4D8               	btfsc	status,2,c
 13506  004EE8  D007               	goto	l21594
 13507                           
 13508                           ; BSR set to: 0
 13509                           ;sm_ControlGate_MC50.c: 597:         ts_system.timeWaitToClose = ((int) var_sys_NVM.auto
      +                          TimeFullClose * (1000/50));
 13510  004EEA  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 13511  004EEC  0D14               	mullw	20
 13512  004EEE  CFF3 F1AC          	movff	prodl,_ts_system+18	;volatile
 13513  004EF2  CFF4 F1AD          	movff	prodh,_ts_system+19	;volatile
 13514                           
 13515                           ;sm_ControlGate_MC50.c: 599:     }
 13516  004EF6  0012               	return	
 13517  004EF8                     l21594:
 13518  004EF8  0101               	movlb	1	; () banked
 13519  004EFA  053A               	decf	(_var_sys+58)& (0+255),w,b	;volatile
 13520  004EFC  A4D8               	btfss	status,2,c
 13521  004EFE  D00F               	goto	l21604
 13522                           
 13523                           ; BSR set to: 1
 13524  004F00  5020               	movf	actionZone_Opened@securityClosing^0,w,c
 13525  004F02  A4D8               	btfss	status,2,c
 13526  004F04  D00C               	goto	l21604
 13527                           
 13528                           ; BSR set to: 1
 13529                           ;sm_ControlGate_MC50.c: 603:         var_sys.StateFollowIsOn = NO;
 13530  004F06  0E00               	movlw	0
 13531  004F08  6F3A               	movwf	(_var_sys+58)& (0+255),b	;volatile
 13532                           
 13533                           ; BSR set to: 1
 13534                           ;sm_ControlGate_MC50.c: 610:         var_sys.AutoCloseActive = var_sys_NVM.folow_me;
 13535  004F0A  C0AD  F123         	movff	_var_sys_NVM+21,_var_sys+35	;volatile
 13536                           
 13537                           ; BSR set to: 1
 13538                           ;sm_ControlGate_MC50.c: 611:         ts_system.timeWaitToClose = var_sys_NVM.folow_me * 
      +                          (1000/50);
 13539  004F0E  0100               	movlb	0	; () banked
 13540  004F10  51AD               	movf	(_var_sys_NVM+21)& (0+255),w,b	;volatile
 13541  004F12  0D14               	mullw	20
 13542  004F14  CFF3 F1AC          	movff	prodl,_ts_system+18	;volatile
 13543  004F18  CFF4 F1AD          	movff	prodh,_ts_system+19	;volatile
 13544                           
 13545                           ;sm_ControlGate_MC50.c: 613:     }else if (ts_system.timeWaitToClose <= 0 && var_sys_NVM
      +                          .operationMode == ModoPassoPasso && var_sys.passoAPassoAutoClose == YES && var_sys.AutoC
      +                          loseActive != 0) {
 13546  004F1C  0012               	return	
 13547  004F1E                     l21604:
 13548                           
 13549                           ; BSR set to: 1
 13550  004F1E  BFAD               	btfsc	(_ts_system+19)& (0+255),7,b	;volatile
 13551  004F20  D005               	goto	u25400
 13552  004F22  51AD               	movf	(_ts_system+19)& (0+255),w,b	;volatile
 13553  004F24  E113               	bnz	l21616
 13554  004F26  05AC               	decf	(_ts_system+18)& (0+255),w,b	;volatile
 13555  004F28  B0D8               	btfsc	status,0,c
 13556  004F2A  D010               	goto	l21616
 13557  004F2C                     u25400:
 13558                           
 13559                           ; BSR set to: 1
 13560  004F2C  0100               	movlb	0	; () banked
 13561  004F2E  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 13562  004F30  A4D8               	btfss	status,2,c
 13563  004F32  D00C               	goto	l21616
 13564                           
 13565                           ; BSR set to: 0
 13566  004F34  0101               	movlb	1	; () banked
 13567  004F36  0550               	decf	(_var_sys+80)& (0+255),w,b	;volatile
 13568  004F38  A4D8               	btfss	status,2,c
 13569  004F3A  D008               	goto	l21616
 13570                           
 13571                           ; BSR set to: 1
 13572  004F3C  5123               	movf	(_var_sys+35)& (0+255),w,b	;volatile
 13573  004F3E  B4D8               	btfsc	status,2,c
 13574  004F40  D005               	goto	l21616
 13575                           
 13576                           ; BSR set to: 1
 13577                           ;sm_ControlGate_MC50.c: 615:         var_sys.AutoCloseActive = 0;
 13578  004F42  0E00               	movlw	0
 13579  004F44  6F23               	movwf	(_var_sys+35)& (0+255),b	;volatile
 13580                           
 13581                           ;sm_ControlGate_MC50.c: 617:         var_sys.passoAPassoAutoClose = NO;
 13582  004F46  0E00               	movlw	0
 13583  004F48  6F50               	movwf	(_var_sys+80)& (0+255),b	;volatile
 13584  004F4A  D780               	goto	u25210
 13585  004F4C                     l21616:
 13586  004F4C  0101               	movlb	1	; () banked
 13587  004F4E  BFAD               	btfsc	(_ts_system+19)& (0+255),7,b	;volatile
 13588  004F50  D005               	goto	u25440
 13589  004F52  51AD               	movf	(_ts_system+19)& (0+255),w,b	;volatile
 13590  004F54  E119               	bnz	l21634
 13591  004F56  05AC               	decf	(_ts_system+18)& (0+255),w,b	;volatile
 13592  004F58  B0D8               	btfsc	status,0,c
 13593  004F5A  D016               	goto	l21634
 13594  004F5C                     u25440:
 13595                           
 13596                           ; BSR set to: 1
 13597  004F5C  0100               	movlb	0	; () banked
 13598  004F5E  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 13599  004F60  B4D8               	btfsc	status,2,c
 13600  004F62  D012               	goto	l21634
 13601                           
 13602                           ; BSR set to: 0
 13603  004F64  0101               	movlb	1	; () banked
 13604  004F66  5123               	movf	(_var_sys+35)& (0+255),w,b	;volatile
 13605  004F68  B4D8               	btfsc	status,2,c
 13606  004F6A  D00E               	goto	l21634
 13607                           
 13608                           ; BSR set to: 1
 13609                           ;sm_ControlGate_MC50.c: 621:         var_sys.AutoCloseActive = 0;
 13610  004F6C  0E00               	movlw	0
 13611  004F6E  6F23               	movwf	(_var_sys+35)& (0+255),b	;volatile
 13612                           
 13613                           ; BSR set to: 1
 13614                           ;sm_ControlGate_MC50.c: 627:         if ( var_sys.AutoInversionActive == YES )
 13615  004F70  0527               	decf	(_var_sys+39)& (0+255),w,b	;volatile
 13616  004F72  A4D8               	btfss	status,2,c
 13617  004F74  D003               	goto	l21630
 13618                           
 13619                           ; BSR set to: 1
 13620                           ;sm_ControlGate_MC50.c: 628:         {;sm_ControlGate_MC50.c: 629:             var_sys.A
      +                          utoInversionActive = NO;
 13621  004F76  0E00               	movlw	0
 13622  004F78  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 13623  004F7A  D77A               	goto	u25250
 13624  004F7C                     l21630:
 13625                           
 13626                           ; BSR set to: 1
 13627                           ;sm_ControlGate_MC50.c: 633:         {;sm_ControlGate_MC50.c: 634:             CloseOrde
      +                          r();
 13628  004F7C  ECDA  F046         	call	_CloseOrder	;wreg free
 13629                           
 13630                           ;sm_ControlGate_MC50.c: 635:             var_sys.PositionIsLost = 0;
 13631  004F80  0E00               	movlw	0
 13632  004F82  0101               	movlb	1	; () banked
 13633  004F84  6F48               	movwf	(_var_sys+72)& (0+255),b	;volatile
 13634  004F86  0012               	return	
 13635  004F88                     l21634:
 13636  004F88  0101               	movlb	1	; () banked
 13637  004F8A  0522               	decf	(_var_sys+34)& (0+255),w,b	;volatile
 13638  004F8C  A4D8               	btfss	status,2,c
 13639  004F8E  0012               	return	
 13640                           
 13641                           ; BSR set to: 1
 13642  004F90  5020               	movf	actionZone_Opened@securityClosing^0,w,c
 13643  004F92  A4D8               	btfss	status,2,c
 13644  004F94  0012               	return	
 13645                           
 13646                           ; BSR set to: 1
 13647                           ;sm_ControlGate_MC50.c: 638:     {;sm_ControlGate_MC50.c: 639:         if (ts_system.tim
      +                          eSinalizationDigit <= 1) {
 13648  004F96  BFA7               	btfsc	(_ts_system+13)& (0+255),7,b	;volatile
 13649  004F98  D006               	goto	u25500
 13650  004F9A  51A7               	movf	(_ts_system+13)& (0+255),w,b	;volatile
 13651  004F9C  E103               	bnz	u25501
 13652  004F9E  0E02               	movlw	2
 13653  004FA0  5DA6               	subwf	(_ts_system+12)& (0+255),w,b	;volatile
 13654  004FA2  B0D8               	btfsc	status,0,c
 13655  004FA4                     u25501:
 13656  004FA4  0012               	return	
 13657  004FA6                     u25500:
 13658                           
 13659                           ; BSR set to: 1
 13660                           ;sm_ControlGate_MC50.c: 640:             var_sys.DigitSinalizedTemp = NO;
 13661  004FA6  0E00               	movlw	0
 13662  004FA8  6F22               	movwf	(_var_sys+34)& (0+255),b	;volatile
 13663  004FAA  0012               	return		;funcret
 13664  004FAC                     __end_of_actionZone_Opened:
 13665                           	callstack 0
 13666                           
 13667 ;; *************** function _VerifyFollowMe *****************
 13668 ;; Defined at:
 13669 ;;		line 117 in file "sm_ControlGate_MC50.c"
 13670 ;; Parameters:    Size  Location     Type
 13671 ;;  securityClos    1    wreg     enum E10397
 13672 ;; Auto vars:     Size  Location     Type
 13673 ;;  securityClos    1   15[COMRAM] enum E10397
 13674 ;; Return value:  Size  Location     Type
 13675 ;;                  1    wreg      void 
 13676 ;; Registers used:
 13677 ;;		wreg, status,2, status,0
 13678 ;; Tracked objects:
 13679 ;;		On entry : 0/0
 13680 ;;		On exit  : 3E/0
 13681 ;;		Unchanged: 0/0
 13682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13684 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13686 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13687 ;;Total ram usage:        1 bytes
 13688 ;; Hardware stack levels used: 1
 13689 ;; Hardware stack levels required when called: 4
 13690 ;; This function calls:
 13691 ;;		Nothing
 13692 ;; This function is called by:
 13693 ;;		_actionZone_Opening
 13694 ;;		_actionZone_Opened
 13695 ;; This function uses a non-reentrant model
 13696 ;;
 13697                           
 13698                           	psect	text34
 13699  008E72                     __ptext34:
 13700                           	callstack 0
 13701  008E72                     _VerifyFollowMe:
 13702                           	callstack 24
 13703                           
 13704                           ;incstack = 0
 13705                           ;VerifyFollowMe@securityClose stored from wreg
 13706  008E72  6E10               	movwf	VerifyFollowMe@securityClose^0,c
 13707                           
 13708                           ;sm_ControlGate_MC50.c: 120:     if (var_sys_NVM.folow_me != 0 && var_sys_NVM.photoCellI
      +                          nOpen == 0)
 13709  008E74  0100               	movlb	0	; () banked
 13710  008E76  51AD               	movf	(_var_sys_NVM+21)& (0+255),w,b	;volatile
 13711  008E78  B4D8               	btfsc	status,2,c
 13712  008E7A  0012               	return	
 13713                           
 13714                           ; BSR set to: 0
 13715  008E7C  51A0               	movf	(_var_sys_NVM+8)& (0+255),w,b	;volatile
 13716  008E7E  A4D8               	btfss	status,2,c
 13717  008E80  0012               	return	
 13718                           
 13719                           ; BSR set to: 0
 13720                           ;sm_ControlGate_MC50.c: 121:     {;sm_ControlGate_MC50.c: 122:         if (securityClose
      +                           == YES && var_sys.StateFollowIsOn == NO) {
 13721  008E82  0410               	decf	VerifyFollowMe@securityClose^0,w,c
 13722  008E84  A4D8               	btfss	status,2,c
 13723  008E86  0012               	return	
 13724                           
 13725                           ; BSR set to: 0
 13726  008E88  0101               	movlb	1	; () banked
 13727  008E8A  513A               	movf	(_var_sys+58)& (0+255),w,b	;volatile
 13728  008E8C  A4D8               	btfss	status,2,c
 13729  008E8E  0012               	return	
 13730                           
 13731                           ; BSR set to: 1
 13732                           ;sm_ControlGate_MC50.c: 123:             var_sys.StateFollowIsOn = YES;
 13733  008E90  0E01               	movlw	1
 13734  008E92  6F3A               	movwf	(_var_sys+58)& (0+255),b	;volatile
 13735  008E94  0012               	return		;funcret
 13736  008E96                     __end_of_VerifyFollowMe:
 13737                           	callstack 0
 13738                           
 13739 ;; *************** function _CloseOrder *****************
 13740 ;; Defined at:
 13741 ;;		line 63 in file "sm_ControlGate_MC50.c"
 13742 ;; Parameters:    Size  Location     Type
 13743 ;;		None
 13744 ;; Auto vars:     Size  Location     Type
 13745 ;;		None
 13746 ;; Return value:  Size  Location     Type
 13747 ;;                  1    wreg      void 
 13748 ;; Registers used:
 13749 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13750 ;; Tracked objects:
 13751 ;;		On entry : 3E/1
 13752 ;;		On exit  : 3E/0
 13753 ;;		Unchanged: 0/0
 13754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13758 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13759 ;;Total ram usage:        0 bytes
 13760 ;; Hardware stack levels used: 1
 13761 ;; Hardware stack levels required when called: 6
 13762 ;; This function calls:
 13763 ;;		_InitSoftStart
 13764 ;;		_sm_send_event
 13765 ;; This function is called by:
 13766 ;;		_actionZone_Opening
 13767 ;;		_actionZone_Opened
 13768 ;; This function uses a non-reentrant model
 13769 ;;
 13770                           
 13771                           	psect	text35
 13772  008DB4                     __ptext35:
 13773                           	callstack 0
 13774  008DB4                     _CloseOrder:
 13775                           	callstack 22
 13776                           
 13777                           ;sm_ControlGate_MC50.c: 65:     var_sys.StateMotor = InClose;
 13778                           
 13779                           ;incstack = 0
 13780  008DB4  0E03               	movlw	3
 13781  008DB6  0101               	movlb	1	; () banked
 13782  008DB8  6F00               	movwf	_var_sys& (0+255),b	;volatile
 13783                           
 13784                           ; BSR set to: 1
 13785                           ;sm_ControlGate_MC50.c: 66:     sm_send_event(&controlGate_stateMachine, ev_CloseGate);
 13786  008DBA  0EE2               	movlw	low _controlGate_stateMachine
 13787  008DBC  6E12               	movwf	sm_send_event@psm^0,c
 13788  008DBE  0E01               	movlw	high _controlGate_stateMachine
 13789  008DC0  6E13               	movwf	(sm_send_event@psm+1)^0,c
 13790  008DC2  0E00               	movlw	0
 13791  008DC4  6E15               	movwf	(sm_send_event@event+1)^0,c
 13792  008DC6  0E0E               	movlw	14
 13793  008DC8  6E14               	movwf	sm_send_event@event^0,c
 13794  008DCA  EC1C  F041         	call	_sm_send_event	;wreg free
 13795                           
 13796                           ;sm_ControlGate_MC50.c: 67:     var_sys.LastState = InClose;
 13797  008DCE  0E03               	movlw	3
 13798  008DD0  0101               	movlb	1	; () banked
 13799  008DD2  6F0B               	movwf	(_var_sys+11)& (0+255),b	;volatile
 13800                           
 13801                           ; BSR set to: 1
 13802                           ;sm_ControlGate_MC50.c: 68:     InitSoftStart();
 13803  008DD4  EC4A  F041         	call	_InitSoftStart	;wreg free
 13804  008DD8  0012               	return		;funcret
 13805  008DDA                     __end_of_CloseOrder:
 13806                           	callstack 0
 13807                           
 13808 ;; *************** function _actionZone_Closing *****************
 13809 ;; Defined at:
 13810 ;;		line 649 in file "sm_ControlGate_MC50.c"
 13811 ;; Parameters:    Size  Location     Type
 13812 ;;		None
 13813 ;; Auto vars:     Size  Location     Type
 13814 ;;  typeOpenOrde    1   50[COMRAM] enum E10372
 13815 ;;  securityClos    1   49[COMRAM] enum E10397
 13816 ;; Return value:  Size  Location     Type
 13817 ;;                  1    wreg      void 
 13818 ;; Registers used:
 13819 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13820 ;; Tracked objects:
 13821 ;;		On entry : 3F/0
 13822 ;;		On exit  : 0/0
 13823 ;;		Unchanged: 0/0
 13824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13826 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13828 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13829 ;;Total ram usage:        2 bytes
 13830 ;; Hardware stack levels used: 1
 13831 ;; Hardware stack levels required when called: 7
 13832 ;; This function calls:
 13833 ;;		_GetOpenOrder
 13834 ;;		_GetSecurityStateInClosing
 13835 ;;		_InitFullAutoTime
 13836 ;;		_InitWalkAutoTime
 13837 ;;		_OpenFullOrder
 13838 ;;		_OpenWalkOrder
 13839 ;;		_SetSegmentValueIntermitent
 13840 ;;		_StopOrder
 13841 ;;		___lmul
 13842 ;;		_setPositionInvertionInClosing
 13843 ;;		_sm_send_event
 13844 ;; This function is called by:
 13845 ;;		_sm_execute_ControlGate
 13846 ;; This function uses a non-reentrant model
 13847 ;;
 13848                           
 13849                           	psect	text36
 13850  003FDE                     __ptext36:
 13851                           	callstack 0
 13852  003FDE                     _actionZone_Closing:
 13853                           	callstack 22
 13854                           
 13855                           ; BSR set to: 0
 13856                           ;sm_ControlGate_MC50.c: 651:     TypeCMD typeOpenOrder = GetOpenOrder();
 13857                           
 13858                           ;incstack = 0
 13859  003FDE  ECBF  F028         	call	_GetOpenOrder	;wreg free
 13860  003FE2  6E33               	movwf	actionZone_Closing@typeOpenOrder^0,c
 13861                           
 13862                           ;sm_ControlGate_MC50.c: 653:     StateEnum securityClosing = GetSecurityStateInClosing()
      +                          ;
 13863  003FE4  EC6B  F039         	call	_GetSecurityStateInClosing	;wreg free
 13864  003FE8  6E32               	movwf	actionZone_Closing@securityClosing^0,c
 13865                           
 13866                           ;sm_ControlGate_MC50.c: 654:     Abertura_pedonal = 0;
 13867  003FEA  0E00               	movlw	0
 13868  003FEC  0101               	movlb	1	; () banked
 13869  003FEE  6F8D               	movwf	_Abertura_pedonal& (0+255),b
 13870                           
 13871                           ; BSR set to: 1
 13872                           ;sm_ControlGate_MC50.c: 656:     InitFullAutoTime();
 13873  003FF0  ECE1  F047         	call	_InitFullAutoTime	;wreg free
 13874                           
 13875                           ; BSR set to: 0
 13876                           ;sm_ControlGate_MC50.c: 658:     var_sys.passoAPassoAutoClose = NO;
 13877  003FF4  0E00               	movlw	0
 13878  003FF6  0101               	movlb	1	; () banked
 13879  003FF8  6F50               	movwf	(_var_sys+80)& (0+255),b	;volatile
 13880                           
 13881                           ; BSR set to: 1
 13882                           ;sm_ControlGate_MC50.c: 660:     if (var_sys.NumberOffErrors > 3) {
 13883  003FFA  0E03               	movlw	3
 13884  003FFC  6543               	cpfsgt	(_var_sys+67)& (0+255),b	;volatile
 13885  003FFE  D00D               	goto	l21658
 13886                           
 13887                           ; BSR set to: 1
 13888                           ;sm_ControlGate_MC50.c: 662:         var_sys.StateMotor = Stopped;
 13889  004000  0E00               	movlw	0
 13890  004002  6F00               	movwf	_var_sys& (0+255),b	;volatile
 13891  004004                     l21656:
 13892                           
 13893                           ; BSR set to: 1
 13894                           ;sm_ControlGate_MC50.c: 663:         sm_send_event(&controlGate_stateMachine, ev_ErrorGa
      +                          te);
 13895  004004  0EE2               	movlw	low _controlGate_stateMachine
 13896  004006  6E12               	movwf	sm_send_event@psm^0,c
 13897  004008  0E01               	movlw	high _controlGate_stateMachine
 13898  00400A  6E13               	movwf	(sm_send_event@psm+1)^0,c
 13899  00400C  0E00               	movlw	0
 13900  00400E  6E15               	movwf	(sm_send_event@event+1)^0,c
 13901  004010  0E10               	movlw	16
 13902  004012  6E14               	movwf	sm_send_event@event^0,c
 13903  004014  EC1C  F041         	call	_sm_send_event	;wreg free
 13904                           
 13905                           ;sm_ControlGate_MC50.c: 664:     } else if ((var_sys.FimCurso_CloseIsEnabled == YES)||(v
      +                          ar_sys.TimeMaxMotorIsON<=0) && (var_sys.LearningIsEnabled==NO) && (var_sys.PositionIsLos
      +                          t==NO)) {
 13906  004018  0012               	return	
 13907  00401A                     l21658:
 13908                           
 13909                           ; BSR set to: 1
 13910  00401A  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
 13911  00401C  B4D8               	btfsc	status,2,c
 13912  00401E  D00C               	goto	u25550
 13913                           
 13914                           ; BSR set to: 1
 13915  004020  5118               	movf	(_var_sys+24)& (0+255),w,b	;volatile
 13916  004022  1119               	iorwf	(_var_sys+25)& (0+255),w,b	;volatile
 13917  004024  111A               	iorwf	(_var_sys+26)& (0+255),w,b	;volatile
 13918  004026  111B               	iorwf	(_var_sys+27)& (0+255),w,b	;volatile
 13919  004028  A4D8               	btfss	status,2,c
 13920  00402A  D05F               	goto	l21690
 13921                           
 13922                           ; BSR set to: 1
 13923  00402C  5126               	movf	(_var_sys+38)& (0+255),w,b	;volatile
 13924  00402E  A4D8               	btfss	status,2,c
 13925  004030  D05C               	goto	l21690
 13926                           
 13927                           ; BSR set to: 1
 13928  004032  5148               	movf	(_var_sys+72)& (0+255),w,b	;volatile
 13929  004034  A4D8               	btfss	status,2,c
 13930  004036  D059               	goto	l21690
 13931  004038                     u25550:
 13932                           
 13933                           ; BSR set to: 1
 13934                           ;sm_ControlGate_MC50.c: 666:         if (var_sys_NVM.flashLightMode == 2) {
 13935  004038  0E02               	movlw	2
 13936  00403A  0100               	movlb	0	; () banked
 13937  00403C  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 13938  00403E  A4D8               	btfss	status,2,c
 13939  004040  D018               	goto	l21670
 13940                           
 13941                           ; BSR set to: 0
 13942                           ;sm_ControlGate_MC50.c: 667:             ts_system.TimeOnFlashLigth = (long) ((long) var
      +                          _sys_NVM.ligthTime * ((1000/50)*60));
 13943  004042  51AC               	movf	(_var_sys_NVM+20)& (0+255),w,b	;volatile
 13944  004044  6E1D               	movwf	___lmul@multiplier^0,c
 13945  004046  6A1E               	clrf	(___lmul@multiplier+1)^0,c
 13946  004048  6A1F               	clrf	(___lmul@multiplier+2)^0,c
 13947  00404A  6A20               	clrf	(___lmul@multiplier+3)^0,c
 13948  00404C  0EB0               	movlw	176
 13949  00404E  6E21               	movwf	___lmul@multiplicand^0,c
 13950  004050  0E04               	movlw	4
 13951  004052  6E22               	movwf	(___lmul@multiplicand+1)^0,c
 13952  004054  0E00               	movlw	0
 13953  004056  6E23               	movwf	(___lmul@multiplicand+2)^0,c
 13954  004058  0E00               	movlw	0
 13955  00405A  6E24               	movwf	(___lmul@multiplicand+3)^0,c
 13956  00405C  EC2A  F042         	call	___lmul	;wreg free
 13957  004060  C01D  F1BA         	movff	?___lmul,_ts_system+32	;volatile
 13958  004064  C01E  F1BB         	movff	?___lmul+1,_ts_system+33	;volatile
 13959  004068  C01F  F1BC         	movff	?___lmul+2,_ts_system+34	;volatile
 13960  00406C  C020  F1BD         	movff	?___lmul+3,_ts_system+35	;volatile
 13961                           
 13962                           ;sm_ControlGate_MC50.c: 668:         }
 13963  004070  D009               	goto	l2768
 13964  004072                     l21670:
 13965                           
 13966                           ; BSR set to: 0
 13967                           ;sm_ControlGate_MC50.c: 670:             ts_system.TimeOnFlashLigth = 0;
 13968  004072  0E00               	movlw	0
 13969  004074  0101               	movlb	1	; () banked
 13970  004076  6FBA               	movwf	(_ts_system+32)& (0+255),b	;volatile
 13971  004078  0E00               	movlw	0
 13972  00407A  6FBB               	movwf	(_ts_system+33)& (0+255),b	;volatile
 13973  00407C  0E00               	movlw	0
 13974  00407E  6FBC               	movwf	(_ts_system+34)& (0+255),b	;volatile
 13975  004080  0E00               	movlw	0
 13976  004082  6FBD               	movwf	(_ts_system+35)& (0+255),b	;volatile
 13977  004084                     l2768:
 13978                           
 13979                           ;sm_ControlGate_MC50.c: 672:         var_sys.AutoInversionActiveStop = NO;
 13980  004084  0E00               	movlw	0
 13981  004086  0101               	movlb	1	; () banked
 13982  004088  6F12               	movwf	(_var_sys+18)& (0+255),b	;volatile
 13983                           
 13984                           ;sm_ControlGate_MC50.c: 674:         var_sys.Statedoorcontrol = st_Closed;
 13985  00408A  0E01               	movlw	1
 13986  00408C  6F1C               	movwf	(_var_sys+28)& (0+255),b	;volatile
 13987                           
 13988                           ; BSR set to: 1
 13989                           ;sm_ControlGate_MC50.c: 675:         var_sys.actualCounterMoves++;
 13990  00408E  0E01               	movlw	1
 13991  004090  273C               	addwf	(_var_sys+60)& (0+255),f,b	;volatile
 13992  004092  0E00               	movlw	0
 13993  004094  233D               	addwfc	(_var_sys+61)& (0+255),f,b	;volatile
 13994  004096  233E               	addwfc	(_var_sys+62)& (0+255),f,b	;volatile
 13995  004098  233F               	addwfc	(_var_sys+63)& (0+255),f,b	;volatile
 13996                           
 13997                           ; BSR set to: 1
 13998                           ;sm_ControlGate_MC50.c: 676:         var_sys.Timewalkisactived = 0;
 13999  00409A  0E00               	movlw	0
 14000  00409C  6F4A               	movwf	(_var_sys+74)& (0+255),b	;volatile
 14001                           
 14002                           ; BSR set to: 1
 14003                           ;sm_ControlGate_MC50.c: 677:         var_sys.PositionActual = 0;
 14004  00409E  0E00               	movlw	0
 14005  0040A0  6F1E               	movwf	(_var_sys+30)& (0+255),b	;volatile
 14006  0040A2  0E00               	movlw	0
 14007  0040A4  6F1F               	movwf	(_var_sys+31)& (0+255),b	;volatile
 14008  0040A6  0E00               	movlw	0
 14009  0040A8  6F20               	movwf	(_var_sys+32)& (0+255),b	;volatile
 14010  0040AA  0E00               	movlw	0
 14011  0040AC  6F21               	movwf	(_var_sys+33)& (0+255),b	;volatile
 14012                           
 14013                           ; BSR set to: 1
 14014                           ;sm_ControlGate_MC50.c: 679:         var_sys.PositionIsLost = NO;
 14015  0040AE  0E00               	movlw	0
 14016  0040B0  6F48               	movwf	(_var_sys+72)& (0+255),b	;volatile
 14017                           
 14018                           ; BSR set to: 1
 14019                           ;sm_ControlGate_MC50.c: 680:         var_sys.NumberOffErrors = 0;
 14020  0040B2  0E00               	movlw	0
 14021  0040B4  6F43               	movwf	(_var_sys+67)& (0+255),b	;volatile
 14022                           
 14023                           ; BSR set to: 1
 14024                           ;sm_ControlGate_MC50.c: 681:         var_sys.StateMotor = Stopped;
 14025  0040B6  0E00               	movlw	0
 14026  0040B8  6F00               	movwf	_var_sys& (0+255),b	;volatile
 14027                           
 14028                           ; BSR set to: 1
 14029                           ;sm_ControlGate_MC50.c: 683:         ts_system.timeSinalizationDigit = (1000/50) * 2;
 14030  0040BA  0E00               	movlw	0
 14031  0040BC  6FA7               	movwf	(_ts_system+13)& (0+255),b	;volatile
 14032  0040BE  0E28               	movlw	40
 14033  0040C0  6FA6               	movwf	(_ts_system+12)& (0+255),b	;volatile
 14034                           
 14035                           ; BSR set to: 1
 14036                           ;sm_ControlGate_MC50.c: 684:         SetSegmentValueIntermitent(dF, dC, ( 200/50));
 14037  0040C2  0E0C               	movlw	12
 14038  0040C4  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 14039  0040C6  0E00               	movlw	0
 14040  0040C8  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 14041  0040CA  0E04               	movlw	4
 14042  0040CC  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 14043  0040CE  0E0F               	movlw	15
 14044  0040D0  EC94  F045         	call	_SetSegmentValueIntermitent
 14045                           
 14046                           ; BSR set to: 1
 14047                           ;sm_ControlGate_MC50.c: 687:          sm_send_event(&controlGate_stateMachine, ev_Closed
      +                          Gate);
 14048  0040D4  0EE2               	movlw	low _controlGate_stateMachine
 14049  0040D6  6E12               	movwf	sm_send_event@psm^0,c
 14050  0040D8  0E01               	movlw	high _controlGate_stateMachine
 14051  0040DA  6E13               	movwf	(sm_send_event@psm+1)^0,c
 14052  0040DC  0E00               	movlw	0
 14053  0040DE  6E15               	movwf	(sm_send_event@event+1)^0,c
 14054  0040E0  0E0F               	movlw	15
 14055  0040E2  6E14               	movwf	sm_send_event@event^0,c
 14056  0040E4  EC1C  F041         	call	_sm_send_event	;wreg free
 14057                           
 14058                           ;sm_ControlGate_MC50.c: 691:     }
 14059  0040E8  0012               	return	
 14060  0040EA                     l21690:
 14061                           
 14062                           ; BSR set to: 1
 14063  0040EA  0432               	decf	actionZone_Closing@securityClosing^0,w,c
 14064  0040EC  B4D8               	btfsc	status,2,c
 14065  0040EE  D011               	goto	u25600
 14066                           
 14067                           ; BSR set to: 1
 14068  0040F0  BFC5               	btfsc	(_ts_system+43)& (0+255),7,b	;volatile
 14069  0040F2  D021               	goto	l21710
 14070  0040F4  51C5               	movf	(_ts_system+43)& (0+255),w,b	;volatile
 14071  0040F6  E103               	bnz	u25580
 14072  0040F8  05C4               	decf	(_ts_system+42)& (0+255),w,b	;volatile
 14073  0040FA  A0D8               	btfss	status,0,c
 14074  0040FC  D01C               	goto	l21710
 14075  0040FE                     u25580:
 14076                           
 14077                           ; BSR set to: 1
 14078  0040FE  0541               	decf	(_var_sys+65)& (0+255),w,b	;volatile
 14079  004100  A4D8               	btfss	status,2,c
 14080  004102  D019               	goto	l21710
 14081                           
 14082                           ; BSR set to: 1
 14083  004104  BFCB               	btfsc	(_ts_system+49)& (0+255),7,b	;volatile
 14084  004106  D005               	goto	u25600
 14085  004108  51CB               	movf	(_ts_system+49)& (0+255),w,b	;volatile
 14086  00410A  E115               	bnz	l21710
 14087  00410C  05CA               	decf	(_ts_system+48)& (0+255),w,b	;volatile
 14088  00410E  B0D8               	btfsc	status,0,c
 14089  004110  D012               	goto	l21710
 14090  004112                     u25600:
 14091                           
 14092                           ; BSR set to: 1
 14093  004112  5127               	movf	(_var_sys+39)& (0+255),w,b	;volatile
 14094  004114  A4D8               	btfss	status,2,c
 14095  004116  D00F               	goto	l21710
 14096                           
 14097                           ; BSR set to: 1
 14098                           ;sm_ControlGate_MC50.c: 694:          if (securityClosing != YES){
 14099  004118  0432               	decf	actionZone_Closing@securityClosing^0,w,c
 14100  00411A  A4D8               	btfss	status,2,c
 14101                           
 14102                           ; BSR set to: 1
 14103                           ;sm_ControlGate_MC50.c: 695:             var_sys.NumberOffErrors++;
 14104  00411C  2B43               	incf	(_var_sys+67)& (0+255),f,b	;volatile
 14105                           
 14106                           ; BSR set to: 1
 14107                           ;sm_ControlGate_MC50.c: 697:         var_sys.NumberOffErrors++;
 14108                           
 14109                           ;sm_ControlGate_MC50.c: 696:         }
 14110  00411E  2B43               	incf	(_var_sys+67)& (0+255),f,b	;volatile
 14111                           
 14112                           ; BSR set to: 1
 14113                           ;sm_ControlGate_MC50.c: 698:         var_sys.AutoInversionActive = YES;
 14114  004120  0E01               	movlw	1
 14115  004122  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 14116                           
 14117                           ; BSR set to: 1
 14118                           ;sm_ControlGate_MC50.c: 699:         ts_system.TimeWaitToNextState = ( 500/50);
 14119  004124  0E00               	movlw	0
 14120  004126  6FBF               	movwf	(_ts_system+37)& (0+255),b	;volatile
 14121  004128  0E0A               	movlw	10
 14122  00412A  6FBE               	movwf	(_ts_system+36)& (0+255),b	;volatile
 14123                           
 14124                           ; BSR set to: 1
 14125                           ;sm_ControlGate_MC50.c: 700:         ts_system.TimeStopElectricBrake = ((1000/50)+( 500/
      +                          50));
 14126  00412C  0E00               	movlw	0
 14127  00412E  6FDB               	movwf	(_ts_system+65)& (0+255),b	;volatile
 14128  004130  0E1E               	movlw	30
 14129  004132  6FDA               	movwf	(_ts_system+64)& (0+255),b	;volatile
 14130                           
 14131                           ;sm_ControlGate_MC50.c: 702:     }
 14132  004134  0012               	return	
 14133  004136                     l21710:
 14134                           
 14135                           ; BSR set to: 1
 14136  004136  BFC5               	btfsc	(_ts_system+43)& (0+255),7,b	;volatile
 14137  004138  D02E               	goto	l21740
 14138  00413A  51C5               	movf	(_ts_system+43)& (0+255),w,b	;volatile
 14139  00413C  E103               	bnz	u25630
 14140  00413E  05C4               	decf	(_ts_system+42)& (0+255),w,b	;volatile
 14141  004140  A0D8               	btfss	status,0,c
 14142  004142  D029               	goto	l21740
 14143  004144                     u25630:
 14144                           
 14145                           ; BSR set to: 1
 14146  004144  0527               	decf	(_var_sys+39)& (0+255),w,b	;volatile
 14147  004146  A4D8               	btfss	status,2,c
 14148  004148  D026               	goto	l21740
 14149                           
 14150                           ; BSR set to: 1
 14151                           ;sm_ControlGate_MC50.c: 704:         if (var_sys.InvertionCurrentOpening == YES) {
 14152  00414A  0545               	decf	(_var_sys+69)& (0+255),w,b	;volatile
 14153  00414C  A4D8               	btfss	status,2,c
 14154  00414E  D005               	goto	l21722
 14155  004150                     u25650:
 14156                           
 14157                           ; BSR set to: 1
 14158                           ;sm_ControlGate_MC50.c: 706:             var_sys.StateMotor = Stopped;
 14159  004150  0E00               	movlw	0
 14160  004152  6F00               	movwf	_var_sys& (0+255),b	;volatile
 14161                           
 14162                           ; BSR set to: 1
 14163                           ;sm_ControlGate_MC50.c: 707:             setPositionInvertionInClosing();
 14164  004154  ECBB  F031         	call	_setPositionInvertionInClosing	;wreg free
 14165  004158  D755               	goto	l21656
 14166  00415A                     l21722:
 14167                           
 14168                           ; BSR set to: 1
 14169  00415A  BFBF               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 14170  00415C  D005               	goto	u25660
 14171  00415E  51BF               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 14172  004160  E117               	bnz	l21738
 14173  004162  05BE               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 14174  004164  B0D8               	btfsc	status,0,c
 14175  004166  D014               	goto	l21738
 14176  004168                     u25660:
 14177                           
 14178                           ; BSR set to: 1
 14179                           ;sm_ControlGate_MC50.c: 710:          if(var_sys.Timewalkisactived == YES){
 14180  004168  054A               	decf	(_var_sys+74)& (0+255),w,b	;volatile
 14181  00416A  A4D8               	btfss	status,2,c
 14182  00416C  D003               	goto	l21728
 14183                           
 14184                           ; BSR set to: 1
 14185                           ;sm_ControlGate_MC50.c: 711:                 OpenWalkOrder();
 14186  00416E  ECB1  F03F         	call	_OpenWalkOrder	;wreg free
 14187                           
 14188                           ;sm_ControlGate_MC50.c: 713:             }
 14189  004172  D004               	goto	l21732
 14190  004174                     l21728:
 14191                           
 14192                           ; BSR set to: 1
 14193                           ;sm_ControlGate_MC50.c: 716:             OpenFullOrder();
 14194  004174  ECED  F046         	call	_OpenFullOrder	;wreg free
 14195                           
 14196                           ;sm_ControlGate_MC50.c: 718:             setPositionInvertionInClosing();
 14197  004178  ECBB  F031         	call	_setPositionInvertionInClosing	;wreg free
 14198  00417C                     l21732:
 14199                           
 14200                           ;sm_ControlGate_MC50.c: 720:             var_sys.AutoInversionActive = NO;
 14201  00417C  0E00               	movlw	0
 14202  00417E  0101               	movlb	1	; () banked
 14203  004180  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 14204                           
 14205                           ; BSR set to: 1
 14206                           ;sm_ControlGate_MC50.c: 721:             var_sys.InvertionCurrentClosing = YES;
 14207  004182  0E01               	movlw	1
 14208  004184  6F44               	movwf	(_var_sys+68)& (0+255),b	;volatile
 14209                           
 14210                           ; BSR set to: 1
 14211                           ;sm_ControlGate_MC50.c: 722:             ts_system.TimeInversionStart = (1000/50);
 14212  004186  0E00               	movlw	0
 14213  004188  6FCB               	movwf	(_ts_system+49)& (0+255),b	;volatile
 14214  00418A  0E14               	movlw	20
 14215  00418C  6FCA               	movwf	(_ts_system+48)& (0+255),b	;volatile
 14216                           
 14217                           ;sm_ControlGate_MC50.c: 726:         } else
 14218  00418E  0012               	return	
 14219  004190                     l21738:
 14220                           
 14221                           ; BSR set to: 1
 14222                           ;sm_ControlGate_MC50.c: 727:         {;sm_ControlGate_MC50.c: 728:             var_sys.S
      +                          tateMotor = Stopped;
 14223  004190  0E00               	movlw	0
 14224  004192  6F00               	movwf	_var_sys& (0+255),b	;volatile
 14225  004194  0012               	return	
 14226  004196                     l21740:
 14227                           
 14228                           ; BSR set to: 1
 14229  004196  0527               	decf	(_var_sys+39)& (0+255),w,b	;volatile
 14230  004198  A4D8               	btfss	status,2,c
 14231  00419A  D017               	goto	l21756
 14232                           
 14233                           ; BSR set to: 1
 14234                           ;sm_ControlGate_MC50.c: 732:                 var_sys.StateMotor = Stopped;
 14235  00419C  0E00               	movlw	0
 14236  00419E  6F00               	movwf	_var_sys& (0+255),b	;volatile
 14237                           
 14238                           ; BSR set to: 1
 14239                           ;sm_ControlGate_MC50.c: 737:         if (ts_system.TimeWaitToNextState <= 0) {
 14240  0041A0  BFBF               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 14241  0041A2  D005               	goto	u25690
 14242  0041A4  51BF               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 14243  0041A6  E160               	bnz	l2805
 14244  0041A8  05BE               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 14245  0041AA  B0D8               	btfsc	status,0,c
 14246  0041AC  0012               	return	
 14247  0041AE                     u25690:
 14248                           
 14249                           ; BSR set to: 1
 14250                           ;sm_ControlGate_MC50.c: 738:             if(var_sys.Timewalkisactived == YES){
 14251  0041AE  054A               	decf	(_var_sys+74)& (0+255),w,b	;volatile
 14252  0041B0  A4D8               	btfss	status,2,c
 14253  0041B2  D003               	goto	l21750
 14254                           
 14255                           ; BSR set to: 1
 14256                           ;sm_ControlGate_MC50.c: 739:                 OpenWalkOrder();
 14257  0041B4  ECB1  F03F         	call	_OpenWalkOrder	;wreg free
 14258                           
 14259                           ;sm_ControlGate_MC50.c: 741:             }
 14260  0041B8  D004               	goto	l21754
 14261  0041BA                     l21750:
 14262                           
 14263                           ; BSR set to: 1
 14264                           ;sm_ControlGate_MC50.c: 744:                  OpenFullOrder();
 14265  0041BA  ECED  F046         	call	_OpenFullOrder	;wreg free
 14266                           
 14267                           ;sm_ControlGate_MC50.c: 746:             setPositionInvertionInClosing();
 14268  0041BE  ECBB  F031         	call	_setPositionInvertionInClosing	;wreg free
 14269  0041C2                     l21754:
 14270                           
 14271                           ;sm_ControlGate_MC50.c: 748:             var_sys.AutoInversionActive = NO;
 14272  0041C2  0E00               	movlw	0
 14273  0041C4  0101               	movlb	1	; () banked
 14274  0041C6  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 14275  0041C8  0012               	return	
 14276  0041CA                     l21756:
 14277                           
 14278                           ; BSR set to: 1
 14279  0041CA  5100               	movf	_var_sys& (0+255),w,b	;volatile
 14280  0041CC  A4D8               	btfss	status,2,c
 14281  0041CE  D00B               	goto	l21772
 14282                           
 14283                           ; BSR set to: 1
 14284                           ;sm_ControlGate_MC50.c: 755:         if(securityClosing != ST){
 14285  0041D0  0E02               	movlw	2
 14286  0041D2  1832               	xorwf	actionZone_Closing@securityClosing^0,w,c
 14287  0041D4  B4D8               	btfsc	status,2,c
 14288  0041D6  D002               	goto	l21768
 14289                           
 14290                           ; BSR set to: 1
 14291                           ;sm_ControlGate_MC50.c: 756:            var_sys.NumberOffErrors++;
 14292  0041D8  2B43               	incf	(_var_sys+67)& (0+255),f,b	;volatile
 14293  0041DA  D7BA               	goto	u25650
 14294  0041DC                     l21768:
 14295                           
 14296                           ; BSR set to: 1
 14297                           ;sm_ControlGate_MC50.c: 761:         {;sm_ControlGate_MC50.c: 762:             setPositi
      +                          onInvertionInClosing();
 14298  0041DC  ECBB  F031         	call	_setPositionInvertionInClosing	;wreg free
 14299  0041E0                     l21770:
 14300                           
 14301                           ;sm_ControlGate_MC50.c: 763:             StopOrder();
 14302  0041E0  EC8F  F047         	call	_StopOrder	;wreg free
 14303  0041E4  0012               	return	
 14304  0041E6                     l21772:
 14305                           
 14306                           ; BSR set to: 1
 14307  0041E6  BFCD               	btfsc	(_ts_system+51)& (0+255),7,b	;volatile
 14308  0041E8  D005               	goto	u25730
 14309  0041EA  51CD               	movf	(_ts_system+51)& (0+255),w,b	;volatile
 14310  0041EC  E10B               	bnz	l21782
 14311  0041EE  05CC               	decf	(_ts_system+50)& (0+255),w,b	;volatile
 14312  0041F0  B0D8               	btfsc	status,0,c
 14313  0041F2  D008               	goto	l21782
 14314  0041F4                     u25730:
 14315                           
 14316                           ; BSR set to: 1
 14317  0041F4  0546               	decf	(_var_sys+70)& (0+255),w,b	;volatile
 14318  0041F6  A4D8               	btfss	status,2,c
 14319  0041F8  D005               	goto	l21782
 14320                           
 14321                           ; BSR set to: 1
 14322                           ;sm_ControlGate_MC50.c: 768:         setPositionInvertionInClosing();
 14323  0041FA  ECBB  F031         	call	_setPositionInvertionInClosing	;wreg free
 14324                           
 14325                           ; BSR set to: 1
 14326                           ;sm_ControlGate_MC50.c: 769:         var_sys.InvertionClosingFromOpen = NO;
 14327  0041FE  0E00               	movlw	0
 14328  004200  6F46               	movwf	(_var_sys+70)& (0+255),b	;volatile
 14329  004202  D7EE               	goto	l21770
 14330  004204                     l21782:
 14331                           
 14332                           ; BSR set to: 1
 14333  004204  0100               	movlb	0	; () banked
 14334  004206  05A8               	decf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 14335  004208  B4D8               	btfsc	status,2,c
 14336  00420A  D004               	goto	u25760
 14337                           
 14338                           ; BSR set to: 0
 14339  00420C  0E02               	movlw	2
 14340  00420E  19A8               	xorwf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 14341  004210  A4D8               	btfss	status,2,c
 14342  004212  D005               	goto	l21790
 14343  004214                     u25760:
 14344                           
 14345                           ; BSR set to: 0
 14346                           ;sm_ControlGate_MC50.c: 773:         if (typeOpenOrder != TypeFullClose) {
 14347  004214  0E04               	movlw	4
 14348  004216  1833               	xorwf	actionZone_Closing@typeOpenOrder^0,w,c
 14349  004218  B4D8               	btfsc	status,2,c
 14350  00421A  0012               	return	
 14351  00421C  D7E1               	goto	l21770
 14352  00421E                     l21790:
 14353                           
 14354                           ; BSR set to: 0
 14355  00421E  5033               	movf	actionZone_Closing@typeOpenOrder^0,w,c
 14356  004220  B4D8               	btfsc	status,2,c
 14357  004222  0012               	return	
 14358                           
 14359                           ; BSR set to: 0
 14360                           ;sm_ControlGate_MC50.c: 788:         if ( var_sys_NVM.operationMode == ModoPassoPasso )
 14361  004224  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 14362  004226  A4D8               	btfss	status,2,c
 14363  004228  D013               	goto	l21806
 14364                           
 14365                           ; BSR set to: 0
 14366                           ;sm_ControlGate_MC50.c: 789:         {;sm_ControlGate_MC50.c: 790:             setPositi
      +                          onInvertionInClosing();
 14367  00422A  ECBB  F031         	call	_setPositionInvertionInClosing	;wreg free
 14368                           
 14369                           ; BSR set to: 1
 14370                           ;sm_ControlGate_MC50.c: 791:             StopOrder();
 14371  00422E  EC8F  F047         	call	_StopOrder	;wreg free
 14372                           
 14373                           ;sm_ControlGate_MC50.c: 793:             if (typeOpenOrder == TypeWalk && var_sys_NVM.op
      +                          erationMode != ModoCondominio)
 14374  004232  0E02               	movlw	2
 14375  004234  1833               	xorwf	actionZone_Closing@typeOpenOrder^0,w,c
 14376  004236  A4D8               	btfss	status,2,c
 14377  004238  0012               	return	
 14378  00423A  0E02               	movlw	2
 14379  00423C  0100               	movlb	0	; () banked
 14380  00423E  19A4               	xorwf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 14381  004240  B4D8               	btfsc	status,2,c
 14382  004242  0012               	return	
 14383                           
 14384                           ; BSR set to: 0
 14385                           ;sm_ControlGate_MC50.c: 794:             {;sm_ControlGate_MC50.c: 795:                 I
      +                          nitWalkAutoTime();
 14386  004244  EC66  F048         	call	_InitWalkAutoTime	;wreg free
 14387                           
 14388                           ; BSR set to: 0
 14389                           ;sm_ControlGate_MC50.c: 796:                 var_sys.showAP = YES;
 14390  004248  0E01               	movlw	1
 14391  00424A  0101               	movlb	1	; () banked
 14392  00424C  6F4F               	movwf	(_var_sys+79)& (0+255),b	;volatile
 14393  00424E  0012               	return	
 14394  004250                     l21806:
 14395                           
 14396                           ; BSR set to: 0
 14397                           ;sm_ControlGate_MC50.c: 801:         {;sm_ControlGate_MC50.c: 802:             if (typeO
      +                          penOrder != TypeFullClose){
 14398  004250  0E04               	movlw	4
 14399  004252  1833               	xorwf	actionZone_Closing@typeOpenOrder^0,w,c
 14400  004254  B4D8               	btfsc	status,2,c
 14401  004256  D7C4               	goto	l21770
 14402                           
 14403                           ; BSR set to: 0
 14404                           ;sm_ControlGate_MC50.c: 803:                 var_sys.AutoInversionActive = YES;
 14405  004258  0E01               	movlw	1
 14406  00425A  0101               	movlb	1	; () banked
 14407  00425C  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 14408                           
 14409                           ;sm_ControlGate_MC50.c: 804:                 ts_system.TimeWaitToNextState = ( 500/50);
 14410  00425E  0E00               	movlw	0
 14411  004260  6FBF               	movwf	(_ts_system+37)& (0+255),b	;volatile
 14412  004262  0E0A               	movlw	10
 14413  004264  6FBE               	movwf	(_ts_system+36)& (0+255),b	;volatile
 14414                           
 14415                           ;sm_ControlGate_MC50.c: 806:             }
 14416  004266  0012               	return	
 14417  004268                     l2805:
 14418  004268  0012               	return		;funcret
 14419  00426A                     __end_of_actionZone_Closing:
 14420                           	callstack 0
 14421                           
 14422 ;; *************** function _setPositionInvertionInClosing *****************
 14423 ;; Defined at:
 14424 ;;		line 867 in file "sm_ControlGate_MC50.c"
 14425 ;; Parameters:    Size  Location     Type
 14426 ;;		None
 14427 ;; Auto vars:     Size  Location     Type
 14428 ;;		None
 14429 ;; Return value:  Size  Location     Type
 14430 ;;                  1    wreg      void 
 14431 ;; Registers used:
 14432 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 14433 ;; Tracked objects:
 14434 ;;		On entry : 3E/1
 14435 ;;		On exit  : 3F/1
 14436 ;;		Unchanged: 0/0
 14437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14438 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14439 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14440 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14441 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14442 ;;Total ram usage:       12 bytes
 14443 ;; Hardware stack levels used: 1
 14444 ;; Hardware stack levels required when called: 6
 14445 ;; This function calls:
 14446 ;;		_getTimeDecelaration
 14447 ;; This function is called by:
 14448 ;;		_actionZone_Opening
 14449 ;;		_actionZone_Closing
 14450 ;; This function uses a non-reentrant model
 14451 ;;
 14452                           
 14453                           	psect	text37
 14454  006376                     __ptext37:
 14455                           	callstack 0
 14456  006376                     _setPositionInvertionInClosing:
 14457                           	callstack 22
 14458                           
 14459                           ;sm_ControlGate_MC50.c: 872:     if(var_sys_NVM.TypeofMotor != 2){
 14460                           
 14461                           ;incstack = 0
 14462  006376  0E02               	movlw	2
 14463  006378  0100               	movlb	0	; () banked
 14464  00637A  19B4               	xorwf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 14465  00637C  B4D8               	btfsc	status,2,c
 14466  00637E  D007               	goto	l20452
 14467                           
 14468                           ; BSR set to: 0
 14469                           ;sm_ControlGate_MC50.c: 874:        var_sys.PositionActual += ( 100/50);
 14470  006380  0E02               	movlw	2
 14471  006382  0101               	movlb	1	; () banked
 14472  006384  271E               	addwf	(_var_sys+30)& (0+255),f,b	;volatile
 14473  006386  0E00               	movlw	0
 14474  006388  231F               	addwfc	(_var_sys+31)& (0+255),f,b	;volatile
 14475  00638A  2320               	addwfc	(_var_sys+32)& (0+255),f,b	;volatile
 14476  00638C  D008               	goto	L74
 14477  00638E                     l20452:
 14478                           
 14479                           ; BSR set to: 0
 14480                           ;sm_ControlGate_MC50.c: 878:     {;sm_ControlGate_MC50.c: 879:        var_sys.PositionAc
      +                          tual -= ( 50/50);
 14481  00638E  0EFF               	movlw	255
 14482  006390  0101               	movlb	1	; () banked
 14483  006392  271E               	addwf	(_var_sys+30)& (0+255),f,b	;volatile
 14484  006394  0EFF               	movlw	255
 14485  006396  231F               	addwfc	(_var_sys+31)& (0+255),f,b	;volatile
 14486  006398  0EFF               	movlw	255
 14487  00639A  2320               	addwfc	(_var_sys+32)& (0+255),f,b	;volatile
 14488  00639C  0EFF               	movlw	255
 14489  00639E                     L74:
 14490  00639E  2321               	addwfc	(_var_sys+33)& (0+255),f,b	;volatile
 14491                           
 14492                           ; BSR set to: 1
 14493                           ;sm_ControlGate_MC50.c: 882:     if (var_sys.PositionActual > getTimeDecelaration(InOpen
      +                          Full)&& var_sys_NVM.TypeofMotor != 2) {
 14494  0063A0  0E01               	movlw	1
 14495  0063A2  ECEE  F035         	call	_getTimeDecelaration
 14496  0063A6  0101               	movlb	1	; () banked
 14497  0063A8  511E               	movf	(_var_sys+30)& (0+255),w,b	;volatile
 14498  0063AA  5C29               	subwf	?_getTimeDecelaration^0,w,c
 14499  0063AC  511F               	movf	(_var_sys+31)& (0+255),w,b	;volatile
 14500  0063AE  582A               	subwfb	(?_getTimeDecelaration+1)^0,w,c
 14501  0063B0  5120               	movf	(_var_sys+32)& (0+255),w,b	;volatile
 14502  0063B2  582B               	subwfb	(?_getTimeDecelaration+2)^0,w,c
 14503  0063B4  502C               	movf	(?_getTimeDecelaration+3)^0,w,c
 14504  0063B6  0A80               	xorlw	128
 14505  0063B8  0100               	movlb	0	; () banked
 14506  0063BA  6FD8               	movwf	??_setPositionInvertionInClosing& (0+255),b
 14507  0063BC  0101               	movlb	1	; () banked
 14508  0063BE  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 14509  0063C0  0A80               	xorlw	128
 14510  0063C2  0100               	movlb	0	; () banked
 14511  0063C4  59D8               	subwfb	??_setPositionInvertionInClosing& (0+255),w,b
 14512  0063C6  B0D8               	btfsc	status,0,c
 14513  0063C8  D008               	goto	l20460
 14514                           
 14515                           ; BSR set to: 0
 14516  0063CA  0E02               	movlw	2
 14517  0063CC  19B4               	xorwf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 14518  0063CE  B4D8               	btfsc	status,2,c
 14519  0063D0  D004               	goto	l20460
 14520                           
 14521                           ; BSR set to: 0
 14522                           ;sm_ControlGate_MC50.c: 883:         var_sys.PositionActual = getTimeDecelaration(InOpen
      +                          Full);
 14523  0063D2  0E01               	movlw	1
 14524  0063D4  ECEE  F035         	call	_getTimeDecelaration
 14525  0063D8  D01A               	goto	L75
 14526  0063DA                     l20460:
 14527                           
 14528                           ; BSR set to: 0
 14529  0063DA  0E03               	movlw	3
 14530  0063DC  ECEE  F035         	call	_getTimeDecelaration
 14531  0063E0  5029               	movf	?_getTimeDecelaration^0,w,c
 14532  0063E2  0101               	movlb	1	; () banked
 14533  0063E4  5D1E               	subwf	(_var_sys+30)& (0+255),w,b	;volatile
 14534  0063E6  502A               	movf	(?_getTimeDecelaration+1)^0,w,c
 14535  0063E8  591F               	subwfb	(_var_sys+31)& (0+255),w,b	;volatile
 14536  0063EA  502B               	movf	(?_getTimeDecelaration+2)^0,w,c
 14537  0063EC  5920               	subwfb	(_var_sys+32)& (0+255),w,b	;volatile
 14538  0063EE  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 14539  0063F0  0A80               	xorlw	128
 14540  0063F2  0100               	movlb	0	; () banked
 14541  0063F4  6FD8               	movwf	??_setPositionInvertionInClosing& (0+255),b
 14542  0063F6  502C               	movf	(?_getTimeDecelaration+3)^0,w,c
 14543  0063F8  0A80               	xorlw	128
 14544  0063FA  59D8               	subwfb	??_setPositionInvertionInClosing& (0+255),w,b
 14545  0063FC  B0D8               	btfsc	status,0,c
 14546  0063FE  D00F               	goto	l20466
 14547                           
 14548                           ; BSR set to: 0
 14549  006400  0E02               	movlw	2
 14550  006402  19B4               	xorwf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 14551  006404  B4D8               	btfsc	status,2,c
 14552  006406  D00B               	goto	l20466
 14553                           
 14554                           ; BSR set to: 0
 14555                           ;sm_ControlGate_MC50.c: 887:         var_sys.PositionActual = getTimeDecelaration(InClos
      +                          e);
 14556  006408  0E03               	movlw	3
 14557  00640A  ECEE  F035         	call	_getTimeDecelaration
 14558  00640E                     L75:
 14559  00640E  C029  F11E         	movff	?_getTimeDecelaration,_var_sys+30	;volatile
 14560  006412  C02A  F11F         	movff	?_getTimeDecelaration+1,_var_sys+31	;volatile
 14561  006416  C02B  F120         	movff	?_getTimeDecelaration+2,_var_sys+32	;volatile
 14562  00641A  C02C  F121         	movff	?_getTimeDecelaration+3,_var_sys+33	;volatile
 14563  00641E                     l20466:
 14564                           
 14565                           ;sm_ControlGate_MC50.c: 890:     var_sys.TimeMaxMotorIsON = ((signed long)var_sys_NVM.le
      +                          arningTimeToOpen - var_sys.PositionActual) + (var_sys_NVM.decelarationOpen*( 500/50))+ (
      +                          1000/50)*10;
 14566  00641E  0100               	movlb	0	; () banked
 14567  006420  5198               	movf	_var_sys_NVM& (0+255),w,b	;volatile
 14568  006422  0D0A               	mullw	10
 14569  006424  CFF3 F0D8          	movff	prodl,??_setPositionInvertionInClosing
 14570  006428  CFF4 F0D9          	movff	prodh,??_setPositionInvertionInClosing+1
 14571  00642C  0E00               	movlw	0
 14572  00642E  BFD9               	btfsc	(??_setPositionInvertionInClosing+1)& (0+255),7,b
 14573  006430  0EFF               	movlw	255
 14574  006432  6FDA               	movwf	(??_setPositionInvertionInClosing+2)& (0+255),b
 14575  006434  6FDB               	movwf	(??_setPositionInvertionInClosing+3)& (0+255),b
 14576  006436  0101               	movlb	1	; () banked
 14577  006438  511E               	movf	(_var_sys+30)& (0+255),w,b	;volatile
 14578  00643A  0100               	movlb	0	; () banked
 14579  00643C  5DD8               	subwf	??_setPositionInvertionInClosing& (0+255),w,b
 14580  00643E  6FDC               	movwf	(??_setPositionInvertionInClosing+4)& (0+255),b
 14581  006440  0101               	movlb	1	; () banked
 14582  006442  511F               	movf	(_var_sys+31)& (0+255),w,b	;volatile
 14583  006444  0100               	movlb	0	; () banked
 14584  006446  59D9               	subwfb	(??_setPositionInvertionInClosing+1)& (0+255),w,b
 14585  006448  6FDD               	movwf	(??_setPositionInvertionInClosing+5)& (0+255),b
 14586  00644A  0101               	movlb	1	; () banked
 14587  00644C  5120               	movf	(_var_sys+32)& (0+255),w,b	;volatile
 14588  00644E  0100               	movlb	0	; () banked
 14589  006450  59DA               	subwfb	(??_setPositionInvertionInClosing+2)& (0+255),w,b
 14590  006452  6FDE               	movwf	(??_setPositionInvertionInClosing+6)& (0+255),b
 14591  006454  0101               	movlb	1	; () banked
 14592  006456  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 14593  006458  0100               	movlb	0	; () banked
 14594  00645A  59DB               	subwfb	(??_setPositionInvertionInClosing+3)& (0+255),w,b
 14595  00645C  6FDF               	movwf	(??_setPositionInvertionInClosing+7)& (0+255),b
 14596  00645E  51CC               	movf	(_var_sys_NVM+52)& (0+255),w,b	;volatile
 14597  006460  25DC               	addwf	(??_setPositionInvertionInClosing+4)& (0+255),w,b
 14598  006462  6FE0               	movwf	(??_setPositionInvertionInClosing+8)& (0+255),b
 14599  006464  51CD               	movf	(_var_sys_NVM+53)& (0+255),w,b	;volatile
 14600  006466  21DD               	addwfc	(??_setPositionInvertionInClosing+5)& (0+255),w,b
 14601  006468  6FE1               	movwf	(??_setPositionInvertionInClosing+9)& (0+255),b
 14602  00646A  51CE               	movf	(_var_sys_NVM+54)& (0+255),w,b	;volatile
 14603  00646C  21DE               	addwfc	(??_setPositionInvertionInClosing+6)& (0+255),w,b
 14604  00646E  6FE2               	movwf	(??_setPositionInvertionInClosing+10)& (0+255),b
 14605  006470  51CF               	movf	(_var_sys_NVM+55)& (0+255),w,b	;volatile
 14606  006472  21DF               	addwfc	(??_setPositionInvertionInClosing+7)& (0+255),w,b
 14607  006474  6FE3               	movwf	(??_setPositionInvertionInClosing+11)& (0+255),b
 14608  006476  0EC8               	movlw	200
 14609  006478  25E0               	addwf	(??_setPositionInvertionInClosing+8)& (0+255),w,b
 14610  00647A  0101               	movlb	1	; () banked
 14611  00647C  6F18               	movwf	(_var_sys+24)& (0+255),b	;volatile
 14612  00647E  0E00               	movlw	0
 14613  006480  0100               	movlb	0	; () banked
 14614  006482  21E1               	addwfc	(??_setPositionInvertionInClosing+9)& (0+255),w,b
 14615  006484  0101               	movlb	1	; () banked
 14616  006486  6F19               	movwf	(_var_sys+25)& (0+255),b	;volatile
 14617  006488  0E00               	movlw	0
 14618  00648A  0100               	movlb	0	; () banked
 14619  00648C  21E2               	addwfc	(??_setPositionInvertionInClosing+10)& (0+255),w,b
 14620  00648E  0101               	movlb	1	; () banked
 14621  006490  6F1A               	movwf	(_var_sys+26)& (0+255),b	;volatile
 14622  006492  0E00               	movlw	0
 14623  006494  0100               	movlb	0	; () banked
 14624  006496  21E3               	addwfc	(??_setPositionInvertionInClosing+11)& (0+255),w,b
 14625  006498  0101               	movlb	1	; () banked
 14626  00649A  6F1B               	movwf	(_var_sys+27)& (0+255),b	;volatile
 14627                           
 14628                           ; BSR set to: 1
 14629  00649C  0012               	return		;funcret
 14630  00649E                     __end_of_setPositionInvertionInClosing:
 14631                           	callstack 0
 14632                           
 14633 ;; *************** function _getTimeDecelaration *****************
 14634 ;; Defined at:
 14635 ;;		line 641 in file "outputs_MC50.c"
 14636 ;; Parameters:    Size  Location     Type
 14637 ;;  state           1    wreg     enum E10381
 14638 ;; Auto vars:     Size  Location     Type
 14639 ;;  state           1   48[COMRAM] enum E10381
 14640 ;; Return value:  Size  Location     Type
 14641 ;;                  4   40[COMRAM] long 
 14642 ;; Registers used:
 14643 ;;		wreg, status,2, status,0, cstack
 14644 ;; Tracked objects:
 14645 ;;		On entry : 3E/1
 14646 ;;		On exit  : 0/0
 14647 ;;		Unchanged: 0/0
 14648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14649 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14650 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14651 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14652 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14653 ;;Total ram usage:        9 bytes
 14654 ;; Hardware stack levels used: 1
 14655 ;; Hardware stack levels required when called: 5
 14656 ;; This function calls:
 14657 ;;		___lmul
 14658 ;; This function is called by:
 14659 ;;		_getStateOpenPosition
 14660 ;;		_controlVelocity
 14661 ;;		_setPositionInvertionInClosing
 14662 ;;		_setPositionInvertionInOpening
 14663 ;; This function uses a non-reentrant model
 14664 ;;
 14665                           
 14666                           	psect	text38
 14667  006BDC                     __ptext38:
 14668                           	callstack 0
 14669  006BDC                     _getTimeDecelaration:
 14670                           	callstack 22
 14671                           
 14672                           ; BSR set to: 1
 14673                           ;incstack = 0
 14674                           ;getTimeDecelaration@state stored from wreg
 14675  006BDC  6E31               	movwf	getTimeDecelaration@state^0,c
 14676                           
 14677                           ;outputs_MC50.c: 641: signed long getTimeDecelaration(stateMotor_enum state);outputs_MC5
      +                          0.c: 642: {;outputs_MC50.c: 644:     if(state==InClose)
 14678  006BDE  0E03               	movlw	3
 14679  006BE0  1831               	xorwf	getTimeDecelaration@state^0,w,c
 14680  006BE2  A4D8               	btfss	status,2,c
 14681  006BE4  D033               	goto	l19488
 14682                           
 14683                           ;outputs_MC50.c: 645:     {;outputs_MC50.c: 646:         if (var_sys_NVM.TypeofMotor != 
      +                          2)
 14684  006BE6  0E02               	movlw	2
 14685  006BE8  0100               	movlb	0	; () banked
 14686  006BEA  19B4               	xorwf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 14687  006BEC  B4D8               	btfsc	status,2,c
 14688  006BEE  D018               	goto	l19484
 14689                           
 14690                           ; BSR set to: 0
 14691                           ;outputs_MC50.c: 647:         {return (signed long)((signed long)var_sys_NVM.decelaratio
      +                          nClose*( 500/50));}
 14692  006BF0  5199               	movf	(_var_sys_NVM+1)& (0+255),w,b	;volatile
 14693  006BF2  6E1D               	movwf	___lmul@multiplier^0,c
 14694  006BF4  6A1E               	clrf	(___lmul@multiplier+1)^0,c
 14695  006BF6  6A1F               	clrf	(___lmul@multiplier+2)^0,c
 14696  006BF8  6A20               	clrf	(___lmul@multiplier+3)^0,c
 14697  006BFA  0E0A               	movlw	10
 14698  006BFC  6E21               	movwf	___lmul@multiplicand^0,c
 14699  006BFE  0E00               	movlw	0
 14700  006C00  6E22               	movwf	(___lmul@multiplicand+1)^0,c
 14701  006C02  0E00               	movlw	0
 14702  006C04  6E23               	movwf	(___lmul@multiplicand+2)^0,c
 14703  006C06  0E00               	movlw	0
 14704  006C08  6E24               	movwf	(___lmul@multiplicand+3)^0,c
 14705  006C0A  EC2A  F042         	call	___lmul	;wreg free
 14706  006C0E  C01D  F029         	movff	?___lmul,?_getTimeDecelaration
 14707  006C12  C01E  F02A         	movff	?___lmul+1,?_getTimeDecelaration+1
 14708  006C16  C01F  F02B         	movff	?___lmul+2,?_getTimeDecelaration+2
 14709  006C1A  C020  F02C         	movff	?___lmul+3,?_getTimeDecelaration+3
 14710  006C1E  0012               	return	
 14711  006C20                     l19484:
 14712                           
 14713                           ; BSR set to: 0
 14714  006C20  C099  F02D         	movff	_var_sys_NVM+1,??_getTimeDecelaration	;volatile
 14715  006C24  6A2E               	clrf	(??_getTimeDecelaration+1)^0,c
 14716  006C26  6A2F               	clrf	(??_getTimeDecelaration+2)^0,c
 14717  006C28  6A30               	clrf	(??_getTimeDecelaration+3)^0,c
 14718  006C2A  0E02               	movlw	2
 14719  006C2C                     u22305:
 14720  006C2C  90D8               	bcf	status,0,c
 14721  006C2E  362D               	rlcf	??_getTimeDecelaration^0,f,c
 14722  006C30  362E               	rlcf	(??_getTimeDecelaration+1)^0,f,c
 14723  006C32  362F               	rlcf	(??_getTimeDecelaration+2)^0,f,c
 14724  006C34  3630               	rlcf	(??_getTimeDecelaration+3)^0,f,c
 14725  006C36  2EE8               	decfsz	wreg,f,c
 14726  006C38  D7F9               	goto	u22305
 14727  006C3A  C02D  F029         	movff	??_getTimeDecelaration,?_getTimeDecelaration
 14728  006C3E  C02E  F02A         	movff	??_getTimeDecelaration+1,?_getTimeDecelaration+1
 14729  006C42  C02F  F02B         	movff	??_getTimeDecelaration+2,?_getTimeDecelaration+2
 14730  006C46  C030  F02C         	movff	??_getTimeDecelaration+3,?_getTimeDecelaration+3
 14731  006C4A  0012               	return	
 14732  006C4C                     l19488:
 14733                           
 14734                           ;outputs_MC50.c: 651:     {;outputs_MC50.c: 652:         if (var_sys_NVM.TypeofMotor != 
      +                          2)
 14735  006C4C  0E02               	movlw	2
 14736  006C4E  0100               	movlb	0	; () banked
 14737  006C50  19B4               	xorwf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 14738  006C52  B4D8               	btfsc	status,2,c
 14739  006C54  D01D               	goto	l19496
 14740                           
 14741                           ; BSR set to: 0
 14742                           ;outputs_MC50.c: 653:         {return (signed long)((signed long)var_sys_NVM.learningTim
      +                          eToOpen-(((signed long)var_sys_NVM.decelarationOpen*( 500/50))));}
 14743  006C56  5198               	movf	_var_sys_NVM& (0+255),w,b	;volatile
 14744  006C58  6E1D               	movwf	___lmul@multiplier^0,c
 14745  006C5A  6A1E               	clrf	(___lmul@multiplier+1)^0,c
 14746  006C5C  6A1F               	clrf	(___lmul@multiplier+2)^0,c
 14747  006C5E  6A20               	clrf	(___lmul@multiplier+3)^0,c
 14748  006C60  0EF6               	movlw	246
 14749  006C62  6E21               	movwf	___lmul@multiplicand^0,c
 14750  006C64  0EFF               	movlw	255
 14751  006C66  6E22               	movwf	(___lmul@multiplicand+1)^0,c
 14752  006C68  0EFF               	movlw	255
 14753  006C6A  6E23               	movwf	(___lmul@multiplicand+2)^0,c
 14754  006C6C  0EFF               	movlw	255
 14755  006C6E  6E24               	movwf	(___lmul@multiplicand+3)^0,c
 14756  006C70  EC2A  F042         	call	___lmul	;wreg free
 14757  006C74  0100               	movlb	0	; () banked
 14758  006C76  51CC               	movf	(_var_sys_NVM+52)& (0+255),w,b	;volatile
 14759  006C78  241D               	addwf	?___lmul^0,w,c
 14760  006C7A  6E29               	movwf	?_getTimeDecelaration^0,c
 14761  006C7C  51CD               	movf	(_var_sys_NVM+53)& (0+255),w,b	;volatile
 14762  006C7E  201E               	addwfc	(?___lmul+1)^0,w,c
 14763  006C80  6E2A               	movwf	(?_getTimeDecelaration+1)^0,c
 14764  006C82  51CE               	movf	(_var_sys_NVM+54)& (0+255),w,b	;volatile
 14765  006C84  201F               	addwfc	(?___lmul+2)^0,w,c
 14766  006C86  6E2B               	movwf	(?_getTimeDecelaration+2)^0,c
 14767  006C88  51CF               	movf	(_var_sys_NVM+55)& (0+255),w,b	;volatile
 14768  006C8A  2020               	addwfc	(?___lmul+3)^0,w,c
 14769  006C8C  6E2C               	movwf	(?_getTimeDecelaration+3)^0,c
 14770  006C8E  0012               	return	
 14771  006C90                     l19496:
 14772                           
 14773                           ; BSR set to: 0
 14774  006C90  C098  F02D         	movff	_var_sys_NVM,??_getTimeDecelaration	;volatile
 14775  006C94  6A2E               	clrf	(??_getTimeDecelaration+1)^0,c
 14776  006C96  6A2F               	clrf	(??_getTimeDecelaration+2)^0,c
 14777  006C98  6A30               	clrf	(??_getTimeDecelaration+3)^0,c
 14778  006C9A  0E02               	movlw	2
 14779  006C9C                     u22325:
 14780  006C9C  90D8               	bcf	status,0,c
 14781  006C9E  362D               	rlcf	??_getTimeDecelaration^0,f,c
 14782  006CA0  362E               	rlcf	(??_getTimeDecelaration+1)^0,f,c
 14783  006CA2  362F               	rlcf	(??_getTimeDecelaration+2)^0,f,c
 14784  006CA4  3630               	rlcf	(??_getTimeDecelaration+3)^0,f,c
 14785  006CA6  2EE8               	decfsz	wreg,f,c
 14786  006CA8  D7F9               	goto	u22325
 14787  006CAA  502D               	movf	??_getTimeDecelaration^0,w,c
 14788  006CAC  5DCC               	subwf	(_var_sys_NVM+52)& (0+255),w,b	;volatile
 14789  006CAE  6E29               	movwf	?_getTimeDecelaration^0,c
 14790  006CB0  502E               	movf	(??_getTimeDecelaration+1)^0,w,c
 14791  006CB2  59CD               	subwfb	(_var_sys_NVM+53)& (0+255),w,b	;volatile
 14792  006CB4  6E2A               	movwf	(?_getTimeDecelaration+1)^0,c
 14793  006CB6  502F               	movf	(??_getTimeDecelaration+2)^0,w,c
 14794  006CB8  59CE               	subwfb	(_var_sys_NVM+54)& (0+255),w,b	;volatile
 14795  006CBA  6E2B               	movwf	(?_getTimeDecelaration+2)^0,c
 14796  006CBC  5030               	movf	(??_getTimeDecelaration+3)^0,w,c
 14797  006CBE  59CF               	subwfb	(_var_sys_NVM+55)& (0+255),w,b	;volatile
 14798  006CC0  6E2C               	movwf	(?_getTimeDecelaration+3)^0,c
 14799  006CC2  0012               	return		;funcret
 14800  006CC4                     __end_of_getTimeDecelaration:
 14801                           	callstack 0
 14802                           
 14803 ;; *************** function ___lmul *****************
 14804 ;; Defined at:
 14805 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\Umul32.c"
 14806 ;; Parameters:    Size  Location     Type
 14807 ;;  multiplier      4   28[COMRAM] unsigned long 
 14808 ;;  multiplicand    4   32[COMRAM] unsigned long 
 14809 ;; Auto vars:     Size  Location     Type
 14810 ;;  product         4   36[COMRAM] unsigned long 
 14811 ;; Return value:  Size  Location     Type
 14812 ;;                  4   28[COMRAM] unsigned long 
 14813 ;; Registers used:
 14814 ;;		wreg, status,2, status,0
 14815 ;; Tracked objects:
 14816 ;;		On entry : 0/1
 14817 ;;		On exit  : 0/0
 14818 ;;		Unchanged: 0/0
 14819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14820 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14821 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14823 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14824 ;;Total ram usage:       12 bytes
 14825 ;; Hardware stack levels used: 1
 14826 ;; Hardware stack levels required when called: 4
 14827 ;; This function calls:
 14828 ;;		Nothing
 14829 ;; This function is called by:
 14830 ;;		_getStateOpenPosition
 14831 ;;		_getTimeDecelaration
 14832 ;;		_actionZone_Closing
 14833 ;;		_sm_execute_menuConfiguration
 14834 ;; This function uses a non-reentrant model
 14835 ;;
 14836                           
 14837                           	psect	text39
 14838  008454                     __ptext39:
 14839                           	callstack 0
 14840  008454                     ___lmul:
 14841                           	callstack 24
 14842                           
 14843                           ;incstack = 0
 14844  008454  0E00               	movlw	0
 14845  008456  6E25               	movwf	___lmul@product^0,c
 14846  008458  0E00               	movlw	0
 14847  00845A  6E26               	movwf	(___lmul@product+1)^0,c
 14848  00845C  0E00               	movlw	0
 14849  00845E  6E27               	movwf	(___lmul@product+2)^0,c
 14850  008460  0E00               	movlw	0
 14851  008462  6E28               	movwf	(___lmul@product+3)^0,c
 14852  008464                     l19374:
 14853  008464  A01D               	btfss	___lmul@multiplier^0,0,c
 14854  008466  D008               	goto	l19378
 14855  008468  5021               	movf	___lmul@multiplicand^0,w,c
 14856  00846A  2625               	addwf	___lmul@product^0,f,c
 14857  00846C  5022               	movf	(___lmul@multiplicand+1)^0,w,c
 14858  00846E  2226               	addwfc	(___lmul@product+1)^0,f,c
 14859  008470  5023               	movf	(___lmul@multiplicand+2)^0,w,c
 14860  008472  2227               	addwfc	(___lmul@product+2)^0,f,c
 14861  008474  5024               	movf	(___lmul@multiplicand+3)^0,w,c
 14862  008476  2228               	addwfc	(___lmul@product+3)^0,f,c
 14863  008478                     l19378:
 14864  008478  90D8               	bcf	status,0,c
 14865  00847A  3621               	rlcf	___lmul@multiplicand^0,f,c
 14866  00847C  3622               	rlcf	(___lmul@multiplicand+1)^0,f,c
 14867  00847E  3623               	rlcf	(___lmul@multiplicand+2)^0,f,c
 14868  008480  3624               	rlcf	(___lmul@multiplicand+3)^0,f,c
 14869  008482  90D8               	bcf	status,0,c
 14870  008484  3220               	rrcf	(___lmul@multiplier+3)^0,f,c
 14871  008486  321F               	rrcf	(___lmul@multiplier+2)^0,f,c
 14872  008488  321E               	rrcf	(___lmul@multiplier+1)^0,f,c
 14873  00848A  321D               	rrcf	___lmul@multiplier^0,f,c
 14874  00848C  501D               	movf	___lmul@multiplier^0,w,c
 14875  00848E  101E               	iorwf	(___lmul@multiplier+1)^0,w,c
 14876  008490  101F               	iorwf	(___lmul@multiplier+2)^0,w,c
 14877  008492  1020               	iorwf	(___lmul@multiplier+3)^0,w,c
 14878  008494  A4D8               	btfss	status,2,c
 14879  008496  D7E6               	goto	l19374
 14880  008498  C025  F01D         	movff	___lmul@product,?___lmul
 14881  00849C  C026  F01E         	movff	___lmul@product+1,?___lmul+1
 14882  0084A0  C027  F01F         	movff	___lmul@product+2,?___lmul+2
 14883  0084A4  C028  F020         	movff	___lmul@product+3,?___lmul+3
 14884  0084A8  0012               	return		;funcret
 14885  0084AA                     __end_of___lmul:
 14886                           	callstack 0
 14887                           
 14888 ;; *************** function _StopOrder *****************
 14889 ;; Defined at:
 14890 ;;		line 96 in file "sm_ControlGate_MC50.c"
 14891 ;; Parameters:    Size  Location     Type
 14892 ;;		None
 14893 ;; Auto vars:     Size  Location     Type
 14894 ;;		None
 14895 ;; Return value:  Size  Location     Type
 14896 ;;                  1    wreg      void 
 14897 ;; Registers used:
 14898 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14899 ;; Tracked objects:
 14900 ;;		On entry : 3E/1
 14901 ;;		On exit  : 0/0
 14902 ;;		Unchanged: 0/0
 14903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14904 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14907 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14908 ;;Total ram usage:        0 bytes
 14909 ;; Hardware stack levels used: 1
 14910 ;; Hardware stack levels required when called: 6
 14911 ;; This function calls:
 14912 ;;		_sm_send_event
 14913 ;; This function is called by:
 14914 ;;		_actionZone_Opening
 14915 ;;		_actionZone_Closing
 14916 ;; This function uses a non-reentrant model
 14917 ;;
 14918                           
 14919                           	psect	text40
 14920  008F1E                     __ptext40:
 14921                           	callstack 0
 14922  008F1E                     _StopOrder:
 14923                           	callstack 22
 14924                           
 14925                           ;sm_ControlGate_MC50.c: 99:    var_sys.StateMotor = Stopped;
 14926                           
 14927                           ;incstack = 0
 14928  008F1E  0E00               	movlw	0
 14929  008F20  0101               	movlb	1	; () banked
 14930  008F22  6F00               	movwf	_var_sys& (0+255),b	;volatile
 14931                           
 14932                           ; BSR set to: 1
 14933                           ;sm_ControlGate_MC50.c: 100:    sm_send_event(&controlGate_stateMachine, ev_StopGate);
 14934  008F24  0EE2               	movlw	low _controlGate_stateMachine
 14935  008F26  6E12               	movwf	sm_send_event@psm^0,c
 14936  008F28  0E01               	movlw	high _controlGate_stateMachine
 14937  008F2A  6E13               	movwf	(sm_send_event@psm+1)^0,c
 14938  008F2C  0E00               	movlw	0
 14939  008F2E  6E15               	movwf	(sm_send_event@event+1)^0,c
 14940  008F30  0E0D               	movlw	13
 14941  008F32  6E14               	movwf	sm_send_event@event^0,c
 14942  008F34  EC1C  F041         	call	_sm_send_event	;wreg free
 14943  008F38  0012               	return		;funcret
 14944  008F3A                     __end_of_StopOrder:
 14945                           	callstack 0
 14946                           
 14947 ;; *************** function _GetSecurityStateInClosing *****************
 14948 ;; Defined at:
 14949 ;;		line 776 in file "inputs_MC50.c"
 14950 ;; Parameters:    Size  Location     Type
 14951 ;;		None
 14952 ;; Auto vars:     Size  Location     Type
 14953 ;;		None
 14954 ;; Return value:  Size  Location     Type
 14955 ;;                  1    wreg      enum E10564
 14956 ;; Registers used:
 14957 ;;		wreg, status,2, status,0, cstack
 14958 ;; Tracked objects:
 14959 ;;		On entry : 0/0
 14960 ;;		On exit  : 3E/0
 14961 ;;		Unchanged: 0/0
 14962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14964 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14966 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14967 ;;Total ram usage:        0 bytes
 14968 ;; Hardware stack levels used: 1
 14969 ;; Hardware stack levels required when called: 5
 14970 ;; This function calls:
 14971 ;;		_SetSegmentValueIntermitent
 14972 ;; This function is called by:
 14973 ;;		_actionZone_Opening
 14974 ;;		_actionZone_Opened
 14975 ;;		_actionZone_Closing
 14976 ;; This function uses a non-reentrant model
 14977 ;;
 14978                           
 14979                           	psect	text41
 14980  0072D6                     __ptext41:
 14981                           	callstack 0
 14982  0072D6                     _GetSecurityStateInClosing:
 14983                           	callstack 23
 14984                           
 14985                           ;inputs_MC50.c: 786:      if((var_sys_NVM.securityBandIsON == 1) && (var_sys.SecurityBar
      +                          IsObstructed == YES)&&(var_sys_NVM.securityBandInOpen == 0)&& (var_sys_NVM.Stopboton == 
      +                          0))
 14986                           
 14987                           ;incstack = 0
 14988  0072D6  0100               	movlb	0	; () banked
 14989  0072D8  05A1               	decf	(_var_sys_NVM+9)& (0+255),w,b	;volatile
 14990  0072DA  A4D8               	btfss	status,2,c
 14991  0072DC  D01B               	goto	l20132
 14992                           
 14993                           ; BSR set to: 0
 14994  0072DE  0101               	movlb	1	; () banked
 14995  0072E0  0502               	decf	(_var_sys+2)& (0+255),w,b	;volatile
 14996  0072E2  A4D8               	btfss	status,2,c
 14997  0072E4  D017               	goto	l20132
 14998                           
 14999                           ; BSR set to: 1
 15000  0072E6  0100               	movlb	0	; () banked
 15001  0072E8  51A3               	movf	(_var_sys_NVM+11)& (0+255),w,b	;volatile
 15002  0072EA  A4D8               	btfss	status,2,c
 15003  0072EC  D013               	goto	l20132
 15004                           
 15005                           ; BSR set to: 0
 15006  0072EE  51AE               	movf	(_var_sys_NVM+22)& (0+255),w,b	;volatile
 15007  0072F0  A4D8               	btfss	status,2,c
 15008  0072F2  D010               	goto	l20132
 15009                           
 15010                           ; BSR set to: 0
 15011                           ;inputs_MC50.c: 787:     {;inputs_MC50.c: 790:         ts_system.timeSinalizationDigit=(
      +                           200/50);
 15012  0072F4  0E00               	movlw	0
 15013  0072F6  0101               	movlb	1	; () banked
 15014  0072F8  6FA7               	movwf	(_ts_system+13)& (0+255),b	;volatile
 15015  0072FA  0E04               	movlw	4
 15016  0072FC  6FA6               	movwf	(_ts_system+12)& (0+255),b	;volatile
 15017                           
 15018                           ; BSR set to: 1
 15019                           ;inputs_MC50.c: 791:         SetSegmentValueIntermitent(dL,dA,(1000/50));
 15020  0072FE  0E0A               	movlw	10
 15021  007300  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 15022  007302  0E00               	movlw	0
 15023  007304  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 15024  007306  0E14               	movlw	20
 15025  007308  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 15026  00730A  0E12               	movlw	18
 15027  00730C  EC94  F045         	call	_SetSegmentValueIntermitent
 15028  007310                     l20126:
 15029                           
 15030                           ; BSR set to: 1
 15031                           ;inputs_MC50.c: 792:         return YES;
 15032  007310  0E01               	movlw	1
 15033  007312  0012               	return	
 15034  007314                     l20132:
 15035  007314  0100               	movlb	0	; () banked
 15036  007316  05AE               	decf	(_var_sys_NVM+22)& (0+255),w,b	;volatile
 15037  007318  A4D8               	btfss	status,2,c
 15038  00731A  D013               	goto	l20146
 15039                           
 15040                           ; BSR set to: 0
 15041  00731C  0101               	movlb	1	; () banked
 15042  00731E  0502               	decf	(_var_sys+2)& (0+255),w,b	;volatile
 15043  007320  A4D8               	btfss	status,2,c
 15044  007322  D00F               	goto	l20146
 15045                           
 15046                           ; BSR set to: 1
 15047                           ;inputs_MC50.c: 795:     {;inputs_MC50.c: 797:         ts_system.timeSinalizationDigit=(
      +                           200/50);
 15048  007324  0E00               	movlw	0
 15049  007326  6FA7               	movwf	(_ts_system+13)& (0+255),b	;volatile
 15050  007328  0E04               	movlw	4
 15051  00732A  6FA6               	movwf	(_ts_system+12)& (0+255),b	;volatile
 15052                           
 15053                           ; BSR set to: 1
 15054                           ;inputs_MC50.c: 798:         SetSegmentValueIntermitent(d5,dt,(1000/50));
 15055  00732C  0E15               	movlw	21
 15056  00732E  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 15057  007330  0E00               	movlw	0
 15058  007332  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 15059  007334  0E14               	movlw	20
 15060  007336  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 15061  007338  0E05               	movlw	5
 15062  00733A  EC94  F045         	call	_SetSegmentValueIntermitent
 15063                           
 15064                           ; BSR set to: 1
 15065                           ;inputs_MC50.c: 799:         return ST;
 15066  00733E  0E02               	movlw	2
 15067  007340  0012               	return	
 15068  007342                     l20146:
 15069  007342  0100               	movlb	0	; () banked
 15070  007344  059F               	decf	(_var_sys_NVM+7)& (0+255),w,b	;volatile
 15071  007346  A4D8               	btfss	status,2,c
 15072  007348  D017               	goto	l20162
 15073                           
 15074                           ; BSR set to: 0
 15075  00734A  0101               	movlb	1	; () banked
 15076  00734C  0501               	decf	(_var_sys+1)& (0+255),w,b	;volatile
 15077  00734E  A4D8               	btfss	status,2,c
 15078  007350  D013               	goto	l20162
 15079                           
 15080                           ; BSR set to: 1
 15081  007352  0100               	movlb	0	; () banked
 15082  007354  51A0               	movf	(_var_sys_NVM+8)& (0+255),w,b	;volatile
 15083  007356  A4D8               	btfss	status,2,c
 15084  007358  D00F               	goto	l20162
 15085                           
 15086                           ; BSR set to: 0
 15087                           ;inputs_MC50.c: 803:     {;inputs_MC50.c: 805:         ts_system.timeSinalizationDigit=(
      +                           200/50);
 15088  00735A  0E00               	movlw	0
 15089  00735C  0101               	movlb	1	; () banked
 15090  00735E  6FA7               	movwf	(_ts_system+13)& (0+255),b	;volatile
 15091  007360  0E04               	movlw	4
 15092  007362  6FA6               	movwf	(_ts_system+12)& (0+255),b	;volatile
 15093                           
 15094                           ; BSR set to: 1
 15095                           ;inputs_MC50.c: 806:         SetSegmentValueIntermitent(dL,dE,(1000/50));
 15096  007364  0E0E               	movlw	14
 15097  007366  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 15098  007368  0E00               	movlw	0
 15099  00736A  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 15100  00736C  0E14               	movlw	20
 15101  00736E  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 15102  007370  0E12               	movlw	18
 15103  007372  EC94  F045         	call	_SetSegmentValueIntermitent
 15104  007376  D7CC               	goto	l20126
 15105  007378                     l20162:
 15106                           
 15107                           ;inputs_MC50.c: 811:     {;inputs_MC50.c: 812:         return NO;
 15108  007378  0E00               	movlw	0
 15109  00737A  0012               	return		;funcret
 15110  00737C                     __end_of_GetSecurityStateInClosing:
 15111                           	callstack 0
 15112                           
 15113 ;; *************** function _actionZone_Closed *****************
 15114 ;; Defined at:
 15115 ;;		line 327 in file "sm_ControlGate_MC50.c"
 15116 ;; Parameters:    Size  Location     Type
 15117 ;;		None
 15118 ;; Auto vars:     Size  Location     Type
 15119 ;;  typeOpenOrde    1   32[COMRAM] enum E10372
 15120 ;;  securityOpen    1   31[COMRAM] enum E10397
 15121 ;; Return value:  Size  Location     Type
 15122 ;;                  1    wreg      void 
 15123 ;; Registers used:
 15124 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15125 ;; Tracked objects:
 15126 ;;		On entry : 3F/0
 15127 ;;		On exit  : 0/0
 15128 ;;		Unchanged: 0/0
 15129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15131 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15133 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15134 ;;Total ram usage:        2 bytes
 15135 ;; Hardware stack levels used: 1
 15136 ;; Hardware stack levels required when called: 8
 15137 ;; This function calls:
 15138 ;;		_GetOpenOrder
 15139 ;;		_GetSecurityStateInOpening
 15140 ;;		_InitFullAutoTime
 15141 ;;		_InitWalkAutoTime
 15142 ;;		_OpenFullOrder
 15143 ;;		_OpenWalkOrder
 15144 ;;		_WaitPreFlash
 15145 ;;		_sm_send_event
 15146 ;; This function is called by:
 15147 ;;		_sm_execute_ControlGate
 15148 ;; This function uses a non-reentrant model
 15149 ;;
 15150                           
 15151                           	psect	text42
 15152  00722C                     __ptext42:
 15153                           	callstack 0
 15154  00722C                     _actionZone_Closed:
 15155                           	callstack 21
 15156                           
 15157                           ; BSR set to: 0
 15158                           ;sm_ControlGate_MC50.c: 331:     if (main_stateMachine.current_state != st_MenuConfigura
      +                          tion) {
 15159                           
 15160                           ;incstack = 0
 15161  00722C  0101               	movlb	1	; () banked
 15162  00722E  05ED               	decf	_main_stateMachine& (0+255),w,b
 15163  007230  11EE               	iorwf	(_main_stateMachine+1)& (0+255),w,b
 15164  007232  B4D8               	btfsc	status,2,c
 15165  007234  0012               	return	
 15166                           
 15167                           ; BSR set to: 1
 15168                           ;sm_ControlGate_MC50.c: 334:         TypeCMD typeOpenOrder = GetOpenOrder();
 15169  007236  ECBF  F028         	call	_GetOpenOrder	;wreg free
 15170  00723A  6E21               	movwf	actionZone_Closed@typeOpenOrder^0,c
 15171                           
 15172                           ;sm_ControlGate_MC50.c: 336:         StateEnum securityOpening = GetSecurityStateInOpeni
      +                          ng();
 15173  00723C  ECBE  F039         	call	_GetSecurityStateInOpening	;wreg free
 15174  007240  6E20               	movwf	actionZone_Closed@securityOpening^0,c
 15175                           
 15176                           ;sm_ControlGate_MC50.c: 338:         if (var_sys_NVM.homemPresente == 1) {
 15177  007242  0100               	movlb	0	; () banked
 15178  007244  05A8               	decf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 15179  007246  A4D8               	btfss	status,2,c
 15180  007248  D018               	goto	l21298
 15181                           
 15182                           ; BSR set to: 0
 15183                           ;sm_ControlGate_MC50.c: 344:             if (typeOpenOrder == TypeFullOpen && var_sys.Fi
      +                          mCurso_OpenIsEnabled == NO && securityOpening == NO) {
 15184  00724A  0E03               	movlw	3
 15185  00724C  1821               	xorwf	actionZone_Closed@typeOpenOrder^0,w,c
 15186  00724E  A4D8               	btfss	status,2,c
 15187  007250  0012               	return	
 15188                           
 15189                           ; BSR set to: 0
 15190  007252  0101               	movlb	1	; () banked
 15191  007254  5104               	movf	(_var_sys+4)& (0+255),w,b	;volatile
 15192  007256  A4D8               	btfss	status,2,c
 15193  007258  0012               	return	
 15194                           
 15195                           ; BSR set to: 1
 15196  00725A  5020               	movf	actionZone_Closed@securityOpening^0,w,c
 15197  00725C  A4D8               	btfss	status,2,c
 15198  00725E  0012               	return	
 15199                           
 15200                           ; BSR set to: 1
 15201                           ;sm_ControlGate_MC50.c: 346:                 OpenFullOrder();
 15202  007260  ECED  F046         	call	_OpenFullOrder	;wreg free
 15203  007264                     l21296:
 15204                           
 15205                           ;sm_ControlGate_MC50.c: 347:                 sm_send_event(&main_stateMachine, ev_MotorI
      +                          sOpen);
 15206  007264  0EED               	movlw	low _main_stateMachine
 15207  007266  6E12               	movwf	sm_send_event@psm^0,c
 15208  007268  0E01               	movlw	high _main_stateMachine
 15209  00726A  6E13               	movwf	(sm_send_event@psm+1)^0,c
 15210  00726C  0E00               	movlw	0
 15211  00726E  6E15               	movwf	(sm_send_event@event+1)^0,c
 15212  007270  0E11               	movlw	17
 15213  007272  6E14               	movwf	sm_send_event@event^0,c
 15214  007274  EC1C  F041         	call	_sm_send_event	;wreg free
 15215  007278  0012               	return	
 15216  00727A                     l21298:
 15217                           
 15218                           ; BSR set to: 0
 15219  00727A  0421               	decf	actionZone_Closed@typeOpenOrder^0,w,c
 15220  00727C  B4D8               	btfsc	status,2,c
 15221  00727E  D004               	goto	u24690
 15222                           
 15223                           ; BSR set to: 0
 15224  007280  0E03               	movlw	3
 15225  007282  1821               	xorwf	actionZone_Closed@typeOpenOrder^0,w,c
 15226  007284  A4D8               	btfss	status,2,c
 15227  007286  D017               	goto	l21318
 15228  007288                     u24690:
 15229                           
 15230                           ; BSR set to: 0
 15231  007288  5020               	movf	actionZone_Closed@securityOpening^0,w,c
 15232  00728A  A4D8               	btfss	status,2,c
 15233  00728C  D014               	goto	l21318
 15234                           
 15235                           ; BSR set to: 0
 15236  00728E  0101               	movlb	1	; () banked
 15237  007290  511D               	movf	(_var_sys+29)& (0+255),w,b	;volatile
 15238  007292  A4D8               	btfss	status,2,c
 15239  007294  D010               	goto	l21318
 15240                           
 15241                           ; BSR set to: 1
 15242                           ;sm_ControlGate_MC50.c: 353:             if (var_sys_NVM.flashRGBMode == rgb_pre){
 15243  007296  0E02               	movlw	2
 15244  007298  0100               	movlb	0	; () banked
 15245  00729A  19B1               	xorwf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 15246  00729C  A4D8               	btfss	status,2,c
 15247  00729E  D006               	goto	l21312
 15248                           
 15249                           ; BSR set to: 0
 15250                           ;sm_ControlGate_MC50.c: 354:                 var_sys.preflashingcontrol = YES;
 15251  0072A0  0E01               	movlw	1
 15252  0072A2  0101               	movlb	1	; () banked
 15253  0072A4  6F1D               	movwf	(_var_sys+29)& (0+255),b	;volatile
 15254                           
 15255                           ; BSR set to: 1
 15256                           ;sm_ControlGate_MC50.c: 355:                 WaitPreFlash();
 15257  0072A6  EC79  F03F         	call	_WaitPreFlash	;wreg free
 15258                           
 15259                           ;sm_ControlGate_MC50.c: 356:             }
 15260  0072AA  0012               	return	
 15261  0072AC                     l21312:
 15262                           
 15263                           ; BSR set to: 0
 15264                           ;sm_ControlGate_MC50.c: 358:                 OpenFullOrder();
 15265  0072AC  ECED  F046         	call	_OpenFullOrder	;wreg free
 15266                           
 15267                           ;sm_ControlGate_MC50.c: 359:                InitFullAutoTime();
 15268  0072B0  ECE1  F047         	call	_InitFullAutoTime	;wreg free
 15269  0072B4  D7D7               	goto	l21296
 15270  0072B6                     l21318:
 15271  0072B6  0E02               	movlw	2
 15272  0072B8  1821               	xorwf	actionZone_Closed@typeOpenOrder^0,w,c
 15273  0072BA  A4D8               	btfss	status,2,c
 15274  0072BC  0012               	return	
 15275  0072BE  5020               	movf	actionZone_Closed@securityOpening^0,w,c
 15276  0072C0  A4D8               	btfss	status,2,c
 15277  0072C2  0012               	return	
 15278  0072C4  0100               	movlb	0	; () banked
 15279  0072C6  519C               	movf	(_var_sys_NVM+4)& (0+255),w,b	;volatile
 15280  0072C8  B4D8               	btfsc	status,2,c
 15281  0072CA  0012               	return	
 15282                           
 15283                           ; BSR set to: 0
 15284                           ;sm_ControlGate_MC50.c: 367:             OpenWalkOrder();
 15285  0072CC  ECB1  F03F         	call	_OpenWalkOrder	;wreg free
 15286                           
 15287                           ;sm_ControlGate_MC50.c: 368:             InitWalkAutoTime();
 15288  0072D0  EC66  F048         	call	_InitWalkAutoTime	;wreg free
 15289  0072D4  D7C7               	goto	l21296
 15290  0072D6                     __end_of_actionZone_Closed:
 15291                           	callstack 0
 15292                           
 15293 ;; *************** function _WaitPreFlash *****************
 15294 ;; Defined at:
 15295 ;;		line 41 in file "sm_ControlGate_MC50.c"
 15296 ;; Parameters:    Size  Location     Type
 15297 ;;		None
 15298 ;; Auto vars:     Size  Location     Type
 15299 ;;		None
 15300 ;; Return value:  Size  Location     Type
 15301 ;;                  1    wreg      void 
 15302 ;; Registers used:
 15303 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15304 ;; Tracked objects:
 15305 ;;		On entry : 3F/1
 15306 ;;		On exit  : 3F/1
 15307 ;;		Unchanged: 0/0
 15308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15309 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15310 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15312 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15313 ;;Total ram usage:        0 bytes
 15314 ;; Hardware stack levels used: 1
 15315 ;; Hardware stack levels required when called: 7
 15316 ;; This function calls:
 15317 ;;		_InitFullAutoTime
 15318 ;;		_OpenFullOrder
 15319 ;;		_sm_send_event
 15320 ;; This function is called by:
 15321 ;;		_sm_execute_ControlGate
 15322 ;;		_actionZone_Closed
 15323 ;; This function uses a non-reentrant model
 15324 ;;
 15325                           
 15326                           	psect	text43
 15327  007EF2                     __ptext43:
 15328                           	callstack 0
 15329  007EF2                     _WaitPreFlash:
 15330                           	callstack 21
 15331                           
 15332                           ; BSR set to: 1
 15333                           ;sm_ControlGate_MC50.c: 44:     if ((var_sys_NVM.flashRGBMode == rgb_pre) && (var_sys.pr
      +                          eflashingcontrol == YES) && (ts_system.timewaitFlashRGB <=0) && (aux_i == 0))
 15334                           
 15335                           ;incstack = 0
 15336  007EF2  0E02               	movlw	2
 15337  007EF4  0100               	movlb	0	; () banked
 15338  007EF6  19B1               	xorwf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 15339  007EF8  A4D8               	btfss	status,2,c
 15340  007EFA  D014               	goto	l20372
 15341                           
 15342                           ; BSR set to: 0
 15343  007EFC  0101               	movlb	1	; () banked
 15344  007EFE  051D               	decf	(_var_sys+29)& (0+255),w,b	;volatile
 15345  007F00  A4D8               	btfss	status,2,c
 15346  007F02  D010               	goto	l20372
 15347                           
 15348                           ; BSR set to: 1
 15349  007F04  BFE1               	btfsc	(_ts_system+71)& (0+255),7,b	;volatile
 15350  007F06  D005               	goto	u23650
 15351  007F08  51E1               	movf	(_ts_system+71)& (0+255),w,b	;volatile
 15352  007F0A  E10C               	bnz	l20372
 15353  007F0C  05E0               	decf	(_ts_system+70)& (0+255),w,b	;volatile
 15354  007F0E  B0D8               	btfsc	status,0,c
 15355  007F10  D009               	goto	l20372
 15356  007F12                     u23650:
 15357                           
 15358                           ; BSR set to: 1
 15359  007F12  518C               	movf	_aux_i& (0+255),w,b
 15360  007F14  A4D8               	btfss	status,2,c
 15361  007F16  D006               	goto	l20372
 15362                           
 15363                           ; BSR set to: 1
 15364                           ;sm_ControlGate_MC50.c: 45:         {;sm_ControlGate_MC50.c: 46:             ts_system.t
      +                          imewaitFlashRGB = (1000/50) *3;
 15365  007F18  0E00               	movlw	0
 15366  007F1A  6FE1               	movwf	(_ts_system+71)& (0+255),b	;volatile
 15367  007F1C  0E3C               	movlw	60
 15368  007F1E  6FE0               	movwf	(_ts_system+70)& (0+255),b	;volatile
 15369                           
 15370                           ;sm_ControlGate_MC50.c: 47:             aux_i=1;
 15371  007F20  0E01               	movlw	1
 15372  007F22  6F8C               	movwf	_aux_i& (0+255),b
 15373  007F24                     l20372:
 15374                           
 15375                           ;sm_ControlGate_MC50.c: 50:     if ((ts_system.timewaitFlashRGB <= 0) && (aux_i==1 ))
 15376  007F24  0101               	movlb	1	; () banked
 15377  007F26  BFE1               	btfsc	(_ts_system+71)& (0+255),7,b	;volatile
 15378  007F28  D005               	goto	u23670
 15379  007F2A  51E1               	movf	(_ts_system+71)& (0+255),w,b	;volatile
 15380  007F2C  E119               	bnz	l2580
 15381  007F2E  05E0               	decf	(_ts_system+70)& (0+255),w,b	;volatile
 15382  007F30  B0D8               	btfsc	status,0,c
 15383  007F32  0012               	return	
 15384  007F34                     u23670:
 15385                           
 15386                           ; BSR set to: 1
 15387  007F34  058C               	decf	_aux_i& (0+255),w,b
 15388  007F36  A4D8               	btfss	status,2,c
 15389  007F38  0012               	return	
 15390                           
 15391                           ; BSR set to: 1
 15392                           ;sm_ControlGate_MC50.c: 51:         {;sm_ControlGate_MC50.c: 54:                 var_sys
      +                          .preflashingcontrol = NO;
 15393  007F3A  0E00               	movlw	0
 15394  007F3C  6F1D               	movwf	(_var_sys+29)& (0+255),b	;volatile
 15395                           
 15396                           ; BSR set to: 1
 15397                           ;sm_ControlGate_MC50.c: 55:                 OpenFullOrder();
 15398  007F3E  ECED  F046         	call	_OpenFullOrder	;wreg free
 15399                           
 15400                           ;sm_ControlGate_MC50.c: 56:                 InitFullAutoTime();
 15401  007F42  ECE1  F047         	call	_InitFullAutoTime	;wreg free
 15402                           
 15403                           ; BSR set to: 0
 15404                           ;sm_ControlGate_MC50.c: 57:                 sm_send_event(&main_stateMachine, ev_MotorIs
      +                          Open);
 15405  007F46  0EED               	movlw	low _main_stateMachine
 15406  007F48  6E12               	movwf	sm_send_event@psm^0,c
 15407  007F4A  0E01               	movlw	high _main_stateMachine
 15408  007F4C  6E13               	movwf	(sm_send_event@psm+1)^0,c
 15409  007F4E  0E00               	movlw	0
 15410  007F50  6E15               	movwf	(sm_send_event@event+1)^0,c
 15411  007F52  0E11               	movlw	17
 15412  007F54  6E14               	movwf	sm_send_event@event^0,c
 15413  007F56  EC1C  F041         	call	_sm_send_event	;wreg free
 15414                           
 15415                           ;sm_ControlGate_MC50.c: 58:                 aux_i=0;
 15416  007F5A  0E00               	movlw	0
 15417  007F5C  0101               	movlb	1	; () banked
 15418  007F5E  6F8C               	movwf	_aux_i& (0+255),b
 15419  007F60                     l2580:
 15420                           
 15421                           ; BSR set to: 1
 15422  007F60  0012               	return		;funcret
 15423  007F62                     __end_of_WaitPreFlash:
 15424                           	callstack 0
 15425                           
 15426 ;; *************** function _OpenFullOrder *****************
 15427 ;; Defined at:
 15428 ;;		line 29 in file "sm_ControlGate_MC50.c"
 15429 ;; Parameters:    Size  Location     Type
 15430 ;;		None
 15431 ;; Auto vars:     Size  Location     Type
 15432 ;;		None
 15433 ;; Return value:  Size  Location     Type
 15434 ;;                  1    wreg      void 
 15435 ;; Registers used:
 15436 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15437 ;; Tracked objects:
 15438 ;;		On entry : 3E/1
 15439 ;;		On exit  : 3E/0
 15440 ;;		Unchanged: 0/0
 15441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15442 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15443 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15445 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15446 ;;Total ram usage:        0 bytes
 15447 ;; Hardware stack levels used: 1
 15448 ;; Hardware stack levels required when called: 6
 15449 ;; This function calls:
 15450 ;;		_InitSoftStart
 15451 ;;		_sm_send_event
 15452 ;; This function is called by:
 15453 ;;		_WaitPreFlash
 15454 ;;		_actionZone_Closed
 15455 ;;		_actionZone_Opened
 15456 ;;		_actionZone_Closing
 15457 ;; This function uses a non-reentrant model
 15458 ;;
 15459                           
 15460                           	psect	text44
 15461  008DDA                     __ptext44:
 15462                           	callstack 0
 15463  008DDA                     _OpenFullOrder:
 15464                           	callstack 22
 15465                           
 15466                           ;sm_ControlGate_MC50.c: 32:     var_sys.StateMotor = InOpenFull;
 15467                           
 15468                           ; BSR set to: 1
 15469                           ;incstack = 0
 15470  008DDA  0E01               	movlw	1
 15471  008DDC  0101               	movlb	1	; () banked
 15472  008DDE  6F00               	movwf	_var_sys& (0+255),b	;volatile
 15473                           
 15474                           ; BSR set to: 1
 15475                           ;sm_ControlGate_MC50.c: 33:     sm_send_event(&controlGate_stateMachine, ev_OpenGate);
 15476  008DE0  0EE2               	movlw	low _controlGate_stateMachine
 15477  008DE2  6E12               	movwf	sm_send_event@psm^0,c
 15478  008DE4  0E01               	movlw	high _controlGate_stateMachine
 15479  008DE6  6E13               	movwf	(sm_send_event@psm+1)^0,c
 15480  008DE8  0E00               	movlw	0
 15481  008DEA  6E15               	movwf	(sm_send_event@event+1)^0,c
 15482  008DEC  0E0C               	movlw	12
 15483  008DEE  6E14               	movwf	sm_send_event@event^0,c
 15484  008DF0  EC1C  F041         	call	_sm_send_event	;wreg free
 15485                           
 15486                           ;sm_ControlGate_MC50.c: 34:     var_sys.LastState = InOpenFull;
 15487  008DF4  0E01               	movlw	1
 15488  008DF6  0101               	movlb	1	; () banked
 15489  008DF8  6F0B               	movwf	(_var_sys+11)& (0+255),b	;volatile
 15490                           
 15491                           ; BSR set to: 1
 15492                           ;sm_ControlGate_MC50.c: 35:     InitSoftStart();
 15493  008DFA  EC4A  F041         	call	_InitSoftStart	;wreg free
 15494  008DFE  0012               	return		;funcret
 15495  008E00                     __end_of_OpenFullOrder:
 15496                           	callstack 0
 15497                           
 15498 ;; *************** function _InitFullAutoTime *****************
 15499 ;; Defined at:
 15500 ;;		line 109 in file "sm_ControlGate_MC50.c"
 15501 ;; Parameters:    Size  Location     Type
 15502 ;;		None
 15503 ;; Auto vars:     Size  Location     Type
 15504 ;;		None
 15505 ;; Return value:  Size  Location     Type
 15506 ;;                  1    wreg      void 
 15507 ;; Registers used:
 15508 ;;		wreg, status,2, status,0, prodl, prodh
 15509 ;; Tracked objects:
 15510 ;;		On entry : 3E/0
 15511 ;;		On exit  : 3F/0
 15512 ;;		Unchanged: 0/0
 15513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15514 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15515 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15517 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15518 ;;Total ram usage:        0 bytes
 15519 ;; Hardware stack levels used: 1
 15520 ;; Hardware stack levels required when called: 4
 15521 ;; This function calls:
 15522 ;;		Nothing
 15523 ;; This function is called by:
 15524 ;;		_WaitPreFlash
 15525 ;;		_actionZone_Closed
 15526 ;;		_actionZone_Opening
 15527 ;;		_actionZone_Opened
 15528 ;;		_actionZone_Closing
 15529 ;; This function uses a non-reentrant model
 15530 ;;
 15531                           
 15532                           	psect	text45
 15533  008FC2                     __ptext45:
 15534                           	callstack 0
 15535  008FC2                     _InitFullAutoTime:
 15536                           	callstack 24
 15537                           
 15538                           ;sm_ControlGate_MC50.c: 111:     if (var_sys_NVM.homemPresente == 0) {
 15539                           
 15540                           ;incstack = 0
 15541  008FC2  0100               	movlb	0	; () banked
 15542  008FC4  51A8               	movf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 15543  008FC6  A4D8               	btfss	status,2,c
 15544  008FC8  0012               	return	
 15545                           
 15546                           ; BSR set to: 0
 15547                           ;sm_ControlGate_MC50.c: 112:         ts_system.timeWaitToClose = ((int) var_sys_NVM.auto
      +                          TimeFullClose * (1000/50));
 15548  008FCA  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 15549  008FCC  0D14               	mullw	20
 15550  008FCE  CFF3 F1AC          	movff	prodl,_ts_system+18	;volatile
 15551  008FD2  CFF4 F1AD          	movff	prodh,_ts_system+19	;volatile
 15552                           
 15553                           ; BSR set to: 0
 15554                           ;sm_ControlGate_MC50.c: 113:         var_sys.AutoCloseActive = var_sys_NVM.autoTimeFullC
      +                          lose;
 15555  008FD6  C09D  F123         	movff	_var_sys_NVM+5,_var_sys+35	;volatile
 15556                           
 15557                           ; BSR set to: 0
 15558  008FDA  0012               	return		;funcret
 15559  008FDC                     __end_of_InitFullAutoTime:
 15560                           	callstack 0
 15561                           
 15562 ;; *************** function _OpenWalkOrder *****************
 15563 ;; Defined at:
 15564 ;;		line 71 in file "sm_ControlGate_MC50.c"
 15565 ;; Parameters:    Size  Location     Type
 15566 ;;		None
 15567 ;; Auto vars:     Size  Location     Type
 15568 ;;  diffTime        2   25[COMRAM] int 
 15569 ;; Return value:  Size  Location     Type
 15570 ;;                  1    wreg      void 
 15571 ;; Registers used:
 15572 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15573 ;; Tracked objects:
 15574 ;;		On entry : 3E/1
 15575 ;;		On exit  : 3E/0
 15576 ;;		Unchanged: 0/0
 15577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15578 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15579 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15580 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15581 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15582 ;;Total ram usage:        4 bytes
 15583 ;; Hardware stack levels used: 1
 15584 ;; Hardware stack levels required when called: 6
 15585 ;; This function calls:
 15586 ;;		_InitSoftStart
 15587 ;;		_sm_send_event
 15588 ;; This function is called by:
 15589 ;;		_actionZone_Closed
 15590 ;;		_actionZone_Opened
 15591 ;;		_actionZone_Closing
 15592 ;; This function uses a non-reentrant model
 15593 ;;
 15594                           
 15595                           	psect	text46
 15596  007F62                     __ptext46:
 15597                           	callstack 0
 15598  007F62                     _OpenWalkOrder:
 15599                           	callstack 22
 15600                           
 15601                           ;sm_ControlGate_MC50.c: 72:     int diffTime = ((int) var_sys_NVM.walkTime * (1000/50)) 
      +                          - var_sys.PositionActual ;
 15602                           
 15603                           ; BSR set to: 0
 15604                           ;incstack = 0
 15605  007F62  0100               	movlb	0	; () banked
 15606  007F64  519C               	movf	(_var_sys_NVM+4)& (0+255),w,b	;volatile
 15607  007F66  0D14               	mullw	20
 15608  007F68  CFF3 F018          	movff	prodl,??_OpenWalkOrder
 15609  007F6C  CFF4 F019          	movff	prodh,??_OpenWalkOrder+1
 15610  007F70  0101               	movlb	1	; () banked
 15611  007F72  511E               	movf	(_var_sys+30)& (0+255),w,b	;volatile
 15612  007F74  5C18               	subwf	??_OpenWalkOrder^0,w,c
 15613  007F76  6E1A               	movwf	OpenWalkOrder@diffTime^0,c
 15614  007F78  511F               	movf	(_var_sys+31)& (0+255),w,b	;volatile
 15615  007F7A  5819               	subwfb	(??_OpenWalkOrder+1)^0,w,c
 15616  007F7C  6E1B               	movwf	(OpenWalkOrder@diffTime+1)^0,c
 15617                           
 15618                           ; BSR set to: 1
 15619                           ;sm_ControlGate_MC50.c: 74:     if (diffTime > 0) {
 15620  007F7E  BE1B               	btfsc	(OpenWalkOrder@diffTime+1)^0,7,c
 15621  007F80  D022               	goto	l20410
 15622  007F82  501B               	movf	(OpenWalkOrder@diffTime+1)^0,w,c
 15623  007F84  E103               	bnz	u23690
 15624  007F86  041A               	decf	OpenWalkOrder@diffTime^0,w,c
 15625  007F88  A0D8               	btfss	status,0,c
 15626  007F8A  D01D               	goto	l20410
 15627  007F8C                     u23690:
 15628                           
 15629                           ; BSR set to: 1
 15630                           ;sm_ControlGate_MC50.c: 76:         sm_send_event(&controlGate_stateMachine, ev_OpenGate
      +                          );
 15631  007F8C  0EE2               	movlw	low _controlGate_stateMachine
 15632  007F8E  6E12               	movwf	sm_send_event@psm^0,c
 15633  007F90  0E01               	movlw	high _controlGate_stateMachine
 15634  007F92  6E13               	movwf	(sm_send_event@psm+1)^0,c
 15635  007F94  0E00               	movlw	0
 15636  007F96  6E15               	movwf	(sm_send_event@event+1)^0,c
 15637  007F98  0E0C               	movlw	12
 15638  007F9A  6E14               	movwf	sm_send_event@event^0,c
 15639  007F9C  EC1C  F041         	call	_sm_send_event	;wreg free
 15640                           
 15641                           ;sm_ControlGate_MC50.c: 77:         if (var_sys.Statedoorcontrol == st_Closed){
 15642  007FA0  0101               	movlb	1	; () banked
 15643  007FA2  051C               	decf	(_var_sys+28)& (0+255),w,b	;volatile
 15644  007FA4  A4D8               	btfss	status,2,c
 15645  007FA6  D005               	goto	l20404
 15646                           
 15647                           ; BSR set to: 1
 15648                           ;sm_ControlGate_MC50.c: 78:            ts_system.timeOpenWalk = diffTime;
 15649  007FA8  C01A  F1AA         	movff	OpenWalkOrder@diffTime,_ts_system+16	;volatile
 15650  007FAC  C01B  F1AB         	movff	OpenWalkOrder@diffTime+1,_ts_system+17	;volatile
 15651                           
 15652                           ;sm_ControlGate_MC50.c: 79:         }
 15653  007FB0  D006               	goto	l20406
 15654  007FB2                     l20404:
 15655                           
 15656                           ; BSR set to: 1
 15657                           ;sm_ControlGate_MC50.c: 81:             ts_system.timeOpenWalk = diffTime + (1000/50);
 15658  007FB2  0E14               	movlw	20
 15659  007FB4  241A               	addwf	OpenWalkOrder@diffTime^0,w,c
 15660  007FB6  6FAA               	movwf	(_ts_system+16)& (0+255),b	;volatile
 15661  007FB8  0E00               	movlw	0
 15662  007FBA  201B               	addwfc	(OpenWalkOrder@diffTime+1)^0,w,c
 15663  007FBC  6FAB               	movwf	(_ts_system+17)& (0+255),b	;volatile
 15664  007FBE                     l20406:
 15665                           
 15666                           ; BSR set to: 1
 15667                           ;sm_ControlGate_MC50.c: 83:         var_sys.StateMotor = InOpenWalk;
 15668  007FBE  0E02               	movlw	2
 15669  007FC0  6F00               	movwf	_var_sys& (0+255),b	;volatile
 15670                           
 15671                           ; BSR set to: 1
 15672                           ;sm_ControlGate_MC50.c: 84:         var_sys.Timewalkisactived = YES;
 15673  007FC2  0E01               	movlw	1
 15674  007FC4  6F4A               	movwf	(_var_sys+74)& (0+255),b	;volatile
 15675  007FC6                     l20410:
 15676                           
 15677                           ; BSR set to: 1
 15678                           ;sm_ControlGate_MC50.c: 92:     var_sys.LastState = InOpenWalk;
 15679  007FC6  0E02               	movlw	2
 15680  007FC8  6F0B               	movwf	(_var_sys+11)& (0+255),b	;volatile
 15681                           
 15682                           ; BSR set to: 1
 15683                           ;sm_ControlGate_MC50.c: 93:     InitSoftStart();
 15684  007FCA  EC4A  F041         	call	_InitSoftStart	;wreg free
 15685  007FCE  0012               	return		;funcret
 15686  007FD0                     __end_of_OpenWalkOrder:
 15687                           	callstack 0
 15688                           
 15689 ;; *************** function _sm_send_event *****************
 15690 ;; Defined at:
 15691 ;;		line 34 in file "sm_common_MC50.c"
 15692 ;; Parameters:    Size  Location     Type
 15693 ;;  psm             2   17[COMRAM] PTR struct .
 15694 ;;		 -> controlLearning_stateMachine(11), controlGate_stateMachine(11), main_stateMachine(11), menuConfiguration_stateMa
      +chine(11), 
 15695 ;;  event           2   19[COMRAM] int 
 15696 ;; Auto vars:     Size  Location     Type
 15697 ;;		None
 15698 ;; Return value:  Size  Location     Type
 15699 ;;                  1    wreg      void 
 15700 ;; Registers used:
 15701 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15702 ;; Tracked objects:
 15703 ;;		On entry : 0/0
 15704 ;;		On exit  : 0/0
 15705 ;;		Unchanged: 0/0
 15706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15707 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15708 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15709 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15710 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15711 ;;Total ram usage:        6 bytes
 15712 ;; Hardware stack levels used: 1
 15713 ;; Hardware stack levels required when called: 5
 15714 ;; This function calls:
 15715 ;;		_sm_get_current_state
 15716 ;; This function is called by:
 15717 ;;		_OpenFullOrder
 15718 ;;		_WaitPreFlash
 15719 ;;		_CloseOrder
 15720 ;;		_OpenWalkOrder
 15721 ;;		_StopOrder
 15722 ;;		_sm_execute_ControlGate
 15723 ;;		_actionZone_Closed
 15724 ;;		_actionZone_Opening
 15725 ;;		_actionZone_Closing
 15726 ;;		_sm_execute_ControlLearning
 15727 ;;		_sm_execute_main
 15728 ;;		_sm_execute_menuConfiguration
 15729 ;;		_setValueToEdit
 15730 ;;		_controlSelectRemote
 15731 ;;		_controlSaveRemote
 15732 ;; This function uses a non-reentrant model
 15733 ;;
 15734                           
 15735                           	psect	text47
 15736  008238                     __ptext47:
 15737                           	callstack 0
 15738  008238                     _sm_send_event:
 15739                           	callstack 24
 15740                           
 15741                           ;sm_common_MC50.c: 34: void sm_send_event(sm_t *psm, int event);sm_common_MC50.c: 35: {;
      +                          sm_common_MC50.c: 36:  if(( psm->parent_machine == ((void*)0)) || (sm_get_current_state(
      +                          psm->parent_machine)==psm->parent_state))
 15742                           
 15743                           ;incstack = 0
 15744  008238  EE20 F007          	lfsr	2,7
 15745  00823C  5012               	movf	sm_send_event@psm^0,w,c
 15746  00823E  26D9               	addwf	fsr2l,f,c
 15747  008240  5013               	movf	(sm_send_event@psm+1)^0,w,c
 15748  008242  22DA               	addwfc	fsr2h,f,c
 15749  008244  50DE               	movf	postinc2,w,c
 15750  008246  10DE               	iorwf	postinc2,w,c
 15751  008248  B4D8               	btfsc	status,2,c
 15752  00824A  D019               	goto	u22340
 15753  00824C  EE20 F007          	lfsr	2,7
 15754  008250  5012               	movf	sm_send_event@psm^0,w,c
 15755  008252  26D9               	addwf	fsr2l,f,c
 15756  008254  5013               	movf	(sm_send_event@psm+1)^0,w,c
 15757  008256  22DA               	addwfc	fsr2h,f,c
 15758  008258  CFDE F010          	movff	postinc2,sm_get_current_state@psm
 15759  00825C  CFDD F011          	movff	postdec2,sm_get_current_state@psm+1
 15760  008260  EC84  F048         	call	_sm_get_current_state	;wreg free
 15761  008264  EE20 F009          	lfsr	2,9
 15762  008268  5012               	movf	sm_send_event@psm^0,w,c
 15763  00826A  26D9               	addwf	fsr2l,f,c
 15764  00826C  5013               	movf	(sm_send_event@psm+1)^0,w,c
 15765  00826E  22DA               	addwfc	fsr2h,f,c
 15766  008270  50DE               	movf	postinc2,w,c
 15767  008272  1810               	xorwf	?_sm_get_current_state^0,w,c
 15768  008274  E10E               	bnz	l3506
 15769  008276  50DE               	movf	postinc2,w,c
 15770  008278  1811               	xorwf	(?_sm_get_current_state+1)^0,w,c
 15771  00827A  A4D8               	btfss	status,2,c
 15772  00827C  0012               	return	
 15773  00827E                     u22340:
 15774                           
 15775                           ;sm_common_MC50.c: 38:  {;sm_common_MC50.c: 39:   psm->last_event = event;
 15776  00827E  EE20 F004          	lfsr	2,4
 15777  008282  5012               	movf	sm_send_event@psm^0,w,c
 15778  008284  26D9               	addwf	fsr2l,f,c
 15779  008286  5013               	movf	(sm_send_event@psm+1)^0,w,c
 15780  008288  22DA               	addwfc	fsr2h,f,c
 15781  00828A  C014  FFDE         	movff	sm_send_event@event,postinc2
 15782  00828E  C015  FFDD         	movff	sm_send_event@event+1,postdec2
 15783  008292                     l3506:
 15784  008292  0012               	return		;funcret
 15785  008294                     __end_of_sm_send_event:
 15786                           	callstack 0
 15787                           
 15788 ;; *************** function _sm_get_current_state *****************
 15789 ;; Defined at:
 15790 ;;		line 30 in file "sm_common_MC50.c"
 15791 ;; Parameters:    Size  Location     Type
 15792 ;;  psm             2   15[COMRAM] PTR struct .
 15793 ;;		 -> NULL(0), 
 15794 ;; Auto vars:     Size  Location     Type
 15795 ;;		None
 15796 ;; Return value:  Size  Location     Type
 15797 ;;                  2   15[COMRAM] int 
 15798 ;; Registers used:
 15799 ;;		fsr2l, fsr2h
 15800 ;; Tracked objects:
 15801 ;;		On entry : 0/0
 15802 ;;		On exit  : 0/0
 15803 ;;		Unchanged: 0/0
 15804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15805 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15806 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15807 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15808 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15809 ;;Total ram usage:        2 bytes
 15810 ;; Hardware stack levels used: 1
 15811 ;; Hardware stack levels required when called: 4
 15812 ;; This function calls:
 15813 ;;		Nothing
 15814 ;; This function is called by:
 15815 ;;		_sm_send_event
 15816 ;; This function uses a non-reentrant model
 15817 ;;
 15818                           
 15819                           	psect	text48
 15820  009108                     __ptext48:
 15821                           	callstack 0
 15822  009108                     _sm_get_current_state:
 15823                           	callstack 24
 15824                           
 15825                           ;sm_common_MC50.c: 31:  return psm->current_state;
 15826                           
 15827                           ;incstack = 0
 15828  009108  C010  FFD9         	movff	sm_get_current_state@psm,fsr2l
 15829  00910C  C011  FFDA         	movff	sm_get_current_state@psm+1,fsr2h
 15830  009110  CFDE F010          	movff	postinc2,?_sm_get_current_state
 15831  009114  CFDD F011          	movff	postdec2,?_sm_get_current_state+1
 15832  009118  0012               	return		;funcret
 15833  00911A                     __end_of_sm_get_current_state:
 15834                           	callstack 0
 15835                           
 15836 ;; *************** function _InitSoftStart *****************
 15837 ;; Defined at:
 15838 ;;		line 816 in file "sm_ControlGate_MC50.c"
 15839 ;; Parameters:    Size  Location     Type
 15840 ;;		None
 15841 ;; Auto vars:     Size  Location     Type
 15842 ;;		None
 15843 ;; Return value:  Size  Location     Type
 15844 ;;                  1    wreg      void 
 15845 ;; Registers used:
 15846 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 15847 ;; Tracked objects:
 15848 ;;		On entry : 3F/1
 15849 ;;		On exit  : 3E/0
 15850 ;;		Unchanged: 0/0
 15851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15854 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15855 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15856 ;;Total ram usage:        1 bytes
 15857 ;; Hardware stack levels used: 1
 15858 ;; Hardware stack levels required when called: 5
 15859 ;; This function calls:
 15860 ;;		_GetMotorPower
 15861 ;; This function is called by:
 15862 ;;		_OpenFullOrder
 15863 ;;		_CloseOrder
 15864 ;;		_OpenWalkOrder
 15865 ;; This function uses a non-reentrant model
 15866 ;;
 15867                           
 15868                           	psect	text49
 15869  008294                     __ptext49:
 15870                           	callstack 0
 15871  008294                     _InitSoftStart:
 15872                           	callstack 22
 15873                           
 15874                           ; BSR set to: 1
 15875                           ;sm_ControlGate_MC50.c: 817:     if (var_sys_NVM.softStart != 0 && var_sys.AutoInversion
      +                          Active == NO) {
 15876                           
 15877                           ;incstack = 0
 15878  008294  0100               	movlb	0	; () banked
 15879  008296  51AA               	movf	(_var_sys_NVM+18)& (0+255),w,b	;volatile
 15880  008298  B4D8               	btfsc	status,2,c
 15881  00829A  0012               	return	
 15882                           
 15883                           ; BSR set to: 0
 15884  00829C  0101               	movlb	1	; () banked
 15885  00829E  5127               	movf	(_var_sys+39)& (0+255),w,b	;volatile
 15886  0082A0  A4D8               	btfss	status,2,c
 15887  0082A2  0012               	return	
 15888                           
 15889                           ; BSR set to: 1
 15890                           ;sm_ControlGate_MC50.c: 824:         var_sys.velocityFactorstop = 0;
 15891  0082A4  0E00               	movlw	0
 15892  0082A6  6F11               	movwf	(_var_sys+17)& (0+255),b	;volatile
 15893  0082A8  0E00               	movlw	0
 15894  0082AA  6F10               	movwf	(_var_sys+16)& (0+255),b	;volatile
 15895                           
 15896                           ;sm_ControlGate_MC50.c: 825:         var_sys.velocityFactor = 0;
 15897  0082AC  0E00               	movlw	0
 15898  0082AE  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 15899  0082B0  0E00               	movlw	0
 15900  0082B2  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 15901                           
 15902                           ; BSR set to: 1
 15903                           ;sm_ControlGate_MC50.c: 826:         var_sys.velocityFactor = GetMotorPower();
 15904  0082B4  EC9B  F037         	call	_GetMotorPower	;wreg free
 15905  0082B8  6E14               	movwf	??_InitSoftStart^0,c
 15906  0082BA  5014               	movf	??_InitSoftStart^0,w,c
 15907  0082BC  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 15908  0082BE  6B0F               	clrf	(_var_sys+15)& (0+255),b	;volatile
 15909                           
 15910                           ; BSR set to: 1
 15911                           ;sm_ControlGate_MC50.c: 827:         if ( var_sys.velocityFactor > (81) )
 15912  0082C0  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 15913  0082C2  D00A               	goto	l19518
 15914  0082C4  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 15915  0082C6  E104               	bnz	u22370
 15916  0082C8  0E52               	movlw	82
 15917  0082CA  5D0E               	subwf	(_var_sys+14)& (0+255),w,b	;volatile
 15918  0082CC  A0D8               	btfss	status,0,c
 15919  0082CE  D004               	goto	l19518
 15920  0082D0                     u22370:
 15921                           
 15922                           ; BSR set to: 1
 15923                           ;sm_ControlGate_MC50.c: 828:         {;sm_ControlGate_MC50.c: 829:             var_sys.v
      +                          elocityFactor = (81);
 15924  0082D0  0E00               	movlw	0
 15925  0082D2  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 15926  0082D4  0E51               	movlw	81
 15927  0082D6  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 15928  0082D8                     l19518:
 15929                           
 15930                           ; BSR set to: 1
 15931                           ;sm_ControlGate_MC50.c: 840:         ts_system.timeSoftStart = var_sys.velocityFactor + 
      +                          1;
 15932  0082D8  0E01               	movlw	1
 15933  0082DA  250E               	addwf	(_var_sys+14)& (0+255),w,b	;volatile
 15934  0082DC  6FB0               	movwf	(_ts_system+22)& (0+255),b	;volatile
 15935  0082DE  0E00               	movlw	0
 15936  0082E0  210F               	addwfc	(_var_sys+15)& (0+255),w,b	;volatile
 15937  0082E2  6FB1               	movwf	(_ts_system+23)& (0+255),b	;volatile
 15938                           
 15939                           ;sm_ControlGate_MC50.c: 842:         var_sys.SoftStartDecrementControl = 10 - var_sys_NV
      +                          M.softStart;
 15940  0082E4  0100               	movlb	0	; () banked
 15941  0082E6  51AA               	movf	(_var_sys_NVM+18)& (0+255),w,b	;volatile
 15942  0082E8  080A               	sublw	10
 15943  0082EA  0101               	movlb	1	; () banked
 15944  0082EC  6F14               	movwf	(_var_sys+20)& (0+255),b	;volatile
 15945  0082EE  0012               	return		;funcret
 15946  0082F0                     __end_of_InitSoftStart:
 15947                           	callstack 0
 15948                           
 15949 ;; *************** function _InitWalkAutoTime *****************
 15950 ;; Defined at:
 15951 ;;		line 103 in file "sm_ControlGate_MC50.c"
 15952 ;; Parameters:    Size  Location     Type
 15953 ;;		None
 15954 ;; Auto vars:     Size  Location     Type
 15955 ;;		None
 15956 ;; Return value:  Size  Location     Type
 15957 ;;                  1    wreg      void 
 15958 ;; Registers used:
 15959 ;;		wreg, status,2, status,0, prodl, prodh
 15960 ;; Tracked objects:
 15961 ;;		On entry : 0/1
 15962 ;;		On exit  : 3F/0
 15963 ;;		Unchanged: 0/0
 15964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15965 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15966 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15967 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15968 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15969 ;;Total ram usage:        0 bytes
 15970 ;; Hardware stack levels used: 1
 15971 ;; Hardware stack levels required when called: 4
 15972 ;; This function calls:
 15973 ;;		Nothing
 15974 ;; This function is called by:
 15975 ;;		_actionZone_Closed
 15976 ;;		_actionZone_Opening
 15977 ;;		_actionZone_Opened
 15978 ;;		_actionZone_Closing
 15979 ;; This function uses a non-reentrant model
 15980 ;;
 15981                           
 15982                           	psect	text50
 15983  0090CC                     __ptext50:
 15984                           	callstack 0
 15985  0090CC                     _InitWalkAutoTime:
 15986                           	callstack 24
 15987                           
 15988                           ;sm_ControlGate_MC50.c: 105:     ts_system.timeWaitToClose = ((int) var_sys_NVM.autoTime
      +                          WalkClose * (1000/50));
 15989                           
 15990                           ;incstack = 0
 15991  0090CC  0100               	movlb	0	; () banked
 15992  0090CE  519E               	movf	(_var_sys_NVM+6)& (0+255),w,b	;volatile
 15993  0090D0  0D14               	mullw	20
 15994  0090D2  CFF3 F1AC          	movff	prodl,_ts_system+18	;volatile
 15995  0090D6  CFF4 F1AD          	movff	prodh,_ts_system+19	;volatile
 15996                           
 15997                           ; BSR set to: 0
 15998                           ;sm_ControlGate_MC50.c: 106:     var_sys.AutoCloseActive = var_sys_NVM.autoTimeWalkClose
      +                          ;
 15999  0090DA  C09E  F123         	movff	_var_sys_NVM+6,_var_sys+35	;volatile
 16000                           
 16001                           ; BSR set to: 0
 16002  0090DE  0012               	return		;funcret
 16003  0090E0                     __end_of_InitWalkAutoTime:
 16004                           	callstack 0
 16005                           
 16006 ;; *************** function _GetSecurityStateInOpening *****************
 16007 ;; Defined at:
 16008 ;;		line 738 in file "inputs_MC50.c"
 16009 ;; Parameters:    Size  Location     Type
 16010 ;;		None
 16011 ;; Auto vars:     Size  Location     Type
 16012 ;;		None
 16013 ;; Return value:  Size  Location     Type
 16014 ;;                  1    wreg      enum E10564
 16015 ;; Registers used:
 16016 ;;		wreg, status,2, status,0, cstack
 16017 ;; Tracked objects:
 16018 ;;		On entry : 0/0
 16019 ;;		On exit  : 3E/0
 16020 ;;		Unchanged: 0/0
 16021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16022 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16023 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16025 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16026 ;;Total ram usage:        0 bytes
 16027 ;; Hardware stack levels used: 1
 16028 ;; Hardware stack levels required when called: 5
 16029 ;; This function calls:
 16030 ;;		_SetSegmentValueIntermitent
 16031 ;; This function is called by:
 16032 ;;		_actionZone_Closed
 16033 ;;		_actionZone_Opening
 16034 ;; This function uses a non-reentrant model
 16035 ;;
 16036                           
 16037                           	psect	text51
 16038  00737C                     __ptext51:
 16039                           	callstack 0
 16040  00737C                     _GetSecurityStateInOpening:
 16041                           	callstack 23
 16042                           
 16043                           ;inputs_MC50.c: 747:     if((var_sys_NVM.securityBandIsON == 1) && (var_sys.SecurityBarI
      +                          sObstructed == YES)&&(var_sys_NVM.securityBandInOpen == 1)&& (var_sys_NVM.Stopboton == 0
      +                          ))
 16044                           
 16045                           ; BSR set to: 0
 16046                           ;incstack = 0
 16047  00737C  0100               	movlb	0	; () banked
 16048  00737E  05A1               	decf	(_var_sys_NVM+9)& (0+255),w,b	;volatile
 16049  007380  A4D8               	btfss	status,2,c
 16050  007382  D01B               	goto	l20080
 16051                           
 16052                           ; BSR set to: 0
 16053  007384  0101               	movlb	1	; () banked
 16054  007386  0502               	decf	(_var_sys+2)& (0+255),w,b	;volatile
 16055  007388  A4D8               	btfss	status,2,c
 16056  00738A  D017               	goto	l20080
 16057                           
 16058                           ; BSR set to: 1
 16059  00738C  0100               	movlb	0	; () banked
 16060  00738E  05A3               	decf	(_var_sys_NVM+11)& (0+255),w,b	;volatile
 16061  007390  A4D8               	btfss	status,2,c
 16062  007392  D013               	goto	l20080
 16063                           
 16064                           ; BSR set to: 0
 16065  007394  51AE               	movf	(_var_sys_NVM+22)& (0+255),w,b	;volatile
 16066  007396  A4D8               	btfss	status,2,c
 16067  007398  D010               	goto	l20080
 16068                           
 16069                           ; BSR set to: 0
 16070                           ;inputs_MC50.c: 748:     {;inputs_MC50.c: 750:         ts_system.timeSinalizationDigit=(
      +                           200/50);
 16071  00739A  0E00               	movlw	0
 16072  00739C  0101               	movlb	1	; () banked
 16073  00739E  6FA7               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16074  0073A0  0E04               	movlw	4
 16075  0073A2  6FA6               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16076                           
 16077                           ; BSR set to: 1
 16078                           ;inputs_MC50.c: 751:         SetSegmentValueIntermitent(dL,dA,(1000/50));
 16079  0073A4  0E0A               	movlw	10
 16080  0073A6  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 16081  0073A8  0E00               	movlw	0
 16082  0073AA  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 16083  0073AC  0E14               	movlw	20
 16084  0073AE  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 16085  0073B0  0E12               	movlw	18
 16086  0073B2  EC94  F045         	call	_SetSegmentValueIntermitent
 16087  0073B6                     l20074:
 16088                           
 16089                           ; BSR set to: 1
 16090                           ;inputs_MC50.c: 752:         return YES;
 16091  0073B6  0E01               	movlw	1
 16092  0073B8  0012               	return	
 16093  0073BA                     l20080:
 16094  0073BA  0100               	movlb	0	; () banked
 16095  0073BC  05AE               	decf	(_var_sys_NVM+22)& (0+255),w,b	;volatile
 16096  0073BE  A4D8               	btfss	status,2,c
 16097  0073C0  D013               	goto	l20094
 16098                           
 16099                           ; BSR set to: 0
 16100  0073C2  0101               	movlb	1	; () banked
 16101  0073C4  0502               	decf	(_var_sys+2)& (0+255),w,b	;volatile
 16102  0073C6  A4D8               	btfss	status,2,c
 16103  0073C8  D00F               	goto	l20094
 16104                           
 16105                           ; BSR set to: 1
 16106                           ;inputs_MC50.c: 756:     {;inputs_MC50.c: 758:         ts_system.timeSinalizationDigit=(
      +                           200/50);
 16107  0073CA  0E00               	movlw	0
 16108  0073CC  6FA7               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16109  0073CE  0E04               	movlw	4
 16110  0073D0  6FA6               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16111                           
 16112                           ; BSR set to: 1
 16113                           ;inputs_MC50.c: 759:         SetSegmentValueIntermitent(d5,dt,(1000/50));
 16114  0073D2  0E15               	movlw	21
 16115  0073D4  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 16116  0073D6  0E00               	movlw	0
 16117  0073D8  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 16118  0073DA  0E14               	movlw	20
 16119  0073DC  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 16120  0073DE  0E05               	movlw	5
 16121  0073E0  EC94  F045         	call	_SetSegmentValueIntermitent
 16122                           
 16123                           ; BSR set to: 1
 16124                           ;inputs_MC50.c: 760:         return ST;
 16125  0073E4  0E02               	movlw	2
 16126  0073E6  0012               	return	
 16127  0073E8                     l20094:
 16128  0073E8  0100               	movlb	0	; () banked
 16129  0073EA  059F               	decf	(_var_sys_NVM+7)& (0+255),w,b	;volatile
 16130  0073EC  A4D8               	btfss	status,2,c
 16131  0073EE  D017               	goto	l20110
 16132                           
 16133                           ; BSR set to: 0
 16134  0073F0  0101               	movlb	1	; () banked
 16135  0073F2  0501               	decf	(_var_sys+1)& (0+255),w,b	;volatile
 16136  0073F4  A4D8               	btfss	status,2,c
 16137  0073F6  D013               	goto	l20110
 16138                           
 16139                           ; BSR set to: 1
 16140  0073F8  0100               	movlb	0	; () banked
 16141  0073FA  05A0               	decf	(_var_sys_NVM+8)& (0+255),w,b	;volatile
 16142  0073FC  A4D8               	btfss	status,2,c
 16143  0073FE  D00F               	goto	l20110
 16144                           
 16145                           ; BSR set to: 0
 16146                           ;inputs_MC50.c: 764:     {;inputs_MC50.c: 766:         ts_system.timeSinalizationDigit=(
      +                           200/50);
 16147  007400  0E00               	movlw	0
 16148  007402  0101               	movlb	1	; () banked
 16149  007404  6FA7               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16150  007406  0E04               	movlw	4
 16151  007408  6FA6               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16152                           
 16153                           ; BSR set to: 1
 16154                           ;inputs_MC50.c: 767:         SetSegmentValueIntermitent(dL,dE,(1000/50));
 16155  00740A  0E0E               	movlw	14
 16156  00740C  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 16157  00740E  0E00               	movlw	0
 16158  007410  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 16159  007412  0E14               	movlw	20
 16160  007414  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 16161  007416  0E12               	movlw	18
 16162  007418  EC94  F045         	call	_SetSegmentValueIntermitent
 16163  00741C  D7CC               	goto	l20074
 16164  00741E                     l20110:
 16165                           
 16166                           ;inputs_MC50.c: 771:     {;inputs_MC50.c: 772:         return NO;
 16167  00741E  0E00               	movlw	0
 16168  007420  0012               	return		;funcret
 16169  007422                     __end_of_GetSecurityStateInOpening:
 16170                           	callstack 0
 16171                           
 16172 ;; *************** function _SetSegmentValueIntermitent *****************
 16173 ;; Defined at:
 16174 ;;		line 201 in file "outputs_MC50.c"
 16175 ;; Parameters:    Size  Location     Type
 16176 ;;  d1              1    wreg     unsigned char 
 16177 ;;  d2              1   15[COMRAM] unsigned char 
 16178 ;;  time            2   16[COMRAM] int 
 16179 ;; Auto vars:     Size  Location     Type
 16180 ;;  d1              1   18[COMRAM] unsigned char 
 16181 ;; Return value:  Size  Location     Type
 16182 ;;                  1    wreg      void 
 16183 ;; Registers used:
 16184 ;;		wreg, status,2, status,0
 16185 ;; Tracked objects:
 16186 ;;		On entry : 3E/0
 16187 ;;		On exit  : 3F/1
 16188 ;;		Unchanged: 0/0
 16189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16190 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16191 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16193 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16194 ;;Total ram usage:        4 bytes
 16195 ;; Hardware stack levels used: 1
 16196 ;; Hardware stack levels required when called: 4
 16197 ;; This function calls:
 16198 ;;		Nothing
 16199 ;; This function is called by:
 16200 ;;		_GetSecurityStateInOpening
 16201 ;;		_GetSecurityStateInClosing
 16202 ;;		_sm_execute_ControlGate
 16203 ;;		_actionZone_Opening
 16204 ;;		_actionZone_Closing
 16205 ;; This function uses a non-reentrant model
 16206 ;;
 16207                           
 16208                           	psect	text52
 16209  008B28                     __ptext52:
 16210                           	callstack 0
 16211  008B28                     _SetSegmentValueIntermitent:
 16212                           	callstack 24
 16213                           
 16214                           ;incstack = 0
 16215                           ;SetSegmentValueIntermitent@d1 stored from wreg
 16216  008B28  6E13               	movwf	SetSegmentValueIntermitent@d1^0,c
 16217                           
 16218                           ;outputs_MC50.c: 201: void SetSegmentValueIntermitent(char d1, char d2,int time);outputs
      +                          _MC50.c: 202: {;outputs_MC50.c: 204:     if ( main_stateMachine.current_state != st_Menu
      +                          Configuration && (ts_system.timeoutMenu == 0 && button_struct.timer < (1000/50)))
 16219  008B2A  0101               	movlb	1	; () banked
 16220  008B2C  05ED               	decf	_main_stateMachine& (0+255),w,b
 16221  008B2E  11EE               	iorwf	(_main_stateMachine+1)& (0+255),w,b
 16222  008B30  B4D8               	btfsc	status,2,c
 16223  008B32  0012               	return	
 16224                           
 16225                           ; BSR set to: 1
 16226  008B34  51A8               	movf	(_ts_system+14)& (0+255),w,b	;volatile
 16227  008B36  11A9               	iorwf	(_ts_system+15)& (0+255),w,b	;volatile
 16228  008B38  A4D8               	btfss	status,2,c
 16229  008B3A  0012               	return	
 16230                           
 16231                           ; BSR set to: 1
 16232  008B3C  0E14               	movlw	20
 16233  008B3E  604E               	cpfslt	(_button_struct+2)^0,c	;volatile
 16234  008B40  0012               	return	
 16235                           
 16236                           ; BSR set to: 1
 16237                           ;outputs_MC50.c: 205:     {;outputs_MC50.c: 206:         dispStruct.display_grp.value_di
      +                          splay1=d1;
 16238  008B42  C013  F072         	movff	SetSegmentValueIntermitent@d1,_dispStruct	;volatile
 16239                           
 16240                           ;outputs_MC50.c: 207:         dispStruct.display_grp.value_display2=d2;
 16241  008B46  C010  F073         	movff	SetSegmentValueIntermitent@d2,_dispStruct+1	;volatile
 16242                           
 16243                           ;outputs_MC50.c: 208:         dispStruct.intermitentFreq=time;
 16244  008B4A  C011  F075         	movff	SetSegmentValueIntermitent@time,_dispStruct+3	;volatile
 16245  008B4E  C012  F076         	movff	SetSegmentValueIntermitent@time+1,_dispStruct+4	;volatile
 16246                           
 16247                           ; BSR set to: 1
 16248  008B52  0012               	return		;funcret
 16249  008B54                     __end_of_SetSegmentValueIntermitent:
 16250                           	callstack 0
 16251                           
 16252 ;; *************** function _GetOpenOrder *****************
 16253 ;; Defined at:
 16254 ;;		line 330 in file "inputs_MC50.c"
 16255 ;; Parameters:    Size  Location     Type
 16256 ;;		None
 16257 ;; Auto vars:     Size  Location     Type
 16258 ;;		None
 16259 ;; Return value:  Size  Location     Type
 16260 ;;                  1    wreg      enum E10539
 16261 ;; Registers used:
 16262 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 16263 ;; Tracked objects:
 16264 ;;		On entry : 3E/1
 16265 ;;		On exit  : 0/0
 16266 ;;		Unchanged: 0/0
 16267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16269 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16271 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16272 ;;Total ram usage:        0 bytes
 16273 ;; Hardware stack levels used: 1
 16274 ;; Hardware stack levels required when called: 5
 16275 ;; This function calls:
 16276 ;;		_SetSegmentValueIntermitentMain
 16277 ;;		___lbdiv
 16278 ;; This function is called by:
 16279 ;;		_sm_execute_ControlGate
 16280 ;;		_actionZone_Closed
 16281 ;;		_actionZone_Opening
 16282 ;;		_actionZone_Opened
 16283 ;;		_actionZone_Closing
 16284 ;;		_sm_execute_ControlLearning
 16285 ;; This function uses a non-reentrant model
 16286 ;;
 16287                           
 16288                           	psect	text53
 16289  00517E                     __ptext53:
 16290                           	callstack 0
 16291  00517E                     _GetOpenOrder:
 16292                           	callstack 23
 16293                           
 16294                           ;inputs_MC50.c: 332:    if (var_sys.LearningIsEnabled == NO){
 16295                           
 16296                           ; BSR set to: 1
 16297                           ;incstack = 0
 16298  00517E  0101               	movlb	1	; () banked
 16299  005180  5126               	movf	(_var_sys+38)& (0+255),w,b	;volatile
 16300  005182  A4D8               	btfss	status,2,c
 16301  005184  D0C0               	goto	l20050
 16302                           
 16303                           ; BSR set to: 1
 16304                           ;inputs_MC50.c: 334:        if(ts_system.TimeCurrentAlarm>0)
 16305  005186  BFC5               	btfsc	(_ts_system+43)& (0+255),7,b	;volatile
 16306  005188  D019               	goto	l19942
 16307  00518A  51C5               	movf	(_ts_system+43)& (0+255),w,b	;volatile
 16308  00518C  E103               	bnz	u22900
 16309  00518E  05C4               	decf	(_ts_system+42)& (0+255),w,b	;volatile
 16310  005190  A0D8               	btfss	status,0,c
 16311  005192  D014               	goto	l19942
 16312  005194                     u22900:
 16313                           
 16314                           ; BSR set to: 1
 16315                           ;inputs_MC50.c: 336:         {;inputs_MC50.c: 337:             SetSegmentValueIntermiten
      +                          tMain(dL,d1,(1000/50));
 16316  005194  0E01               	movlw	1
 16317  005196  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16318  005198  0E00               	movlw	0
 16319  00519A  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16320  00519C  0E14               	movlw	20
 16321  00519E  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16322  0051A0  0E12               	movlw	18
 16323  0051A2  EC70  F048         	call	_SetSegmentValueIntermitentMain
 16324                           
 16325                           ;inputs_MC50.c: 338:             ts_system.timeSinalizationDigit=( 500/50);
 16326  0051A6  0E00               	movlw	0
 16327  0051A8  0101               	movlb	1	; () banked
 16328  0051AA  6FA7               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16329  0051AC  0E0A               	movlw	10
 16330  0051AE  6FA6               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16331                           
 16332                           ; BSR set to: 1
 16333                           ;inputs_MC50.c: 339:             rfCMD.processed=1;
 16334  0051B0  0E01               	movlw	1
 16335  0051B2  6E45               	movwf	(_rfCMD+10)^0,c	;volatile
 16336                           
 16337                           ; BSR set to: 1
 16338                           ;inputs_MC50.c: 340:             button_struct.processed=1;
 16339  0051B4  0E01               	movlw	1
 16340  0051B6  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
 16341  0051B8                     l19936:
 16342                           
 16343                           ;inputs_MC50.c: 341:             return NoCMD;
 16344  0051B8  0E00               	movlw	0
 16345  0051BA  0012               	return	
 16346  0051BC                     l19942:
 16347                           
 16348                           ; BSR set to: 1
 16349  0051BC  0100               	movlb	0	; () banked
 16350  0051BE  51A8               	movf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 16351  0051C0  B4D8               	btfsc	status,2,c
 16352  0051C2  D02F               	goto	l19976
 16353                           
 16354                           ; BSR set to: 0
 16355                           ;inputs_MC50.c: 344:         {;inputs_MC50.c: 345:             if(button_struct.current=
      +                          =0x35)
 16356  0051C4  0E35               	movlw	53
 16357  0051C6  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16358  0051C8  A4D8               	btfss	status,2,c
 16359  0051CA  D017               	goto	l19960
 16360                           
 16361                           ; BSR set to: 0
 16362                           ;inputs_MC50.c: 346:             {;inputs_MC50.c: 347:                 ts_system.timeSin
      +                          alizationDigit=( 500/50);
 16363  0051CC  0E00               	movlw	0
 16364  0051CE  0101               	movlb	1	; () banked
 16365  0051D0  6FA7               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16366  0051D2  0E0A               	movlw	10
 16367  0051D4  6FA6               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16368                           
 16369                           ; BSR set to: 1
 16370                           ;inputs_MC50.c: 348:                 SetSegmentValueIntermitentMain(dL,d0,( 200/50));
 16371  0051D6  0E00               	movlw	0
 16372  0051D8  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16373  0051DA  0E00               	movlw	0
 16374  0051DC  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16375  0051DE  0E04               	movlw	4
 16376  0051E0  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16377  0051E2  0E12               	movlw	18
 16378  0051E4  EC70  F048         	call	_SetSegmentValueIntermitentMain
 16379                           
 16380                           ;inputs_MC50.c: 349:                 if (var_sys_NVM.homemPresente == 2){
 16381  0051E8  0E02               	movlw	2
 16382  0051EA  0100               	movlb	0	; () banked
 16383  0051EC  19A8               	xorwf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 16384  0051EE  A4D8               	btfss	status,2,c
 16385  0051F0  D002               	goto	l19954
 16386  0051F2                     u22930:
 16387                           
 16388                           ; BSR set to: 0
 16389                           ;inputs_MC50.c: 350:                    button_struct.processed=1;
 16390  0051F2  0E01               	movlw	1
 16391  0051F4  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
 16392  0051F6                     l19954:
 16393                           
 16394                           ; BSR set to: 0
 16395                           ;inputs_MC50.c: 352:                 return TypeFullOpen;
 16396  0051F6  0E03               	movlw	3
 16397  0051F8  0012               	return	
 16398  0051FA                     l19960:
 16399                           
 16400                           ; BSR set to: 0
 16401  0051FA  0E33               	movlw	51
 16402  0051FC  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16403  0051FE  A4D8               	btfss	status,2,c
 16404  005200  D7DB               	goto	l19936
 16405                           
 16406                           ; BSR set to: 0
 16407                           ;inputs_MC50.c: 355:             {;inputs_MC50.c: 356:                 ts_system.timeSin
      +                          alizationDigit=( 500/50);
 16408  005202  0E00               	movlw	0
 16409  005204  0101               	movlb	1	; () banked
 16410  005206  6FA7               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16411  005208  0E0A               	movlw	10
 16412  00520A  6FA6               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16413                           
 16414                           ; BSR set to: 1
 16415                           ;inputs_MC50.c: 357:                 SetSegmentValueIntermitentMain(dL,d5,( 200/50));
 16416  00520C  0E05               	movlw	5
 16417  00520E  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16418  005210  0E00               	movlw	0
 16419  005212  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16420  005214  0E04               	movlw	4
 16421  005216  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16422  005218  0E12               	movlw	18
 16423  00521A  EC70  F048         	call	_SetSegmentValueIntermitentMain
 16424  00521E                     l19966:
 16425                           
 16426                           ;inputs_MC50.c: 359:                 return TypeFullClose;
 16427  00521E  0E04               	movlw	4
 16428  005220  0012               	return	
 16429  005222                     l19976:
 16430                           
 16431                           ; BSR set to: 0
 16432  005222  0E35               	movlw	53
 16433  005224  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16434  005226  A4D8               	btfss	status,2,c
 16435  005228  D016               	goto	l19998
 16436                           
 16437                           ; BSR set to: 0
 16438                           ;inputs_MC50.c: 371:         {;inputs_MC50.c: 372:             ts_system.timeSinalizatio
      +                          nDigit=(1000/50)*2;
 16439  00522A  0E00               	movlw	0
 16440  00522C  0101               	movlb	1	; () banked
 16441  00522E  6FA7               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16442  005230  0E28               	movlw	40
 16443  005232  6FA6               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16444                           
 16445                           ; BSR set to: 1
 16446                           ;inputs_MC50.c: 373:             SetSegmentValueIntermitentMain(dL,d0,( 200/50));
 16447  005234  0E00               	movlw	0
 16448  005236  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16449  005238  0E00               	movlw	0
 16450  00523A  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16451  00523C  0E04               	movlw	4
 16452  00523E  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16453  005240  0E12               	movlw	18
 16454  005242  EC70  F048         	call	_SetSegmentValueIntermitentMain
 16455                           
 16456                           ;inputs_MC50.c: 374:             if(var_sys_NVM.logicDigital==1)
 16457  005246  0100               	movlb	0	; () banked
 16458  005248  05A9               	decf	(_var_sys_NVM+17)& (0+255),w,b	;volatile
 16459  00524A  B4D8               	btfsc	status,2,c
 16460  00524C  D7D2               	goto	u22930
 16461  00524E                     l19992:
 16462                           
 16463                           ;inputs_MC50.c: 380:             {;inputs_MC50.c: 381:                 button_struct.pro
      +                          cessed=1;
 16464  00524E  0E01               	movlw	1
 16465  005250  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
 16466                           
 16467                           ;inputs_MC50.c: 382:                 return TypeFull;
 16468  005252  0E01               	movlw	1
 16469  005254  0012               	return	
 16470  005256                     l19998:
 16471                           
 16472                           ; BSR set to: 0
 16473  005256  0E33               	movlw	51
 16474  005258  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16475  00525A  A4D8               	btfss	status,2,c
 16476  00525C  D019               	goto	l20020
 16477                           
 16478                           ; BSR set to: 0
 16479                           ;inputs_MC50.c: 387:         {;inputs_MC50.c: 389:             ts_system.timeSinalizatio
      +                          nDigit=(1000/50)*2;
 16480  00525E  0E00               	movlw	0
 16481  005260  0101               	movlb	1	; () banked
 16482  005262  6FA7               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16483  005264  0E28               	movlw	40
 16484  005266  6FA6               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16485                           
 16486                           ; BSR set to: 1
 16487                           ;inputs_MC50.c: 390:             SetSegmentValueIntermitentMain(dL,d5,( 200/50));
 16488  005268  0E05               	movlw	5
 16489  00526A  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16490  00526C  0E00               	movlw	0
 16491  00526E  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16492  005270  0E04               	movlw	4
 16493  005272  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16494  005274  0E12               	movlw	18
 16495  005276  EC70  F048         	call	_SetSegmentValueIntermitentMain
 16496                           
 16497                           ;inputs_MC50.c: 391:             if(var_sys_NVM.logicDigital==1)
 16498  00527A  0100               	movlb	0	; () banked
 16499  00527C  05A9               	decf	(_var_sys_NVM+17)& (0+255),w,b	;volatile
 16500  00527E  A4D8               	btfss	status,2,c
 16501  005280  D003               	goto	l20014
 16502                           
 16503                           ; BSR set to: 0
 16504                           ;inputs_MC50.c: 392:             {;inputs_MC50.c: 393:                  button_struct.pr
      +                          ocessed=1;
 16505  005282  0E01               	movlw	1
 16506  005284  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
 16507  005286  D7CB               	goto	l19966
 16508  005288                     l20014:
 16509                           
 16510                           ; BSR set to: 0
 16511                           ;inputs_MC50.c: 399:             {;inputs_MC50.c: 400:                  button_struct.pr
      +                          ocessed=1;
 16512  005288  0E01               	movlw	1
 16513  00528A  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
 16514                           
 16515                           ; BSR set to: 0
 16516                           ;inputs_MC50.c: 402:                 return TypeWalk;
 16517  00528C  0E02               	movlw	2
 16518  00528E  0012               	return	
 16519  005290                     l20020:
 16520                           
 16521                           ; BSR set to: 0
 16522  005290  0E36               	movlw	54
 16523  005292  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16524  005294  A4D8               	btfss	status,2,c
 16525  005296  D00F               	goto	l20034
 16526                           
 16527                           ; BSR set to: 0
 16528                           ;inputs_MC50.c: 408:         {;inputs_MC50.c: 409:             ts_system.timeSinalizatio
      +                          nDigit=(1000/50)*2;
 16529  005298  0E00               	movlw	0
 16530  00529A  0101               	movlb	1	; () banked
 16531  00529C  6FA7               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16532  00529E  0E28               	movlw	40
 16533  0052A0  6FA6               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16534                           
 16535                           ; BSR set to: 1
 16536                           ;inputs_MC50.c: 410:             SetSegmentValueIntermitentMain(dP,dU,( 200/50));
 16537  0052A2  0E13               	movlw	19
 16538  0052A4  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16539  0052A6  0E00               	movlw	0
 16540  0052A8  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16541  0052AA  0E04               	movlw	4
 16542  0052AC  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16543  0052AE  0E10               	movlw	16
 16544  0052B0  EC70  F048         	call	_SetSegmentValueIntermitentMain
 16545  0052B4  D7CC               	goto	l19992
 16546  0052B6                     l20034:
 16547                           
 16548                           ; BSR set to: 0
 16549                           ;inputs_MC50.c: 417:         {;inputs_MC50.c: 418:             if(rfCMD.currentType!=NoC
      +                          MD && rfCMD.currentType!=TypeProgrammingModeFull && rfCMD.currentType!=TypeProgrammingMo
      +                          deWalk )
 16550  0052B6  503B               	movf	_rfCMD^0,w,c	;volatile
 16551  0052B8  B4D8               	btfsc	status,2,c
 16552  0052BA  D023               	goto	l20046
 16553                           
 16554                           ; BSR set to: 0
 16555  0052BC  0E06               	movlw	6
 16556  0052BE  183B               	xorwf	_rfCMD^0,w,c	;volatile
 16557  0052C0  B4D8               	btfsc	status,2,c
 16558  0052C2  D01F               	goto	l20046
 16559                           
 16560                           ; BSR set to: 0
 16561  0052C4  0E05               	movlw	5
 16562  0052C6  183B               	xorwf	_rfCMD^0,w,c	;volatile
 16563  0052C8  B4D8               	btfsc	status,2,c
 16564  0052CA  D01B               	goto	l20046
 16565                           
 16566                           ; BSR set to: 0
 16567                           ;inputs_MC50.c: 419:             {;inputs_MC50.c: 420:                 SetSegmentValueIn
      +                          termitentMain(rfCMD.currentPosMem/10, rfCMD.currentPosMem-((rfCMD.currentPosMem/10)*10),
      +                          ( 200/50));
 16568  0052CC  0E0A               	movlw	10
 16569  0052CE  6E10               	movwf	___lbdiv@divisor^0,c
 16570  0052D0  5043               	movf	(_rfCMD+8)^0,w,c	;volatile
 16571  0052D2  ECE0  F044         	call	___lbdiv
 16572  0052D6  0DF6               	mullw	246
 16573  0052D8  50F3               	movf	243,w,c
 16574  0052DA  2443               	addwf	(_rfCMD+8)^0,w,c	;volatile
 16575  0052DC  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16576  0052DE  0E00               	movlw	0
 16577  0052E0  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16578  0052E2  0E04               	movlw	4
 16579  0052E4  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16580  0052E6  0E0A               	movlw	10
 16581  0052E8  6E10               	movwf	___lbdiv@divisor^0,c
 16582  0052EA  5043               	movf	(_rfCMD+8)^0,w,c	;volatile
 16583  0052EC  ECE0  F044         	call	___lbdiv
 16584  0052F0  EC70  F048         	call	_SetSegmentValueIntermitentMain
 16585                           
 16586                           ;inputs_MC50.c: 421:                 ts_system.timeSinalizationDigit=(1000/50)*2;
 16587  0052F4  0E00               	movlw	0
 16588  0052F6  0101               	movlb	1	; () banked
 16589  0052F8  6FA7               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16590  0052FA  0E28               	movlw	40
 16591  0052FC  6FA6               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16592                           
 16593                           ; BSR set to: 1
 16594                           ;inputs_MC50.c: 422:                 rfCMD.processed=1;
 16595  0052FE  0E01               	movlw	1
 16596  005300  6E45               	movwf	(_rfCMD+10)^0,c	;volatile
 16597  005302                     l20046:
 16598                           
 16599                           ;inputs_MC50.c: 425:             return rfCMD.currentType;
 16600  005302  503B               	movf	_rfCMD^0,w,c	;volatile
 16601  005304  0012               	return	
 16602  005306                     l20050:
 16603                           
 16604                           ; BSR set to: 1
 16605                           ;inputs_MC50.c: 428:     {;inputs_MC50.c: 429:        if(rfCMD.currentType!=NoCMD ){
 16606  005306  503B               	movf	_rfCMD^0,w,c	;volatile
 16607  005308  B4D8               	btfsc	status,2,c
 16608  00530A  D01B               	goto	l20058
 16609                           
 16610                           ; BSR set to: 1
 16611                           ;inputs_MC50.c: 430:                   SetSegmentValueIntermitentMain(rfCMD.currentPosMe
      +                          m/10, rfCMD.currentPosMem-((rfCMD.currentPosMem/10)*10),( 200/50));
 16612  00530C  0E0A               	movlw	10
 16613  00530E  6E10               	movwf	___lbdiv@divisor^0,c
 16614  005310  5043               	movf	(_rfCMD+8)^0,w,c	;volatile
 16615  005312  ECE0  F044         	call	___lbdiv
 16616  005316  0DF6               	mullw	246
 16617  005318  50F3               	movf	243,w,c
 16618  00531A  2443               	addwf	(_rfCMD+8)^0,w,c	;volatile
 16619  00531C  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16620  00531E  0E00               	movlw	0
 16621  005320  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16622  005322  0E04               	movlw	4
 16623  005324  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16624  005326  0E0A               	movlw	10
 16625  005328  6E10               	movwf	___lbdiv@divisor^0,c
 16626  00532A  5043               	movf	(_rfCMD+8)^0,w,c	;volatile
 16627  00532C  ECE0  F044         	call	___lbdiv
 16628  005330  EC70  F048         	call	_SetSegmentValueIntermitentMain
 16629                           
 16630                           ;inputs_MC50.c: 431:                 ts_system.timeSinalizationDigit=(1000/50)*1;
 16631  005334  0E00               	movlw	0
 16632  005336  0101               	movlb	1	; () banked
 16633  005338  6FA7               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16634  00533A  0E14               	movlw	20
 16635  00533C  6FA6               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16636                           
 16637                           ; BSR set to: 1
 16638                           ;inputs_MC50.c: 432:                 rfCMD.processed=1;
 16639  00533E  0E01               	movlw	1
 16640  005340  6E45               	movwf	(_rfCMD+10)^0,c	;volatile
 16641  005342                     l20058:
 16642                           
 16643                           ; BSR set to: 1
 16644                           ;inputs_MC50.c: 434:        return rfCMD.currentType;
 16645  005342  503B               	movf	_rfCMD^0,w,c	;volatile
 16646  005344  0012               	return		;funcret
 16647  005346                     __end_of_GetOpenOrder:
 16648                           	callstack 0
 16649                           
 16650 ;; *************** function ___lbdiv *****************
 16651 ;; Defined at:
 16652 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\lbdiv.c"
 16653 ;; Parameters:    Size  Location     Type
 16654 ;;  dividend        1    wreg     unsigned char 
 16655 ;;  divisor         1   15[COMRAM] unsigned char 
 16656 ;; Auto vars:     Size  Location     Type
 16657 ;;  dividend        1   16[COMRAM] unsigned char 
 16658 ;;  quotient        1   18[COMRAM] unsigned char 
 16659 ;;  counter         1   17[COMRAM] unsigned char 
 16660 ;; Return value:  Size  Location     Type
 16661 ;;                  1    wreg      unsigned char 
 16662 ;; Registers used:
 16663 ;;		wreg, status,2, status,0
 16664 ;; Tracked objects:
 16665 ;;		On entry : 0/0
 16666 ;;		On exit  : 0/0
 16667 ;;		Unchanged: 0/0
 16668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16669 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16670 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16672 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16673 ;;Total ram usage:        4 bytes
 16674 ;; Hardware stack levels used: 1
 16675 ;; Hardware stack levels required when called: 4
 16676 ;; This function calls:
 16677 ;;		Nothing
 16678 ;; This function is called by:
 16679 ;;		_GetOpenOrder
 16680 ;;		_sm_execute_menuConfiguration
 16681 ;; This function uses a non-reentrant model
 16682 ;;
 16683                           
 16684                           	psect	text54
 16685  0089C0                     __ptext54:
 16686                           	callstack 0
 16687  0089C0                     ___lbdiv:
 16688                           	callstack 24
 16689                           
 16690                           ;incstack = 0
 16691                           ;___lbdiv@dividend stored from wreg
 16692  0089C0  6E11               	movwf	___lbdiv@dividend^0,c
 16693  0089C2  0E00               	movlw	0
 16694  0089C4  6E13               	movwf	___lbdiv@quotient^0,c
 16695  0089C6  5010               	movf	___lbdiv@divisor^0,w,c
 16696  0089C8  B4D8               	btfsc	status,2,c
 16697  0089CA  D015               	goto	l19888
 16698  0089CC  0E01               	movlw	1
 16699  0089CE  6E12               	movwf	___lbdiv@counter^0,c
 16700  0089D0  D003               	goto	l19876
 16701  0089D2                     l19872:
 16702  0089D2  90D8               	bcf	status,0,c
 16703  0089D4  3610               	rlcf	___lbdiv@divisor^0,f,c
 16704  0089D6  2A12               	incf	___lbdiv@counter^0,f,c
 16705  0089D8                     l19876:
 16706  0089D8  AE10               	btfss	___lbdiv@divisor^0,7,c
 16707  0089DA  D7FB               	goto	l19872
 16708  0089DC                     u22800:
 16709  0089DC  90D8               	bcf	status,0,c
 16710  0089DE  3613               	rlcf	___lbdiv@quotient^0,f,c
 16711  0089E0  5010               	movf	___lbdiv@divisor^0,w,c
 16712  0089E2  5C11               	subwf	___lbdiv@dividend^0,w,c
 16713  0089E4  A0D8               	btfss	status,0,c
 16714  0089E6  D003               	goto	l19884
 16715  0089E8  5010               	movf	___lbdiv@divisor^0,w,c
 16716  0089EA  5E11               	subwf	___lbdiv@dividend^0,f,c
 16717  0089EC  8013               	bsf	___lbdiv@quotient^0,0,c
 16718  0089EE                     l19884:
 16719  0089EE  90D8               	bcf	status,0,c
 16720  0089F0  3210               	rrcf	___lbdiv@divisor^0,f,c
 16721  0089F2  2E12               	decfsz	___lbdiv@counter^0,f,c
 16722  0089F4  D7F3               	goto	u22800
 16723  0089F6                     l19888:
 16724  0089F6  5013               	movf	___lbdiv@quotient^0,w,c
 16725  0089F8  0012               	return		;funcret
 16726  0089FA                     __end_of___lbdiv:
 16727                           	callstack 0
 16728                           
 16729 ;; *************** function _SetSegmentValueIntermitentMain *****************
 16730 ;; Defined at:
 16731 ;;		line 193 in file "outputs_MC50.c"
 16732 ;; Parameters:    Size  Location     Type
 16733 ;;  d1              1    wreg     unsigned char 
 16734 ;;  d2              1   27[COMRAM] unsigned char 
 16735 ;;  time            2   28[COMRAM] int 
 16736 ;; Auto vars:     Size  Location     Type
 16737 ;;  d1              1   30[COMRAM] unsigned char 
 16738 ;; Return value:  Size  Location     Type
 16739 ;;                  1    wreg      void 
 16740 ;; Registers used:
 16741 ;;		wreg
 16742 ;; Tracked objects:
 16743 ;;		On entry : 0/1
 16744 ;;		On exit  : 0/0
 16745 ;;		Unchanged: 0/0
 16746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16747 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16748 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16749 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16750 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16751 ;;Total ram usage:        4 bytes
 16752 ;; Hardware stack levels used: 1
 16753 ;; Hardware stack levels required when called: 4
 16754 ;; This function calls:
 16755 ;;		Nothing
 16756 ;; This function is called by:
 16757 ;;		_GetOpenOrder
 16758 ;;		_sm_execute_main
 16759 ;;		_sm_execute_menuConfiguration
 16760 ;;		_load_New_Menu
 16761 ;;		_controlSelectRemote
 16762 ;;		_controlSaveRemote
 16763 ;; This function uses a non-reentrant model
 16764 ;;
 16765                           
 16766                           	psect	text55
 16767  0090E0                     __ptext55:
 16768                           	callstack 0
 16769  0090E0                     _SetSegmentValueIntermitentMain:
 16770                           	callstack 22
 16771                           
 16772                           ;incstack = 0
 16773                           ;SetSegmentValueIntermitentMain@d1 stored from wreg
 16774  0090E0  6E1F               	movwf	SetSegmentValueIntermitentMain@d1^0,c
 16775                           
 16776                           ;outputs_MC50.c: 193: void SetSegmentValueIntermitentMain(char d1, char d2,int time);out
      +                          puts_MC50.c: 194: {;outputs_MC50.c: 195:     dispStruct.display_grp.value_display1=d1;
 16777  0090E2  C01F  F072         	movff	SetSegmentValueIntermitentMain@d1,_dispStruct	;volatile
 16778                           
 16779                           ;outputs_MC50.c: 196:     dispStruct.display_grp.value_display2=d2;
 16780  0090E6  C01C  F073         	movff	SetSegmentValueIntermitentMain@d2,_dispStruct+1	;volatile
 16781                           
 16782                           ;outputs_MC50.c: 197:     dispStruct.intermitentFreq=time;
 16783  0090EA  C01D  F075         	movff	SetSegmentValueIntermitentMain@time,_dispStruct+3	;volatile
 16784  0090EE  C01E  F076         	movff	SetSegmentValueIntermitentMain@time+1,_dispStruct+4	;volatile
 16785  0090F2  0012               	return		;funcret
 16786  0090F4                     __end_of_SetSegmentValueIntermitentMain:
 16787                           	callstack 0
 16788                           
 16789 ;; *************** function _readbutton *****************
 16790 ;; Defined at:
 16791 ;;		line 471 in file "inputs_MC50.c"
 16792 ;; Parameters:    Size  Location     Type
 16793 ;;		None
 16794 ;; Auto vars:     Size  Location     Type
 16795 ;;		None
 16796 ;; Return value:  Size  Location     Type
 16797 ;;                  1    wreg      void 
 16798 ;; Registers used:
 16799 ;;		wreg, status,2, status,0
 16800 ;; Tracked objects:
 16801 ;;		On entry : 3F/1
 16802 ;;		On exit  : 3F/1
 16803 ;;		Unchanged: 0/0
 16804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16805 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16806 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16807 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16808 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16809 ;;Total ram usage:        0 bytes
 16810 ;; Hardware stack levels used: 1
 16811 ;; Hardware stack levels required when called: 4
 16812 ;; This function calls:
 16813 ;;		Nothing
 16814 ;; This function is called by:
 16815 ;;		_main
 16816 ;; This function uses a non-reentrant model
 16817 ;;
 16818                           
 16819                           	psect	text56
 16820  00803E                     __ptext56:
 16821                           	callstack 0
 16822  00803E                     _readbutton:
 16823                           	callstack 26
 16824                           
 16825                           ; BSR set to: 1
 16826                           ;inputs_MC50.c: 474:  static unsigned char key1=0, key2=0;;inputs_MC50.c: 479:  key2 = (
      +                           PORTB & 0x37 );
 16827                           
 16828                           ;incstack = 0
 16829  00803E  508E               	movf	142,w,c	;volatile
 16830  008040  0B37               	andlw	55
 16831  008042  6F96               	movwf	readbutton@key2& (0+255),b
 16832  008044  F000               	nop		;# 
 16833  008046  F000               	nop		;# 
 16834  008048  F000               	nop		;# 
 16835                           
 16836                           ;inputs_MC50.c: 483:  key1 = ( PORTB & 0x37 );
 16837  00804A  508E               	movf	142,w,c	;volatile
 16838  00804C  0B37               	andlw	55
 16839  00804E  0100               	movlb	0	; () banked
 16840  008050  6F86               	movwf	readbutton@key1& (0+255),b
 16841                           
 16842                           ;inputs_MC50.c: 485:  if ( key2 == key1 )
 16843  008052  5186               	movf	readbutton@key1& (0+255),w,b
 16844  008054  0101               	movlb	1	; () banked
 16845  008056  1996               	xorwf	readbutton@key2& (0+255),w,b
 16846  008058  A4D8               	btfss	status,2,c
 16847  00805A  D003               	goto	l16568
 16848                           
 16849                           ; BSR set to: 1
 16850                           ;inputs_MC50.c: 486:  {;inputs_MC50.c: 487:         button_struct.current = key1;
 16851  00805C  C086  F04D         	movff	readbutton@key1,_button_struct+1	;volatile
 16852                           
 16853                           ;inputs_MC50.c: 488:  }
 16854  008060  D002               	goto	l16570
 16855  008062                     l16568:
 16856                           
 16857                           ; BSR set to: 1
 16858                           ;inputs_MC50.c: 490:     {;inputs_MC50.c: 491:         button_struct.current = 0x37;
 16859  008062  0E37               	movlw	55
 16860  008064  6E4D               	movwf	(_button_struct+1)^0,c	;volatile
 16861  008066                     l16570:
 16862                           
 16863                           ; BSR set to: 1
 16864                           ;inputs_MC50.c: 494:     if ( button_struct.current == 0x37 || ( button_struct.current !
      +                          = button_struct.old && button_struct.current == 0x00))
 16865  008066  0E37               	movlw	55
 16866  008068  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16867  00806A  B4D8               	btfsc	status,2,c
 16868  00806C  D007               	goto	u19040
 16869                           
 16870                           ; BSR set to: 1
 16871  00806E  504C               	movf	_button_struct^0,w,c	;volatile
 16872  008070  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16873  008072  B4D8               	btfsc	status,2,c
 16874  008074  D007               	goto	l16578
 16875                           
 16876                           ; BSR set to: 1
 16877  008076  504D               	movf	(_button_struct+1)^0,w,c	;volatile
 16878  008078  A4D8               	btfss	status,2,c
 16879  00807A  D004               	goto	l16578
 16880  00807C                     u19040:
 16881                           
 16882                           ; BSR set to: 1
 16883                           ;inputs_MC50.c: 495:  {;inputs_MC50.c: 496:   button_struct.processed=0;
 16884  00807C  0E00               	movlw	0
 16885  00807E  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
 16886                           
 16887                           ;inputs_MC50.c: 497:         button_struct.timer=0;
 16888  008080  0E00               	movlw	0
 16889  008082  6E4E               	movwf	(_button_struct+2)^0,c	;volatile
 16890  008084                     l16578:
 16891                           
 16892                           ; BSR set to: 1
 16893                           ;inputs_MC50.c: 500:  if ( button_struct.current != 0x37 )
 16894  008084  0E37               	movlw	55
 16895  008086  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16896  008088  B4D8               	btfsc	status,2,c
 16897  00808A  D007               	goto	l16586
 16898                           
 16899                           ; BSR set to: 1
 16900                           ;inputs_MC50.c: 501:  {;inputs_MC50.c: 502:   button_struct.old = button_struct.current;
 16901  00808C  C04D  F04C         	movff	_button_struct+1,_button_struct	;volatile
 16902                           
 16903                           ; BSR set to: 1
 16904                           ;inputs_MC50.c: 504:         if ( button_struct.timer < 250 )
 16905  008090  0EFA               	movlw	250
 16906  008092  604E               	cpfslt	(_button_struct+2)^0,c	;volatile
 16907  008094  D004               	goto	l16588
 16908                           
 16909                           ; BSR set to: 1
 16910                           ;inputs_MC50.c: 505:         {;inputs_MC50.c: 506:             button_struct.timer++;
 16911  008096  2A4E               	incf	(_button_struct+2)^0,f,c	;volatile
 16912  008098  D002               	goto	l16588
 16913  00809A                     l16586:
 16914                           
 16915                           ; BSR set to: 1
 16916                           ;inputs_MC50.c: 515:  {;inputs_MC50.c: 516:   button_struct.timer=0;
 16917  00809A  0E00               	movlw	0
 16918  00809C  6E4E               	movwf	(_button_struct+2)^0,c	;volatile
 16919  00809E                     l16588:
 16920                           
 16921                           ; BSR set to: 1
 16922                           ;inputs_MC50.c: 520:  if ( button_struct.processed == 1 )
 16923  00809E  044F               	decf	(_button_struct+3)^0,w,c	;volatile
 16924  0080A0  A4D8               	btfss	status,2,c
 16925  0080A2  0012               	return	
 16926                           
 16927                           ; BSR set to: 1
 16928                           ;inputs_MC50.c: 521:  {;inputs_MC50.c: 522:   button_struct.current = 0x37;
 16929  0080A4  0E37               	movlw	55
 16930  0080A6  6E4D               	movwf	(_button_struct+1)^0,c	;volatile
 16931                           
 16932                           ; BSR set to: 1
 16933  0080A8  0012               	return		;funcret
 16934  0080AA                     __end_of_readbutton:
 16935                           	callstack 0
 16936                           
 16937 ;; *************** function _read_package *****************
 16938 ;; Defined at:
 16939 ;;		line 21 in file "eusartpackage.c"
 16940 ;; Parameters:    Size  Location     Type
 16941 ;;		None
 16942 ;; Auto vars:     Size  Location     Type
 16943 ;;  package         7   23[COMRAM] struct package_t
 16944 ;; Return value:  Size  Location     Type
 16945 ;;                  7   16[COMRAM] struct package_t
 16946 ;; Registers used:
 16947 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, cstack
 16948 ;; Tracked objects:
 16949 ;;		On entry : 3F/0
 16950 ;;		On exit  : 3F/E
 16951 ;;		Unchanged: 0/0
 16952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16953 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16954 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16956 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16957 ;;Total ram usage:       14 bytes
 16958 ;; Hardware stack levels used: 1
 16959 ;; Hardware stack levels required when called: 5
 16960 ;; This function calls:
 16961 ;;		_EUSART1_Read
 16962 ;; This function is called by:
 16963 ;;		_main
 16964 ;; This function uses a non-reentrant model
 16965 ;;
 16966                           
 16967                           	psect	text57
 16968  0085A6                     __ptext57:
 16969                           	callstack 0
 16970  0085A6                     _read_package:
 16971                           	callstack 25
 16972                           
 16973                           ; BSR set to: 0
 16974                           ;eusartpackage.c: 22:         struct package_t package;;eusartpackage.c: 24:         if(
      +                          EUSART1_Read()!=0x0A){
 16975                           
 16976                           ; BSR set to: 1
 16977                           ;incstack = 0
 16978  0085A6  EC96  F043         	call	_EUSART1_Read	;wreg free
 16979  0085AA  0A0A               	xorlw	10
 16980  0085AC  B4D8               	btfsc	status,2,c
 16981  0085AE  D00C               	goto	l16746
 16982  0085B0                     u19570:
 16983                           
 16984                           ; BSR set to: 14
 16985                           ;eusartpackage.c: 25:             package.valid=0;
 16986  0085B0  0E00               	movlw	0
 16987  0085B2  6E1E               	movwf	(read_package@package+6)^0,c
 16988                           
 16989                           ; BSR set to: 14
 16990                           ;eusartpackage.c: 26:             return package;
 16991  0085B4  EE20  F018         	lfsr	2,read_package@package
 16992  0085B8  EE00  F011         	lfsr	0,?_read_package
 16993  0085BC  0E06               	movlw	6
 16994  0085BE                     u19581:
 16995  0085BE  CFDB FFEB          	movff	plusw2,plusw0
 16996  0085C2  06E8               	decf	wreg,f,c
 16997  0085C4  E2FC               	bc	u19581
 16998  0085C6  0012               	return	
 16999  0085C8                     l16746:
 17000                           
 17001                           ; BSR set to: 14
 17002                           ;eusartpackage.c: 29:             package.startbyte=0x0A;
 17003  0085C8  0E0A               	movlw	10
 17004  0085CA  6E1C               	movwf	(read_package@package+4)^0,c
 17005                           
 17006                           ; BSR set to: 14
 17007                           ;eusartpackage.c: 32:         package.functioncode=EUSART1_Read();
 17008  0085CC  EC96  F043         	call	_EUSART1_Read	;wreg free
 17009  0085D0  6E18               	movwf	read_package@package^0,c
 17010                           
 17011                           ; BSR set to: 14
 17012                           ;eusartpackage.c: 33:         package.address=EUSART1_Read();
 17013  0085D2  EC96  F043         	call	_EUSART1_Read	;wreg free
 17014  0085D6  6E19               	movwf	(read_package@package+1)^0,c
 17015                           
 17016                           ; BSR set to: 14
 17017                           ;eusartpackage.c: 34:         package.data.data8[0]=EUSART1_Read();
 17018  0085D8  EC96  F043         	call	_EUSART1_Read	;wreg free
 17019  0085DC  6E1A               	movwf	(read_package@package+2)^0,c
 17020                           
 17021                           ; BSR set to: 14
 17022                           ;eusartpackage.c: 35:         package.data.data8[1]=EUSART1_Read();
 17023  0085DE  EC96  F043         	call	_EUSART1_Read	;wreg free
 17024  0085E2  6E1B               	movwf	(read_package@package+3)^0,c
 17025                           
 17026                           ; BSR set to: 14
 17027                           ;eusartpackage.c: 38:         if(EUSART1_Read()!=0x0D){
 17028  0085E4  EC96  F043         	call	_EUSART1_Read	;wreg free
 17029  0085E8  0A0D               	xorlw	13
 17030  0085EA  A4D8               	btfss	status,2,c
 17031  0085EC  D7E1               	goto	u19570
 17032                           
 17033                           ; BSR set to: 14
 17034                           ;eusartpackage.c: 43:             package.endbyte=0x0D;
 17035  0085EE  0E0D               	movlw	13
 17036  0085F0  6E1D               	movwf	(read_package@package+5)^0,c
 17037                           
 17038                           ; BSR set to: 14
 17039                           ;eusartpackage.c: 46:         package.valid=1;
 17040  0085F2  0E01               	movlw	1
 17041  0085F4  D7DE               	goto	L76
 17042  0085F6                     __end_of_read_package:
 17043                           	callstack 0
 17044                           
 17045 ;; *************** function _EUSART1_Read *****************
 17046 ;; Defined at:
 17047 ;;		line 151 in file "mcc_generated_files/eusart1.c"
 17048 ;; Parameters:    Size  Location     Type
 17049 ;;		None
 17050 ;; Auto vars:     Size  Location     Type
 17051 ;;  readValue       1   15[COMRAM] unsigned char 
 17052 ;; Return value:  Size  Location     Type
 17053 ;;                  1    wreg      unsigned char 
 17054 ;; Registers used:
 17055 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17056 ;; Tracked objects:
 17057 ;;		On entry : 31/0
 17058 ;;		On exit  : 3F/E
 17059 ;;		Unchanged: 0/0
 17060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17061 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17062 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17063 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17064 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17065 ;;Total ram usage:        1 bytes
 17066 ;; Hardware stack levels used: 1
 17067 ;; Hardware stack levels required when called: 4
 17068 ;; This function calls:
 17069 ;;		Nothing
 17070 ;; This function is called by:
 17071 ;;		_read_package
 17072 ;; This function uses a non-reentrant model
 17073 ;;
 17074                           
 17075                           	psect	text58
 17076  00872C                     __ptext58:
 17077                           	callstack 0
 17078  00872C                     _EUSART1_Read:
 17079                           	callstack 25
 17080                           
 17081                           ;mcc_generated_files/eusart1.c: 155:     while(0 == eusart1RxCount)
 17082                           
 17083                           ;mcc_generated_files/eusart1.c: 155:     while(0 == eusart1RxCount)
 17084                           
 17085                           ; BSR set to: 14
 17086                           ;incstack = 0
 17087  00872C  0100               	movlb	0	; () banked
 17088  00872E  5193               	movf	_eusart1RxCount& (0+255),w,b	;volatile
 17089  008730  B4D8               	btfsc	status,2,c
 17090  008732  D7FC               	goto	__ptext58
 17091                           
 17092                           ; BSR set to: 0
 17093                           ;mcc_generated_files/eusart1.c: 159:     eusart1RxLastError = eusart1RxStatusBuffer[eusa
      +                          rt1RxTail];
 17094  008734  0E74               	movlw	low _eusart1RxStatusBuffer
 17095  008736  2594               	addwf	_eusart1RxTail& (0+255),w,b	;volatile
 17096  008738  6ED9               	movwf	fsr2l,c
 17097  00873A  6ADA               	clrf	fsr2h,c
 17098  00873C  0E02               	movlw	high _eusart1RxStatusBuffer
 17099  00873E  22DA               	addwfc	fsr2h,f,c
 17100  008740  50DF               	movf	indf2,w,c
 17101  008742  0101               	movlb	1	; () banked
 17102  008744  6F99               	movwf	_eusart1RxLastError& (0+255),b	;volatile
 17103                           
 17104                           ;mcc_generated_files/eusart1.c: 161:     readValue = eusart1RxBuffer[eusart1RxTail++];
 17105  008746  0E7C               	movlw	low _eusart1RxBuffer
 17106  008748  0100               	movlb	0	; () banked
 17107  00874A  2594               	addwf	_eusart1RxTail& (0+255),w,b	;volatile
 17108  00874C  6ED9               	movwf	fsr2l,c
 17109  00874E  6ADA               	clrf	fsr2h,c
 17110  008750  0E02               	movlw	high _eusart1RxBuffer
 17111  008752  22DA               	addwfc	fsr2h,f,c
 17112  008754  50DF               	movf	indf2,w,c
 17113  008756  6E10               	movwf	EUSART1_Read@readValue^0,c
 17114                           
 17115                           ; BSR set to: 0
 17116  008758  2B94               	incf	_eusart1RxTail& (0+255),f,b	;volatile
 17117                           
 17118                           ; BSR set to: 0
 17119                           ;mcc_generated_files/eusart1.c: 162:     if(sizeof(eusart1RxBuffer) <= eusart1RxTail)
 17120  00875A  0E07               	movlw	7
 17121  00875C  6594               	cpfsgt	_eusart1RxTail& (0+255),b
 17122  00875E  D002               	goto	l13982
 17123                           
 17124                           ; BSR set to: 0
 17125                           ;mcc_generated_files/eusart1.c: 163:     {;mcc_generated_files/eusart1.c: 164:         e
      +                          usart1RxTail = 0;
 17126  008760  0E00               	movlw	0
 17127  008762  6F94               	movwf	_eusart1RxTail& (0+255),b	;volatile
 17128  008764                     l13982:
 17129                           
 17130                           ; BSR set to: 0
 17131                           ;mcc_generated_files/eusart1.c: 166:     PIE3bits.RC1IE = 0;
 17132  008764  010E               	movlb	14	; () banked
 17133  008766  9BC5               	bcf	197,5,b	;volatile
 17134                           
 17135                           ; BSR set to: 14
 17136                           ;mcc_generated_files/eusart1.c: 167:     eusart1RxCount--;
 17137  008768  0100               	movlb	0	; () banked
 17138  00876A  0793               	decf	_eusart1RxCount& (0+255),f,b	;volatile
 17139                           
 17140                           ; BSR set to: 0
 17141                           ;mcc_generated_files/eusart1.c: 168:     PIE3bits.RC1IE = 1;
 17142  00876C  010E               	movlb	14	; () banked
 17143  00876E  8BC5               	bsf	197,5,b	;volatile
 17144                           
 17145                           ; BSR set to: 14
 17146                           ;mcc_generated_files/eusart1.c: 170:     return readValue;
 17147  008770  5010               	movf	EUSART1_Read@readValue^0,w,c
 17148                           
 17149                           ; BSR set to: 14
 17150  008772  0012               	return		;funcret
 17151  008774                     __end_of_EUSART1_Read:
 17152                           	callstack 0
 17153                           
 17154 ;; *************** function _readRFButtons *****************
 17155 ;; Defined at:
 17156 ;;		line 231 in file "inputs_MC50.c"
 17157 ;; Parameters:    Size  Location     Type
 17158 ;;		None
 17159 ;; Auto vars:     Size  Location     Type
 17160 ;;		None
 17161 ;; Return value:  Size  Location     Type
 17162 ;;                  1    wreg      void 
 17163 ;; Registers used:
 17164 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 17165 ;; Tracked objects:
 17166 ;;		On entry : 3F/1
 17167 ;;		On exit  : 3E/0
 17168 ;;		Unchanged: 0/0
 17169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17170 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17171 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17173 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17174 ;;Total ram usage:        0 bytes
 17175 ;; Hardware stack levels used: 1
 17176 ;; Hardware stack levels required when called: 15
 17177 ;; This function calls:
 17178 ;;		_DecryptPacket_12BIT
 17179 ;;		_keeloqDecryptPacket
 17180 ;; This function is called by:
 17181 ;;		_main
 17182 ;; This function uses a non-reentrant model
 17183 ;;
 17184                           
 17185                           	psect	text59
 17186  0059B6                     __ptext59:
 17187                           	callstack 0
 17188  0059B6                     _readRFButtons:
 17189                           	callstack 15
 17190                           
 17191                           ; BSR set to: 1
 17192                           ;inputs_MC50.c: 232:     static unsigned char key1 = 0;;inputs_MC50.c: 233:     static u
      +                          int32_t serial = 0;;inputs_MC50.c: 234:     static uint16_t rollingCode= 0;;inputs_MC50.
      +                          c: 235:     static TypeCMD keyType = 0;;inputs_MC50.c: 236:     static TypeRemote_st typ
      +                          eRemote;;inputs_MC50.c: 241:     if(RFFull)
 17193                           
 17194                           ; BSR set to: 14
 17195                           ;incstack = 0
 17196  0059B6  0100               	movlb	0	; () banked
 17197  0059B8  518B               	movf	_RFFull& (0+255),w,b	;volatile
 17198  0059BA  B4D8               	btfsc	status,2,c
 17199  0059BC  D0B9               	goto	l22720
 17200                           
 17201                           ; BSR set to: 0
 17202                           ;inputs_MC50.c: 242:     {;inputs_MC50.c: 244:          if(RFFull_12BIT==0)
 17203  0059BE  518A               	movf	_RFFull_12BIT& (0+255),w,b	;volatile
 17204  0059C0  A4D8               	btfss	status,2,c
 17205  0059C2  D00B               	goto	l22666
 17206                           
 17207                           ; BSR set to: 0
 17208                           ;inputs_MC50.c: 245:          {;inputs_MC50.c: 246:             keyType = keeloqDecryptP
      +                          acket(BufferRF,&classic_data);
 17209  0059C4  0EC8               	movlw	low _BufferRF
 17210  0059C6  6FE0               	movwf	keeloqDecryptPacket@data& (0+255),b
 17211  0059C8  0E02               	movlw	high _BufferRF
 17212  0059CA  6FE1               	movwf	(keeloqDecryptPacket@data+1)& (0+255),b
 17213  0059CC  0E92               	movlw	low _classic_data
 17214  0059CE  6FE2               	movwf	keeloqDecryptPacket@classic_data& (0+255),b
 17215  0059D0  0E02               	movlw	high _classic_data
 17216  0059D2  6FE3               	movwf	(keeloqDecryptPacket@classic_data+1)& (0+255),b
 17217  0059D4  ECD6  F027         	call	_keeloqDecryptPacket	;wreg free
 17218  0059D8  D00A               	goto	L77
 17219  0059DA                     l22666:
 17220                           
 17221                           ; BSR set to: 0
 17222                           ;inputs_MC50.c: 249:          {;inputs_MC50.c: 250:             keyType = DecryptPacket_
      +                          12BIT(BufferRF,&classic_data);
 17223  0059DA  0EC8               	movlw	low _BufferRF
 17224  0059DC  6FE0               	movwf	DecryptPacket_12BIT@data& (0+255),b
 17225  0059DE  0E02               	movlw	high _BufferRF
 17226  0059E0  6FE1               	movwf	(DecryptPacket_12BIT@data+1)& (0+255),b
 17227  0059E2  0E92               	movlw	low _classic_data
 17228  0059E4  6FE2               	movwf	DecryptPacket_12BIT@classic_data& (0+255),b
 17229  0059E6  0E02               	movlw	high _classic_data
 17230  0059E8  6FE3               	movwf	(DecryptPacket_12BIT@classic_data+1)& (0+255),b
 17231  0059EA  EC3B  F03B         	call	_DecryptPacket_12BIT	;wreg free
 17232  0059EE                     L77:
 17233  0059EE  6F87               	movwf	readRFButtons@keyType& (0+255),b
 17234                           
 17235                           ; BSR set to: 0
 17236                           ;inputs_MC50.c: 254:         key1 = classic_data.fcode1;
 17237  0059F0  C29E  F088         	movff	_classic_data+12,readRFButtons@key1
 17238                           
 17239                           ; BSR set to: 0
 17240                           ;inputs_MC50.c: 255:         serial = classic_data.serialnumber;
 17241  0059F4  C296  F181         	movff	_classic_data+4,readRFButtons@serial
 17242  0059F8  C297  F182         	movff	_classic_data+5,readRFButtons@serial+1
 17243  0059FC  C298  F183         	movff	_classic_data+6,readRFButtons@serial+2
 17244  005A00  C299  F184         	movff	_classic_data+7,readRFButtons@serial+3
 17245                           
 17246                           ; BSR set to: 0
 17247                           ;inputs_MC50.c: 256:         rollingCode = classic_data.sync;
 17248  005A04  C29A  F185         	movff	_classic_data+8,readRFButtons@rollingCode
 17249  005A08  C29B  F186         	movff	_classic_data+9,readRFButtons@rollingCode+1
 17250                           
 17251                           ; BSR set to: 0
 17252                           ;inputs_MC50.c: 257:         typeRemote = classic_data.type;
 17253  005A0C  C2A0  F197         	movff	_classic_data+14,readRFButtons@typeRemote
 17254                           
 17255                           ; BSR set to: 0
 17256                           ;inputs_MC50.c: 270:         if (var_sys.LearningIsEnabled == YES){
 17257  005A10  0101               	movlb	1	; () banked
 17258  005A12  0526               	decf	(_var_sys+38)& (0+255),w,b	;volatile
 17259  005A14  A4D8               	btfss	status,2,c
 17260  005A16  D01E               	goto	l22688
 17261                           
 17262                           ; BSR set to: 1
 17263                           ;inputs_MC50.c: 272:              if (keyType==NoCMD || rfCMD.currentKey!=key1 || rfCMD.
      +                          currentSerial!=serial || keyType!=rfCMD.currentType)
 17264  005A18  0100               	movlb	0	; () banked
 17265  005A1A  5187               	movf	readRFButtons@keyType& (0+255),w,b
 17266  005A1C  B4D8               	btfsc	status,2,c
 17267  005A1E  D044               	goto	u27620
 17268                           
 17269                           ; BSR set to: 0
 17270  005A20  5188               	movf	readRFButtons@key1& (0+255),w,b
 17271  005A22  183C               	xorwf	(_rfCMD+1)^0,w,c	;volatile
 17272  005A24  A4D8               	btfss	status,2,c
 17273  005A26  D040               	goto	u27620
 17274                           
 17275                           ; BSR set to: 0
 17276  005A28  0101               	movlb	1	; () banked
 17277  005A2A  5181               	movf	readRFButtons@serial& (0+255),w,b
 17278  005A2C  183D               	xorwf	(_rfCMD+2)^0,w,c	;volatile
 17279  005A2E  E13C               	bnz	l22700
 17280  005A30  5182               	movf	(readRFButtons@serial+1)& (0+255),w,b
 17281  005A32  183E               	xorwf	(_rfCMD+3)^0,w,c	;volatile
 17282  005A34  E139               	bnz	l22700
 17283  005A36  5183               	movf	(readRFButtons@serial+2)& (0+255),w,b
 17284  005A38  183F               	xorwf	(_rfCMD+4)^0,w,c	;volatile
 17285  005A3A  E136               	bnz	l22700
 17286  005A3C  5184               	movf	(readRFButtons@serial+3)& (0+255),w,b
 17287  005A3E  1840               	xorwf	(_rfCMD+5)^0,w,c	;volatile
 17288  005A40  A4D8               	btfss	status,2,c
 17289  005A42  D032               	goto	u27620
 17290                           
 17291                           ; BSR set to: 1
 17292  005A44  0100               	movlb	0	; () banked
 17293  005A46  5187               	movf	readRFButtons@keyType& (0+255),w,b
 17294  005A48  183B               	xorwf	_rfCMD^0,w,c	;volatile
 17295  005A4A  A4D8               	btfss	status,2,c
 17296  005A4C  D02D               	goto	u27620
 17297  005A4E                     l1649:
 17298                           
 17299                           ;inputs_MC50.c: 274:                 rfCMD.timer=0;
 17300  005A4E  0E00               	movlw	0
 17301  005A50  6E44               	movwf	(_rfCMD+9)^0,c	;volatile
 17302                           
 17303                           ;inputs_MC50.c: 275:         }
 17304  005A52  D038               	goto	l1652
 17305  005A54                     l22688:
 17306                           
 17307                           ; BSR set to: 1
 17308  005A54  0100               	movlb	0	; () banked
 17309  005A56  5187               	movf	readRFButtons@keyType& (0+255),w,b
 17310  005A58  B4D8               	btfsc	status,2,c
 17311  005A5A  D026               	goto	u27620
 17312                           
 17313                           ; BSR set to: 0
 17314  005A5C  5187               	movf	readRFButtons@keyType& (0+255),w,b
 17315  005A5E  183B               	xorwf	_rfCMD^0,w,c	;volatile
 17316  005A60  B4D8               	btfsc	status,2,c
 17317  005A62  D00F               	goto	u27600
 17318                           
 17319                           ; BSR set to: 0
 17320  005A64  0101               	movlb	1	; () banked
 17321  005A66  BFAF               	btfsc	(_ts_system+21)& (0+255),7,b	;volatile
 17322  005A68  D005               	goto	u27590
 17323  005A6A  51AF               	movf	(_ts_system+21)& (0+255),w,b	;volatile
 17324  005A6C  E10A               	bnz	l22696
 17325  005A6E  05AE               	decf	(_ts_system+20)& (0+255),w,b	;volatile
 17326  005A70  B0D8               	btfsc	status,0,c
 17327  005A72  D007               	goto	u27600
 17328  005A74                     u27590:
 17329                           
 17330                           ; BSR set to: 1
 17331  005A74  5185               	movf	readRFButtons@rollingCode& (0+255),w,b
 17332  005A76  1841               	xorwf	(_rfCMD+6)^0,w,c	;volatile
 17333  005A78  E117               	bnz	l22700
 17334  005A7A  5186               	movf	(readRFButtons@rollingCode+1)& (0+255),w,b
 17335  005A7C  1842               	xorwf	(_rfCMD+7)^0,w,c	;volatile
 17336  005A7E  A4D8               	btfss	status,2,c
 17337  005A80  D013               	goto	u27620
 17338  005A82                     u27600:
 17339  005A82                     l22696:
 17340  005A82  0100               	movlb	0	; () banked
 17341  005A84  5188               	movf	readRFButtons@key1& (0+255),w,b
 17342  005A86  183C               	xorwf	(_rfCMD+1)^0,w,c	;volatile
 17343  005A88  A4D8               	btfss	status,2,c
 17344  005A8A  D00E               	goto	u27620
 17345                           
 17346                           ; BSR set to: 0
 17347  005A8C  0101               	movlb	1	; () banked
 17348  005A8E  5181               	movf	readRFButtons@serial& (0+255),w,b
 17349  005A90  183D               	xorwf	(_rfCMD+2)^0,w,c	;volatile
 17350  005A92  E10A               	bnz	u27620
 17351  005A94  5182               	movf	(readRFButtons@serial+1)& (0+255),w,b
 17352  005A96  183E               	xorwf	(_rfCMD+3)^0,w,c	;volatile
 17353  005A98  E107               	bnz	u27620
 17354  005A9A  5183               	movf	(readRFButtons@serial+2)& (0+255),w,b
 17355  005A9C  183F               	xorwf	(_rfCMD+4)^0,w,c	;volatile
 17356  005A9E  E104               	bnz	u27620
 17357  005AA0  5184               	movf	(readRFButtons@serial+3)& (0+255),w,b
 17358  005AA2  1840               	xorwf	(_rfCMD+5)^0,w,c	;volatile
 17359  005AA4  B4D8               	btfsc	status,2,c
 17360  005AA6  D003               	goto	l22702
 17361  005AA8                     u27620:
 17362  005AA8                     l22700:
 17363                           
 17364                           ;inputs_MC50.c: 278:         {;inputs_MC50.c: 279:            rfCMD.processed=0;
 17365  005AA8  0E00               	movlw	0
 17366  005AAA  6E45               	movwf	(_rfCMD+10)^0,c	;volatile
 17367  005AAC  D7D0               	goto	l1649
 17368  005AAE                     l22702:
 17369                           
 17370                           ; BSR set to: 1
 17371  005AAE  BFAF               	btfsc	(_ts_system+21)& (0+255),7,b	;volatile
 17372  005AB0  D005               	goto	u27630
 17373  005AB2  51AF               	movf	(_ts_system+21)& (0+255),w,b	;volatile
 17374  005AB4  E107               	bnz	l1652
 17375  005AB6  05AE               	decf	(_ts_system+20)& (0+255),w,b	;volatile
 17376  005AB8  B0D8               	btfsc	status,0,c
 17377  005ABA  D004               	goto	l1652
 17378  005ABC                     u27630:
 17379                           
 17380                           ; BSR set to: 1
 17381  005ABC  0E02               	movlw	2
 17382  005ABE  1997               	xorwf	readRFButtons@typeRemote& (0+255),w,b
 17383  005AC0  B4D8               	btfsc	status,2,c
 17384  005AC2  D7F2               	goto	u27620
 17385  005AC4                     l1652:
 17386                           
 17387                           ;inputs_MC50.c: 289:         ts_system.TimeLastCommand=( 500/50);
 17388  005AC4  0E00               	movlw	0
 17389  005AC6  0101               	movlb	1	; () banked
 17390  005AC8  6FAF               	movwf	(_ts_system+21)& (0+255),b	;volatile
 17391  005ACA  0E0A               	movlw	10
 17392  005ACC  6FAE               	movwf	(_ts_system+20)& (0+255),b	;volatile
 17393                           
 17394                           ; BSR set to: 1
 17395                           ;inputs_MC50.c: 291:         rfCMD.currentType=keyType;
 17396  005ACE  C087  F03B         	movff	readRFButtons@keyType,_rfCMD	;volatile
 17397                           
 17398                           ;inputs_MC50.c: 292:         if
 17399  005AD2  503B               	movf	_rfCMD^0,w,c	;volatile
 17400  005AD4  B4D8               	btfsc	status,2,c
 17401  005AD6  D01A               	goto	u27680
 17402                           
 17403                           ; BSR set to: 1
 17404  005AD8  0100               	movlb	0	; () banked
 17405  005ADA  5188               	movf	readRFButtons@key1& (0+255),w,b
 17406  005ADC  183C               	xorwf	(_rfCMD+1)^0,w,c	;volatile
 17407  005ADE  A4D8               	btfss	status,2,c
 17408  005AE0  D015               	goto	u27680
 17409                           
 17410                           ; BSR set to: 0
 17411  005AE2  0101               	movlb	1	; () banked
 17412  005AE4  5181               	movf	readRFButtons@serial& (0+255),w,b
 17413  005AE6  183D               	xorwf	(_rfCMD+2)^0,w,c	;volatile
 17414  005AE8  E111               	bnz	l1662
 17415  005AEA  5182               	movf	(readRFButtons@serial+1)& (0+255),w,b
 17416  005AEC  183E               	xorwf	(_rfCMD+3)^0,w,c	;volatile
 17417  005AEE  E10E               	bnz	l1662
 17418  005AF0  5183               	movf	(readRFButtons@serial+2)& (0+255),w,b
 17419  005AF2  183F               	xorwf	(_rfCMD+4)^0,w,c	;volatile
 17420  005AF4  E10B               	bnz	l1662
 17421  005AF6  5184               	movf	(readRFButtons@serial+3)& (0+255),w,b
 17422  005AF8  1840               	xorwf	(_rfCMD+5)^0,w,c	;volatile
 17423  005AFA  A4D8               	btfss	status,2,c
 17424  005AFC  D007               	goto	u27680
 17425                           
 17426                           ; BSR set to: 1
 17427  005AFE  5185               	movf	readRFButtons@rollingCode& (0+255),w,b
 17428  005B00  1841               	xorwf	(_rfCMD+6)^0,w,c	;volatile
 17429  005B02  E104               	bnz	u27680
 17430  005B04  5186               	movf	(readRFButtons@rollingCode+1)& (0+255),w,b
 17431  005B06  1842               	xorwf	(_rfCMD+7)^0,w,c	;volatile
 17432  005B08  B4D8               	btfsc	status,2,c
 17433  005B0A  D00E               	goto	l22718
 17434  005B0C                     u27680:
 17435  005B0C                     l1662:
 17436                           
 17437                           ;inputs_MC50.c: 299:         {;inputs_MC50.c: 300:             rfCMD.currentKey=key1;
 17438  005B0C  C088  F03C         	movff	readRFButtons@key1,_rfCMD+1	;volatile
 17439                           
 17440                           ;inputs_MC50.c: 301:             rfCMD.currentSerial=serial;
 17441  005B10  C181  F03D         	movff	readRFButtons@serial,_rfCMD+2	;volatile
 17442  005B14  C182  F03E         	movff	readRFButtons@serial+1,_rfCMD+3	;volatile
 17443  005B18  C183  F03F         	movff	readRFButtons@serial+2,_rfCMD+4	;volatile
 17444  005B1C  C184  F040         	movff	readRFButtons@serial+3,_rfCMD+5	;volatile
 17445                           
 17446                           ;inputs_MC50.c: 302:             rfCMD.currentPosMem=classic_data.positionMem;
 17447  005B20  C2A1  F043         	movff	_classic_data+15,_rfCMD+8	;volatile
 17448                           
 17449                           ;inputs_MC50.c: 303:             rfCMD.timer=0;
 17450  005B24  0E00               	movlw	0
 17451  005B26  6E44               	movwf	(_rfCMD+9)^0,c	;volatile
 17452  005B28                     l22718:
 17453                           
 17454                           ;inputs_MC50.c: 305:         rfCMD.currentRolling=rollingCode;
 17455  005B28  C185  F041         	movff	readRFButtons@rollingCode,_rfCMD+6	;volatile
 17456  005B2C  C186  F042         	movff	readRFButtons@rollingCode+1,_rfCMD+7	;volatile
 17457  005B30                     l22720:
 17458                           
 17459                           ;inputs_MC50.c: 310:     if(rfCMD.processed == 1)
 17460  005B30  0445               	decf	(_rfCMD+10)^0,w,c	;volatile
 17461  005B32  A4D8               	btfss	status,2,c
 17462  005B34  D003               	goto	l22724
 17463                           
 17464                           ;inputs_MC50.c: 311:     {;inputs_MC50.c: 312:        rfCMD.currentType = NoCMD;
 17465  005B36  0E00               	movlw	0
 17466  005B38  6E3B               	movwf	_rfCMD^0,c	;volatile
 17467                           
 17468                           ;inputs_MC50.c: 313:     }
 17469  005B3A  0012               	return	
 17470  005B3C                     l22724:
 17471  005B3C  503B               	movf	_rfCMD^0,w,c	;volatile
 17472  005B3E  B4D8               	btfsc	status,2,c
 17473  005B40  0012               	return	
 17474                           
 17475                           ;inputs_MC50.c: 315:     {;inputs_MC50.c: 317:         if ( rfCMD.timer < 250 )
 17476  005B42  0EFA               	movlw	250
 17477  005B44  6044               	cpfslt	(_rfCMD+9)^0,c	;volatile
 17478  005B46  0012               	return	
 17479                           
 17480                           ;inputs_MC50.c: 318:         {;inputs_MC50.c: 319:             rfCMD.timer++;
 17481  005B48  2A44               	incf	(_rfCMD+9)^0,f,c	;volatile
 17482  005B4A  0012               	return		;funcret
 17483  005B4C                     __end_of_readRFButtons:
 17484                           	callstack 0
 17485                           
 17486 ;; *************** function _keeloqDecryptPacket *****************
 17487 ;; Defined at:
 17488 ;;		line 299 in file "keeloqDecrypt_MC50.c"
 17489 ;; Parameters:    Size  Location     Type
 17490 ;;  data            2    8[BANK0 ] PTR unsigned char 
 17491 ;;		 -> BufferRF(9), 
 17492 ;;  classic_data    2   10[BANK0 ] PTR struct .
 17493 ;;		 -> classic_data(16), 
 17494 ;; Auto vars:     Size  Location     Type
 17495 ;;  commandType     1   17[BANK0 ] enum E10539
 17496 ;;  hop_error       1   16[BANK0 ] enum E10730
 17497 ;; Return value:  Size  Location     Type
 17498 ;;                  1    wreg      enum E10539
 17499 ;; Registers used:
 17500 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 17501 ;; Tracked objects:
 17502 ;;		On entry : 3F/0
 17503 ;;		On exit  : 3F/0
 17504 ;;		Unchanged: 0/0
 17505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17506 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17507 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17508 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17509 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17510 ;;Total ram usage:       10 bytes
 17511 ;; Hardware stack levels used: 1
 17512 ;; Hardware stack levels required when called: 14
 17513 ;; This function calls:
 17514 ;;		_DecCHK
 17515 ;;		_HopCHK
 17516 ;;		_keeloq_classic_decrypt_packet
 17517 ;;		_memcpy
 17518 ;;		_validateRemoteSerialNumber
 17519 ;;		_verifyProgramingMode
 17520 ;; This function is called by:
 17521 ;;		_readRFButtons
 17522 ;; This function uses a non-reentrant model
 17523 ;;
 17524                           
 17525                           	psect	text60
 17526  004FAC                     __ptext60:
 17527                           	callstack 0
 17528  004FAC                     _keeloqDecryptPacket:
 17529                           	callstack 15
 17530                           
 17531                           ; BSR set to: 0
 17532                           ;keeloqDecrypt_MC50.c: 299: TypeCMD keeloqDecryptPacket (char* data,classic_encoder_t* c
      +                          lassic_data);keeloqDecrypt_MC50.c: 300: {;keeloqDecrypt_MC50.c: 301:     result_code_t h
      +                          op_error;;keeloqDecrypt_MC50.c: 302:     TypeCMD commandType;;keeloqDecrypt_MC50.c: 303:
      +                               memcpy(classic_data, data, 8);
 17533                           
 17534                           ;incstack = 0
 17535  004FAC  C0E2  F010         	movff	keeloqDecryptPacket@classic_data,memcpy@d1
 17536  004FB0  C0E3  F011         	movff	keeloqDecryptPacket@classic_data+1,memcpy@d1+1
 17537  004FB4  C0E0  F012         	movff	keeloqDecryptPacket@data,memcpy@s1
 17538  004FB8  C0E1  F013         	movff	keeloqDecryptPacket@data+1,memcpy@s1+1
 17539  004FBC  0E00               	movlw	0
 17540  004FBE  6E15               	movwf	(memcpy@n+1)^0,c
 17541  004FC0  0E08               	movlw	8
 17542  004FC2  6E14               	movwf	memcpy@n^0,c
 17543  004FC4  ECFF  F043         	call	_memcpy	;wreg free
 17544                           
 17545                           ;keeloqDecrypt_MC50.c: 304:     memcpy(&classic_data->sync, &classic_data->raw_data, 4);
 17546  004FC8  0E08               	movlw	8
 17547  004FCA  0100               	movlb	0	; () banked
 17548  004FCC  25E2               	addwf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17549  004FCE  6E10               	movwf	memcpy@d1^0,c
 17550  004FD0  0E00               	movlw	0
 17551  004FD2  21E3               	addwfc	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17552  004FD4  6E11               	movwf	(memcpy@d1+1)^0,c
 17553  004FD6  C0E2  F012         	movff	keeloqDecryptPacket@classic_data,memcpy@s1
 17554  004FDA  C0E3  F013         	movff	keeloqDecryptPacket@classic_data+1,memcpy@s1+1
 17555  004FDE  0E00               	movlw	0
 17556  004FE0  6E15               	movwf	(memcpy@n+1)^0,c
 17557  004FE2  0E04               	movlw	4
 17558  004FE4  6E14               	movwf	memcpy@n^0,c
 17559  004FE6  ECFF  F043         	call	_memcpy	;wreg free
 17560                           
 17561                           ;keeloqDecrypt_MC50.c: 305:     classic_data->fcode1 = *((uint8_t *) (&classic_data->ser
      +                          ialnumber) + 3) >> 4;
 17562  004FEA  0100               	movlb	0	; () banked
 17563  004FEC  EE20 F00C          	lfsr	2,12
 17564  004FF0  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17565  004FF2  26D9               	addwf	fsr2l,f,c
 17566  004FF4  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17567  004FF6  22DA               	addwfc	fsr2h,f,c
 17568  004FF8  EE10 F007          	lfsr	1,7
 17569  004FFC  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17570  004FFE  26E1               	addwf	fsr1l,f,c
 17571  005000  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17572  005002  22E2               	addwfc	fsr1h,f,c
 17573  005004  50E7               	movf	indf1,w,c
 17574  005006  6FE4               	movwf	??_keeloqDecryptPacket& (0+255),b
 17575  005008  39E4               	swapf	??_keeloqDecryptPacket& (0+255),w,b
 17576  00500A  0B0F               	andlw	15
 17577  00500C  6EDF               	movwf	indf2,c
 17578                           
 17579                           ; BSR set to: 0
 17580                           ;keeloqDecrypt_MC50.c: 306:     commandType=verifyProgramingMode(classic_data);
 17581  00500E  C0E2  F010         	movff	keeloqDecryptPacket@classic_data,verifyProgramingMode@classic_data
 17582  005012  C0E3  F011         	movff	keeloqDecryptPacket@classic_data+1,verifyProgramingMode@classic_data+1
 17583  005016  EC19  F045         	call	_verifyProgramingMode	;wreg free
 17584  00501A  6FE9               	movwf	keeloqDecryptPacket@commandType& (0+255),b
 17585                           
 17586                           ; BSR set to: 0
 17587                           ;keeloqDecrypt_MC50.c: 308:     if(commandType==NoCMD)
 17588  00501C  51E9               	movf	keeloqDecryptPacket@commandType& (0+255),w,b
 17589  00501E  A4D8               	btfss	status,2,c
 17590  005020  D019               	goto	l21204
 17591                           
 17592                           ; BSR set to: 0
 17593                           ;keeloqDecrypt_MC50.c: 309:     {;keeloqDecrypt_MC50.c: 310:         commandType=validat
      +                          eRemoteSerialNumber(classic_data->serialnumber,NO,&classic_data->positionMem);
 17594  005022  EE20 F004          	lfsr	2,4
 17595  005026  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17596  005028  26D9               	addwf	fsr2l,f,c
 17597  00502A  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17598  00502C  22DA               	addwfc	fsr2h,f,c
 17599  00502E  CFDE F02E          	movff	postinc2,validateRemoteSerialNumber@serial
 17600  005032  CFDE F02F          	movff	postinc2,validateRemoteSerialNumber@serial+1
 17601  005036  CFDE F030          	movff	postinc2,validateRemoteSerialNumber@serial+2
 17602  00503A  CFDE F031          	movff	postinc2,validateRemoteSerialNumber@serial+3
 17603  00503E  0E00               	movlw	0
 17604  005040  6E32               	movwf	validateRemoteSerialNumber@VerifyOnlySerial^0,c
 17605  005042  0E0F               	movlw	15
 17606  005044  25E2               	addwf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17607  005046  6E33               	movwf	validateRemoteSerialNumber@position^0,c
 17608  005048  0E00               	movlw	0
 17609  00504A  21E3               	addwfc	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17610  00504C  6E34               	movwf	(validateRemoteSerialNumber@position+1)^0,c
 17611  00504E  EC73  F02A         	call	_validateRemoteSerialNumber	;wreg free
 17612  005052  D004               	goto	L78
 17613  005054                     l21204:
 17614                           
 17615                           ; BSR set to: 0
 17616  005054  51A6               	movf	(_var_sys_NVM+14)& (0+255),w,b	;volatile
 17617  005056  A4D8               	btfss	status,2,c
 17618  005058  D002               	goto	l21208
 17619                           
 17620                           ; BSR set to: 0
 17621                           ;keeloqDecrypt_MC50.c: 313:     {;keeloqDecrypt_MC50.c: 314:         commandType=NoCMD;
 17622  00505A  0E00               	movlw	0
 17623  00505C                     L78:
 17624  00505C  6FE9               	movwf	keeloqDecryptPacket@commandType& (0+255),b
 17625  00505E                     l21208:
 17626                           
 17627                           ; BSR set to: 0
 17628                           ;keeloqDecrypt_MC50.c: 316:     classic_data->serialnumber = classic_data->serialnumber 
      +                          & 0x0FFFFFFF;
 17629  00505E  EE20 F004          	lfsr	2,4
 17630  005062  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17631  005064  26D9               	addwf	fsr2l,f,c
 17632  005066  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17633  005068  22DA               	addwfc	fsr2h,f,c
 17634  00506A  0EFF               	movlw	255
 17635  00506C  14DE               	andwf	postinc2,w,c
 17636  00506E  6FE4               	movwf	??_keeloqDecryptPacket& (0+255),b
 17637  005070  0EFF               	movlw	255
 17638  005072  14DE               	andwf	postinc2,w,c
 17639  005074  6FE5               	movwf	(??_keeloqDecryptPacket+1)& (0+255),b
 17640  005076  0EFF               	movlw	255
 17641  005078  14DE               	andwf	postinc2,w,c
 17642  00507A  6FE6               	movwf	(??_keeloqDecryptPacket+2)& (0+255),b
 17643  00507C  0E0F               	movlw	15
 17644  00507E  14DE               	andwf	postinc2,w,c
 17645  005080  6FE7               	movwf	(??_keeloqDecryptPacket+3)& (0+255),b
 17646  005082  EE20 F004          	lfsr	2,4
 17647  005086  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17648  005088  26D9               	addwf	fsr2l,f,c
 17649  00508A  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17650  00508C  22DA               	addwfc	fsr2h,f,c
 17651  00508E  C0E4  FFDE         	movff	??_keeloqDecryptPacket,postinc2
 17652  005092  C0E5  FFDE         	movff	??_keeloqDecryptPacket+1,postinc2
 17653  005096  C0E6  FFDE         	movff	??_keeloqDecryptPacket+2,postinc2
 17654  00509A  C0E7  FFDE         	movff	??_keeloqDecryptPacket+3,postinc2
 17655                           
 17656                           ; BSR set to: 0
 17657                           ;keeloqDecrypt_MC50.c: 318:     keeloq_classic_decrypt_packet(classic_data);
 17658  00509E  C0E2  F038         	movff	keeloqDecryptPacket@classic_data,keeloq_classic_decrypt_packet@data
 17659  0050A2  C0E3  F039         	movff	keeloqDecryptPacket@classic_data+1,keeloq_classic_decrypt_packet@data+1
 17660  0050A6  ECD3  F041         	call	_keeloq_classic_decrypt_packet	;wreg free
 17661                           
 17662                           ; BSR set to: 0
 17663                           ;keeloqDecrypt_MC50.c: 320:     if(commandType==NoCMD )
 17664  0050AA  51E9               	movf	keeloqDecryptPacket@commandType& (0+255),w,b
 17665  0050AC  A4D8               	btfss	status,2,c
 17666  0050AE  D01B               	goto	l21226
 17667                           
 17668                           ; BSR set to: 0
 17669                           ;keeloqDecrypt_MC50.c: 321:     {;keeloqDecrypt_MC50.c: 323:         if (DecCHK(classic_
      +                          data) == 0) {
 17670  0050B0  C0E2  F010         	movff	keeloqDecryptPacket@classic_data,DecCHK@data
 17671  0050B4  C0E3  F011         	movff	keeloqDecryptPacket@classic_data+1,DecCHK@data+1
 17672  0050B8  EC33  F045         	call	_DecCHK	;wreg free
 17673  0050BC  0900               	iorlw	0
 17674  0050BE  A4D8               	btfss	status,2,c
 17675  0050C0  D008               	goto	l21218
 17676                           
 17677                           ; BSR set to: 0
 17678                           ;keeloqDecrypt_MC50.c: 324:             classic_data->type=Keeloq_NoRollingCode;
 17679  0050C2  EE20 F00E          	lfsr	2,14
 17680  0050C6  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17681  0050C8  26D9               	addwf	fsr2l,f,c
 17682  0050CA  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17683  0050CC  22DA               	addwfc	fsr2h,f,c
 17684  0050CE  0E01               	movlw	1
 17685  0050D0  D007               	goto	L79
 17686  0050D2                     l21218:
 17687                           
 17688                           ; BSR set to: 0
 17689                           ;keeloqDecrypt_MC50.c: 328:         {;keeloqDecrypt_MC50.c: 329:             classic_dat
      +                          a->type=Keeloq_RollingCode;
 17690  0050D2  EE20 F00E          	lfsr	2,14
 17691  0050D6  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17692  0050D8  26D9               	addwf	fsr2l,f,c
 17693  0050DA  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17694  0050DC  22DA               	addwfc	fsr2h,f,c
 17695  0050DE  0E00               	movlw	0
 17696  0050E0                     L79:
 17697  0050E0  6EDF               	movwf	indf2,c
 17698  0050E2                     l21220:
 17699                           
 17700                           ; BSR set to: 0
 17701                           ;keeloqDecrypt_MC50.c: 331:         return NoCMD;
 17702  0050E2  0E00               	movlw	0
 17703  0050E4  0012               	return	
 17704  0050E6                     l21226:
 17705                           
 17706                           ; BSR set to: 0
 17707  0050E6  0E06               	movlw	6
 17708  0050E8  19E9               	xorwf	keeloqDecryptPacket@commandType& (0+255),w,b
 17709  0050EA  B4D8               	btfsc	status,2,c
 17710  0050EC  D004               	goto	u24580
 17711                           
 17712                           ; BSR set to: 0
 17713  0050EE  0E05               	movlw	5
 17714  0050F0  19E9               	xorwf	keeloqDecryptPacket@commandType& (0+255),w,b
 17715  0050F2  A4D8               	btfss	status,2,c
 17716  0050F4  D01B               	goto	l21236
 17717  0050F6                     u24580:
 17718                           
 17719                           ; BSR set to: 0
 17720                           ;keeloqDecrypt_MC50.c: 334:     {;keeloqDecrypt_MC50.c: 335:         if(validateRemoteSe
      +                          rialNumber(classic_data->serialnumber,YES,&classic_data->positionMem)==NoCMD)
 17721  0050F6  EE20 F004          	lfsr	2,4
 17722  0050FA  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17723  0050FC  26D9               	addwf	fsr2l,f,c
 17724  0050FE  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17725  005100  22DA               	addwfc	fsr2h,f,c
 17726  005102  CFDE F02E          	movff	postinc2,validateRemoteSerialNumber@serial
 17727  005106  CFDE F02F          	movff	postinc2,validateRemoteSerialNumber@serial+1
 17728  00510A  CFDE F030          	movff	postinc2,validateRemoteSerialNumber@serial+2
 17729  00510E  CFDE F031          	movff	postinc2,validateRemoteSerialNumber@serial+3
 17730  005112  0E01               	movlw	1
 17731  005114  6E32               	movwf	validateRemoteSerialNumber@VerifyOnlySerial^0,c
 17732  005116  0E0F               	movlw	15
 17733  005118  25E2               	addwf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17734  00511A  6E33               	movwf	validateRemoteSerialNumber@position^0,c
 17735  00511C  0E00               	movlw	0
 17736  00511E  21E3               	addwfc	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17737  005120  6E34               	movwf	(validateRemoteSerialNumber@position+1)^0,c
 17738  005122  EC73  F02A         	call	_validateRemoteSerialNumber	;wreg free
 17739  005126  0900               	iorlw	0
 17740  005128  B4D8               	btfsc	status,2,c
 17741  00512A  D7DB               	goto	l21220
 17742  00512C                     l21236:
 17743                           
 17744                           ; BSR set to: 0
 17745                           ;keeloqDecrypt_MC50.c: 344:     if (DecCHK(classic_data) == 0)
 17746  00512C  C0E2  F010         	movff	keeloqDecryptPacket@classic_data,DecCHK@data
 17747  005130  C0E3  F011         	movff	keeloqDecryptPacket@classic_data+1,DecCHK@data+1
 17748  005134  EC33  F045         	call	_DecCHK	;wreg free
 17749  005138  0900               	iorlw	0
 17750  00513A  A4D8               	btfss	status,2,c
 17751  00513C  D00D               	goto	l21252
 17752                           
 17753                           ; BSR set to: 0
 17754                           ;keeloqDecrypt_MC50.c: 345:     {;keeloqDecrypt_MC50.c: 346:         if(var_sys_NVM.Only
      +                          RollingCode==YES) {
 17755  00513E  05BE               	decf	(_var_sys_NVM+38)& (0+255),w,b	;volatile
 17756  005140  B4D8               	btfsc	status,2,c
 17757  005142  D7CF               	goto	l21220
 17758                           
 17759                           ; BSR set to: 0
 17760                           ;keeloqDecrypt_MC50.c: 352:         {;keeloqDecrypt_MC50.c: 353:             classic_dat
      +                          a->type=Keeloq_NoRollingCode;
 17761  005144  EE20 F00E          	lfsr	2,14
 17762  005148  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17763  00514A  26D9               	addwf	fsr2l,f,c
 17764  00514C  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17765  00514E  22DA               	addwfc	fsr2h,f,c
 17766  005150  0E01               	movlw	1
 17767  005152  6EDF               	movwf	indf2,c
 17768                           
 17769                           ; BSR set to: 0
 17770                           ;keeloqDecrypt_MC50.c: 354:             return commandType;
 17771  005154  51E9               	movf	keeloqDecryptPacket@commandType& (0+255),w,b
 17772  005156  0012               	return	
 17773  005158                     l21252:
 17774                           
 17775                           ; BSR set to: 0
 17776                           ;keeloqDecrypt_MC50.c: 359:     hop_error = HopCHK(classic_data);
 17777  005158  C0E2  F024         	movff	keeloqDecryptPacket@classic_data,HopCHK@data
 17778  00515C  C0E3  F025         	movff	keeloqDecryptPacket@classic_data+1,HopCHK@data+1
 17779  005160  EC0D  F03C         	call	_HopCHK	;wreg free
 17780  005164  0100               	movlb	0	; () banked
 17781  005166  6FE8               	movwf	keeloqDecryptPacket@hop_error& (0+255),b
 17782                           
 17783                           ; BSR set to: 0
 17784                           ;keeloqDecrypt_MC50.c: 360:     if (hop_error != VALID_PACKET) {
 17785  005168  05E8               	decf	keeloqDecryptPacket@hop_error& (0+255),w,b
 17786  00516A  A4D8               	btfss	status,2,c
 17787  00516C  D7BA               	goto	l21220
 17788                           
 17789                           ; BSR set to: 0
 17790                           ;keeloqDecrypt_MC50.c: 364:     classic_data->type=Keeloq_RollingCode;
 17791  00516E  EE20 F00E          	lfsr	2,14
 17792  005172  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17793  005174  26D9               	addwf	fsr2l,f,c
 17794  005176  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17795  005178  22DA               	addwfc	fsr2h,f,c
 17796  00517A  0E00               	movlw	0
 17797  00517C  D7EA               	goto	L80
 17798  00517E                     __end_of_keeloqDecryptPacket:
 17799                           	callstack 0
 17800                           
 17801 ;; *************** function _verifyProgramingMode *****************
 17802 ;; Defined at:
 17803 ;;		line 401 in file "keeloqDecrypt_MC50.c"
 17804 ;; Parameters:    Size  Location     Type
 17805 ;;  classic_data    2   15[COMRAM] PTR struct .
 17806 ;;		 -> classic_data(16), 
 17807 ;; Auto vars:     Size  Location     Type
 17808 ;;		None
 17809 ;; Return value:  Size  Location     Type
 17810 ;;                  1    wreg      enum E10539
 17811 ;; Registers used:
 17812 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17813 ;; Tracked objects:
 17814 ;;		On entry : 3F/0
 17815 ;;		On exit  : 3F/0
 17816 ;;		Unchanged: 3F/0
 17817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17818 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17819 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17820 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17821 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17822 ;;Total ram usage:        3 bytes
 17823 ;; Hardware stack levels used: 1
 17824 ;; Hardware stack levels required when called: 4
 17825 ;; This function calls:
 17826 ;;		Nothing
 17827 ;; This function is called by:
 17828 ;;		_keeloqDecryptPacket
 17829 ;; This function uses a non-reentrant model
 17830 ;;
 17831                           
 17832                           	psect	text61
 17833  008A32                     __ptext61:
 17834                           	callstack 0
 17835  008A32                     _verifyProgramingMode:
 17836                           	callstack 24
 17837                           
 17838                           ; BSR set to: 0
 17839                           ;keeloqDecrypt_MC50.c: 401: TypeCMD verifyProgramingMode(classic_encoder_t* classic_data
      +                          );keeloqDecrypt_MC50.c: 402: {;keeloqDecrypt_MC50.c: 403:     if (classic_data->fcode1==
      +                          0x0A)
 17840                           
 17841                           ; BSR set to: 0
 17842                           ;incstack = 0
 17843  008A32  EE20 F00C          	lfsr	2,12
 17844  008A36  5010               	movf	verifyProgramingMode@classic_data^0,w,c
 17845  008A38  26D9               	addwf	fsr2l,f,c
 17846  008A3A  5011               	movf	(verifyProgramingMode@classic_data+1)^0,w,c
 17847  008A3C  22DA               	addwfc	fsr2h,f,c
 17848  008A3E  0E0A               	movlw	10
 17849  008A40  18DE               	xorwf	postinc2,w,c
 17850  008A42  A4D8               	btfss	status,2,c
 17851  008A44  D002               	goto	l20218
 17852                           
 17853                           ; BSR set to: 0
 17854                           ;keeloqDecrypt_MC50.c: 404:     {;keeloqDecrypt_MC50.c: 405:         return TypeProgramm
      +                          ingModeFull;
 17855  008A46  0E06               	movlw	6
 17856  008A48  0012               	return	
 17857  008A4A                     l20218:
 17858                           
 17859                           ; BSR set to: 0
 17860  008A4A  EE20 F00C          	lfsr	2,12
 17861  008A4E  5010               	movf	verifyProgramingMode@classic_data^0,w,c
 17862  008A50  26D9               	addwf	fsr2l,f,c
 17863  008A52  5011               	movf	(verifyProgramingMode@classic_data+1)^0,w,c
 17864  008A54  22DA               	addwfc	fsr2h,f,c
 17865  008A56  0E05               	movlw	5
 17866  008A58  18DE               	xorwf	postinc2,w,c
 17867  008A5A  A4D8               	btfss	status,2,c
 17868  008A5C  D002               	goto	l20226
 17869                           
 17870                           ; BSR set to: 0
 17871                           ;keeloqDecrypt_MC50.c: 408:     {;keeloqDecrypt_MC50.c: 409:         return TypeProgramm
      +                          ingModeWalk;
 17872  008A5E  0E05               	movlw	5
 17873  008A60  0012               	return	
 17874  008A62                     l20226:
 17875                           
 17876                           ; BSR set to: 0
 17877                           ;keeloqDecrypt_MC50.c: 412:     {;keeloqDecrypt_MC50.c: 413:         return NoCMD;
 17878  008A62  0E00               	movlw	0
 17879                           
 17880                           ; BSR set to: 0
 17881  008A64  0012               	return		;funcret
 17882  008A66                     __end_of_verifyProgramingMode:
 17883                           	callstack 0
 17884                           
 17885 ;; *************** function _keeloq_classic_decrypt_packet *****************
 17886 ;; Defined at:
 17887 ;;		line 390 in file "keeloqDecrypt_MC50.c"
 17888 ;; Parameters:    Size  Location     Type
 17889 ;;  data            2   55[COMRAM] PTR struct .
 17890 ;;		 -> classic_data(16), 
 17891 ;; Auto vars:     Size  Location     Type
 17892 ;;		None
 17893 ;; Return value:  Size  Location     Type
 17894 ;;                  1    wreg      void 
 17895 ;; Registers used:
 17896 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 17897 ;; Tracked objects:
 17898 ;;		On entry : 3F/0
 17899 ;;		On exit  : 3F/0
 17900 ;;		Unchanged: 0/0
 17901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17902 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17903 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17904 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17905 ;;      Totals:         2       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17906 ;;Total ram usage:        5 bytes
 17907 ;; Hardware stack levels used: 1
 17908 ;; Hardware stack levels required when called: 7
 17909 ;; This function calls:
 17910 ;;		_Decrypt
 17911 ;;		_NormalKeyGen
 17912 ;; This function is called by:
 17913 ;;		_keeloqDecryptPacket
 17914 ;; This function uses a non-reentrant model
 17915 ;;
 17916                           
 17917                           	psect	text62
 17918  0083A6                     __ptext62:
 17919                           	callstack 0
 17920  0083A6                     _keeloq_classic_decrypt_packet:
 17921                           	callstack 21
 17922                           
 17923                           ; BSR set to: 0
 17924                           ;keeloqDecrypt_MC50.c: 393:     NormalKeyGen(&data->serialnumber);
 17925                           
 17926                           ; BSR set to: 0
 17927                           ;incstack = 0
 17928  0083A6  0E04               	movlw	4
 17929  0083A8  2438               	addwf	keeloq_classic_decrypt_packet@data^0,w,c
 17930  0083AA  6E26               	movwf	NormalKeyGen@serial^0,c
 17931  0083AC  0E00               	movlw	0
 17932  0083AE  2039               	addwfc	(keeloq_classic_decrypt_packet@data+1)^0,w,c
 17933  0083B0  6E27               	movwf	(NormalKeyGen@serial+1)^0,c
 17934  0083B2  EC69  F033         	call	_NormalKeyGen	;wreg free
 17935                           
 17936                           ;keeloqDecrypt_MC50.c: 395:     Decrypt((uint8_t*) & data->sync);
 17937  0083B6  0E08               	movlw	8
 17938  0083B8  2438               	addwf	keeloq_classic_decrypt_packet@data^0,w,c
 17939  0083BA  6E1B               	movwf	Decrypt@packet^0,c
 17940  0083BC  0E00               	movlw	0
 17941  0083BE  2039               	addwfc	(keeloq_classic_decrypt_packet@data+1)^0,w,c
 17942  0083C0  6E1C               	movwf	(Decrypt@packet+1)^0,c
 17943  0083C2  ECD0  F036         	call	_Decrypt	;wreg free
 17944                           
 17945                           ;keeloqDecrypt_MC50.c: 398:     data->fcode2 = (data->disc >> 12) & 0x0F;
 17946  0083C6  EE20 F00D          	lfsr	2,13
 17947  0083CA  5038               	movf	keeloq_classic_decrypt_packet@data^0,w,c
 17948  0083CC  26D9               	addwf	fsr2l,f,c
 17949  0083CE  5039               	movf	(keeloq_classic_decrypt_packet@data+1)^0,w,c
 17950  0083D0  22DA               	addwfc	fsr2h,f,c
 17951  0083D2  EE10 F00A          	lfsr	1,10
 17952  0083D6  5038               	movf	keeloq_classic_decrypt_packet@data^0,w,c
 17953  0083D8  26E1               	addwf	fsr1l,f,c
 17954  0083DA  5039               	movf	(keeloq_classic_decrypt_packet@data+1)^0,w,c
 17955  0083DC  22E2               	addwfc	fsr1h,f,c
 17956  0083DE  CFE6 F0D8          	movff	postinc1,??_keeloq_classic_decrypt_packet
 17957  0083E2  CFE5 F0D9          	movff	postdec1,??_keeloq_classic_decrypt_packet+1
 17958  0083E6  0E0C               	movlw	12
 17959  0083E8  0100               	movlb	0	; () banked
 17960  0083EA  6FDA               	movwf	(??_keeloq_classic_decrypt_packet+2)& (0+255),b
 17961  0083EC                     u23295:
 17962  0083EC  90D8               	bcf	status,0,c
 17963  0083EE  33D9               	rrcf	(??_keeloq_classic_decrypt_packet+1)& (0+255),f,b
 17964  0083F0  33D8               	rrcf	??_keeloq_classic_decrypt_packet& (0+255),f,b
 17965  0083F2  2FDA               	decfsz	(??_keeloq_classic_decrypt_packet+2)& (0+255),f,b
 17966  0083F4  D7FB               	goto	u23295
 17967  0083F6  51D8               	movf	??_keeloq_classic_decrypt_packet& (0+255),w,b
 17968  0083F8  0B0F               	andlw	15
 17969  0083FA  6EDF               	movwf	indf2,c
 17970                           
 17971                           ; BSR set to: 0
 17972  0083FC  0012               	return		;funcret
 17973  0083FE                     __end_of_keeloq_classic_decrypt_packet:
 17974                           	callstack 0
 17975                           
 17976 ;; *************** function _NormalKeyGen *****************
 17977 ;; Defined at:
 17978 ;;		line 87 in file "keeloqDecrypt_MC50.c"
 17979 ;; Parameters:    Size  Location     Type
 17980 ;;  serial          2   37[COMRAM] PTR unsigned long 
 17981 ;;		 -> classic_data(16), 
 17982 ;; Auto vars:     Size  Location     Type
 17983 ;;  Buffer          8   47[COMRAM] unsigned char [8]
 17984 ;;  SKEYtemp        4   43[COMRAM] unsigned char [4]
 17985 ;;  HOPtemp         4   39[COMRAM] unsigned char [4]
 17986 ;; Return value:  Size  Location     Type
 17987 ;;                  1    wreg      void 
 17988 ;; Registers used:
 17989 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17990 ;; Tracked objects:
 17991 ;;		On entry : 3F/0
 17992 ;;		On exit  : 0/0
 17993 ;;		Unchanged: 0/0
 17994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17995 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17996 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17998 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17999 ;;Total ram usage:       18 bytes
 18000 ;; Hardware stack levels used: 1
 18001 ;; Hardware stack levels required when called: 6
 18002 ;; This function calls:
 18003 ;;		_Decrypt
 18004 ;;		_LoadManufCode
 18005 ;;		_memcpy
 18006 ;; This function is called by:
 18007 ;;		_keeloq_classic_decrypt_packet
 18008 ;; This function uses a non-reentrant model
 18009 ;;
 18010                           
 18011                           	psect	text63
 18012  0066D2                     __ptext63:
 18013                           	callstack 0
 18014  0066D2                     _NormalKeyGen:
 18015                           	callstack 21
 18016                           
 18017                           ; BSR set to: 0
 18018                           ;keeloqDecrypt_MC50.c: 88:     static uint8_t SEED[4];;keeloqDecrypt_MC50.c: 89:     uin
      +                          t8_t Buffer[8];;keeloqDecrypt_MC50.c: 90:     uint8_t HOPtemp[4];;keeloqDecrypt_MC50.c: 
      +                          91:     uint8_t SKEYtemp[4];;keeloqDecrypt_MC50.c: 93:     memcpy(&Buffer[4], serial, 4)
      +                          ;
 18019                           
 18020                           ; BSR set to: 0
 18021                           ;incstack = 0
 18022  0066D2  0E34               	movlw	low (NormalKeyGen@Buffer+4)
 18023  0066D4  6E10               	movwf	memcpy@d1^0,c
 18024  0066D6  6A11               	clrf	(memcpy@d1+1)^0,c
 18025  0066D8  C026  F012         	movff	NormalKeyGen@serial,memcpy@s1
 18026  0066DC  C027  F013         	movff	NormalKeyGen@serial+1,memcpy@s1+1
 18027  0066E0  0E00               	movlw	0
 18028  0066E2  6E15               	movwf	(memcpy@n+1)^0,c
 18029  0066E4  0E04               	movlw	4
 18030  0066E6  6E14               	movwf	memcpy@n^0,c
 18031  0066E8  ECFF  F043         	call	_memcpy	;wreg free
 18032                           
 18033                           ;keeloqDecrypt_MC50.c: 95:     memcpy(HOPtemp, Buffer, 4);
 18034  0066EC  0E28               	movlw	low NormalKeyGen@HOPtemp
 18035  0066EE  6E10               	movwf	memcpy@d1^0,c
 18036  0066F0  6A11               	clrf	(memcpy@d1+1)^0,c
 18037  0066F2  0E30               	movlw	low NormalKeyGen@Buffer
 18038  0066F4  6E12               	movwf	memcpy@s1^0,c
 18039  0066F6  6A13               	clrf	(memcpy@s1+1)^0,c
 18040  0066F8  0E00               	movlw	0
 18041  0066FA  6E15               	movwf	(memcpy@n+1)^0,c
 18042  0066FC  0E04               	movlw	4
 18043  0066FE  6E14               	movwf	memcpy@n^0,c
 18044  006700  ECFF  F043         	call	_memcpy	;wreg free
 18045                           
 18046                           ;keeloqDecrypt_MC50.c: 97:     memcpy(SEED, &Buffer[4], 4);
 18047  006704  0ED9               	movlw	low NormalKeyGen@SEED
 18048  006706  6E10               	movwf	memcpy@d1^0,c
 18049  006708  0E02               	movlw	high NormalKeyGen@SEED
 18050  00670A  6E11               	movwf	(memcpy@d1+1)^0,c
 18051  00670C  0E34               	movlw	low (NormalKeyGen@Buffer+4)
 18052  00670E  6E12               	movwf	memcpy@s1^0,c
 18053  006710  6A13               	clrf	(memcpy@s1+1)^0,c
 18054  006712  0E00               	movlw	0
 18055  006714  6E15               	movwf	(memcpy@n+1)^0,c
 18056  006716  0E04               	movlw	4
 18057  006718  6E14               	movwf	memcpy@n^0,c
 18058  00671A  ECFF  F043         	call	_memcpy	;wreg free
 18059                           
 18060                           ;keeloqDecrypt_MC50.c: 98:     SEED[3] &= 0x0f;
 18061  00671E  0E0F               	movlw	15
 18062  006720  0102               	movlb	2	; () banked
 18063  006722  17DC               	andwf	(NormalKeyGen@SEED+3)& (0+255),f,b
 18064                           
 18065                           ; BSR set to: 2
 18066                           ;keeloqDecrypt_MC50.c: 101:     memcpy(Buffer, SEED, 4);
 18067  006724  0E30               	movlw	low NormalKeyGen@Buffer
 18068  006726  6E10               	movwf	memcpy@d1^0,c
 18069  006728  6A11               	clrf	(memcpy@d1+1)^0,c
 18070  00672A  0ED9               	movlw	low NormalKeyGen@SEED
 18071  00672C  6E12               	movwf	memcpy@s1^0,c
 18072  00672E  0E02               	movlw	high NormalKeyGen@SEED
 18073  006730  6E13               	movwf	(memcpy@s1+1)^0,c
 18074  006732  0E00               	movlw	0
 18075  006734  6E15               	movwf	(memcpy@n+1)^0,c
 18076  006736  0E04               	movlw	4
 18077  006738  6E14               	movwf	memcpy@n^0,c
 18078  00673A  ECFF  F043         	call	_memcpy	;wreg free
 18079                           
 18080                           ;keeloqDecrypt_MC50.c: 102:     Buffer[3] |= 0x20;
 18081  00673E  8A33               	bsf	(NormalKeyGen@Buffer+3)^0,5,c
 18082                           
 18083                           ;keeloqDecrypt_MC50.c: 103:     LoadManufCode();
 18084  006740  EC4B  F047         	call	_LoadManufCode	;wreg free
 18085                           
 18086                           ; BSR set to: 2
 18087                           ;keeloqDecrypt_MC50.c: 104:     Decrypt(Buffer);
 18088  006744  0E30               	movlw	low NormalKeyGen@Buffer
 18089  006746  6E1B               	movwf	Decrypt@packet^0,c
 18090  006748  6A1C               	clrf	(Decrypt@packet+1)^0,c
 18091  00674A  ECD0  F036         	call	_Decrypt	;wreg free
 18092                           
 18093                           ;keeloqDecrypt_MC50.c: 105:     memcpy(SKEYtemp, Buffer, 4);
 18094  00674E  0E2C               	movlw	low NormalKeyGen@SKEYtemp
 18095  006750  6E10               	movwf	memcpy@d1^0,c
 18096  006752  6A11               	clrf	(memcpy@d1+1)^0,c
 18097  006754  0E30               	movlw	low NormalKeyGen@Buffer
 18098  006756  6E12               	movwf	memcpy@s1^0,c
 18099  006758  6A13               	clrf	(memcpy@s1+1)^0,c
 18100  00675A  0E00               	movlw	0
 18101  00675C  6E15               	movwf	(memcpy@n+1)^0,c
 18102  00675E  0E04               	movlw	4
 18103  006760  6E14               	movwf	memcpy@n^0,c
 18104  006762  ECFF  F043         	call	_memcpy	;wreg free
 18105                           
 18106                           ;keeloqDecrypt_MC50.c: 108:     memcpy(Buffer, SEED, 4);
 18107  006766  0E30               	movlw	low NormalKeyGen@Buffer
 18108  006768  6E10               	movwf	memcpy@d1^0,c
 18109  00676A  6A11               	clrf	(memcpy@d1+1)^0,c
 18110  00676C  0ED9               	movlw	low NormalKeyGen@SEED
 18111  00676E  6E12               	movwf	memcpy@s1^0,c
 18112  006770  0E02               	movlw	high NormalKeyGen@SEED
 18113  006772  6E13               	movwf	(memcpy@s1+1)^0,c
 18114  006774  0E00               	movlw	0
 18115  006776  6E15               	movwf	(memcpy@n+1)^0,c
 18116  006778  0E04               	movlw	4
 18117  00677A  6E14               	movwf	memcpy@n^0,c
 18118  00677C  ECFF  F043         	call	_memcpy	;wreg free
 18119                           
 18120                           ;keeloqDecrypt_MC50.c: 109:     Buffer[3] |= 0x60;
 18121  006780  0E60               	movlw	96
 18122  006782  1233               	iorwf	(NormalKeyGen@Buffer+3)^0,f,c
 18123                           
 18124                           ;keeloqDecrypt_MC50.c: 110:     LoadManufCode();
 18125  006784  EC4B  F047         	call	_LoadManufCode	;wreg free
 18126                           
 18127                           ; BSR set to: 2
 18128                           ;keeloqDecrypt_MC50.c: 111:     Decrypt(Buffer);
 18129  006788  0E30               	movlw	low NormalKeyGen@Buffer
 18130  00678A  6E1B               	movwf	Decrypt@packet^0,c
 18131  00678C  6A1C               	clrf	(Decrypt@packet+1)^0,c
 18132  00678E  ECD0  F036         	call	_Decrypt	;wreg free
 18133                           
 18134                           ;keeloqDecrypt_MC50.c: 112:     memcpy(&DKEY[4], Buffer, 4);
 18135  006792  0ED5               	movlw	low (_DKEY+4)
 18136  006794  6E10               	movwf	memcpy@d1^0,c
 18137  006796  0E02               	movlw	high (_DKEY+4)
 18138  006798  6E11               	movwf	(memcpy@d1+1)^0,c
 18139  00679A  0E30               	movlw	low NormalKeyGen@Buffer
 18140  00679C  6E12               	movwf	memcpy@s1^0,c
 18141  00679E  6A13               	clrf	(memcpy@s1+1)^0,c
 18142  0067A0  0E00               	movlw	0
 18143  0067A2  6E15               	movwf	(memcpy@n+1)^0,c
 18144  0067A4  0E04               	movlw	4
 18145  0067A6  6E14               	movwf	memcpy@n^0,c
 18146  0067A8  ECFF  F043         	call	_memcpy	;wreg free
 18147                           
 18148                           ;keeloqDecrypt_MC50.c: 113:     memcpy(DKEY, SKEYtemp, 4);
 18149  0067AC  0ED1               	movlw	low _DKEY
 18150  0067AE  6E10               	movwf	memcpy@d1^0,c
 18151  0067B0  0E02               	movlw	high _DKEY
 18152  0067B2  6E11               	movwf	(memcpy@d1+1)^0,c
 18153  0067B4  0E2C               	movlw	low NormalKeyGen@SKEYtemp
 18154  0067B6  6E12               	movwf	memcpy@s1^0,c
 18155  0067B8  6A13               	clrf	(memcpy@s1+1)^0,c
 18156  0067BA  0E00               	movlw	0
 18157  0067BC  6E15               	movwf	(memcpy@n+1)^0,c
 18158  0067BE  0E04               	movlw	4
 18159  0067C0  6E14               	movwf	memcpy@n^0,c
 18160  0067C2  ECFF  F043         	call	_memcpy	;wreg free
 18161                           
 18162                           ;keeloqDecrypt_MC50.c: 116:     memcpy(Buffer, HOPtemp, 4);
 18163  0067C6  0E30               	movlw	low NormalKeyGen@Buffer
 18164  0067C8  6E10               	movwf	memcpy@d1^0,c
 18165  0067CA  6A11               	clrf	(memcpy@d1+1)^0,c
 18166  0067CC  0E28               	movlw	low NormalKeyGen@HOPtemp
 18167  0067CE  6E12               	movwf	memcpy@s1^0,c
 18168  0067D0  6A13               	clrf	(memcpy@s1+1)^0,c
 18169  0067D2  0E00               	movlw	0
 18170  0067D4  6E15               	movwf	(memcpy@n+1)^0,c
 18171  0067D6  0E04               	movlw	4
 18172  0067D8  6E14               	movwf	memcpy@n^0,c
 18173  0067DA  ECFF  F043         	call	_memcpy	;wreg free
 18174  0067DE  0012               	return		;funcret
 18175  0067E0                     __end_of_NormalKeyGen:
 18176                           	callstack 0
 18177                           
 18178 ;; *************** function _LoadManufCode *****************
 18179 ;; Defined at:
 18180 ;;		line 63 in file "keeloqDecrypt_MC50.c"
 18181 ;; Parameters:    Size  Location     Type
 18182 ;;		None
 18183 ;; Auto vars:     Size  Location     Type
 18184 ;;		None
 18185 ;; Return value:  Size  Location     Type
 18186 ;;                  1    wreg      void 
 18187 ;; Registers used:
 18188 ;;		wreg, status,2
 18189 ;; Tracked objects:
 18190 ;;		On entry : 0/2
 18191 ;;		On exit  : 3F/2
 18192 ;;		Unchanged: 0/0
 18193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18194 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18195 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18196 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18197 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18198 ;;Total ram usage:        0 bytes
 18199 ;; Hardware stack levels used: 1
 18200 ;; Hardware stack levels required when called: 4
 18201 ;; This function calls:
 18202 ;;		Nothing
 18203 ;; This function is called by:
 18204 ;;		_NormalKeyGen
 18205 ;; This function uses a non-reentrant model
 18206 ;;
 18207                           
 18208                           	psect	text64
 18209  008E96                     __ptext64:
 18210                           	callstack 0
 18211  008E96                     _LoadManufCode:
 18212                           	callstack 22
 18213                           
 18214                           ;keeloqDecrypt_MC50.c: 64:     DKEY[0] = 0xFF;
 18215                           
 18216                           ;incstack = 0
 18217  008E96  0102               	movlb	2	; () banked
 18218  008E98  69D1               	setf	_DKEY& (0+255),b
 18219                           
 18220                           ; BSR set to: 2
 18221                           ;keeloqDecrypt_MC50.c: 65:     DKEY[1] = 0xCA;
 18222  008E9A  0ECA               	movlw	202
 18223  008E9C  6FD2               	movwf	(_DKEY+1)& (0+255),b
 18224                           
 18225                           ;keeloqDecrypt_MC50.c: 66:     DKEY[2] = 0x76;
 18226  008E9E  0E76               	movlw	118
 18227  008EA0  6FD3               	movwf	(_DKEY+2)& (0+255),b
 18228                           
 18229                           ;keeloqDecrypt_MC50.c: 67:     DKEY[3] = 0x94;
 18230  008EA2  0E94               	movlw	148
 18231  008EA4  6FD4               	movwf	(_DKEY+3)& (0+255),b
 18232                           
 18233                           ;keeloqDecrypt_MC50.c: 68:     DKEY[4] = 0x22;
 18234  008EA6  0E22               	movlw	34
 18235  008EA8  6FD5               	movwf	(_DKEY+4)& (0+255),b
 18236                           
 18237                           ;keeloqDecrypt_MC50.c: 69:     DKEY[5] = 0x68;
 18238  008EAA  0E68               	movlw	104
 18239  008EAC  6FD6               	movwf	(_DKEY+5)& (0+255),b
 18240                           
 18241                           ;keeloqDecrypt_MC50.c: 70:     DKEY[6] = 0x27;
 18242  008EAE  0E27               	movlw	39
 18243  008EB0  6FD7               	movwf	(_DKEY+6)& (0+255),b
 18244                           
 18245                           ;keeloqDecrypt_MC50.c: 71:     DKEY[7] = 0x57;
 18246  008EB2  0E57               	movlw	87
 18247  008EB4  6FD8               	movwf	(_DKEY+7)& (0+255),b
 18248                           
 18249                           ; BSR set to: 2
 18250  008EB6  0012               	return		;funcret
 18251  008EB8                     __end_of_LoadManufCode:
 18252                           	callstack 0
 18253                           
 18254 ;; *************** function _Decrypt *****************
 18255 ;; Defined at:
 18256 ;;		line 142 in file "keeloqDecrypt_MC50.c"
 18257 ;; Parameters:    Size  Location     Type
 18258 ;;  packet          2   26[COMRAM] PTR unsigned char 
 18259 ;;		 -> SecureKeyGen@HOPtemp(4), NormalKeyGen@Buffer(8), classic_data(16), 
 18260 ;; Auto vars:     Size  Location     Type
 18261 ;;  Buffer          4   33[COMRAM] unsigned char [4]
 18262 ;;  aux             1   32[COMRAM] unsigned char 
 18263 ;;  p               1   31[COMRAM] char 
 18264 ;;  j               1   30[COMRAM] unsigned char 
 18265 ;;  i               1   29[COMRAM] unsigned char 
 18266 ;;  key             1   28[COMRAM] unsigned char 
 18267 ;; Return value:  Size  Location     Type
 18268 ;;                  1    wreg      void 
 18269 ;; Registers used:
 18270 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18271 ;; Tracked objects:
 18272 ;;		On entry : 0/0
 18273 ;;		On exit  : 0/0
 18274 ;;		Unchanged: 0/0
 18275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18276 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18277 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18278 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18279 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18280 ;;Total ram usage:       11 bytes
 18281 ;; Hardware stack levels used: 1
 18282 ;; Hardware stack levels required when called: 5
 18283 ;; This function calls:
 18284 ;;		_memcpy
 18285 ;; This function is called by:
 18286 ;;		_NormalKeyGen
 18287 ;;		_keeloq_classic_decrypt_packet
 18288 ;; This function uses a non-reentrant model
 18289 ;;
 18290                           
 18291                           	psect	text65
 18292  006DA0                     __ptext65:
 18293                           	callstack 0
 18294  006DA0                     _Decrypt:
 18295                           	callstack 21
 18296                           
 18297                           ;keeloqDecrypt_MC50.c: 143:     uint_fast8_t i, j;;keeloqDecrypt_MC50.c: 144:     uint8_
      +                          t key, aux;;keeloqDecrypt_MC50.c: 146:     int8_t p;;keeloqDecrypt_MC50.c: 147:     uint
      +                          8_t Buffer[4];;keeloqDecrypt_MC50.c: 149:     memcpy(Buffer, packet, 4);
 18298                           
 18299                           ; BSR set to: 2
 18300                           ;incstack = 0
 18301  006DA0  0E22               	movlw	low Decrypt@Buffer
 18302  006DA2  6E10               	movwf	memcpy@d1^0,c
 18303  006DA4  6A11               	clrf	(memcpy@d1+1)^0,c
 18304  006DA6  C01B  F012         	movff	Decrypt@packet,memcpy@s1
 18305  006DAA  C01C  F013         	movff	Decrypt@packet+1,memcpy@s1+1
 18306  006DAE  0E00               	movlw	0
 18307  006DB0  6E15               	movwf	(memcpy@n+1)^0,c
 18308  006DB2  0E04               	movlw	4
 18309  006DB4  6E14               	movwf	memcpy@n^0,c
 18310  006DB6  ECFF  F043         	call	_memcpy	;wreg free
 18311                           
 18312                           ;keeloqDecrypt_MC50.c: 151:     p = 1;
 18313  006DBA  0E01               	movlw	1
 18314  006DBC  6E20               	movwf	Decrypt@p^0,c
 18315                           
 18316                           ;keeloqDecrypt_MC50.c: 153:     for (j = 66; j > 0; j--) {
 18317  006DBE  0E42               	movlw	66
 18318  006DC0  6E1F               	movwf	Decrypt@j^0,c
 18319  006DC2                     l19430:
 18320                           
 18321                           ;keeloqDecrypt_MC50.c: 154:         key = DKEY[p--];
 18322  006DC2  0ED1               	movlw	low _DKEY
 18323  006DC4  2420               	addwf	Decrypt@p^0,w,c
 18324  006DC6  6ED9               	movwf	fsr2l,c
 18325  006DC8  6ADA               	clrf	fsr2h,c
 18326  006DCA  0E02               	movlw	high _DKEY
 18327  006DCC  22DA               	addwfc	fsr2h,f,c
 18328  006DCE  50DF               	movf	indf2,w,c
 18329  006DD0  6E1D               	movwf	Decrypt@key^0,c
 18330  006DD2  0620               	decf	Decrypt@p^0,f,c
 18331                           
 18332                           ;keeloqDecrypt_MC50.c: 155:         if (p < 0)
 18333  006DD4  AE20               	btfss	Decrypt@p^0,7,c
 18334  006DD6  D002               	goto	l19438
 18335                           
 18336                           ;keeloqDecrypt_MC50.c: 156:             p += 8;
 18337  006DD8  0E08               	movlw	8
 18338  006DDA  2620               	addwf	Decrypt@p^0,f,c
 18339  006DDC                     l19438:
 18340                           
 18341                           ;keeloqDecrypt_MC50.c: 157:         for (i = 8; i > 0; i--) {
 18342  006DDC  0E08               	movlw	8
 18343  006DDE  6E1E               	movwf	Decrypt@i^0,c
 18344  006DE0                     l1854:
 18345                           
 18346                           ;keeloqDecrypt_MC50.c: 159:             if ((( (Buffer[3]) & (1<<(6))) != 0)) {
 18347  006DE0  AC25               	btfss	(Decrypt@Buffer+3)^0,6,c
 18348  006DE2  D006               	goto	l1856
 18349                           
 18350                           ;keeloqDecrypt_MC50.c: 160:                 if (!(( (Buffer[3]) & (1<<(1))) != 0))
 18351  006DE4  B225               	btfsc	(Decrypt@Buffer+3)^0,1,c
 18352  006DE6  D002               	goto	l19448
 18353                           
 18354                           ;keeloqDecrypt_MC50.c: 161:                     aux = 0b00111010;
 18355  006DE8  0E3A               	movlw	58
 18356  006DEA  D007               	goto	L81
 18357  006DEC                     l19448:
 18358                           
 18359                           ;keeloqDecrypt_MC50.c: 163:                     aux = 0b01011100;
 18360  006DEC  0E5C               	movlw	92
 18361  006DEE  D005               	goto	L81
 18362  006DF0                     l1856:
 18363                           
 18364                           ;keeloqDecrypt_MC50.c: 165:                 if (!(( (Buffer[3]) & (1<<(1))) != 0))
 18365  006DF0  B225               	btfsc	(Decrypt@Buffer+3)^0,1,c
 18366  006DF2  D002               	goto	l19452
 18367                           
 18368                           ;keeloqDecrypt_MC50.c: 166:                     aux = 0b01110100;
 18369  006DF4  0E74               	movlw	116
 18370  006DF6  D001               	goto	L81
 18371  006DF8                     l19452:
 18372                           
 18373                           ;keeloqDecrypt_MC50.c: 168:                     aux = 0b00101110;
 18374  006DF8  0E2E               	movlw	46
 18375  006DFA                     L81:
 18376  006DFA  6E21               	movwf	Decrypt@aux^0,c
 18377                           
 18378                           ;keeloqDecrypt_MC50.c: 172:             if ((( (Buffer[2]) & (1<<(3))) != 0))
 18379  006DFC  B624               	btfsc	(Decrypt@Buffer+2)^0,3,c
 18380                           
 18381                           ;keeloqDecrypt_MC50.c: 173:                 aux = (aux << 4) | (aux >> 4);
 18382  006DFE  3A21               	swapf	Decrypt@aux^0,f,c
 18383                           
 18384                           ;keeloqDecrypt_MC50.c: 174:             if ((( (Buffer[1]) & (1<<(0))) != 0))
 18385  006E00  A023               	btfss	(Decrypt@Buffer+1)^0,0,c
 18386  006E02  D004               	goto	l19460
 18387                           
 18388                           ;keeloqDecrypt_MC50.c: 175:                 aux <<= 2;
 18389  006E04  90D8               	bcf	status,0,c
 18390  006E06  3621               	rlcf	Decrypt@aux^0,f,c
 18391  006E08  90D8               	bcf	status,0,c
 18392  006E0A  3621               	rlcf	Decrypt@aux^0,f,c
 18393  006E0C                     l19460:
 18394                           
 18395                           ;keeloqDecrypt_MC50.c: 176:             if ((( (Buffer[0]) & (1<<(0))) != 0))
 18396  006E0C  A022               	btfss	Decrypt@Buffer^0,0,c
 18397  006E0E  D002               	goto	l1864
 18398                           
 18399                           ;keeloqDecrypt_MC50.c: 177:                 aux <<= 1;
 18400  006E10  90D8               	bcf	status,0,c
 18401  006E12  3621               	rlcf	Decrypt@aux^0,f,c
 18402  006E14                     l1864:
 18403                           
 18404                           ;keeloqDecrypt_MC50.c: 180:             aux ^= Buffer[1] ^ Buffer[3] ^ key;
 18405  006E14  5023               	movf	(Decrypt@Buffer+1)^0,w,c
 18406  006E16  1825               	xorwf	(Decrypt@Buffer+3)^0,w,c
 18407  006E18  181D               	xorwf	Decrypt@key^0,w,c
 18408  006E1A  1A21               	xorwf	Decrypt@aux^0,f,c
 18409                           
 18410                           ;keeloqDecrypt_MC50.c: 182:             Buffer[3] = (Buffer[3] << 1) | (Buffer[2] >> 7);
 18411  006E1C  90D8               	bcf	status,0,c
 18412  006E1E  3424               	rlcf	(Decrypt@Buffer+2)^0,w,c
 18413  006E20  3425               	rlcf	(Decrypt@Buffer+3)^0,w,c
 18414  006E22  6E25               	movwf	(Decrypt@Buffer+3)^0,c
 18415                           
 18416                           ;keeloqDecrypt_MC50.c: 183:             Buffer[2] = (Buffer[2] << 1) | (Buffer[1] >> 7);
 18417  006E24  90D8               	bcf	status,0,c
 18418  006E26  3423               	rlcf	(Decrypt@Buffer+1)^0,w,c
 18419  006E28  3424               	rlcf	(Decrypt@Buffer+2)^0,w,c
 18420  006E2A  6E24               	movwf	(Decrypt@Buffer+2)^0,c
 18421                           
 18422                           ;keeloqDecrypt_MC50.c: 184:             Buffer[1] = (Buffer[1] << 1) | (Buffer[0] >> 7);
 18423  006E2C  90D8               	bcf	status,0,c
 18424  006E2E  3422               	rlcf	Decrypt@Buffer^0,w,c
 18425  006E30  3423               	rlcf	(Decrypt@Buffer+1)^0,w,c
 18426  006E32  6E23               	movwf	(Decrypt@Buffer+1)^0,c
 18427                           
 18428                           ;keeloqDecrypt_MC50.c: 185:             Buffer[0] = (Buffer[0] << 1) | (aux >> 7);
 18429  006E34  90D8               	bcf	status,0,c
 18430  006E36  3421               	rlcf	Decrypt@aux^0,w,c
 18431  006E38  3422               	rlcf	Decrypt@Buffer^0,w,c
 18432  006E3A  6E22               	movwf	Decrypt@Buffer^0,c
 18433                           
 18434                           ;keeloqDecrypt_MC50.c: 188:             key <<= 1;
 18435  006E3C  90D8               	bcf	status,0,c
 18436  006E3E  361D               	rlcf	Decrypt@key^0,f,c
 18437                           
 18438                           ;keeloqDecrypt_MC50.c: 189:         }
 18439  006E40  061E               	decf	Decrypt@i^0,f,c
 18440  006E42  501E               	movf	Decrypt@i^0,w,c
 18441  006E44  A4D8               	btfss	status,2,c
 18442  006E46  D7CC               	goto	l1854
 18443                           
 18444                           ;keeloqDecrypt_MC50.c: 190:     }
 18445  006E48  061F               	decf	Decrypt@j^0,f,c
 18446  006E4A  501F               	movf	Decrypt@j^0,w,c
 18447  006E4C  A4D8               	btfss	status,2,c
 18448  006E4E  D7B9               	goto	l19430
 18449                           
 18450                           ;keeloqDecrypt_MC50.c: 192:     memcpy(packet, Buffer, 4);
 18451  006E50  C01B  F010         	movff	Decrypt@packet,memcpy@d1
 18452  006E54  C01C  F011         	movff	Decrypt@packet+1,memcpy@d1+1
 18453  006E58  0E22               	movlw	low Decrypt@Buffer
 18454  006E5A  6E12               	movwf	memcpy@s1^0,c
 18455  006E5C  6A13               	clrf	(memcpy@s1+1)^0,c
 18456  006E5E  0E00               	movlw	0
 18457  006E60  6E15               	movwf	(memcpy@n+1)^0,c
 18458  006E62  0E04               	movlw	4
 18459  006E64  6E14               	movwf	memcpy@n^0,c
 18460  006E66  ECFF  F043         	call	_memcpy	;wreg free
 18461  006E6A  0012               	return		;funcret
 18462  006E6C                     __end_of_Decrypt:
 18463                           	callstack 0
 18464                           
 18465 ;; *************** function _HopCHK *****************
 18466 ;; Defined at:
 18467 ;;		line 236 in file "keeloqDecrypt_MC50.c"
 18468 ;; Parameters:    Size  Location     Type
 18469 ;;  data            2   35[COMRAM] PTR struct .
 18470 ;;		 -> classic_data(16), 
 18471 ;; Auto vars:     Size  Location     Type
 18472 ;;  hopDiff         2   37[COMRAM] short 
 18473 ;; Return value:  Size  Location     Type
 18474 ;;                  1    wreg      enum E10730
 18475 ;; Registers used:
 18476 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18477 ;; Tracked objects:
 18478 ;;		On entry : 3F/0
 18479 ;;		On exit  : 3C/0
 18480 ;;		Unchanged: 0/0
 18481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18482 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18483 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18484 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18485 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18486 ;;Total ram usage:        4 bytes
 18487 ;; Hardware stack levels used: 1
 18488 ;; Hardware stack levels required when called: 6
 18489 ;; This function calls:
 18490 ;;		_ReqResync
 18491 ;;		_getHopCode
 18492 ;; This function is called by:
 18493 ;;		_keeloqDecryptPacket
 18494 ;; This function uses a non-reentrant model
 18495 ;;
 18496                           
 18497                           	psect	text66
 18498  00781A                     __ptext66:
 18499                           	callstack 0
 18500  00781A                     _HopCHK:
 18501                           	callstack 22
 18502                           
 18503                           ; BSR set to: 0
 18504                           ;keeloqDecrypt_MC50.c: 237:     int16_t hopDiff;;keeloqDecrypt_MC50.c: 238:     Hop = da
      +                          ta->sync;
 18505                           
 18506                           ;incstack = 0
 18507  00781A  EE20 F008          	lfsr	2,8
 18508  00781E  5024               	movf	HopCHK@data^0,w,c
 18509  007820  26D9               	addwf	fsr2l,f,c
 18510  007822  5025               	movf	(HopCHK@data+1)^0,w,c
 18511  007824  22DA               	addwfc	fsr2h,f,c
 18512  007826  CFDE F07C          	movff	postinc2,_Hop
 18513  00782A  CFDD F07D          	movff	postdec2,_Hop+1
 18514                           
 18515                           ; BSR set to: 0
 18516                           ;keeloqDecrypt_MC50.c: 239:     EHop=getHopCode(data);
 18517  00782E  C024  F016         	movff	HopCHK@data,getHopCode@data
 18518  007832  C025  F017         	movff	HopCHK@data+1,getHopCode@data+1
 18519  007836  EC8D  F030         	call	_getHopCode	;wreg free
 18520  00783A  C016  F28C         	movff	?_getHopCode,_EHop
 18521  00783E  C017  F28D         	movff	?_getHopCode+1,_EHop+1
 18522                           
 18523                           ;keeloqDecrypt_MC50.c: 241:     if (F2Chance)
 18524  007842  0101               	movlb	1	; () banked
 18525  007844  5195               	movf	_F2Chance& (0+255),w,b
 18526  007846  B4D8               	btfsc	status,2,c
 18527  007848  D010               	goto	l20190
 18528                           
 18529                           ; BSR set to: 1
 18530                           ;keeloqDecrypt_MC50.c: 242:         if (NextHop == Hop) {
 18531  00784A  0100               	movlb	0	; () banked
 18532  00784C  517C               	movf	_Hop& (0+255),w,b
 18533  00784E  0102               	movlb	2	; () banked
 18534  007850  198E               	xorwf	_NextHop& (0+255),w,b
 18535  007852  E10B               	bnz	l20190
 18536  007854  0100               	movlb	0	; () banked
 18537  007856  517D               	movf	(_Hop+1)& (0+255),w,b
 18538  007858  0102               	movlb	2	; () banked
 18539  00785A  198F               	xorwf	(_NextHop+1)& (0+255),w,b
 18540  00785C  A4D8               	btfss	status,2,c
 18541  00785E  D005               	goto	l20190
 18542                           
 18543                           ; BSR set to: 2
 18544                           ;keeloqDecrypt_MC50.c: 243:             F2Chance = 0;
 18545  007860  0E00               	movlw	0
 18546  007862  0101               	movlb	1	; () banked
 18547  007864  6F95               	movwf	_F2Chance& (0+255),b
 18548  007866                     l20186:
 18549                           
 18550                           ;keeloqDecrypt_MC50.c: 245:             return VALID_PACKET;
 18551  007866  0E01               	movlw	1
 18552  007868  0012               	return	
 18553  00786A                     l20190:
 18554                           
 18555                           ;keeloqDecrypt_MC50.c: 249:     hopDiff = Hop - EHop;
 18556  00786A  0102               	movlb	2	; () banked
 18557  00786C  518C               	movf	_EHop& (0+255),w,b
 18558  00786E  0100               	movlb	0	; () banked
 18559  007870  5D7C               	subwf	_Hop& (0+255),w,b
 18560  007872  6E26               	movwf	HopCHK@hopDiff^0,c
 18561  007874  0102               	movlb	2	; () banked
 18562  007876  518D               	movf	(_EHop+1)& (0+255),w,b
 18563  007878  0100               	movlb	0	; () banked
 18564  00787A  597D               	subwfb	(_Hop+1)& (0+255),w,b
 18565  00787C  6E27               	movwf	(HopCHK@hopDiff+1)^0,c
 18566                           
 18567                           ;keeloqDecrypt_MC50.c: 251:     if (hopDiff < 0) {
 18568  00787E  AE27               	btfss	(HopCHK@hopDiff+1)^0,7,c
 18569  007880  D002               	goto	l20198
 18570                           
 18571                           ; BSR set to: 0
 18572                           ;keeloqDecrypt_MC50.c: 254:         return HOP_CHECK_FAIL;
 18573  007882  0E0A               	movlw	10
 18574  007884  0012               	return	
 18575  007886                     l20198:
 18576                           
 18577                           ; BSR set to: 0
 18578  007886  BE27               	btfsc	(HopCHK@hopDiff+1)^0,7,c
 18579  007888  D7EE               	goto	l20186
 18580  00788A  5027               	movf	(HopCHK@hopDiff+1)^0,w,c
 18581  00788C  E104               	bnz	u23260
 18582  00788E  0E11               	movlw	17
 18583  007890  5C26               	subwf	HopCHK@hopDiff^0,w,c
 18584  007892  A0D8               	btfss	status,0,c
 18585  007894  D7E8               	goto	l20186
 18586  007896                     u23260:
 18587                           
 18588                           ; BSR set to: 0
 18589                           ;keeloqDecrypt_MC50.c: 257:         return ReqResync(Hop);
 18590  007896  C07C  F010         	movff	_Hop,ReqResync@CurrentHop
 18591  00789A  C07D  F011         	movff	_Hop+1,ReqResync@CurrentHop+1
 18592  00789E  EC14  F048         	call	_ReqResync	;wreg free
 18593  0078A2  0012               	return		;funcret
 18594  0078A4                     __end_of_HopCHK:
 18595                           	callstack 0
 18596                           
 18597 ;; *************** function _getHopCode *****************
 18598 ;; Defined at:
 18599 ;;		line 266 in file "keeloqDecrypt_MC50.c"
 18600 ;; Parameters:    Size  Location     Type
 18601 ;;  data            2   21[COMRAM] PTR struct .
 18602 ;;		 -> classic_data(16), 
 18603 ;; Auto vars:     Size  Location     Type
 18604 ;;  tempHop         2   31[COMRAM] unsigned short 
 18605 ;;  i               1   34[COMRAM] unsigned char 
 18606 ;;  tempPos         1   33[COMRAM] char 
 18607 ;; Return value:  Size  Location     Type
 18608 ;;                  2   21[COMRAM] unsigned short 
 18609 ;; Registers used:
 18610 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18611 ;; Tracked objects:
 18612 ;;		On entry : 3F/0
 18613 ;;		On exit  : 3D/0
 18614 ;;		Unchanged: 0/0
 18615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18616 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18617 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18618 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18619 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18620 ;;Total ram usage:       14 bytes
 18621 ;; Hardware stack levels used: 1
 18622 ;; Hardware stack levels required when called: 5
 18623 ;; This function calls:
 18624 ;;		_ReqResync
 18625 ;;		___wmul
 18626 ;; This function is called by:
 18627 ;;		_HopCHK
 18628 ;; This function uses a non-reentrant model
 18629 ;;
 18630                           
 18631                           	psect	text67
 18632  00611A                     __ptext67:
 18633                           	callstack 0
 18634  00611A                     _getHopCode:
 18635                           	callstack 22
 18636                           
 18637                           ; BSR set to: 0
 18638                           ;keeloqDecrypt_MC50.c: 268:     uint16_t tempHop=0;
 18639                           
 18640                           ;incstack = 0
 18641  00611A  0E00               	movlw	0
 18642  00611C  6E21               	movwf	(getHopCode@tempHop+1)^0,c
 18643  00611E  0E00               	movlw	0
 18644  006120  6E20               	movwf	getHopCode@tempHop^0,c
 18645                           
 18646                           ; BSR set to: 0
 18647                           ;keeloqDecrypt_MC50.c: 269:     int8_t tempPos=-1;
 18648  006122  6822               	setf	getHopCode@tempPos^0,c
 18649                           
 18650                           ;keeloqDecrypt_MC50.c: 270:     for(i=0;i<25;i++)
 18651  006124  0E00               	movlw	0
 18652  006126  6E23               	movwf	getHopCode@i^0,c
 18653  006128                     l19678:
 18654                           
 18655                           ; BSR set to: 0
 18656                           ;keeloqDecrypt_MC50.c: 271:     {;keeloqDecrypt_MC50.c: 272:         if(listSyncValues[i
      +                          ].serial==data->serialnumber)
 18657  006128  EE20 F004          	lfsr	2,4
 18658  00612C  5016               	movf	getHopCode@data^0,w,c
 18659  00612E  26D9               	addwf	fsr2l,f,c
 18660  006130  5017               	movf	(getHopCode@data+1)^0,w,c
 18661  006132  22DA               	addwfc	fsr2h,f,c
 18662  006134  5023               	movf	getHopCode@i^0,w,c
 18663  006136  0D06               	mullw	6
 18664  006138  0E00               	movlw	low _listSyncValues
 18665  00613A  24F3               	addwf	243,w,c
 18666  00613C  6EE1               	movwf	fsr1l,c
 18667  00613E  0E03               	movlw	high _listSyncValues
 18668  006140  20F4               	addwfc	prodh,w,c
 18669  006142  6EE2               	movwf	fsr1h,c
 18670  006144  50DE               	movf	postinc2,w,c
 18671  006146  18E6               	xorwf	postinc1,w,c
 18672  006148  E118               	bnz	l19684
 18673  00614A  50DE               	movf	postinc2,w,c
 18674  00614C  18E6               	xorwf	postinc1,w,c
 18675  00614E  E115               	bnz	l19684
 18676  006150  50DE               	movf	postinc2,w,c
 18677  006152  18E6               	xorwf	postinc1,w,c
 18678  006154  E112               	bnz	l19684
 18679  006156  50DE               	movf	postinc2,w,c
 18680  006158  18E6               	xorwf	postinc1,w,c
 18681  00615A  A4D8               	btfss	status,2,c
 18682  00615C  D00E               	goto	l19684
 18683                           
 18684                           ; BSR set to: 0
 18685                           ;keeloqDecrypt_MC50.c: 273:         {;keeloqDecrypt_MC50.c: 274:             tempHop=lis
      +                          tSyncValues[i].sync;
 18686  00615E  5023               	movf	getHopCode@i^0,w,c
 18687  006160  0D06               	mullw	6
 18688  006162  0E04               	movlw	low (_listSyncValues+4)
 18689  006164  24F3               	addwf	243,w,c
 18690  006166  6ED9               	movwf	fsr2l,c
 18691  006168  0E03               	movlw	high (_listSyncValues+4)
 18692  00616A  20F4               	addwfc	prodh,w,c
 18693  00616C  6EDA               	movwf	fsr2h,c
 18694  00616E  CFDE F020          	movff	postinc2,getHopCode@tempHop
 18695  006172  CFDD F021          	movff	postdec2,getHopCode@tempHop+1
 18696                           
 18697                           ; BSR set to: 0
 18698                           ;keeloqDecrypt_MC50.c: 275:             tempPos=i;
 18699  006176  C023  F022         	movff	getHopCode@i,getHopCode@tempPos
 18700  00617A                     l19684:
 18701                           
 18702                           ; BSR set to: 0
 18703                           ;keeloqDecrypt_MC50.c: 278:     }
 18704  00617A  2A23               	incf	getHopCode@i^0,f,c
 18705                           
 18706                           ; BSR set to: 0
 18707  00617C  0E18               	movlw	24
 18708  00617E  6423               	cpfsgt	getHopCode@i^0,c
 18709  006180  D7D3               	goto	l19678
 18710                           
 18711                           ; BSR set to: 0
 18712                           ;keeloqDecrypt_MC50.c: 280:     if(tempPos<0)
 18713  006182  AE22               	btfss	getHopCode@tempPos^0,7,c
 18714  006184  D050               	goto	l19704
 18715                           
 18716                           ; BSR set to: 0
 18717                           ;keeloqDecrypt_MC50.c: 281:     {;keeloqDecrypt_MC50.c: 282:         listSyncValues[poin
      +                          tSync].serial=data->serialnumber;
 18718  006186  EE20 F004          	lfsr	2,4
 18719  00618A  5016               	movf	getHopCode@data^0,w,c
 18720  00618C  26D9               	addwf	fsr2l,f,c
 18721  00618E  5017               	movf	(getHopCode@data+1)^0,w,c
 18722  006190  22DA               	addwfc	fsr2h,f,c
 18723  006192  C07A  F010         	movff	_pointSync,___wmul@multiplier	;volatile
 18724  006196  C07B  F011         	movff	_pointSync+1,___wmul@multiplier+1	;volatile
 18725  00619A  0E00               	movlw	0
 18726  00619C  6E13               	movwf	(___wmul@multiplicand+1)^0,c
 18727  00619E  0E06               	movlw	6
 18728  0061A0  6E12               	movwf	___wmul@multiplicand^0,c
 18729  0061A2  EC00  F047         	call	___wmul	;wreg free
 18730  0061A6  0E00               	movlw	low _listSyncValues
 18731  0061A8  2410               	addwf	?___wmul^0,w,c
 18732  0061AA  6EE1               	movwf	fsr1l,c
 18733  0061AC  0E03               	movlw	high _listSyncValues
 18734  0061AE  2011               	addwfc	(?___wmul+1)^0,w,c
 18735  0061B0  6EE2               	movwf	fsr1h,c
 18736  0061B2  CFDE FFE6          	movff	postinc2,postinc1
 18737  0061B6  CFDE FFE6          	movff	postinc2,postinc1
 18738  0061BA  CFDE FFE6          	movff	postinc2,postinc1
 18739  0061BE  CFDE FFE6          	movff	postinc2,postinc1
 18740                           
 18741                           ;keeloqDecrypt_MC50.c: 283:         listSyncValues[pointSync].sync=data->sync;
 18742  0061C2  EE20 F008          	lfsr	2,8
 18743  0061C6  5016               	movf	getHopCode@data^0,w,c
 18744  0061C8  26D9               	addwf	fsr2l,f,c
 18745  0061CA  5017               	movf	(getHopCode@data+1)^0,w,c
 18746  0061CC  22DA               	addwfc	fsr2h,f,c
 18747  0061CE  C07A  F010         	movff	_pointSync,___wmul@multiplier	;volatile
 18748  0061D2  C07B  F011         	movff	_pointSync+1,___wmul@multiplier+1	;volatile
 18749  0061D6  0E00               	movlw	0
 18750  0061D8  6E13               	movwf	(___wmul@multiplicand+1)^0,c
 18751  0061DA  0E06               	movlw	6
 18752  0061DC  6E12               	movwf	___wmul@multiplicand^0,c
 18753  0061DE  EC00  F047         	call	___wmul	;wreg free
 18754  0061E2  0E04               	movlw	low (_listSyncValues+4)
 18755  0061E4  2410               	addwf	?___wmul^0,w,c
 18756  0061E6  6EE1               	movwf	fsr1l,c
 18757  0061E8  0E03               	movlw	high (_listSyncValues+4)
 18758  0061EA  2011               	addwfc	(?___wmul+1)^0,w,c
 18759  0061EC  6EE2               	movwf	fsr1h,c
 18760  0061EE  CFDE FFE6          	movff	postinc2,postinc1
 18761  0061F2  CFDD FFE5          	movff	postdec2,postdec1
 18762                           
 18763                           ;keeloqDecrypt_MC50.c: 284:         pointSync++;
 18764  0061F6  0100               	movlb	0	; () banked
 18765  0061F8  4B7A               	infsnz	_pointSync& (0+255),f,b	;volatile
 18766  0061FA  2B7B               	incf	(_pointSync+1)& (0+255),f,b	;volatile
 18767                           
 18768                           ; BSR set to: 0
 18769                           ;keeloqDecrypt_MC50.c: 285:         if(pointSync>=25)
 18770  0061FC  517B               	movf	(_pointSync+1)& (0+255),w,b	;volatile
 18771  0061FE  E104               	bnz	u22580
 18772  006200  0E19               	movlw	25
 18773  006202  5D7A               	subwf	_pointSync& (0+255),w,b	;volatile
 18774  006204  A0D8               	btfss	status,0,c
 18775  006206  D004               	goto	l19698
 18776  006208                     u22580:
 18777                           
 18778                           ; BSR set to: 0
 18779                           ;keeloqDecrypt_MC50.c: 286:         {;keeloqDecrypt_MC50.c: 287:             pointSync=0
      +                          ;
 18780  006208  0E00               	movlw	0
 18781  00620A  6F7B               	movwf	(_pointSync+1)& (0+255),b	;volatile
 18782  00620C  0E00               	movlw	0
 18783  00620E  6F7A               	movwf	_pointSync& (0+255),b	;volatile
 18784  006210                     l19698:
 18785                           
 18786                           ; BSR set to: 0
 18787                           ;keeloqDecrypt_MC50.c: 289:         return ReqResync(Hop);
 18788  006210  C07C  F010         	movff	_Hop,ReqResync@CurrentHop
 18789  006214  C07D  F011         	movff	_Hop+1,ReqResync@CurrentHop+1
 18790  006218  EC14  F048         	call	_ReqResync	;wreg free
 18791  00621C  6E18               	movwf	??_getHopCode^0,c
 18792  00621E  5018               	movf	??_getHopCode^0,w,c
 18793  006220  6E16               	movwf	?_getHopCode^0,c
 18794  006222  6A17               	clrf	(?_getHopCode+1)^0,c
 18795  006224  0012               	return	
 18796  006226                     l19704:
 18797                           
 18798                           ; BSR set to: 0
 18799                           ;keeloqDecrypt_MC50.c: 292:     {;keeloqDecrypt_MC50.c: 293:         listSyncValues[temp
      +                          Pos].sync=Hop;
 18800  006226  5022               	movf	getHopCode@tempPos^0,w,c
 18801  006228  0D06               	mullw	6
 18802  00622A  0E04               	movlw	low (_listSyncValues+4)
 18803  00622C  24F3               	addwf	243,w,c
 18804  00622E  6ED9               	movwf	fsr2l,c
 18805  006230  0E03               	movlw	high (_listSyncValues+4)
 18806  006232  20F4               	addwfc	prodh,w,c
 18807  006234  6EDA               	movwf	fsr2h,c
 18808  006236  C07C  FFDE         	movff	_Hop,postinc2
 18809  00623A  C07D  FFDD         	movff	_Hop+1,postdec2
 18810                           
 18811                           ; BSR set to: 0
 18812                           ;keeloqDecrypt_MC50.c: 296:     return tempHop;
 18813  00623E  C020  F016         	movff	getHopCode@tempHop,?_getHopCode
 18814  006242  C021  F017         	movff	getHopCode@tempHop+1,?_getHopCode+1
 18815  006246  0012               	return		;funcret
 18816  006248                     __end_of_getHopCode:
 18817                           	callstack 0
 18818                           
 18819 ;; *************** function _ReqResync *****************
 18820 ;; Defined at:
 18821 ;;		line 224 in file "keeloqDecrypt_MC50.c"
 18822 ;; Parameters:    Size  Location     Type
 18823 ;;  CurrentHop      2   15[COMRAM] unsigned short 
 18824 ;; Auto vars:     Size  Location     Type
 18825 ;;		None
 18826 ;; Return value:  Size  Location     Type
 18827 ;;                  1    wreg      enum E10730
 18828 ;; Registers used:
 18829 ;;		wreg, status,2, status,0
 18830 ;; Tracked objects:
 18831 ;;		On entry : 3F/0
 18832 ;;		On exit  : 3F/2
 18833 ;;		Unchanged: 0/0
 18834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18835 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18836 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18838 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18839 ;;Total ram usage:        2 bytes
 18840 ;; Hardware stack levels used: 1
 18841 ;; Hardware stack levels required when called: 4
 18842 ;; This function calls:
 18843 ;;		Nothing
 18844 ;; This function is called by:
 18845 ;;		_HopCHK
 18846 ;;		_getHopCode
 18847 ;; This function uses a non-reentrant model
 18848 ;;
 18849                           
 18850                           	psect	text68
 18851  009028                     __ptext68:
 18852                           	callstack 0
 18853  009028                     _ReqResync:
 18854                           	callstack 22
 18855                           
 18856                           ; BSR set to: 0
 18857                           ;keeloqDecrypt_MC50.c: 225:     F2Chance = 1;
 18858                           
 18859                           ;incstack = 0
 18860  009028  0E01               	movlw	1
 18861  00902A  0101               	movlb	1	; () banked
 18862  00902C  6F95               	movwf	_F2Chance& (0+255),b
 18863                           
 18864                           ; BSR set to: 1
 18865                           ;keeloqDecrypt_MC50.c: 226:     NextHop = CurrentHop + 1;
 18866  00902E  0E01               	movlw	1
 18867  009030  2410               	addwf	ReqResync@CurrentHop^0,w,c
 18868  009032  0102               	movlb	2	; () banked
 18869  009034  6F8E               	movwf	_NextHop& (0+255),b
 18870  009036  0E00               	movlw	0
 18871  009038  2011               	addwfc	(ReqResync@CurrentHop+1)^0,w,c
 18872  00903A  6F8F               	movwf	(_NextHop+1)& (0+255),b
 18873                           
 18874                           ; BSR set to: 2
 18875                           ;keeloqDecrypt_MC50.c: 228:     return RESYNC_REQ;
 18876  00903C  0E09               	movlw	9
 18877                           
 18878                           ; BSR set to: 2
 18879  00903E  0012               	return		;funcret
 18880  009040                     __end_of_ReqResync:
 18881                           	callstack 0
 18882                           
 18883 ;; *************** function _DecCHK *****************
 18884 ;; Defined at:
 18885 ;;		line 206 in file "keeloqDecrypt_MC50.c"
 18886 ;; Parameters:    Size  Location     Type
 18887 ;;  data            2   15[COMRAM] PTR struct .
 18888 ;;		 -> classic_data(16), 
 18889 ;; Auto vars:     Size  Location     Type
 18890 ;;		None
 18891 ;; Return value:  Size  Location     Type
 18892 ;;                  1    wreg      _Bool 
 18893 ;; Registers used:
 18894 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 18895 ;; Tracked objects:
 18896 ;;		On entry : 3F/0
 18897 ;;		On exit  : 3F/0
 18898 ;;		Unchanged: 3F/0
 18899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18900 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18901 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18902 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18903 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18904 ;;Total ram usage:        4 bytes
 18905 ;; Hardware stack levels used: 1
 18906 ;; Hardware stack levels required when called: 4
 18907 ;; This function calls:
 18908 ;;		Nothing
 18909 ;; This function is called by:
 18910 ;;		_keeloqDecryptPacket
 18911 ;; This function uses a non-reentrant model
 18912 ;;
 18913                           
 18914                           	psect	text69
 18915  008A66                     __ptext69:
 18916                           	callstack 0
 18917  008A66                     _DecCHK:
 18918                           	callstack 24
 18919                           
 18920                           ; BSR set to: 0
 18921                           ;keeloqDecrypt_MC50.c: 208:     if (((data->fcode1 ^ data->fcode2) & 0x0f) != 0)
 18922                           
 18923                           ; BSR set to: 2
 18924                           ;incstack = 0
 18925  008A66  EE20 F00D          	lfsr	2,13
 18926  008A6A  5010               	movf	DecCHK@data^0,w,c
 18927  008A6C  26D9               	addwf	fsr2l,f,c
 18928  008A6E  5011               	movf	(DecCHK@data+1)^0,w,c
 18929  008A70  22DA               	addwfc	fsr2h,f,c
 18930  008A72  50DF               	movf	indf2,w,c
 18931  008A74  6E12               	movwf	??_DecCHK^0,c
 18932  008A76  EE20 F00C          	lfsr	2,12
 18933  008A7A  5010               	movf	DecCHK@data^0,w,c
 18934  008A7C  26D9               	addwf	fsr2l,f,c
 18935  008A7E  5011               	movf	(DecCHK@data+1)^0,w,c
 18936  008A80  22DA               	addwfc	fsr2h,f,c
 18937  008A82  50DF               	movf	indf2,w,c
 18938  008A84  1812               	xorwf	??_DecCHK^0,w,c
 18939  008A86  6E13               	movwf	(??_DecCHK+1)^0,c
 18940  008A88  0E0F               	movlw	15
 18941  008A8A  1613               	andwf	(??_DecCHK+1)^0,f,c
 18942  008A8C  B4D8               	btfsc	status,2,c
 18943  008A8E  D002               	goto	l20172
 18944                           
 18945                           ; BSR set to: 0
 18946                           ;keeloqDecrypt_MC50.c: 209:         return 0;
 18947  008A90  0E00               	movlw	0
 18948  008A92  0012               	return	
 18949  008A94                     l20172:
 18950                           
 18951                           ; BSR set to: 0
 18952                           ;keeloqDecrypt_MC50.c: 211:     return 1;
 18953  008A94  0E01               	movlw	1
 18954                           
 18955                           ; BSR set to: 0
 18956  008A96  0012               	return		;funcret
 18957  008A98                     __end_of_DecCHK:
 18958                           	callstack 0
 18959                           
 18960 ;; *************** function _DecryptPacket_12BIT *****************
 18961 ;; Defined at:
 18962 ;;		line 370 in file "keeloqDecrypt_MC50.c"
 18963 ;; Parameters:    Size  Location     Type
 18964 ;;  data            2    8[BANK0 ] PTR unsigned char 
 18965 ;;		 -> BufferRF(9), 
 18966 ;;  classic_data    2   10[BANK0 ] PTR struct .
 18967 ;;		 -> classic_data(16), 
 18968 ;; Auto vars:     Size  Location     Type
 18969 ;;  commandType     1   12[BANK0 ] enum E10539
 18970 ;; Return value:  Size  Location     Type
 18971 ;;                  1    wreg      enum E10539
 18972 ;; Registers used:
 18973 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18974 ;; Tracked objects:
 18975 ;;		On entry : 3F/0
 18976 ;;		On exit  : 3F/0
 18977 ;;		Unchanged: 0/0
 18978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18979 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18980 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18982 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18983 ;;Total ram usage:        5 bytes
 18984 ;; Hardware stack levels used: 1
 18985 ;; Hardware stack levels required when called: 14
 18986 ;; This function calls:
 18987 ;;		_memcpy
 18988 ;;		_validateRemoteSerialNumber
 18989 ;; This function is called by:
 18990 ;;		_readRFButtons
 18991 ;; This function uses a non-reentrant model
 18992 ;;
 18993                           
 18994                           	psect	text70
 18995  007676                     __ptext70:
 18996                           	callstack 0
 18997  007676                     _DecryptPacket_12BIT:
 18998                           	callstack 15
 18999                           
 19000                           ; BSR set to: 0
 19001                           ;keeloqDecrypt_MC50.c: 370: TypeCMD DecryptPacket_12BIT (char* data,classic_encoder_t* c
      +                          lassic_data);keeloqDecrypt_MC50.c: 371: {;keeloqDecrypt_MC50.c: 372:     TypeCMD command
      +                          Type;;keeloqDecrypt_MC50.c: 373:     memcpy(&classic_data->serialnumber, data, 4);
 19002                           
 19003                           ; BSR set to: 0
 19004                           ;incstack = 0
 19005  007676  0E04               	movlw	4
 19006  007678  25E2               	addwf	DecryptPacket_12BIT@classic_data& (0+255),w,b
 19007  00767A  6E10               	movwf	memcpy@d1^0,c
 19008  00767C  0E00               	movlw	0
 19009  00767E  21E3               	addwfc	(DecryptPacket_12BIT@classic_data+1)& (0+255),w,b
 19010  007680  6E11               	movwf	(memcpy@d1+1)^0,c
 19011  007682  C0E0  F012         	movff	DecryptPacket_12BIT@data,memcpy@s1
 19012  007686  C0E1  F013         	movff	DecryptPacket_12BIT@data+1,memcpy@s1+1
 19013  00768A  0E00               	movlw	0
 19014  00768C  6E15               	movwf	(memcpy@n+1)^0,c
 19015  00768E  0E04               	movlw	4
 19016  007690  6E14               	movwf	memcpy@n^0,c
 19017  007692  ECFF  F043         	call	_memcpy	;wreg free
 19018                           
 19019                           ;keeloqDecrypt_MC50.c: 374:     commandType=validateRemoteSerialNumber(classic_data->ser
      +                          ialnumber,NO,&classic_data->positionMem);
 19020  007696  0100               	movlb	0	; () banked
 19021  007698  EE20 F004          	lfsr	2,4
 19022  00769C  51E2               	movf	DecryptPacket_12BIT@classic_data& (0+255),w,b
 19023  00769E  26D9               	addwf	fsr2l,f,c
 19024  0076A0  51E3               	movf	(DecryptPacket_12BIT@classic_data+1)& (0+255),w,b
 19025  0076A2  22DA               	addwfc	fsr2h,f,c
 19026  0076A4  CFDE F02E          	movff	postinc2,validateRemoteSerialNumber@serial
 19027  0076A8  CFDE F02F          	movff	postinc2,validateRemoteSerialNumber@serial+1
 19028  0076AC  CFDE F030          	movff	postinc2,validateRemoteSerialNumber@serial+2
 19029  0076B0  CFDE F031          	movff	postinc2,validateRemoteSerialNumber@serial+3
 19030  0076B4  0E00               	movlw	0
 19031  0076B6  6E32               	movwf	validateRemoteSerialNumber@VerifyOnlySerial^0,c
 19032  0076B8  0E0F               	movlw	15
 19033  0076BA  25E2               	addwf	DecryptPacket_12BIT@classic_data& (0+255),w,b
 19034  0076BC  6E33               	movwf	validateRemoteSerialNumber@position^0,c
 19035  0076BE  0E00               	movlw	0
 19036  0076C0  21E3               	addwfc	(DecryptPacket_12BIT@classic_data+1)& (0+255),w,b
 19037  0076C2  6E34               	movwf	(validateRemoteSerialNumber@position+1)^0,c
 19038  0076C4  EC73  F02A         	call	_validateRemoteSerialNumber	;wreg free
 19039  0076C8  6FE4               	movwf	DecryptPacket_12BIT@commandType& (0+255),b
 19040                           
 19041                           ; BSR set to: 0
 19042                           ;keeloqDecrypt_MC50.c: 375:     classic_data->fcode1 = 0;
 19043  0076CA  EE20 F00C          	lfsr	2,12
 19044  0076CE  51E2               	movf	DecryptPacket_12BIT@classic_data& (0+255),w,b
 19045  0076D0  26D9               	addwf	fsr2l,f,c
 19046  0076D2  51E3               	movf	(DecryptPacket_12BIT@classic_data+1)& (0+255),w,b
 19047  0076D4  22DA               	addwfc	fsr2h,f,c
 19048  0076D6  0E00               	movlw	0
 19049  0076D8  6EDF               	movwf	indf2,c
 19050                           
 19051                           ; BSR set to: 0
 19052                           ;keeloqDecrypt_MC50.c: 376:     classic_data->sync = 0;
 19053  0076DA  EE20 F008          	lfsr	2,8
 19054  0076DE  51E2               	movf	DecryptPacket_12BIT@classic_data& (0+255),w,b
 19055  0076E0  26D9               	addwf	fsr2l,f,c
 19056  0076E2  51E3               	movf	(DecryptPacket_12BIT@classic_data+1)& (0+255),w,b
 19057  0076E4  22DA               	addwfc	fsr2h,f,c
 19058  0076E6  0E00               	movlw	0
 19059  0076E8  6EDE               	movwf	postinc2,c
 19060  0076EA  0E00               	movlw	0
 19061  0076EC  6EDD               	movwf	postdec2,c
 19062                           
 19063                           ; BSR set to: 0
 19064                           ;keeloqDecrypt_MC50.c: 377:     classic_data->type=DIP_12BIT;
 19065  0076EE  EE20 F00E          	lfsr	2,14
 19066  0076F2  51E2               	movf	DecryptPacket_12BIT@classic_data& (0+255),w,b
 19067  0076F4  26D9               	addwf	fsr2l,f,c
 19068  0076F6  51E3               	movf	(DecryptPacket_12BIT@classic_data+1)& (0+255),w,b
 19069  0076F8  22DA               	addwfc	fsr2h,f,c
 19070  0076FA  0E02               	movlw	2
 19071  0076FC  6EDF               	movwf	indf2,c
 19072                           
 19073                           ; BSR set to: 0
 19074                           ;keeloqDecrypt_MC50.c: 386:     return commandType;
 19075  0076FE  51E4               	movf	DecryptPacket_12BIT@commandType& (0+255),w,b
 19076                           
 19077                           ; BSR set to: 0
 19078  007700  0012               	return		;funcret
 19079  007702                     __end_of_DecryptPacket_12BIT:
 19080                           	callstack 0
 19081                           
 19082 ;; *************** function _validateRemoteSerialNumber *****************
 19083 ;; Defined at:
 19084 ;;		line 27 in file "controlMemory_MC50.c"
 19085 ;; Parameters:    Size  Location     Type
 19086 ;;  serial          4   45[COMRAM] unsigned long 
 19087 ;;  VerifyOnlySe    1   49[COMRAM] enum E10564
 19088 ;;  position        2   50[COMRAM] PTR unsigned char 
 19089 ;;		 -> controlSelectRemote@pos(1), classic_data(16), 
 19090 ;; Auto vars:     Size  Location     Type
 19091 ;;  mask            4   52[COMRAM] unsigned long 
 19092 ;;  i               1   57[COMRAM] unsigned char 
 19093 ;;  j               1   56[COMRAM] unsigned char 
 19094 ;; Return value:  Size  Location     Type
 19095 ;;                  1    wreg      enum E10539
 19096 ;; Registers used:
 19097 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19098 ;; Tracked objects:
 19099 ;;		On entry : 3F/0
 19100 ;;		On exit  : 3F/0
 19101 ;;		Unchanged: 0/0
 19102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19103 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19104 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19105 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19106 ;;      Totals:        13       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19107 ;;Total ram usage:       21 bytes
 19108 ;; Hardware stack levels used: 1
 19109 ;; Hardware stack levels required when called: 13
 19110 ;; This function calls:
 19111 ;;		_i2c_readDataBlock
 19112 ;; This function is called by:
 19113 ;;		_keeloqDecryptPacket
 19114 ;;		_DecryptPacket_12BIT
 19115 ;;		_controlSelectRemote
 19116 ;; This function uses a non-reentrant model
 19117 ;;
 19118                           
 19119                           	psect	text71
 19120  0054E6                     __ptext71:
 19121                           	callstack 0
 19122  0054E6                     _validateRemoteSerialNumber:
 19123                           	callstack 14
 19124                           
 19125                           ; BSR set to: 0
 19126                           ;controlMemory_MC50.c: 29:     char j=0;
 19127                           
 19128                           ; BSR set to: 0
 19129                           ;incstack = 0
 19130  0054E6  0E00               	movlw	0
 19131  0054E8  6E39               	movwf	validateRemoteSerialNumber@j^0,c
 19132                           
 19133                           ; BSR set to: 0
 19134                           ;controlMemory_MC50.c: 30:     unsigned long mask;;controlMemory_MC50.c: 33:     if(Veri
      +                          fyOnlySerial==YES)
 19135  0054EA  0432               	decf	validateRemoteSerialNumber@VerifyOnlySerial^0,w,c
 19136  0054EC  A4D8               	btfss	status,2,c
 19137  0054EE  D009               	goto	l1436
 19138                           
 19139                           ; BSR set to: 0
 19140                           ;controlMemory_MC50.c: 34:     {;controlMemory_MC50.c: 35:         mask=0x0FFFFFFF;
 19141  0054F0  0EFF               	movlw	255
 19142  0054F2  6E35               	movwf	validateRemoteSerialNumber@mask^0,c
 19143  0054F4  0EFF               	movlw	255
 19144  0054F6  6E36               	movwf	(validateRemoteSerialNumber@mask+1)^0,c
 19145  0054F8  0EFF               	movlw	255
 19146  0054FA  6E37               	movwf	(validateRemoteSerialNumber@mask+2)^0,c
 19147  0054FC  0E0F               	movlw	15
 19148  0054FE  6E38               	movwf	(validateRemoteSerialNumber@mask+3)^0,c
 19149                           
 19150                           ;controlMemory_MC50.c: 36:     }
 19151  005500  D004               	goto	l19532
 19152  005502                     l1436:
 19153                           
 19154                           ; BSR set to: 0
 19155                           ;controlMemory_MC50.c: 38:     {;controlMemory_MC50.c: 39:         mask=0xFFFFFFFF;
 19156  005502  6835               	setf	validateRemoteSerialNumber@mask^0,c
 19157  005504  6836               	setf	(validateRemoteSerialNumber@mask+1)^0,c
 19158  005506  6837               	setf	(validateRemoteSerialNumber@mask+2)^0,c
 19159  005508  6838               	setf	(validateRemoteSerialNumber@mask+3)^0,c
 19160  00550A                     l19532:
 19161                           
 19162                           ; BSR set to: 0
 19163                           ;controlMemory_MC50.c: 42:     for (i=0;i<var_sys_NVM.positionRemotesFull;i++)
 19164  00550A  0E00               	movlw	0
 19165  00550C  6E3A               	movwf	validateRemoteSerialNumber@i^0,c
 19166  00550E  D056               	goto	l19550
 19167  005510                     l19534:
 19168                           
 19169                           ; BSR set to: 0
 19170                           ;controlMemory_MC50.c: 43:     {;controlMemory_MC50.c: 44:         if(i%4==0)
 19171  005510  C03A  F0D8         	movff	validateRemoteSerialNumber@i,??_validateRemoteSerialNumber
 19172  005514  0E03               	movlw	3
 19173  005516  17D8               	andwf	??_validateRemoteSerialNumber& (0+255),f,b
 19174  005518  A4D8               	btfss	status,2,c
 19175  00551A  D01C               	goto	l19540
 19176                           
 19177                           ; BSR set to: 0
 19178                           ;controlMemory_MC50.c: 45:         {;controlMemory_MC50.c: 46:             j=0;
 19179  00551C  0E00               	movlw	0
 19180  00551E  6E39               	movwf	validateRemoteSerialNumber@j^0,c
 19181                           
 19182                           ; BSR set to: 0
 19183                           ;controlMemory_MC50.c: 48:             i2c_readDataBlock(0x50, (uint16_t)(0x0200 + (i * 
      +                          4)),(char*)memoryTEMP, 16);
 19184  005520  503A               	movf	validateRemoteSerialNumber@i^0,w,c
 19185  005522  6FD8               	movwf	??_validateRemoteSerialNumber& (0+255),b
 19186  005524  6BD9               	clrf	(??_validateRemoteSerialNumber+1)& (0+255),b
 19187  005526  90D8               	bcf	status,0,c
 19188  005528  37D8               	rlcf	??_validateRemoteSerialNumber& (0+255),f,b
 19189  00552A  37D9               	rlcf	(??_validateRemoteSerialNumber+1)& (0+255),f,b
 19190  00552C  90D8               	bcf	status,0,c
 19191  00552E  37D8               	rlcf	??_validateRemoteSerialNumber& (0+255),f,b
 19192  005530  37D9               	rlcf	(??_validateRemoteSerialNumber+1)& (0+255),f,b
 19193  005532  0E00               	movlw	0
 19194  005534  25D8               	addwf	??_validateRemoteSerialNumber& (0+255),w,b
 19195  005536  6E22               	movwf	i2c_readDataBlock@reg^0,c
 19196  005538  0E02               	movlw	2
 19197  00553A  21D9               	addwfc	(??_validateRemoteSerialNumber+1)& (0+255),w,b
 19198  00553C  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 19199  00553E  0EA2               	movlw	low _memoryTEMP
 19200  005540  6E24               	movwf	i2c_readDataBlock@data^0,c
 19201  005542  0E02               	movlw	high _memoryTEMP
 19202  005544  6E25               	movwf	(i2c_readDataBlock@data+1)^0,c
 19203  005546  0E00               	movlw	0
 19204  005548  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 19205  00554A  0E10               	movlw	16
 19206  00554C  6E26               	movwf	i2c_readDataBlock@len^0,c
 19207  00554E  0E50               	movlw	80
 19208  005550  ECCC  F03E         	call	_i2c_readDataBlock
 19209  005554                     l19540:
 19210                           
 19211                           ;controlMemory_MC50.c: 50:         if((unsigned long)serial==((unsigned long)memoryTEMP[
      +                          j]&mask))
 19212  005554  5039               	movf	validateRemoteSerialNumber@j^0,w,c
 19213  005556  0D04               	mullw	4
 19214  005558  0EA2               	movlw	low _memoryTEMP
 19215  00555A  24F3               	addwf	243,w,c
 19216  00555C  6ED9               	movwf	fsr2l,c
 19217  00555E  0E02               	movlw	high _memoryTEMP
 19218  005560  20F4               	addwfc	prodh,w,c
 19219  005562  6EDA               	movwf	fsr2h,c
 19220  005564  CFDE F0D8          	movff	postinc2,??_validateRemoteSerialNumber
 19221  005568  CFDE F0D9          	movff	postinc2,??_validateRemoteSerialNumber+1
 19222  00556C  CFDE F0DA          	movff	postinc2,??_validateRemoteSerialNumber+2
 19223  005570  CFDE F0DB          	movff	postinc2,??_validateRemoteSerialNumber+3
 19224  005574  5035               	movf	validateRemoteSerialNumber@mask^0,w,c
 19225  005576  0100               	movlb	0	; () banked
 19226  005578  15D8               	andwf	??_validateRemoteSerialNumber& (0+255),w,b
 19227  00557A  6FDC               	movwf	(??_validateRemoteSerialNumber+4)& (0+255),b
 19228  00557C  5036               	movf	(validateRemoteSerialNumber@mask+1)^0,w,c
 19229  00557E  15D9               	andwf	(??_validateRemoteSerialNumber+1)& (0+255),w,b
 19230  005580  6FDD               	movwf	(??_validateRemoteSerialNumber+5)& (0+255),b
 19231  005582  5037               	movf	(validateRemoteSerialNumber@mask+2)^0,w,c
 19232  005584  15DA               	andwf	(??_validateRemoteSerialNumber+2)& (0+255),w,b
 19233  005586  6FDE               	movwf	(??_validateRemoteSerialNumber+6)& (0+255),b
 19234  005588  5038               	movf	(validateRemoteSerialNumber@mask+3)^0,w,c
 19235  00558A  15DB               	andwf	(??_validateRemoteSerialNumber+3)& (0+255),w,b
 19236  00558C  6FDF               	movwf	(??_validateRemoteSerialNumber+7)& (0+255),b
 19237  00558E  502E               	movf	validateRemoteSerialNumber@serial^0,w,c
 19238  005590  19DC               	xorwf	(??_validateRemoteSerialNumber+4)& (0+255),w,b
 19239  005592  E112               	bnz	l19548
 19240  005594  502F               	movf	(validateRemoteSerialNumber@serial+1)^0,w,c
 19241  005596  19DD               	xorwf	(??_validateRemoteSerialNumber+5)& (0+255),w,b
 19242  005598  E10F               	bnz	l19548
 19243  00559A  5030               	movf	(validateRemoteSerialNumber@serial+2)^0,w,c
 19244  00559C  19DE               	xorwf	(??_validateRemoteSerialNumber+6)& (0+255),w,b
 19245  00559E  E10C               	bnz	l19548
 19246  0055A0  5031               	movf	(validateRemoteSerialNumber@serial+3)^0,w,c
 19247  0055A2  19DF               	xorwf	(??_validateRemoteSerialNumber+7)& (0+255),w,b
 19248  0055A4  A4D8               	btfss	status,2,c
 19249  0055A6  D008               	goto	l19548
 19250                           
 19251                           ; BSR set to: 0
 19252                           ;controlMemory_MC50.c: 51:         {;controlMemory_MC50.c: 53:             position[0]=i
      +                          ;
 19253  0055A8  C033  FFD9         	movff	validateRemoteSerialNumber@position,fsr2l
 19254  0055AC  C034  FFDA         	movff	validateRemoteSerialNumber@position+1,fsr2h
 19255  0055B0  C03A  FFDF         	movff	validateRemoteSerialNumber@i,indf2
 19256                           
 19257                           ; BSR set to: 0
 19258                           ;controlMemory_MC50.c: 54:             return TypeFull;
 19259  0055B4  0E01               	movlw	1
 19260  0055B6  0012               	return	
 19261  0055B8                     l19548:
 19262                           
 19263                           ; BSR set to: 0
 19264                           ;controlMemory_MC50.c: 57:         j++;
 19265  0055B8  2A39               	incf	validateRemoteSerialNumber@j^0,f,c
 19266                           
 19267                           ;controlMemory_MC50.c: 59:     }
 19268  0055BA  2A3A               	incf	validateRemoteSerialNumber@i^0,f,c
 19269  0055BC                     l19550:
 19270                           
 19271                           ; BSR set to: 0
 19272  0055BC  51B8               	movf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
 19273  0055BE  5C3A               	subwf	validateRemoteSerialNumber@i^0,w,c
 19274  0055C0  A0D8               	btfss	status,0,c
 19275  0055C2  D7A6               	goto	l19534
 19276                           
 19277                           ; BSR set to: 0
 19278                           ;controlMemory_MC50.c: 61:     for (i=0;i<var_sys_NVM.positionRemotesWalk;i++)
 19279  0055C4  0E00               	movlw	0
 19280  0055C6  6E3A               	movwf	validateRemoteSerialNumber@i^0,c
 19281  0055C8  D056               	goto	l19570
 19282  0055CA                     l19554:
 19283                           
 19284                           ; BSR set to: 0
 19285                           ;controlMemory_MC50.c: 62:     {;controlMemory_MC50.c: 63:         if(i%4==0)
 19286  0055CA  C03A  F0D8         	movff	validateRemoteSerialNumber@i,??_validateRemoteSerialNumber
 19287  0055CE  0E03               	movlw	3
 19288  0055D0  17D8               	andwf	??_validateRemoteSerialNumber& (0+255),f,b
 19289  0055D2  A4D8               	btfss	status,2,c
 19290  0055D4  D01C               	goto	l19560
 19291                           
 19292                           ; BSR set to: 0
 19293                           ;controlMemory_MC50.c: 64:         {;controlMemory_MC50.c: 65:             j=0;
 19294  0055D6  0E00               	movlw	0
 19295  0055D8  6E39               	movwf	validateRemoteSerialNumber@j^0,c
 19296                           
 19297                           ; BSR set to: 0
 19298                           ;controlMemory_MC50.c: 66:             i2c_readDataBlock(0x50, (uint16_t)(0x0500 + (i * 
      +                          4)),(char*)memoryTEMP, 16);
 19299  0055DA  503A               	movf	validateRemoteSerialNumber@i^0,w,c
 19300  0055DC  6FD8               	movwf	??_validateRemoteSerialNumber& (0+255),b
 19301  0055DE  6BD9               	clrf	(??_validateRemoteSerialNumber+1)& (0+255),b
 19302  0055E0  90D8               	bcf	status,0,c
 19303  0055E2  37D8               	rlcf	??_validateRemoteSerialNumber& (0+255),f,b
 19304  0055E4  37D9               	rlcf	(??_validateRemoteSerialNumber+1)& (0+255),f,b
 19305  0055E6  90D8               	bcf	status,0,c
 19306  0055E8  37D8               	rlcf	??_validateRemoteSerialNumber& (0+255),f,b
 19307  0055EA  37D9               	rlcf	(??_validateRemoteSerialNumber+1)& (0+255),f,b
 19308  0055EC  0E00               	movlw	0
 19309  0055EE  25D8               	addwf	??_validateRemoteSerialNumber& (0+255),w,b
 19310  0055F0  6E22               	movwf	i2c_readDataBlock@reg^0,c
 19311  0055F2  0E05               	movlw	5
 19312  0055F4  21D9               	addwfc	(??_validateRemoteSerialNumber+1)& (0+255),w,b
 19313  0055F6  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 19314  0055F8  0EA2               	movlw	low _memoryTEMP
 19315  0055FA  6E24               	movwf	i2c_readDataBlock@data^0,c
 19316  0055FC  0E02               	movlw	high _memoryTEMP
 19317  0055FE  6E25               	movwf	(i2c_readDataBlock@data+1)^0,c
 19318  005600  0E00               	movlw	0
 19319  005602  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 19320  005604  0E10               	movlw	16
 19321  005606  6E26               	movwf	i2c_readDataBlock@len^0,c
 19322  005608  0E50               	movlw	80
 19323  00560A  ECCC  F03E         	call	_i2c_readDataBlock
 19324  00560E                     l19560:
 19325                           
 19326                           ;controlMemory_MC50.c: 69:         if((unsigned long)serial==((unsigned long)memoryTEMP[
      +                          j]&mask))
 19327  00560E  5039               	movf	validateRemoteSerialNumber@j^0,w,c
 19328  005610  0D04               	mullw	4
 19329  005612  0EA2               	movlw	low _memoryTEMP
 19330  005614  24F3               	addwf	243,w,c
 19331  005616  6ED9               	movwf	fsr2l,c
 19332  005618  0E02               	movlw	high _memoryTEMP
 19333  00561A  20F4               	addwfc	prodh,w,c
 19334  00561C  6EDA               	movwf	fsr2h,c
 19335  00561E  CFDE F0D8          	movff	postinc2,??_validateRemoteSerialNumber
 19336  005622  CFDE F0D9          	movff	postinc2,??_validateRemoteSerialNumber+1
 19337  005626  CFDE F0DA          	movff	postinc2,??_validateRemoteSerialNumber+2
 19338  00562A  CFDE F0DB          	movff	postinc2,??_validateRemoteSerialNumber+3
 19339  00562E  5035               	movf	validateRemoteSerialNumber@mask^0,w,c
 19340  005630  0100               	movlb	0	; () banked
 19341  005632  15D8               	andwf	??_validateRemoteSerialNumber& (0+255),w,b
 19342  005634  6FDC               	movwf	(??_validateRemoteSerialNumber+4)& (0+255),b
 19343  005636  5036               	movf	(validateRemoteSerialNumber@mask+1)^0,w,c
 19344  005638  15D9               	andwf	(??_validateRemoteSerialNumber+1)& (0+255),w,b
 19345  00563A  6FDD               	movwf	(??_validateRemoteSerialNumber+5)& (0+255),b
 19346  00563C  5037               	movf	(validateRemoteSerialNumber@mask+2)^0,w,c
 19347  00563E  15DA               	andwf	(??_validateRemoteSerialNumber+2)& (0+255),w,b
 19348  005640  6FDE               	movwf	(??_validateRemoteSerialNumber+6)& (0+255),b
 19349  005642  5038               	movf	(validateRemoteSerialNumber@mask+3)^0,w,c
 19350  005644  15DB               	andwf	(??_validateRemoteSerialNumber+3)& (0+255),w,b
 19351  005646  6FDF               	movwf	(??_validateRemoteSerialNumber+7)& (0+255),b
 19352  005648  502E               	movf	validateRemoteSerialNumber@serial^0,w,c
 19353  00564A  19DC               	xorwf	(??_validateRemoteSerialNumber+4)& (0+255),w,b
 19354  00564C  E112               	bnz	l19568
 19355  00564E  502F               	movf	(validateRemoteSerialNumber@serial+1)^0,w,c
 19356  005650  19DD               	xorwf	(??_validateRemoteSerialNumber+5)& (0+255),w,b
 19357  005652  E10F               	bnz	l19568
 19358  005654  5030               	movf	(validateRemoteSerialNumber@serial+2)^0,w,c
 19359  005656  19DE               	xorwf	(??_validateRemoteSerialNumber+6)& (0+255),w,b
 19360  005658  E10C               	bnz	l19568
 19361  00565A  5031               	movf	(validateRemoteSerialNumber@serial+3)^0,w,c
 19362  00565C  19DF               	xorwf	(??_validateRemoteSerialNumber+7)& (0+255),w,b
 19363  00565E  A4D8               	btfss	status,2,c
 19364  005660  D008               	goto	l19568
 19365                           
 19366                           ; BSR set to: 0
 19367                           ;controlMemory_MC50.c: 70:         {;controlMemory_MC50.c: 72:             position[0]=i
      +                          ;
 19368  005662  C033  FFD9         	movff	validateRemoteSerialNumber@position,fsr2l
 19369  005666  C034  FFDA         	movff	validateRemoteSerialNumber@position+1,fsr2h
 19370  00566A  C03A  FFDF         	movff	validateRemoteSerialNumber@i,indf2
 19371                           
 19372                           ; BSR set to: 0
 19373                           ;controlMemory_MC50.c: 73:             return TypeWalk;
 19374  00566E  0E02               	movlw	2
 19375  005670  0012               	return	
 19376  005672                     l19568:
 19377                           
 19378                           ; BSR set to: 0
 19379                           ;controlMemory_MC50.c: 75:         j++;
 19380  005672  2A39               	incf	validateRemoteSerialNumber@j^0,f,c
 19381                           
 19382                           ;controlMemory_MC50.c: 76:     }
 19383  005674  2A3A               	incf	validateRemoteSerialNumber@i^0,f,c
 19384  005676                     l19570:
 19385                           
 19386                           ; BSR set to: 0
 19387  005676  51B9               	movf	(_var_sys_NVM+33)& (0+255),w,b	;volatile
 19388  005678  5C3A               	subwf	validateRemoteSerialNumber@i^0,w,c
 19389  00567A  A0D8               	btfss	status,0,c
 19390  00567C  D7A6               	goto	l19554
 19391                           
 19392                           ; BSR set to: 0
 19393                           ;controlMemory_MC50.c: 78:     return NoCMD;
 19394  00567E  0E00               	movlw	0
 19395                           
 19396                           ; BSR set to: 0
 19397  005680  0012               	return		;funcret
 19398  005682                     __end_of_validateRemoteSerialNumber:
 19399                           	callstack 0
 19400                           
 19401 ;; *************** function _readInputs *****************
 19402 ;; Defined at:
 19403 ;;		line 528 in file "inputs_MC50.c"
 19404 ;; Parameters:    Size  Location     Type
 19405 ;;		None
 19406 ;; Auto vars:     Size  Location     Type
 19407 ;;		None
 19408 ;; Return value:  Size  Location     Type
 19409 ;;                  1    wreg      void 
 19410 ;; Registers used:
 19411 ;;		wreg, status,2, status,0
 19412 ;; Tracked objects:
 19413 ;;		On entry : 3F/1
 19414 ;;		On exit  : 3E/0
 19415 ;;		Unchanged: 0/0
 19416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19420 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19421 ;;Total ram usage:        0 bytes
 19422 ;; Hardware stack levels used: 1
 19423 ;; Hardware stack levels required when called: 4
 19424 ;; This function calls:
 19425 ;;		Nothing
 19426 ;; This function is called by:
 19427 ;;		_main
 19428 ;; This function uses a non-reentrant model
 19429 ;;
 19430                           
 19431                           	psect	text72
 19432  0067E0                     __ptext72:
 19433                           	callstack 0
 19434  0067E0                     _readInputs:
 19435                           	callstack 26
 19436                           
 19437                           ; BSR set to: 1
 19438                           ;inputs_MC50.c: 533:     if(var_sys_NVM.Direction_motor == 0){fimdecurso.FimdeCursoClose
      +                          AUX=PORTAbits.RA1;}
 19439                           
 19440                           ; BSR set to: 0
 19441                           ;incstack = 0
 19442  0067E0  0100               	movlb	0	; () banked
 19443  0067E2  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 19444  0067E4  A4D8               	btfss	status,2,c
 19445  0067E6  D006               	goto	l16596
 19446                           
 19447                           ; BSR set to: 0
 19448  0067E8  0E00               	movlw	0
 19449  0067EA  B28D               	btfsc	141,1,c	;volatile
 19450  0067EC  0E01               	movlw	1
 19451  0067EE  0101               	movlb	1	; () banked
 19452  0067F0  6F78               	movwf	(_fimdecurso+3)& (0+255),b	;volatile
 19453  0067F2  D005               	goto	l16598
 19454  0067F4                     l16596:
 19455                           
 19456                           ; BSR set to: 0
 19457  0067F4  0E00               	movlw	0
 19458  0067F6  B48D               	btfsc	141,2,c	;volatile
 19459  0067F8  0E01               	movlw	1
 19460  0067FA  0101               	movlb	1	; () banked
 19461  0067FC  6F78               	movwf	(_fimdecurso+3)& (0+255),b	;volatile
 19462  0067FE                     l16598:
 19463                           
 19464                           ; BSR set to: 1
 19465                           ;inputs_MC50.c: 541:     if (fimdecurso.FimdeCursoCloseAUX==fimdecurso.FimdeCursoCloseOL
      +                          D)
 19466  0067FE  5179               	movf	(_fimdecurso+4)& (0+255),w,b	;volatile
 19467  006800  1978               	xorwf	(_fimdecurso+3)& (0+255),w,b	;volatile
 19468  006802  A4D8               	btfss	status,2,c
 19469  006804  D002               	goto	l1726
 19470                           
 19471                           ; BSR set to: 1
 19472                           ;inputs_MC50.c: 542:     {;inputs_MC50.c: 543:            fimdecurso.FimdeCursoCloseTime
      +                          r++;
 19473  006806  2B7A               	incf	(_fimdecurso+5)& (0+255),f,b	;volatile
 19474                           
 19475                           ;inputs_MC50.c: 544:     }
 19476  006808  D004               	goto	l1727
 19477  00680A                     l1726:
 19478                           
 19479                           ; BSR set to: 1
 19480                           ;inputs_MC50.c: 547:     {;inputs_MC50.c: 548:             fimdecurso.FimdeCursoCloseOLD
      +                           = fimdecurso.FimdeCursoCloseAUX;
 19481  00680A  C178  F179         	movff	_fimdecurso+3,_fimdecurso+4	;volatile
 19482                           
 19483                           ; BSR set to: 1
 19484                           ;inputs_MC50.c: 549:             fimdecurso.FimdeCursoCloseTimer=0;
 19485  00680E  0E00               	movlw	0
 19486  006810  6F7A               	movwf	(_fimdecurso+5)& (0+255),b	;volatile
 19487  006812                     l1727:
 19488                           
 19489                           ; BSR set to: 1
 19490                           ;inputs_MC50.c: 553:     if (fimdecurso.FimdeCursoCloseTimer>=( 50/50))
 19491  006812  517A               	movf	(_fimdecurso+5)& (0+255),w,b	;volatile
 19492  006814  A4D8               	btfss	status,2,c
 19493                           
 19494                           ; BSR set to: 1
 19495                           ;inputs_MC50.c: 554:     {;inputs_MC50.c: 555:         var_sys.FimCurso_CloseIsEnabled=f
      +                          imdecurso.FimdeCursoCloseAUX;
 19496  006816  C178  F103         	movff	_fimdecurso+3,_var_sys+3	;volatile
 19497                           
 19498                           ; BSR set to: 1
 19499                           ;inputs_MC50.c: 564:     if(var_sys_NVM.Direction_motor == 0){fimdecurso.FimdeCursoOpenA
      +                          UX=PORTAbits.RA2;}
 19500  00681A  0100               	movlb	0	; () banked
 19501  00681C  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 19502  00681E  A4D8               	btfss	status,2,c
 19503  006820  D006               	goto	l16610
 19504                           
 19505                           ; BSR set to: 0
 19506  006822  0E00               	movlw	0
 19507  006824  B48D               	btfsc	141,2,c	;volatile
 19508  006826  0E01               	movlw	1
 19509  006828  0101               	movlb	1	; () banked
 19510  00682A  6F75               	movwf	_fimdecurso& (0+255),b	;volatile
 19511  00682C  D005               	goto	l16612
 19512  00682E                     l16610:
 19513                           
 19514                           ; BSR set to: 0
 19515  00682E  0E00               	movlw	0
 19516  006830  B28D               	btfsc	141,1,c	;volatile
 19517  006832  0E01               	movlw	1
 19518  006834  0101               	movlb	1	; () banked
 19519  006836  6F75               	movwf	_fimdecurso& (0+255),b	;volatile
 19520  006838                     l16612:
 19521                           
 19522                           ; BSR set to: 1
 19523                           ;inputs_MC50.c: 570:     if (fimdecurso.FimdeCursoOpenAUX==fimdecurso.FimdeCursoOpenOLD)
 19524  006838  5175               	movf	_fimdecurso& (0+255),w,b	;volatile
 19525  00683A  1976               	xorwf	(_fimdecurso+1)& (0+255),w,b	;volatile
 19526  00683C  A4D8               	btfss	status,2,c
 19527  00683E  D002               	goto	l1731
 19528                           
 19529                           ; BSR set to: 1
 19530                           ;inputs_MC50.c: 571:     {;inputs_MC50.c: 572:            fimdecurso.FimdeCursoOpenTimer
      +                          ++;
 19531  006840  2B77               	incf	(_fimdecurso+2)& (0+255),f,b	;volatile
 19532                           
 19533                           ;inputs_MC50.c: 573:     }
 19534  006842  D004               	goto	l1732
 19535  006844                     l1731:
 19536                           
 19537                           ; BSR set to: 1
 19538                           ;inputs_MC50.c: 576:     {;inputs_MC50.c: 577:             fimdecurso.FimdeCursoOpenOLD 
      +                          = fimdecurso.FimdeCursoOpenAUX;
 19539  006844  C175  F176         	movff	_fimdecurso,_fimdecurso+1	;volatile
 19540                           
 19541                           ; BSR set to: 1
 19542                           ;inputs_MC50.c: 578:             fimdecurso.FimdeCursoOpenTimer=0;
 19543  006848  0E00               	movlw	0
 19544  00684A  6F77               	movwf	(_fimdecurso+2)& (0+255),b	;volatile
 19545  00684C                     l1732:
 19546                           
 19547                           ; BSR set to: 1
 19548                           ;inputs_MC50.c: 582:     if (fimdecurso.FimdeCursoOpenTimer>=( 50/50))
 19549  00684C  5177               	movf	(_fimdecurso+2)& (0+255),w,b	;volatile
 19550  00684E  A4D8               	btfss	status,2,c
 19551                           
 19552                           ; BSR set to: 1
 19553                           ;inputs_MC50.c: 583:     {;inputs_MC50.c: 584:         var_sys.FimCurso_OpenIsEnabled=fi
      +                          mdecurso.FimdeCursoOpenAUX;
 19554  006850  C175  F104         	movff	_fimdecurso,_var_sys+4	;volatile
 19555                           
 19556                           ; BSR set to: 1
 19557                           ;inputs_MC50.c: 589:     security.PhotoCellAUX=PORTAbits.RA4;
 19558  006854  0E00               	movlw	0
 19559  006856  B88D               	btfsc	141,4,c	;volatile
 19560  006858  0E01               	movlw	1
 19561  00685A  6F6A               	movwf	_security& (0+255),b	;volatile
 19562                           
 19563                           ; BSR set to: 1
 19564                           ;inputs_MC50.c: 594:     if (security.PhotoCellAUX==security.PhotoCellOLD)
 19565  00685C  516A               	movf	_security& (0+255),w,b	;volatile
 19566  00685E  196B               	xorwf	(_security+1)& (0+255),w,b	;volatile
 19567  006860  A4D8               	btfss	status,2,c
 19568  006862  D002               	goto	l1734
 19569                           
 19570                           ; BSR set to: 1
 19571                           ;inputs_MC50.c: 595:     {;inputs_MC50.c: 596:            security.PhotoCellTimer++;
 19572  006864  2B6C               	incf	(_security+2)& (0+255),f,b	;volatile
 19573                           
 19574                           ;inputs_MC50.c: 597:     }
 19575  006866  D004               	goto	l1735
 19576  006868                     l1734:
 19577                           
 19578                           ; BSR set to: 1
 19579                           ;inputs_MC50.c: 600:     {;inputs_MC50.c: 601:             security.PhotoCellOLD = secur
      +                          ity.PhotoCellAUX;
 19580  006868  C16A  F16B         	movff	_security,_security+1	;volatile
 19581                           
 19582                           ; BSR set to: 1
 19583                           ;inputs_MC50.c: 602:             security.PhotoCellTimer=0;
 19584  00686C  0E00               	movlw	0
 19585  00686E  6F6C               	movwf	(_security+2)& (0+255),b	;volatile
 19586  006870                     l1735:
 19587                           
 19588                           ; BSR set to: 1
 19589                           ;inputs_MC50.c: 606:     if (security.PhotoCellTimer>=( 50/50))
 19590  006870  516C               	movf	(_security+2)& (0+255),w,b	;volatile
 19591  006872  A4D8               	btfss	status,2,c
 19592                           
 19593                           ; BSR set to: 1
 19594                           ;inputs_MC50.c: 607:     {;inputs_MC50.c: 608:         var_sys.photoCellIsObstructed=sec
      +                          urity.PhotoCellAUX;
 19595  006874  C16A  F101         	movff	_security,_var_sys+1	;volatile
 19596                           
 19597                           ; BSR set to: 1
 19598                           ;inputs_MC50.c: 612:     security.SecurityBarAUX=PORTAbits.RA5;
 19599  006878  0E00               	movlw	0
 19600  00687A  BA8D               	btfsc	141,5,c	;volatile
 19601  00687C  0E01               	movlw	1
 19602  00687E  6F6D               	movwf	(_security+3)& (0+255),b	;volatile
 19603                           
 19604                           ; BSR set to: 1
 19605                           ;inputs_MC50.c: 616:     if (security.SecurityBarAUX==security.SecurityBarOLD)
 19606  006880  516E               	movf	(_security+4)& (0+255),w,b	;volatile
 19607  006882  196D               	xorwf	(_security+3)& (0+255),w,b	;volatile
 19608  006884  A4D8               	btfss	status,2,c
 19609  006886  D002               	goto	l1737
 19610                           
 19611                           ; BSR set to: 1
 19612                           ;inputs_MC50.c: 617:     {;inputs_MC50.c: 618:            security.SecurityBarTimer++;
 19613  006888  2B6F               	incf	(_security+5)& (0+255),f,b	;volatile
 19614                           
 19615                           ;inputs_MC50.c: 619:     }
 19616  00688A  D004               	goto	l1738
 19617  00688C                     l1737:
 19618                           
 19619                           ; BSR set to: 1
 19620                           ;inputs_MC50.c: 622:     {;inputs_MC50.c: 623:             security.SecurityBarOLD = sec
      +                          urity.SecurityBarAUX;
 19621  00688C  C16D  F16E         	movff	_security+3,_security+4	;volatile
 19622                           
 19623                           ; BSR set to: 1
 19624                           ;inputs_MC50.c: 624:             security.SecurityBarTimer=0;
 19625  006890  0E00               	movlw	0
 19626  006892  6F6F               	movwf	(_security+5)& (0+255),b	;volatile
 19627  006894                     l1738:
 19628                           
 19629                           ; BSR set to: 1
 19630                           ;inputs_MC50.c: 628:     if (security.SecurityBarTimer>=( 50/50))
 19631  006894  516F               	movf	(_security+5)& (0+255),w,b	;volatile
 19632  006896  A4D8               	btfss	status,2,c
 19633                           
 19634                           ; BSR set to: 1
 19635                           ;inputs_MC50.c: 629:     {;inputs_MC50.c: 630:         security.SecurityBarSTATE=securit
      +                          y.SecurityBarAUX;
 19636  006898  C16D  F170         	movff	_security+3,_security+6	;volatile
 19637                           
 19638                           ; BSR set to: 1
 19639                           ;inputs_MC50.c: 633:     security.SecurityBar8K2AUX=PORTAbits.RA6;
 19640  00689C  0E00               	movlw	0
 19641  00689E  BC8D               	btfsc	141,6,c	;volatile
 19642  0068A0  0E01               	movlw	1
 19643  0068A2  6F71               	movwf	(_security+7)& (0+255),b	;volatile
 19644                           
 19645                           ; BSR set to: 1
 19646                           ;inputs_MC50.c: 637:     if (security.SecurityBar8K2AUX==security.SecurityBar8K2OLD)
 19647  0068A4  5172               	movf	(_security+8)& (0+255),w,b	;volatile
 19648  0068A6  1971               	xorwf	(_security+7)& (0+255),w,b	;volatile
 19649  0068A8  A4D8               	btfss	status,2,c
 19650  0068AA  D002               	goto	l1740
 19651                           
 19652                           ; BSR set to: 1
 19653                           ;inputs_MC50.c: 638:     {;inputs_MC50.c: 639:            security.SecurityBar8K2Timer++
      +                          ;
 19654  0068AC  2B73               	incf	(_security+9)& (0+255),f,b	;volatile
 19655                           
 19656                           ;inputs_MC50.c: 640:     }
 19657  0068AE  D004               	goto	l1741
 19658  0068B0                     l1740:
 19659                           
 19660                           ; BSR set to: 1
 19661                           ;inputs_MC50.c: 643:     {;inputs_MC50.c: 644:             security.SecurityBar8K2OLD = 
      +                          security.SecurityBar8K2AUX;
 19662  0068B0  C171  F172         	movff	_security+7,_security+8	;volatile
 19663                           
 19664                           ; BSR set to: 1
 19665                           ;inputs_MC50.c: 645:             security.SecurityBar8K2Timer=0;
 19666  0068B4  0E00               	movlw	0
 19667  0068B6  6F73               	movwf	(_security+9)& (0+255),b	;volatile
 19668  0068B8                     l1741:
 19669                           
 19670                           ; BSR set to: 1
 19671                           ;inputs_MC50.c: 649:     if (security.SecurityBar8K2Timer>=( 50/50))
 19672  0068B8  5173               	movf	(_security+9)& (0+255),w,b	;volatile
 19673  0068BA  A4D8               	btfss	status,2,c
 19674                           
 19675                           ; BSR set to: 1
 19676                           ;inputs_MC50.c: 650:     {;inputs_MC50.c: 651:         security.SecurityBar8K2STATE=secu
      +                          rity.SecurityBar8K2AUX;
 19677  0068BC  C171  F174         	movff	_security+7,_security+10	;volatile
 19678                           
 19679                           ; BSR set to: 1
 19680                           ;inputs_MC50.c: 655:     if (var_sys_NVM.securityBandType == 0)
 19681  0068C0  0100               	movlb	0	; () banked
 19682  0068C2  51A2               	movf	(_var_sys_NVM+10)& (0+255),w,b	;volatile
 19683  0068C4  A4D8               	btfss	status,2,c
 19684  0068C6  D00D               	goto	l1743
 19685                           
 19686                           ; BSR set to: 0
 19687                           ;inputs_MC50.c: 656:     {;inputs_MC50.c: 657:         if(security.SecurityBarSTATE==0 &
      +                          & security.SecurityBar8K2STATE==1)
 19688  0068C8  0101               	movlb	1	; () banked
 19689  0068CA  5170               	movf	(_security+6)& (0+255),w,b	;volatile
 19690  0068CC  A4D8               	btfss	status,2,c
 19691  0068CE  D006               	goto	l16658
 19692                           
 19693                           ; BSR set to: 1
 19694  0068D0  0574               	decf	(_security+10)& (0+255),w,b	;volatile
 19695  0068D2  A4D8               	btfss	status,2,c
 19696  0068D4  D003               	goto	l16658
 19697                           
 19698                           ; BSR set to: 1
 19699                           ;inputs_MC50.c: 658:         {;inputs_MC50.c: 659:             var_sys.SecurityBarIsObst
      +                          ructed = NO;
 19700  0068D6  0E00               	movlw	0
 19701  0068D8  6F02               	movwf	(_var_sys+2)& (0+255),b	;volatile
 19702                           
 19703                           ;inputs_MC50.c: 660:         }
 19704  0068DA  0012               	return	
 19705  0068DC                     l16658:
 19706                           
 19707                           ; BSR set to: 1
 19708                           ;inputs_MC50.c: 662:         {;inputs_MC50.c: 663:             var_sys.SecurityBarIsObst
      +                          ructed = YES;
 19709  0068DC  0E01               	movlw	1
 19710  0068DE  6F02               	movwf	(_var_sys+2)& (0+255),b	;volatile
 19711  0068E0  0012               	return	
 19712  0068E2                     l1743:
 19713                           
 19714                           ; BSR set to: 0
 19715                           ;inputs_MC50.c: 667:     {;inputs_MC50.c: 668:         var_sys.SecurityBarIsObstructed =
      +                           security.SecurityBarSTATE;
 19716  0068E2  C170  F102         	movff	_security+6,_var_sys+2	;volatile
 19717  0068E6  0012               	return		;funcret
 19718  0068E8                     __end_of_readInputs:
 19719                           	callstack 0
 19720                           
 19721 ;; *************** function _loadNVM_VarSystem *****************
 19722 ;; Defined at:
 19723 ;;		line 139 in file "controlMemory_MC50.c"
 19724 ;; Parameters:    Size  Location     Type
 19725 ;;		None
 19726 ;; Auto vars:     Size  Location     Type
 19727 ;;		None
 19728 ;; Return value:  Size  Location     Type
 19729 ;;                  1    wreg      void 
 19730 ;; Registers used:
 19731 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19732 ;; Tracked objects:
 19733 ;;		On entry : 3F/0
 19734 ;;		On exit  : 0/0
 19735 ;;		Unchanged: 0/0
 19736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19738 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19740 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19741 ;;Total ram usage:        0 bytes
 19742 ;; Hardware stack levels used: 1
 19743 ;; Hardware stack levels required when called: 15
 19744 ;; This function calls:
 19745 ;;		_I2C1_Read1ByteRegister
 19746 ;;		_ResetDefaultMemory
 19747 ;;		_SaveNVM_VarSystem
 19748 ;;		_checkNVM_VarSystem
 19749 ;;		_i2c_readDataBlock
 19750 ;; This function is called by:
 19751 ;;		_main
 19752 ;; This function uses a non-reentrant model
 19753 ;;
 19754                           
 19755                           	psect	text73
 19756  006248                     __ptext73:
 19757                           	callstack 0
 19758  006248                     _loadNVM_VarSystem:
 19759                           	callstack 15
 19760                           
 19761                           ; BSR set to: 0
 19762                           ;controlMemory_MC50.c: 141:     if((I2C1_Read1ByteRegister(0x50, 0) == 0xFF) && (I2C1_Re
      +                          ad1ByteRegister(0x50, 16) == 0xFF))
 19763                           
 19764                           ;incstack = 0
 19765  006248  0E00               	movlw	0
 19766  00624A  6E22               	movwf	I2C1_Read1ByteRegister@reg^0,c
 19767  00624C  0E50               	movlw	80
 19768  00624E  EC78  F041         	call	_I2C1_Read1ByteRegister
 19769  006252  0AFF               	xorlw	255
 19770  006254  A4D8               	btfss	status,2,c
 19771  006256  D04C               	goto	l22638
 19772  006258  0E10               	movlw	16
 19773  00625A  6E22               	movwf	I2C1_Read1ByteRegister@reg^0,c
 19774  00625C  0E50               	movlw	80
 19775  00625E  EC78  F041         	call	_I2C1_Read1ByteRegister
 19776  006262  0AFF               	xorlw	255
 19777  006264  A4D8               	btfss	status,2,c
 19778  006266  D044               	goto	l22638
 19779                           
 19780                           ;controlMemory_MC50.c: 142:     {;controlMemory_MC50.c: 143:         ResetDefaultMemory(
      +                          SC);
 19781  006268  0E00               	movlw	0
 19782  00626A  ECA6  F02D         	call	_ResetDefaultMemory
 19783                           
 19784                           ;controlMemory_MC50.c: 144:         var_sys_NVM.learningTimeToClose = 0;
 19785  00626E  0E00               	movlw	0
 19786  006270  0100               	movlb	0	; () banked
 19787  006272  6FD0               	movwf	(_var_sys_NVM+56)& (0+255),b	;volatile
 19788  006274  0E00               	movlw	0
 19789  006276  6FD1               	movwf	(_var_sys_NVM+57)& (0+255),b	;volatile
 19790  006278  0E00               	movlw	0
 19791  00627A  6FD2               	movwf	(_var_sys_NVM+58)& (0+255),b	;volatile
 19792  00627C  0E00               	movlw	0
 19793  00627E  6FD3               	movwf	(_var_sys_NVM+59)& (0+255),b	;volatile
 19794                           
 19795                           ; BSR set to: 0
 19796                           ;controlMemory_MC50.c: 145:         var_sys_NVM.learningTimeToOpen = 0;
 19797  006280  0E00               	movlw	0
 19798  006282  6FCC               	movwf	(_var_sys_NVM+52)& (0+255),b	;volatile
 19799  006284  0E00               	movlw	0
 19800  006286  6FCD               	movwf	(_var_sys_NVM+53)& (0+255),b	;volatile
 19801  006288  0E00               	movlw	0
 19802  00628A  6FCE               	movwf	(_var_sys_NVM+54)& (0+255),b	;volatile
 19803  00628C  0E00               	movlw	0
 19804  00628E  6FCF               	movwf	(_var_sys_NVM+55)& (0+255),b	;volatile
 19805                           
 19806                           ; BSR set to: 0
 19807                           ;controlMemory_MC50.c: 146:         var_sys_NVM.learningCurrentNormalClose = 0;
 19808  006290  0E00               	movlw	0
 19809  006292  6FC9               	movwf	(_var_sys_NVM+49)& (0+255),b	;volatile
 19810  006294  0E00               	movlw	0
 19811  006296  6FC8               	movwf	(_var_sys_NVM+48)& (0+255),b	;volatile
 19812                           
 19813                           ; BSR set to: 0
 19814                           ;controlMemory_MC50.c: 147:         var_sys_NVM.learningCurrentNormalOpen = 0;
 19815  006298  0E00               	movlw	0
 19816  00629A  6FCB               	movwf	(_var_sys_NVM+51)& (0+255),b	;volatile
 19817  00629C  0E00               	movlw	0
 19818  00629E  6FCA               	movwf	(_var_sys_NVM+50)& (0+255),b	;volatile
 19819                           
 19820                           ; BSR set to: 0
 19821                           ;controlMemory_MC50.c: 148:         var_sys_NVM.learningCurrentDecelarationClose = 0;
 19822  0062A0  0E00               	movlw	0
 19823  0062A2  6FC0               	movwf	(_var_sys_NVM+40)& (0+255),b	;volatile
 19824  0062A4  0E00               	movlw	0
 19825  0062A6  6FC1               	movwf	(_var_sys_NVM+41)& (0+255),b	;volatile
 19826  0062A8  0E00               	movlw	0
 19827  0062AA  6FC2               	movwf	(_var_sys_NVM+42)& (0+255),b	;volatile
 19828  0062AC  0E00               	movlw	0
 19829  0062AE  6FC3               	movwf	(_var_sys_NVM+43)& (0+255),b	;volatile
 19830                           
 19831                           ; BSR set to: 0
 19832                           ;controlMemory_MC50.c: 149:         var_sys_NVM.learningCurrentDecelarationOpen = 0;
 19833  0062B0  0E00               	movlw	0
 19834  0062B2  6FC4               	movwf	(_var_sys_NVM+44)& (0+255),b	;volatile
 19835  0062B4  0E00               	movlw	0
 19836  0062B6  6FC5               	movwf	(_var_sys_NVM+45)& (0+255),b	;volatile
 19837  0062B8  0E00               	movlw	0
 19838  0062BA  6FC6               	movwf	(_var_sys_NVM+46)& (0+255),b	;volatile
 19839  0062BC  0E00               	movlw	0
 19840  0062BE  6FC7               	movwf	(_var_sys_NVM+47)& (0+255),b	;volatile
 19841                           
 19842                           ;controlMemory_MC50.c: 150:         SaveNVM_VarSystem(pageMemoryLearningVars);
 19843  0062C0  0E03               	movlw	3
 19844  0062C2  ECFD  F044         	call	_SaveNVM_VarSystem
 19845                           
 19846                           ;controlMemory_MC50.c: 151:         var_sys_NVM.positionRemotesFull = 0;
 19847  0062C6  0E00               	movlw	0
 19848  0062C8  0100               	movlb	0	; () banked
 19849  0062CA  6FB8               	movwf	(_var_sys_NVM+32)& (0+255),b	;volatile
 19850                           
 19851                           ; BSR set to: 0
 19852                           ;controlMemory_MC50.c: 152:         var_sys_NVM.positionRemotesWalk = 0;
 19853  0062CC  0E00               	movlw	0
 19854  0062CE  6FB9               	movwf	(_var_sys_NVM+33)& (0+255),b	;volatile
 19855                           
 19856                           ; BSR set to: 0
 19857                           ;controlMemory_MC50.c: 153:         var_sys_NVM.OnlyRollingCode = NO;
 19858  0062D0  0E00               	movlw	0
 19859  0062D2  6FBE               	movwf	(_var_sys_NVM+38)& (0+255),b	;volatile
 19860                           
 19861                           ; BSR set to: 0
 19862                           ;controlMemory_MC50.c: 154:         var_sys_NVM.counterMoves = 0;
 19863  0062D4  0E00               	movlw	0
 19864  0062D6  6FBA               	movwf	(_var_sys_NVM+34)& (0+255),b	;volatile
 19865  0062D8  0E00               	movlw	0
 19866  0062DA  6FBB               	movwf	(_var_sys_NVM+35)& (0+255),b	;volatile
 19867  0062DC  0E00               	movlw	0
 19868  0062DE  6FBC               	movwf	(_var_sys_NVM+36)& (0+255),b	;volatile
 19869  0062E0  0E00               	movlw	0
 19870  0062E2  6FBD               	movwf	(_var_sys_NVM+37)& (0+255),b	;volatile
 19871                           
 19872                           ;controlMemory_MC50.c: 155:        SaveNVM_VarSystem(pageMemoryCounters);
 19873  0062E4  0E02               	movlw	2
 19874  0062E6  ECFD  F044         	call	_SaveNVM_VarSystem
 19875                           
 19876                           ;controlMemory_MC50.c: 157:          var_sys_NVM.TypeofMotor = 0;
 19877  0062EA  0E00               	movlw	0
 19878  0062EC  0100               	movlb	0	; () banked
 19879  0062EE  6FB4               	movwf	(_var_sys_NVM+28)& (0+255),b	;volatile
 19880  0062F0                     l22638:
 19881                           
 19882                           ;controlMemory_MC50.c: 160:     i2c_readDataBlock(0x50, (uint16_t)(pageMemoryP * 16),(ch
      +                          ar*)&var_sys_NVM,16);
 19883  0062F0  0E00               	movlw	0
 19884  0062F2  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 19885  0062F4  0E00               	movlw	0
 19886  0062F6  6E22               	movwf	i2c_readDataBlock@reg^0,c
 19887  0062F8  0E98               	movlw	low _var_sys_NVM
 19888  0062FA  6E24               	movwf	i2c_readDataBlock@data^0,c
 19889  0062FC  6A25               	clrf	(i2c_readDataBlock@data+1)^0,c
 19890  0062FE  0E00               	movlw	0
 19891  006300  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 19892  006302  0E10               	movlw	16
 19893  006304  6E26               	movwf	i2c_readDataBlock@len^0,c
 19894  006306  0E50               	movlw	80
 19895  006308  ECCC  F03E         	call	_i2c_readDataBlock
 19896                           
 19897                           ;controlMemory_MC50.c: 161:     i2c_readDataBlock(0x50, (uint16_t)(pageMemoryE * 16),(ch
      +                          ar*)&var_sys_NVM.homemPresente, 16);
 19898  00630C  0E00               	movlw	0
 19899  00630E  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 19900  006310  0E10               	movlw	16
 19901  006312  6E22               	movwf	i2c_readDataBlock@reg^0,c
 19902  006314  0EA8               	movlw	low (_var_sys_NVM+16)
 19903  006316  6E24               	movwf	i2c_readDataBlock@data^0,c
 19904  006318  6A25               	clrf	(i2c_readDataBlock@data+1)^0,c
 19905  00631A  0E00               	movlw	0
 19906  00631C  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 19907  00631E  0E10               	movlw	16
 19908  006320  6E26               	movwf	i2c_readDataBlock@len^0,c
 19909  006322  0E50               	movlw	80
 19910  006324  ECCC  F03E         	call	_i2c_readDataBlock
 19911                           
 19912                           ;controlMemory_MC50.c: 162:     i2c_readDataBlock(0x50, (uint16_t)(pageMemoryCounters * 
      +                          16),(char*)&var_sys_NVM.positionRemotesFull,16);
 19913  006328  0E00               	movlw	0
 19914  00632A  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 19915  00632C  0E20               	movlw	32
 19916  00632E  6E22               	movwf	i2c_readDataBlock@reg^0,c
 19917  006330  0EB8               	movlw	low (_var_sys_NVM+32)
 19918  006332  6E24               	movwf	i2c_readDataBlock@data^0,c
 19919  006334  6A25               	clrf	(i2c_readDataBlock@data+1)^0,c
 19920  006336  0E00               	movlw	0
 19921  006338  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 19922  00633A  0E10               	movlw	16
 19923  00633C  6E26               	movwf	i2c_readDataBlock@len^0,c
 19924  00633E  0E50               	movlw	80
 19925  006340  ECCC  F03E         	call	_i2c_readDataBlock
 19926                           
 19927                           ;controlMemory_MC50.c: 163:     i2c_readDataBlock(0x50, (uint16_t)(pageMemoryLearningVar
      +                          s * 16),(char*)&var_sys_NVM.learningCurrentNormalClose, 16);
 19928  006344  0E00               	movlw	0
 19929  006346  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 19930  006348  0E30               	movlw	48
 19931  00634A  6E22               	movwf	i2c_readDataBlock@reg^0,c
 19932  00634C  0EC8               	movlw	low (_var_sys_NVM+48)
 19933  00634E  6E24               	movwf	i2c_readDataBlock@data^0,c
 19934  006350  6A25               	clrf	(i2c_readDataBlock@data+1)^0,c
 19935  006352  0E00               	movlw	0
 19936  006354  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 19937  006356  0E10               	movlw	16
 19938  006358  6E26               	movwf	i2c_readDataBlock@len^0,c
 19939  00635A  0E50               	movlw	80
 19940  00635C  ECCC  F03E         	call	_i2c_readDataBlock
 19941                           
 19942                           ;controlMemory_MC50.c: 166:     checkNVM_VarSystem();
 19943  006360  ECA3  F029         	call	_checkNVM_VarSystem	;wreg free
 19944                           
 19945                           ;controlMemory_MC50.c: 168:     var_sys.actualCounterMoves=var_sys_NVM.counterMoves;
 19946  006364  C0BA  F13C         	movff	_var_sys_NVM+34,_var_sys+60	;volatile
 19947  006368  C0BB  F13D         	movff	_var_sys_NVM+35,_var_sys+61	;volatile
 19948  00636C  C0BC  F13E         	movff	_var_sys_NVM+36,_var_sys+62	;volatile
 19949  006370  C0BD  F13F         	movff	_var_sys_NVM+37,_var_sys+63	;volatile
 19950  006374  0012               	return		;funcret
 19951  006376                     __end_of_loadNVM_VarSystem:
 19952                           	callstack 0
 19953                           
 19954 ;; *************** function _i2c_readDataBlock *****************
 19955 ;; Defined at:
 19956 ;;		line 147 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 19957 ;; Parameters:    Size  Location     Type
 19958 ;;  address         1    wreg     unsigned char 
 19959 ;;  reg             2   33[COMRAM] unsigned short 
 19960 ;;  data            2   35[COMRAM] PTR void 
 19961 ;;		 -> var_sys_NVM.homemPresente(1), cmdMemoryIsEmpty@tempSerial(4), var_sys_NVM.positionRemotesFull(1), memoryTEMP(16)
      +, 
 19962 ;;		 -> var_sys_NVM.learningCurrentNormalClose(2), var_sys_NVM(64), 
 19963 ;;  len             2   37[COMRAM] unsigned int 
 19964 ;; Auto vars:     Size  Location     Type
 19965 ;;  address         1   40[COMRAM] unsigned char 
 19966 ;;  d               4   41[COMRAM] struct .
 19967 ;; Return value:  Size  Location     Type
 19968 ;;                  1    wreg      void 
 19969 ;; Registers used:
 19970 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19971 ;; Tracked objects:
 19972 ;;		On entry : 0/1
 19973 ;;		On exit  : 0/0
 19974 ;;		Unchanged: 0/0
 19975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19976 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19977 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19978 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19979 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19980 ;;Total ram usage:       12 bytes
 19981 ;; Hardware stack levels used: 1
 19982 ;; Hardware stack levels required when called: 12
 19983 ;; This function calls:
 19984 ;;		_I2C1_Close
 19985 ;;		_I2C1_MasterWrite
 19986 ;;		_I2C1_Open
 19987 ;;		_I2C1_SetAddressNackCallback
 19988 ;;		_I2C1_SetBuffer
 19989 ;;		_I2C1_SetDataCompleteCallback
 19990 ;; This function is called by:
 19991 ;;		_validateRemoteSerialNumber
 19992 ;;		_cmdMemoryIsEmpty
 19993 ;;		_loadNVM_VarSystem
 19994 ;; This function uses a non-reentrant model
 19995 ;;
 19996                           
 19997                           	psect	text74
 19998  007D98                     __ptext74:
 19999                           	callstack 0
 20000  007D98                     _i2c_readDataBlock:
 20001                           	callstack 14
 20002                           
 20003                           ;incstack = 0
 20004                           ;i2c_readDataBlock@address stored from wreg
 20005  007D98  6E29               	movwf	i2c_readDataBlock@address^0,c
 20006                           
 20007                           ;mcc_generated_files/drivers/i2c_simple_master.c: 147: void i2c_readDataBlock(i2c1_addre
      +                          ss_t address, uint16_t reg, void *data, size_t len);mcc_generated_files/drivers/i2c_simp
      +                          le_master.c: 148: {;mcc_generated_files/drivers/i2c_simple_master.c: 149:     buf_t d;;m
      +                          cc_generated_files/drivers/i2c_simple_master.c: 150:     d.data = data;
 20008  007D9A  C024  F02C         	movff	i2c_readDataBlock@data,i2c_readDataBlock@d+2
 20009  007D9E  C025  F02D         	movff	i2c_readDataBlock@data+1,i2c_readDataBlock@d+3
 20010                           
 20011                           ;mcc_generated_files/drivers/i2c_simple_master.c: 151:     d.len = len;
 20012  007DA2  C026  F02A         	movff	i2c_readDataBlock@len,i2c_readDataBlock@d
 20013  007DA6  C027  F02B         	movff	i2c_readDataBlock@len+1,i2c_readDataBlock@d+1
 20014  007DAA                     l19400:
 20015  007DAA  5023               	movf	(i2c_readDataBlock@reg+1)^0,w,c
 20016  007DAC  1029               	iorwf	i2c_readDataBlock@address^0,w,c
 20017  007DAE  ECD7  F03C         	call	_I2C1_Open
 20018  007DB2  0900               	iorlw	0
 20019  007DB4  B4D8               	btfsc	status,2,c
 20020  007DB6  D7F9               	goto	l19400
 20021                           
 20022                           ;mcc_generated_files/drivers/i2c_simple_master.c: 154:     I2C1_SetDataCompleteCallback(
      +                          rdBlkRegCompleteHandler,&d);
 20023  007DB8  0E04               	movlw	low _rdBlkRegCompleteHandler
 20024  007DBA  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 20025  007DBC  0E89               	movlw	high _rdBlkRegCompleteHandler
 20026  007DBE  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 20027  007DC0  0E2A               	movlw	low i2c_readDataBlock@d
 20028  007DC2  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 20029  007DC4  6A18               	clrf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 20030  007DC6  EC44  F048         	call	_I2C1_SetDataCompleteCallback	;wreg free
 20031                           
 20032                           ;mcc_generated_files/drivers/i2c_simple_master.c: 155:     I2C1_SetBuffer(&reg,1);
 20033  007DCA  0E22               	movlw	low i2c_readDataBlock@reg
 20034  007DCC  6E10               	movwf	I2C1_SetBuffer@buffer^0,c
 20035  007DCE  6A11               	clrf	(I2C1_SetBuffer@buffer+1)^0,c
 20036  007DD0  0E00               	movlw	0
 20037  007DD2  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 20038  007DD4  0E01               	movlw	1
 20039  007DD6  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 20040  007DD8  ECFB  F047         	call	_I2C1_SetBuffer	;wreg free
 20041                           
 20042                           ; BSR set to: 2
 20043                           ;mcc_generated_files/drivers/i2c_simple_master.c: 156:     I2C1_SetAddressNackCallback((
      +                          (void*)0),((void*)0));
 20044  007DDC  0E00               	movlw	0
 20045  007DDE  6E15               	movwf	I2C1_SetAddressNackCallback@cb^0,c
 20046  007DE0  0E00               	movlw	0
 20047  007DE2  6E16               	movwf	(I2C1_SetAddressNackCallback@cb+1)^0,c
 20048  007DE4  0E00               	movlw	0
 20049  007DE6  6E17               	movwf	I2C1_SetAddressNackCallback@ptr^0,c
 20050  007DE8  0E00               	movlw	0
 20051  007DEA  6E18               	movwf	(I2C1_SetAddressNackCallback@ptr+1)^0,c
 20052  007DEC  EC2C  F048         	call	_I2C1_SetAddressNackCallback	;wreg free
 20053                           
 20054                           ;mcc_generated_files/drivers/i2c_simple_master.c: 157:     I2C1_MasterWrite();
 20055  007DF0  ECFA  F048         	call	_I2C1_MasterWrite	;wreg free
 20056  007DF4                     l19410:
 20057  007DF4  EC6D  F047         	call	_I2C1_Close	;wreg free
 20058  007DF8  06E8               	decf	wreg,f,c
 20059  007DFA  B4D8               	btfsc	status,2,c
 20060  007DFC  D7FB               	goto	l19410
 20061                           
 20062                           ;mcc_generated_files/drivers/i2c_simple_master.c: 159:     _delay((unsigned long)((10)*(
      +                          64000000/4000.0)));
 20063  007DFE  0ED0               	movlw	208
 20064  007E00  6E28               	movwf	??_i2c_readDataBlock^0,c
 20065  007E02  0ECA               	movlw	202
 20066  007E04                     u28837:
 20067  007E04  2EE8               	decfsz	wreg,f,c
 20068  007E06  D7FE               	bra	u28837
 20069  007E08  2E28               	decfsz	??_i2c_readDataBlock^0,f,c
 20070  007E0A  D7FC               	bra	u28837
 20071  007E0C  0012               	return		;funcret
 20072  007E0E                     __end_of_i2c_readDataBlock:
 20073                           	callstack 0
 20074                           
 20075 ;; *************** function _checkNVM_VarSystem *****************
 20076 ;; Defined at:
 20077 ;;		line 314 in file "controlMemory_MC50.c"
 20078 ;; Parameters:    Size  Location     Type
 20079 ;;		None
 20080 ;; Auto vars:     Size  Location     Type
 20081 ;;  saveParam       1   57[COMRAM] unsigned char 
 20082 ;; Return value:  Size  Location     Type
 20083 ;;                  1    wreg      void 
 20084 ;; Registers used:
 20085 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20086 ;; Tracked objects:
 20087 ;;		On entry : 0/2
 20088 ;;		On exit  : 0/0
 20089 ;;		Unchanged: 0/0
 20090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20091 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20092 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20094 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20095 ;;Total ram usage:        1 bytes
 20096 ;; Hardware stack levels used: 1
 20097 ;; Hardware stack levels required when called: 14
 20098 ;; This function calls:
 20099 ;;		_SaveNVM_VarSystem
 20100 ;; This function is called by:
 20101 ;;		_loadNVM_VarSystem
 20102 ;; This function uses a non-reentrant model
 20103 ;;
 20104                           
 20105                           	psect	text75
 20106  005346                     __ptext75:
 20107                           	callstack 0
 20108  005346                     _checkNVM_VarSystem:
 20109                           	callstack 15
 20110                           
 20111                           ;controlMemory_MC50.c: 316:     char saveParam;;controlMemory_MC50.c: 319:     saveParam
      +                           = 0;
 20112                           
 20113                           ;incstack = 0
 20114  005346  0E00               	movlw	0
 20115  005348  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20116                           
 20117                           ;controlMemory_MC50.c: 327:     if ( var_sys_NVM.decelarationOpen>45 )
 20118  00534A  0E2D               	movlw	45
 20119  00534C  0100               	movlb	0	; () banked
 20120  00534E  6598               	cpfsgt	_var_sys_NVM& (0+255),b	;volatile
 20121  005350  D004               	goto	l21088
 20122                           
 20123                           ; BSR set to: 0
 20124                           ;controlMemory_MC50.c: 328:     {;controlMemory_MC50.c: 330:         var_sys_NVM.decelar
      +                          ationOpen = 3;
 20125  005352  0E03               	movlw	3
 20126  005354  6F98               	movwf	_var_sys_NVM& (0+255),b	;volatile
 20127                           
 20128                           ;controlMemory_MC50.c: 331:         saveParam=1;
 20129  005356  0E01               	movlw	1
 20130  005358  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20131  00535A                     l21088:
 20132                           
 20133                           ; BSR set to: 0
 20134                           ;controlMemory_MC50.c: 334:     if ( var_sys_NVM.decelarationClose>45 )
 20135  00535A  0E2D               	movlw	45
 20136  00535C  6599               	cpfsgt	(_var_sys_NVM+1)& (0+255),b	;volatile
 20137  00535E  D004               	goto	l1490
 20138                           
 20139                           ; BSR set to: 0
 20140                           ;controlMemory_MC50.c: 335:     {;controlMemory_MC50.c: 337:         var_sys_NVM.decelar
      +                          ationClose = 3;
 20141  005360  0E03               	movlw	3
 20142  005362  6F99               	movwf	(_var_sys_NVM+1)& (0+255),b	;volatile
 20143                           
 20144                           ;controlMemory_MC50.c: 338:         saveParam=1;
 20145  005364  0E01               	movlw	1
 20146  005366  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20147  005368                     l1490:
 20148                           
 20149                           ; BSR set to: 0
 20150                           ;controlMemory_MC50.c: 341:     if ( (var_sys_NVM.motorPower<1) || (var_sys_NVM.motorPow
      +                          er>9) )
 20151  005368  519A               	movf	(_var_sys_NVM+2)& (0+255),w,b	;volatile
 20152  00536A  B4D8               	btfsc	status,2,c
 20153  00536C  D003               	goto	u24260
 20154                           
 20155                           ; BSR set to: 0
 20156  00536E  0E09               	movlw	9
 20157  005370  659A               	cpfsgt	(_var_sys_NVM+2)& (0+255),b	;volatile
 20158  005372  D004               	goto	l21096
 20159  005374                     u24260:
 20160                           
 20161                           ; BSR set to: 0
 20162                           ;controlMemory_MC50.c: 342:     {;controlMemory_MC50.c: 344:         var_sys_NVM.motorPo
      +                          wer = 9;
 20163  005374  0E09               	movlw	9
 20164  005376  6F9A               	movwf	(_var_sys_NVM+2)& (0+255),b	;volatile
 20165                           
 20166                           ;controlMemory_MC50.c: 345:         saveParam=1;
 20167  005378  0E01               	movlw	1
 20168  00537A  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20169  00537C                     l21096:
 20170                           
 20171                           ; BSR set to: 0
 20172                           ;controlMemory_MC50.c: 348:     if ( var_sys_NVM.motorSensitivity>9 )
 20173  00537C  0E09               	movlw	9
 20174  00537E  659B               	cpfsgt	(_var_sys_NVM+3)& (0+255),b	;volatile
 20175  005380  D004               	goto	l21100
 20176                           
 20177                           ; BSR set to: 0
 20178                           ;controlMemory_MC50.c: 349:     {;controlMemory_MC50.c: 351:         var_sys_NVM.motorSe
      +                          nsitivity = 0;
 20179  005382  0E00               	movlw	0
 20180  005384  6F9B               	movwf	(_var_sys_NVM+3)& (0+255),b	;volatile
 20181                           
 20182                           ;controlMemory_MC50.c: 352:         saveParam=1;
 20183  005386  0E01               	movlw	1
 20184  005388  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20185  00538A                     l21100:
 20186                           
 20187                           ; BSR set to: 0
 20188                           ;controlMemory_MC50.c: 355:     if ( var_sys_NVM.walkTime>99 )
 20189  00538A  0E63               	movlw	99
 20190  00538C  659C               	cpfsgt	(_var_sys_NVM+4)& (0+255),b	;volatile
 20191  00538E  D004               	goto	l21104
 20192                           
 20193                           ; BSR set to: 0
 20194                           ;controlMemory_MC50.c: 356:     {;controlMemory_MC50.c: 358:         var_sys_NVM.walkTim
      +                          e = 10;
 20195  005390  0E0A               	movlw	10
 20196  005392  6F9C               	movwf	(_var_sys_NVM+4)& (0+255),b	;volatile
 20197                           
 20198                           ;controlMemory_MC50.c: 359:         saveParam=1;
 20199  005394  0E01               	movlw	1
 20200  005396  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20201  005398                     l21104:
 20202                           
 20203                           ; BSR set to: 0
 20204                           ;controlMemory_MC50.c: 362:     if ( var_sys_NVM.autoTimeFullClose>99 )
 20205  005398  0E63               	movlw	99
 20206  00539A  659D               	cpfsgt	(_var_sys_NVM+5)& (0+255),b	;volatile
 20207  00539C  D004               	goto	l21108
 20208                           
 20209                           ; BSR set to: 0
 20210                           ;controlMemory_MC50.c: 363:     {;controlMemory_MC50.c: 365:         var_sys_NVM.autoTim
      +                          eFullClose = 0;
 20211  00539E  0E00               	movlw	0
 20212  0053A0  6F9D               	movwf	(_var_sys_NVM+5)& (0+255),b	;volatile
 20213                           
 20214                           ;controlMemory_MC50.c: 366:         saveParam=1;
 20215  0053A2  0E01               	movlw	1
 20216  0053A4  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20217  0053A6                     l21108:
 20218                           
 20219                           ; BSR set to: 0
 20220                           ;controlMemory_MC50.c: 369:     if ( var_sys_NVM.autoTimeWalkClose>99 )
 20221  0053A6  0E63               	movlw	99
 20222  0053A8  659E               	cpfsgt	(_var_sys_NVM+6)& (0+255),b	;volatile
 20223  0053AA  D004               	goto	l21112
 20224                           
 20225                           ; BSR set to: 0
 20226                           ;controlMemory_MC50.c: 370:     {;controlMemory_MC50.c: 372:         var_sys_NVM.autoTim
      +                          eWalkClose = 0;
 20227  0053AC  0E00               	movlw	0
 20228  0053AE  6F9E               	movwf	(_var_sys_NVM+6)& (0+255),b	;volatile
 20229                           
 20230                           ;controlMemory_MC50.c: 373:         saveParam=1;
 20231  0053B0  0E01               	movlw	1
 20232  0053B2  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20233  0053B4                     l21112:
 20234                           
 20235                           ; BSR set to: 0
 20236                           ;controlMemory_MC50.c: 376:     if ( var_sys_NVM.photoCellIsON>1 )
 20237  0053B4  0E01               	movlw	1
 20238  0053B6  659F               	cpfsgt	(_var_sys_NVM+7)& (0+255),b	;volatile
 20239  0053B8  D004               	goto	l21116
 20240                           
 20241                           ; BSR set to: 0
 20242                           ;controlMemory_MC50.c: 377:     {;controlMemory_MC50.c: 379:         var_sys_NVM.photoCe
      +                          llIsON = 0;
 20243  0053BA  0E00               	movlw	0
 20244  0053BC  6F9F               	movwf	(_var_sys_NVM+7)& (0+255),b	;volatile
 20245                           
 20246                           ;controlMemory_MC50.c: 380:         saveParam=1;
 20247  0053BE  0E01               	movlw	1
 20248  0053C0  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20249  0053C2                     l21116:
 20250                           
 20251                           ; BSR set to: 0
 20252                           ;controlMemory_MC50.c: 383:     if ( var_sys_NVM.photoCellInOpen>1 )
 20253  0053C2  0E01               	movlw	1
 20254  0053C4  65A0               	cpfsgt	(_var_sys_NVM+8)& (0+255),b	;volatile
 20255  0053C6  D004               	goto	l21120
 20256                           
 20257                           ; BSR set to: 0
 20258                           ;controlMemory_MC50.c: 384:     {;controlMemory_MC50.c: 386:         var_sys_NVM.photoCe
      +                          llInOpen = 0;
 20259  0053C8  0E00               	movlw	0
 20260  0053CA  6FA0               	movwf	(_var_sys_NVM+8)& (0+255),b	;volatile
 20261                           
 20262                           ;controlMemory_MC50.c: 387:         saveParam=1;
 20263  0053CC  0E01               	movlw	1
 20264  0053CE  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20265  0053D0                     l21120:
 20266                           
 20267                           ; BSR set to: 0
 20268                           ;controlMemory_MC50.c: 390:     if ( var_sys_NVM.securityBandIsON>1 )
 20269  0053D0  0E01               	movlw	1
 20270  0053D2  65A1               	cpfsgt	(_var_sys_NVM+9)& (0+255),b	;volatile
 20271  0053D4  D004               	goto	l21124
 20272                           
 20273                           ; BSR set to: 0
 20274                           ;controlMemory_MC50.c: 391:     {;controlMemory_MC50.c: 393:         var_sys_NVM.securit
      +                          yBandIsON = 0 ;
 20275  0053D6  0E00               	movlw	0
 20276  0053D8  6FA1               	movwf	(_var_sys_NVM+9)& (0+255),b	;volatile
 20277                           
 20278                           ;controlMemory_MC50.c: 394:         saveParam=1;
 20279  0053DA  0E01               	movlw	1
 20280  0053DC  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20281  0053DE                     l21124:
 20282                           
 20283                           ; BSR set to: 0
 20284                           ;controlMemory_MC50.c: 397:     if ( var_sys_NVM.securityBandType>1 )
 20285  0053DE  0E01               	movlw	1
 20286  0053E0  65A2               	cpfsgt	(_var_sys_NVM+10)& (0+255),b	;volatile
 20287  0053E2  D004               	goto	l21128
 20288                           
 20289                           ; BSR set to: 0
 20290                           ;controlMemory_MC50.c: 398:     {;controlMemory_MC50.c: 400:         var_sys_NVM.securit
      +                          yBandType = 1;
 20291  0053E4  0E01               	movlw	1
 20292  0053E6  6FA2               	movwf	(_var_sys_NVM+10)& (0+255),b	;volatile
 20293                           
 20294                           ;controlMemory_MC50.c: 401:         saveParam=1;
 20295  0053E8  0E01               	movlw	1
 20296  0053EA  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20297  0053EC                     l21128:
 20298                           
 20299                           ; BSR set to: 0
 20300                           ;controlMemory_MC50.c: 404:     if ( var_sys_NVM.securityBandInOpen>1 )
 20301  0053EC  0E01               	movlw	1
 20302  0053EE  65A3               	cpfsgt	(_var_sys_NVM+11)& (0+255),b	;volatile
 20303  0053F0  D004               	goto	l21132
 20304                           
 20305                           ; BSR set to: 0
 20306                           ;controlMemory_MC50.c: 405:     {;controlMemory_MC50.c: 407:         var_sys_NVM.securit
      +                          yBandInOpen = 0;
 20307  0053F2  0E00               	movlw	0
 20308  0053F4  6FA3               	movwf	(_var_sys_NVM+11)& (0+255),b	;volatile
 20309                           
 20310                           ;controlMemory_MC50.c: 408:         saveParam=1;
 20311  0053F6  0E01               	movlw	1
 20312  0053F8  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20313  0053FA                     l21132:
 20314                           
 20315                           ; BSR set to: 0
 20316                           ;controlMemory_MC50.c: 411:     if ( var_sys_NVM.operationMode>2 )
 20317  0053FA  0E02               	movlw	2
 20318  0053FC  65A4               	cpfsgt	(_var_sys_NVM+12)& (0+255),b	;volatile
 20319  0053FE  D004               	goto	l21136
 20320                           
 20321                           ; BSR set to: 0
 20322                           ;controlMemory_MC50.c: 412:     {;controlMemory_MC50.c: 414:         var_sys_NVM.operati
      +                          onMode = 0;
 20323  005400  0E00               	movlw	0
 20324  005402  6FA4               	movwf	(_var_sys_NVM+12)& (0+255),b	;volatile
 20325                           
 20326                           ;controlMemory_MC50.c: 415:         saveParam=1;
 20327  005404  0E01               	movlw	1
 20328  005406  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20329  005408                     l21136:
 20330                           
 20331                           ; BSR set to: 0
 20332                           ;controlMemory_MC50.c: 418:     if ( var_sys_NVM.flashLightMode>3 )
 20333  005408  0E03               	movlw	3
 20334  00540A  65A5               	cpfsgt	(_var_sys_NVM+13)& (0+255),b	;volatile
 20335  00540C  D004               	goto	l21140
 20336                           
 20337                           ; BSR set to: 0
 20338                           ;controlMemory_MC50.c: 419:     {;controlMemory_MC50.c: 421:         var_sys_NVM.flashLi
      +                          ghtMode = 0;
 20339  00540E  0E00               	movlw	0
 20340  005410  6FA5               	movwf	(_var_sys_NVM+13)& (0+255),b	;volatile
 20341                           
 20342                           ;controlMemory_MC50.c: 422:         saveParam=1;
 20343  005412  0E01               	movlw	1
 20344  005414  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20345  005416                     l21140:
 20346                           
 20347                           ; BSR set to: 0
 20348                           ;controlMemory_MC50.c: 425:     if ( var_sys_NVM.programmingDistance>1 )
 20349  005416  0E01               	movlw	1
 20350  005418  65A6               	cpfsgt	(_var_sys_NVM+14)& (0+255),b	;volatile
 20351  00541A  D004               	goto	l21144
 20352                           
 20353                           ; BSR set to: 0
 20354                           ;controlMemory_MC50.c: 426:     {;controlMemory_MC50.c: 428:         var_sys_NVM.program
      +                          mingDistance = 0;
 20355  00541C  0E00               	movlw	0
 20356  00541E  6FA6               	movwf	(_var_sys_NVM+14)& (0+255),b	;volatile
 20357                           
 20358                           ;controlMemory_MC50.c: 429:         saveParam=1;
 20359  005420  0E01               	movlw	1
 20360  005422  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20361  005424                     l21144:
 20362                           
 20363                           ; BSR set to: 0
 20364                           ;controlMemory_MC50.c: 432:     if ( var_sys_NVM.decelarationSensivity>9 )
 20365  005424  0E09               	movlw	9
 20366  005426  65A7               	cpfsgt	(_var_sys_NVM+15)& (0+255),b	;volatile
 20367  005428  D004               	goto	l21148
 20368                           
 20369                           ; BSR set to: 0
 20370                           ;controlMemory_MC50.c: 433:     {;controlMemory_MC50.c: 435:         var_sys_NVM.decelar
      +                          ationSensivity = 0;
 20371  00542A  0E00               	movlw	0
 20372  00542C  6FA7               	movwf	(_var_sys_NVM+15)& (0+255),b	;volatile
 20373                           
 20374                           ;controlMemory_MC50.c: 436:         saveParam=1;
 20375  00542E  0E01               	movlw	1
 20376  005430  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20377  005432                     l21148:
 20378                           
 20379                           ; BSR set to: 0
 20380                           ;controlMemory_MC50.c: 441:     if ( var_sys_NVM.homemPresente>2 )
 20381  005432  0E02               	movlw	2
 20382  005434  65A8               	cpfsgt	(_var_sys_NVM+16)& (0+255),b	;volatile
 20383  005436  D004               	goto	l21152
 20384                           
 20385                           ; BSR set to: 0
 20386                           ;controlMemory_MC50.c: 442:     {;controlMemory_MC50.c: 444:         var_sys_NVM.homemPr
      +                          esente = 0;
 20387  005438  0E00               	movlw	0
 20388  00543A  6FA8               	movwf	(_var_sys_NVM+16)& (0+255),b	;volatile
 20389                           
 20390                           ;controlMemory_MC50.c: 445:         saveParam=1;
 20391  00543C  0E01               	movlw	1
 20392  00543E  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20393  005440                     l21152:
 20394                           
 20395                           ; BSR set to: 0
 20396                           ;controlMemory_MC50.c: 448:     if ( var_sys_NVM.logicDigital>1 )
 20397  005440  0E01               	movlw	1
 20398  005442  65A9               	cpfsgt	(_var_sys_NVM+17)& (0+255),b	;volatile
 20399  005444  D004               	goto	l21156
 20400                           
 20401                           ; BSR set to: 0
 20402                           ;controlMemory_MC50.c: 449:     {;controlMemory_MC50.c: 451:         var_sys_NVM.logicDi
      +                          gital = 0;
 20403  005446  0E00               	movlw	0
 20404  005448  6FA9               	movwf	(_var_sys_NVM+17)& (0+255),b	;volatile
 20405                           
 20406                           ;controlMemory_MC50.c: 452:         saveParam=1;
 20407  00544A  0E01               	movlw	1
 20408  00544C  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20409  00544E                     l21156:
 20410                           
 20411                           ; BSR set to: 0
 20412                           ;controlMemory_MC50.c: 455:     if ( var_sys_NVM.softStart>9 )
 20413  00544E  0E09               	movlw	9
 20414  005450  65AA               	cpfsgt	(_var_sys_NVM+18)& (0+255),b	;volatile
 20415  005452  D004               	goto	l21160
 20416                           
 20417                           ; BSR set to: 0
 20418                           ;controlMemory_MC50.c: 456:     {;controlMemory_MC50.c: 458:         var_sys_NVM.softSta
      +                          rt = 0;
 20419  005454  0E00               	movlw	0
 20420  005456  6FAA               	movwf	(_var_sys_NVM+18)& (0+255),b	;volatile
 20421                           
 20422                           ;controlMemory_MC50.c: 459:         saveParam=1;
 20423  005458  0E01               	movlw	1
 20424  00545A  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20425  00545C                     l21160:
 20426                           
 20427                           ; BSR set to: 0
 20428                           ;controlMemory_MC50.c: 463:     if ( var_sys_NVM.ligthTime>99 )
 20429  00545C  0E63               	movlw	99
 20430  00545E  65AC               	cpfsgt	(_var_sys_NVM+20)& (0+255),b	;volatile
 20431  005460  D004               	goto	l21164
 20432                           
 20433                           ; BSR set to: 0
 20434                           ;controlMemory_MC50.c: 464:     {;controlMemory_MC50.c: 466:         var_sys_NVM.ligthTi
      +                          me = 3;
 20435  005462  0E03               	movlw	3
 20436  005464  6FAC               	movwf	(_var_sys_NVM+20)& (0+255),b	;volatile
 20437                           
 20438                           ;controlMemory_MC50.c: 467:         saveParam=1;
 20439  005466  0E01               	movlw	1
 20440  005468  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20441  00546A                     l21164:
 20442                           
 20443                           ; BSR set to: 0
 20444                           ;controlMemory_MC50.c: 470:     if ( var_sys_NVM.folow_me>9 )
 20445  00546A  0E09               	movlw	9
 20446  00546C  65AD               	cpfsgt	(_var_sys_NVM+21)& (0+255),b	;volatile
 20447  00546E  D004               	goto	l21168
 20448                           
 20449                           ; BSR set to: 0
 20450                           ;controlMemory_MC50.c: 471:     {;controlMemory_MC50.c: 473:         var_sys_NVM.folow_m
      +                          e = 0;
 20451  005470  0E00               	movlw	0
 20452  005472  6FAD               	movwf	(_var_sys_NVM+21)& (0+255),b	;volatile
 20453                           
 20454                           ;controlMemory_MC50.c: 474:         saveParam=1;
 20455  005474  0E01               	movlw	1
 20456  005476  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20457  005478                     l21168:
 20458                           
 20459                           ; BSR set to: 0
 20460                           ;controlMemory_MC50.c: 479:     if ( var_sys_NVM.electricBrake>1 )
 20461  005478  0E01               	movlw	1
 20462  00547A  65AF               	cpfsgt	(_var_sys_NVM+23)& (0+255),b	;volatile
 20463  00547C  D004               	goto	l1512
 20464                           
 20465                           ; BSR set to: 0
 20466                           ;controlMemory_MC50.c: 480:     {;controlMemory_MC50.c: 482:         var_sys_NVM.electri
      +                          cBrake = 0;
 20467  00547E  0E00               	movlw	0
 20468  005480  6FAF               	movwf	(_var_sys_NVM+23)& (0+255),b	;volatile
 20469                           
 20470                           ;controlMemory_MC50.c: 483:         saveParam=1;
 20471  005482  0E01               	movlw	1
 20472  005484  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20473  005486                     l1512:
 20474                           
 20475                           ; BSR set to: 0
 20476                           ;controlMemory_MC50.c: 486:     if ( (var_sys_NVM.velocityDecelaration<1) || (var_sys_NV
      +                          M.velocityDecelaration>9) )
 20477  005486  51B0               	movf	(_var_sys_NVM+24)& (0+255),w,b	;volatile
 20478  005488  B4D8               	btfsc	status,2,c
 20479  00548A  D003               	goto	u24470
 20480                           
 20481                           ; BSR set to: 0
 20482  00548C  0E09               	movlw	9
 20483  00548E  65B0               	cpfsgt	(_var_sys_NVM+24)& (0+255),b	;volatile
 20484  005490  D004               	goto	l21176
 20485  005492                     u24470:
 20486                           
 20487                           ; BSR set to: 0
 20488                           ;controlMemory_MC50.c: 487:     {;controlMemory_MC50.c: 489:         var_sys_NVM.velocit
      +                          yDecelaration = 5;
 20489  005492  0E05               	movlw	5
 20490  005494  6FB0               	movwf	(_var_sys_NVM+24)& (0+255),b	;volatile
 20491                           
 20492                           ;controlMemory_MC50.c: 490:         saveParam=1;
 20493  005496  0E01               	movlw	1
 20494  005498  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20495  00549A                     l21176:
 20496                           
 20497                           ; BSR set to: 0
 20498                           ;controlMemory_MC50.c: 493:     if ( var_sys_NVM.flashRGBMode>3 )
 20499  00549A  0E03               	movlw	3
 20500  00549C  65B1               	cpfsgt	(_var_sys_NVM+25)& (0+255),b	;volatile
 20501  00549E  D004               	goto	l21180
 20502                           
 20503                           ; BSR set to: 0
 20504                           ;controlMemory_MC50.c: 494:     {;controlMemory_MC50.c: 496:         var_sys_NVM.flashRG
      +                          BMode = 3;
 20505  0054A0  0E03               	movlw	3
 20506  0054A2  6FB1               	movwf	(_var_sys_NVM+25)& (0+255),b	;volatile
 20507                           
 20508                           ;controlMemory_MC50.c: 497:         saveParam=1;
 20509  0054A4  0E01               	movlw	1
 20510  0054A6  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20511  0054A8                     l21180:
 20512                           
 20513                           ; BSR set to: 0
 20514                           ;controlMemory_MC50.c: 499:         if ( var_sys_NVM.Stopboton > 1 )
 20515  0054A8  0E01               	movlw	1
 20516  0054AA  65AE               	cpfsgt	(_var_sys_NVM+22)& (0+255),b	;volatile
 20517  0054AC  D004               	goto	l21184
 20518                           
 20519                           ; BSR set to: 0
 20520                           ;controlMemory_MC50.c: 500:     {;controlMemory_MC50.c: 502:         var_sys_NVM.Stopbot
      +                          on = 0 ;
 20521  0054AE  0E00               	movlw	0
 20522  0054B0  6FAE               	movwf	(_var_sys_NVM+22)& (0+255),b	;volatile
 20523                           
 20524                           ;controlMemory_MC50.c: 503:         saveParam=1;
 20525  0054B2  0E01               	movlw	1
 20526  0054B4  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20527  0054B6                     l21184:
 20528                           
 20529                           ; BSR set to: 0
 20530                           ;controlMemory_MC50.c: 505:         if ( var_sys_NVM.Direction_motor>1 )
 20531  0054B6  0E01               	movlw	1
 20532  0054B8  65B3               	cpfsgt	(_var_sys_NVM+27)& (0+255),b	;volatile
 20533  0054BA  D004               	goto	l21188
 20534                           
 20535                           ; BSR set to: 0
 20536                           ;controlMemory_MC50.c: 506:     {;controlMemory_MC50.c: 508:         var_sys_NVM.Directi
      +                          on_motor = 1;
 20537  0054BC  0E01               	movlw	1
 20538  0054BE  6FB3               	movwf	(_var_sys_NVM+27)& (0+255),b	;volatile
 20539                           
 20540                           ;controlMemory_MC50.c: 509:         saveParam=1;
 20541  0054C0  0E01               	movlw	1
 20542  0054C2  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20543  0054C4                     l21188:
 20544                           
 20545                           ; BSR set to: 0
 20546                           ;controlMemory_MC50.c: 511:         if ( var_sys_NVM.softstop>9 )
 20547  0054C4  0E09               	movlw	9
 20548  0054C6  65AB               	cpfsgt	(_var_sys_NVM+19)& (0+255),b	;volatile
 20549  0054C8  D004               	goto	l1519
 20550                           
 20551                           ; BSR set to: 0
 20552                           ;controlMemory_MC50.c: 512:     {;controlMemory_MC50.c: 514:         var_sys_NVM.softsto
      +                          p = 0;
 20553  0054CA  0E00               	movlw	0
 20554  0054CC  6FAB               	movwf	(_var_sys_NVM+19)& (0+255),b	;volatile
 20555                           
 20556                           ;controlMemory_MC50.c: 515:         saveParam=1;
 20557  0054CE  0E01               	movlw	1
 20558  0054D0  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20559  0054D2                     l1519:
 20560                           
 20561                           ; BSR set to: 0
 20562                           ;controlMemory_MC50.c: 540:     if ( saveParam != 0 )
 20563  0054D2  503A               	movf	checkNVM_VarSystem@saveParam^0,w,c
 20564  0054D4  B4D8               	btfsc	status,2,c
 20565  0054D6  0012               	return	
 20566                           
 20567                           ; BSR set to: 0
 20568                           ;controlMemory_MC50.c: 541:     {;controlMemory_MC50.c: 542:         SaveNVM_VarSystem(p
      +                          ageMemoryP);
 20569  0054D8  0E00               	movlw	0
 20570  0054DA  ECFD  F044         	call	_SaveNVM_VarSystem
 20571                           
 20572                           ;controlMemory_MC50.c: 543:         SaveNVM_VarSystem(pageMemoryE);
 20573  0054DE  0E01               	movlw	1
 20574  0054E0  ECFD  F044         	call	_SaveNVM_VarSystem
 20575  0054E4  0012               	return		;funcret
 20576  0054E6                     __end_of_checkNVM_VarSystem:
 20577                           	callstack 0
 20578                           
 20579 ;; *************** function _ResetDefaultMemory *****************
 20580 ;; Defined at:
 20581 ;;		line 186 in file "controlMemory_MC50.c"
 20582 ;; Parameters:    Size  Location     Type
 20583 ;;  type            1    wreg     unsigned char 
 20584 ;; Auto vars:     Size  Location     Type
 20585 ;;  type            1   57[COMRAM] unsigned char 
 20586 ;; Return value:  Size  Location     Type
 20587 ;;                  1    wreg      void 
 20588 ;; Registers used:
 20589 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20590 ;; Tracked objects:
 20591 ;;		On entry : 31/0
 20592 ;;		On exit  : 0/0
 20593 ;;		Unchanged: 0/0
 20594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20595 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20596 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20598 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20599 ;;Total ram usage:        1 bytes
 20600 ;; Hardware stack levels used: 1
 20601 ;; Hardware stack levels required when called: 14
 20602 ;; This function calls:
 20603 ;;		_SaveNVM_VarSystem
 20604 ;; This function is called by:
 20605 ;;		_loadNVM_VarSystem
 20606 ;;		_sm_execute_menuConfiguration
 20607 ;; This function uses a non-reentrant model
 20608 ;;
 20609                           
 20610                           	psect	text76
 20611  005B4C                     __ptext76:
 20612                           	callstack 0
 20613  005B4C                     _ResetDefaultMemory:
 20614                           	callstack 14
 20615                           
 20616                           ;incstack = 0
 20617                           ;ResetDefaultMemory@type stored from wreg
 20618  005B4C  6E3A               	movwf	ResetDefaultMemory@type^0,c
 20619                           
 20620                           ;controlMemory_MC50.c: 186: void ResetDefaultMemory(unsigned char type);controlMemory_MC
      +                          50.c: 187: {;controlMemory_MC50.c: 190:     var_sys_NVM.decelarationOpen = 3;
 20621  005B4E  0E03               	movlw	3
 20622  005B50  0100               	movlb	0	; () banked
 20623  005B52  6F98               	movwf	_var_sys_NVM& (0+255),b	;volatile
 20624                           
 20625                           ;controlMemory_MC50.c: 191:     var_sys_NVM.motorPower = 9;
 20626  005B54  0E09               	movlw	9
 20627  005B56  6F9A               	movwf	(_var_sys_NVM+2)& (0+255),b	;volatile
 20628                           
 20629                           ;controlMemory_MC50.c: 192:     var_sys_NVM.decelarationClose = 3;
 20630  005B58  0E03               	movlw	3
 20631  005B5A  6F99               	movwf	(_var_sys_NVM+1)& (0+255),b	;volatile
 20632                           
 20633                           ;controlMemory_MC50.c: 193:     var_sys_NVM.photoCellIsON = 0;
 20634  005B5C  0E00               	movlw	0
 20635  005B5E  6F9F               	movwf	(_var_sys_NVM+7)& (0+255),b	;volatile
 20636                           
 20637                           ;controlMemory_MC50.c: 194:     var_sys_NVM.photoCellInOpen = 0;
 20638  005B60  0E00               	movlw	0
 20639  005B62  6FA0               	movwf	(_var_sys_NVM+8)& (0+255),b	;volatile
 20640                           
 20641                           ;controlMemory_MC50.c: 195:     var_sys_NVM.securityBandIsON = 0 ;
 20642  005B64  0E00               	movlw	0
 20643  005B66  6FA1               	movwf	(_var_sys_NVM+9)& (0+255),b	;volatile
 20644                           
 20645                           ;controlMemory_MC50.c: 196:     var_sys_NVM.securityBandType = 1;
 20646  005B68  0E01               	movlw	1
 20647  005B6A  6FA2               	movwf	(_var_sys_NVM+10)& (0+255),b	;volatile
 20648                           
 20649                           ;controlMemory_MC50.c: 197:     var_sys_NVM.securityBandInOpen = 0;
 20650  005B6C  0E00               	movlw	0
 20651  005B6E  6FA3               	movwf	(_var_sys_NVM+11)& (0+255),b	;volatile
 20652                           
 20653                           ;controlMemory_MC50.c: 198:     var_sys_NVM.flashLightMode = 0;
 20654  005B70  0E00               	movlw	0
 20655  005B72  6FA5               	movwf	(_var_sys_NVM+13)& (0+255),b	;volatile
 20656                           
 20657                           ;controlMemory_MC50.c: 199:     var_sys_NVM.programmingDistance = 0;
 20658  005B74  0E00               	movlw	0
 20659  005B76  6FA6               	movwf	(_var_sys_NVM+14)& (0+255),b	;volatile
 20660                           
 20661                           ;controlMemory_MC50.c: 200:     var_sys_NVM.decelarationSensivity = 0;
 20662  005B78  0E00               	movlw	0
 20663  005B7A  6FA7               	movwf	(_var_sys_NVM+15)& (0+255),b	;volatile
 20664                           
 20665                           ;controlMemory_MC50.c: 201:     var_sys_NVM.homemPresente = 0;
 20666  005B7C  0E00               	movlw	0
 20667  005B7E  6FA8               	movwf	(_var_sys_NVM+16)& (0+255),b	;volatile
 20668                           
 20669                           ;controlMemory_MC50.c: 202:     var_sys_NVM.autoTimeWalkClose = 0;
 20670  005B80  0E00               	movlw	0
 20671  005B82  6F9E               	movwf	(_var_sys_NVM+6)& (0+255),b	;volatile
 20672                           
 20673                           ;controlMemory_MC50.c: 203:     var_sys_NVM.ligthTime = 3;
 20674  005B84  0E03               	movlw	3
 20675  005B86  6FAC               	movwf	(_var_sys_NVM+20)& (0+255),b	;volatile
 20676                           
 20677                           ;controlMemory_MC50.c: 204:     var_sys_NVM.folow_me = 0;
 20678  005B88  0E00               	movlw	0
 20679  005B8A  6FAD               	movwf	(_var_sys_NVM+21)& (0+255),b	;volatile
 20680                           
 20681                           ;controlMemory_MC50.c: 205:     var_sys_NVM.electricBrake = 0;
 20682  005B8C  0E00               	movlw	0
 20683  005B8E  6FAF               	movwf	(_var_sys_NVM+23)& (0+255),b	;volatile
 20684                           
 20685                           ;controlMemory_MC50.c: 206:     var_sys_NVM.autoTimeWalkClose = 0;
 20686  005B90  0E00               	movlw	0
 20687  005B92  6F9E               	movwf	(_var_sys_NVM+6)& (0+255),b	;volatile
 20688                           
 20689                           ;controlMemory_MC50.c: 207:     var_sys_NVM.Direction_motor = 1 ;
 20690  005B94  0E01               	movlw	1
 20691  005B96  6FB3               	movwf	(_var_sys_NVM+27)& (0+255),b	;volatile
 20692                           
 20693                           ; BSR set to: 0
 20694                           ;controlMemory_MC50.c: 210:     if (type == SC){
 20695  005B98  503A               	movf	ResetDefaultMemory@type^0,w,c
 20696  005B9A  A4D8               	btfss	status,2,c
 20697  005B9C  D014               	goto	l19898
 20698                           
 20699                           ; BSR set to: 0
 20700                           ;controlMemory_MC50.c: 212:         var_sys_NVM.motorSensitivity = 0;
 20701  005B9E  0E00               	movlw	0
 20702  005BA0  6F9B               	movwf	(_var_sys_NVM+3)& (0+255),b	;volatile
 20703                           
 20704                           ;controlMemory_MC50.c: 213:         var_sys_NVM.logicDigital = 0;
 20705  005BA2  0E00               	movlw	0
 20706  005BA4  6FA9               	movwf	(_var_sys_NVM+17)& (0+255),b	;volatile
 20707                           
 20708                           ;controlMemory_MC50.c: 214:         var_sys_NVM.Stopboton = 0;
 20709  005BA6  0E00               	movlw	0
 20710  005BA8  6FAE               	movwf	(_var_sys_NVM+22)& (0+255),b	;volatile
 20711                           
 20712                           ;controlMemory_MC50.c: 215:         var_sys_NVM.autoTimeFullClose = 0;
 20713  005BAA  0E00               	movlw	0
 20714  005BAC  6F9D               	movwf	(_var_sys_NVM+5)& (0+255),b	;volatile
 20715                           
 20716                           ;controlMemory_MC50.c: 216:         var_sys_NVM.operationMode = 0;
 20717  005BAE  0E00               	movlw	0
 20718  005BB0  6FA4               	movwf	(_var_sys_NVM+12)& (0+255),b	;volatile
 20719                           
 20720                           ;controlMemory_MC50.c: 217:         var_sys_NVM.velocityDecelaration = 5;
 20721  005BB2  0E05               	movlw	5
 20722  005BB4  6FB0               	movwf	(_var_sys_NVM+24)& (0+255),b	;volatile
 20723                           
 20724                           ;controlMemory_MC50.c: 218:         var_sys_NVM.flashRGBMode = 3;
 20725  005BB6  0E03               	movlw	3
 20726  005BB8  6FB1               	movwf	(_var_sys_NVM+25)& (0+255),b	;volatile
 20727                           
 20728                           ;controlMemory_MC50.c: 219:         var_sys_NVM.softstop = 0;
 20729  005BBA  0E00               	movlw	0
 20730  005BBC  6FAB               	movwf	(_var_sys_NVM+19)& (0+255),b	;volatile
 20731                           
 20732                           ;controlMemory_MC50.c: 220:         var_sys_NVM.softStart = 0;
 20733  005BBE  0E00               	movlw	0
 20734  005BC0  6FAA               	movwf	(_var_sys_NVM+18)& (0+255),b	;volatile
 20735                           
 20736                           ;controlMemory_MC50.c: 221:         var_sys_NVM.walkTime = 10;
 20737  005BC2  0E0A               	movlw	10
 20738  005BC4  D039               	goto	L82
 20739  005BC6                     l19898:
 20740                           
 20741                           ; BSR set to: 0
 20742  005BC6  043A               	decf	ResetDefaultMemory@type^0,w,c
 20743  005BC8  A4D8               	btfss	status,2,c
 20744  005BCA  D01B               	goto	l19902
 20745                           
 20746                           ; BSR set to: 0
 20747                           ;controlMemory_MC50.c: 225:         var_sys_NVM.decelarationClose = 4;
 20748  005BCC  0E04               	movlw	4
 20749  005BCE  6F99               	movwf	(_var_sys_NVM+1)& (0+255),b	;volatile
 20750                           
 20751                           ;controlMemory_MC50.c: 226:         var_sys_NVM.decelarationOpen = 4;
 20752  005BD0  0E04               	movlw	4
 20753  005BD2  6F98               	movwf	_var_sys_NVM& (0+255),b	;volatile
 20754                           
 20755                           ;controlMemory_MC50.c: 227:         var_sys_NVM.motorSensitivity = 4;
 20756  005BD4  0E04               	movlw	4
 20757  005BD6  6F9B               	movwf	(_var_sys_NVM+3)& (0+255),b	;volatile
 20758                           
 20759                           ;controlMemory_MC50.c: 228:         var_sys_NVM.logicDigital = 1;
 20760  005BD8  0E01               	movlw	1
 20761  005BDA  6FA9               	movwf	(_var_sys_NVM+17)& (0+255),b	;volatile
 20762                           
 20763                           ;controlMemory_MC50.c: 229:         var_sys_NVM.Stopboton = 1;
 20764  005BDC  0E01               	movlw	1
 20765  005BDE  6FAE               	movwf	(_var_sys_NVM+22)& (0+255),b	;volatile
 20766                           
 20767                           ;controlMemory_MC50.c: 230:         var_sys_NVM.autoTimeFullClose = 0;
 20768  005BE0  0E00               	movlw	0
 20769  005BE2  6F9D               	movwf	(_var_sys_NVM+5)& (0+255),b	;volatile
 20770                           
 20771                           ;controlMemory_MC50.c: 231:         var_sys_NVM.operationMode = 0;
 20772  005BE4  0E00               	movlw	0
 20773  005BE6  6FA4               	movwf	(_var_sys_NVM+12)& (0+255),b	;volatile
 20774                           
 20775                           ;controlMemory_MC50.c: 232:         var_sys_NVM.velocityDecelaration = 5;
 20776  005BE8  0E05               	movlw	5
 20777  005BEA  6FB0               	movwf	(_var_sys_NVM+24)& (0+255),b	;volatile
 20778                           
 20779                           ;controlMemory_MC50.c: 233:         var_sys_NVM.flashRGBMode = 3;
 20780  005BEC  0E03               	movlw	3
 20781  005BEE  6FB1               	movwf	(_var_sys_NVM+25)& (0+255),b	;volatile
 20782                           
 20783                           ;controlMemory_MC50.c: 234:         var_sys_NVM.softstop = 0;
 20784  005BF0  0E00               	movlw	0
 20785  005BF2  6FAB               	movwf	(_var_sys_NVM+19)& (0+255),b	;volatile
 20786                           
 20787                           ;controlMemory_MC50.c: 235:         var_sys_NVM.softStart = 5;
 20788  005BF4  0E05               	movlw	5
 20789  005BF6  6FAA               	movwf	(_var_sys_NVM+18)& (0+255),b	;volatile
 20790                           
 20791                           ;controlMemory_MC50.c: 236:         var_sys_NVM.walkTime = 0;
 20792  005BF8  0E00               	movlw	0
 20793  005BFA  6F9C               	movwf	(_var_sys_NVM+4)& (0+255),b	;volatile
 20794                           
 20795                           ;controlMemory_MC50.c: 237:         var_sys_NVM.Direction_motor = 0 ;
 20796  005BFC  0E00               	movlw	0
 20797  005BFE  6FB3               	movwf	(_var_sys_NVM+27)& (0+255),b	;volatile
 20798                           
 20799                           ;controlMemory_MC50.c: 239:     }
 20800  005C00  D01C               	goto	l19906
 20801  005C02                     l19902:
 20802                           
 20803                           ; BSR set to: 0
 20804  005C02  0E02               	movlw	2
 20805  005C04  183A               	xorwf	ResetDefaultMemory@type^0,w,c
 20806  005C06  A4D8               	btfss	status,2,c
 20807  005C08  D018               	goto	l19906
 20808                           
 20809                           ; BSR set to: 0
 20810                           ;controlMemory_MC50.c: 241:         var_sys_NVM.decelarationClose = 6;
 20811  005C0A  0E06               	movlw	6
 20812  005C0C  6F99               	movwf	(_var_sys_NVM+1)& (0+255),b	;volatile
 20813                           
 20814                           ;controlMemory_MC50.c: 242:         var_sys_NVM.decelarationOpen = 2;
 20815  005C0E  0E02               	movlw	2
 20816  005C10  6F98               	movwf	_var_sys_NVM& (0+255),b	;volatile
 20817                           
 20818                           ;controlMemory_MC50.c: 243:         var_sys_NVM.motorSensitivity = 0;
 20819  005C12  0E00               	movlw	0
 20820  005C14  6F9B               	movwf	(_var_sys_NVM+3)& (0+255),b	;volatile
 20821                           
 20822                           ;controlMemory_MC50.c: 244:         var_sys_NVM.logicDigital = 0;
 20823  005C16  0E00               	movlw	0
 20824  005C18  6FA9               	movwf	(_var_sys_NVM+17)& (0+255),b	;volatile
 20825                           
 20826                           ;controlMemory_MC50.c: 245:         var_sys_NVM.Stopboton = 0;
 20827  005C1A  0E00               	movlw	0
 20828  005C1C  6FAE               	movwf	(_var_sys_NVM+22)& (0+255),b	;volatile
 20829                           
 20830                           ;controlMemory_MC50.c: 246:         var_sys_NVM.autoTimeFullClose = 0;
 20831  005C1E  0E00               	movlw	0
 20832  005C20  6F9D               	movwf	(_var_sys_NVM+5)& (0+255),b	;volatile
 20833                           
 20834                           ;controlMemory_MC50.c: 247:         var_sys_NVM.operationMode = 2;
 20835  005C22  0E02               	movlw	2
 20836  005C24  6FA4               	movwf	(_var_sys_NVM+12)& (0+255),b	;volatile
 20837                           
 20838                           ;controlMemory_MC50.c: 248:         var_sys_NVM.velocityDecelaration = 5;
 20839  005C26  0E05               	movlw	5
 20840  005C28  6FB0               	movwf	(_var_sys_NVM+24)& (0+255),b	;volatile
 20841                           
 20842                           ;controlMemory_MC50.c: 249:         var_sys_NVM.flashRGBMode = 1;
 20843  005C2A  0E01               	movlw	1
 20844  005C2C  6FB1               	movwf	(_var_sys_NVM+25)& (0+255),b	;volatile
 20845                           
 20846                           ;controlMemory_MC50.c: 250:         var_sys_NVM.softstop = 5;
 20847  005C2E  0E05               	movlw	5
 20848  005C30  6FAB               	movwf	(_var_sys_NVM+19)& (0+255),b	;volatile
 20849                           
 20850                           ;controlMemory_MC50.c: 251:         var_sys_NVM.softStart = 0;
 20851  005C32  0E00               	movlw	0
 20852  005C34  6FAA               	movwf	(_var_sys_NVM+18)& (0+255),b	;volatile
 20853                           
 20854                           ;controlMemory_MC50.c: 252:         var_sys_NVM.walkTime = 0;
 20855  005C36  0E00               	movlw	0
 20856  005C38                     L82:
 20857  005C38  6F9C               	movwf	(_var_sys_NVM+4)& (0+255),b	;volatile
 20858  005C3A                     l19906:
 20859                           
 20860                           ; BSR set to: 0
 20861                           ;controlMemory_MC50.c: 260:     SaveNVM_VarSystem(pageMemoryE);
 20862  005C3A  0E01               	movlw	1
 20863  005C3C  ECFD  F044         	call	_SaveNVM_VarSystem
 20864                           
 20865                           ;controlMemory_MC50.c: 261:     SaveNVM_VarSystem(pageMemoryP);
 20866  005C40  0E00               	movlw	0
 20867  005C42  ECFD  F044         	call	_SaveNVM_VarSystem
 20868                           
 20869                           ;controlMemory_MC50.c: 266:     var_sys_NVM.learningTimeToClose = 0;
 20870  005C46  0E00               	movlw	0
 20871  005C48  0100               	movlb	0	; () banked
 20872  005C4A  6FD0               	movwf	(_var_sys_NVM+56)& (0+255),b	;volatile
 20873  005C4C  0E00               	movlw	0
 20874  005C4E  6FD1               	movwf	(_var_sys_NVM+57)& (0+255),b	;volatile
 20875  005C50  0E00               	movlw	0
 20876  005C52  6FD2               	movwf	(_var_sys_NVM+58)& (0+255),b	;volatile
 20877  005C54  0E00               	movlw	0
 20878  005C56  6FD3               	movwf	(_var_sys_NVM+59)& (0+255),b	;volatile
 20879                           
 20880                           ;controlMemory_MC50.c: 267:     var_sys_NVM.learningTimeToOpen = 0;
 20881  005C58  0E00               	movlw	0
 20882  005C5A  6FCC               	movwf	(_var_sys_NVM+52)& (0+255),b	;volatile
 20883  005C5C  0E00               	movlw	0
 20884  005C5E  6FCD               	movwf	(_var_sys_NVM+53)& (0+255),b	;volatile
 20885  005C60  0E00               	movlw	0
 20886  005C62  6FCE               	movwf	(_var_sys_NVM+54)& (0+255),b	;volatile
 20887  005C64  0E00               	movlw	0
 20888  005C66  6FCF               	movwf	(_var_sys_NVM+55)& (0+255),b	;volatile
 20889                           
 20890                           ;controlMemory_MC50.c: 268:     var_sys_NVM.learningCurrentNormalClose = 0;
 20891  005C68  0E00               	movlw	0
 20892  005C6A  6FC9               	movwf	(_var_sys_NVM+49)& (0+255),b	;volatile
 20893  005C6C  0E00               	movlw	0
 20894  005C6E  6FC8               	movwf	(_var_sys_NVM+48)& (0+255),b	;volatile
 20895                           
 20896                           ;controlMemory_MC50.c: 269:     var_sys_NVM.learningCurrentNormalOpen = 0;
 20897  005C70  0E00               	movlw	0
 20898  005C72  6FCB               	movwf	(_var_sys_NVM+51)& (0+255),b	;volatile
 20899  005C74  0E00               	movlw	0
 20900  005C76  6FCA               	movwf	(_var_sys_NVM+50)& (0+255),b	;volatile
 20901                           
 20902                           ;controlMemory_MC50.c: 270:     var_sys_NVM.learningCurrentDecelarationClose = 0;
 20903  005C78  0E00               	movlw	0
 20904  005C7A  6FC0               	movwf	(_var_sys_NVM+40)& (0+255),b	;volatile
 20905  005C7C  0E00               	movlw	0
 20906  005C7E  6FC1               	movwf	(_var_sys_NVM+41)& (0+255),b	;volatile
 20907  005C80  0E00               	movlw	0
 20908  005C82  6FC2               	movwf	(_var_sys_NVM+42)& (0+255),b	;volatile
 20909  005C84  0E00               	movlw	0
 20910  005C86  6FC3               	movwf	(_var_sys_NVM+43)& (0+255),b	;volatile
 20911                           
 20912                           ;controlMemory_MC50.c: 271:     var_sys_NVM.learningCurrentDecelarationOpen = 0;
 20913  005C88  0E00               	movlw	0
 20914  005C8A  6FC4               	movwf	(_var_sys_NVM+44)& (0+255),b	;volatile
 20915  005C8C  0E00               	movlw	0
 20916  005C8E  6FC5               	movwf	(_var_sys_NVM+45)& (0+255),b	;volatile
 20917  005C90  0E00               	movlw	0
 20918  005C92  6FC6               	movwf	(_var_sys_NVM+46)& (0+255),b	;volatile
 20919  005C94  0E00               	movlw	0
 20920  005C96  6FC7               	movwf	(_var_sys_NVM+47)& (0+255),b	;volatile
 20921                           
 20922                           ; BSR set to: 0
 20923                           ;controlMemory_MC50.c: 277:     if ((PORTAbits.RA2 == 0) && (PORTAbits.RA1 == 0) && (POR
      +                          TBbits.RB0 == 0)&&(PORTAbits.RA5==0)){
 20924  005C98  A48D               	btfss	141,2,c	;volatile
 20925                           
 20926                           ; BSR set to: 0
 20927  005C9A  B28D               	btfsc	141,1,c	;volatile
 20928  005C9C  D015               	goto	l19920
 20929                           
 20930                           ; BSR set to: 0
 20931  005C9E  A08E               	btfss	142,0,c	;volatile
 20932                           
 20933                           ; BSR set to: 0
 20934  005CA0  BA8D               	btfsc	141,5,c	;volatile
 20935  005CA2  D012               	goto	l19920
 20936                           
 20937                           ; BSR set to: 0
 20938                           ;controlMemory_MC50.c: 278:      var_sys.actualCounterMoves = 0;
 20939  005CA4  0E00               	movlw	0
 20940  005CA6  0101               	movlb	1	; () banked
 20941  005CA8  6F3C               	movwf	(_var_sys+60)& (0+255),b	;volatile
 20942  005CAA  0E00               	movlw	0
 20943  005CAC  6F3D               	movwf	(_var_sys+61)& (0+255),b	;volatile
 20944  005CAE  0E00               	movlw	0
 20945  005CB0  6F3E               	movwf	(_var_sys+62)& (0+255),b	;volatile
 20946  005CB2  0E00               	movlw	0
 20947  005CB4  6F3F               	movwf	(_var_sys+63)& (0+255),b	;volatile
 20948                           
 20949                           ;controlMemory_MC50.c: 279:      var_sys_NVM.counterMoves = 0;
 20950  005CB6  0E00               	movlw	0
 20951  005CB8  0100               	movlb	0	; () banked
 20952  005CBA  6FBA               	movwf	(_var_sys_NVM+34)& (0+255),b	;volatile
 20953  005CBC  0E00               	movlw	0
 20954  005CBE  6FBB               	movwf	(_var_sys_NVM+35)& (0+255),b	;volatile
 20955  005CC0  0E00               	movlw	0
 20956  005CC2  6FBC               	movwf	(_var_sys_NVM+36)& (0+255),b	;volatile
 20957  005CC4  0E00               	movlw	0
 20958  005CC6  6FBD               	movwf	(_var_sys_NVM+37)& (0+255),b	;volatile
 20959  005CC8                     l19920:
 20960                           
 20961                           ; BSR set to: 0
 20962                           ;controlMemory_MC50.c: 284:     SaveNVM_VarSystem(pageMemoryCounters);
 20963  005CC8  0E02               	movlw	2
 20964  005CCA  ECFD  F044         	call	_SaveNVM_VarSystem
 20965                           
 20966                           ;controlMemory_MC50.c: 285:     SaveNVM_VarSystem(pageMemoryLearningVars);
 20967  005CCE  0E03               	movlw	3
 20968  005CD0  ECFD  F044         	call	_SaveNVM_VarSystem
 20969  005CD4  0012               	return		;funcret
 20970  005CD6                     __end_of_ResetDefaultMemory:
 20971                           	callstack 0
 20972                           
 20973 ;; *************** function _I2C1_Read1ByteRegister *****************
 20974 ;; Defined at:
 20975 ;;		line 65 in file "mcc_generated_files/examples/i2c1_master_example.c"
 20976 ;; Parameters:    Size  Location     Type
 20977 ;;  address         1    wreg     unsigned char 
 20978 ;;  reg             1   33[COMRAM] unsigned char 
 20979 ;; Auto vars:     Size  Location     Type
 20980 ;;  address         1   34[COMRAM] unsigned char 
 20981 ;;  returnValue     1   35[COMRAM] unsigned char 
 20982 ;; Return value:  Size  Location     Type
 20983 ;;                  1    wreg      unsigned char 
 20984 ;; Registers used:
 20985 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20986 ;; Tracked objects:
 20987 ;;		On entry : 31/0
 20988 ;;		On exit  : 33/2
 20989 ;;		Unchanged: 0/0
 20990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20991 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20992 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20994 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20995 ;;Total ram usage:        3 bytes
 20996 ;; Hardware stack levels used: 1
 20997 ;; Hardware stack levels required when called: 12
 20998 ;; This function calls:
 20999 ;;		_I2C1_Close
 21000 ;;		_I2C1_MasterWrite
 21001 ;;		_I2C1_Open
 21002 ;;		_I2C1_SetAddressNackCallback
 21003 ;;		_I2C1_SetBuffer
 21004 ;;		_I2C1_SetDataCompleteCallback
 21005 ;; This function is called by:
 21006 ;;		_loadNVM_VarSystem
 21007 ;; This function uses a non-reentrant model
 21008 ;;
 21009                           
 21010                           	psect	text77
 21011  0082F0                     __ptext77:
 21012                           	callstack 0
 21013  0082F0                     _I2C1_Read1ByteRegister:
 21014                           	callstack 17
 21015                           
 21016                           ;incstack = 0
 21017                           ;I2C1_Read1ByteRegister@address stored from wreg
 21018  0082F0  6E23               	movwf	I2C1_Read1ByteRegister@address^0,c
 21019                           
 21020                           ;mcc_generated_files/examples/i2c1_master_example.c: 65: uint8_t I2C1_Read1ByteRegister(
      +                          i2c1_address_t address, uint8_t reg);mcc_generated_files/examples/i2c1_master_example.c:
      +                           66: {;mcc_generated_files/examples/i2c1_master_example.c: 67:     uint8_t returnValue =
      +                           0x00;
 21021  0082F2  0E00               	movlw	0
 21022  0082F4  6E24               	movwf	I2C1_Read1ByteRegister@returnValue^0,c
 21023  0082F6                     l21066:
 21024  0082F6  5023               	movf	I2C1_Read1ByteRegister@address^0,w,c
 21025  0082F8  ECD7  F03C         	call	_I2C1_Open
 21026  0082FC  0900               	iorlw	0
 21027  0082FE  B4D8               	btfsc	status,2,c
 21028  008300  D7FA               	goto	l21066
 21029                           
 21030                           ;mcc_generated_files/examples/i2c1_master_example.c: 70:     I2C1_SetDataCompleteCallbac
      +                          k(rd1RegCompleteHandler,&returnValue);
 21031  008302  0E30               	movlw	low _rd1RegCompleteHandler@i2c1_master_example$F500
 21032  008304  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 21033  008306  0E8C               	movlw	high _rd1RegCompleteHandler@i2c1_master_example$F500
 21034  008308  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 21035  00830A  0E24               	movlw	low I2C1_Read1ByteRegister@returnValue
 21036  00830C  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 21037  00830E  6A18               	clrf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 21038  008310  EC44  F048         	call	_I2C1_SetDataCompleteCallback	;wreg free
 21039                           
 21040                           ;mcc_generated_files/examples/i2c1_master_example.c: 71:     I2C1_SetBuffer(&reg,1);
 21041  008314  0E22               	movlw	low I2C1_Read1ByteRegister@reg
 21042  008316  6E10               	movwf	I2C1_SetBuffer@buffer^0,c
 21043  008318  6A11               	clrf	(I2C1_SetBuffer@buffer+1)^0,c
 21044  00831A  0E00               	movlw	0
 21045  00831C  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 21046  00831E  0E01               	movlw	1
 21047  008320  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 21048  008322  ECFB  F047         	call	_I2C1_SetBuffer	;wreg free
 21049                           
 21050                           ; BSR set to: 2
 21051                           ;mcc_generated_files/examples/i2c1_master_example.c: 72:     I2C1_SetAddressNackCallback
      +                          (((void*)0),((void*)0));
 21052  008326  0E00               	movlw	0
 21053  008328  6E15               	movwf	I2C1_SetAddressNackCallback@cb^0,c
 21054  00832A  0E00               	movlw	0
 21055  00832C  6E16               	movwf	(I2C1_SetAddressNackCallback@cb+1)^0,c
 21056  00832E  0E00               	movlw	0
 21057  008330  6E17               	movwf	I2C1_SetAddressNackCallback@ptr^0,c
 21058  008332  0E00               	movlw	0
 21059  008334  6E18               	movwf	(I2C1_SetAddressNackCallback@ptr+1)^0,c
 21060  008336  EC2C  F048         	call	_I2C1_SetAddressNackCallback	;wreg free
 21061                           
 21062                           ;mcc_generated_files/examples/i2c1_master_example.c: 73:     I2C1_MasterWrite();
 21063  00833A  ECFA  F048         	call	_I2C1_MasterWrite	;wreg free
 21064  00833E                     l21076:
 21065  00833E  EC6D  F047         	call	_I2C1_Close	;wreg free
 21066  008342  06E8               	decf	wreg,f,c
 21067  008344  B4D8               	btfsc	status,2,c
 21068  008346  D7FB               	goto	l21076
 21069                           
 21070                           ;mcc_generated_files/examples/i2c1_master_example.c: 76:     return returnValue;
 21071  008348  5024               	movf	I2C1_Read1ByteRegister@returnValue^0,w,c
 21072  00834A  0012               	return		;funcret
 21073  00834C                     __end_of_I2C1_Read1ByteRegister:
 21074                           	callstack 0
 21075                           
 21076 ;; *************** function _getKeyPressed *****************
 21077 ;; Defined at:
 21078 ;;		line 217 in file "inputs_MC50.c"
 21079 ;; Parameters:    Size  Location     Type
 21080 ;;		None
 21081 ;; Auto vars:     Size  Location     Type
 21082 ;;  temp            1   15[COMRAM] char 
 21083 ;; Return value:  Size  Location     Type
 21084 ;;                  1    wreg      char 
 21085 ;; Registers used:
 21086 ;;		wreg, status,2, status,0
 21087 ;; Tracked objects:
 21088 ;;		On entry : 3E/1
 21089 ;;		On exit  : 3D/0
 21090 ;;		Unchanged: 0/0
 21091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21092 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21093 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21095 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21096 ;;Total ram usage:        1 bytes
 21097 ;; Hardware stack levels used: 1
 21098 ;; Hardware stack levels required when called: 4
 21099 ;; This function calls:
 21100 ;;		Nothing
 21101 ;; This function is called by:
 21102 ;;		_main
 21103 ;; This function uses a non-reentrant model
 21104 ;;
 21105                           
 21106                           	psect	text78
 21107  009040                     __ptext78:
 21108                           	callstack 0
 21109  009040                     _getKeyPressed:
 21110                           	callstack 26
 21111                           
 21112                           ;inputs_MC50.c: 218:     signed char temp=-1;
 21113                           
 21114                           ;incstack = 0
 21115  009040  6810               	setf	getKeyPressed@temp^0,c
 21116                           
 21117                           ;inputs_MC50.c: 219:     if(RFFull)
 21118  009042  0100               	movlb	0	; () banked
 21119  009044  518B               	movf	_RFFull& (0+255),w,b	;volatile
 21120  009046  B4D8               	btfsc	status,2,c
 21121  009048  D005               	goto	l16490
 21122                           
 21123                           ; BSR set to: 0
 21124                           ;inputs_MC50.c: 220:     {;inputs_MC50.c: 221:         temp=(BufferRF[7]&0xF0)>>4;
 21125  00904A  0102               	movlb	2	; () banked
 21126  00904C  39CF               	swapf	(_BufferRF+7)& (0+255),w,b
 21127  00904E  0B0F               	andlw	15
 21128  009050  0B0F               	andlw	15
 21129  009052  6E10               	movwf	getKeyPressed@temp^0,c
 21130  009054                     l16490:
 21131                           
 21132                           ;inputs_MC50.c: 223:     return temp;
 21133  009054  5010               	movf	getKeyPressed@temp^0,w,c
 21134  009056  0012               	return		;funcret
 21135  009058                     __end_of_getKeyPressed:
 21136                           	callstack 0
 21137                           
 21138 ;; *************** function _eusartparser *****************
 21139 ;; Defined at:
 21140 ;;		line 441 in file "eusartparser.c"
 21141 ;; Parameters:    Size  Location     Type
 21142 ;;  package         1   57[COMRAM] PTR struct package_t
 21143 ;;		 -> main@package(7), 
 21144 ;; Auto vars:     Size  Location     Type
 21145 ;;  a               7    0        struct package_t
 21146 ;; Return value:  Size  Location     Type
 21147 ;;                  1    wreg      void 
 21148 ;; Registers used:
 21149 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 21150 ;; Tracked objects:
 21151 ;;		On entry : 3F/E
 21152 ;;		On exit  : 0/0
 21153 ;;		Unchanged: 0/0
 21154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21155 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21156 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21157 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21158 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21159 ;;Total ram usage:        3 bytes
 21160 ;; Hardware stack levels used: 1
 21161 ;; Hardware stack levels required when called: 14
 21162 ;; This function calls:
 21163 ;;		_SaveNVM_VarSystem
 21164 ;;		_read_eusartparser
 21165 ;;		_write_eusartparser
 21166 ;;		_write_package
 21167 ;; This function is called by:
 21168 ;;		_main
 21169 ;; This function uses a non-reentrant model
 21170 ;;
 21171                           
 21172                           	psect	text79
 21173  006E6C                     __ptext79:
 21174                           	callstack 0
 21175  006E6C                     _eusartparser:
 21176                           	callstack 16
 21177                           
 21178                           ; BSR set to: 14
 21179                           ;eusartparser.c: 442:         struct package_t a;;eusartparser.c: 443:         switch(pa
      +                          ckage->functioncode){
 21180                           
 21181                           ;incstack = 0
 21182  006E6C  D04E               	goto	l22760
 21183  006E6E                     l22732:
 21184                           
 21185                           ; BSR set to: 0
 21186                           ;eusartparser.c: 445:                 if(programmer_enable)
 21187  006E6E  5185               	movf	_programmer_enable& (0+255),w,b
 21188  006E70  B4D8               	btfsc	status,2,c
 21189  006E72  0012               	return	
 21190                           
 21191                           ; BSR set to: 0
 21192                           ;eusartparser.c: 446:                     read_eusartparser(package);
 21193  006E74  C03A  F018         	movff	eusartparser@package,read_eusartparser@package
 21194  006E78  EC4E  F012         	call	_read_eusartparser	;wreg free
 21195  006E7C  0012               	return	
 21196  006E7E                     l22736:
 21197                           
 21198                           ; BSR set to: 0
 21199                           ;eusartparser.c: 450:                 if(programmer_enable)
 21200  006E7E  5185               	movf	_programmer_enable& (0+255),w,b
 21201  006E80  B4D8               	btfsc	status,2,c
 21202  006E82  0012               	return	
 21203                           
 21204                           ; BSR set to: 0
 21205                           ;eusartparser.c: 451:                     write_eusartparser(*package);
 21206  006E84  503A               	movf	eusartparser@package^0,w,c
 21207  006E86  6ED9               	movwf	fsr2l,c
 21208  006E88  6ADA               	clrf	fsr2h,c
 21209  006E8A  EE00  F010         	lfsr	0,write_eusartparser@package
 21210  006E8E  0E06               	movlw	6
 21211  006E90                     u27741:
 21212  006E90  CFDB FFEB          	movff	plusw2,plusw0
 21213  006E94  06E8               	decf	wreg,f,c
 21214  006E96  E2FC               	bc	u27741
 21215  006E98  EC54  F017         	call	_write_eusartparser	;wreg free
 21216  006E9C  0012               	return	
 21217  006E9E                     l22740:
 21218                           
 21219                           ; BSR set to: 0
 21220                           ;eusartparser.c: 455:                 if(programmer_enable){
 21221  006E9E  5185               	movf	_programmer_enable& (0+255),w,b
 21222  006EA0  B4D8               	btfsc	status,2,c
 21223  006EA2  D008               	goto	l22746
 21224                           
 21225                           ; BSR set to: 0
 21226                           ;eusartparser.c: 456:                     SaveNVM_VarSystem(pageMemoryE);
 21227  006EA4  0E01               	movlw	1
 21228  006EA6  ECFD  F044         	call	_SaveNVM_VarSystem
 21229                           
 21230                           ;eusartparser.c: 457:                     SaveNVM_VarSystem(pageMemoryP);
 21231  006EAA  0E00               	movlw	0
 21232  006EAC  ECFD  F044         	call	_SaveNVM_VarSystem
 21233                           
 21234                           ;eusartparser.c: 458:                     programmer_enable=0;
 21235  006EB0  0E00               	movlw	0
 21236  006EB2  D005               	goto	L83
 21237  006EB4                     l22746:
 21238                           
 21239                           ; BSR set to: 0
 21240                           ;eusartparser.c: 461:                     if((sm_state_Main_t)main_stateMachine.current_
      +                          state==st_standBy)
 21241  006EB4  0101               	movlb	1	; () banked
 21242  006EB6  51ED               	movf	_main_stateMachine& (0+255),w,b
 21243  006EB8  A4D8               	btfss	status,2,c
 21244  006EBA  D004               	goto	l22750
 21245                           
 21246                           ; BSR set to: 1
 21247                           ;eusartparser.c: 462:                         programmer_enable=1;
 21248  006EBC  0E01               	movlw	1
 21249  006EBE                     L83:
 21250  006EBE  0100               	movlb	0	; () banked
 21251  006EC0  6F85               	movwf	_programmer_enable& (0+255),b
 21252  006EC2  D016               	goto	l22754
 21253  006EC4                     l22750:
 21254                           
 21255                           ; BSR set to: 1
 21256                           ;eusartparser.c: 464:                         package->data.data16=(uint16_t)2;
 21257  006EC4  503A               	movf	eusartparser@package^0,w,c
 21258  006EC6  6ED9               	movwf	fsr2l,c
 21259  006EC8  6ADA               	clrf	fsr2h,c
 21260  006ECA  0E02               	movlw	2
 21261  006ECC  26D9               	addwf	fsr2l,f,c
 21262  006ECE  0E02               	movlw	2
 21263  006ED0  6EDE               	movwf	postinc2,c
 21264  006ED2  0E00               	movlw	0
 21265  006ED4  6EDD               	movwf	postdec2,c
 21266  006ED6                     l22752:
 21267                           
 21268                           ;eusartparser.c: 465:                         write_package(*package);
 21269  006ED6  503A               	movf	eusartparser@package^0,w,c
 21270  006ED8  6ED9               	movwf	fsr2l,c
 21271  006EDA  6ADA               	clrf	fsr2h,c
 21272  006EDC  EE00  F011         	lfsr	0,write_package@package
 21273  006EE0  0E06               	movlw	6
 21274  006EE2                     u27771:
 21275  006EE2  CFDB FFEB          	movff	plusw2,plusw0
 21276  006EE6  06E8               	decf	wreg,f,c
 21277  006EE8  E2FC               	bc	u27771
 21278  006EEA  ECAA  F045         	call	_write_package	;wreg free
 21279                           
 21280                           ;eusartparser.c: 466:                         break;
 21281  006EEE  0012               	return	
 21282  006EF0                     l22754:
 21283                           
 21284                           ; BSR set to: 0
 21285                           ;eusartparser.c: 470:                 package->data.data16=(uint16_t)programmer_enable;
 21286  006EF0  5185               	movf	_programmer_enable& (0+255),w,b
 21287  006EF2  6FDC               	movwf	??_eusartparser& (0+255),b
 21288  006EF4  6BDD               	clrf	(??_eusartparser+1)& (0+255),b
 21289  006EF6  503A               	movf	eusartparser@package^0,w,c
 21290  006EF8  6ED9               	movwf	fsr2l,c
 21291  006EFA  6ADA               	clrf	fsr2h,c
 21292  006EFC  0E02               	movlw	2
 21293  006EFE  26D9               	addwf	fsr2l,f,c
 21294  006F00  C0DC  FFDE         	movff	??_eusartparser,postinc2
 21295  006F04  C0DD  FFDD         	movff	??_eusartparser+1,postdec2
 21296  006F08  D7E6               	goto	l22752
 21297  006F0A                     l22760:
 21298                           
 21299                           ; BSR set to: 14
 21300  006F0A  503A               	movf	eusartparser@package^0,w,c
 21301  006F0C  6ED9               	movwf	fsr2l,c
 21302  006F0E  6ADA               	clrf	fsr2h,c
 21303  006F10  50DF               	movf	indf2,w,c
 21304  006F12  0100               	movlb	0	; () banked
 21305  006F14  6FDC               	movwf	??_eusartparser& (0+255),b
 21306  006F16  6BDD               	clrf	(??_eusartparser+1)& (0+255),b
 21307                           
 21308                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 21309                           ; Switch size 1, requested type "simple"
 21310                           ; Number of cases is 1, Range of values is 0 to 0
 21311                           ; switch strategies available:
 21312                           ; Name         Instructions Cycles
 21313                           ; simple_byte            4     3 (average)
 21314                           ;	Chosen strategy is simple_byte
 21315  006F18  51DD               	movf	(??_eusartparser+1)& (0+255),w,b
 21316  006F1A  0A00               	xorlw	0	; case 0
 21317  006F1C  A4D8               	btfss	status,2,c
 21318  006F1E  0012               	return	
 21319                           
 21320                           ; BSR set to: 0
 21321                           ; Switch size 1, requested type "simple"
 21322                           ; Number of cases is 3, Range of values is 0 to 2
 21323                           ; switch strategies available:
 21324                           ; Name         Instructions Cycles
 21325                           ; simple_byte           10     6 (average)
 21326                           ;	Chosen strategy is simple_byte
 21327  006F20  51DC               	movf	??_eusartparser& (0+255),w,b
 21328  006F22  0A00               	xorlw	0	; case 0
 21329  006F24  B4D8               	btfsc	status,2,c
 21330  006F26  D7A3               	goto	l22732
 21331  006F28  0A01               	xorlw	1	; case 1
 21332  006F2A  B4D8               	btfsc	status,2,c
 21333  006F2C  D7A8               	goto	l22736
 21334  006F2E  0A03               	xorlw	3	; case 2
 21335  006F30  A4D8               	btfss	status,2,c
 21336  006F32  0012               	return	
 21337  006F34  D7B4               	goto	l22740
 21338  006F36                     __end_of_eusartparser:
 21339                           	callstack 0
 21340                           
 21341 ;; *************** function _write_eusartparser *****************
 21342 ;; Defined at:
 21343 ;;		line 241 in file "eusartparser.c"
 21344 ;; Parameters:    Size  Location     Type
 21345 ;;  package         7   15[COMRAM] struct package_t
 21346 ;; Auto vars:     Size  Location     Type
 21347 ;;  debug2          2   32[COMRAM] volatile int 
 21348 ;;  debug           2   30[COMRAM] volatile int 
 21349 ;; Return value:  Size  Location     Type
 21350 ;;                  1    wreg      void 
 21351 ;; Registers used:
 21352 ;;		wreg, status,2, status,0
 21353 ;; Tracked objects:
 21354 ;;		On entry : 3F/0
 21355 ;;		On exit  : 3F/0
 21356 ;;		Unchanged: 0/0
 21357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21358 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21359 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21360 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21361 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21362 ;;Total ram usage:       19 bytes
 21363 ;; Hardware stack levels used: 1
 21364 ;; Hardware stack levels required when called: 4
 21365 ;; This function calls:
 21366 ;;		Nothing
 21367 ;; This function is called by:
 21368 ;;		_eusartparser
 21369 ;; This function uses a non-reentrant model
 21370 ;;
 21371                           
 21372                           	psect	text80
 21373  002EA8                     __ptext80:
 21374                           	callstack 0
 21375  002EA8                     _write_eusartparser:
 21376                           	callstack 25
 21377                           
 21378                           ; BSR set to: 0
 21379                           ;eusartparser.c: 242:         volatile int debug=(uint8_t)package.address;
 21380                           
 21381                           ;incstack = 0
 21382  002EA8  C011  F01F         	movff	write_eusartparser@package+1,write_eusartparser@debug	;volatile
 21383  002EAC  6A20               	clrf	(write_eusartparser@debug+1)^0,c	;volatile
 21384                           
 21385                           ; BSR set to: 0
 21386                           ;eusartparser.c: 243:         volatile int debug2=0x10;
 21387  002EAE  0E00               	movlw	0
 21388  002EB0  6E22               	movwf	(write_eusartparser@debug2+1)^0,c	;volatile
 21389  002EB2  0E10               	movlw	16
 21390  002EB4  6E21               	movwf	write_eusartparser@debug2^0,c	;volatile
 21391                           
 21392                           ;eusartparser.c: 244:         switch((uint8_t)package.address){
 21393  002EB6  D180               	goto	l16182
 21394  002EB8                     l3586:
 21395                           
 21396                           ; BSR set to: 0
 21397                           ;eusartparser.c: 249:                 var_sys_NVM.decelarationOpen=package.data.data8[0]
      +                          ;
 21398  002EB8  C012  F098         	movff	write_eusartparser@package+2,_var_sys_NVM	;volatile
 21399                           
 21400                           ;eusartparser.c: 250:                 var_sys_NVM.decelarationClose=package.data.data8[1
      +                          ];
 21401  002EBC  C013  F099         	movff	write_eusartparser@package+3,_var_sys_NVM+1	;volatile
 21402                           
 21403                           ;eusartparser.c: 251:                 break;
 21404  002EC0  0012               	return	
 21405  002EC2                     l3588:
 21406                           
 21407                           ; BSR set to: 0
 21408                           ;eusartparser.c: 255:                 var_sys_NVM.motorPower=package.data.data8[0];
 21409  002EC2  C012  F09A         	movff	write_eusartparser@package+2,_var_sys_NVM+2	;volatile
 21410                           
 21411                           ;eusartparser.c: 256:                 var_sys_NVM.motorSensitivity=package.data.data8[1]
      +                          ;
 21412  002EC6  C013  F09B         	movff	write_eusartparser@package+3,_var_sys_NVM+3	;volatile
 21413                           
 21414                           ;eusartparser.c: 257:                 break;
 21415  002ECA  0012               	return	
 21416  002ECC                     l3589:
 21417                           
 21418                           ; BSR set to: 0
 21419                           ;eusartparser.c: 261:                 var_sys_NVM.walkTime=package.data.data8[1];
 21420  002ECC  C013  F09C         	movff	write_eusartparser@package+3,_var_sys_NVM+4	;volatile
 21421                           
 21422                           ;eusartparser.c: 262:                 break;
 21423  002ED0  0012               	return	
 21424  002ED2                     l3591:
 21425                           
 21426                           ; BSR set to: 0
 21427                           ;eusartparser.c: 267:                 var_sys_NVM.autoTimeFullClose=package.data.data8[0
      +                          ];
 21428  002ED2  C012  F09D         	movff	write_eusartparser@package+2,_var_sys_NVM+5	;volatile
 21429                           
 21430                           ;eusartparser.c: 268:                 var_sys_NVM.autoTimeWalkClose=package.data.data8[1
      +                          ];
 21431  002ED6  C013  F09E         	movff	write_eusartparser@package+3,_var_sys_NVM+6	;volatile
 21432                           
 21433                           ;eusartparser.c: 269:                 break;
 21434  002EDA  0012               	return	
 21435  002EDC                     l3593:
 21436                           
 21437                           ; BSR set to: 0
 21438                           ;eusartparser.c: 274:                 var_sys_NVM.photoCellIsON=package.data.data8[0];
 21439  002EDC  C012  F09F         	movff	write_eusartparser@package+2,_var_sys_NVM+7	;volatile
 21440                           
 21441                           ;eusartparser.c: 275:                 var_sys_NVM.photoCellInOpen=package.data.data8[1];
 21442  002EE0  C013  F0A0         	movff	write_eusartparser@package+3,_var_sys_NVM+8	;volatile
 21443                           
 21444                           ;eusartparser.c: 276:                 break;
 21445  002EE4  0012               	return	
 21446  002EE6                     l3594:
 21447                           
 21448                           ; BSR set to: 0
 21449                           ;eusartparser.c: 280:                 var_sys_NVM.securityBandIsON=package.data.data8[0]
      +                          ;
 21450  002EE6  C012  F0A1         	movff	write_eusartparser@package+2,_var_sys_NVM+9	;volatile
 21451                           
 21452                           ;eusartparser.c: 281:                 var_sys_NVM.securityBandType=package.data.data8[1]
      +                          ;
 21453  002EEA  C013  F0A2         	movff	write_eusartparser@package+3,_var_sys_NVM+10	;volatile
 21454                           
 21455                           ;eusartparser.c: 282:                 break;
 21456  002EEE  0012               	return	
 21457  002EF0                     l3595:
 21458                           
 21459                           ; BSR set to: 0
 21460                           ;eusartparser.c: 286:                 var_sys_NVM.securityBandInOpen=package.data.data8[
      +                          1];
 21461  002EF0  C013  F0A3         	movff	write_eusartparser@package+3,_var_sys_NVM+11	;volatile
 21462                           
 21463                           ;eusartparser.c: 287:                 break;
 21464  002EF4  0012               	return	
 21465  002EF6                     l3596:
 21466                           
 21467                           ; BSR set to: 0
 21468                           ;eusartparser.c: 291:                 var_sys_NVM.operationMode=package.data.data8[1];
 21469  002EF6  C013  F0A4         	movff	write_eusartparser@package+3,_var_sys_NVM+12	;volatile
 21470                           
 21471                           ;eusartparser.c: 292:                 break;
 21472  002EFA  0012               	return	
 21473  002EFC                     l3597:
 21474                           
 21475                           ; BSR set to: 0
 21476                           ;eusartparser.c: 296:                 var_sys_NVM.flashLightMode=package.data.data8[1];
 21477  002EFC  C013  F0A5         	movff	write_eusartparser@package+3,_var_sys_NVM+13	;volatile
 21478                           
 21479                           ;eusartparser.c: 297:                 break;
 21480  002F00  0012               	return	
 21481  002F02                     l3598:
 21482                           
 21483                           ; BSR set to: 0
 21484                           ;eusartparser.c: 301:                 var_sys_NVM.programmingDistance=package.data.data8
      +                          [1];
 21485  002F02  C013  F0A6         	movff	write_eusartparser@package+3,_var_sys_NVM+14	;volatile
 21486                           
 21487                           ;eusartparser.c: 302:                 break;
 21488  002F06  0012               	return	
 21489  002F08                     l3599:
 21490                           
 21491                           ; BSR set to: 0
 21492                           ;eusartparser.c: 306:                 var_sys_NVM.decelarationSensivity=package.data.dat
      +                          a8[1];
 21493  002F08  C013  F0A7         	movff	write_eusartparser@package+3,_var_sys_NVM+15	;volatile
 21494                           
 21495                           ;eusartparser.c: 307:                 break;
 21496  002F0C  0012               	return	
 21497  002F0E                     l3600:
 21498                           
 21499                           ; BSR set to: 0
 21500                           ;eusartparser.c: 312:                 var_sys_NVM.homemPresente=package.data.data8[1];
 21501  002F0E  C013  F0A8         	movff	write_eusartparser@package+3,_var_sys_NVM+16	;volatile
 21502                           
 21503                           ;eusartparser.c: 313:                 break;
 21504  002F12  0012               	return	
 21505  002F14                     l3602:
 21506                           
 21507                           ; BSR set to: 0
 21508                           ;eusartparser.c: 318:                 var_sys_NVM.logicDigital=package.data.data8[1];
 21509  002F14  C013  F0A9         	movff	write_eusartparser@package+3,_var_sys_NVM+17	;volatile
 21510                           
 21511                           ;eusartparser.c: 319:                 break;
 21512  002F18  0012               	return	
 21513  002F1A                     l3603:
 21514                           
 21515                           ; BSR set to: 0
 21516                           ;eusartparser.c: 323:                 var_sys_NVM.softStart=package.data.data8[0];
 21517  002F1A  C012  F0AA         	movff	write_eusartparser@package+2,_var_sys_NVM+18	;volatile
 21518                           
 21519                           ;eusartparser.c: 324:                 var_sys_NVM.softstop=package.data.data8[1];
 21520  002F1E  C013  F0AB         	movff	write_eusartparser@package+3,_var_sys_NVM+19	;volatile
 21521                           
 21522                           ;eusartparser.c: 325:                 break;
 21523  002F22  0012               	return	
 21524  002F24                     l3605:
 21525                           
 21526                           ; BSR set to: 0
 21527                           ;eusartparser.c: 330:                 var_sys_NVM.ligthTime=package.data.data8[1];
 21528  002F24  C013  F0AC         	movff	write_eusartparser@package+3,_var_sys_NVM+20	;volatile
 21529                           
 21530                           ;eusartparser.c: 331:                 break;
 21531  002F28  0012               	return	
 21532  002F2A                     l3607:
 21533                           
 21534                           ; BSR set to: 0
 21535                           ;eusartparser.c: 336:                 var_sys_NVM.folow_me=package.data.data8[1];
 21536  002F2A  C013  F0AD         	movff	write_eusartparser@package+3,_var_sys_NVM+21	;volatile
 21537                           
 21538                           ;eusartparser.c: 337:                 break;
 21539  002F2E  0012               	return	
 21540  002F30                     l3608:
 21541                           
 21542                           ; BSR set to: 0
 21543                           ;eusartparser.c: 341:                 var_sys_NVM.Stopboton=package.data.data8[1];
 21544  002F30  C013  F0AE         	movff	write_eusartparser@package+3,_var_sys_NVM+22	;volatile
 21545                           
 21546                           ;eusartparser.c: 342:                 break;
 21547  002F34  0012               	return	
 21548  002F36                     l3609:
 21549                           
 21550                           ; BSR set to: 0
 21551                           ;eusartparser.c: 346:                 var_sys_NVM.electricBrake=package.data.data8[1];
 21552  002F36  C013  F0AF         	movff	write_eusartparser@package+3,_var_sys_NVM+23	;volatile
 21553                           
 21554                           ;eusartparser.c: 347:                 break;
 21555  002F3A  0012               	return	
 21556  002F3C                     l3610:
 21557                           
 21558                           ; BSR set to: 0
 21559                           ;eusartparser.c: 351:                 var_sys_NVM.velocityDecelaration=package.data.data
      +                          8[1];
 21560  002F3C  C013  F0B0         	movff	write_eusartparser@package+3,_var_sys_NVM+24	;volatile
 21561                           
 21562                           ;eusartparser.c: 352:                 break;
 21563  002F40  0012               	return	
 21564  002F42                     l3612:
 21565                           
 21566                           ; BSR set to: 0
 21567                           ;eusartparser.c: 357:                 var_sys_NVM.flashRGBMode=package.data.data8[1];
 21568  002F42  C013  F0B1         	movff	write_eusartparser@package+3,_var_sys_NVM+25	;volatile
 21569                           
 21570                           ;eusartparser.c: 358:                 break;
 21571  002F46  0012               	return	
 21572  002F48                     l3613:
 21573                           
 21574                           ; BSR set to: 0
 21575                           ;eusartparser.c: 362:                 var_sys_NVM.Direction_motor=package.data.data8[1];
 21576  002F48  C013  F0B3         	movff	write_eusartparser@package+3,_var_sys_NVM+27	;volatile
 21577                           
 21578                           ;eusartparser.c: 363:                 break;
 21579  002F4C  0012               	return	
 21580  002F4E                     l3614:
 21581                           
 21582                           ; BSR set to: 0
 21583                           ;eusartparser.c: 367:                 var_sys_NVM.TypeofMotor=package.data.data8[1];
 21584  002F4E  C013  F0B4         	movff	write_eusartparser@package+3,_var_sys_NVM+28	;volatile
 21585                           
 21586                           ;eusartparser.c: 368:                 break;
 21587  002F52  0012               	return	
 21588  002F54                     l3615:
 21589                           
 21590                           ; BSR set to: 0
 21591                           ;eusartparser.c: 372:                 var_sys_NVM.positionRemotesFull=package.data.data8
      +                          [0];
 21592  002F54  C012  F0B8         	movff	write_eusartparser@package+2,_var_sys_NVM+32	;volatile
 21593                           
 21594                           ;eusartparser.c: 373:                 var_sys_NVM.positionRemotesWalk=package.data.data8
      +                          [1];
 21595  002F58  C013  F0B9         	movff	write_eusartparser@package+3,_var_sys_NVM+33	;volatile
 21596                           
 21597                           ;eusartparser.c: 374:                 break;
 21598  002F5C  0012               	return	
 21599  002F5E                     l16160:
 21600                           
 21601                           ; BSR set to: 0
 21602                           ;eusartparser.c: 377:                 var_sys_NVM.counterMoves=var_sys_NVM.counterMoves|
      +                          ((uint32_t)(package.data.data16&0xFFFF)<<(uint8_t)(1*16));
 21603  002F5E  5012               	movf	(write_eusartparser@package+2)^0,w,c
 21604  002F60  6E17               	movwf	??_write_eusartparser^0,c
 21605  002F62  5013               	movf	(write_eusartparser@package+3)^0,w,c
 21606  002F64  6E18               	movwf	(??_write_eusartparser+1)^0,c
 21607  002F66  6A19               	clrf	(??_write_eusartparser+2)^0,c
 21608  002F68  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 21609  002F6A  C018  F01A         	movff	??_write_eusartparser+1,??_write_eusartparser+3
 21610  002F6E  C017  F019         	movff	??_write_eusartparser,??_write_eusartparser+2
 21611  002F72  6A18               	clrf	(??_write_eusartparser+1)^0,c
 21612  002F74  6A17               	clrf	??_write_eusartparser^0,c
 21613  002F76  51BA               	movf	(_var_sys_NVM+34)& (0+255),w,b	;volatile
 21614  002F78  1017               	iorwf	??_write_eusartparser^0,w,c
 21615  002F7A  6FBA               	movwf	(_var_sys_NVM+34)& (0+255),b	;volatile
 21616  002F7C  51BB               	movf	(_var_sys_NVM+35)& (0+255),w,b	;volatile
 21617  002F7E  1018               	iorwf	(??_write_eusartparser+1)^0,w,c
 21618  002F80  6FBB               	movwf	(_var_sys_NVM+35)& (0+255),b	;volatile
 21619  002F82  51BC               	movf	(_var_sys_NVM+36)& (0+255),w,b	;volatile
 21620  002F84  1019               	iorwf	(??_write_eusartparser+2)^0,w,c
 21621  002F86  6FBC               	movwf	(_var_sys_NVM+36)& (0+255),b	;volatile
 21622  002F88  51BD               	movf	(_var_sys_NVM+37)& (0+255),w,b	;volatile
 21623  002F8A  101A               	iorwf	(??_write_eusartparser+3)^0,w,c
 21624  002F8C  6FBD               	movwf	(_var_sys_NVM+37)& (0+255),b	;volatile
 21625                           
 21626                           ;eusartparser.c: 378:                 var_sys_NVM.counterMoves=var_sys_NVM.counterMoves&
      +                          ~((uint32_t)(~package.data.data16&0xFFFF)<<(uint8_t)(1*16));
 21627  002F8E  1C12               	comf	(write_eusartparser@package+2)^0,w,c
 21628  002F90  6E17               	movwf	??_write_eusartparser^0,c
 21629  002F92  1C13               	comf	(write_eusartparser@package+3)^0,w,c
 21630  002F94  6E18               	movwf	(??_write_eusartparser+1)^0,c
 21631  002F96  6A19               	clrf	(??_write_eusartparser+2)^0,c
 21632  002F98  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 21633  002F9A  C018  F01A         	movff	??_write_eusartparser+1,??_write_eusartparser+3
 21634  002F9E  C017  F019         	movff	??_write_eusartparser,??_write_eusartparser+2
 21635  002FA2  6A18               	clrf	(??_write_eusartparser+1)^0,c
 21636  002FA4  6A17               	clrf	??_write_eusartparser^0,c
 21637  002FA6  1C17               	comf	??_write_eusartparser^0,w,c
 21638  002FA8  6E1B               	movwf	(??_write_eusartparser+4)^0,c
 21639  002FAA  1C18               	comf	(??_write_eusartparser+1)^0,w,c
 21640  002FAC  6E1C               	movwf	(??_write_eusartparser+5)^0,c
 21641  002FAE  1C19               	comf	(??_write_eusartparser+2)^0,w,c
 21642  002FB0  6E1D               	movwf	(??_write_eusartparser+6)^0,c
 21643  002FB2  1C1A               	comf	(??_write_eusartparser+3)^0,w,c
 21644  002FB4  6E1E               	movwf	(??_write_eusartparser+7)^0,c
 21645  002FB6  51BA               	movf	(_var_sys_NVM+34)& (0+255),w,b	;volatile
 21646  002FB8  141B               	andwf	(??_write_eusartparser+4)^0,w,c
 21647  002FBA  6FBA               	movwf	(_var_sys_NVM+34)& (0+255),b	;volatile
 21648  002FBC  51BB               	movf	(_var_sys_NVM+35)& (0+255),w,b	;volatile
 21649  002FBE  141C               	andwf	(??_write_eusartparser+5)^0,w,c
 21650  002FC0  6FBB               	movwf	(_var_sys_NVM+35)& (0+255),b	;volatile
 21651  002FC2  51BC               	movf	(_var_sys_NVM+36)& (0+255),w,b	;volatile
 21652  002FC4  141D               	andwf	(??_write_eusartparser+6)^0,w,c
 21653  002FC6  6FBC               	movwf	(_var_sys_NVM+36)& (0+255),b	;volatile
 21654  002FC8  51BD               	movf	(_var_sys_NVM+37)& (0+255),w,b	;volatile
 21655  002FCA  141E               	andwf	(??_write_eusartparser+7)^0,w,c
 21656  002FCC  6FBD               	movwf	(_var_sys_NVM+37)& (0+255),b	;volatile
 21657                           
 21658                           ;eusartparser.c: 379:                 break;
 21659  002FCE  0012               	return	
 21660  002FD0                     l16162:
 21661                           
 21662                           ; BSR set to: 0
 21663                           ;eusartparser.c: 381:                 var_sys_NVM.counterMoves=var_sys_NVM.counterMoves|
      +                          ((uint32_t)(package.data.data16&0xFFFF)<<(uint8_t)(0*16));
 21664  002FD0  5012               	movf	(write_eusartparser@package+2)^0,w,c
 21665  002FD2  11BA               	iorwf	(_var_sys_NVM+34)& (0+255),w,b	;volatile
 21666  002FD4  6FBA               	movwf	(_var_sys_NVM+34)& (0+255),b	;volatile
 21667  002FD6  5013               	movf	(write_eusartparser@package+3)^0,w,c
 21668  002FD8  11BB               	iorwf	(_var_sys_NVM+35)& (0+255),w,b	;volatile
 21669  002FDA  6FBB               	movwf	(_var_sys_NVM+35)& (0+255),b	;volatile
 21670  002FDC  0E00               	movlw	0
 21671  002FDE  11BC               	iorwf	(_var_sys_NVM+36)& (0+255),w,b	;volatile
 21672  002FE0  6FBC               	movwf	(_var_sys_NVM+36)& (0+255),b	;volatile
 21673  002FE2  0E00               	movlw	0
 21674  002FE4  11BD               	iorwf	(_var_sys_NVM+37)& (0+255),w,b	;volatile
 21675  002FE6  6FBD               	movwf	(_var_sys_NVM+37)& (0+255),b	;volatile
 21676                           
 21677                           ;eusartparser.c: 382:                 var_sys_NVM.counterMoves=var_sys_NVM.counterMoves&
      +                          ~((uint32_t)(~package.data.data16&0xFFFF)<<(uint8_t)(0*16));
 21678  002FE8  1C12               	comf	(write_eusartparser@package+2)^0,w,c
 21679  002FEA  6E17               	movwf	??_write_eusartparser^0,c
 21680  002FEC  1C13               	comf	(write_eusartparser@package+3)^0,w,c
 21681  002FEE  6E18               	movwf	(??_write_eusartparser+1)^0,c
 21682  002FF0  6A19               	clrf	(??_write_eusartparser+2)^0,c
 21683  002FF2  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 21684  002FF4  1C17               	comf	??_write_eusartparser^0,w,c
 21685  002FF6  6E1B               	movwf	(??_write_eusartparser+4)^0,c
 21686  002FF8  1C18               	comf	(??_write_eusartparser+1)^0,w,c
 21687  002FFA  6E1C               	movwf	(??_write_eusartparser+5)^0,c
 21688  002FFC  1C19               	comf	(??_write_eusartparser+2)^0,w,c
 21689  002FFE  6E1D               	movwf	(??_write_eusartparser+6)^0,c
 21690  003000  1C1A               	comf	(??_write_eusartparser+3)^0,w,c
 21691  003002  6E1E               	movwf	(??_write_eusartparser+7)^0,c
 21692  003004  51BA               	movf	(_var_sys_NVM+34)& (0+255),w,b	;volatile
 21693  003006  141B               	andwf	(??_write_eusartparser+4)^0,w,c
 21694  003008  6FBA               	movwf	(_var_sys_NVM+34)& (0+255),b	;volatile
 21695  00300A  51BB               	movf	(_var_sys_NVM+35)& (0+255),w,b	;volatile
 21696  00300C  141C               	andwf	(??_write_eusartparser+5)^0,w,c
 21697  00300E  6FBB               	movwf	(_var_sys_NVM+35)& (0+255),b	;volatile
 21698  003010  51BC               	movf	(_var_sys_NVM+36)& (0+255),w,b	;volatile
 21699  003012  141D               	andwf	(??_write_eusartparser+6)^0,w,c
 21700  003014  6FBC               	movwf	(_var_sys_NVM+36)& (0+255),b	;volatile
 21701  003016  51BD               	movf	(_var_sys_NVM+37)& (0+255),w,b	;volatile
 21702  003018  141E               	andwf	(??_write_eusartparser+7)^0,w,c
 21703  00301A  6FBD               	movwf	(_var_sys_NVM+37)& (0+255),b	;volatile
 21704                           
 21705                           ;eusartparser.c: 383:                 break;
 21706  00301C  0012               	return	
 21707  00301E                     l3618:
 21708                           
 21709                           ; BSR set to: 0
 21710                           ;eusartparser.c: 388:                 var_sys_NVM.OnlyRollingCode=package.data.data8[1];
 21711  00301E  C013  F0BE         	movff	write_eusartparser@package+3,_var_sys_NVM+38	;volatile
 21712                           
 21713                           ;eusartparser.c: 389:                 break;
 21714  003022  0012               	return	
 21715  003024                     l16164:
 21716                           
 21717                           ; BSR set to: 0
 21718                           ;eusartparser.c: 392:                 var_sys_NVM.learningCurrentDecelarationClose=var_s
      +                          ys_NVM.learningCurrentDecelarationClose|((uint32_t)(package.data.data16&0xFFFF)<<(uint8_
      +                          t)(1*16));
 21719  003024  5012               	movf	(write_eusartparser@package+2)^0,w,c
 21720  003026  6E17               	movwf	??_write_eusartparser^0,c
 21721  003028  5013               	movf	(write_eusartparser@package+3)^0,w,c
 21722  00302A  6E18               	movwf	(??_write_eusartparser+1)^0,c
 21723  00302C  6A19               	clrf	(??_write_eusartparser+2)^0,c
 21724  00302E  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 21725  003030  C018  F01A         	movff	??_write_eusartparser+1,??_write_eusartparser+3
 21726  003034  C017  F019         	movff	??_write_eusartparser,??_write_eusartparser+2
 21727  003038  6A18               	clrf	(??_write_eusartparser+1)^0,c
 21728  00303A  6A17               	clrf	??_write_eusartparser^0,c
 21729  00303C  51C0               	movf	(_var_sys_NVM+40)& (0+255),w,b	;volatile
 21730  00303E  1017               	iorwf	??_write_eusartparser^0,w,c
 21731  003040  6FC0               	movwf	(_var_sys_NVM+40)& (0+255),b	;volatile
 21732  003042  51C1               	movf	(_var_sys_NVM+41)& (0+255),w,b	;volatile
 21733  003044  1018               	iorwf	(??_write_eusartparser+1)^0,w,c
 21734  003046  6FC1               	movwf	(_var_sys_NVM+41)& (0+255),b	;volatile
 21735  003048  51C2               	movf	(_var_sys_NVM+42)& (0+255),w,b	;volatile
 21736  00304A  1019               	iorwf	(??_write_eusartparser+2)^0,w,c
 21737  00304C  6FC2               	movwf	(_var_sys_NVM+42)& (0+255),b	;volatile
 21738  00304E  51C3               	movf	(_var_sys_NVM+43)& (0+255),w,b	;volatile
 21739  003050  101A               	iorwf	(??_write_eusartparser+3)^0,w,c
 21740  003052  6FC3               	movwf	(_var_sys_NVM+43)& (0+255),b	;volatile
 21741                           
 21742                           ;eusartparser.c: 393:                 var_sys_NVM.learningCurrentDecelarationClose=var_s
      +                          ys_NVM.learningCurrentDecelarationClose&~((uint32_t)(~package.data.data16&0xFFFF)<<(uint
      +                          8_t)(1*16));
 21743  003054  1C12               	comf	(write_eusartparser@package+2)^0,w,c
 21744  003056  6E17               	movwf	??_write_eusartparser^0,c
 21745  003058  1C13               	comf	(write_eusartparser@package+3)^0,w,c
 21746  00305A  6E18               	movwf	(??_write_eusartparser+1)^0,c
 21747  00305C  6A19               	clrf	(??_write_eusartparser+2)^0,c
 21748  00305E  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 21749  003060  C018  F01A         	movff	??_write_eusartparser+1,??_write_eusartparser+3
 21750  003064  C017  F019         	movff	??_write_eusartparser,??_write_eusartparser+2
 21751  003068  6A18               	clrf	(??_write_eusartparser+1)^0,c
 21752  00306A  6A17               	clrf	??_write_eusartparser^0,c
 21753  00306C  1C17               	comf	??_write_eusartparser^0,w,c
 21754  00306E  6E1B               	movwf	(??_write_eusartparser+4)^0,c
 21755  003070  1C18               	comf	(??_write_eusartparser+1)^0,w,c
 21756  003072  6E1C               	movwf	(??_write_eusartparser+5)^0,c
 21757  003074  1C19               	comf	(??_write_eusartparser+2)^0,w,c
 21758  003076  6E1D               	movwf	(??_write_eusartparser+6)^0,c
 21759  003078  1C1A               	comf	(??_write_eusartparser+3)^0,w,c
 21760  00307A  6E1E               	movwf	(??_write_eusartparser+7)^0,c
 21761  00307C  51C0               	movf	(_var_sys_NVM+40)& (0+255),w,b	;volatile
 21762  00307E  141B               	andwf	(??_write_eusartparser+4)^0,w,c
 21763  003080  6FC0               	movwf	(_var_sys_NVM+40)& (0+255),b	;volatile
 21764  003082  51C1               	movf	(_var_sys_NVM+41)& (0+255),w,b	;volatile
 21765  003084  141C               	andwf	(??_write_eusartparser+5)^0,w,c
 21766  003086  6FC1               	movwf	(_var_sys_NVM+41)& (0+255),b	;volatile
 21767  003088  51C2               	movf	(_var_sys_NVM+42)& (0+255),w,b	;volatile
 21768  00308A  141D               	andwf	(??_write_eusartparser+6)^0,w,c
 21769  00308C  6FC2               	movwf	(_var_sys_NVM+42)& (0+255),b	;volatile
 21770  00308E  51C3               	movf	(_var_sys_NVM+43)& (0+255),w,b	;volatile
 21771  003090  141E               	andwf	(??_write_eusartparser+7)^0,w,c
 21772  003092  6FC3               	movwf	(_var_sys_NVM+43)& (0+255),b	;volatile
 21773                           
 21774                           ;eusartparser.c: 394:                 break;
 21775  003094  0012               	return	
 21776  003096                     l16166:
 21777                           
 21778                           ; BSR set to: 0
 21779                           ;eusartparser.c: 396:                 var_sys_NVM.learningCurrentDecelarationClose=var_s
      +                          ys_NVM.learningCurrentDecelarationClose|((uint32_t)(package.data.data16&0xFFFF)<<(uint8_
      +                          t)(0*16));
 21780  003096  5012               	movf	(write_eusartparser@package+2)^0,w,c
 21781  003098  11C0               	iorwf	(_var_sys_NVM+40)& (0+255),w,b	;volatile
 21782  00309A  6FC0               	movwf	(_var_sys_NVM+40)& (0+255),b	;volatile
 21783  00309C  5013               	movf	(write_eusartparser@package+3)^0,w,c
 21784  00309E  11C1               	iorwf	(_var_sys_NVM+41)& (0+255),w,b	;volatile
 21785  0030A0  6FC1               	movwf	(_var_sys_NVM+41)& (0+255),b	;volatile
 21786  0030A2  0E00               	movlw	0
 21787  0030A4  11C2               	iorwf	(_var_sys_NVM+42)& (0+255),w,b	;volatile
 21788  0030A6  6FC2               	movwf	(_var_sys_NVM+42)& (0+255),b	;volatile
 21789  0030A8  0E00               	movlw	0
 21790  0030AA  11C3               	iorwf	(_var_sys_NVM+43)& (0+255),w,b	;volatile
 21791  0030AC  6FC3               	movwf	(_var_sys_NVM+43)& (0+255),b	;volatile
 21792                           
 21793                           ;eusartparser.c: 397:                 var_sys_NVM.learningCurrentDecelarationClose=var_s
      +                          ys_NVM.learningCurrentDecelarationClose&~((uint32_t)(~package.data.data16&0xFFFF)<<(uint
      +                          8_t)(0*16));
 21794  0030AE  1C12               	comf	(write_eusartparser@package+2)^0,w,c
 21795  0030B0  6E17               	movwf	??_write_eusartparser^0,c
 21796  0030B2  1C13               	comf	(write_eusartparser@package+3)^0,w,c
 21797  0030B4  6E18               	movwf	(??_write_eusartparser+1)^0,c
 21798  0030B6  6A19               	clrf	(??_write_eusartparser+2)^0,c
 21799  0030B8  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 21800  0030BA  1C17               	comf	??_write_eusartparser^0,w,c
 21801  0030BC  6E1B               	movwf	(??_write_eusartparser+4)^0,c
 21802  0030BE  1C18               	comf	(??_write_eusartparser+1)^0,w,c
 21803  0030C0  6E1C               	movwf	(??_write_eusartparser+5)^0,c
 21804  0030C2  1C19               	comf	(??_write_eusartparser+2)^0,w,c
 21805  0030C4  6E1D               	movwf	(??_write_eusartparser+6)^0,c
 21806  0030C6  1C1A               	comf	(??_write_eusartparser+3)^0,w,c
 21807  0030C8  6E1E               	movwf	(??_write_eusartparser+7)^0,c
 21808  0030CA  51C0               	movf	(_var_sys_NVM+40)& (0+255),w,b	;volatile
 21809  0030CC  141B               	andwf	(??_write_eusartparser+4)^0,w,c
 21810  0030CE  6FC0               	movwf	(_var_sys_NVM+40)& (0+255),b	;volatile
 21811  0030D0  51C1               	movf	(_var_sys_NVM+41)& (0+255),w,b	;volatile
 21812  0030D2  141C               	andwf	(??_write_eusartparser+5)^0,w,c
 21813  0030D4  6FC1               	movwf	(_var_sys_NVM+41)& (0+255),b	;volatile
 21814  0030D6  51C2               	movf	(_var_sys_NVM+42)& (0+255),w,b	;volatile
 21815  0030D8  141D               	andwf	(??_write_eusartparser+6)^0,w,c
 21816  0030DA  6FC2               	movwf	(_var_sys_NVM+42)& (0+255),b	;volatile
 21817  0030DC  51C3               	movf	(_var_sys_NVM+43)& (0+255),w,b	;volatile
 21818  0030DE  141E               	andwf	(??_write_eusartparser+7)^0,w,c
 21819  0030E0  6FC3               	movwf	(_var_sys_NVM+43)& (0+255),b	;volatile
 21820                           
 21821                           ;eusartparser.c: 398:                 break;
 21822  0030E2  0012               	return	
 21823  0030E4                     l16168:
 21824                           
 21825                           ; BSR set to: 0
 21826                           ;eusartparser.c: 401:                 var_sys_NVM.learningCurrentDecelarationOpen=var_sy
      +                          s_NVM.learningCurrentDecelarationOpen|((uint32_t)(package.data.data16&0xFFFF)<<(uint8_t)
      +                          (1*16));
 21827  0030E4  5012               	movf	(write_eusartparser@package+2)^0,w,c
 21828  0030E6  6E17               	movwf	??_write_eusartparser^0,c
 21829  0030E8  5013               	movf	(write_eusartparser@package+3)^0,w,c
 21830  0030EA  6E18               	movwf	(??_write_eusartparser+1)^0,c
 21831  0030EC  6A19               	clrf	(??_write_eusartparser+2)^0,c
 21832  0030EE  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 21833  0030F0  C018  F01A         	movff	??_write_eusartparser+1,??_write_eusartparser+3
 21834  0030F4  C017  F019         	movff	??_write_eusartparser,??_write_eusartparser+2
 21835  0030F8  6A18               	clrf	(??_write_eusartparser+1)^0,c
 21836  0030FA  6A17               	clrf	??_write_eusartparser^0,c
 21837  0030FC  51C4               	movf	(_var_sys_NVM+44)& (0+255),w,b	;volatile
 21838  0030FE  1017               	iorwf	??_write_eusartparser^0,w,c
 21839  003100  6FC4               	movwf	(_var_sys_NVM+44)& (0+255),b	;volatile
 21840  003102  51C5               	movf	(_var_sys_NVM+45)& (0+255),w,b	;volatile
 21841  003104  1018               	iorwf	(??_write_eusartparser+1)^0,w,c
 21842  003106  6FC5               	movwf	(_var_sys_NVM+45)& (0+255),b	;volatile
 21843  003108  51C6               	movf	(_var_sys_NVM+46)& (0+255),w,b	;volatile
 21844  00310A  1019               	iorwf	(??_write_eusartparser+2)^0,w,c
 21845  00310C  6FC6               	movwf	(_var_sys_NVM+46)& (0+255),b	;volatile
 21846  00310E  51C7               	movf	(_var_sys_NVM+47)& (0+255),w,b	;volatile
 21847  003110  101A               	iorwf	(??_write_eusartparser+3)^0,w,c
 21848  003112  6FC7               	movwf	(_var_sys_NVM+47)& (0+255),b	;volatile
 21849                           
 21850                           ;eusartparser.c: 402:                 var_sys_NVM.learningCurrentDecelarationOpen=var_sy
      +                          s_NVM.learningCurrentDecelarationOpen&~((uint32_t)(~package.data.data16&0xFFFF)<<(uint8_
      +                          t)(1*16));
 21851  003114  1C12               	comf	(write_eusartparser@package+2)^0,w,c
 21852  003116  6E17               	movwf	??_write_eusartparser^0,c
 21853  003118  1C13               	comf	(write_eusartparser@package+3)^0,w,c
 21854  00311A  6E18               	movwf	(??_write_eusartparser+1)^0,c
 21855  00311C  6A19               	clrf	(??_write_eusartparser+2)^0,c
 21856  00311E  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 21857  003120  C018  F01A         	movff	??_write_eusartparser+1,??_write_eusartparser+3
 21858  003124  C017  F019         	movff	??_write_eusartparser,??_write_eusartparser+2
 21859  003128  6A18               	clrf	(??_write_eusartparser+1)^0,c
 21860  00312A  6A17               	clrf	??_write_eusartparser^0,c
 21861  00312C  1C17               	comf	??_write_eusartparser^0,w,c
 21862  00312E  6E1B               	movwf	(??_write_eusartparser+4)^0,c
 21863  003130  1C18               	comf	(??_write_eusartparser+1)^0,w,c
 21864  003132  6E1C               	movwf	(??_write_eusartparser+5)^0,c
 21865  003134  1C19               	comf	(??_write_eusartparser+2)^0,w,c
 21866  003136  6E1D               	movwf	(??_write_eusartparser+6)^0,c
 21867  003138  1C1A               	comf	(??_write_eusartparser+3)^0,w,c
 21868  00313A  6E1E               	movwf	(??_write_eusartparser+7)^0,c
 21869  00313C  51C4               	movf	(_var_sys_NVM+44)& (0+255),w,b	;volatile
 21870  00313E  141B               	andwf	(??_write_eusartparser+4)^0,w,c
 21871  003140  6FC4               	movwf	(_var_sys_NVM+44)& (0+255),b	;volatile
 21872  003142  51C5               	movf	(_var_sys_NVM+45)& (0+255),w,b	;volatile
 21873  003144  141C               	andwf	(??_write_eusartparser+5)^0,w,c
 21874  003146  6FC5               	movwf	(_var_sys_NVM+45)& (0+255),b	;volatile
 21875  003148  51C6               	movf	(_var_sys_NVM+46)& (0+255),w,b	;volatile
 21876  00314A  141D               	andwf	(??_write_eusartparser+6)^0,w,c
 21877  00314C  6FC6               	movwf	(_var_sys_NVM+46)& (0+255),b	;volatile
 21878  00314E  51C7               	movf	(_var_sys_NVM+47)& (0+255),w,b	;volatile
 21879  003150  141E               	andwf	(??_write_eusartparser+7)^0,w,c
 21880  003152  6FC7               	movwf	(_var_sys_NVM+47)& (0+255),b	;volatile
 21881                           
 21882                           ;eusartparser.c: 403:                 break;
 21883  003154  0012               	return	
 21884  003156                     l16170:
 21885                           
 21886                           ; BSR set to: 0
 21887                           ;eusartparser.c: 405:                 var_sys_NVM.learningCurrentDecelarationOpen=var_sy
      +                          s_NVM.learningCurrentDecelarationOpen|((uint32_t)(package.data.data16&0xFFFF)<<(uint8_t)
      +                          (0*16));
 21888  003156  5012               	movf	(write_eusartparser@package+2)^0,w,c
 21889  003158  11C4               	iorwf	(_var_sys_NVM+44)& (0+255),w,b	;volatile
 21890  00315A  6FC4               	movwf	(_var_sys_NVM+44)& (0+255),b	;volatile
 21891  00315C  5013               	movf	(write_eusartparser@package+3)^0,w,c
 21892  00315E  11C5               	iorwf	(_var_sys_NVM+45)& (0+255),w,b	;volatile
 21893  003160  6FC5               	movwf	(_var_sys_NVM+45)& (0+255),b	;volatile
 21894  003162  0E00               	movlw	0
 21895  003164  11C6               	iorwf	(_var_sys_NVM+46)& (0+255),w,b	;volatile
 21896  003166  6FC6               	movwf	(_var_sys_NVM+46)& (0+255),b	;volatile
 21897  003168  0E00               	movlw	0
 21898  00316A  11C7               	iorwf	(_var_sys_NVM+47)& (0+255),w,b	;volatile
 21899  00316C  6FC7               	movwf	(_var_sys_NVM+47)& (0+255),b	;volatile
 21900                           
 21901                           ;eusartparser.c: 406:                 var_sys_NVM.learningCurrentDecelarationOpen=var_sy
      +                          s_NVM.learningCurrentDecelarationOpen&~((uint32_t)(~package.data.data16&0xFFFF)<<(uint8_
      +                          t)(0*16));
 21902  00316E  1C12               	comf	(write_eusartparser@package+2)^0,w,c
 21903  003170  6E17               	movwf	??_write_eusartparser^0,c
 21904  003172  1C13               	comf	(write_eusartparser@package+3)^0,w,c
 21905  003174  6E18               	movwf	(??_write_eusartparser+1)^0,c
 21906  003176  6A19               	clrf	(??_write_eusartparser+2)^0,c
 21907  003178  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 21908  00317A  1C17               	comf	??_write_eusartparser^0,w,c
 21909  00317C  6E1B               	movwf	(??_write_eusartparser+4)^0,c
 21910  00317E  1C18               	comf	(??_write_eusartparser+1)^0,w,c
 21911  003180  6E1C               	movwf	(??_write_eusartparser+5)^0,c
 21912  003182  1C19               	comf	(??_write_eusartparser+2)^0,w,c
 21913  003184  6E1D               	movwf	(??_write_eusartparser+6)^0,c
 21914  003186  1C1A               	comf	(??_write_eusartparser+3)^0,w,c
 21915  003188  6E1E               	movwf	(??_write_eusartparser+7)^0,c
 21916  00318A  51C4               	movf	(_var_sys_NVM+44)& (0+255),w,b	;volatile
 21917  00318C  141B               	andwf	(??_write_eusartparser+4)^0,w,c
 21918  00318E  6FC4               	movwf	(_var_sys_NVM+44)& (0+255),b	;volatile
 21919  003190  51C5               	movf	(_var_sys_NVM+45)& (0+255),w,b	;volatile
 21920  003192  141C               	andwf	(??_write_eusartparser+5)^0,w,c
 21921  003194  6FC5               	movwf	(_var_sys_NVM+45)& (0+255),b	;volatile
 21922  003196  51C6               	movf	(_var_sys_NVM+46)& (0+255),w,b	;volatile
 21923  003198  141D               	andwf	(??_write_eusartparser+6)^0,w,c
 21924  00319A  6FC6               	movwf	(_var_sys_NVM+46)& (0+255),b	;volatile
 21925  00319C  51C7               	movf	(_var_sys_NVM+47)& (0+255),w,b	;volatile
 21926  00319E  141E               	andwf	(??_write_eusartparser+7)^0,w,c
 21927  0031A0  6FC7               	movwf	(_var_sys_NVM+47)& (0+255),b	;volatile
 21928                           
 21929                           ;eusartparser.c: 407:                 break;
 21930  0031A2  0012               	return	
 21931  0031A4                     l3623:
 21932                           
 21933                           ; BSR set to: 0
 21934                           ;eusartparser.c: 410:                 var_sys_NVM.learningCurrentNormalClose=package.dat
      +                          a.data16;
 21935  0031A4  C012  F0C8         	movff	write_eusartparser@package+2,_var_sys_NVM+48	;volatile
 21936  0031A8  C013  F0C9         	movff	write_eusartparser@package+3,_var_sys_NVM+49	;volatile
 21937                           
 21938                           ;eusartparser.c: 411:                 break;
 21939  0031AC  0012               	return	
 21940  0031AE                     l3624:
 21941                           
 21942                           ; BSR set to: 0
 21943                           ;eusartparser.c: 414:                 var_sys_NVM.learningCurrentNormalOpen=package.data
      +                          .data16;
 21944  0031AE  C012  F0CA         	movff	write_eusartparser@package+2,_var_sys_NVM+50	;volatile
 21945  0031B2  C013  F0CB         	movff	write_eusartparser@package+3,_var_sys_NVM+51	;volatile
 21946                           
 21947                           ;eusartparser.c: 415:                 break;
 21948  0031B6  0012               	return	
 21949  0031B8                     l16182:
 21950                           
 21951                           ; BSR set to: 0
 21952  0031B8  5011               	movf	(write_eusartparser@package+1)^0,w,c
 21953  0031BA  6E17               	movwf	??_write_eusartparser^0,c
 21954  0031BC  6A18               	clrf	(??_write_eusartparser+1)^0,c
 21955                           
 21956                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 21957                           ; Switch size 1, requested type "simple"
 21958                           ; Number of cases is 1, Range of values is 0 to 0
 21959                           ; switch strategies available:
 21960                           ; Name         Instructions Cycles
 21961                           ; simple_byte            4     3 (average)
 21962                           ;	Chosen strategy is simple_byte
 21963  0031BE  5018               	movf	(??_write_eusartparser+1)^0,w,c
 21964  0031C0  0A00               	xorlw	0	; case 0
 21965  0031C2  A4D8               	btfss	status,2,c
 21966  0031C4  0012               	return	
 21967                           
 21968                           ; BSR set to: 0
 21969                           ; Switch size 1, requested type "simple"
 21970                           ; Number of cases is 43, Range of values is 0 to 51
 21971                           ; switch strategies available:
 21972                           ; Name         Instructions Cycles
 21973                           ; simple_byte          130    66 (average)
 21974                           ;	Chosen strategy is simple_byte
 21975  0031C6  5017               	movf	??_write_eusartparser^0,w,c
 21976  0031C8  0A00               	xorlw	0	; case 0
 21977  0031CA  B4D8               	btfsc	status,2,c
 21978  0031CC  D675               	goto	l3586
 21979  0031CE  0A02               	xorlw	2	; case 2
 21980  0031D0  B4D8               	btfsc	status,2,c
 21981  0031D2  D67F               	goto	l3591
 21982  0031D4  0A01               	xorlw	1	; case 3
 21983  0031D6  B4D8               	btfsc	status,2,c
 21984  0031D8  D6A5               	goto	l3605
 21985  0031DA  0A06               	xorlw	6	; case 5
 21986  0031DC  B4D8               	btfsc	status,2,c
 21987  0031DE  D67E               	goto	l3593
 21988  0031E0  0A02               	xorlw	2	; case 7
 21989  0031E2  B4D8               	btfsc	status,2,c
 21990  0031E4  D697               	goto	l3602
 21991  0031E6  0A0F               	xorlw	15	; case 8
 21992  0031E8  B4D8               	btfsc	status,2,c
 21993  0031EA  D6AB               	goto	l3612
 21994  0031EC  0A02               	xorlw	2	; case 10
 21995  0031EE  B4D8               	btfsc	status,2,c
 21996  0031F0  D69C               	goto	l3607
 21997  0031F2  0A1A               	xorlw	26	; case 16
 21998  0031F4  B4D8               	btfsc	status,2,c
 21999  0031F6  D660               	goto	l3586
 22000  0031F8  0A01               	xorlw	1	; case 17
 22001  0031FA  B4D8               	btfsc	status,2,c
 22002  0031FC  D662               	goto	l3588
 22003  0031FE  0A03               	xorlw	3	; case 18
 22004  003200  B4D8               	btfsc	status,2,c
 22005  003202  D664               	goto	l3589
 22006  003204  0A01               	xorlw	1	; case 19
 22007  003206  B4D8               	btfsc	status,2,c
 22008  003208  D664               	goto	l3591
 22009  00320A  0A07               	xorlw	7	; case 20
 22010  00320C  B4D8               	btfsc	status,2,c
 22011  00320E  D666               	goto	l3593
 22012  003210  0A01               	xorlw	1	; case 21
 22013  003212  B4D8               	btfsc	status,2,c
 22014  003214  D668               	goto	l3594
 22015  003216  0A03               	xorlw	3	; case 22
 22016  003218  B4D8               	btfsc	status,2,c
 22017  00321A  D66A               	goto	l3595
 22018  00321C  0A01               	xorlw	1	; case 23
 22019  00321E  B4D8               	btfsc	status,2,c
 22020  003220  D66A               	goto	l3596
 22021  003222  0A0F               	xorlw	15	; case 24
 22022  003224  B4D8               	btfsc	status,2,c
 22023  003226  D66A               	goto	l3597
 22024  003228  0A01               	xorlw	1	; case 25
 22025  00322A  B4D8               	btfsc	status,2,c
 22026  00322C  D66A               	goto	l3598
 22027  00322E  0A03               	xorlw	3	; case 26
 22028  003230  B4D8               	btfsc	status,2,c
 22029  003232  D66A               	goto	l3599
 22030  003234  0A01               	xorlw	1	; case 27
 22031  003236  B4D8               	btfsc	status,2,c
 22032  003238  D66A               	goto	l3600
 22033  00323A  0A07               	xorlw	7	; case 28
 22034  00323C  B4D8               	btfsc	status,2,c
 22035  00323E  D66A               	goto	l3602
 22036  003240  0A01               	xorlw	1	; case 29
 22037  003242  B4D8               	btfsc	status,2,c
 22038  003244  D66A               	goto	l3603
 22039  003246  0A03               	xorlw	3	; case 30
 22040  003248  B4D8               	btfsc	status,2,c
 22041  00324A  D66C               	goto	l3605
 22042  00324C  0A01               	xorlw	1	; case 31
 22043  00324E  B4D8               	btfsc	status,2,c
 22044  003250  D66C               	goto	l3607
 22045  003252  0A3F               	xorlw	63	; case 32
 22046  003254  B4D8               	btfsc	status,2,c
 22047  003256  D66C               	goto	l3608
 22048  003258  0A01               	xorlw	1	; case 33
 22049  00325A  B4D8               	btfsc	status,2,c
 22050  00325C  D66C               	goto	l3609
 22051  00325E  0A03               	xorlw	3	; case 34
 22052  003260  B4D8               	btfsc	status,2,c
 22053  003262  D66C               	goto	l3610
 22054  003264  0A01               	xorlw	1	; case 35
 22055  003266  B4D8               	btfsc	status,2,c
 22056  003268  D66C               	goto	l3612
 22057  00326A  0A07               	xorlw	7	; case 36
 22058  00326C  B4D8               	btfsc	status,2,c
 22059  00326E  D66C               	goto	l3613
 22060  003270  0A01               	xorlw	1	; case 37
 22061  003272  B4D8               	btfsc	status,2,c
 22062  003274  D66C               	goto	l3614
 22063  003276  0A03               	xorlw	3	; case 38
 22064  003278  B4D8               	btfsc	status,2,c
 22065  00327A  D66C               	goto	l3615
 22066  00327C  0A01               	xorlw	1	; case 39
 22067  00327E  B4D8               	btfsc	status,2,c
 22068  003280  D66E               	goto	l16160
 22069  003282  0A0F               	xorlw	15	; case 40
 22070  003284  B4D8               	btfsc	status,2,c
 22071  003286  D6A4               	goto	l16162
 22072  003288  0A01               	xorlw	1	; case 41
 22073  00328A  B4D8               	btfsc	status,2,c
 22074  00328C  D6C8               	goto	l3618
 22075  00328E  0A03               	xorlw	3	; case 42
 22076  003290  B4D8               	btfsc	status,2,c
 22077  003292  D6C8               	goto	l16164
 22078  003294  0A01               	xorlw	1	; case 43
 22079  003296  B4D8               	btfsc	status,2,c
 22080  003298  D6FE               	goto	l16166
 22081  00329A  0A07               	xorlw	7	; case 44
 22082  00329C  B4D8               	btfsc	status,2,c
 22083  00329E  D722               	goto	l16168
 22084  0032A0  0A01               	xorlw	1	; case 45
 22085  0032A2  B4D8               	btfsc	status,2,c
 22086  0032A4  D758               	goto	l16170
 22087  0032A6  0A03               	xorlw	3	; case 46
 22088  0032A8  B4D8               	btfsc	status,2,c
 22089  0032AA  D77C               	goto	l3623
 22090  0032AC  0A01               	xorlw	1	; case 47
 22091  0032AE  B4D8               	btfsc	status,2,c
 22092  0032B0  D77E               	goto	l3624
 22093  0032B2  0A1F               	xorlw	31	; case 48
 22094  0032B4  B4D8               	btfsc	status,2,c
 22095  0032B6  D716               	goto	l16168
 22096  0032B8  0A01               	xorlw	1	; case 49
 22097  0032BA  B4D8               	btfsc	status,2,c
 22098  0032BC  D74C               	goto	l16170
 22099  0032BE  0A03               	xorlw	3	; case 50
 22100  0032C0  B4D8               	btfsc	status,2,c
 22101  0032C2  D710               	goto	l16168
 22102  0032C4  0A01               	xorlw	1	; case 51
 22103  0032C6  A4D8               	btfss	status,2,c
 22104  0032C8  0012               	return	
 22105  0032CA  D745               	goto	l16170
 22106  0032CC                     __end_of_write_eusartparser:
 22107                           	callstack 0
 22108                           
 22109 ;; *************** function _read_eusartparser *****************
 22110 ;; Defined at:
 22111 ;;		line 5 in file "eusartparser.c"
 22112 ;; Parameters:    Size  Location     Type
 22113 ;;  package         1   23[COMRAM] PTR struct package_t
 22114 ;;		 -> main@package(7), 
 22115 ;; Auto vars:     Size  Location     Type
 22116 ;;		None
 22117 ;; Return value:  Size  Location     Type
 22118 ;;                  1    wreg      void 
 22119 ;; Registers used:
 22120 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 22121 ;; Tracked objects:
 22122 ;;		On entry : 3F/0
 22123 ;;		On exit  : 0/0
 22124 ;;		Unchanged: 0/0
 22125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22126 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22128 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22129 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22130 ;;Total ram usage:        3 bytes
 22131 ;; Hardware stack levels used: 1
 22132 ;; Hardware stack levels required when called: 6
 22133 ;; This function calls:
 22134 ;;		_write_package
 22135 ;; This function is called by:
 22136 ;;		_eusartparser
 22137 ;; This function uses a non-reentrant model
 22138 ;;
 22139                           
 22140                           	psect	text81
 22141  00249C                     __ptext81:
 22142                           	callstack 0
 22143  00249C                     _read_eusartparser:
 22144                           	callstack 23
 22145                           
 22146                           ; BSR set to: 0
 22147                           ;eusartparser.c: 6:         switch(package->address){
 22148                           
 22149                           ; BSR set to: 0
 22150                           ;incstack = 0
 22151  00249C  D203               	goto	l16150
 22152  00249E                     l16014:
 22153                           
 22154                           ; BSR set to: 0
 22155                           ;eusartparser.c: 11:                 package->data.data8[1]=var_sys_NVM.decelarationClos
      +                          e;
 22156  00249E  5018               	movf	read_eusartparser@package^0,w,c
 22157  0024A0  6ED9               	movwf	fsr2l,c
 22158  0024A2  6ADA               	clrf	fsr2h,c
 22159  0024A4  0E03               	movlw	3
 22160  0024A6  26D9               	addwf	fsr2l,f,c
 22161  0024A8  C099  FFDF         	movff	_var_sys_NVM+1,indf2	;volatile
 22162                           
 22163                           ;eusartparser.c: 12:                 package->data.data8[0]=var_sys_NVM.decelarationOpen
      +                          ;
 22164  0024AC  5018               	movf	read_eusartparser@package^0,w,c
 22165  0024AE  6ED9               	movwf	fsr2l,c
 22166  0024B0  6ADA               	clrf	fsr2h,c
 22167  0024B2  0E02               	movlw	2
 22168  0024B4  26D9               	addwf	fsr2l,f,c
 22169  0024B6  C098  FFDF         	movff	_var_sys_NVM,indf2	;volatile
 22170  0024BA                     l16016:
 22171                           
 22172                           ; BSR set to: 0
 22173                           ;eusartparser.c: 13:                 write_package(*package);
 22174  0024BA  5018               	movf	read_eusartparser@package^0,w,c
 22175  0024BC  6ED9               	movwf	fsr2l,c
 22176  0024BE  6ADA               	clrf	fsr2h,c
 22177  0024C0  EE00  F011         	lfsr	0,write_package@package
 22178  0024C4  0E06               	movlw	6
 22179  0024C6                     u18061:
 22180  0024C6  CFDB FFEB          	movff	plusw2,plusw0
 22181  0024CA  06E8               	decf	wreg,f,c
 22182  0024CC  E2FC               	bc	u18061
 22183  0024CE  ECAA  F045         	call	_write_package	;wreg free
 22184                           
 22185                           ;eusartparser.c: 14:                 break;
 22186  0024D2  0012               	return	
 22187  0024D4                     l16018:
 22188                           
 22189                           ; BSR set to: 0
 22190                           ;eusartparser.c: 18:                 package->data.data8[1]=var_sys_NVM.motorSensitivity
      +                          ;
 22191  0024D4  5018               	movf	read_eusartparser@package^0,w,c
 22192  0024D6  6ED9               	movwf	fsr2l,c
 22193  0024D8  6ADA               	clrf	fsr2h,c
 22194  0024DA  0E03               	movlw	3
 22195  0024DC  26D9               	addwf	fsr2l,f,c
 22196  0024DE  C09B  FFDF         	movff	_var_sys_NVM+3,indf2	;volatile
 22197                           
 22198                           ;eusartparser.c: 19:                 package->data.data8[0]=var_sys_NVM.motorPower;
 22199  0024E2  5018               	movf	read_eusartparser@package^0,w,c
 22200  0024E4  6ED9               	movwf	fsr2l,c
 22201  0024E6  6ADA               	clrf	fsr2h,c
 22202  0024E8  0E02               	movlw	2
 22203  0024EA  26D9               	addwf	fsr2l,f,c
 22204  0024EC  C09A  FFDF         	movff	_var_sys_NVM+2,indf2	;volatile
 22205  0024F0  D7E4               	goto	l16016
 22206  0024F2                     l16022:
 22207                           
 22208                           ; BSR set to: 0
 22209                           ;eusartparser.c: 25:                 package->data.data8[1]=var_sys_NVM.walkTime;
 22210  0024F2  5018               	movf	read_eusartparser@package^0,w,c
 22211  0024F4  6ED9               	movwf	fsr2l,c
 22212  0024F6  6ADA               	clrf	fsr2h,c
 22213  0024F8  0E03               	movlw	3
 22214  0024FA  26D9               	addwf	fsr2l,f,c
 22215  0024FC  C09C  FFDF         	movff	_var_sys_NVM+4,indf2	;volatile
 22216  002500  D0F9               	goto	L99
 22217  002502                     l16026:
 22218                           
 22219                           ; BSR set to: 0
 22220                           ;eusartparser.c: 33:                 package->data.data8[1]=var_sys_NVM.autoTimeWalkClos
      +                          e;
 22221  002502  5018               	movf	read_eusartparser@package^0,w,c
 22222  002504  6ED9               	movwf	fsr2l,c
 22223  002506  6ADA               	clrf	fsr2h,c
 22224  002508  0E03               	movlw	3
 22225  00250A  26D9               	addwf	fsr2l,f,c
 22226  00250C  C09E  FFDF         	movff	_var_sys_NVM+6,indf2	;volatile
 22227                           
 22228                           ;eusartparser.c: 34:                 package->data.data8[0]=var_sys_NVM.autoTimeFullClos
      +                          e;
 22229  002510  5018               	movf	read_eusartparser@package^0,w,c
 22230  002512  6ED9               	movwf	fsr2l,c
 22231  002514  6ADA               	clrf	fsr2h,c
 22232  002516  0E02               	movlw	2
 22233  002518  26D9               	addwf	fsr2l,f,c
 22234  00251A  C09D  FFDF         	movff	_var_sys_NVM+5,indf2	;volatile
 22235  00251E  D7CD               	goto	l16016
 22236  002520                     l16030:
 22237                           
 22238                           ; BSR set to: 0
 22239                           ;eusartparser.c: 41:                 package->data.data8[1]=var_sys_NVM.photoCellInOpen;
 22240  002520  5018               	movf	read_eusartparser@package^0,w,c
 22241  002522  6ED9               	movwf	fsr2l,c
 22242  002524  6ADA               	clrf	fsr2h,c
 22243  002526  0E03               	movlw	3
 22244  002528  26D9               	addwf	fsr2l,f,c
 22245  00252A  C0A0  FFDF         	movff	_var_sys_NVM+8,indf2	;volatile
 22246                           
 22247                           ;eusartparser.c: 42:                 package->data.data8[0]=var_sys_NVM.photoCellIsON;
 22248  00252E  5018               	movf	read_eusartparser@package^0,w,c
 22249  002530  6ED9               	movwf	fsr2l,c
 22250  002532  6ADA               	clrf	fsr2h,c
 22251  002534  0E02               	movlw	2
 22252  002536  26D9               	addwf	fsr2l,f,c
 22253  002538  C09F  FFDF         	movff	_var_sys_NVM+7,indf2	;volatile
 22254  00253C  D7BE               	goto	l16016
 22255  00253E                     l16034:
 22256                           
 22257                           ; BSR set to: 0
 22258                           ;eusartparser.c: 48:                 package->data.data8[1]=var_sys_NVM.securityBandType
      +                          ;
 22259  00253E  5018               	movf	read_eusartparser@package^0,w,c
 22260  002540  6ED9               	movwf	fsr2l,c
 22261  002542  6ADA               	clrf	fsr2h,c
 22262  002544  0E03               	movlw	3
 22263  002546  26D9               	addwf	fsr2l,f,c
 22264  002548  C0A2  FFDF         	movff	_var_sys_NVM+10,indf2	;volatile
 22265                           
 22266                           ;eusartparser.c: 49:                 package->data.data8[0]=var_sys_NVM.securityBandIsON
      +                          ;
 22267  00254C  5018               	movf	read_eusartparser@package^0,w,c
 22268  00254E  6ED9               	movwf	fsr2l,c
 22269  002550  6ADA               	clrf	fsr2h,c
 22270  002552  0E02               	movlw	2
 22271  002554  26D9               	addwf	fsr2l,f,c
 22272  002556  C0A1  FFDF         	movff	_var_sys_NVM+9,indf2	;volatile
 22273  00255A  D7AF               	goto	l16016
 22274  00255C                     l16038:
 22275                           
 22276                           ; BSR set to: 0
 22277                           ;eusartparser.c: 55:                 package->data.data8[1]=var_sys_NVM.securityBandInOp
      +                          en;
 22278  00255C  5018               	movf	read_eusartparser@package^0,w,c
 22279  00255E  6ED9               	movwf	fsr2l,c
 22280  002560  6ADA               	clrf	fsr2h,c
 22281  002562  0E03               	movlw	3
 22282  002564  26D9               	addwf	fsr2l,f,c
 22283  002566  C0A3  FFDF         	movff	_var_sys_NVM+11,indf2	;volatile
 22284  00256A  D0C4               	goto	L99
 22285  00256C                     l16042:
 22286                           
 22287                           ; BSR set to: 0
 22288                           ;eusartparser.c: 62:                 package->data.data8[1]=var_sys_NVM.operationMode;
 22289  00256C  5018               	movf	read_eusartparser@package^0,w,c
 22290  00256E  6ED9               	movwf	fsr2l,c
 22291  002570  6ADA               	clrf	fsr2h,c
 22292  002572  0E03               	movlw	3
 22293  002574  26D9               	addwf	fsr2l,f,c
 22294  002576  C0A4  FFDF         	movff	_var_sys_NVM+12,indf2	;volatile
 22295  00257A  D0BC               	goto	L99
 22296  00257C                     l16046:
 22297                           
 22298                           ; BSR set to: 0
 22299                           ;eusartparser.c: 69:                 package->data.data8[1]=var_sys_NVM.flashLightMode;
 22300  00257C  5018               	movf	read_eusartparser@package^0,w,c
 22301  00257E  6ED9               	movwf	fsr2l,c
 22302  002580  6ADA               	clrf	fsr2h,c
 22303  002582  0E03               	movlw	3
 22304  002584  26D9               	addwf	fsr2l,f,c
 22305  002586  C0A5  FFDF         	movff	_var_sys_NVM+13,indf2	;volatile
 22306  00258A  D0B4               	goto	L99
 22307  00258C                     l16050:
 22308                           
 22309                           ; BSR set to: 0
 22310                           ;eusartparser.c: 76:                 package->data.data8[1]=var_sys_NVM.programmingDista
      +                          nce;
 22311  00258C  5018               	movf	read_eusartparser@package^0,w,c
 22312  00258E  6ED9               	movwf	fsr2l,c
 22313  002590  6ADA               	clrf	fsr2h,c
 22314  002592  0E03               	movlw	3
 22315  002594  26D9               	addwf	fsr2l,f,c
 22316  002596  C0A6  FFDF         	movff	_var_sys_NVM+14,indf2	;volatile
 22317  00259A  D0AC               	goto	L99
 22318  00259C                     l16054:
 22319                           
 22320                           ; BSR set to: 0
 22321                           ;eusartparser.c: 83:                 package->data.data8[1]=var_sys_NVM.decelarationSens
      +                          ivity;
 22322  00259C  5018               	movf	read_eusartparser@package^0,w,c
 22323  00259E  6ED9               	movwf	fsr2l,c
 22324  0025A0  6ADA               	clrf	fsr2h,c
 22325  0025A2  0E03               	movlw	3
 22326  0025A4  26D9               	addwf	fsr2l,f,c
 22327  0025A6  C0A7  FFDF         	movff	_var_sys_NVM+15,indf2	;volatile
 22328  0025AA  D0A4               	goto	L99
 22329  0025AC                     l16058:
 22330                           
 22331                           ; BSR set to: 0
 22332                           ;eusartparser.c: 91:                 package->data.data8[1]=var_sys_NVM.homemPresente;
 22333  0025AC  5018               	movf	read_eusartparser@package^0,w,c
 22334  0025AE  6ED9               	movwf	fsr2l,c
 22335  0025B0  6ADA               	clrf	fsr2h,c
 22336  0025B2  0E03               	movlw	3
 22337  0025B4  26D9               	addwf	fsr2l,f,c
 22338  0025B6  C0A8  FFDF         	movff	_var_sys_NVM+16,indf2	;volatile
 22339  0025BA  D09C               	goto	L99
 22340  0025BC                     l16062:
 22341                           
 22342                           ; BSR set to: 0
 22343                           ;eusartparser.c: 99:                 package->data.data8[1]=var_sys_NVM.logicDigital;
 22344  0025BC  5018               	movf	read_eusartparser@package^0,w,c
 22345  0025BE  6ED9               	movwf	fsr2l,c
 22346  0025C0  6ADA               	clrf	fsr2h,c
 22347  0025C2  0E03               	movlw	3
 22348  0025C4  26D9               	addwf	fsr2l,f,c
 22349  0025C6  C0A9  FFDF         	movff	_var_sys_NVM+17,indf2	;volatile
 22350  0025CA  D094               	goto	L99
 22351  0025CC                     l16066:
 22352                           
 22353                           ; BSR set to: 0
 22354                           ;eusartparser.c: 106:                 package->data.data8[1]=var_sys_NVM.softstop;
 22355  0025CC  5018               	movf	read_eusartparser@package^0,w,c
 22356  0025CE  6ED9               	movwf	fsr2l,c
 22357  0025D0  6ADA               	clrf	fsr2h,c
 22358  0025D2  0E03               	movlw	3
 22359  0025D4  26D9               	addwf	fsr2l,f,c
 22360  0025D6  C0AB  FFDF         	movff	_var_sys_NVM+19,indf2	;volatile
 22361                           
 22362                           ;eusartparser.c: 107:                 package->data.data8[0]=var_sys_NVM.softStart;
 22363  0025DA  5018               	movf	read_eusartparser@package^0,w,c
 22364  0025DC  6ED9               	movwf	fsr2l,c
 22365  0025DE  6ADA               	clrf	fsr2h,c
 22366  0025E0  0E02               	movlw	2
 22367  0025E2  26D9               	addwf	fsr2l,f,c
 22368  0025E4  C0AA  FFDF         	movff	_var_sys_NVM+18,indf2	;volatile
 22369  0025E8  D768               	goto	l16016
 22370  0025EA                     l16070:
 22371                           
 22372                           ; BSR set to: 0
 22373                           ;eusartparser.c: 114:                 package->data.data8[1]=var_sys_NVM.ligthTime;
 22374  0025EA  5018               	movf	read_eusartparser@package^0,w,c
 22375  0025EC  6ED9               	movwf	fsr2l,c
 22376  0025EE  6ADA               	clrf	fsr2h,c
 22377  0025F0  0E03               	movlw	3
 22378  0025F2  26D9               	addwf	fsr2l,f,c
 22379  0025F4  C0AC  FFDF         	movff	_var_sys_NVM+20,indf2	;volatile
 22380  0025F8  D07D               	goto	L99
 22381  0025FA                     l16074:
 22382                           
 22383                           ; BSR set to: 0
 22384                           ;eusartparser.c: 122:                 package->data.data8[1]=var_sys_NVM.folow_me;
 22385  0025FA  5018               	movf	read_eusartparser@package^0,w,c
 22386  0025FC  6ED9               	movwf	fsr2l,c
 22387  0025FE  6ADA               	clrf	fsr2h,c
 22388  002600  0E03               	movlw	3
 22389  002602  26D9               	addwf	fsr2l,f,c
 22390  002604  C0AD  FFDF         	movff	_var_sys_NVM+21,indf2	;volatile
 22391  002608  D075               	goto	L99
 22392  00260A                     l16078:
 22393                           
 22394                           ; BSR set to: 0
 22395                           ;eusartparser.c: 129:                 package->data.data8[1]=var_sys_NVM.Stopboton;
 22396  00260A  5018               	movf	read_eusartparser@package^0,w,c
 22397  00260C  6ED9               	movwf	fsr2l,c
 22398  00260E  6ADA               	clrf	fsr2h,c
 22399  002610  0E03               	movlw	3
 22400  002612  26D9               	addwf	fsr2l,f,c
 22401  002614  C0AE  FFDF         	movff	_var_sys_NVM+22,indf2	;volatile
 22402  002618  D06D               	goto	L99
 22403  00261A                     l16082:
 22404                           
 22405                           ; BSR set to: 0
 22406                           ;eusartparser.c: 136:                 package->data.data8[1]=var_sys_NVM.electricBrake;
 22407  00261A  5018               	movf	read_eusartparser@package^0,w,c
 22408  00261C  6ED9               	movwf	fsr2l,c
 22409  00261E  6ADA               	clrf	fsr2h,c
 22410  002620  0E03               	movlw	3
 22411  002622  26D9               	addwf	fsr2l,f,c
 22412  002624  C0AF  FFDF         	movff	_var_sys_NVM+23,indf2	;volatile
 22413  002628  D065               	goto	L99
 22414  00262A                     l16086:
 22415                           
 22416                           ; BSR set to: 0
 22417                           ;eusartparser.c: 143:                 package->data.data8[1]=var_sys_NVM.velocityDecelar
      +                          ation;
 22418  00262A  5018               	movf	read_eusartparser@package^0,w,c
 22419  00262C  6ED9               	movwf	fsr2l,c
 22420  00262E  6ADA               	clrf	fsr2h,c
 22421  002630  0E03               	movlw	3
 22422  002632  26D9               	addwf	fsr2l,f,c
 22423  002634  C0B0  FFDF         	movff	_var_sys_NVM+24,indf2	;volatile
 22424  002638  D05D               	goto	L99
 22425  00263A                     l16090:
 22426                           
 22427                           ; BSR set to: 0
 22428                           ;eusartparser.c: 151:                 package->data.data8[1]=var_sys_NVM.flashRGBMode;
 22429  00263A  5018               	movf	read_eusartparser@package^0,w,c
 22430  00263C  6ED9               	movwf	fsr2l,c
 22431  00263E  6ADA               	clrf	fsr2h,c
 22432  002640  0E03               	movlw	3
 22433  002642  26D9               	addwf	fsr2l,f,c
 22434  002644  C0B1  FFDF         	movff	_var_sys_NVM+25,indf2	;volatile
 22435  002648  D055               	goto	L99
 22436  00264A                     l16094:
 22437                           
 22438                           ; BSR set to: 0
 22439                           ;eusartparser.c: 158:                 package->data.data8[1]=var_sys_NVM.Direction_motor
      +                          ;
 22440  00264A  5018               	movf	read_eusartparser@package^0,w,c
 22441  00264C  6ED9               	movwf	fsr2l,c
 22442  00264E  6ADA               	clrf	fsr2h,c
 22443  002650  0E03               	movlw	3
 22444  002652  26D9               	addwf	fsr2l,f,c
 22445  002654  C0B3  FFDF         	movff	_var_sys_NVM+27,indf2	;volatile
 22446  002658  D04D               	goto	L99
 22447  00265A                     l16098:
 22448                           
 22449                           ; BSR set to: 0
 22450                           ;eusartparser.c: 165:                 package->data.data8[1]=var_sys_NVM.TypeofMotor;
 22451  00265A  5018               	movf	read_eusartparser@package^0,w,c
 22452  00265C  6ED9               	movwf	fsr2l,c
 22453  00265E  6ADA               	clrf	fsr2h,c
 22454  002660  0E03               	movlw	3
 22455  002662  26D9               	addwf	fsr2l,f,c
 22456  002664  C0B4  FFDF         	movff	_var_sys_NVM+28,indf2	;volatile
 22457  002668  D045               	goto	L99
 22458  00266A                     l16102:
 22459                           
 22460                           ; BSR set to: 0
 22461                           ;eusartparser.c: 172:                 package->data.data8[1]=var_sys_NVM.positionRemotes
      +                          Walk;
 22462  00266A  5018               	movf	read_eusartparser@package^0,w,c
 22463  00266C  6ED9               	movwf	fsr2l,c
 22464  00266E  6ADA               	clrf	fsr2h,c
 22465  002670  0E03               	movlw	3
 22466  002672  26D9               	addwf	fsr2l,f,c
 22467  002674  C0B9  FFDF         	movff	_var_sys_NVM+33,indf2	;volatile
 22468                           
 22469                           ;eusartparser.c: 173:                 package->data.data8[0]=var_sys_NVM.positionRemotes
      +                          Full;
 22470  002678  5018               	movf	read_eusartparser@package^0,w,c
 22471  00267A  6ED9               	movwf	fsr2l,c
 22472  00267C  6ADA               	clrf	fsr2h,c
 22473  00267E  0E02               	movlw	2
 22474  002680  26D9               	addwf	fsr2l,f,c
 22475  002682  C0B8  FFDF         	movff	_var_sys_NVM+32,indf2	;volatile
 22476  002686  D719               	goto	l16016
 22477  002688                     l16106:
 22478                           
 22479                           ; BSR set to: 0
 22480                           ;eusartparser.c: 179:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.c
      +                          ounterMoves))+1);
 22481  002688  EE20  F0BC         	lfsr	2,_var_sys_NVM+36
 22482  00268C  5018               	movf	read_eusartparser@package^0,w,c
 22483  00268E  6EE1               	movwf	fsr1l,c
 22484  002690  6AE2               	clrf	fsr1h,c
 22485  002692  0E02               	movlw	2
 22486  002694  26E1               	addwf	fsr1l,f,c
 22487  002696  CFDE FFE6          	movff	postinc2,postinc1
 22488  00269A  CFDD FFE5          	movff	postdec2,postdec1
 22489                           
 22490                           ; BSR set to: 0
 22491                           ;eusartparser.c: 180:                 write_package(*package);
 22492  00269E  5018               	movf	read_eusartparser@package^0,w,c
 22493  0026A0  6ED9               	movwf	fsr2l,c
 22494  0026A2  6ADA               	clrf	fsr2h,c
 22495  0026A4  EE00  F011         	lfsr	0,write_package@package
 22496  0026A8  0E06               	movlw	6
 22497  0026AA                     u18071:
 22498  0026AA  CFDB FFEB          	movff	plusw2,plusw0
 22499  0026AE  06E8               	decf	wreg,f,c
 22500  0026B0  E2FC               	bc	u18071
 22501  0026B2  ECAA  F045         	call	_write_package	;wreg free
 22502                           
 22503                           ;eusartparser.c: 181:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.c
      +                          ounterMoves))+0);
 22504  0026B6  EE20  F0BA         	lfsr	2,_var_sys_NVM+34
 22505  0026BA  5018               	movf	read_eusartparser@package^0,w,c
 22506  0026BC  6EE1               	movwf	fsr1l,c
 22507  0026BE  6AE2               	clrf	fsr1h,c
 22508  0026C0  0E02               	movlw	2
 22509  0026C2  26E1               	addwf	fsr1l,f,c
 22510  0026C4  CFDE FFE6          	movff	postinc2,postinc1
 22511  0026C8  CFDD FFE5          	movff	postdec2,postdec1
 22512                           
 22513                           ;eusartparser.c: 182:                 write_package(*package);
 22514  0026CC  5018               	movf	read_eusartparser@package^0,w,c
 22515  0026CE  6ED9               	movwf	fsr2l,c
 22516  0026D0  6ADA               	clrf	fsr2h,c
 22517  0026D2  EE00  F011         	lfsr	0,write_package@package
 22518  0026D6  0E06               	movlw	6
 22519  0026D8                     u18081:
 22520  0026D8  CFDB FFEB          	movff	plusw2,plusw0
 22521  0026DC  06E8               	decf	wreg,f,c
 22522  0026DE  E2FC               	bc	u18081
 22523  0026E0  ECAA  F045         	call	_write_package	;wreg free
 22524                           
 22525                           ;eusartparser.c: 183:                 break;
 22526  0026E4  0012               	return	
 22527  0026E6                     l16112:
 22528                           
 22529                           ; BSR set to: 0
 22530                           ;eusartparser.c: 187:                 package->data.data8[1]=var_sys_NVM.OnlyRollingCode
      +                          ;
 22531  0026E6  5018               	movf	read_eusartparser@package^0,w,c
 22532  0026E8  6ED9               	movwf	fsr2l,c
 22533  0026EA  6ADA               	clrf	fsr2h,c
 22534  0026EC  0E03               	movlw	3
 22535  0026EE  26D9               	addwf	fsr2l,f,c
 22536  0026F0  C0BE  FFDF         	movff	_var_sys_NVM+38,indf2	;volatile
 22537  0026F4                     L99:
 22538                           
 22539                           ;eusartparser.c: 188:                 package->data.data8[0]=0x00;
 22540  0026F4  5018               	movf	read_eusartparser@package^0,w,c
 22541  0026F6  6ED9               	movwf	fsr2l,c
 22542  0026F8  6ADA               	clrf	fsr2h,c
 22543  0026FA  0E02               	movlw	2
 22544  0026FC  26D9               	addwf	fsr2l,f,c
 22545  0026FE  0E00               	movlw	0
 22546  002700  6EDF               	movwf	indf2,c
 22547  002702  D6DB               	goto	l16016
 22548  002704                     l16116:
 22549                           
 22550                           ; BSR set to: 0
 22551                           ;eusartparser.c: 194:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.l
      +                          earningCurrentDecelarationClose))+1);
 22552  002704  EE20  F0C2         	lfsr	2,_var_sys_NVM+42
 22553  002708  5018               	movf	read_eusartparser@package^0,w,c
 22554  00270A  6EE1               	movwf	fsr1l,c
 22555  00270C  6AE2               	clrf	fsr1h,c
 22556  00270E  0E02               	movlw	2
 22557  002710  26E1               	addwf	fsr1l,f,c
 22558  002712  CFDE FFE6          	movff	postinc2,postinc1
 22559  002716  CFDD FFE5          	movff	postdec2,postdec1
 22560                           
 22561                           ; BSR set to: 0
 22562                           ;eusartparser.c: 195:                 write_package(*package);
 22563  00271A  5018               	movf	read_eusartparser@package^0,w,c
 22564  00271C  6ED9               	movwf	fsr2l,c
 22565  00271E  6ADA               	clrf	fsr2h,c
 22566  002720  EE00  F011         	lfsr	0,write_package@package
 22567  002724  0E06               	movlw	6
 22568  002726                     u18091:
 22569  002726  CFDB FFEB          	movff	plusw2,plusw0
 22570  00272A  06E8               	decf	wreg,f,c
 22571  00272C  E2FC               	bc	u18091
 22572  00272E  ECAA  F045         	call	_write_package	;wreg free
 22573                           
 22574                           ;eusartparser.c: 196:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.l
      +                          earningCurrentDecelarationClose))+0);
 22575  002732  EE20  F0C0         	lfsr	2,_var_sys_NVM+40
 22576  002736  5018               	movf	read_eusartparser@package^0,w,c
 22577  002738  6EE1               	movwf	fsr1l,c
 22578  00273A  6AE2               	clrf	fsr1h,c
 22579  00273C  0E02               	movlw	2
 22580  00273E  26E1               	addwf	fsr1l,f,c
 22581  002740  CFDE FFE6          	movff	postinc2,postinc1
 22582  002744  CFDD FFE5          	movff	postdec2,postdec1
 22583                           
 22584                           ;eusartparser.c: 197:                 write_package(*package);
 22585  002748  5018               	movf	read_eusartparser@package^0,w,c
 22586  00274A  6ED9               	movwf	fsr2l,c
 22587  00274C  6ADA               	clrf	fsr2h,c
 22588  00274E  EE00  F011         	lfsr	0,write_package@package
 22589  002752  0E06               	movlw	6
 22590  002754                     u18101:
 22591  002754  CFDB FFEB          	movff	plusw2,plusw0
 22592  002758  06E8               	decf	wreg,f,c
 22593  00275A  E2FC               	bc	u18101
 22594  00275C  ECAA  F045         	call	_write_package	;wreg free
 22595                           
 22596                           ;eusartparser.c: 198:                 break;
 22597  002760  0012               	return	
 22598  002762                     l16122:
 22599                           
 22600                           ; BSR set to: 0
 22601                           ;eusartparser.c: 202:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.l
      +                          earningCurrentDecelarationOpen))+1);
 22602  002762  EE20  F0C6         	lfsr	2,_var_sys_NVM+46
 22603  002766  5018               	movf	read_eusartparser@package^0,w,c
 22604  002768  6EE1               	movwf	fsr1l,c
 22605  00276A  6AE2               	clrf	fsr1h,c
 22606  00276C  0E02               	movlw	2
 22607  00276E  26E1               	addwf	fsr1l,f,c
 22608  002770  CFDE FFE6          	movff	postinc2,postinc1
 22609  002774  CFDD FFE5          	movff	postdec2,postdec1
 22610                           
 22611                           ; BSR set to: 0
 22612                           ;eusartparser.c: 203:                 write_package(*package);
 22613  002778  5018               	movf	read_eusartparser@package^0,w,c
 22614  00277A  6ED9               	movwf	fsr2l,c
 22615  00277C  6ADA               	clrf	fsr2h,c
 22616  00277E  EE00  F011         	lfsr	0,write_package@package
 22617  002782  0E06               	movlw	6
 22618  002784                     u18111:
 22619  002784  CFDB FFEB          	movff	plusw2,plusw0
 22620  002788  06E8               	decf	wreg,f,c
 22621  00278A  E2FC               	bc	u18111
 22622  00278C  ECAA  F045         	call	_write_package	;wreg free
 22623                           
 22624                           ;eusartparser.c: 204:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.l
      +                          earningCurrentDecelarationOpen))+0);
 22625  002790  EE20  F0C4         	lfsr	2,_var_sys_NVM+44
 22626  002794  5018               	movf	read_eusartparser@package^0,w,c
 22627  002796  6EE1               	movwf	fsr1l,c
 22628  002798  6AE2               	clrf	fsr1h,c
 22629  00279A  0E02               	movlw	2
 22630  00279C  26E1               	addwf	fsr1l,f,c
 22631  00279E  CFDE FFE6          	movff	postinc2,postinc1
 22632  0027A2  CFDD FFE5          	movff	postdec2,postdec1
 22633                           
 22634                           ;eusartparser.c: 205:                 write_package(*package);
 22635  0027A6  5018               	movf	read_eusartparser@package^0,w,c
 22636  0027A8  6ED9               	movwf	fsr2l,c
 22637  0027AA  6ADA               	clrf	fsr2h,c
 22638  0027AC  EE00  F011         	lfsr	0,write_package@package
 22639  0027B0  0E06               	movlw	6
 22640  0027B2                     u18121:
 22641  0027B2  CFDB FFEB          	movff	plusw2,plusw0
 22642  0027B6  06E8               	decf	wreg,f,c
 22643  0027B8  E2FC               	bc	u18121
 22644  0027BA  ECAA  F045         	call	_write_package	;wreg free
 22645                           
 22646                           ;eusartparser.c: 206:                 break;
 22647  0027BE  0012               	return	
 22648  0027C0                     l16128:
 22649                           
 22650                           ; BSR set to: 0
 22651                           ;eusartparser.c: 210:                 package->data.data16=var_sys_NVM.learningCurrentNo
      +                          rmalClose;
 22652  0027C0  5018               	movf	read_eusartparser@package^0,w,c
 22653  0027C2  6ED9               	movwf	fsr2l,c
 22654  0027C4  6ADA               	clrf	fsr2h,c
 22655  0027C6  0E02               	movlw	2
 22656  0027C8  26D9               	addwf	fsr2l,f,c
 22657  0027CA  C0C8  FFDE         	movff	_var_sys_NVM+48,postinc2	;volatile
 22658  0027CE  C0C9  FFDD         	movff	_var_sys_NVM+49,postdec2	;volatile
 22659  0027D2  D673               	goto	l16016
 22660  0027D4                     l16132:
 22661                           
 22662                           ; BSR set to: 0
 22663                           ;eusartparser.c: 216:                 package->data.data16=var_sys_NVM.learningCurrentNo
      +                          rmalOpen;
 22664  0027D4  5018               	movf	read_eusartparser@package^0,w,c
 22665  0027D6  6ED9               	movwf	fsr2l,c
 22666  0027D8  6ADA               	clrf	fsr2h,c
 22667  0027DA  0E02               	movlw	2
 22668  0027DC  26D9               	addwf	fsr2l,f,c
 22669  0027DE  C0CA  FFDE         	movff	_var_sys_NVM+50,postinc2	;volatile
 22670  0027E2  C0CB  FFDD         	movff	_var_sys_NVM+51,postdec2	;volatile
 22671  0027E6  D669               	goto	l16016
 22672  0027E8                     l16136:
 22673                           
 22674                           ; BSR set to: 0
 22675                           ;eusartparser.c: 222:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.l
      +                          earningTimeToOpen))+1);
 22676  0027E8  EE20  F0CE         	lfsr	2,_var_sys_NVM+54
 22677  0027EC  5018               	movf	read_eusartparser@package^0,w,c
 22678  0027EE  6EE1               	movwf	fsr1l,c
 22679  0027F0  6AE2               	clrf	fsr1h,c
 22680  0027F2  0E02               	movlw	2
 22681  0027F4  26E1               	addwf	fsr1l,f,c
 22682  0027F6  CFDE FFE6          	movff	postinc2,postinc1
 22683  0027FA  CFDD FFE5          	movff	postdec2,postdec1
 22684                           
 22685                           ; BSR set to: 0
 22686                           ;eusartparser.c: 223:                 write_package(*package);
 22687  0027FE  5018               	movf	read_eusartparser@package^0,w,c
 22688  002800  6ED9               	movwf	fsr2l,c
 22689  002802  6ADA               	clrf	fsr2h,c
 22690  002804  EE00  F011         	lfsr	0,write_package@package
 22691  002808  0E06               	movlw	6
 22692  00280A                     u18131:
 22693  00280A  CFDB FFEB          	movff	plusw2,plusw0
 22694  00280E  06E8               	decf	wreg,f,c
 22695  002810  E2FC               	bc	u18131
 22696  002812  ECAA  F045         	call	_write_package	;wreg free
 22697                           
 22698                           ;eusartparser.c: 224:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.l
      +                          earningTimeToOpen))+0);
 22699  002816  EE20  F0CC         	lfsr	2,_var_sys_NVM+52
 22700  00281A  5018               	movf	read_eusartparser@package^0,w,c
 22701  00281C  6EE1               	movwf	fsr1l,c
 22702  00281E  6AE2               	clrf	fsr1h,c
 22703  002820  0E02               	movlw	2
 22704  002822  26E1               	addwf	fsr1l,f,c
 22705  002824  CFDE FFE6          	movff	postinc2,postinc1
 22706  002828  CFDD FFE5          	movff	postdec2,postdec1
 22707                           
 22708                           ;eusartparser.c: 225:                 write_package(*package);
 22709  00282C  5018               	movf	read_eusartparser@package^0,w,c
 22710  00282E  6ED9               	movwf	fsr2l,c
 22711  002830  6ADA               	clrf	fsr2h,c
 22712  002832  EE00  F011         	lfsr	0,write_package@package
 22713  002836  0E06               	movlw	6
 22714  002838                     u18141:
 22715  002838  CFDB FFEB          	movff	plusw2,plusw0
 22716  00283C  06E8               	decf	wreg,f,c
 22717  00283E  E2FC               	bc	u18141
 22718  002840  ECAA  F045         	call	_write_package	;wreg free
 22719                           
 22720                           ;eusartparser.c: 226:                 break;
 22721  002844  0012               	return	
 22722  002846                     l16142:
 22723                           
 22724                           ; BSR set to: 0
 22725                           ;eusartparser.c: 230:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.l
      +                          earningTimeToClose))+1);
 22726  002846  EE20  F0D2         	lfsr	2,_var_sys_NVM+58
 22727  00284A  5018               	movf	read_eusartparser@package^0,w,c
 22728  00284C  6EE1               	movwf	fsr1l,c
 22729  00284E  6AE2               	clrf	fsr1h,c
 22730  002850  0E02               	movlw	2
 22731  002852  26E1               	addwf	fsr1l,f,c
 22732  002854  CFDE FFE6          	movff	postinc2,postinc1
 22733  002858  CFDD FFE5          	movff	postdec2,postdec1
 22734                           
 22735                           ; BSR set to: 0
 22736                           ;eusartparser.c: 231:                 write_package(*package);
 22737  00285C  5018               	movf	read_eusartparser@package^0,w,c
 22738  00285E  6ED9               	movwf	fsr2l,c
 22739  002860  6ADA               	clrf	fsr2h,c
 22740  002862  EE00  F011         	lfsr	0,write_package@package
 22741  002866  0E06               	movlw	6
 22742  002868                     u18151:
 22743  002868  CFDB FFEB          	movff	plusw2,plusw0
 22744  00286C  06E8               	decf	wreg,f,c
 22745  00286E  E2FC               	bc	u18151
 22746  002870  ECAA  F045         	call	_write_package	;wreg free
 22747                           
 22748                           ;eusartparser.c: 232:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.l
      +                          earningTimeToClose))+0);
 22749  002874  EE20  F0D0         	lfsr	2,_var_sys_NVM+56
 22750  002878  5018               	movf	read_eusartparser@package^0,w,c
 22751  00287A  6EE1               	movwf	fsr1l,c
 22752  00287C  6AE2               	clrf	fsr1h,c
 22753  00287E  0E02               	movlw	2
 22754  002880  26E1               	addwf	fsr1l,f,c
 22755  002882  CFDE FFE6          	movff	postinc2,postinc1
 22756  002886  CFDD FFE5          	movff	postdec2,postdec1
 22757                           
 22758                           ;eusartparser.c: 233:                 write_package(*package);
 22759  00288A  5018               	movf	read_eusartparser@package^0,w,c
 22760  00288C  6ED9               	movwf	fsr2l,c
 22761  00288E  6ADA               	clrf	fsr2h,c
 22762  002890  EE00  F011         	lfsr	0,write_package@package
 22763  002894  0E06               	movlw	6
 22764  002896                     u18161:
 22765  002896  CFDB FFEB          	movff	plusw2,plusw0
 22766  00289A  06E8               	decf	wreg,f,c
 22767  00289C  E2FC               	bc	u18161
 22768  00289E  ECAA  F045         	call	_write_package	;wreg free
 22769                           
 22770                           ;eusartparser.c: 234:                 break;
 22771  0028A2  0012               	return	
 22772  0028A4                     l16150:
 22773                           
 22774                           ; BSR set to: 0
 22775  0028A4  5018               	movf	read_eusartparser@package^0,w,c
 22776  0028A6  6ED9               	movwf	fsr2l,c
 22777  0028A8  6ADA               	clrf	fsr2h,c
 22778  0028AA  0E01               	movlw	1
 22779  0028AC  26D9               	addwf	fsr2l,f,c
 22780  0028AE  50DF               	movf	indf2,w,c
 22781  0028B0  6E19               	movwf	??_read_eusartparser^0,c
 22782  0028B2  6A1A               	clrf	(??_read_eusartparser+1)^0,c
 22783                           
 22784                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 22785                           ; Switch size 1, requested type "simple"
 22786                           ; Number of cases is 1, Range of values is 0 to 0
 22787                           ; switch strategies available:
 22788                           ; Name         Instructions Cycles
 22789                           ; simple_byte            4     3 (average)
 22790                           ;	Chosen strategy is simple_byte
 22791  0028B4  501A               	movf	(??_read_eusartparser+1)^0,w,c
 22792  0028B6  0A00               	xorlw	0	; case 0
 22793  0028B8  A4D8               	btfss	status,2,c
 22794  0028BA  0012               	return	
 22795                           
 22796                           ; BSR set to: 0
 22797                           ; Switch size 1, requested type "simple"
 22798                           ; Number of cases is 38, Range of values is 0 to 50
 22799                           ; switch strategies available:
 22800                           ; Name         Instructions Cycles
 22801                           ; simple_byte          115    58 (average)
 22802                           ;	Chosen strategy is simple_byte
 22803  0028BC  5019               	movf	??_read_eusartparser^0,w,c
 22804  0028BE  0A00               	xorlw	0	; case 0
 22805  0028C0  B4D8               	btfsc	status,2,c
 22806  0028C2  D5ED               	goto	l16014
 22807  0028C4  0A02               	xorlw	2	; case 2
 22808  0028C6  B4D8               	btfsc	status,2,c
 22809  0028C8  D61C               	goto	l16026
 22810  0028CA  0A01               	xorlw	1	; case 3
 22811  0028CC  B4D8               	btfsc	status,2,c
 22812  0028CE  D68D               	goto	l16070
 22813  0028D0  0A06               	xorlw	6	; case 5
 22814  0028D2  B4D8               	btfsc	status,2,c
 22815  0028D4  D625               	goto	l16030
 22816  0028D6  0A02               	xorlw	2	; case 7
 22817  0028D8  B4D8               	btfsc	status,2,c
 22818  0028DA  D670               	goto	l16062
 22819  0028DC  0A0F               	xorlw	15	; case 8
 22820  0028DE  B4D8               	btfsc	status,2,c
 22821  0028E0  D6AC               	goto	l16090
 22822  0028E2  0A02               	xorlw	2	; case 10
 22823  0028E4  B4D8               	btfsc	status,2,c
 22824  0028E6  D689               	goto	l16074
 22825  0028E8  0A1A               	xorlw	26	; case 16
 22826  0028EA  B4D8               	btfsc	status,2,c
 22827  0028EC  D5D8               	goto	l16014
 22828  0028EE  0A01               	xorlw	1	; case 17
 22829  0028F0  B4D8               	btfsc	status,2,c
 22830  0028F2  D5F0               	goto	l16018
 22831  0028F4  0A03               	xorlw	3	; case 18
 22832  0028F6  B4D8               	btfsc	status,2,c
 22833  0028F8  D5FC               	goto	l16022
 22834  0028FA  0A01               	xorlw	1	; case 19
 22835  0028FC  B4D8               	btfsc	status,2,c
 22836  0028FE  D601               	goto	l16026
 22837  002900  0A07               	xorlw	7	; case 20
 22838  002902  B4D8               	btfsc	status,2,c
 22839  002904  D60D               	goto	l16030
 22840  002906  0A01               	xorlw	1	; case 21
 22841  002908  B4D8               	btfsc	status,2,c
 22842  00290A  D619               	goto	l16034
 22843  00290C  0A03               	xorlw	3	; case 22
 22844  00290E  B4D8               	btfsc	status,2,c
 22845  002910  D625               	goto	l16038
 22846  002912  0A01               	xorlw	1	; case 23
 22847  002914  B4D8               	btfsc	status,2,c
 22848  002916  D62A               	goto	l16042
 22849  002918  0A0F               	xorlw	15	; case 24
 22850  00291A  B4D8               	btfsc	status,2,c
 22851  00291C  D62F               	goto	l16046
 22852  00291E  0A01               	xorlw	1	; case 25
 22853  002920  B4D8               	btfsc	status,2,c
 22854  002922  D634               	goto	l16050
 22855  002924  0A03               	xorlw	3	; case 26
 22856  002926  B4D8               	btfsc	status,2,c
 22857  002928  D639               	goto	l16054
 22858  00292A  0A01               	xorlw	1	; case 27
 22859  00292C  B4D8               	btfsc	status,2,c
 22860  00292E  D63E               	goto	l16058
 22861  002930  0A07               	xorlw	7	; case 28
 22862  002932  B4D8               	btfsc	status,2,c
 22863  002934  D643               	goto	l16062
 22864  002936  0A01               	xorlw	1	; case 29
 22865  002938  B4D8               	btfsc	status,2,c
 22866  00293A  D648               	goto	l16066
 22867  00293C  0A03               	xorlw	3	; case 30
 22868  00293E  B4D8               	btfsc	status,2,c
 22869  002940  D654               	goto	l16070
 22870  002942  0A01               	xorlw	1	; case 31
 22871  002944  B4D8               	btfsc	status,2,c
 22872  002946  D659               	goto	l16074
 22873  002948  0A3F               	xorlw	63	; case 32
 22874  00294A  B4D8               	btfsc	status,2,c
 22875  00294C  D65E               	goto	l16078
 22876  00294E  0A01               	xorlw	1	; case 33
 22877  002950  B4D8               	btfsc	status,2,c
 22878  002952  D663               	goto	l16082
 22879  002954  0A03               	xorlw	3	; case 34
 22880  002956  B4D8               	btfsc	status,2,c
 22881  002958  D668               	goto	l16086
 22882  00295A  0A01               	xorlw	1	; case 35
 22883  00295C  B4D8               	btfsc	status,2,c
 22884  00295E  D66D               	goto	l16090
 22885  002960  0A07               	xorlw	7	; case 36
 22886  002962  B4D8               	btfsc	status,2,c
 22887  002964  D672               	goto	l16094
 22888  002966  0A01               	xorlw	1	; case 37
 22889  002968  B4D8               	btfsc	status,2,c
 22890  00296A  D677               	goto	l16098
 22891  00296C  0A03               	xorlw	3	; case 38
 22892  00296E  B4D8               	btfsc	status,2,c
 22893  002970  D67C               	goto	l16102
 22894  002972  0A01               	xorlw	1	; case 39
 22895  002974  B4D8               	btfsc	status,2,c
 22896  002976  D688               	goto	l16106
 22897  002978  0A0E               	xorlw	14	; case 41
 22898  00297A  B4D8               	btfsc	status,2,c
 22899  00297C  D6B4               	goto	l16112
 22900  00297E  0A03               	xorlw	3	; case 42
 22901  002980  B4D8               	btfsc	status,2,c
 22902  002982  D6C0               	goto	l16116
 22903  002984  0A06               	xorlw	6	; case 44
 22904  002986  B4D8               	btfsc	status,2,c
 22905  002988  D6EC               	goto	l16122
 22906  00298A  0A02               	xorlw	2	; case 46
 22907  00298C  B4D8               	btfsc	status,2,c
 22908  00298E  D718               	goto	l16128
 22909  002990  0A01               	xorlw	1	; case 47
 22910  002992  B4D8               	btfsc	status,2,c
 22911  002994  D71F               	goto	l16132
 22912  002996  0A1F               	xorlw	31	; case 48
 22913  002998  B4D8               	btfsc	status,2,c
 22914  00299A  D726               	goto	l16136
 22915  00299C  0A02               	xorlw	2	; case 50
 22916  00299E  A4D8               	btfss	status,2,c
 22917  0029A0  0012               	return	
 22918  0029A2  D751               	goto	l16142
 22919  0029A4                     __end_of_read_eusartparser:
 22920                           	callstack 0
 22921                           
 22922 ;; *************** function _write_package *****************
 22923 ;; Defined at:
 22924 ;;		line 50 in file "eusartpackage.c"
 22925 ;; Parameters:    Size  Location     Type
 22926 ;;  package         7   16[COMRAM] const struct package_t
 22927 ;; Auto vars:     Size  Location     Type
 22928 ;;		None
 22929 ;; Return value:  Size  Location     Type
 22930 ;;                  1    wreg      void 
 22931 ;; Registers used:
 22932 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 22933 ;; Tracked objects:
 22934 ;;		On entry : 0/1
 22935 ;;		On exit  : 0/0
 22936 ;;		Unchanged: 0/0
 22937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22938 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22939 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22940 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22941 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22942 ;;Total ram usage:        7 bytes
 22943 ;; Hardware stack levels used: 1
 22944 ;; Hardware stack levels required when called: 5
 22945 ;; This function calls:
 22946 ;;		_EUSART1_Write
 22947 ;; This function is called by:
 22948 ;;		_read_eusartparser
 22949 ;;		_eusartparser
 22950 ;; This function uses a non-reentrant model
 22951 ;;
 22952                           
 22953                           	psect	text82
 22954  008B54                     __ptext82:
 22955                           	callstack 0
 22956  008B54                     _write_package:
 22957                           	callstack 24
 22958                           
 22959                           ;eusartpackage.c: 52:         if(package.valid==0)
 22960                           
 22961                           ;incstack = 0
 22962  008B54  5017               	movf	(write_package@package+6)^0,w,c
 22963  008B56  B4D8               	btfsc	status,2,c
 22964  008B58  0012               	return	
 22965                           
 22966                           ;eusartpackage.c: 56:         EUSART1_Write(package.startbyte);
 22967  008B5A  5015               	movf	(write_package@package+4)^0,w,c
 22968  008B5C  EC42  F044         	call	_EUSART1_Write
 22969                           
 22970                           ;eusartpackage.c: 57:         EUSART1_Write(package.functioncode);
 22971  008B60  5011               	movf	write_package@package^0,w,c
 22972  008B62  EC42  F044         	call	_EUSART1_Write
 22973                           
 22974                           ;eusartpackage.c: 58:         EUSART1_Write(package.address);
 22975  008B66  5012               	movf	(write_package@package+1)^0,w,c
 22976  008B68  EC42  F044         	call	_EUSART1_Write
 22977                           
 22978                           ;eusartpackage.c: 59:         EUSART1_Write(package.data.data8[0]);
 22979  008B6C  5013               	movf	(write_package@package+2)^0,w,c
 22980  008B6E  EC42  F044         	call	_EUSART1_Write
 22981                           
 22982                           ;eusartpackage.c: 60:         EUSART1_Write(package.data.data8[1]);
 22983  008B72  5014               	movf	(write_package@package+3)^0,w,c
 22984  008B74  EC42  F044         	call	_EUSART1_Write
 22985                           
 22986                           ;eusartpackage.c: 61:         EUSART1_Write(package.endbyte);
 22987  008B78  5016               	movf	(write_package@package+5)^0,w,c
 22988  008B7A  EC42  F044         	call	_EUSART1_Write
 22989  008B7E  0012               	return		;funcret
 22990  008B80                     __end_of_write_package:
 22991                           	callstack 0
 22992                           
 22993 ;; *************** function _EUSART1_Write *****************
 22994 ;; Defined at:
 22995 ;;		line 173 in file "mcc_generated_files/eusart1.c"
 22996 ;; Parameters:    Size  Location     Type
 22997 ;;  txData          1    wreg     unsigned char 
 22998 ;; Auto vars:     Size  Location     Type
 22999 ;;  txData          1   15[COMRAM] unsigned char 
 23000 ;; Return value:  Size  Location     Type
 23001 ;;                  1    wreg      void 
 23002 ;; Registers used:
 23003 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 23004 ;; Tracked objects:
 23005 ;;		On entry : 0/1
 23006 ;;		On exit  : 3F/E
 23007 ;;		Unchanged: 0/0
 23008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23009 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23010 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23012 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23013 ;;Total ram usage:        1 bytes
 23014 ;; Hardware stack levels used: 1
 23015 ;; Hardware stack levels required when called: 4
 23016 ;; This function calls:
 23017 ;;		Nothing
 23018 ;; This function is called by:
 23019 ;;		_write_package
 23020 ;; This function uses a non-reentrant model
 23021 ;;
 23022                           
 23023                           	psect	text83
 23024  008884                     __ptext83:
 23025                           	callstack 0
 23026  008884                     _EUSART1_Write:
 23027                           	callstack 24
 23028                           
 23029                           ;incstack = 0
 23030                           ;EUSART1_Write@txData stored from wreg
 23031  008884  6E10               	movwf	EUSART1_Write@txData^0,c
 23032  008886                     
 23033                           ;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBufferRemaining)
 23034                           
 23035                           ;mcc_generated_files/eusart1.c: 173: void EUSART1_Write(uint8_t txData);mcc_generated_fi
      +                          les/eusart1.c: 174: {;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBuffer
      +                          Remaining)
 23036  008886  0101               	movlb	1	; () banked
 23037  008888  51FE               	movf	_eusart1TxBufferRemaining& (0+255),w,b	;volatile
 23038  00888A  B4D8               	btfsc	status,2,c
 23039  00888C  D7FC               	goto	l12002
 23040                           
 23041                           ; BSR set to: 1
 23042                           ;mcc_generated_files/eusart1.c: 179:     if(0 == PIE3bits.TX1IE)
 23043  00888E  010E               	movlb	14	; () banked
 23044  008890  B9C5               	btfsc	197,4,b	;volatile
 23045  008892  D003               	goto	l100
 23046                           
 23047                           ; BSR set to: 14
 23048                           ;mcc_generated_files/eusart1.c: 180:     {;mcc_generated_files/eusart1.c: 181:         T
      +                          X1REG = txData;
 23049  008894  C010  FF9A         	movff	EUSART1_Write@txData,3994	;volatile
 23050                           
 23051                           ;mcc_generated_files/eusart1.c: 182:     }
 23052  008898  D012               	goto	l12018
 23053  00889A                     l100:
 23054                           
 23055                           ; BSR set to: 14
 23056                           ;mcc_generated_files/eusart1.c: 184:     {;mcc_generated_files/eusart1.c: 185:         P
      +                          IE3bits.TX1IE = 0;
 23057  00889A  99C5               	bcf	197,4,b	;volatile
 23058                           
 23059                           ; BSR set to: 14
 23060                           ;mcc_generated_files/eusart1.c: 186:         eusart1TxBuffer[eusart1TxHead++] = txData;
 23061  00889C  0E84               	movlw	low _eusart1TxBuffer
 23062  00889E  0100               	movlb	0	; () banked
 23063  0088A0  2597               	addwf	_eusart1TxHead& (0+255),w,b	;volatile
 23064  0088A2  6ED9               	movwf	fsr2l,c
 23065  0088A4  6ADA               	clrf	fsr2h,c
 23066  0088A6  0E02               	movlw	high _eusart1TxBuffer
 23067  0088A8  22DA               	addwfc	fsr2h,f,c
 23068  0088AA  C010  FFDF         	movff	EUSART1_Write@txData,indf2
 23069                           
 23070                           ; BSR set to: 0
 23071  0088AE  2B97               	incf	_eusart1TxHead& (0+255),f,b	;volatile
 23072                           
 23073                           ; BSR set to: 0
 23074                           ;mcc_generated_files/eusart1.c: 187:         if(sizeof(eusart1TxBuffer) <= eusart1TxHead
      +                          )
 23075  0088B0  0E07               	movlw	7
 23076  0088B2  6597               	cpfsgt	_eusart1TxHead& (0+255),b
 23077  0088B4  D002               	goto	l12016
 23078                           
 23079                           ; BSR set to: 0
 23080                           ;mcc_generated_files/eusart1.c: 188:         {;mcc_generated_files/eusart1.c: 189:      
      +                                 eusart1TxHead = 0;
 23081  0088B6  0E00               	movlw	0
 23082  0088B8  6F97               	movwf	_eusart1TxHead& (0+255),b	;volatile
 23083  0088BA                     l12016:
 23084                           
 23085                           ; BSR set to: 0
 23086                           ;mcc_generated_files/eusart1.c: 191:         eusart1TxBufferRemaining--;
 23087  0088BA  0101               	movlb	1	; () banked
 23088  0088BC  07FE               	decf	_eusart1TxBufferRemaining& (0+255),f,b	;volatile
 23089  0088BE                     l12018:
 23090                           
 23091                           ;mcc_generated_files/eusart1.c: 193:     PIE3bits.TX1IE = 1;
 23092  0088BE  010E               	movlb	14	; () banked
 23093  0088C0  89C5               	bsf	197,4,b	;volatile
 23094                           
 23095                           ; BSR set to: 14
 23096  0088C2  0012               	return		;funcret
 23097  0088C4                     __end_of_EUSART1_Write:
 23098                           	callstack 0
 23099                           
 23100 ;; *************** function _WWDT_TimerClear *****************
 23101 ;; Defined at:
 23102 ;;		line 128 in file "mcc_generated_files/mcc.c"
 23103 ;; Parameters:    Size  Location     Type
 23104 ;;		None
 23105 ;; Auto vars:     Size  Location     Type
 23106 ;;  state           1   15[COMRAM] _Bool 
 23107 ;;  readBack        1    0        unsigned char 
 23108 ;; Return value:  Size  Location     Type
 23109 ;;                  1    wreg      void 
 23110 ;; Registers used:
 23111 ;;		wreg, status,2
 23112 ;; Tracked objects:
 23113 ;;		On entry : 0/0
 23114 ;;		On exit  : 0/0
 23115 ;;		Unchanged: 0/0
 23116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23118 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23120 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23121 ;;Total ram usage:        1 bytes
 23122 ;; Hardware stack levels used: 1
 23123 ;; Hardware stack levels required when called: 4
 23124 ;; This function calls:
 23125 ;;		Nothing
 23126 ;; This function is called by:
 23127 ;;		_main
 23128 ;; This function uses a non-reentrant model
 23129 ;;
 23130                           
 23131                           	psect	text84
 23132  008F3A                     __ptext84:
 23133                           	callstack 0
 23134  008F3A                     _WWDT_TimerClear:
 23135                           	callstack 26
 23136                           
 23137                           ;mcc_generated_files/mcc.c: 134:     _Bool state = GIE;
 23138                           
 23139                           ; BSR set to: 14
 23140                           ;incstack = 0
 23141  008F3A  0E00               	movlw	0
 23142  008F3C  BEF2               	btfsc	4082,7,c	;volatile
 23143  008F3E  0E01               	movlw	1
 23144  008F40  6E10               	movwf	WWDT_TimerClear@state^0,c
 23145                           
 23146                           ;mcc_generated_files/mcc.c: 135:     GIE = 0;
 23147  008F42  9EF2               	bcf	4082,7,c	;volatile
 23148  008F44  010E               	movlb	14	; () banked
 23149  008F46  51D2               	movf	210,w,b	;volatile
 23150  008F48  0004               	clrwdt		;# 
 23151                           
 23152                           ;mcc_generated_files/mcc.c: 138:     GIE = state;
 23153  008F4A  B010               	btfsc	WWDT_TimerClear@state^0,0,c
 23154  008F4C  D002               	bra	u18575
 23155  008F4E  9EF2               	bcf	4082,7,c	;volatile
 23156  008F50  D001               	bra	u18576
 23157  008F52                     u18575:
 23158  008F52  8EF2               	bsf	4082,7,c	;volatile
 23159  008F54                     u18576:
 23160  008F54  0012               	return		;funcret
 23161  008F56                     __end_of_WWDT_TimerClear:
 23162                           	callstack 0
 23163                           
 23164 ;; *************** function _WWDT_SoftEnable *****************
 23165 ;; Defined at:
 23166 ;;		line 104 in file "mcc_generated_files/mcc.c"
 23167 ;; Parameters:    Size  Location     Type
 23168 ;;		None
 23169 ;; Auto vars:     Size  Location     Type
 23170 ;;		None
 23171 ;; Return value:  Size  Location     Type
 23172 ;;                  1    wreg      void 
 23173 ;; Registers used:
 23174 ;;		None
 23175 ;; Tracked objects:
 23176 ;;		On entry : 3F/E
 23177 ;;		On exit  : 3F/E
 23178 ;;		Unchanged: 0/0
 23179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23180 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23181 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23183 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23184 ;;Total ram usage:        0 bytes
 23185 ;; Hardware stack levels used: 1
 23186 ;; Hardware stack levels required when called: 4
 23187 ;; This function calls:
 23188 ;;		Nothing
 23189 ;; This function is called by:
 23190 ;;		_main
 23191 ;; This function uses a non-reentrant model
 23192 ;;
 23193                           
 23194                           	psect	text85
 23195  00927A                     __ptext85:
 23196                           	callstack 0
 23197  00927A                     _WWDT_SoftEnable:
 23198                           	callstack 26
 23199                           
 23200                           ; BSR set to: 14
 23201                           ;mcc_generated_files/mcc.c: 107:     WDTCON0bits.SEN=1;
 23202                           
 23203                           ;incstack = 0
 23204  00927A  81D2               	bsf	210,0,b	;volatile
 23205                           
 23206                           ; BSR set to: 14
 23207  00927C  0012               	return		;funcret
 23208  00927E                     __end_of_WWDT_SoftEnable:
 23209                           	callstack 0
 23210                           
 23211 ;; *************** function _ShowVersion *****************
 23212 ;; Defined at:
 23213 ;;		line 254 in file "main_MC50.c"
 23214 ;; Parameters:    Size  Location     Type
 23215 ;;		None
 23216 ;; Auto vars:     Size  Location     Type
 23217 ;;		None
 23218 ;; Return value:  Size  Location     Type
 23219 ;;                  1    wreg      void 
 23220 ;; Registers used:
 23221 ;;		wreg, status,2, status,0, cstack
 23222 ;; Tracked objects:
 23223 ;;		On entry : 3F/1
 23224 ;;		On exit  : 3F/1
 23225 ;;		Unchanged: 0/0
 23226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23227 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23228 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23229 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23230 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23231 ;;Total ram usage:        0 bytes
 23232 ;; Hardware stack levels used: 1
 23233 ;; Hardware stack levels required when called: 5
 23234 ;; This function calls:
 23235 ;;		_SetSegmentValue
 23236 ;; This function is called by:
 23237 ;;		_main
 23238 ;; This function uses a non-reentrant model
 23239 ;;
 23240                           
 23241                           	psect	text86
 23242  008112                     __ptext86:
 23243                           	callstack 0
 23244  008112                     _ShowVersion:
 23245                           	callstack 25
 23246                           
 23247                           ; BSR set to: 1
 23248                           ;main_MC50.c: 256:     if(ts_system.TimeShowVersion<=0)
 23249                           
 23250                           ; BSR set to: 14
 23251                           ;incstack = 0
 23252  008112  BFD7               	btfsc	(_ts_system+61)& (0+255),7,b	;volatile
 23253  008114  D005               	goto	u19660
 23254  008116  51D7               	movf	(_ts_system+61)& (0+255),w,b	;volatile
 23255  008118  E12E               	bnz	l2039
 23256  00811A  05D6               	decf	(_ts_system+60)& (0+255),w,b	;volatile
 23257  00811C  B0D8               	btfsc	status,0,c
 23258  00811E  0012               	return	
 23259  008120                     u19660:
 23260                           
 23261                           ; BSR set to: 1
 23262                           ;main_MC50.c: 257:     {;main_MC50.c: 259:             if(var_sys.StateVersion==0)
 23263  008120  5149               	movf	(_var_sys+73)& (0+255),w,b	;volatile
 23264  008122  A4D8               	btfss	status,2,c
 23265  008124  D006               	goto	l16814
 23266                           
 23267                           ; BSR set to: 1
 23268                           ;main_MC50.c: 260:             {;main_MC50.c: 261:                 SetSegmentValue((1/10
      +                          )%10,(1/1)%10);
 23269  008126  0E01               	movlw	1
 23270  008128  6E1C               	movwf	SetSegmentValue@d2^0,c
 23271  00812A  0E00               	movlw	0
 23272  00812C  ECEE  F047         	call	_SetSegmentValue
 23273                           
 23274                           ;main_MC50.c: 262:             }
 23275  008130  D01C               	goto	l2034
 23276  008132                     l16814:
 23277                           
 23278                           ; BSR set to: 1
 23279  008132  0549               	decf	(_var_sys+73)& (0+255),w,b	;volatile
 23280  008134  A4D8               	btfss	status,2,c
 23281  008136  D006               	goto	l16818
 23282                           
 23283                           ; BSR set to: 1
 23284                           ;main_MC50.c: 264:             {;main_MC50.c: 265:                 SetSegmentValue(dr, (
      +                          180/100)%10);
 23285  008138  0E01               	movlw	1
 23286  00813A  6E1C               	movwf	SetSegmentValue@d2^0,c
 23287  00813C  0E14               	movlw	20
 23288  00813E  ECEE  F047         	call	_SetSegmentValue
 23289                           
 23290                           ;main_MC50.c: 266:             }
 23291  008142  D013               	goto	l2034
 23292  008144                     l16818:
 23293                           
 23294                           ; BSR set to: 1
 23295  008144  0E02               	movlw	2
 23296  008146  1949               	xorwf	(_var_sys+73)& (0+255),w,b	;volatile
 23297  008148  A4D8               	btfss	status,2,c
 23298  00814A  D006               	goto	l16822
 23299                           
 23300                           ; BSR set to: 1
 23301                           ;main_MC50.c: 268:             {;main_MC50.c: 269:                 SetSegmentValue((180/
      +                          10)%10,(180/1)%10);
 23302  00814C  0E00               	movlw	0
 23303  00814E  6E1C               	movwf	SetSegmentValue@d2^0,c
 23304  008150  0E08               	movlw	8
 23305  008152  ECEE  F047         	call	_SetSegmentValue
 23306                           
 23307                           ;main_MC50.c: 270:             }
 23308  008156  D009               	goto	l2034
 23309  008158                     l16822:
 23310                           
 23311                           ; BSR set to: 1
 23312  008158  0E03               	movlw	3
 23313  00815A  1949               	xorwf	(_var_sys+73)& (0+255),w,b	;volatile
 23314  00815C  A4D8               	btfss	status,2,c
 23315  00815E  D005               	goto	l2034
 23316                           
 23317                           ; BSR set to: 1
 23318                           ;main_MC50.c: 272:             {;main_MC50.c: 273:                SetSegmentValue(dr, d2
      +                          );
 23319  008160  0E02               	movlw	2
 23320  008162  6E1C               	movwf	SetSegmentValue@d2^0,c
 23321  008164  0E14               	movlw	20
 23322  008166  ECEE  F047         	call	_SetSegmentValue
 23323  00816A                     l2034:
 23324                           
 23325                           ;main_MC50.c: 282:         var_sys.StateVersion++;
 23326                           
 23327                           ; BSR set to: 1
 23328  00816A  0101               	movlb	1	; () banked
 23329  00816C  2B49               	incf	(_var_sys+73)& (0+255),f,b	;volatile
 23330                           
 23331                           ; BSR set to: 1
 23332                           ;main_MC50.c: 283:         ts_system.TimeShowVersion=(1000/50);
 23333  00816E  0E00               	movlw	0
 23334  008170  6FD7               	movwf	(_ts_system+61)& (0+255),b	;volatile
 23335  008172  0E14               	movlw	20
 23336  008174  6FD6               	movwf	(_ts_system+60)& (0+255),b	;volatile
 23337  008176                     l2039:
 23338                           
 23339                           ; BSR set to: 1
 23340  008176  0012               	return		;funcret
 23341  008178                     __end_of_ShowVersion:
 23342                           	callstack 0
 23343                           
 23344 ;; *************** function _SetSegmentValue *****************
 23345 ;; Defined at:
 23346 ;;		line 112 in file "outputs_MC50.c"
 23347 ;; Parameters:    Size  Location     Type
 23348 ;;  d1              1    wreg     unsigned char 
 23349 ;;  d2              1   27[COMRAM] unsigned char 
 23350 ;; Auto vars:     Size  Location     Type
 23351 ;;  d1              1   28[COMRAM] unsigned char 
 23352 ;; Return value:  Size  Location     Type
 23353 ;;                  1    wreg      void 
 23354 ;; Registers used:
 23355 ;;		wreg, status,2
 23356 ;; Tracked objects:
 23357 ;;		On entry : 0/0
 23358 ;;		On exit  : 3F/0
 23359 ;;		Unchanged: 0/0
 23360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23361 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23362 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23364 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23365 ;;Total ram usage:        2 bytes
 23366 ;; Hardware stack levels used: 1
 23367 ;; Hardware stack levels required when called: 4
 23368 ;; This function calls:
 23369 ;;		Nothing
 23370 ;; This function is called by:
 23371 ;;		_main
 23372 ;;		_ShowVersion
 23373 ;;		_controlSelectRemote
 23374 ;; This function uses a non-reentrant model
 23375 ;;
 23376                           
 23377                           	psect	text87
 23378  008FDC                     __ptext87:
 23379                           	callstack 0
 23380  008FDC                     _SetSegmentValue:
 23381                           	callstack 23
 23382                           
 23383                           ; BSR set to: 1
 23384                           ;incstack = 0
 23385                           ;SetSegmentValue@d1 stored from wreg
 23386  008FDC  6E1D               	movwf	SetSegmentValue@d1^0,c
 23387                           
 23388                           ;outputs_MC50.c: 112: void SetSegmentValue(char d1, char d2);outputs_MC50.c: 113: {;outp
      +                          uts_MC50.c: 117:         dispStruct.display_grp.value_display1=d1;
 23389  008FDE  C01D  F072         	movff	SetSegmentValue@d1,_dispStruct	;volatile
 23390                           
 23391                           ;outputs_MC50.c: 118:         dispStruct.display_grp.value_display2=d2;
 23392  008FE2  C01C  F073         	movff	SetSegmentValue@d2,_dispStruct+1	;volatile
 23393                           
 23394                           ;outputs_MC50.c: 119:         dispStruct.intermitentFreq=0;
 23395  008FE6  0E00               	movlw	0
 23396  008FE8  0100               	movlb	0	; () banked
 23397  008FEA  6F76               	movwf	(_dispStruct+4)& (0+255),b	;volatile
 23398  008FEC  0E00               	movlw	0
 23399  008FEE  6F75               	movwf	(_dispStruct+3)& (0+255),b	;volatile
 23400                           
 23401                           ; BSR set to: 0
 23402                           ;outputs_MC50.c: 120:         dispStruct.upFase=0;
 23403  008FF0  0E00               	movlw	0
 23404  008FF2  6F77               	movwf	(_dispStruct+5)& (0+255),b	;volatile
 23405                           
 23406                           ; BSR set to: 0
 23407  008FF4  0012               	return		;funcret
 23408  008FF6                     __end_of_SetSegmentValue:
 23409                           	callstack 0
 23410                           
 23411 ;; *************** function _SYSTEM_Initialize *****************
 23412 ;; Defined at:
 23413 ;;		line 50 in file "mcc_generated_files/mcc.c"
 23414 ;; Parameters:    Size  Location     Type
 23415 ;;		None
 23416 ;; Auto vars:     Size  Location     Type
 23417 ;;		None
 23418 ;; Return value:  Size  Location     Type
 23419 ;;                  1    wreg      void 
 23420 ;; Registers used:
 23421 ;;		wreg, status,2, status,0, cstack
 23422 ;; Tracked objects:
 23423 ;;		On entry : 3F/0
 23424 ;;		On exit  : 3F/E
 23425 ;;		Unchanged: 0/0
 23426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23427 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23428 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23429 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23430 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23431 ;;Total ram usage:        0 bytes
 23432 ;; Hardware stack levels used: 1
 23433 ;; Hardware stack levels required when called: 6
 23434 ;; This function calls:
 23435 ;;		_ADCC_Initialize
 23436 ;;		_EUSART1_Initialize
 23437 ;;		_I2C1_Initialize
 23438 ;;		_INTERRUPT_Initialize
 23439 ;;		_OSCILLATOR_Initialize
 23440 ;;		_PIN_MANAGER_Initialize
 23441 ;;		_PMD_Initialize
 23442 ;;		_TMR0_Initialize
 23443 ;;		_TMR1_Initialize
 23444 ;;		_TMR2_Initialize
 23445 ;;		_WWDT_Initialize
 23446 ;; This function is called by:
 23447 ;;		_main
 23448 ;; This function uses a non-reentrant model
 23449 ;;
 23450                           
 23451                           	psect	text88
 23452  008AFA                     __ptext88:
 23453                           	callstack 0
 23454  008AFA                     _SYSTEM_Initialize:
 23455                           	callstack 24
 23456                           
 23457                           ; BSR set to: 0
 23458                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 23459                           
 23460                           ; BSR set to: 0
 23461                           ;incstack = 0
 23462  008AFA  EC3F  F049         	call	_INTERRUPT_Initialize	;wreg free
 23463                           
 23464                           ; BSR set to: 0
 23465                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 23466  008AFE  ECAB  F047         	call	_PMD_Initialize	;wreg free
 23467                           
 23468                           ; BSR set to: 14
 23469                           ;mcc_generated_files/mcc.c: 54:     I2C1_Initialize();
 23470  008B02  EC7A  F048         	call	_I2C1_Initialize	;wreg free
 23471                           
 23472                           ; BSR set to: 14
 23473                           ;mcc_generated_files/mcc.c: 55:     PIN_MANAGER_Initialize();
 23474  008B06  EC5E  F03A         	call	_PIN_MANAGER_Initialize	;wreg free
 23475                           
 23476                           ; BSR set to: 14
 23477                           ;mcc_generated_files/mcc.c: 56:     OSCILLATOR_Initialize();
 23478  008B0A  EC50  F048         	call	_OSCILLATOR_Initialize	;wreg free
 23479                           
 23480                           ; BSR set to: 14
 23481                           ;mcc_generated_files/mcc.c: 57:     WWDT_Initialize();
 23482  008B0E  ECBE  F048         	call	_WWDT_Initialize	;wreg free
 23483                           
 23484                           ; BSR set to: 14
 23485                           ;mcc_generated_files/mcc.c: 58:     ADCC_Initialize();
 23486  008B12  ECFB  F042         	call	_ADCC_Initialize	;wreg free
 23487                           
 23488                           ; BSR set to: 15
 23489                           ;mcc_generated_files/mcc.c: 59:     TMR2_Initialize();
 23490  008B16  ECC0  F045         	call	_TMR2_Initialize	;wreg free
 23491                           
 23492                           ; BSR set to: 14
 23493                           ;mcc_generated_files/mcc.c: 60:     TMR1_Initialize();
 23494  008B1A  EC21  F044         	call	_TMR1_Initialize	;wreg free
 23495                           
 23496                           ; BSR set to: 14
 23497                           ;mcc_generated_files/mcc.c: 61:     TMR0_Initialize();
 23498  008B1E  EC5C  F047         	call	_TMR0_Initialize	;wreg free
 23499                           
 23500                           ; BSR set to: 14
 23501                           ;mcc_generated_files/mcc.c: 62:     EUSART1_Initialize();
 23502  008B22  EC9A  F03D         	call	_EUSART1_Initialize	;wreg free
 23503                           
 23504                           ; BSR set to: 14
 23505  008B26  0012               	return		;funcret
 23506  008B28                     __end_of_SYSTEM_Initialize:
 23507                           	callstack 0
 23508                           
 23509 ;; *************** function _WWDT_Initialize *****************
 23510 ;; Defined at:
 23511 ;;		line 96 in file "mcc_generated_files/mcc.c"
 23512 ;; Parameters:    Size  Location     Type
 23513 ;;		None
 23514 ;; Auto vars:     Size  Location     Type
 23515 ;;		None
 23516 ;; Return value:  Size  Location     Type
 23517 ;;                  1    wreg      void 
 23518 ;; Registers used:
 23519 ;;		wreg, status,2
 23520 ;; Tracked objects:
 23521 ;;		On entry : 3F/E
 23522 ;;		On exit  : 3F/E
 23523 ;;		Unchanged: 0/0
 23524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23525 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23526 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23528 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23529 ;;Total ram usage:        0 bytes
 23530 ;; Hardware stack levels used: 1
 23531 ;; Hardware stack levels required when called: 4
 23532 ;; This function calls:
 23533 ;;		Nothing
 23534 ;; This function is called by:
 23535 ;;		_SYSTEM_Initialize
 23536 ;; This function uses a non-reentrant model
 23537 ;;
 23538                           
 23539                           	psect	text89
 23540  00917C                     __ptext89:
 23541                           	callstack 0
 23542  00917C                     _WWDT_Initialize:
 23543                           	callstack 25
 23544                           
 23545                           ; BSR set to: 14
 23546                           ;mcc_generated_files/mcc.c: 99:     WDTCON0 = 22;
 23547                           
 23548                           ; BSR set to: 14
 23549                           ;incstack = 0
 23550  00917C  0E16               	movlw	22
 23551  00917E  6FD2               	movwf	210,b	;volatile
 23552                           
 23553                           ;mcc_generated_files/mcc.c: 100:     WDTCON1 = 7|32;
 23554  009180  0E27               	movlw	39
 23555  009182  6FD3               	movwf	211,b	;volatile
 23556                           
 23557                           ; BSR set to: 14
 23558  009184  0012               	return		;funcret
 23559  009186                     __end_of_WWDT_Initialize:
 23560                           	callstack 0
 23561                           
 23562 ;; *************** function _TMR2_Initialize *****************
 23563 ;; Defined at:
 23564 ;;		line 79 in file "mcc_generated_files/tmr2.c"
 23565 ;; Parameters:    Size  Location     Type
 23566 ;;		None
 23567 ;; Auto vars:     Size  Location     Type
 23568 ;;		None
 23569 ;; Return value:  Size  Location     Type
 23570 ;;                  1    wreg      void 
 23571 ;; Registers used:
 23572 ;;		wreg, status,2, status,0, cstack
 23573 ;; Tracked objects:
 23574 ;;		On entry : 3F/F
 23575 ;;		On exit  : 3F/E
 23576 ;;		Unchanged: 0/0
 23577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23578 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23581 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23582 ;;Total ram usage:        0 bytes
 23583 ;; Hardware stack levels used: 1
 23584 ;; Hardware stack levels required when called: 5
 23585 ;; This function calls:
 23586 ;;		_TMR2_SetInterruptHandler
 23587 ;; This function is called by:
 23588 ;;		_SYSTEM_Initialize
 23589 ;; This function uses a non-reentrant model
 23590 ;;
 23591                           
 23592                           	psect	text90
 23593  008B80                     __ptext90:
 23594                           	callstack 0
 23595  008B80                     _TMR2_Initialize:
 23596                           	callstack 24
 23597                           
 23598                           ; BSR set to: 15
 23599                           ;mcc_generated_files/tmr2.c: 84:     T2CLKCON = 0x02;
 23600                           
 23601                           ; BSR set to: 14
 23602                           ;incstack = 0
 23603  008B80  0E02               	movlw	2
 23604  008B82  6EBF               	movwf	191,c	;volatile
 23605                           
 23606                           ;mcc_generated_files/tmr2.c: 87:     T2HLT = 0x40;
 23607  008B84  0E40               	movlw	64
 23608  008B86  6EBE               	movwf	190,c	;volatile
 23609                           
 23610                           ;mcc_generated_files/tmr2.c: 90:     T2RST = 0x00;
 23611  008B88  0E00               	movlw	0
 23612  008B8A  6EC0               	movwf	192,c	;volatile
 23613                           
 23614                           ;mcc_generated_files/tmr2.c: 93:     T2PR = 0xC7;
 23615  008B8C  0EC7               	movlw	199
 23616  008B8E  6EBC               	movwf	188,c	;volatile
 23617                           
 23618                           ;mcc_generated_files/tmr2.c: 96:     T2TMR = 0x00;
 23619  008B90  0E00               	movlw	0
 23620  008B92  6EBB               	movwf	187,c	;volatile
 23621                           
 23622                           ; BSR set to: 15
 23623                           ;mcc_generated_files/tmr2.c: 99:     PIR4bits.TMR2IF = 0;
 23624  008B94  010E               	movlb	14	; () banked
 23625  008B96  93CE               	bcf	206,1,b	;volatile
 23626                           
 23627                           ; BSR set to: 14
 23628                           ;mcc_generated_files/tmr2.c: 102:     PIE4bits.TMR2IE = 1;
 23629  008B98  83C6               	bsf	198,1,b	;volatile
 23630                           
 23631                           ; BSR set to: 14
 23632                           ;mcc_generated_files/tmr2.c: 105:     TMR2_SetInterruptHandler(TMR2_DefaultInterruptHand
      +                          ler);
 23633  008B9A  0EAA               	movlw	low _TMR2_DefaultInterruptHandler
 23634  008B9C  6E10               	movwf	TMR2_SetInterruptHandler@InterruptHandler^0,c
 23635  008B9E  0E92               	movlw	high _TMR2_DefaultInterruptHandler
 23636  008BA0  6E11               	movwf	(TMR2_SetInterruptHandler@InterruptHandler+1)^0,c
 23637  008BA2  ECC3  F048         	call	_TMR2_SetInterruptHandler	;wreg free
 23638                           
 23639                           ; BSR set to: 14
 23640                           ;mcc_generated_files/tmr2.c: 108:     T2CON = 0xD9;
 23641  008BA6  0ED9               	movlw	217
 23642  008BA8  6EBD               	movwf	189,c	;volatile
 23643                           
 23644                           ; BSR set to: 14
 23645  008BAA  0012               	return		;funcret
 23646  008BAC                     __end_of_TMR2_Initialize:
 23647                           	callstack 0
 23648                           
 23649 ;; *************** function _TMR2_SetInterruptHandler *****************
 23650 ;; Defined at:
 23651 ;;		line 342 in file "mcc_generated_files/tmr2.c"
 23652 ;; Parameters:    Size  Location     Type
 23653 ;;  InterruptHan    2   15[COMRAM] PTR FTN()void 
 23654 ;;		 -> TMR2_DefaultInterruptHandler(1), 
 23655 ;; Auto vars:     Size  Location     Type
 23656 ;;		None
 23657 ;; Return value:  Size  Location     Type
 23658 ;;                  1    wreg      void 
 23659 ;; Registers used:
 23660 ;;		wreg, status,2, status,0
 23661 ;; Tracked objects:
 23662 ;;		On entry : 3F/E
 23663 ;;		On exit  : 3F/E
 23664 ;;		Unchanged: 3F/0
 23665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23666 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23667 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23668 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23669 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23670 ;;Total ram usage:        2 bytes
 23671 ;; Hardware stack levels used: 1
 23672 ;; Hardware stack levels required when called: 4
 23673 ;; This function calls:
 23674 ;;		Nothing
 23675 ;; This function is called by:
 23676 ;;		_TMR2_Initialize
 23677 ;; This function uses a non-reentrant model
 23678 ;;
 23679                           
 23680                           	psect	text91
 23681  009186                     __ptext91:
 23682                           	callstack 0
 23683  009186                     _TMR2_SetInterruptHandler:
 23684                           	callstack 24
 23685                           
 23686                           ; BSR set to: 14
 23687                           ;mcc_generated_files/tmr2.c: 343:     TMR2_InterruptHandler = InterruptHandler;
 23688                           
 23689                           ; BSR set to: 14
 23690                           ;incstack = 0
 23691  009186  C010  F2DD         	movff	TMR2_SetInterruptHandler@InterruptHandler,_TMR2_InterruptHandler
 23692  00918A  C011  F2DE         	movff	TMR2_SetInterruptHandler@InterruptHandler+1,_TMR2_InterruptHandler+1
 23693                           
 23694                           ; BSR set to: 14
 23695  00918E  0012               	return		;funcret
 23696  009190                     __end_of_TMR2_SetInterruptHandler:
 23697                           	callstack 0
 23698                           
 23699 ;; *************** function _TMR1_Initialize *****************
 23700 ;; Defined at:
 23701 ;;		line 66 in file "mcc_generated_files/tmr1.c"
 23702 ;; Parameters:    Size  Location     Type
 23703 ;;		None
 23704 ;; Auto vars:     Size  Location     Type
 23705 ;;		None
 23706 ;; Return value:  Size  Location     Type
 23707 ;;                  1    wreg      void 
 23708 ;; Registers used:
 23709 ;;		wreg, status,2, status,0, cstack
 23710 ;; Tracked objects:
 23711 ;;		On entry : 3F/E
 23712 ;;		On exit  : 3F/E
 23713 ;;		Unchanged: 0/0
 23714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23717 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23718 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23719 ;;Total ram usage:        2 bytes
 23720 ;; Hardware stack levels used: 1
 23721 ;; Hardware stack levels required when called: 5
 23722 ;; This function calls:
 23723 ;;		_TMR1_SetInterruptHandler
 23724 ;; This function is called by:
 23725 ;;		_SYSTEM_Initialize
 23726 ;; This function uses a non-reentrant model
 23727 ;;
 23728                           
 23729                           	psect	text92
 23730  008842                     __ptext92:
 23731                           	callstack 0
 23732  008842                     _TMR1_Initialize:
 23733                           	callstack 24
 23734                           
 23735                           ; BSR set to: 14
 23736                           ;mcc_generated_files/tmr1.c: 71:     T1GCON = 0x00;
 23737                           
 23738                           ; BSR set to: 14
 23739                           ;incstack = 0
 23740  008842  0E00               	movlw	0
 23741  008844  6ED0               	movwf	208,c	;volatile
 23742                           
 23743                           ;mcc_generated_files/tmr1.c: 74:     T1GATE = 0x00;
 23744  008846  0E00               	movlw	0
 23745  008848  6ED1               	movwf	209,c	;volatile
 23746                           
 23747                           ;mcc_generated_files/tmr1.c: 77:     T1CLK = 0x01;
 23748  00884A  0E01               	movlw	1
 23749  00884C  6ED2               	movwf	210,c	;volatile
 23750                           
 23751                           ; BSR set to: 14
 23752                           ;mcc_generated_files/tmr1.c: 80:     TMR1H = 0xFF;
 23753  00884E  68CE               	setf	206,c	;volatile
 23754                           
 23755                           ;mcc_generated_files/tmr1.c: 83:     TMR1L = 0x38;
 23756  008850  0E38               	movlw	56
 23757  008852  6ECD               	movwf	205,c	;volatile
 23758                           
 23759                           ; BSR set to: 14
 23760                           ;mcc_generated_files/tmr1.c: 86:     PIR4bits.TMR1IF = 0;
 23761  008854  91CE               	bcf	206,0,b	;volatile
 23762                           
 23763                           ; BSR set to: 14
 23764                           ;mcc_generated_files/tmr1.c: 89:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
 23765  008856  50CD               	movf	205,w,c	;volatile
 23766  008858  CFCE F012          	movff	4046,??_TMR1_Initialize	;volatile
 23767  00885C  6A13               	clrf	(??_TMR1_Initialize+1)^0,c
 23768  00885E  C012  F013         	movff	??_TMR1_Initialize,??_TMR1_Initialize+1
 23769  008862  6A12               	clrf	??_TMR1_Initialize^0,c
 23770  008864  1012               	iorwf	??_TMR1_Initialize^0,w,c
 23771  008866  0102               	movlb	2	; () banked
 23772  008868  6FE1               	movwf	_timer1ReloadVal& (0+255),b	;volatile
 23773  00886A  5013               	movf	(??_TMR1_Initialize+1)^0,w,c
 23774  00886C  6FE2               	movwf	(_timer1ReloadVal+1)& (0+255),b	;volatile
 23775                           
 23776                           ; BSR set to: 2
 23777                           ;mcc_generated_files/tmr1.c: 92:     PIE4bits.TMR1IE = 1;
 23778  00886E  010E               	movlb	14	; () banked
 23779  008870  81C6               	bsf	198,0,b	;volatile
 23780                           
 23781                           ; BSR set to: 14
 23782                           ;mcc_generated_files/tmr1.c: 95:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
 23783  008872  0EAC               	movlw	low _TMR1_DefaultInterruptHandler
 23784  008874  6E10               	movwf	TMR1_SetInterruptHandler@InterruptHandler^0,c
 23785  008876  0E92               	movlw	high _TMR1_DefaultInterruptHandler
 23786  008878  6E11               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)^0,c
 23787  00887A  ECC8  F048         	call	_TMR1_SetInterruptHandler	;wreg free
 23788                           
 23789                           ; BSR set to: 14
 23790                           ;mcc_generated_files/tmr1.c: 98:     T1CON = 0x31;
 23791  00887E  0E31               	movlw	49
 23792  008880  6ECF               	movwf	207,c	;volatile
 23793                           
 23794                           ; BSR set to: 14
 23795  008882  0012               	return		;funcret
 23796  008884                     __end_of_TMR1_Initialize:
 23797                           	callstack 0
 23798                           
 23799 ;; *************** function _TMR1_SetInterruptHandler *****************
 23800 ;; Defined at:
 23801 ;;		line 192 in file "mcc_generated_files/tmr1.c"
 23802 ;; Parameters:    Size  Location     Type
 23803 ;;  InterruptHan    2   15[COMRAM] PTR FTN()void 
 23804 ;;		 -> TMR1_DefaultInterruptHandler(1), 
 23805 ;; Auto vars:     Size  Location     Type
 23806 ;;		None
 23807 ;; Return value:  Size  Location     Type
 23808 ;;                  1    wreg      void 
 23809 ;; Registers used:
 23810 ;;		wreg, status,2, status,0
 23811 ;; Tracked objects:
 23812 ;;		On entry : 3F/E
 23813 ;;		On exit  : 3F/E
 23814 ;;		Unchanged: 3F/0
 23815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23816 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23817 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23818 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23819 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23820 ;;Total ram usage:        2 bytes
 23821 ;; Hardware stack levels used: 1
 23822 ;; Hardware stack levels required when called: 4
 23823 ;; This function calls:
 23824 ;;		Nothing
 23825 ;; This function is called by:
 23826 ;;		_TMR1_Initialize
 23827 ;; This function uses a non-reentrant model
 23828 ;;
 23829                           
 23830                           	psect	text93
 23831  009190                     __ptext93:
 23832                           	callstack 0
 23833  009190                     _TMR1_SetInterruptHandler:
 23834                           	callstack 24
 23835                           
 23836                           ; BSR set to: 14
 23837                           ;mcc_generated_files/tmr1.c: 193:     TMR1_InterruptHandler = InterruptHandler;
 23838                           
 23839                           ; BSR set to: 14
 23840                           ;incstack = 0
 23841  009190  C010  F2DF         	movff	TMR1_SetInterruptHandler@InterruptHandler,_TMR1_InterruptHandler
 23842  009194  C011  F2E0         	movff	TMR1_SetInterruptHandler@InterruptHandler+1,_TMR1_InterruptHandler+1
 23843                           
 23844                           ; BSR set to: 14
 23845  009198  0012               	return		;funcret
 23846  00919A                     __end_of_TMR1_SetInterruptHandler:
 23847                           	callstack 0
 23848                           
 23849 ;; *************** function _TMR0_Initialize *****************
 23850 ;; Defined at:
 23851 ;;		line 67 in file "mcc_generated_files/tmr0.c"
 23852 ;; Parameters:    Size  Location     Type
 23853 ;;		None
 23854 ;; Auto vars:     Size  Location     Type
 23855 ;;		None
 23856 ;; Return value:  Size  Location     Type
 23857 ;;                  1    wreg      void 
 23858 ;; Registers used:
 23859 ;;		wreg, status,2, status,0, cstack
 23860 ;; Tracked objects:
 23861 ;;		On entry : 3F/E
 23862 ;;		On exit  : 3F/E
 23863 ;;		Unchanged: 0/0
 23864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23865 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23866 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23868 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23869 ;;Total ram usage:        0 bytes
 23870 ;; Hardware stack levels used: 1
 23871 ;; Hardware stack levels required when called: 5
 23872 ;; This function calls:
 23873 ;;		_TMR0_SetInterruptHandler
 23874 ;; This function is called by:
 23875 ;;		_SYSTEM_Initialize
 23876 ;; This function uses a non-reentrant model
 23877 ;;
 23878                           
 23879                           	psect	text94
 23880  008EB8                     __ptext94:
 23881                           	callstack 0
 23882  008EB8                     _TMR0_Initialize:
 23883                           	callstack 24
 23884                           
 23885                           ; BSR set to: 14
 23886                           ;mcc_generated_files/tmr0.c: 72:     T0CON1 = 0x41;
 23887                           
 23888                           ; BSR set to: 14
 23889                           ;incstack = 0
 23890  008EB8  0E41               	movlw	65
 23891  008EBA  6ED6               	movwf	214,c	;volatile
 23892                           
 23893                           ;mcc_generated_files/tmr0.c: 75:     TMR0H = 0x84;
 23894  008EBC  0E84               	movlw	132
 23895  008EBE  6ED4               	movwf	212,c	;volatile
 23896                           
 23897                           ;mcc_generated_files/tmr0.c: 78:     TMR0L = 0x00;
 23898  008EC0  0E00               	movlw	0
 23899  008EC2  6ED3               	movwf	211,c	;volatile
 23900                           
 23901                           ; BSR set to: 14
 23902                           ;mcc_generated_files/tmr0.c: 81:     PIR0bits.TMR0IF = 0;
 23903  008EC4  9BCA               	bcf	202,5,b	;volatile
 23904                           
 23905                           ; BSR set to: 14
 23906                           ;mcc_generated_files/tmr0.c: 84:     PIE0bits.TMR0IE = 1;
 23907  008EC6  8BC2               	bsf	194,5,b	;volatile
 23908                           
 23909                           ; BSR set to: 14
 23910                           ;mcc_generated_files/tmr0.c: 87:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
 23911  008EC8  0EAE               	movlw	low _TMR0_DefaultInterruptHandler
 23912  008ECA  6E10               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
 23913  008ECC  0E92               	movlw	high _TMR0_DefaultInterruptHandler
 23914  008ECE  6E11               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
 23915  008ED0  ECCD  F048         	call	_TMR0_SetInterruptHandler	;wreg free
 23916                           
 23917                           ; BSR set to: 14
 23918                           ;mcc_generated_files/tmr0.c: 90:     T0CON0 = 0x87;
 23919  008ED4  0E87               	movlw	135
 23920  008ED6  6ED5               	movwf	213,c	;volatile
 23921                           
 23922                           ; BSR set to: 14
 23923  008ED8  0012               	return		;funcret
 23924  008EDA                     __end_of_TMR0_Initialize:
 23925                           	callstack 0
 23926                           
 23927 ;; *************** function _TMR0_SetInterruptHandler *****************
 23928 ;; Defined at:
 23929 ;;		line 143 in file "mcc_generated_files/tmr0.c"
 23930 ;; Parameters:    Size  Location     Type
 23931 ;;  InterruptHan    2   15[COMRAM] PTR FTN()void 
 23932 ;;		 -> TMR0_DefaultInterruptHandler(1), 
 23933 ;; Auto vars:     Size  Location     Type
 23934 ;;		None
 23935 ;; Return value:  Size  Location     Type
 23936 ;;                  1    wreg      void 
 23937 ;; Registers used:
 23938 ;;		wreg, status,2, status,0
 23939 ;; Tracked objects:
 23940 ;;		On entry : 3F/E
 23941 ;;		On exit  : 3F/E
 23942 ;;		Unchanged: 3F/0
 23943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23944 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23945 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23946 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23947 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23948 ;;Total ram usage:        2 bytes
 23949 ;; Hardware stack levels used: 1
 23950 ;; Hardware stack levels required when called: 4
 23951 ;; This function calls:
 23952 ;;		Nothing
 23953 ;; This function is called by:
 23954 ;;		_TMR0_Initialize
 23955 ;; This function uses a non-reentrant model
 23956 ;;
 23957                           
 23958                           	psect	text95
 23959  00919A                     __ptext95:
 23960                           	callstack 0
 23961  00919A                     _TMR0_SetInterruptHandler:
 23962                           	callstack 24
 23963                           
 23964                           ; BSR set to: 14
 23965                           ;mcc_generated_files/tmr0.c: 144:     TMR0_InterruptHandler = InterruptHandler;
 23966                           
 23967                           ; BSR set to: 14
 23968                           ;incstack = 0
 23969  00919A  C010  F2E3         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
 23970  00919E  C011  F2E4         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
 23971                           
 23972                           ; BSR set to: 14
 23973  0091A2  0012               	return		;funcret
 23974  0091A4                     __end_of_TMR0_SetInterruptHandler:
 23975                           	callstack 0
 23976                           
 23977 ;; *************** function _PMD_Initialize *****************
 23978 ;; Defined at:
 23979 ;;		line 79 in file "mcc_generated_files/mcc.c"
 23980 ;; Parameters:    Size  Location     Type
 23981 ;;		None
 23982 ;; Auto vars:     Size  Location     Type
 23983 ;;		None
 23984 ;; Return value:  Size  Location     Type
 23985 ;;                  1    wreg      void 
 23986 ;; Registers used:
 23987 ;;		wreg, status,2
 23988 ;; Tracked objects:
 23989 ;;		On entry : 3F/0
 23990 ;;		On exit  : 3F/E
 23991 ;;		Unchanged: 0/0
 23992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23996 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23997 ;;Total ram usage:        0 bytes
 23998 ;; Hardware stack levels used: 1
 23999 ;; Hardware stack levels required when called: 4
 24000 ;; This function calls:
 24001 ;;		Nothing
 24002 ;; This function is called by:
 24003 ;;		_SYSTEM_Initialize
 24004 ;; This function uses a non-reentrant model
 24005 ;;
 24006                           
 24007                           	psect	text96
 24008  008F56                     __ptext96:
 24009                           	callstack 0
 24010  008F56                     _PMD_Initialize:
 24011                           	callstack 25
 24012                           
 24013                           ; BSR set to: 0
 24014                           ;mcc_generated_files/mcc.c: 82:     PMD0 = 0x00;
 24015                           
 24016                           ; BSR set to: 14
 24017                           ;incstack = 0
 24018  008F56  0E00               	movlw	0
 24019  008F58  010E               	movlb	14	; () banked
 24020  008F5A  6FE1               	movwf	225,b	;volatile
 24021                           
 24022                           ;mcc_generated_files/mcc.c: 84:     PMD1 = 0x00;
 24023  008F5C  0E00               	movlw	0
 24024  008F5E  6FE2               	movwf	226,b	;volatile
 24025                           
 24026                           ;mcc_generated_files/mcc.c: 86:     PMD2 = 0x00;
 24027  008F60  0E00               	movlw	0
 24028  008F62  6FE3               	movwf	227,b	;volatile
 24029                           
 24030                           ;mcc_generated_files/mcc.c: 88:     PMD3 = 0x00;
 24031  008F64  0E00               	movlw	0
 24032  008F66  6FE4               	movwf	228,b	;volatile
 24033                           
 24034                           ;mcc_generated_files/mcc.c: 90:     PMD4 = 0x00;
 24035  008F68  0E00               	movlw	0
 24036  008F6A  6FE5               	movwf	229,b	;volatile
 24037                           
 24038                           ;mcc_generated_files/mcc.c: 92:     PMD5 = 0x00;
 24039  008F6C  0E00               	movlw	0
 24040  008F6E  6FE6               	movwf	230,b	;volatile
 24041                           
 24042                           ; BSR set to: 14
 24043  008F70  0012               	return		;funcret
 24044  008F72                     __end_of_PMD_Initialize:
 24045                           	callstack 0
 24046                           
 24047 ;; *************** function _PIN_MANAGER_Initialize *****************
 24048 ;; Defined at:
 24049 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 24050 ;; Parameters:    Size  Location     Type
 24051 ;;		None
 24052 ;; Auto vars:     Size  Location     Type
 24053 ;;		None
 24054 ;; Return value:  Size  Location     Type
 24055 ;;                  1    wreg      void 
 24056 ;; Registers used:
 24057 ;;		wreg, status,2
 24058 ;; Tracked objects:
 24059 ;;		On entry : 3F/E
 24060 ;;		On exit  : 3F/E
 24061 ;;		Unchanged: 0/0
 24062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24063 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24064 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24066 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24067 ;;Total ram usage:        0 bytes
 24068 ;; Hardware stack levels used: 1
 24069 ;; Hardware stack levels required when called: 4
 24070 ;; This function calls:
 24071 ;;		Nothing
 24072 ;; This function is called by:
 24073 ;;		_SYSTEM_Initialize
 24074 ;; This function uses a non-reentrant model
 24075 ;;
 24076                           
 24077                           	psect	text97
 24078  0074BC                     __ptext97:
 24079                           	callstack 0
 24080  0074BC                     _PIN_MANAGER_Initialize:
 24081                           	callstack 25
 24082                           
 24083                           ; BSR set to: 14
 24084                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
 24085                           
 24086                           ; BSR set to: 14
 24087                           ;incstack = 0
 24088  0074BC  0E00               	movlw	0
 24089  0074BE  6E87               	movwf	135,c	;volatile
 24090                           
 24091                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
 24092  0074C0  0E00               	movlw	0
 24093  0074C2  6E86               	movwf	134,c	;volatile
 24094                           
 24095                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
 24096  0074C4  0E00               	movlw	0
 24097  0074C6  6E83               	movwf	131,c	;volatile
 24098                           
 24099                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
 24100  0074C8  0E00               	movlw	0
 24101  0074CA  6E84               	movwf	132,c	;volatile
 24102                           
 24103                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
 24104  0074CC  0E00               	movlw	0
 24105  0074CE  6E85               	movwf	133,c	;volatile
 24106                           
 24107                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x00;
 24108  0074D0  0E00               	movlw	0
 24109  0074D2  6E8C               	movwf	140,c	;volatile
 24110                           
 24111                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0x7F;
 24112  0074D4  0E7F               	movlw	127
 24113  0074D6  6E88               	movwf	136,c	;volatile
 24114                           
 24115                           ; BSR set to: 14
 24116                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
 24117  0074D8  6889               	setf	137,c	;volatile
 24118                           
 24119                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0x58;
 24120  0074DA  0E58               	movlw	88
 24121  0074DC  6E8A               	movwf	138,c	;volatile
 24122                           
 24123                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0x00;
 24124  0074DE  0E00               	movlw	0
 24125  0074E0  6E8B               	movwf	139,c	;volatile
 24126                           
 24127                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0x00;
 24128  0074E2  0E00               	movlw	0
 24129  0074E4  010F               	movlb	15	; () banked
 24130  0074E6  6F26               	movwf	38,b	;volatile
 24131                           
 24132                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0x00;
 24133  0074E8  0E00               	movlw	0
 24134  0074EA  6F21               	movwf	33,b	;volatile
 24135                           
 24136                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0x00;
 24137  0074EC  0E00               	movlw	0
 24138  0074EE  6F19               	movwf	25,b	;volatile
 24139                           
 24140                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x00;
 24141  0074F0  0E00               	movlw	0
 24142  0074F2  6F2E               	movwf	46,b	;volatile
 24143                           
 24144                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0x01;
 24145  0074F4  0E01               	movlw	1
 24146  0074F6  6F11               	movwf	17,b	;volatile
 24147                           
 24148                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
 24149  0074F8  0E00               	movlw	0
 24150  0074FA  6F25               	movwf	37,b	;volatile
 24151                           
 24152                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
 24153  0074FC  0E00               	movlw	0
 24154  0074FE  6F2D               	movwf	45,b	;volatile
 24155                           
 24156                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0xF7;
 24157  007500  0EF7               	movlw	247
 24158  007502  6F18               	movwf	24,b	;volatile
 24159                           
 24160                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
 24161  007504  0E00               	movlw	0
 24162  007506  6F10               	movwf	16,b	;volatile
 24163                           
 24164                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
 24165  007508  0E00               	movlw	0
 24166  00750A  6F20               	movwf	32,b	;volatile
 24167                           
 24168                           ;mcc_generated_files/pin_manager.c: 96:     ODCONE = 0x00;
 24169  00750C  0E00               	movlw	0
 24170  00750E  6F2C               	movwf	44,b	;volatile
 24171                           
 24172                           ;mcc_generated_files/pin_manager.c: 97:     ODCONA = 0x00;
 24173  007510  0E00               	movlw	0
 24174  007512  6F0F               	movwf	15,b	;volatile
 24175                           
 24176                           ;mcc_generated_files/pin_manager.c: 98:     ODCONB = 0x00;
 24177  007514  0E00               	movlw	0
 24178  007516  6F17               	movwf	23,b	;volatile
 24179                           
 24180                           ;mcc_generated_files/pin_manager.c: 99:     ODCONC = 0x00;
 24181  007518  0E00               	movlw	0
 24182  00751A  6F1F               	movwf	31,b	;volatile
 24183                           
 24184                           ;mcc_generated_files/pin_manager.c: 100:     ODCOND = 0x00;
 24185  00751C  0E00               	movlw	0
 24186  00751E  6F24               	movwf	36,b	;volatile
 24187                           
 24188                           ; BSR set to: 15
 24189                           ;mcc_generated_files/pin_manager.c: 105:     SLRCONA = 0xFF;
 24190  007520  690E               	setf	14,b	;volatile
 24191                           
 24192                           ; BSR set to: 15
 24193                           ;mcc_generated_files/pin_manager.c: 106:     SLRCONB = 0xFF;
 24194  007522  6916               	setf	22,b	;volatile
 24195                           
 24196                           ; BSR set to: 15
 24197                           ;mcc_generated_files/pin_manager.c: 107:     SLRCONC = 0xFF;
 24198  007524  691E               	setf	30,b	;volatile
 24199                           
 24200                           ; BSR set to: 15
 24201                           ;mcc_generated_files/pin_manager.c: 108:     SLRCOND = 0xFF;
 24202  007526  6923               	setf	35,b	;volatile
 24203                           
 24204                           ;mcc_generated_files/pin_manager.c: 109:     SLRCONE = 0x07;
 24205  007528  0E07               	movlw	7
 24206  00752A  6F2B               	movwf	43,b	;volatile
 24207                           
 24208                           ; BSR set to: 15
 24209                           ;mcc_generated_files/pin_manager.c: 114:     INLVLA = 0xFF;
 24210  00752C  690D               	setf	13,b	;volatile
 24211                           
 24212                           ; BSR set to: 15
 24213                           ;mcc_generated_files/pin_manager.c: 115:     INLVLB = 0xFF;
 24214  00752E  6915               	setf	21,b	;volatile
 24215                           
 24216                           ; BSR set to: 15
 24217                           ;mcc_generated_files/pin_manager.c: 116:     INLVLC = 0xFF;
 24218  007530  691D               	setf	29,b	;volatile
 24219                           
 24220                           ; BSR set to: 15
 24221                           ;mcc_generated_files/pin_manager.c: 117:     INLVLD = 0xFF;
 24222  007532  6922               	setf	34,b	;volatile
 24223                           
 24224                           ;mcc_generated_files/pin_manager.c: 118:     INLVLE = 0x0F;
 24225  007534  0E0F               	movlw	15
 24226  007536  6F2A               	movwf	42,b	;volatile
 24227                           
 24228                           ;mcc_generated_files/pin_manager.c: 127:     SSP1CLKPPS = 0x13;
 24229  007538  0E13               	movlw	19
 24230  00753A  010E               	movlb	14	; () banked
 24231  00753C  6FB7               	movwf	183,b	;volatile
 24232                           
 24233                           ;mcc_generated_files/pin_manager.c: 128:     RX1PPS = 0x16;
 24234  00753E  0E16               	movlw	22
 24235  007540  6FB5               	movwf	181,b	;volatile
 24236                           
 24237                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x0F;
 24238  007542  0E0F               	movlw	15
 24239  007544  6FFA               	movwf	250,b	;volatile
 24240                           
 24241                           ;mcc_generated_files/pin_manager.c: 130:     RC4PPS = 0x10;
 24242  007546  0E10               	movlw	16
 24243  007548  6FFB               	movwf	251,b	;volatile
 24244                           
 24245                           ;mcc_generated_files/pin_manager.c: 131:     RC7PPS = 0x09;
 24246  00754A  0E09               	movlw	9
 24247  00754C  6FFE               	movwf	254,b	;volatile
 24248                           
 24249                           ;mcc_generated_files/pin_manager.c: 132:     SSP1DATPPS = 0x14;
 24250  00754E  0E14               	movlw	20
 24251  007550  6FB8               	movwf	184,b	;volatile
 24252                           
 24253                           ; BSR set to: 14
 24254  007552  0012               	return		;funcret
 24255  007554                     __end_of_PIN_MANAGER_Initialize:
 24256                           	callstack 0
 24257                           
 24258 ;; *************** function _OSCILLATOR_Initialize *****************
 24259 ;; Defined at:
 24260 ;;		line 65 in file "mcc_generated_files/mcc.c"
 24261 ;; Parameters:    Size  Location     Type
 24262 ;;		None
 24263 ;; Auto vars:     Size  Location     Type
 24264 ;;		None
 24265 ;; Return value:  Size  Location     Type
 24266 ;;                  1    wreg      void 
 24267 ;; Registers used:
 24268 ;;		wreg, status,2
 24269 ;; Tracked objects:
 24270 ;;		On entry : 3F/E
 24271 ;;		On exit  : 3F/E
 24272 ;;		Unchanged: 0/0
 24273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24274 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24275 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24277 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24278 ;;Total ram usage:        0 bytes
 24279 ;; Hardware stack levels used: 1
 24280 ;; Hardware stack levels required when called: 4
 24281 ;; This function calls:
 24282 ;;		Nothing
 24283 ;; This function is called by:
 24284 ;;		_SYSTEM_Initialize
 24285 ;; This function uses a non-reentrant model
 24286 ;;
 24287                           
 24288                           	psect	text98
 24289  0090A0                     __ptext98:
 24290                           	callstack 0
 24291  0090A0                     _OSCILLATOR_Initialize:
 24292                           	callstack 25
 24293                           
 24294                           ; BSR set to: 14
 24295                           ;mcc_generated_files/mcc.c: 68:     OSCCON1 = 0x60;
 24296                           
 24297                           ; BSR set to: 14
 24298                           ;incstack = 0
 24299  0090A0  0E60               	movlw	96
 24300  0090A2  6FD8               	movwf	216,b	;volatile
 24301                           
 24302                           ;mcc_generated_files/mcc.c: 70:     OSCCON3 = 0x00;
 24303  0090A4  0E00               	movlw	0
 24304  0090A6  6FDA               	movwf	218,b	;volatile
 24305                           
 24306                           ;mcc_generated_files/mcc.c: 72:     OSCEN = 0x00;
 24307  0090A8  0E00               	movlw	0
 24308  0090AA  6FDC               	movwf	220,b	;volatile
 24309                           
 24310                           ;mcc_generated_files/mcc.c: 74:     OSCFRQ = 0x08;
 24311  0090AC  0E08               	movlw	8
 24312  0090AE  6FDE               	movwf	222,b	;volatile
 24313                           
 24314                           ;mcc_generated_files/mcc.c: 76:     OSCTUNE = 0x00;
 24315  0090B0  0E00               	movlw	0
 24316  0090B2  6FDD               	movwf	221,b	;volatile
 24317                           
 24318                           ; BSR set to: 14
 24319  0090B4  0012               	return		;funcret
 24320  0090B6                     __end_of_OSCILLATOR_Initialize:
 24321                           	callstack 0
 24322                           
 24323 ;; *************** function _INTERRUPT_Initialize *****************
 24324 ;; Defined at:
 24325 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 24326 ;; Parameters:    Size  Location     Type
 24327 ;;		None
 24328 ;; Auto vars:     Size  Location     Type
 24329 ;;		None
 24330 ;; Return value:  Size  Location     Type
 24331 ;;                  1    wreg      void 
 24332 ;; Registers used:
 24333 ;;		None
 24334 ;; Tracked objects:
 24335 ;;		On entry : 3F/0
 24336 ;;		On exit  : 3F/0
 24337 ;;		Unchanged: 3F/0
 24338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24339 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24340 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24342 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24343 ;;Total ram usage:        0 bytes
 24344 ;; Hardware stack levels used: 1
 24345 ;; Hardware stack levels required when called: 4
 24346 ;; This function calls:
 24347 ;;		Nothing
 24348 ;; This function is called by:
 24349 ;;		_SYSTEM_Initialize
 24350 ;; This function uses a non-reentrant model
 24351 ;;
 24352                           
 24353                           	psect	text99
 24354  00927E                     __ptext99:
 24355                           	callstack 0
 24356  00927E                     _INTERRUPT_Initialize:
 24357                           	callstack 25
 24358                           
 24359                           ; BSR set to: 0
 24360                           ;mcc_generated_files/interrupt_manager.c: 55:     INTCONbits.IPEN = 0;
 24361                           
 24362                           ; BSR set to: 14
 24363                           ;incstack = 0
 24364  00927E  9AF2               	bcf	242,5,c	;volatile
 24365                           
 24366                           ; BSR set to: 0
 24367  009280  0012               	return		;funcret
 24368  009282                     __end_of_INTERRUPT_Initialize:
 24369                           	callstack 0
 24370                           
 24371 ;; *************** function _I2C1_Initialize *****************
 24372 ;; Defined at:
 24373 ;;		line 167 in file "mcc_generated_files/i2c1_master.c"
 24374 ;; Parameters:    Size  Location     Type
 24375 ;;		None
 24376 ;; Auto vars:     Size  Location     Type
 24377 ;;		None
 24378 ;; Return value:  Size  Location     Type
 24379 ;;                  1    wreg      void 
 24380 ;; Registers used:
 24381 ;;		wreg, status,2
 24382 ;; Tracked objects:
 24383 ;;		On entry : 3F/E
 24384 ;;		On exit  : 3F/E
 24385 ;;		Unchanged: 3F/0
 24386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24387 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24388 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24390 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24391 ;;Total ram usage:        0 bytes
 24392 ;; Hardware stack levels used: 1
 24393 ;; Hardware stack levels required when called: 4
 24394 ;; This function calls:
 24395 ;;		Nothing
 24396 ;; This function is called by:
 24397 ;;		_SYSTEM_Initialize
 24398 ;; This function uses a non-reentrant model
 24399 ;;
 24400                           
 24401                           	psect	text100
 24402  0090F4                     __ptext100:
 24403                           	callstack 0
 24404  0090F4                     _I2C1_Initialize:
 24405                           	callstack 25
 24406                           
 24407                           ; BSR set to: 14
 24408                           ;mcc_generated_files/i2c1_master.c: 169:     SSP1STAT = 0x80;
 24409                           
 24410                           ; BSR set to: 0
 24411                           ;incstack = 0
 24412  0090F4  0E80               	movlw	128
 24413  0090F6  6E95               	movwf	149,c	;volatile
 24414                           
 24415                           ;mcc_generated_files/i2c1_master.c: 170:     SSP1CON1 = 0x08;
 24416  0090F8  0E08               	movlw	8
 24417  0090FA  6E96               	movwf	150,c	;volatile
 24418                           
 24419                           ;mcc_generated_files/i2c1_master.c: 171:     SSP1CON2 = 0x00;
 24420  0090FC  0E00               	movlw	0
 24421  0090FE  6E97               	movwf	151,c	;volatile
 24422                           
 24423                           ;mcc_generated_files/i2c1_master.c: 172:     SSP1ADD = 0x9F;
 24424  009100  0E9F               	movlw	159
 24425  009102  6E93               	movwf	147,c	;volatile
 24426                           
 24427                           ; BSR set to: 14
 24428                           ;mcc_generated_files/i2c1_master.c: 173:     SSP1CON1bits.SSPEN = 0;
 24429  009104  9A96               	bcf	150,5,c	;volatile
 24430                           
 24431                           ; BSR set to: 14
 24432  009106  0012               	return		;funcret
 24433  009108                     __end_of_I2C1_Initialize:
 24434                           	callstack 0
 24435                           
 24436 ;; *************** function _EUSART1_Initialize *****************
 24437 ;; Defined at:
 24438 ;;		line 88 in file "mcc_generated_files/eusart1.c"
 24439 ;; Parameters:    Size  Location     Type
 24440 ;;		None
 24441 ;; Auto vars:     Size  Location     Type
 24442 ;;		None
 24443 ;; Return value:  Size  Location     Type
 24444 ;;                  1    wreg      void 
 24445 ;; Registers used:
 24446 ;;		wreg, status,2, status,0, cstack
 24447 ;; Tracked objects:
 24448 ;;		On entry : 3F/E
 24449 ;;		On exit  : 3F/E
 24450 ;;		Unchanged: 0/0
 24451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24455 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24456 ;;Total ram usage:        0 bytes
 24457 ;; Hardware stack levels used: 1
 24458 ;; Hardware stack levels required when called: 5
 24459 ;; This function calls:
 24460 ;;		_EUSART1_SetErrorHandler
 24461 ;;		_EUSART1_SetFramingErrorHandler
 24462 ;;		_EUSART1_SetOverrunErrorHandler
 24463 ;;		_EUSART1_SetRxInterruptHandler
 24464 ;;		_EUSART1_SetTxInterruptHandler
 24465 ;; This function is called by:
 24466 ;;		_SYSTEM_Initialize
 24467 ;; This function uses a non-reentrant model
 24468 ;;
 24469                           
 24470                           	psect	text101
 24471  007B34                     __ptext101:
 24472                           	callstack 0
 24473  007B34                     _EUSART1_Initialize:
 24474                           	callstack 24
 24475                           
 24476                           ; BSR set to: 14
 24477                           ;mcc_generated_files/eusart1.c: 91:     PIE3bits.RC1IE = 0;
 24478                           
 24479                           ; BSR set to: 14
 24480                           ;incstack = 0
 24481  007B34  9BC5               	bcf	197,5,b	;volatile
 24482                           
 24483                           ; BSR set to: 14
 24484                           ;mcc_generated_files/eusart1.c: 92:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
 24485  007B36  0E22               	movlw	low _EUSART1_Receive_ISR
 24486  007B38  6E10               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler^0,c
 24487  007B3A  0E74               	movlw	high _EUSART1_Receive_ISR
 24488  007B3C  6E11               	movwf	(EUSART1_SetRxInterruptHandler@interruptHandler+1)^0,c
 24489  007B3E  ECD7  F048         	call	_EUSART1_SetRxInterruptHandler	;wreg free
 24490                           
 24491                           ; BSR set to: 14
 24492                           ;mcc_generated_files/eusart1.c: 93:     PIE3bits.TX1IE = 0;
 24493  007B42  99C5               	bcf	197,4,b	;volatile
 24494                           
 24495                           ;mcc_generated_files/eusart1.c: 94:     EUSART1_SetTxInterruptHandler(EUSART1_Transmit_I
      +                          SR);
 24496  007B44  0E98               	movlw	low _EUSART1_Transmit_ISR
 24497  007B46  6E10               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler^0,c
 24498  007B48  0E8A               	movlw	high _EUSART1_Transmit_ISR
 24499  007B4A  6E11               	movwf	(EUSART1_SetTxInterruptHandler@interruptHandler+1)^0,c
 24500  007B4C  ECD2  F048         	call	_EUSART1_SetTxInterruptHandler	;wreg free
 24501                           
 24502                           ; BSR set to: 14
 24503                           ;mcc_generated_files/eusart1.c: 98:     BAUD1CON = 0x08;
 24504  007B50  0E08               	movlw	8
 24505  007B52  6E9F               	movwf	159,c	;volatile
 24506                           
 24507                           ; BSR set to: 14
 24508                           ;mcc_generated_files/eusart1.c: 101:     RC1STA = 0x90;
 24509  007B54  0E90               	movlw	144
 24510  007B56  6E9D               	movwf	157,c	;volatile
 24511                           
 24512                           ; BSR set to: 14
 24513                           ;mcc_generated_files/eusart1.c: 104:     TX1STA = 0x24;
 24514  007B58  0E24               	movlw	36
 24515  007B5A  6E9E               	movwf	158,c	;volatile
 24516                           
 24517                           ; BSR set to: 14
 24518                           ;mcc_generated_files/eusart1.c: 107:     SP1BRGL = 0x82;
 24519  007B5C  0E82               	movlw	130
 24520  007B5E  6E9B               	movwf	155,c	;volatile
 24521                           
 24522                           ; BSR set to: 14
 24523                           ;mcc_generated_files/eusart1.c: 110:     SP1BRGH = 0x06;
 24524  007B60  0E06               	movlw	6
 24525  007B62  6E9C               	movwf	156,c	;volatile
 24526                           
 24527                           ; BSR set to: 14
 24528                           ;mcc_generated_files/eusart1.c: 113:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
 24529  007B64  0EB0               	movlw	low _EUSART1_DefaultFramingErrorHandler
 24530  007B66  6E10               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
 24531  007B68  0E92               	movlw	high _EUSART1_DefaultFramingErrorHandler
 24532  007B6A  6E11               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
 24533  007B6C  ECE1  F048         	call	_EUSART1_SetFramingErrorHandler	;wreg free
 24534                           
 24535                           ; BSR set to: 14
 24536                           ;mcc_generated_files/eusart1.c: 114:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
 24537  007B70  0E68               	movlw	low _EUSART1_DefaultOverrunErrorHandler
 24538  007B72  6E10               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
 24539  007B74  0E92               	movlw	high _EUSART1_DefaultOverrunErrorHandler
 24540  007B76  6E11               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
 24541  007B78  ECDC  F048         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
 24542                           
 24543                           ; BSR set to: 14
 24544                           ;mcc_generated_files/eusart1.c: 115:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
 24545  007B7C  0E6E               	movlw	low _EUSART1_DefaultErrorHandler
 24546  007B7E  6E10               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
 24547  007B80  0E92               	movlw	high _EUSART1_DefaultErrorHandler
 24548  007B82  6E11               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
 24549  007B84  ECE6  F048         	call	_EUSART1_SetErrorHandler	;wreg free
 24550                           
 24551                           ;mcc_generated_files/eusart1.c: 117:     eusart1RxLastError.status = 0;
 24552  007B88  0E00               	movlw	0
 24553  007B8A  0101               	movlb	1	; () banked
 24554  007B8C  6F99               	movwf	_eusart1RxLastError& (0+255),b	;volatile
 24555                           
 24556                           ;mcc_generated_files/eusart1.c: 120:     eusart1TxHead = 0;
 24557  007B8E  0E00               	movlw	0
 24558  007B90  0100               	movlb	0	; () banked
 24559  007B92  6F97               	movwf	_eusart1TxHead& (0+255),b	;volatile
 24560                           
 24561                           ;mcc_generated_files/eusart1.c: 121:     eusart1TxTail = 0;
 24562  007B94  0E00               	movlw	0
 24563  007B96  6F96               	movwf	_eusart1TxTail& (0+255),b	;volatile
 24564                           
 24565                           ;mcc_generated_files/eusart1.c: 122:     eusart1TxBufferRemaining = sizeof(eusart1TxBuff
      +                          er);
 24566  007B98  0E08               	movlw	8
 24567  007B9A  0101               	movlb	1	; () banked
 24568  007B9C  6FFE               	movwf	_eusart1TxBufferRemaining& (0+255),b	;volatile
 24569                           
 24570                           ;mcc_generated_files/eusart1.c: 124:     eusart1RxHead = 0;
 24571  007B9E  0E00               	movlw	0
 24572  007BA0  0100               	movlb	0	; () banked
 24573  007BA2  6F95               	movwf	_eusart1RxHead& (0+255),b	;volatile
 24574                           
 24575                           ;mcc_generated_files/eusart1.c: 125:     eusart1RxTail = 0;
 24576  007BA4  0E00               	movlw	0
 24577  007BA6  6F94               	movwf	_eusart1RxTail& (0+255),b	;volatile
 24578                           
 24579                           ;mcc_generated_files/eusart1.c: 126:     eusart1RxCount = 0;
 24580  007BA8  0E00               	movlw	0
 24581  007BAA  6F93               	movwf	_eusart1RxCount& (0+255),b	;volatile
 24582                           
 24583                           ; BSR set to: 0
 24584                           ;mcc_generated_files/eusart1.c: 129:     PIE3bits.RC1IE = 1;
 24585  007BAC  010E               	movlb	14	; () banked
 24586  007BAE  8BC5               	bsf	197,5,b	;volatile
 24587                           
 24588                           ; BSR set to: 14
 24589  007BB0  0012               	return		;funcret
 24590  007BB2                     __end_of_EUSART1_Initialize:
 24591                           	callstack 0
 24592                           
 24593 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
 24594 ;; Defined at:
 24595 ;;		line 276 in file "mcc_generated_files/eusart1.c"
 24596 ;; Parameters:    Size  Location     Type
 24597 ;;  interruptHan    2   15[COMRAM] PTR FTN()void 
 24598 ;;		 -> EUSART1_Transmit_ISR(1), 
 24599 ;; Auto vars:     Size  Location     Type
 24600 ;;		None
 24601 ;; Return value:  Size  Location     Type
 24602 ;;                  1    wreg      void 
 24603 ;; Registers used:
 24604 ;;		wreg, status,2, status,0
 24605 ;; Tracked objects:
 24606 ;;		On entry : 3F/E
 24607 ;;		On exit  : 3F/E
 24608 ;;		Unchanged: 3F/0
 24609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24610 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24613 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24614 ;;Total ram usage:        2 bytes
 24615 ;; Hardware stack levels used: 1
 24616 ;; Hardware stack levels required when called: 4
 24617 ;; This function calls:
 24618 ;;		Nothing
 24619 ;; This function is called by:
 24620 ;;		_EUSART1_Initialize
 24621 ;; This function uses a non-reentrant model
 24622 ;;
 24623                           
 24624                           	psect	text102
 24625  0091A4                     __ptext102:
 24626                           	callstack 0
 24627  0091A4                     _EUSART1_SetTxInterruptHandler:
 24628                           	callstack 24
 24629                           
 24630                           ; BSR set to: 14
 24631                           ;mcc_generated_files/eusart1.c: 277:     EUSART1_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
 24632                           
 24633                           ; BSR set to: 14
 24634                           ;incstack = 0
 24635  0091A4  C010  F2ED         	movff	EUSART1_SetTxInterruptHandler@interruptHandler,_EUSART1_TxDefaultInterruptHandler
 24636  0091A8  C011  F2EE         	movff	EUSART1_SetTxInterruptHandler@interruptHandler+1,_EUSART1_TxDefaultInterruptHandl
      +                          er+1
 24637                           
 24638                           ; BSR set to: 14
 24639  0091AC  0012               	return		;funcret
 24640  0091AE                     __end_of_EUSART1_SetTxInterruptHandler:
 24641                           	callstack 0
 24642                           
 24643 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
 24644 ;; Defined at:
 24645 ;;		line 280 in file "mcc_generated_files/eusart1.c"
 24646 ;; Parameters:    Size  Location     Type
 24647 ;;  interruptHan    2   15[COMRAM] PTR FTN()void 
 24648 ;;		 -> EUSART1_Receive_ISR(1), 
 24649 ;; Auto vars:     Size  Location     Type
 24650 ;;		None
 24651 ;; Return value:  Size  Location     Type
 24652 ;;                  1    wreg      void 
 24653 ;; Registers used:
 24654 ;;		wreg, status,2, status,0
 24655 ;; Tracked objects:
 24656 ;;		On entry : 3F/E
 24657 ;;		On exit  : 3F/E
 24658 ;;		Unchanged: 3F/0
 24659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24660 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24663 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24664 ;;Total ram usage:        2 bytes
 24665 ;; Hardware stack levels used: 1
 24666 ;; Hardware stack levels required when called: 4
 24667 ;; This function calls:
 24668 ;;		Nothing
 24669 ;; This function is called by:
 24670 ;;		_EUSART1_Initialize
 24671 ;; This function uses a non-reentrant model
 24672 ;;
 24673                           
 24674                           	psect	text103
 24675  0091AE                     __ptext103:
 24676                           	callstack 0
 24677  0091AE                     _EUSART1_SetRxInterruptHandler:
 24678                           	callstack 24
 24679                           
 24680                           ; BSR set to: 14
 24681                           ;mcc_generated_files/eusart1.c: 281:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
 24682                           
 24683                           ; BSR set to: 14
 24684                           ;incstack = 0
 24685  0091AE  C010  F2EB         	movff	EUSART1_SetRxInterruptHandler@interruptHandler,_EUSART1_RxDefaultInterruptHandler
 24686  0091B2  C011  F2EC         	movff	EUSART1_SetRxInterruptHandler@interruptHandler+1,_EUSART1_RxDefaultInterruptHandl
      +                          er+1
 24687                           
 24688                           ; BSR set to: 14
 24689  0091B6  0012               	return		;funcret
 24690  0091B8                     __end_of_EUSART1_SetRxInterruptHandler:
 24691                           	callstack 0
 24692                           
 24693 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
 24694 ;; Defined at:
 24695 ;;		line 268 in file "mcc_generated_files/eusart1.c"
 24696 ;; Parameters:    Size  Location     Type
 24697 ;;  interruptHan    2   15[COMRAM] PTR FTN()void 
 24698 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
 24699 ;; Auto vars:     Size  Location     Type
 24700 ;;		None
 24701 ;; Return value:  Size  Location     Type
 24702 ;;                  1    wreg      void 
 24703 ;; Registers used:
 24704 ;;		wreg, status,2, status,0
 24705 ;; Tracked objects:
 24706 ;;		On entry : 3F/E
 24707 ;;		On exit  : 3F/E
 24708 ;;		Unchanged: 3F/0
 24709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24710 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24713 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24714 ;;Total ram usage:        2 bytes
 24715 ;; Hardware stack levels used: 1
 24716 ;; Hardware stack levels required when called: 4
 24717 ;; This function calls:
 24718 ;;		Nothing
 24719 ;; This function is called by:
 24720 ;;		_EUSART1_Initialize
 24721 ;; This function uses a non-reentrant model
 24722 ;;
 24723                           
 24724                           	psect	text104
 24725  0091B8                     __ptext104:
 24726                           	callstack 0
 24727  0091B8                     _EUSART1_SetOverrunErrorHandler:
 24728                           	callstack 24
 24729                           
 24730                           ; BSR set to: 14
 24731                           ;mcc_generated_files/eusart1.c: 269:     EUSART1_OverrunErrorHandler = interruptHandler;
 24732                           
 24733                           ; BSR set to: 14
 24734                           ;incstack = 0
 24735  0091B8  C010  F2E7         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
 24736  0091BC  C011  F2E8         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
 24737                           
 24738                           ; BSR set to: 14
 24739  0091C0  0012               	return		;funcret
 24740  0091C2                     __end_of_EUSART1_SetOverrunErrorHandler:
 24741                           	callstack 0
 24742                           
 24743 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
 24744 ;; Defined at:
 24745 ;;		line 264 in file "mcc_generated_files/eusart1.c"
 24746 ;; Parameters:    Size  Location     Type
 24747 ;;  interruptHan    2   15[COMRAM] PTR FTN()void 
 24748 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
 24749 ;; Auto vars:     Size  Location     Type
 24750 ;;		None
 24751 ;; Return value:  Size  Location     Type
 24752 ;;                  1    wreg      void 
 24753 ;; Registers used:
 24754 ;;		wreg, status,2, status,0
 24755 ;; Tracked objects:
 24756 ;;		On entry : 3F/E
 24757 ;;		On exit  : 3F/E
 24758 ;;		Unchanged: 3F/0
 24759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24760 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24763 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24764 ;;Total ram usage:        2 bytes
 24765 ;; Hardware stack levels used: 1
 24766 ;; Hardware stack levels required when called: 4
 24767 ;; This function calls:
 24768 ;;		Nothing
 24769 ;; This function is called by:
 24770 ;;		_EUSART1_Initialize
 24771 ;; This function uses a non-reentrant model
 24772 ;;
 24773                           
 24774                           	psect	text105
 24775  0091C2                     __ptext105:
 24776                           	callstack 0
 24777  0091C2                     _EUSART1_SetFramingErrorHandler:
 24778                           	callstack 24
 24779                           
 24780                           ; BSR set to: 14
 24781                           ;mcc_generated_files/eusart1.c: 265:     EUSART1_FramingErrorHandler = interruptHandler;
 24782                           
 24783                           ; BSR set to: 14
 24784                           ;incstack = 0
 24785  0091C2  C010  F2E9         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
 24786  0091C6  C011  F2EA         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
 24787                           
 24788                           ; BSR set to: 14
 24789  0091CA  0012               	return		;funcret
 24790  0091CC                     __end_of_EUSART1_SetFramingErrorHandler:
 24791                           	callstack 0
 24792                           
 24793 ;; *************** function _EUSART1_SetErrorHandler *****************
 24794 ;; Defined at:
 24795 ;;		line 272 in file "mcc_generated_files/eusart1.c"
 24796 ;; Parameters:    Size  Location     Type
 24797 ;;  interruptHan    2   15[COMRAM] PTR FTN()void 
 24798 ;;		 -> EUSART1_DefaultErrorHandler(1), 
 24799 ;; Auto vars:     Size  Location     Type
 24800 ;;		None
 24801 ;; Return value:  Size  Location     Type
 24802 ;;                  1    wreg      void 
 24803 ;; Registers used:
 24804 ;;		wreg, status,2, status,0
 24805 ;; Tracked objects:
 24806 ;;		On entry : 3F/E
 24807 ;;		On exit  : 3F/E
 24808 ;;		Unchanged: 3F/0
 24809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24810 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24811 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24813 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24814 ;;Total ram usage:        2 bytes
 24815 ;; Hardware stack levels used: 1
 24816 ;; Hardware stack levels required when called: 4
 24817 ;; This function calls:
 24818 ;;		Nothing
 24819 ;; This function is called by:
 24820 ;;		_EUSART1_Initialize
 24821 ;; This function uses a non-reentrant model
 24822 ;;
 24823                           
 24824                           	psect	text106
 24825  0091CC                     __ptext106:
 24826                           	callstack 0
 24827  0091CC                     _EUSART1_SetErrorHandler:
 24828                           	callstack 24
 24829                           
 24830                           ; BSR set to: 14
 24831                           ;mcc_generated_files/eusart1.c: 273:     EUSART1_ErrorHandler = interruptHandler;
 24832                           
 24833                           ; BSR set to: 14
 24834                           ;incstack = 0
 24835  0091CC  C010  F2E5         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
 24836  0091D0  C011  F2E6         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
 24837                           
 24838                           ; BSR set to: 14
 24839  0091D4  0012               	return		;funcret
 24840  0091D6                     __end_of_EUSART1_SetErrorHandler:
 24841                           	callstack 0
 24842                           
 24843 ;; *************** function _ADCC_Initialize *****************
 24844 ;; Defined at:
 24845 ;;		line 62 in file "mcc_generated_files/adcc.c"
 24846 ;; Parameters:    Size  Location     Type
 24847 ;;		None
 24848 ;; Auto vars:     Size  Location     Type
 24849 ;;		None
 24850 ;; Return value:  Size  Location     Type
 24851 ;;                  1    wreg      void 
 24852 ;; Registers used:
 24853 ;;		wreg, status,2
 24854 ;; Tracked objects:
 24855 ;;		On entry : 3F/E
 24856 ;;		On exit  : 3F/F
 24857 ;;		Unchanged: 0/0
 24858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24862 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24863 ;;Total ram usage:        0 bytes
 24864 ;; Hardware stack levels used: 1
 24865 ;; Hardware stack levels required when called: 4
 24866 ;; This function calls:
 24867 ;;		Nothing
 24868 ;; This function is called by:
 24869 ;;		_SYSTEM_Initialize
 24870 ;; This function uses a non-reentrant model
 24871 ;;
 24872                           
 24873                           	psect	text107
 24874  0085F6                     __ptext107:
 24875                           	callstack 0
 24876  0085F6                     _ADCC_Initialize:
 24877                           	callstack 25
 24878                           
 24879                           ; BSR set to: 14
 24880                           ;mcc_generated_files/adcc.c: 66:     ADLTHL = 0x00;
 24881                           
 24882                           ; BSR set to: 14
 24883                           ;incstack = 0
 24884  0085F6  0E00               	movlw	0
 24885  0085F8  6E6A               	movwf	106,c	;volatile
 24886                           
 24887                           ;mcc_generated_files/adcc.c: 68:     ADLTHH = 0x00;
 24888  0085FA  0E00               	movlw	0
 24889  0085FC  6E6B               	movwf	107,c	;volatile
 24890                           
 24891                           ;mcc_generated_files/adcc.c: 70:     ADUTHL = 0x00;
 24892  0085FE  0E00               	movlw	0
 24893  008600  6E6C               	movwf	108,c	;volatile
 24894                           
 24895                           ;mcc_generated_files/adcc.c: 72:     ADUTHH = 0x00;
 24896  008602  0E00               	movlw	0
 24897  008604  6E6D               	movwf	109,c	;volatile
 24898                           
 24899                           ;mcc_generated_files/adcc.c: 74:     ADSTPTL = 0x00;
 24900  008606  0E00               	movlw	0
 24901  008608  6E68               	movwf	104,c	;volatile
 24902                           
 24903                           ;mcc_generated_files/adcc.c: 76:     ADSTPTH = 0x00;
 24904  00860A  0E00               	movlw	0
 24905  00860C  6E69               	movwf	105,c	;volatile
 24906                           
 24907                           ;mcc_generated_files/adcc.c: 78:     ADRPT = 0x00;
 24908  00860E  0E00               	movlw	0
 24909  008610  6E66               	movwf	102,c	;volatile
 24910                           
 24911                           ;mcc_generated_files/adcc.c: 80:     ADPCH = 0x00;
 24912  008612  0E00               	movlw	0
 24913  008614  010F               	movlb	15	; () banked
 24914  008616  6F5F               	movwf	95,b	;volatile
 24915                           
 24916                           ;mcc_generated_files/adcc.c: 82:     ADCAP = 0x00;
 24917  008618  0E00               	movlw	0
 24918  00861A  6F5D               	movwf	93,b	;volatile
 24919                           
 24920                           ;mcc_generated_files/adcc.c: 84:     ADPRE = 0x00;
 24921  00861C  0E00               	movlw	0
 24922  00861E  6F5E               	movwf	94,b	;volatile
 24923                           
 24924                           ;mcc_generated_files/adcc.c: 86:     ADCON1 = 0x00;
 24925  008620  0E00               	movlw	0
 24926  008622  6F59               	movwf	89,b	;volatile
 24927                           
 24928                           ;mcc_generated_files/adcc.c: 88:     ADCON2 = 0x00;
 24929  008624  0E00               	movlw	0
 24930  008626  6F5A               	movwf	90,b	;volatile
 24931                           
 24932                           ;mcc_generated_files/adcc.c: 90:     ADCON3 = 0x00;
 24933  008628  0E00               	movlw	0
 24934  00862A  6F5B               	movwf	91,b	;volatile
 24935                           
 24936                           ;mcc_generated_files/adcc.c: 92:     ADSTAT = 0x00;
 24937  00862C  0E00               	movlw	0
 24938  00862E  6E65               	movwf	101,c	;volatile
 24939                           
 24940                           ;mcc_generated_files/adcc.c: 94:     ADREF = 0x00;
 24941  008630  0E00               	movlw	0
 24942  008632  6F58               	movwf	88,b	;volatile
 24943                           
 24944                           ;mcc_generated_files/adcc.c: 96:     ADACT = 0x00;
 24945  008634  0E00               	movlw	0
 24946  008636  6F56               	movwf	86,b	;volatile
 24947                           
 24948                           ;mcc_generated_files/adcc.c: 98:     ADCLK = 0x3F;
 24949  008638  0E3F               	movlw	63
 24950  00863A  6F57               	movwf	87,b	;volatile
 24951                           
 24952                           ;mcc_generated_files/adcc.c: 100:     ADCON0 = 0x80;
 24953  00863C  0E80               	movlw	128
 24954  00863E  6E60               	movwf	96,c	;volatile
 24955                           
 24956                           ;mcc_generated_files/adcc.c: 102:     ADACQ = 0x00;
 24957  008640  0E00               	movlw	0
 24958  008642  6F5C               	movwf	92,b	;volatile
 24959                           
 24960                           ; BSR set to: 15
 24961  008644  0012               	return		;funcret
 24962  008646                     __end_of_ADCC_Initialize:
 24963                           	callstack 0
 24964                           
 24965 ;; *************** function _EUSART1_is_rx_ready *****************
 24966 ;; Defined at:
 24967 ;;		line 137 in file "mcc_generated_files/eusart1.c"
 24968 ;; Parameters:    Size  Location     Type
 24969 ;;		None
 24970 ;; Auto vars:     Size  Location     Type
 24971 ;;		None
 24972 ;; Return value:  Size  Location     Type
 24973 ;;                  1    wreg      _Bool 
 24974 ;; Registers used:
 24975 ;;		wreg, status,2
 24976 ;; Tracked objects:
 24977 ;;		On entry : 0/1
 24978 ;;		On exit  : 3F/0
 24979 ;;		Unchanged: 0/0
 24980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24981 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24982 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24984 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24985 ;;Total ram usage:        0 bytes
 24986 ;; Hardware stack levels used: 1
 24987 ;; Hardware stack levels required when called: 4
 24988 ;; This function calls:
 24989 ;;		Nothing
 24990 ;; This function is called by:
 24991 ;;		_main
 24992 ;; This function uses a non-reentrant model
 24993 ;;
 24994                           
 24995                           	psect	text108
 24996  00911A                     __ptext108:
 24997                           	callstack 0
 24998  00911A                     _EUSART1_is_rx_ready:
 24999                           	callstack 26
 25000                           
 25001                           ;mcc_generated_files/eusart1.c: 139:     return (eusart1RxCount ? 1 : 0);
 25002                           
 25003                           ; BSR set to: 15
 25004                           ;incstack = 0
 25005  00911A  0100               	movlb	0	; () banked
 25006  00911C  5193               	movf	_eusart1RxCount& (0+255),w,b	;volatile
 25007  00911E  B4D8               	btfsc	status,2,c
 25008  009120  D002               	goto	u18170
 25009  009122  0E01               	movlw	1
 25010  009124  0012               	return	
 25011  009126                     u18170:
 25012  009126  0E00               	movlw	0
 25013                           
 25014                           ; BSR set to: 0
 25015  009128  0012               	return		;funcret
 25016  00912A                     __end_of_EUSART1_is_rx_ready:
 25017                           	callstack 0
 25018                           
 25019 ;; *************** function _ControlMotor *****************
 25020 ;; Defined at:
 25021 ;;		line 703 in file "outputs_MC50.c"
 25022 ;; Parameters:    Size  Location     Type
 25023 ;;		None
 25024 ;; Auto vars:     Size  Location     Type
 25025 ;;  stateMotor      1   23[COMRAM] enum E10381
 25026 ;; Return value:  Size  Location     Type
 25027 ;;                  1    wreg      void 
 25028 ;; Registers used:
 25029 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 25030 ;; Tracked objects:
 25031 ;;		On entry : 3E/1
 25032 ;;		On exit  : 3E/0
 25033 ;;		Unchanged: 0/0
 25034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25035 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25036 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25037 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25038 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25039 ;;Total ram usage:        7 bytes
 25040 ;; Hardware stack levels used: 1
 25041 ;; Hardware stack levels required when called: 5
 25042 ;; This function calls:
 25043 ;;		_VerifyElectricalBrake
 25044 ;; This function is called by:
 25045 ;;		_main
 25046 ;; This function uses a non-reentrant model
 25047 ;;
 25048                           
 25049                           	psect	text109
 25050  004734                     __ptext109:
 25051                           	callstack 0
 25052  004734                     _ControlMotor:
 25053                           	callstack 25
 25054                           
 25055                           ;outputs_MC50.c: 707:     if((var_sys.TimeMaxMotorIsON<=0) && (var_sys.WorkTimeMaxAlarmS
      +                          tate!=Clear) && (var_sys.LearningIsEnabled==NO) && (var_sys.PositionIsLost==NO)){
 25056                           
 25057                           ; BSR set to: 0
 25058                           ;incstack = 0
 25059  004734  0101               	movlb	1	; () banked
 25060  004736  5118               	movf	(_var_sys+24)& (0+255),w,b	;volatile
 25061  004738  1119               	iorwf	(_var_sys+25)& (0+255),w,b	;volatile
 25062  00473A  111A               	iorwf	(_var_sys+26)& (0+255),w,b	;volatile
 25063  00473C  111B               	iorwf	(_var_sys+27)& (0+255),w,b	;volatile
 25064  00473E  A4D8               	btfss	status,2,c
 25065  004740  D00D               	goto	l16840
 25066                           
 25067                           ; BSR set to: 1
 25068  004742  5142               	movf	(_var_sys+66)& (0+255),w,b	;volatile
 25069  004744  B4D8               	btfsc	status,2,c
 25070  004746  D00A               	goto	l16840
 25071                           
 25072                           ; BSR set to: 1
 25073  004748  5126               	movf	(_var_sys+38)& (0+255),w,b	;volatile
 25074  00474A  A4D8               	btfss	status,2,c
 25075  00474C  D007               	goto	l16840
 25076                           
 25077                           ; BSR set to: 1
 25078  00474E  5148               	movf	(_var_sys+72)& (0+255),w,b	;volatile
 25079  004750  A4D8               	btfss	status,2,c
 25080  004752  D004               	goto	l16840
 25081                           
 25082                           ; BSR set to: 1
 25083                           ;outputs_MC50.c: 708:         var_sys.StateMotor = Stopped;
 25084  004754  0E00               	movlw	0
 25085  004756  6F00               	movwf	_var_sys& (0+255),b	;volatile
 25086                           
 25087                           ;outputs_MC50.c: 709:         var_sys.WorkTimeMaxAlarmState=EmAlarme;
 25088  004758  0E02               	movlw	2
 25089  00475A  D007               	goto	L100
 25090  00475C                     l16840:
 25091                           
 25092                           ; BSR set to: 1
 25093  00475C  0542               	decf	(_var_sys+66)& (0+255),w,b	;volatile
 25094  00475E  A4D8               	btfss	status,2,c
 25095  004760  D005               	goto	l16846
 25096                           
 25097                           ; BSR set to: 1
 25098  004762  5100               	movf	_var_sys& (0+255),w,b	;volatile
 25099  004764  A4D8               	btfss	status,2,c
 25100  004766  D002               	goto	l16846
 25101                           
 25102                           ; BSR set to: 1
 25103                           ;outputs_MC50.c: 716:     {;outputs_MC50.c: 717:          var_sys.WorkTimeMaxAlarmState=
      +                          Clear;
 25104  004768  0E00               	movlw	0
 25105  00476A                     L100:
 25106  00476A  6F42               	movwf	(_var_sys+66)& (0+255),b	;volatile
 25107  00476C                     l16846:
 25108                           
 25109                           ; BSR set to: 1
 25110                           ;outputs_MC50.c: 721:     stateMotor_enum stateMotor=VerifyElectricalBrake(var_sys.State
      +                          Motor);
 25111  00476C  5100               	movf	_var_sys& (0+255),w,b	;volatile
 25112  00476E  EC54  F03E         	call	_VerifyElectricalBrake
 25113  004772  6E18               	movwf	ControlMotor@stateMotor^0,c
 25114                           
 25115                           ;outputs_MC50.c: 722:     if(stateMotor == Stopped )
 25116  004774  5018               	movf	ControlMotor@stateMotor^0,w,c
 25117  004776  A4D8               	btfss	status,2,c
 25118  004778  D00A               	goto	l16856
 25119                           
 25120                           ;outputs_MC50.c: 723:     {;outputs_MC50.c: 724:         var_sys.InStoping = YES;
 25121  00477A  0E01               	movlw	1
 25122  00477C  0101               	movlb	1	; () banked
 25123  00477E  6F0D               	movwf	(_var_sys+13)& (0+255),b	;volatile
 25124                           
 25125                           ; BSR set to: 1
 25126                           ;outputs_MC50.c: 725:         if(ts_system.ts_TRIACWait>=0)
 25127  004780  BFA1               	btfsc	(_ts_system+7)& (0+255),7,b	;volatile
 25128  004782  0012               	return	
 25129                           
 25130                           ; BSR set to: 1
 25131                           
 25132                           ;outputs_MC50.c: 726:         {;outputs_MC50.c: 727:             do { LATEbits.LATE1 = 0
      +                          ; } while(0);
 25133  004784  9287               	bcf	135,1,c	;volatile
 25134                           
 25135                           ; BSR set to: 1
 25136                           
 25137                           ;outputs_MC50.c: 728:             do { LATEbits.LATE0 = 0; } while(0);
 25138  004786  9087               	bcf	135,0,c	;volatile
 25139  004788                     l16854:
 25140                           
 25141                           ; BSR set to: 1
 25142                           ;outputs_MC50.c: 729:             var_sys.Activatecounter = stoped ;
 25143  004788  0E00               	movlw	0
 25144  00478A  6F16               	movwf	(_var_sys+22)& (0+255),b	;volatile
 25145  00478C  0012               	return	
 25146  00478E                     l16856:
 25147  00478E  0100               	movlb	0	; () banked
 25148  004790  05AF               	decf	(_var_sys_NVM+23)& (0+255),w,b	;volatile
 25149  004792  A4D8               	btfss	status,2,c
 25150  004794  D022               	goto	l16872
 25151                           
 25152                           ; BSR set to: 0
 25153  004796  0579               	decf	(_brakeElectric_st+1)& (0+255),w,b
 25154  004798  A4D8               	btfss	status,2,c
 25155  00479A  D01F               	goto	l16872
 25156                           
 25157                           ; BSR set to: 0
 25158  00479C  0101               	movlb	1	; () banked
 25159  00479E  5100               	movf	_var_sys& (0+255),w,b	;volatile
 25160  0047A0  A4D8               	btfss	status,2,c
 25161  0047A2  D01B               	goto	l16872
 25162                           
 25163                           ; BSR set to: 1
 25164  0047A4  5018               	movf	ControlMotor@stateMotor^0,w,c
 25165  0047A6  A4D8               	btfss	status,2,c
 25166                           
 25167                           ; BSR set to: 1
 25168  0047A8  BFC3               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 25169  0047AA  D017               	goto	l16872
 25170  0047AC  51C3               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 25171  0047AE  E103               	bnz	u19830
 25172  0047B0  05C2               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 25173  0047B2  A0D8               	btfss	status,0,c
 25174  0047B4  D012               	goto	l16872
 25175  0047B6                     u19830:
 25176                           
 25177                           ; BSR set to: 1
 25178  0047B6  BFDB               	btfsc	(_ts_system+65)& (0+255),7,b	;volatile
 25179  0047B8  D005               	goto	u19840
 25180  0047BA  51DB               	movf	(_ts_system+65)& (0+255),w,b	;volatile
 25181  0047BC  E10E               	bnz	l16872
 25182  0047BE  05DA               	decf	(_ts_system+64)& (0+255),w,b	;volatile
 25183  0047C0  B0D8               	btfsc	status,0,c
 25184  0047C2  D00B               	goto	l16872
 25185  0047C4                     u19840:
 25186                           
 25187                           ; BSR set to: 1
 25188                           ;outputs_MC50.c: 739:     {;outputs_MC50.c: 742:         if ( ts_system.TimeElectricBrak
      +                          e<(((5+6)*( 100/50))-(2*( 100/50))) )
 25189  0047C4  BFC3               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 25190  0047C6  D006               	goto	u19850
 25191  0047C8  51C3               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 25192  0047CA  E103               	bnz	u19851
 25193  0047CC  0E12               	movlw	18
 25194  0047CE  5DC2               	subwf	(_ts_system+40)& (0+255),w,b	;volatile
 25195  0047D0  B0D8               	btfsc	status,0,c
 25196  0047D2                     u19851:
 25197  0047D2  0012               	return	
 25198  0047D4                     u19850:
 25199                           
 25200                           ; BSR set to: 1
 25201                           
 25202                           ;outputs_MC50.c: 743:         {;outputs_MC50.c: 748:             do { LATEbits.LATE1 = 1
      +                          ; } while(0);
 25203  0047D4  8287               	bsf	135,1,c	;volatile
 25204                           
 25205                           ; BSR set to: 1
 25206                           
 25207                           ;outputs_MC50.c: 749:             do { LATEbits.LATE0 = 1; } while(0);
 25208  0047D6  8087               	bsf	135,0,c	;volatile
 25209  0047D8  D7D7               	goto	l16854
 25210  0047DA                     l16872:
 25211  0047DA  0418               	decf	ControlMotor@stateMotor^0,w,c
 25212  0047DC  B4D8               	btfsc	status,2,c
 25213  0047DE  D004               	goto	u19870
 25214  0047E0  0E02               	movlw	2
 25215  0047E2  1818               	xorwf	ControlMotor@stateMotor^0,w,c
 25216  0047E4  A4D8               	btfss	status,2,c
 25217  0047E6  D063               	goto	l16902
 25218  0047E8                     u19870:
 25219  0047E8  0101               	movlb	1	; () banked
 25220  0047EA  5104               	movf	(_var_sys+4)& (0+255),w,b	;volatile
 25221  0047EC  A4D8               	btfss	status,2,c
 25222  0047EE  D05F               	goto	l16902
 25223                           
 25224                           ; BSR set to: 1
 25225                           ;outputs_MC50.c: 761:     {;outputs_MC50.c: 762:         if((PORTEbits.RE1==0 && var_sys
      +                          _NVM.Direction_motor == 0)||(PORTEbits.RE0==0 && var_sys_NVM.Direction_motor == 1))
 25226  0047F0  B291               	btfsc	145,1,c	;volatile
 25227  0047F2  D004               	goto	u19900
 25228                           
 25229                           ; BSR set to: 1
 25230  0047F4  0100               	movlb	0	; () banked
 25231  0047F6  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 25232  0047F8  B4D8               	btfsc	status,2,c
 25233  0047FA  D006               	goto	u19920
 25234  0047FC                     u19900:
 25235  0047FC  B091               	btfsc	145,0,c	;volatile
 25236  0047FE  D04F               	goto	l2348
 25237  004800  0100               	movlb	0	; () banked
 25238  004802  05B3               	decf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 25239  004804  A4D8               	btfss	status,2,c
 25240  004806  D04B               	goto	l2348
 25241  004808                     u19920:
 25242                           
 25243                           ; BSR set to: 0
 25244                           ;outputs_MC50.c: 763:         {;outputs_MC50.c: 764:             if((PORTEbits.RE0==0 &&
      +                           var_sys_NVM.Direction_motor == 0)||(PORTEbits.RE1==0 && var_sys_NVM.Direction_motor == 
      +                          1))
 25245  004808  B091               	btfsc	145,0,c	;volatile
 25246  00480A  D003               	goto	u19940
 25247                           
 25248                           ; BSR set to: 0
 25249  00480C  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 25250  00480E  B4D8               	btfsc	status,2,c
 25251  004810  D005               	goto	u19960
 25252  004812                     u19940:
 25253                           
 25254                           ; BSR set to: 0
 25255  004812  B291               	btfsc	145,1,c	;volatile
 25256  004814  D03A               	goto	l16898
 25257                           
 25258                           ; BSR set to: 0
 25259  004816  05B3               	decf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 25260  004818  A4D8               	btfss	status,2,c
 25261  00481A  D037               	goto	l16898
 25262  00481C                     u19960:
 25263                           
 25264                           ; BSR set to: 0
 25265                           ;outputs_MC50.c: 765:             {;outputs_MC50.c: 766:                 var_sys.InStopi
      +                          ng = NO;
 25266  00481C  0E00               	movlw	0
 25267  00481E  0101               	movlb	1	; () banked
 25268  004820  6F0D               	movwf	(_var_sys+13)& (0+255),b	;volatile
 25269                           
 25270                           ;outputs_MC50.c: 767:                 ts_system.ts_TRIACWait=200;
 25271  004822  0E00               	movlw	0
 25272  004824  6FA1               	movwf	(_ts_system+7)& (0+255),b	;volatile
 25273  004826  0EC8               	movlw	200
 25274  004828  6FA0               	movwf	(_ts_system+6)& (0+255),b	;volatile
 25275                           
 25276                           ;outputs_MC50.c: 768:                 ts_system.TimeChargeCondesador=(1000/50);
 25277  00482A  0E00               	movlw	0
 25278  00482C  6FB5               	movwf	(_ts_system+27)& (0+255),b	;volatile
 25279  00482E  0E14               	movlw	20
 25280  004830  6FB4               	movwf	(_ts_system+26)& (0+255),b	;volatile
 25281                           
 25282                           ; BSR set to: 1
 25283                           ;outputs_MC50.c: 769:                 if (var_sys.FimCurso_CloseIsEnabled == YES|| var_s
      +                          ys.Statedoorcontrol == st_Closed ){
 25284  004832  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
 25285  004834  B4D8               	btfsc	status,2,c
 25286  004836  D003               	goto	u19980
 25287                           
 25288                           ; BSR set to: 1
 25289  004838  051C               	decf	(_var_sys+28)& (0+255),w,b	;volatile
 25290  00483A  A4D8               	btfss	status,2,c
 25291  00483C  D024               	goto	l16896
 25292  00483E                     u19980:
 25293                           
 25294                           ; BSR set to: 1
 25295                           ;outputs_MC50.c: 770:                 var_sys.TimeMaxMotorIsON=((unsigned int)var_sys_NV
      +                          M.velocityDecelaration+((unsigned int)var_sys_NVM.decelarationOpen)*( 500/50))+var_sys_N
      +                          VM.learningTimeToOpen + (1000/50)*4;
 25296  00483E  0100               	movlb	0	; () banked
 25297  004840  5198               	movf	_var_sys_NVM& (0+255),w,b	;volatile
 25298  004842  0D0A               	mullw	10
 25299  004844  CFF3 F012          	movff	prodl,??_ControlMotor
 25300  004848  CFF4 F013          	movff	prodh,??_ControlMotor+1
 25301  00484C  51B0               	movf	(_var_sys_NVM+24)& (0+255),w,b	;volatile
 25302  00484E  2612               	addwf	??_ControlMotor^0,f,c
 25303  004850  0E00               	movlw	0
 25304  004852  2213               	addwfc	(??_ControlMotor+1)^0,f,c
 25305  004854  5012               	movf	??_ControlMotor^0,w,c
 25306  004856  25CC               	addwf	(_var_sys_NVM+52)& (0+255),w,b	;volatile
 25307  004858  6E14               	movwf	(??_ControlMotor+2)^0,c
 25308  00485A  5013               	movf	(??_ControlMotor+1)^0,w,c
 25309  00485C  21CD               	addwfc	(_var_sys_NVM+53)& (0+255),w,b	;volatile
 25310  00485E  6E15               	movwf	(??_ControlMotor+3)^0,c
 25311  004860  0E00               	movlw	0
 25312  004862  21CE               	addwfc	(_var_sys_NVM+54)& (0+255),w,b	;volatile
 25313  004864  6E16               	movwf	(??_ControlMotor+4)^0,c
 25314  004866  0E00               	movlw	0
 25315  004868  21CF               	addwfc	(_var_sys_NVM+55)& (0+255),w,b	;volatile
 25316  00486A  6E17               	movwf	(??_ControlMotor+5)^0,c
 25317  00486C  0E50               	movlw	80
 25318  00486E  2414               	addwf	(??_ControlMotor+2)^0,w,c
 25319  004870  0101               	movlb	1	; () banked
 25320  004872  6F18               	movwf	(_var_sys+24)& (0+255),b	;volatile
 25321  004874  0E00               	movlw	0
 25322  004876  2015               	addwfc	(??_ControlMotor+3)^0,w,c
 25323  004878  6F19               	movwf	(_var_sys+25)& (0+255),b	;volatile
 25324  00487A  0E00               	movlw	0
 25325  00487C  2016               	addwfc	(??_ControlMotor+4)^0,w,c
 25326  00487E  6F1A               	movwf	(_var_sys+26)& (0+255),b	;volatile
 25327  004880  0E00               	movlw	0
 25328  004882  2017               	addwfc	(??_ControlMotor+5)^0,w,c
 25329  004884  6F1B               	movwf	(_var_sys+27)& (0+255),b	;volatile
 25330  004886                     l16896:
 25331                           
 25332                           ; BSR set to: 1
 25333                           ;outputs_MC50.c: 775:                 var_sys.Statedoorcontrol = st_Opening;
 25334  004886  0E02               	movlw	2
 25335  004888  6F1C               	movwf	(_var_sys+28)& (0+255),b	;volatile
 25336  00488A                     l16898:
 25337                           
 25338                           ;outputs_MC50.c: 779:             if (var_sys_NVM.Direction_motor == 0){do { LATEbits.LA
      +                          TE0 = 1; } while(0);}
 25339  00488A  0100               	movlb	0	; () banked
 25340  00488C  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 25341  00488E  A4D8               	btfss	status,2,c
 25342  004890  D002               	goto	l2365
 25343                           
 25344                           ; BSR set to: 0
 25345  004892  8087               	bsf	135,0,c	;volatile
 25346  004894  D001               	goto	l16900
 25347  004896                     l2365:
 25348                           
 25349                           ; BSR set to: 0
 25350  004896  8287               	bsf	135,1,c	;volatile
 25351  004898                     l16900:
 25352                           
 25353                           ; BSR set to: 0
 25354                           ;outputs_MC50.c: 781:             var_sys.Activatecounter = open ;
 25355  004898  0E01               	movlw	1
 25356  00489A  0101               	movlb	1	; () banked
 25357  00489C  6F16               	movwf	(_var_sys+22)& (0+255),b	;volatile
 25358  00489E                     l2348:
 25359                           
 25360                           ;outputs_MC50.c: 785:            if (var_sys_NVM.Direction_motor == 0){do { LATEbits.LAT
      +                          E1 = 0; } while(0);}
 25361  00489E  0100               	movlb	0	; () banked
 25362  0048A0  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 25363  0048A2  A4D8               	btfss	status,2,c
 25364  0048A4  D002               	goto	l2371
 25365                           
 25366                           ; BSR set to: 0
 25367  0048A6  9287               	bcf	135,1,c	;volatile
 25368  0048A8  0012               	return	
 25369  0048AA                     l2371:
 25370                           
 25371                           ; BSR set to: 0
 25372  0048AA  9087               	bcf	135,0,c	;volatile
 25373  0048AC  0012               	return	
 25374  0048AE                     l16902:
 25375  0048AE  0E03               	movlw	3
 25376  0048B0  1818               	xorwf	ControlMotor@stateMotor^0,w,c
 25377  0048B2  A4D8               	btfss	status,2,c
 25378  0048B4  0012               	return	
 25379  0048B6  0101               	movlb	1	; () banked
 25380  0048B8  5103               	movf	(_var_sys+3)& (0+255),w,b	;volatile
 25381  0048BA  A4D8               	btfss	status,2,c
 25382  0048BC  0012               	return	
 25383                           
 25384                           ; BSR set to: 1
 25385                           ;outputs_MC50.c: 791:     {;outputs_MC50.c: 792:         if((PORTEbits.RE0==0 && var_sys
      +                          _NVM.Direction_motor == 0)||(PORTEbits.RE1==0 && var_sys_NVM.Direction_motor == 1))
 25386  0048BE  B091               	btfsc	145,0,c	;volatile
 25387  0048C0  D004               	goto	u20040
 25388                           
 25389                           ; BSR set to: 1
 25390  0048C2  0100               	movlb	0	; () banked
 25391  0048C4  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 25392  0048C6  B4D8               	btfsc	status,2,c
 25393  0048C8  D006               	goto	u20060
 25394  0048CA                     u20040:
 25395  0048CA  B291               	btfsc	145,1,c	;volatile
 25396  0048CC  D050               	goto	l2375
 25397  0048CE  0100               	movlb	0	; () banked
 25398  0048D0  05B3               	decf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 25399  0048D2  A4D8               	btfss	status,2,c
 25400  0048D4  D04C               	goto	l2375
 25401  0048D6                     u20060:
 25402                           
 25403                           ; BSR set to: 0
 25404                           ;outputs_MC50.c: 793:         {;outputs_MC50.c: 794:             if((PORTEbits.RE1==0 &&
      +                           var_sys_NVM.Direction_motor == 0)||(PORTEbits.RE0==0 && var_sys_NVM.Direction_motor == 
      +                          1))
 25405  0048D6  B291               	btfsc	145,1,c	;volatile
 25406  0048D8  D003               	goto	u20080
 25407                           
 25408                           ; BSR set to: 0
 25409  0048DA  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 25410  0048DC  B4D8               	btfsc	status,2,c
 25411  0048DE  D005               	goto	u20100
 25412  0048E0                     u20080:
 25413                           
 25414                           ; BSR set to: 0
 25415  0048E0  B091               	btfsc	145,0,c	;volatile
 25416  0048E2  D03B               	goto	l16926
 25417                           
 25418                           ; BSR set to: 0
 25419  0048E4  05B3               	decf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 25420  0048E6  A4D8               	btfss	status,2,c
 25421  0048E8  D038               	goto	l16926
 25422  0048EA                     u20100:
 25423                           
 25424                           ; BSR set to: 0
 25425                           ;outputs_MC50.c: 795:             {;outputs_MC50.c: 796:                 var_sys.InStopi
      +                          ng = NO;
 25426  0048EA  0E00               	movlw	0
 25427  0048EC  0101               	movlb	1	; () banked
 25428  0048EE  6F0D               	movwf	(_var_sys+13)& (0+255),b	;volatile
 25429                           
 25430                           ;outputs_MC50.c: 797:                 ts_system.ts_TRIACWait=200;
 25431  0048F0  0E00               	movlw	0
 25432  0048F2  6FA1               	movwf	(_ts_system+7)& (0+255),b	;volatile
 25433  0048F4  0EC8               	movlw	200
 25434  0048F6  6FA0               	movwf	(_ts_system+6)& (0+255),b	;volatile
 25435                           
 25436                           ;outputs_MC50.c: 798:                 ts_system.TimeChargeCondesador=(1000/50);
 25437  0048F8  0E00               	movlw	0
 25438  0048FA  6FB5               	movwf	(_ts_system+27)& (0+255),b	;volatile
 25439  0048FC  0E14               	movlw	20
 25440  0048FE  6FB4               	movwf	(_ts_system+26)& (0+255),b	;volatile
 25441                           
 25442                           ; BSR set to: 1
 25443                           ;outputs_MC50.c: 799:                 if (var_sys.FimCurso_OpenIsEnabled == YES|| var_sy
      +                          s.Statedoorcontrol == st_Opened){
 25444  004900  0504               	decf	(_var_sys+4)& (0+255),w,b	;volatile
 25445  004902  B4D8               	btfsc	status,2,c
 25446  004904  D004               	goto	u20120
 25447                           
 25448                           ; BSR set to: 1
 25449  004906  0E04               	movlw	4
 25450  004908  191C               	xorwf	(_var_sys+28)& (0+255),w,b	;volatile
 25451  00490A  A4D8               	btfss	status,2,c
 25452  00490C  D024               	goto	l16924
 25453  00490E                     u20120:
 25454                           
 25455                           ; BSR set to: 1
 25456                           ;outputs_MC50.c: 800:                 var_sys.TimeMaxMotorIsON=((unsigned int)var_sys_NV
      +                          M.velocityDecelaration+(unsigned int)var_sys_NVM.decelarationClose*( 500/50))+var_sys_NV
      +                          M.learningTimeToClose + (1000/50)*4;
 25457  00490E  0100               	movlb	0	; () banked
 25458  004910  5199               	movf	(_var_sys_NVM+1)& (0+255),w,b	;volatile
 25459  004912  0D0A               	mullw	10
 25460  004914  CFF3 F012          	movff	prodl,??_ControlMotor
 25461  004918  CFF4 F013          	movff	prodh,??_ControlMotor+1
 25462  00491C  51B0               	movf	(_var_sys_NVM+24)& (0+255),w,b	;volatile
 25463  00491E  2612               	addwf	??_ControlMotor^0,f,c
 25464  004920  0E00               	movlw	0
 25465  004922  2213               	addwfc	(??_ControlMotor+1)^0,f,c
 25466  004924  5012               	movf	??_ControlMotor^0,w,c
 25467  004926  25D0               	addwf	(_var_sys_NVM+56)& (0+255),w,b	;volatile
 25468  004928  6E14               	movwf	(??_ControlMotor+2)^0,c
 25469  00492A  5013               	movf	(??_ControlMotor+1)^0,w,c
 25470  00492C  21D1               	addwfc	(_var_sys_NVM+57)& (0+255),w,b	;volatile
 25471  00492E  6E15               	movwf	(??_ControlMotor+3)^0,c
 25472  004930  0E00               	movlw	0
 25473  004932  21D2               	addwfc	(_var_sys_NVM+58)& (0+255),w,b	;volatile
 25474  004934  6E16               	movwf	(??_ControlMotor+4)^0,c
 25475  004936  0E00               	movlw	0
 25476  004938  21D3               	addwfc	(_var_sys_NVM+59)& (0+255),w,b	;volatile
 25477  00493A  6E17               	movwf	(??_ControlMotor+5)^0,c
 25478  00493C  0E50               	movlw	80
 25479  00493E  2414               	addwf	(??_ControlMotor+2)^0,w,c
 25480  004940  0101               	movlb	1	; () banked
 25481  004942  6F18               	movwf	(_var_sys+24)& (0+255),b	;volatile
 25482  004944  0E00               	movlw	0
 25483  004946  2015               	addwfc	(??_ControlMotor+3)^0,w,c
 25484  004948  6F19               	movwf	(_var_sys+25)& (0+255),b	;volatile
 25485  00494A  0E00               	movlw	0
 25486  00494C  2016               	addwfc	(??_ControlMotor+4)^0,w,c
 25487  00494E  6F1A               	movwf	(_var_sys+26)& (0+255),b	;volatile
 25488  004950  0E00               	movlw	0
 25489  004952  2017               	addwfc	(??_ControlMotor+5)^0,w,c
 25490  004954  6F1B               	movwf	(_var_sys+27)& (0+255),b	;volatile
 25491  004956                     l16924:
 25492                           
 25493                           ; BSR set to: 1
 25494                           ;outputs_MC50.c: 803:                 var_sys.Statedoorcontrol = st_Closing;
 25495  004956  0E03               	movlw	3
 25496  004958  6F1C               	movwf	(_var_sys+28)& (0+255),b	;volatile
 25497  00495A                     l16926:
 25498                           
 25499                           ;outputs_MC50.c: 806:             if (var_sys_NVM.Direction_motor == 0){do { LATEbits.LA
      +                          TE1 = 1; } while(0);}
 25500  00495A  0100               	movlb	0	; () banked
 25501  00495C  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 25502  00495E  A4D8               	btfss	status,2,c
 25503  004960  D002               	goto	l2392
 25504                           
 25505                           ; BSR set to: 0
 25506  004962  8287               	bsf	135,1,c	;volatile
 25507  004964  D001               	goto	l16928
 25508  004966                     l2392:
 25509                           
 25510                           ; BSR set to: 0
 25511  004966  8087               	bsf	135,0,c	;volatile
 25512  004968                     l16928:
 25513                           
 25514                           ; BSR set to: 0
 25515                           ;outputs_MC50.c: 808:             var_sys.Activatecounter = close ;
 25516  004968  0E02               	movlw	2
 25517  00496A  0101               	movlb	1	; () banked
 25518  00496C  6F16               	movwf	(_var_sys+22)& (0+255),b	;volatile
 25519  00496E                     l2375:
 25520                           
 25521                           ;outputs_MC50.c: 811:            if (var_sys_NVM.Direction_motor == 0){do { LATEbits.LAT
      +                          E0 = 0; } while(0);}
 25522  00496E  0100               	movlb	0	; () banked
 25523  004970  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 25524  004972  A4D8               	btfss	status,2,c
 25525  004974  D002               	goto	l2398
 25526                           
 25527                           ; BSR set to: 0
 25528  004976  9087               	bcf	135,0,c	;volatile
 25529  004978  0012               	return	
 25530  00497A                     l2398:
 25531                           
 25532                           ; BSR set to: 0
 25533  00497A  9287               	bcf	135,1,c	;volatile
 25534  00497C  0012               	return		;funcret
 25535  00497E                     __end_of_ControlMotor:
 25536                           	callstack 0
 25537                           
 25538 ;; *************** function _VerifyElectricalBrake *****************
 25539 ;; Defined at:
 25540 ;;		line 658 in file "outputs_MC50.c"
 25541 ;; Parameters:    Size  Location     Type
 25542 ;;  actualState     1    wreg     enum E10381
 25543 ;; Auto vars:     Size  Location     Type
 25544 ;;  actualState     1   16[COMRAM] enum E10381
 25545 ;;  tempState       1   15[COMRAM] enum E10381
 25546 ;; Return value:  Size  Location     Type
 25547 ;;                  1    wreg      enum E10381
 25548 ;; Registers used:
 25549 ;;		wreg, status,2, status,0
 25550 ;; Tracked objects:
 25551 ;;		On entry : 3F/1
 25552 ;;		On exit  : 3E/0
 25553 ;;		Unchanged: 0/0
 25554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25556 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25558 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25559 ;;Total ram usage:        2 bytes
 25560 ;; Hardware stack levels used: 1
 25561 ;; Hardware stack levels required when called: 4
 25562 ;; This function calls:
 25563 ;;		Nothing
 25564 ;; This function is called by:
 25565 ;;		_ControlMotor
 25566 ;; This function uses a non-reentrant model
 25567 ;;
 25568                           
 25569                           	psect	text110
 25570  007CA8                     __ptext110:
 25571                           	callstack 0
 25572  007CA8                     _VerifyElectricalBrake:
 25573                           	callstack 25
 25574                           
 25575                           ;incstack = 0
 25576                           ;VerifyElectricalBrake@actualState stored from wreg
 25577  007CA8  6E11               	movwf	VerifyElectricalBrake@actualState^0,c
 25578                           
 25579                           ;outputs_MC50.c: 658: stateMotor_enum VerifyElectricalBrake(stateMotor_enum actualState)
      +                          ;outputs_MC50.c: 659: {;outputs_MC50.c: 660:     stateMotor_enum tempState;;outputs_MC50
      +                          .c: 661:     tempState=actualState;
 25580  007CAA  C011  F010         	movff	VerifyElectricalBrake@actualState,VerifyElectricalBrake@tempState
 25581                           
 25582                           ;outputs_MC50.c: 662:     if(var_sys_NVM.electricBrake==1 && actualState==Stopped && ts_
      +                          system.TimeStopElectricBrake<=0)
 25583  007CAE  0100               	movlb	0	; () banked
 25584  007CB0  05AF               	decf	(_var_sys_NVM+23)& (0+255),w,b	;volatile
 25585  007CB2  A4D8               	btfss	status,2,c
 25586  007CB4  D02E               	goto	l2318
 25587                           
 25588                           ; BSR set to: 0
 25589  007CB6  5011               	movf	VerifyElectricalBrake@actualState^0,w,c
 25590  007CB8  A4D8               	btfss	status,2,c
 25591  007CBA  D02B               	goto	l2318
 25592                           
 25593                           ; BSR set to: 0
 25594  007CBC  0101               	movlb	1	; () banked
 25595  007CBE  BFDB               	btfsc	(_ts_system+65)& (0+255),7,b	;volatile
 25596  007CC0  D005               	goto	u15250
 25597  007CC2  51DB               	movf	(_ts_system+65)& (0+255),w,b	;volatile
 25598  007CC4  E126               	bnz	l2318
 25599  007CC6  05DA               	decf	(_ts_system+64)& (0+255),w,b	;volatile
 25600  007CC8  B0D8               	btfsc	status,0,c
 25601  007CCA  D023               	goto	l2318
 25602  007CCC                     u15250:
 25603                           
 25604                           ; BSR set to: 1
 25605                           ;outputs_MC50.c: 663:     {;outputs_MC50.c: 664:         if(actualState!=brakeElectric_s
      +                          t.lastState && brakeElectric_st.ElectricBrakeIsActive==NO )
 25606  007CCC  5011               	movf	VerifyElectricalBrake@actualState^0,w,c
 25607  007CCE  0100               	movlb	0	; () banked
 25608  007CD0  1978               	xorwf	_brakeElectric_st& (0+255),w,b
 25609  007CD2  B4D8               	btfsc	status,2,c
 25610  007CD4  D00B               	goto	l14688
 25611                           
 25612                           ; BSR set to: 0
 25613  007CD6  5179               	movf	(_brakeElectric_st+1)& (0+255),w,b
 25614  007CD8  A4D8               	btfss	status,2,c
 25615  007CDA  D008               	goto	l14688
 25616                           
 25617                           ; BSR set to: 0
 25618                           ;outputs_MC50.c: 665:         {;outputs_MC50.c: 666:             brakeElectric_st.Electr
      +                          icBrakeIsActive=YES;
 25619  007CDC  0E01               	movlw	1
 25620  007CDE  6F79               	movwf	(_brakeElectric_st+1)& (0+255),b
 25621                           
 25622                           ;outputs_MC50.c: 668:             ts_system.TimeElectricBrake=((5+6)*( 100/50));
 25623  007CE0  0E00               	movlw	0
 25624  007CE2  0101               	movlb	1	; () banked
 25625  007CE4  6FC3               	movwf	(_ts_system+41)& (0+255),b	;volatile
 25626  007CE6  0E16               	movlw	22
 25627  007CE8  6FC2               	movwf	(_ts_system+40)& (0+255),b	;volatile
 25628                           
 25629                           ;outputs_MC50.c: 670:         }
 25630  007CEA  D018               	goto	l2323
 25631  007CEC                     l14688:
 25632                           
 25633                           ; BSR set to: 0
 25634  007CEC  0579               	decf	(_brakeElectric_st+1)& (0+255),w,b
 25635  007CEE  A4D8               	btfss	status,2,c
 25636  007CF0  D00B               	goto	l14694
 25637                           
 25638                           ; BSR set to: 0
 25639  007CF2  0101               	movlb	1	; () banked
 25640  007CF4  BFC3               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 25641  007CF6  D008               	goto	l14694
 25642  007CF8  51C3               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 25643  007CFA  E103               	bnz	u15290
 25644  007CFC  05C2               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 25645  007CFE  A0D8               	btfss	status,0,c
 25646  007D00  D003               	goto	l14694
 25647  007D02                     u15290:
 25648                           
 25649                           ; BSR set to: 1
 25650                           ;outputs_MC50.c: 672:         {;outputs_MC50.c: 673:             tempState=InOpenFull;
 25651  007D02  0E01               	movlw	1
 25652  007D04  6E10               	movwf	VerifyElectricalBrake@tempState^0,c
 25653                           
 25654                           ;outputs_MC50.c: 686:         }
 25655  007D06  D00A               	goto	l2323
 25656  007D08                     l14694:
 25657                           
 25658                           ;outputs_MC50.c: 688:         {;outputs_MC50.c: 689:             brakeElectric_st.lastSt
      +                          ate=Stopped;
 25659  007D08  0E00               	movlw	0
 25660  007D0A  0100               	movlb	0	; () banked
 25661  007D0C  6F78               	movwf	_brakeElectric_st& (0+255),b
 25662                           
 25663                           ;outputs_MC50.c: 690:             brakeElectric_st.ElectricBrakeIsActive=NO;
 25664  007D0E  0E00               	movlw	0
 25665  007D10  D004               	goto	L101
 25666  007D12                     l2318:
 25667                           
 25668                           ;outputs_MC50.c: 695:     {;outputs_MC50.c: 696:         brakeElectric_st.lastState=actu
      +                          alState;
 25669  007D12  C011  F078         	movff	VerifyElectricalBrake@actualState,_brakeElectric_st
 25670                           
 25671                           ;outputs_MC50.c: 697:         brakeElectric_st.ElectricBrakeIsActive=NO;
 25672  007D16  0E00               	movlw	0
 25673  007D18  0100               	movlb	0	; () banked
 25674  007D1A                     L101:
 25675  007D1A  6F79               	movwf	(_brakeElectric_st+1)& (0+255),b
 25676  007D1C                     l2323:
 25677                           
 25678                           ;outputs_MC50.c: 700:     return tempState;
 25679  007D1C  5010               	movf	VerifyElectricalBrake@tempState^0,w,c
 25680  007D1E  0012               	return		;funcret
 25681  007D20                     __end_of_VerifyElectricalBrake:
 25682                           	callstack 0
 25683                           
 25684 ;; *************** function _ControlLights *****************
 25685 ;; Defined at:
 25686 ;;		line 816 in file "outputs_MC50.c"
 25687 ;; Parameters:    Size  Location     Type
 25688 ;;		None
 25689 ;; Auto vars:     Size  Location     Type
 25690 ;;		None
 25691 ;; Return value:  Size  Location     Type
 25692 ;;                  1    wreg      void 
 25693 ;; Registers used:
 25694 ;;		wreg, status,2, status,0, cstack
 25695 ;; Tracked objects:
 25696 ;;		On entry : 3E/1
 25697 ;;		On exit  : 3E/0
 25698 ;;		Unchanged: 0/0
 25699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25700 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25701 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25702 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25703 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25704 ;;Total ram usage:        0 bytes
 25705 ;; Hardware stack levels used: 1
 25706 ;; Hardware stack levels required when called: 6
 25707 ;; This function calls:
 25708 ;;		_setFlashLigth_ON
 25709 ;;		_setRGB_ON
 25710 ;; This function is called by:
 25711 ;;		_main
 25712 ;; This function uses a non-reentrant model
 25713 ;;
 25714                           
 25715                           	psect	text111
 25716  0039C4                     __ptext111:
 25717                           	callstack 0
 25718  0039C4                     _ControlLights:
 25719                           	callstack 24
 25720                           
 25721                           ;outputs_MC50.c: 818:     if(var_sys.DistanceProgrammingActive==YES)
 25722                           
 25723                           ;incstack = 0
 25724  0039C4  0101               	movlb	1	; () banked
 25725  0039C6  0540               	decf	(_var_sys+64)& (0+255),w,b	;volatile
 25726  0039C8  A4D8               	btfss	status,2,c
 25727  0039CA  D007               	goto	l16934
 25728                           
 25729                           ; BSR set to: 1
 25730                           ;outputs_MC50.c: 819:     {;outputs_MC50.c: 820:         setFlashLigth_ON((1000/50));
 25731  0039CC  0E00               	movlw	0
 25732  0039CE  6E11               	movwf	(setFlashLigth_ON@Freq+1)^0,c
 25733  0039D0  0E14               	movlw	20
 25734  0039D2  6E10               	movwf	setFlashLigth_ON@Freq^0,c
 25735  0039D4  ECC2  F044         	call	_setFlashLigth_ON	;wreg free
 25736                           
 25737                           ;outputs_MC50.c: 821:     }
 25738  0039D8  D010               	goto	l16940
 25739  0039DA                     l16934:
 25740                           
 25741                           ; BSR set to: 1
 25742  0039DA  51E2               	movf	_controlGate_stateMachine& (0+255),w,b
 25743  0039DC  11E3               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
 25744  0039DE  A4D8               	btfss	status,2,c
 25745  0039E0  D00C               	goto	l16940
 25746                           
 25747                           ; BSR set to: 1
 25748                           ;outputs_MC50.c: 823:     {;outputs_MC50.c: 824:         var_sys.ControlReleCapacitorOpe
      +                          n = 0;
 25749  0039E2  0E00               	movlw	0
 25750  0039E4  6F28               	movwf	(_var_sys+40)& (0+255),b	;volatile
 25751                           
 25752                           ;outputs_MC50.c: 825:         var_sys.ControlReleCapacitorClose = 0;
 25753  0039E6  0E00               	movlw	0
 25754  0039E8  6F29               	movwf	(_var_sys+41)& (0+255),b	;volatile
 25755                           
 25756                           ; BSR set to: 1
 25757                           ;outputs_MC50.c: 826:         if (var_sys_NVM.flashLightMode !=3){
 25758  0039EA  0E03               	movlw	3
 25759  0039EC  0100               	movlb	0	; () banked
 25760  0039EE  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 25761  0039F0  B4D8               	btfsc	status,2,c
 25762  0039F2  D002               	goto	l2410
 25763                           
 25764                           ; BSR set to: 0
 25765                           
 25766                           ;outputs_MC50.c: 827:            do { LATEbits.LATE2 = 0; } while(0);
 25767  0039F4  9487               	bcf	135,2,c	;volatile
 25768  0039F6  D001               	goto	l16940
 25769  0039F8                     l2410:
 25770                           
 25771                           ; BSR set to: 0
 25772  0039F8  8487               	bsf	135,2,c	;volatile
 25773  0039FA                     l16940:
 25774                           
 25775                           ;outputs_MC50.c: 835:     if (((var_sys.preflashingcontrol == YES || controlGate_stateMa
      +                          chine.current_state==st_Opened) && (ts_system.timeWaitToClose >0) && (ts_system.timeWait
      +                          ToClose <= 3 * (1000/50))) && var_sys_NVM.flashRGBMode == rgb_pre){
 25776  0039FA  0101               	movlb	1	; () banked
 25777  0039FC  051D               	decf	(_var_sys+29)& (0+255),w,b	;volatile
 25778  0039FE  B4D8               	btfsc	status,2,c
 25779  003A00  D005               	goto	u20190
 25780                           
 25781                           ; BSR set to: 1
 25782  003A02  0E04               	movlw	4
 25783  003A04  19E2               	xorwf	_controlGate_stateMachine& (0+255),w,b
 25784  003A06  11E3               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
 25785  003A08  A4D8               	btfss	status,2,c
 25786  003A0A  D01C               	goto	l16952
 25787  003A0C                     u20190:
 25788                           
 25789                           ; BSR set to: 1
 25790  003A0C  BFAD               	btfsc	(_ts_system+19)& (0+255),7,b	;volatile
 25791  003A0E  D01A               	goto	l16952
 25792  003A10  51AD               	movf	(_ts_system+19)& (0+255),w,b	;volatile
 25793  003A12  E103               	bnz	u20200
 25794  003A14  05AC               	decf	(_ts_system+18)& (0+255),w,b	;volatile
 25795  003A16  A0D8               	btfss	status,0,c
 25796  003A18  D015               	goto	l16952
 25797  003A1A                     u20200:
 25798                           
 25799                           ; BSR set to: 1
 25800  003A1A  BFAD               	btfsc	(_ts_system+19)& (0+255),7,b	;volatile
 25801  003A1C  D006               	goto	u20210
 25802  003A1E  51AD               	movf	(_ts_system+19)& (0+255),w,b	;volatile
 25803  003A20  E111               	bnz	l16952
 25804  003A22  0E3D               	movlw	61
 25805  003A24  5DAC               	subwf	(_ts_system+18)& (0+255),w,b	;volatile
 25806  003A26  B0D8               	btfsc	status,0,c
 25807  003A28  D00D               	goto	l16952
 25808  003A2A                     u20210:
 25809                           
 25810                           ; BSR set to: 1
 25811  003A2A  0E02               	movlw	2
 25812  003A2C  0100               	movlb	0	; () banked
 25813  003A2E  19B1               	xorwf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 25814  003A30  A4D8               	btfss	status,2,c
 25815  003A32  D008               	goto	l16952
 25816                           
 25817                           ; BSR set to: 0
 25818                           ;outputs_MC50.c: 836:         setRGB_ON(BLUE,( 200/50));
 25819  003A34  0E00               	movlw	0
 25820  003A36  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 25821  003A38  0E04               	movlw	4
 25822  003A3A  6E11               	movwf	setRGB_ON@Freq^0,c
 25823  003A3C  0E01               	movlw	1
 25824  003A3E  ECF3  F03A         	call	_setRGB_ON
 25825                           
 25826                           ;outputs_MC50.c: 838:     }
 25827  003A42  0012               	return	
 25828  003A44                     l16952:
 25829  003A44  0E03               	movlw	3
 25830  003A46  0101               	movlb	1	; () banked
 25831  003A48  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 25832  003A4A  A4D8               	btfss	status,2,c
 25833  003A4C  D04F               	goto	l16982
 25834                           
 25835                           ; BSR set to: 1
 25836                           ;outputs_MC50.c: 842:     {;outputs_MC50.c: 843:         var_sys.ControlReleCapacitorOpe
      +                          n = 0;
 25837  003A4E  0E00               	movlw	0
 25838  003A50  6F28               	movwf	(_var_sys+40)& (0+255),b	;volatile
 25839                           
 25840                           ;outputs_MC50.c: 846:         if (var_sys.ControlReleCapacitorClose==0 && var_sys_NVM.fl
      +                          ashRGBMode==rgb_capacitor)
 25841  003A52  5129               	movf	(_var_sys+41)& (0+255),w,b	;volatile
 25842  003A54  A4D8               	btfss	status,2,c
 25843  003A56  D013               	goto	l16964
 25844                           
 25845                           ; BSR set to: 1
 25846  003A58  0E03               	movlw	3
 25847  003A5A  0100               	movlb	0	; () banked
 25848  003A5C  19B1               	xorwf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 25849  003A5E  A4D8               	btfss	status,2,c
 25850  003A60  D00E               	goto	l16964
 25851                           
 25852                           ; BSR set to: 0
 25853                           ;outputs_MC50.c: 847:         {;outputs_MC50.c: 848:          ts_system.TimeReleCapacito
      +                          r = (1000/50)*2;
 25854  003A62  0E00               	movlw	0
 25855  003A64  0101               	movlb	1	; () banked
 25856  003A66  6FDD               	movwf	(_ts_system+67)& (0+255),b	;volatile
 25857  003A68  0E28               	movlw	40
 25858  003A6A  6FDC               	movwf	(_ts_system+66)& (0+255),b	;volatile
 25859                           
 25860                           ; BSR set to: 1
 25861                           ;outputs_MC50.c: 849:             setRGB_ON(YELLOW,0);
 25862  003A6C  0E00               	movlw	0
 25863  003A6E  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 25864  003A70  0E00               	movlw	0
 25865  003A72  6E11               	movwf	setRGB_ON@Freq^0,c
 25866  003A74  0E04               	movlw	4
 25867  003A76  ECF3  F03A         	call	_setRGB_ON
 25868                           
 25869                           ; BSR set to: 1
 25870                           ;outputs_MC50.c: 850:          var_sys.ControlReleCapacitorClose = 1;
 25871  003A7A  0E01               	movlw	1
 25872  003A7C  6F29               	movwf	(_var_sys+41)& (0+255),b	;volatile
 25873  003A7E                     l16964:
 25874                           
 25875                           ;outputs_MC50.c: 852:         if(ts_system.TimeReleCapacitor<=0 && var_sys_NVM.flashRGBM
      +                          ode==rgb_capacitor)
 25876  003A7E  0101               	movlb	1	; () banked
 25877  003A80  BFDD               	btfsc	(_ts_system+67)& (0+255),7,b	;volatile
 25878  003A82  D005               	goto	u20260
 25879  003A84  51DD               	movf	(_ts_system+67)& (0+255),w,b	;volatile
 25880  003A86  E105               	bnz	l16968
 25881  003A88  05DC               	decf	(_ts_system+66)& (0+255),w,b	;volatile
 25882  003A8A  B0D8               	btfsc	status,0,c
 25883  003A8C  D002               	goto	l16968
 25884  003A8E                     u20260:
 25885                           
 25886                           ; BSR set to: 1
 25887  003A8E  0100               	movlb	0	; () banked
 25888  003A90  51B1               	movf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 25889  003A92                     l16968:
 25890                           
 25891                           ;outputs_MC50.c: 858:         if(var_sys_NVM.flashRGBMode==rgb_pisca && ts_system.TimeRe
      +                          leCapacitor<=0)
 25892  003A92  0100               	movlb	0	; () banked
 25893  003A94  05B1               	decf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 25894  003A96  A4D8               	btfss	status,2,c
 25895  003A98  D010               	goto	l16974
 25896                           
 25897                           ; BSR set to: 0
 25898  003A9A  0101               	movlb	1	; () banked
 25899  003A9C  BFDD               	btfsc	(_ts_system+67)& (0+255),7,b	;volatile
 25900  003A9E  D005               	goto	u20280
 25901  003AA0  51DD               	movf	(_ts_system+67)& (0+255),w,b	;volatile
 25902  003AA2  E10B               	bnz	l16974
 25903  003AA4  05DC               	decf	(_ts_system+66)& (0+255),w,b	;volatile
 25904  003AA6  B0D8               	btfsc	status,0,c
 25905  003AA8  D008               	goto	l16974
 25906  003AAA                     u20280:
 25907                           
 25908                           ; BSR set to: 1
 25909                           ;outputs_MC50.c: 860:         {;outputs_MC50.c: 861:             setRGB_ON(RED,( 200/50)
      +                           +( 50/50));
 25910  003AAA  0E00               	movlw	0
 25911  003AAC  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 25912  003AAE  0E05               	movlw	5
 25913  003AB0  6E11               	movwf	setRGB_ON@Freq^0,c
 25914  003AB2  0E03               	movlw	3
 25915  003AB4  ECF3  F03A         	call	_setRGB_ON
 25916                           
 25917                           ;outputs_MC50.c: 862:         }
 25918  003AB8  D007               	goto	l16976
 25919  003ABA                     l16974:
 25920                           
 25921                           ;outputs_MC50.c: 864:         {;outputs_MC50.c: 865:             setRGB_ON(RED,0);
 25922  003ABA  0E00               	movlw	0
 25923  003ABC  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 25924  003ABE  0E00               	movlw	0
 25925  003AC0  6E11               	movwf	setRGB_ON@Freq^0,c
 25926  003AC2  0E03               	movlw	3
 25927  003AC4  ECF3  F03A         	call	_setRGB_ON
 25928  003AC8                     l16976:
 25929                           
 25930                           ; BSR set to: 1
 25931                           ;outputs_MC50.c: 868:         if(var_sys_NVM.flashLightMode==fixo)
 25932  003AC8  0100               	movlb	0	; () banked
 25933  003ACA  51A5               	movf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 25934  003ACC  A4D8               	btfss	status,2,c
 25935  003ACE  D007               	goto	l16980
 25936                           
 25937                           ; BSR set to: 0
 25938                           ;outputs_MC50.c: 869:         {;outputs_MC50.c: 871:             setFlashLigth_ON(( 500/
      +                          50));
 25939  003AD0  0E00               	movlw	0
 25940  003AD2  6E11               	movwf	(setFlashLigth_ON@Freq+1)^0,c
 25941  003AD4  0E0A               	movlw	10
 25942  003AD6  6E10               	movwf	setFlashLigth_ON@Freq^0,c
 25943  003AD8  ECC2  F044         	call	_setFlashLigth_ON	;wreg free
 25944                           
 25945                           ;outputs_MC50.c: 873:         }
 25946  003ADC  0012               	return	
 25947  003ADE                     l16980:
 25948                           
 25949                           ;outputs_MC50.c: 875:             setFlashLigth_ON(0);
 25950  003ADE  0E00               	movlw	0
 25951  003AE0  6E11               	movwf	(setFlashLigth_ON@Freq+1)^0,c
 25952  003AE2  0E00               	movlw	0
 25953  003AE4  6E10               	movwf	setFlashLigth_ON@Freq^0,c
 25954  003AE6  ECC2  F044         	call	_setFlashLigth_ON	;wreg free
 25955  003AEA  0012               	return	
 25956  003AEC                     l16982:
 25957                           
 25958                           ; BSR set to: 1
 25959  003AEC  5100               	movf	_var_sys& (0+255),w,b	;volatile
 25960  003AEE  A4D8               	btfss	status,2,c
 25961  003AF0  D042               	goto	l17010
 25962                           
 25963                           ; BSR set to: 1
 25964  003AF2  05E2               	decf	_controlGate_stateMachine& (0+255),w,b
 25965  003AF4  11E3               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
 25966  003AF6  A4D8               	btfss	status,2,c
 25967  003AF8  D03E               	goto	l17010
 25968                           
 25969                           ; BSR set to: 1
 25970                           ;outputs_MC50.c: 881:     {;outputs_MC50.c: 882:         if(var_sys.preflashingcontrol !
      +                          = YES){
 25971  003AFA  051D               	decf	(_var_sys+29)& (0+255),w,b	;volatile
 25972  003AFC  A4D8               	btfss	status,2,c
 25973                           
 25974                           ; BSR set to: 1
 25975                           
 25976                           ;outputs_MC50.c: 883:             do { LATAbits.LATA7 = 1; } while(0);
 25977  003AFE  8E83               	bsf	131,7,c	;volatile
 25978                           
 25979                           ; BSR set to: 1
 25980                           ;outputs_MC50.c: 888:         if(var_sys_NVM.flashRGBMode==rgb_pisca)
 25981  003B00  0100               	movlb	0	; () banked
 25982  003B02  05B1               	decf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 25983  003B04  A4D8               	btfss	status,2,c
 25984  003B06  D017               	goto	l16998
 25985                           
 25986                           ; BSR set to: 0
 25987                           ;outputs_MC50.c: 889:         {;outputs_MC50.c: 890:             if (var_sys_NVM.TypeofM
      +                          otor == br || var_sys_NVM.TypeofMotor == SE)setRGB_ON(YELLOW,0);
 25988  003B08  0E02               	movlw	2
 25989  003B0A  19B4               	xorwf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 25990  003B0C  B4D8               	btfsc	status,2,c
 25991  003B0E  D003               	goto	u20350
 25992                           
 25993                           ; BSR set to: 0
 25994  003B10  05B4               	decf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 25995  003B12  A4D8               	btfss	status,2,c
 25996  003B14  D008               	goto	l16996
 25997  003B16                     u20350:
 25998                           
 25999                           ; BSR set to: 0
 26000  003B16  0E00               	movlw	0
 26001  003B18  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 26002  003B1A  0E00               	movlw	0
 26003  003B1C  6E11               	movwf	setRGB_ON@Freq^0,c
 26004  003B1E  0E04               	movlw	4
 26005  003B20  ECF3  F03A         	call	_setRGB_ON
 26006  003B24  D013               	goto	l17002
 26007  003B26                     l16996:
 26008                           
 26009                           ; BSR set to: 0
 26010  003B26  0E00               	movlw	0
 26011  003B28  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 26012  003B2A  0E28               	movlw	40
 26013  003B2C  6E11               	movwf	setRGB_ON@Freq^0,c
 26014  003B2E  0E04               	movlw	4
 26015  003B30  ECF3  F03A         	call	_setRGB_ON
 26016  003B34  D00B               	goto	l17002
 26017  003B36                     l16998:
 26018                           
 26019                           ; BSR set to: 0
 26020  003B36  0E03               	movlw	3
 26021  003B38  19B1               	xorwf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 26022  003B3A  B4D8               	btfsc	status,2,c
 26023  003B3C  D007               	goto	l17002
 26024                           
 26025                           ; BSR set to: 0
 26026  003B3E  0E00               	movlw	0
 26027  003B40  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 26028  003B42  0E00               	movlw	0
 26029  003B44  6E11               	movwf	setRGB_ON@Freq^0,c
 26030  003B46  0E04               	movlw	4
 26031  003B48  ECF3  F03A         	call	_setRGB_ON
 26032  003B4C                     l17002:
 26033                           
 26034                           ;outputs_MC50.c: 895:         if (var_sys_NVM.flashLightMode != electroiman)
 26035  003B4C  0E03               	movlw	3
 26036  003B4E  0100               	movlb	0	; () banked
 26037  003B50  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 26038  003B52  B4D8               	btfsc	status,2,c
 26039  003B54  0012               	return	
 26040                           
 26041                           ; BSR set to: 0
 26042                           ;outputs_MC50.c: 896:         {;outputs_MC50.c: 897:         if (ts_system.TimeOnFlashLi
      +                          gth>0)
 26043  003B56  0101               	movlb	1	; () banked
 26044  003B58  BFBD               	btfsc	(_ts_system+35)& (0+255),7,b	;volatile
 26045  003B5A  D007               	goto	l2438
 26046  003B5C  51BD               	movf	(_ts_system+35)& (0+255),w,b	;volatile
 26047  003B5E  11BC               	iorwf	(_ts_system+34)& (0+255),w,b	;volatile
 26048  003B60  11BB               	iorwf	(_ts_system+33)& (0+255),w,b	;volatile
 26049  003B62  E1BD               	bnz	l16980
 26050  003B64  05BA               	decf	(_ts_system+32)& (0+255),w,b	;volatile
 26051  003B66  B0D8               	btfsc	status,0,c
 26052  003B68  D7BA               	goto	l16980
 26053  003B6A                     l2438:
 26054                           
 26055                           ; BSR set to: 1
 26056  003B6A  9487               	bcf	135,2,c	;volatile
 26057                           
 26058                           ; BSR set to: 1
 26059                           ;outputs_MC50.c: 904:             ts_system.timeFreqFlashligth=0;
 26060  003B6C  0E00               	movlw	0
 26061  003B6E  6FB9               	movwf	(_ts_system+31)& (0+255),b	;volatile
 26062  003B70  0E00               	movlw	0
 26063  003B72  6FB8               	movwf	(_ts_system+30)& (0+255),b	;volatile
 26064                           
 26065                           ; BSR set to: 0
 26066                           ;outputs_MC50.c: 907:     }
 26067                           
 26068                           ;outputs_MC50.c: 906:         }
 26069  003B74  0012               	return	
 26070  003B76                     l17010:
 26071                           
 26072                           ; BSR set to: 1
 26073  003B76  5100               	movf	_var_sys& (0+255),w,b	;volatile
 26074  003B78  A4D8               	btfss	status,2,c
 26075  003B7A  D048               	goto	l17044
 26076                           
 26077                           ; BSR set to: 1
 26078                           ;outputs_MC50.c: 911:     {;outputs_MC50.c: 912:         if (( var_sys_NVM.autoTimeFullC
      +                          lose==0 && var_sys.StateMotor == InOpenFull)||((var_sys_NVM.autoTimeWalkClose==0) && var
      +                          _sys_NVM.walkTime >0 && var_sys.StateMotor == InOpenWalk))
 26079  003B7C  0100               	movlb	0	; () banked
 26080  003B7E  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 26081  003B80  A4D8               	btfss	status,2,c
 26082  003B82  D004               	goto	u20410
 26083                           
 26084                           ; BSR set to: 0
 26085  003B84  0101               	movlb	1	; () banked
 26086  003B86  0500               	decf	_var_sys& (0+255),w,b	;volatile
 26087  003B88  B4D8               	btfsc	status,2,c
 26088  003B8A  D00C               	goto	u20440
 26089  003B8C                     u20410:
 26090  003B8C  0100               	movlb	0	; () banked
 26091  003B8E  519E               	movf	(_var_sys_NVM+6)& (0+255),w,b	;volatile
 26092  003B90  A4D8               	btfss	status,2,c
 26093  003B92  D017               	goto	l17028
 26094                           
 26095                           ; BSR set to: 0
 26096  003B94  519C               	movf	(_var_sys_NVM+4)& (0+255),w,b	;volatile
 26097  003B96  B4D8               	btfsc	status,2,c
 26098  003B98  D014               	goto	l17028
 26099                           
 26100                           ; BSR set to: 0
 26101  003B9A  0E02               	movlw	2
 26102  003B9C  0101               	movlb	1	; () banked
 26103  003B9E  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 26104  003BA0  A4D8               	btfss	status,2,c
 26105  003BA2  D00F               	goto	l17028
 26106  003BA4                     u20440:
 26107                           
 26108                           ; BSR set to: 1
 26109                           ;outputs_MC50.c: 913:         {;outputs_MC50.c: 916:             var_sys.ControlReleCapa
      +                          citorOpen = 0;
 26110  003BA4  0E00               	movlw	0
 26111  003BA6  6F28               	movwf	(_var_sys+40)& (0+255),b	;volatile
 26112                           
 26113                           ;outputs_MC50.c: 917:             var_sys.ControlReleCapacitorClose = 0;
 26114  003BA8  0E00               	movlw	0
 26115  003BAA  6F29               	movwf	(_var_sys+41)& (0+255),b	;volatile
 26116                           
 26117                           ; BSR set to: 1
 26118                           ;outputs_MC50.c: 921:             if (var_sys_NVM.flashLightMode != electroiman && var_s
      +                          ys_NVM.flashLightMode != condominio ){
 26119  003BAC  0E03               	movlw	3
 26120  003BAE  0100               	movlb	0	; () banked
 26121  003BB0  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 26122  003BB2  B4D8               	btfsc	status,2,c
 26123  003BB4  0012               	return	
 26124                           
 26125                           ; BSR set to: 0
 26126  003BB6  0E02               	movlw	2
 26127  003BB8  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 26128  003BBA  B4D8               	btfsc	status,2,c
 26129  003BBC  0012               	return	
 26130                           
 26131                           ; BSR set to: 0
 26132                           
 26133                           ;outputs_MC50.c: 922:               do { LATEbits.LATE2 = 0; } while(0);
 26134  003BBE  9487               	bcf	135,2,c	;volatile
 26135  003BC0  0012               	return	
 26136  003BC2                     l17028:
 26137                           
 26138                           ;outputs_MC50.c: 927:         {;outputs_MC50.c: 928:             if(var_sys_NVM.flashRGB
      +                          Mode==rgb_pisca)
 26139  003BC2  0100               	movlb	0	; () banked
 26140  003BC4  05B1               	decf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 26141  003BC6  A4D8               	btfss	status,2,c
 26142  003BC8  D008               	goto	l17032
 26143                           
 26144                           ; BSR set to: 0
 26145                           ;outputs_MC50.c: 929:             {;outputs_MC50.c: 930:                 setRGB_ON(BLUE,
      +                          (1000/50));
 26146  003BCA  0E00               	movlw	0
 26147  003BCC  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 26148  003BCE  0E14               	movlw	20
 26149  003BD0  6E11               	movwf	setRGB_ON@Freq^0,c
 26150  003BD2  0E01               	movlw	1
 26151  003BD4  ECF3  F03A         	call	_setRGB_ON
 26152                           
 26153                           ;outputs_MC50.c: 932:             }
 26154  003BD8  D007               	goto	l17034
 26155  003BDA                     l17032:
 26156                           
 26157                           ; BSR set to: 0
 26158                           ;outputs_MC50.c: 934:             {;outputs_MC50.c: 935:                 setRGB_ON(BLUE,
      +                          0);
 26159  003BDA  0E00               	movlw	0
 26160  003BDC  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 26161  003BDE  0E00               	movlw	0
 26162  003BE0  6E11               	movwf	setRGB_ON@Freq^0,c
 26163  003BE2  0E01               	movlw	1
 26164  003BE4  ECF3  F03A         	call	_setRGB_ON
 26165  003BE8                     l17034:
 26166                           
 26167                           ; BSR set to: 1
 26168                           ;outputs_MC50.c: 939:             if(var_sys_NVM.flashLightMode==pisca ||var_sys_NVM.fla
      +                          shLightMode==electroiman)
 26169  003BE8  0100               	movlb	0	; () banked
 26170  003BEA  05A5               	decf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 26171  003BEC  B4D8               	btfsc	status,2,c
 26172  003BEE  D004               	goto	u20490
 26173                           
 26174                           ; BSR set to: 0
 26175  003BF0  0E03               	movlw	3
 26176  003BF2  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 26177  003BF4  A4D8               	btfss	status,2,c
 26178  003BF6  D002               	goto	l17038
 26179  003BF8                     u20490:
 26180                           
 26181                           ; BSR set to: 0
 26182                           
 26183                           ;outputs_MC50.c: 940:             {;outputs_MC50.c: 941:                  do { LATEbits.
      +                          LATE2 = 0; } while(0);
 26184  003BF8  9487               	bcf	135,2,c	;volatile
 26185  003BFA  0012               	return	
 26186  003BFC                     l17038:
 26187                           
 26188                           ; BSR set to: 0
 26189  003BFC  51A5               	movf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 26190  003BFE  B4D8               	btfsc	status,2,c
 26191  003C00  D76E               	goto	l16980
 26192                           
 26193                           ; BSR set to: 0
 26194  003C02  0E02               	movlw	2
 26195  003C04  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 26196  003C06  A4D8               	btfss	status,2,c
 26197  003C08  0012               	return	
 26198  003C0A  D769               	goto	l16980
 26199  003C0C                     l17044:
 26200                           
 26201                           ; BSR set to: 1
 26202                           ;outputs_MC50.c: 955:     {;outputs_MC50.c: 957:         var_sys.ControlReleCapacitorClo
      +                          se=0;
 26203  003C0C  0E00               	movlw	0
 26204  003C0E  6F29               	movwf	(_var_sys+41)& (0+255),b	;volatile
 26205                           
 26206                           ;outputs_MC50.c: 958:         if (var_sys.ControlReleCapacitorOpen==0 && var_sys_NVM.fla
      +                          shRGBMode==rgb_capacitor)
 26207  003C10  5128               	movf	(_var_sys+40)& (0+255),w,b	;volatile
 26208  003C12  A4D8               	btfss	status,2,c
 26209  003C14  D00C               	goto	l17050
 26210                           
 26211                           ; BSR set to: 1
 26212  003C16  0E03               	movlw	3
 26213  003C18  0100               	movlb	0	; () banked
 26214  003C1A  19B1               	xorwf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 26215  003C1C  A4D8               	btfss	status,2,c
 26216  003C1E  D007               	goto	l17050
 26217                           
 26218                           ; BSR set to: 0
 26219                           ;outputs_MC50.c: 959:         {;outputs_MC50.c: 960:          ts_system.TimeReleCapacito
      +                          r = (1000/50)*2;
 26220  003C20  0E00               	movlw	0
 26221  003C22  0101               	movlb	1	; () banked
 26222  003C24  6FDD               	movwf	(_ts_system+67)& (0+255),b	;volatile
 26223  003C26  0E28               	movlw	40
 26224  003C28  6FDC               	movwf	(_ts_system+66)& (0+255),b	;volatile
 26225                           
 26226                           ;outputs_MC50.c: 962:          var_sys.ControlReleCapacitorOpen = 1;
 26227  003C2A  0E01               	movlw	1
 26228  003C2C  6F28               	movwf	(_var_sys+40)& (0+255),b	;volatile
 26229  003C2E                     l17050:
 26230                           
 26231                           ;outputs_MC50.c: 964:         if(ts_system.TimeReleCapacitor <=0 && var_sys_NVM.flashRGB
      +                          Mode==rgb_capacitor)
 26232  003C2E  0101               	movlb	1	; () banked
 26233  003C30  BFDD               	btfsc	(_ts_system+67)& (0+255),7,b	;volatile
 26234  003C32  D005               	goto	u20540
 26235  003C34  51DD               	movf	(_ts_system+67)& (0+255),w,b	;volatile
 26236  003C36  E105               	bnz	l17054
 26237  003C38  05DC               	decf	(_ts_system+66)& (0+255),w,b	;volatile
 26238  003C3A  B0D8               	btfsc	status,0,c
 26239  003C3C  D002               	goto	l17054
 26240  003C3E                     u20540:
 26241                           
 26242                           ; BSR set to: 1
 26243  003C3E  0100               	movlb	0	; () banked
 26244  003C40  51B1               	movf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 26245  003C42                     l17054:
 26246                           
 26247                           ;outputs_MC50.c: 969:         if (controlGate_stateMachine.current_state==st_Opened)
 26248  003C42  0E04               	movlw	4
 26249  003C44  0101               	movlb	1	; () banked
 26250  003C46  19E2               	xorwf	_controlGate_stateMachine& (0+255),w,b
 26251  003C48  11E3               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
 26252  003C4A  A4D8               	btfss	status,2,c
 26253  003C4C  D01B               	goto	l17066
 26254                           
 26255                           ; BSR set to: 1
 26256                           ;outputs_MC50.c: 970:         {;outputs_MC50.c: 973:             var_sys.ControlReleCapa
      +                          citorOpen = 0;
 26257  003C4E  0E00               	movlw	0
 26258  003C50  6F28               	movwf	(_var_sys+40)& (0+255),b	;volatile
 26259                           
 26260                           ;outputs_MC50.c: 974:             var_sys.ControlReleCapacitorClose = 0;
 26261  003C52  0E00               	movlw	0
 26262  003C54  6F29               	movwf	(_var_sys+41)& (0+255),b	;volatile
 26263                           
 26264                           ;outputs_MC50.c: 977:             if (var_sys_NVM.autoTimeFullClose != 0 || ((var_sys_NV
      +                          M.autoTimeWalkClose!=0) && var_sys_NVM.walkTime >0)|| var_sys_NVM.operationMode==2)
 26265  003C56  0100               	movlb	0	; () banked
 26266  003C58  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 26267  003C5A  A4D8               	btfss	status,2,c
 26268  003C5C  D00A               	goto	u20590
 26269                           
 26270                           ; BSR set to: 0
 26271  003C5E  519E               	movf	(_var_sys_NVM+6)& (0+255),w,b	;volatile
 26272  003C60  B4D8               	btfsc	status,2,c
 26273  003C62  D003               	goto	u20580
 26274                           
 26275                           ; BSR set to: 0
 26276  003C64  519C               	movf	(_var_sys_NVM+4)& (0+255),w,b	;volatile
 26277  003C66  A4D8               	btfss	status,2,c
 26278  003C68  D004               	goto	u20590
 26279  003C6A                     u20580:
 26280                           
 26281                           ; BSR set to: 0
 26282  003C6A  0E02               	movlw	2
 26283  003C6C  19A4               	xorwf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 26284  003C6E  A4D8               	btfss	status,2,c
 26285  003C70  D007               	goto	l2472
 26286  003C72                     u20590:
 26287                           
 26288                           ; BSR set to: 0
 26289                           ;outputs_MC50.c: 978:             {;outputs_MC50.c: 979:                    setRGB_ON(BL
      +                          UE,0);
 26290  003C72  0E00               	movlw	0
 26291  003C74  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 26292  003C76  0E00               	movlw	0
 26293  003C78  6E11               	movwf	setRGB_ON@Freq^0,c
 26294  003C7A  0E01               	movlw	1
 26295  003C7C  ECF3  F03A         	call	_setRGB_ON
 26296  003C80                     l2472:
 26297  003C80  9487               	bcf	135,2,c	;volatile
 26298  003C82  0012               	return	
 26299  003C84                     l17066:
 26300                           
 26301                           ; BSR set to: 1
 26302                           ;outputs_MC50.c: 993:         {;outputs_MC50.c: 996:             if(var_sys_NVM.flashRGB
      +                          Mode==rgb_pisca)
 26303  003C84  0100               	movlb	0	; () banked
 26304  003C86  05B1               	decf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 26305  003C88  A4D8               	btfss	status,2,c
 26306  003C8A  D008               	goto	l17070
 26307                           
 26308                           ; BSR set to: 0
 26309                           ;outputs_MC50.c: 997:             {;outputs_MC50.c: 998:                 setRGB_ON(GREEN
      +                          ,( 500/50));
 26310  003C8C  0E00               	movlw	0
 26311  003C8E  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 26312  003C90  0E0A               	movlw	10
 26313  003C92  6E11               	movwf	setRGB_ON@Freq^0,c
 26314  003C94  0E02               	movlw	2
 26315  003C96  ECF3  F03A         	call	_setRGB_ON
 26316                           
 26317                           ;outputs_MC50.c: 999:             }
 26318  003C9A  D007               	goto	l17072
 26319  003C9C                     l17070:
 26320                           
 26321                           ; BSR set to: 0
 26322                           ;outputs_MC50.c: 1001:             {;outputs_MC50.c: 1002:                 setRGB_ON(GRE
      +                          EN,0);
 26323  003C9C  0E00               	movlw	0
 26324  003C9E  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 26325  003CA0  0E00               	movlw	0
 26326  003CA2  6E11               	movwf	setRGB_ON@Freq^0,c
 26327  003CA4  0E02               	movlw	2
 26328  003CA6  ECF3  F03A         	call	_setRGB_ON
 26329  003CAA                     l17072:
 26330                           
 26331                           ; BSR set to: 1
 26332                           ;outputs_MC50.c: 1006:             if(var_sys_NVM.flashLightMode==fixo)
 26333  003CAA  0100               	movlb	0	; () banked
 26334  003CAC  51A5               	movf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 26335  003CAE  A4D8               	btfss	status,2,c
 26336  003CB0  D007               	goto	l17076
 26337                           
 26338                           ; BSR set to: 0
 26339                           ;outputs_MC50.c: 1007:             {;outputs_MC50.c: 1010:                 setFlashLigth
      +                          _ON((1000/50));
 26340  003CB2  0E00               	movlw	0
 26341  003CB4  6E11               	movwf	(setFlashLigth_ON@Freq+1)^0,c
 26342  003CB6  0E14               	movlw	20
 26343  003CB8  6E10               	movwf	setFlashLigth_ON@Freq^0,c
 26344  003CBA  ECC2  F044         	call	_setFlashLigth_ON	;wreg free
 26345                           
 26346                           ;outputs_MC50.c: 1011:             }
 26347  003CBE  D00D               	goto	l17082
 26348  003CC0                     l17076:
 26349                           
 26350                           ; BSR set to: 0
 26351  003CC0  05A5               	decf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 26352  003CC2  B4D8               	btfsc	status,2,c
 26353  003CC4  D004               	goto	u20630
 26354                           
 26355                           ; BSR set to: 0
 26356  003CC6  0E02               	movlw	2
 26357  003CC8  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 26358  003CCA  A4D8               	btfss	status,2,c
 26359  003CCC  D006               	goto	l17082
 26360  003CCE                     u20630:
 26361                           
 26362                           ; BSR set to: 0
 26363                           ;outputs_MC50.c: 1013:             {;outputs_MC50.c: 1014:                 setFlashLigth
      +                          _ON(0);
 26364  003CCE  0E00               	movlw	0
 26365  003CD0  6E11               	movwf	(setFlashLigth_ON@Freq+1)^0,c
 26366  003CD2  0E00               	movlw	0
 26367  003CD4  6E10               	movwf	setFlashLigth_ON@Freq^0,c
 26368  003CD6  ECC2  F044         	call	_setFlashLigth_ON	;wreg free
 26369  003CDA                     l17082:
 26370                           
 26371                           ;outputs_MC50.c: 1017:             if (var_sys_NVM.flashLightMode == electroiman)
 26372  003CDA  0E03               	movlw	3
 26373  003CDC  0100               	movlb	0	; () banked
 26374  003CDE  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 26375  003CE0  A4D8               	btfss	status,2,c
 26376  003CE2  0012               	return	
 26377                           
 26378                           ; BSR set to: 0
 26379                           
 26380                           ;outputs_MC50.c: 1018:             {;outputs_MC50.c: 1019:             do { LATEbits.LAT
      +                          E2 = 0; } while(0);
 26381  003CE4  9487               	bcf	135,2,c	;volatile
 26382  003CE6  0012               	return		;funcret
 26383  003CE8                     __end_of_ControlLights:
 26384                           	callstack 0
 26385                           
 26386 ;; *************** function _setRGB_ON *****************
 26387 ;; Defined at:
 26388 ;;		line 1028 in file "outputs_MC50.c"
 26389 ;; Parameters:    Size  Location     Type
 26390 ;;  RGBLigth        1    wreg     enum E10611
 26391 ;;  Freq            2   16[COMRAM] int 
 26392 ;; Auto vars:     Size  Location     Type
 26393 ;;  RGBLigth        1   20[COMRAM] enum E10611
 26394 ;; Return value:  Size  Location     Type
 26395 ;;                  1    wreg      void 
 26396 ;; Registers used:
 26397 ;;		wreg, status,2, status,0, cstack
 26398 ;; Tracked objects:
 26399 ;;		On entry : 3E/0
 26400 ;;		On exit  : 3F/1
 26401 ;;		Unchanged: 0/0
 26402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26403 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26404 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26405 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26406 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26407 ;;Total ram usage:        5 bytes
 26408 ;; Hardware stack levels used: 1
 26409 ;; Hardware stack levels required when called: 5
 26410 ;; This function calls:
 26411 ;;		_RGB_Set
 26412 ;; This function is called by:
 26413 ;;		_ControlLights
 26414 ;; This function uses a non-reentrant model
 26415 ;;
 26416                           
 26417                           	psect	text112
 26418  0075E6                     __ptext112:
 26419                           	callstack 0
 26420  0075E6                     _setRGB_ON:
 26421                           	callstack 24
 26422                           
 26423                           ;incstack = 0
 26424                           ;setRGB_ON@RGBLigth stored from wreg
 26425  0075E6  6E15               	movwf	setRGB_ON@RGBLigth^0,c
 26426                           
 26427                           ;outputs_MC50.c: 1028: void setRGB_ON(RGBY_enum RGBLigth,int Freq);outputs_MC50.c: 1029:
      +                           {;outputs_MC50.c: 1031:     do { LATAbits.LATA7 = 1; } while(0);
 26428  0075E8  8E83               	bsf	131,7,c	;volatile
 26429                           
 26430                           ;outputs_MC50.c: 1037:     if(Freq==0 || var_sys.upFaseRGB==1)
 26431  0075EA  5011               	movf	setRGB_ON@Freq^0,w,c
 26432  0075EC  1012               	iorwf	(setRGB_ON@Freq+1)^0,w,c
 26433  0075EE  B4D8               	btfsc	status,2,c
 26434  0075F0  D015               	goto	l14726
 26435  0075F2  0101               	movlb	1	; () banked
 26436  0075F4  0524               	decf	(_var_sys+36)& (0+255),w,b	;volatile
 26437  0075F6  B4D8               	btfsc	status,2,c
 26438  0075F8  D011               	goto	l14726
 26439  0075FA  D024               	goto	l14728
 26440  0075FC                     l14716:
 26441                           
 26442                           ;outputs_MC50.c: 1043:                 RGB_Set(0x20);
 26443  0075FC  0E20               	movlw	32
 26444  0075FE  EC9D  F048         	call	_RGB_Set
 26445                           
 26446                           ;outputs_MC50.c: 1044:             break;
 26447  007602  D020               	goto	l14728
 26448  007604                     l14718:
 26449                           
 26450                           ;outputs_MC50.c: 1047:                 RGB_Set(0x04);
 26451  007604  0E04               	movlw	4
 26452  007606  EC9D  F048         	call	_RGB_Set
 26453                           
 26454                           ;outputs_MC50.c: 1048:             break;
 26455  00760A  D01C               	goto	l14728
 26456  00760C                     l14720:
 26457                           
 26458                           ;outputs_MC50.c: 1051:                 RGB_Set(0x00);
 26459  00760C  0E00               	movlw	0
 26460  00760E  EC9D  F048         	call	_RGB_Set
 26461                           
 26462                           ;outputs_MC50.c: 1052:             break;
 26463  007612  D018               	goto	l14728
 26464  007614                     l14722:
 26465                           
 26466                           ;outputs_MC50.c: 1055:                 RGB_Set(0x24);
 26467  007614  0E24               	movlw	36
 26468  007616  EC9D  F048         	call	_RGB_Set
 26469                           
 26470                           ;outputs_MC50.c: 1056:             break;
 26471  00761A  D014               	goto	l14728
 26472  00761C                     l14726:
 26473  00761C  5015               	movf	setRGB_ON@RGBLigth^0,w,c
 26474  00761E  6E13               	movwf	??_setRGB_ON^0,c
 26475  007620  6A14               	clrf	(??_setRGB_ON+1)^0,c
 26476                           
 26477                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 26478                           ; Switch size 1, requested type "simple"
 26479                           ; Number of cases is 1, Range of values is 0 to 0
 26480                           ; switch strategies available:
 26481                           ; Name         Instructions Cycles
 26482                           ; simple_byte            4     3 (average)
 26483                           ;	Chosen strategy is simple_byte
 26484  007622  5014               	movf	(??_setRGB_ON+1)^0,w,c
 26485  007624  0A00               	xorlw	0	; case 0
 26486  007626  A4D8               	btfss	status,2,c
 26487  007628  D00D               	goto	l14728
 26488                           
 26489                           ; Switch size 1, requested type "simple"
 26490                           ; Number of cases is 4, Range of values is 1 to 4
 26491                           ; switch strategies available:
 26492                           ; Name         Instructions Cycles
 26493                           ; simple_byte           13     7 (average)
 26494                           ;	Chosen strategy is simple_byte
 26495  00762A  5013               	movf	??_setRGB_ON^0,w,c
 26496  00762C  0A01               	xorlw	1	; case 1
 26497  00762E  B4D8               	btfsc	status,2,c
 26498  007630  D7ED               	goto	l14720
 26499  007632  0A03               	xorlw	3	; case 2
 26500  007634  B4D8               	btfsc	status,2,c
 26501  007636  D7E6               	goto	l14718
 26502  007638  0A01               	xorlw	1	; case 3
 26503  00763A  B4D8               	btfsc	status,2,c
 26504  00763C  D7DF               	goto	l14716
 26505  00763E  0A07               	xorlw	7	; case 4
 26506  007640  B4D8               	btfsc	status,2,c
 26507  007642  D7E8               	goto	l14722
 26508  007644                     l14728:
 26509                           
 26510                           ;outputs_MC50.c: 1061:     if(ts_system.timeFreqRGB<=0 && Freq!=0)
 26511  007644  0101               	movlb	1	; () banked
 26512  007646  BFB7               	btfsc	(_ts_system+29)& (0+255),7,b	;volatile
 26513  007648  D005               	goto	u15360
 26514  00764A  51B7               	movf	(_ts_system+29)& (0+255),w,b	;volatile
 26515  00764C  E113               	bnz	l2502
 26516  00764E  05B6               	decf	(_ts_system+28)& (0+255),w,b	;volatile
 26517  007650  B0D8               	btfsc	status,0,c
 26518  007652  0012               	return	
 26519  007654                     u15360:
 26520                           
 26521                           ; BSR set to: 1
 26522  007654  5011               	movf	setRGB_ON@Freq^0,w,c
 26523  007656  1012               	iorwf	(setRGB_ON@Freq+1)^0,w,c
 26524  007658  B4D8               	btfsc	status,2,c
 26525  00765A  0012               	return	
 26526                           
 26527                           ; BSR set to: 1
 26528                           ;outputs_MC50.c: 1062:     {;outputs_MC50.c: 1063:         ts_system.timeFreqRGB=Freq;
 26529  00765C  C011  F1B6         	movff	setRGB_ON@Freq,_ts_system+28	;volatile
 26530  007660  C012  F1B7         	movff	setRGB_ON@Freq+1,_ts_system+29	;volatile
 26531                           
 26532                           ; BSR set to: 1
 26533                           ;outputs_MC50.c: 1064:         if(var_sys.upFaseRGB==1)
 26534  007664  0524               	decf	(_var_sys+36)& (0+255),w,b	;volatile
 26535  007666  A4D8               	btfss	status,2,c
 26536  007668  D003               	goto	l14738
 26537                           
 26538                           ; BSR set to: 1
 26539                           ;outputs_MC50.c: 1065:         {;outputs_MC50.c: 1066:             var_sys.upFaseRGB=0;
 26540  00766A  0E00               	movlw	0
 26541  00766C  6F24               	movwf	(_var_sys+36)& (0+255),b	;volatile
 26542                           
 26543                           ;outputs_MC50.c: 1067:         }
 26544  00766E  0012               	return	
 26545  007670                     l14738:
 26546                           
 26547                           ; BSR set to: 1
 26548                           ;outputs_MC50.c: 1069:         {;outputs_MC50.c: 1070:             var_sys.upFaseRGB=1;
 26549  007670  0E01               	movlw	1
 26550  007672  6F24               	movwf	(_var_sys+36)& (0+255),b	;volatile
 26551  007674                     l2502:
 26552                           
 26553                           ; BSR set to: 1
 26554  007674  0012               	return		;funcret
 26555  007676                     __end_of_setRGB_ON:
 26556                           	callstack 0
 26557                           
 26558 ;; *************** function _RGB_Set *****************
 26559 ;; Defined at:
 26560 ;;		line 98 in file "outputs_MC50.c"
 26561 ;; Parameters:    Size  Location     Type
 26562 ;;  value           1    wreg     unsigned char 
 26563 ;; Auto vars:     Size  Location     Type
 26564 ;;  value           1   15[COMRAM] unsigned char 
 26565 ;; Return value:  Size  Location     Type
 26566 ;;                  1    wreg      void 
 26567 ;; Registers used:
 26568 ;;		wreg, status,2, status,0
 26569 ;; Tracked objects:
 26570 ;;		On entry : 0/0
 26571 ;;		On exit  : 0/0
 26572 ;;		Unchanged: 0/0
 26573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26574 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26575 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26577 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26578 ;;Total ram usage:        1 bytes
 26579 ;; Hardware stack levels used: 1
 26580 ;; Hardware stack levels required when called: 4
 26581 ;; This function calls:
 26582 ;;		Nothing
 26583 ;; This function is called by:
 26584 ;;		_setRGB_ON
 26585 ;; This function uses a non-reentrant model
 26586 ;;
 26587                           
 26588                           	psect	text113
 26589  00913A                     __ptext113:
 26590                           	callstack 0
 26591  00913A                     _RGB_Set:
 26592                           	callstack 24
 26593                           
 26594                           ; BSR set to: 1
 26595                           ;incstack = 0
 26596                           ;RGB_Set@value stored from wreg
 26597  00913A  6E10               	movwf	RGB_Set@value^0,c
 26598                           
 26599                           ;outputs_MC50.c: 98: void RGB_Set(char value);outputs_MC50.c: 99: {;outputs_MC50.c: 100:
      +                              LATC &= 0xdb ;
 26600  00913C  0EDB               	movlw	219
 26601  00913E  1685               	andwf	133,f,c	;volatile
 26602                           
 26603                           ;outputs_MC50.c: 101:    LATC |= value;
 26604  009140  5010               	movf	RGB_Set@value^0,w,c	;volatile
 26605  009142  1285               	iorwf	133,f,c	;volatile
 26606  009144  9E83               	bcf	131,7,c	;volatile
 26607  009146  0012               	return		;funcret
 26608  009148                     __end_of_RGB_Set:
 26609                           	callstack 0
 26610                           
 26611 ;; *************** function _setFlashLigth_ON *****************
 26612 ;; Defined at:
 26613 ;;		line 1077 in file "outputs_MC50.c"
 26614 ;; Parameters:    Size  Location     Type
 26615 ;;  Freq            2   15[COMRAM] int 
 26616 ;; Auto vars:     Size  Location     Type
 26617 ;;		None
 26618 ;; Return value:  Size  Location     Type
 26619 ;;                  1    wreg      void 
 26620 ;; Registers used:
 26621 ;;		wreg, status,2, status,0
 26622 ;; Tracked objects:
 26623 ;;		On entry : 3E/1
 26624 ;;		On exit  : 3F/1
 26625 ;;		Unchanged: 0/0
 26626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26627 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26628 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26630 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26631 ;;Total ram usage:        2 bytes
 26632 ;; Hardware stack levels used: 1
 26633 ;; Hardware stack levels required when called: 4
 26634 ;; This function calls:
 26635 ;;		Nothing
 26636 ;; This function is called by:
 26637 ;;		_ControlLights
 26638 ;; This function uses a non-reentrant model
 26639 ;;
 26640                           
 26641                           	psect	text114
 26642  008984                     __ptext114:
 26643                           	callstack 0
 26644  008984                     _setFlashLigth_ON:
 26645                           	callstack 25
 26646                           
 26647                           ;outputs_MC50.c: 1077: void setFlashLigth_ON(int Freq);outputs_MC50.c: 1078: {;outputs_M
      +                          C50.c: 1079:     if(Freq==0 || var_sys.upFaseFlashligth==1)
 26648                           
 26649                           ;incstack = 0
 26650  008984  5010               	movf	setFlashLigth_ON@Freq^0,w,c
 26651  008986  1011               	iorwf	(setFlashLigth_ON@Freq+1)^0,w,c
 26652  008988  B4D8               	btfsc	status,2,c
 26653  00898A  D004               	goto	u15310
 26654  00898C  0101               	movlb	1	; () banked
 26655  00898E  0525               	decf	(_var_sys+37)& (0+255),w,b	;volatile
 26656  008990  A4D8               	btfss	status,2,c
 26657  008992  D002               	goto	l2511
 26658  008994                     u15310:
 26659                           
 26660                           ;outputs_MC50.c: 1080:     {;outputs_MC50.c: 1081:         do { LATEbits.LATE2 = 1; } wh
      +                          ile(0);
 26661  008994  8487               	bsf	135,2,c	;volatile
 26662  008996  D001               	goto	l14704
 26663  008998                     l2511:
 26664                           
 26665                           ; BSR set to: 1
 26666  008998  9487               	bcf	135,2,c	;volatile
 26667  00899A                     l14704:
 26668                           
 26669                           ;outputs_MC50.c: 1088:     if(ts_system.timeFreqFlashligth<=0 && Freq!=0)
 26670  00899A  0101               	movlb	1	; () banked
 26671  00899C  BFB9               	btfsc	(_ts_system+31)& (0+255),7,b	;volatile
 26672  00899E  D005               	goto	u15320
 26673  0089A0  51B9               	movf	(_ts_system+31)& (0+255),w,b	;volatile
 26674  0089A2  E10D               	bnz	l2514
 26675  0089A4  05B8               	decf	(_ts_system+30)& (0+255),w,b	;volatile
 26676  0089A6  B0D8               	btfsc	status,0,c
 26677  0089A8  0012               	return	
 26678  0089AA                     u15320:
 26679                           
 26680                           ; BSR set to: 1
 26681  0089AA  5010               	movf	setFlashLigth_ON@Freq^0,w,c
 26682  0089AC  1011               	iorwf	(setFlashLigth_ON@Freq+1)^0,w,c
 26683  0089AE  B4D8               	btfsc	status,2,c
 26684  0089B0  0012               	return	
 26685                           
 26686                           ; BSR set to: 1
 26687                           ;outputs_MC50.c: 1089:     {;outputs_MC50.c: 1090:         ts_system.timeFreqFlashligth=
      +                          Freq;
 26688  0089B2  C010  F1B8         	movff	setFlashLigth_ON@Freq,_ts_system+30	;volatile
 26689  0089B6  C011  F1B9         	movff	setFlashLigth_ON@Freq+1,_ts_system+31	;volatile
 26690                           
 26691                           ; BSR set to: 1
 26692                           ;outputs_MC50.c: 1091:         var_sys.upFaseFlashligth ^= (1 << 0);
 26693  0089BA  0E01               	movlw	1
 26694  0089BC  1B25               	xorwf	(_var_sys+37)& (0+255),f,b	;volatile
 26695  0089BE                     l2514:
 26696                           
 26697                           ; BSR set to: 1
 26698  0089BE  0012               	return		;funcret
 26699  0089C0                     __end_of_setFlashLigth_ON:
 26700                           	callstack 0
 26701                           
 26702 ;; *************** function _ControlInputs *****************
 26703 ;; Defined at:
 26704 ;;		line 674 in file "inputs_MC50.c"
 26705 ;; Parameters:    Size  Location     Type
 26706 ;;		None
 26707 ;; Auto vars:     Size  Location     Type
 26708 ;;		None
 26709 ;; Return value:  Size  Location     Type
 26710 ;;                  1    wreg      void 
 26711 ;; Registers used:
 26712 ;;		wreg, status,2, status,0
 26713 ;; Tracked objects:
 26714 ;;		On entry : 3E/1
 26715 ;;		On exit  : 3E/0
 26716 ;;		Unchanged: 0/0
 26717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26718 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26719 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26721 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26722 ;;Total ram usage:        0 bytes
 26723 ;; Hardware stack levels used: 1
 26724 ;; Hardware stack levels required when called: 4
 26725 ;; This function calls:
 26726 ;;		Nothing
 26727 ;; This function is called by:
 26728 ;;		_main
 26729 ;; This function uses a non-reentrant model
 26730 ;;
 26731                           
 26732                           	psect	text115
 26733  00649E                     __ptext115:
 26734                           	callstack 0
 26735  00649E                     _ControlInputs:
 26736                           	callstack 26
 26737                           
 26738                           ;inputs_MC50.c: 678:     if (( var_sys.StateMotor==InClose || (((PORTEbits.RE1 == 1)&& v
      +                          ar_sys_NVM.Direction_motor == 0)||((PORTEbits.RE0 == 1)&&var_sys_NVM.Direction_motor == 
      +                          1))) && (var_sys.FimCurso_CloseIsEnabled == YES))
 26739                           
 26740                           ; BSR set to: 1
 26741                           ;incstack = 0
 26742  00649E  0E03               	movlw	3
 26743  0064A0  0101               	movlb	1	; () banked
 26744  0064A2  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 26745  0064A4  B4D8               	btfsc	status,2,c
 26746  0064A6  D00C               	goto	u19270
 26747                           
 26748                           ; BSR set to: 1
 26749  0064A8  A291               	btfss	145,1,c	;volatile
 26750  0064AA  D004               	goto	u19250
 26751                           
 26752                           ; BSR set to: 1
 26753  0064AC  0100               	movlb	0	; () banked
 26754  0064AE  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 26755  0064B0  B4D8               	btfsc	status,2,c
 26756  0064B2  D006               	goto	u19270
 26757  0064B4                     u19250:
 26758  0064B4  A091               	btfss	145,0,c	;volatile
 26759  0064B6  D00A               	goto	l16672
 26760  0064B8  0100               	movlb	0	; () banked
 26761  0064BA  05B3               	decf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 26762  0064BC  A4D8               	btfss	status,2,c
 26763  0064BE  D006               	goto	l16672
 26764  0064C0                     u19270:
 26765  0064C0  0101               	movlb	1	; () banked
 26766  0064C2  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
 26767  0064C4  A4D8               	btfss	status,2,c
 26768  0064C6  D002               	goto	l16672
 26769                           
 26770                           ; BSR set to: 1
 26771                           ;inputs_MC50.c: 679:     {;inputs_MC50.c: 680:         var_sys.StateMotor = Stopped;
 26772  0064C8  0E00               	movlw	0
 26773  0064CA  6F00               	movwf	_var_sys& (0+255),b	;volatile
 26774  0064CC                     l16672:
 26775                           
 26776                           ;inputs_MC50.c: 683:     if((var_sys.StateMotor==InOpenFull || var_sys.StateMotor==InOpe
      +                          nWalk || (((PORTEbits.RE0 == 1) &&var_sys_NVM.Direction_motor == 0)||((PORTEbits.RE1 == 
      +                          1) && var_sys_NVM.Direction_motor == 1))) && (var_sys.FimCurso_OpenIsEnabled == YES))
 26777  0064CC  0101               	movlb	1	; () banked
 26778  0064CE  0500               	decf	_var_sys& (0+255),w,b	;volatile
 26779  0064D0  B4D8               	btfsc	status,2,c
 26780  0064D2  D010               	goto	u19340
 26781                           
 26782                           ; BSR set to: 1
 26783  0064D4  0E02               	movlw	2
 26784  0064D6  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 26785  0064D8  B4D8               	btfsc	status,2,c
 26786  0064DA  D00C               	goto	u19340
 26787                           
 26788                           ; BSR set to: 1
 26789  0064DC  A091               	btfss	145,0,c	;volatile
 26790  0064DE  D004               	goto	u19320
 26791                           
 26792                           ; BSR set to: 1
 26793  0064E0  0100               	movlb	0	; () banked
 26794  0064E2  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 26795  0064E4  B4D8               	btfsc	status,2,c
 26796  0064E6  D006               	goto	u19340
 26797  0064E8                     u19320:
 26798  0064E8  A291               	btfss	145,1,c	;volatile
 26799  0064EA  D00A               	goto	l16686
 26800  0064EC  0100               	movlb	0	; () banked
 26801  0064EE  05B3               	decf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 26802  0064F0  A4D8               	btfss	status,2,c
 26803  0064F2  D006               	goto	l16686
 26804  0064F4                     u19340:
 26805  0064F4  0101               	movlb	1	; () banked
 26806  0064F6  0504               	decf	(_var_sys+4)& (0+255),w,b	;volatile
 26807  0064F8  A4D8               	btfss	status,2,c
 26808  0064FA  D002               	goto	l16686
 26809                           
 26810                           ; BSR set to: 1
 26811                           ;inputs_MC50.c: 684:     {;inputs_MC50.c: 685:         var_sys.StateMotor = Stopped;
 26812  0064FC  0E00               	movlw	0
 26813  0064FE  6F00               	movwf	_var_sys& (0+255),b	;volatile
 26814  006500                     l16686:
 26815                           
 26816                           ;inputs_MC50.c: 688:     if (var_sys.LearningIsEnabled != YES){
 26817  006500  0101               	movlb	1	; () banked
 26818  006502  0526               	decf	(_var_sys+38)& (0+255),w,b	;volatile
 26819  006504  B4D8               	btfsc	status,2,c
 26820  006506  0012               	return	
 26821                           
 26822                           ; BSR set to: 1
 26823                           ;inputs_MC50.c: 690:         if((var_sys_NVM.photoCellIsON == 1) && (var_sys.photoCellIs
      +                          Obstructed == YES) && var_sys.AutoInversionActive==NO)
 26824  006508  0100               	movlb	0	; () banked
 26825  00650A  059F               	decf	(_var_sys_NVM+7)& (0+255),w,b	;volatile
 26826  00650C  A4D8               	btfss	status,2,c
 26827  00650E  D02B               	goto	l16712
 26828                           
 26829                           ; BSR set to: 0
 26830  006510  0101               	movlb	1	; () banked
 26831  006512  0501               	decf	(_var_sys+1)& (0+255),w,b	;volatile
 26832  006514  A4D8               	btfss	status,2,c
 26833  006516  D027               	goto	l16712
 26834                           
 26835                           ; BSR set to: 1
 26836  006518  5127               	movf	(_var_sys+39)& (0+255),w,b	;volatile
 26837  00651A  A4D8               	btfss	status,2,c
 26838  00651C  D024               	goto	l16712
 26839                           
 26840                           ; BSR set to: 1
 26841                           ;inputs_MC50.c: 691:         {;inputs_MC50.c: 699:             if((var_sys.StateMotor==I
      +                          nOpenFull || var_sys.StateMotor==InOpenWalk) && (var_sys_NVM.photoCellInOpen==1))
 26842  00651E  0500               	decf	_var_sys& (0+255),w,b	;volatile
 26843  006520  B4D8               	btfsc	status,2,c
 26844  006522  D004               	goto	u19410
 26845                           
 26846                           ; BSR set to: 1
 26847  006524  0E02               	movlw	2
 26848  006526  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 26849  006528  A4D8               	btfss	status,2,c
 26850  00652A  D007               	goto	l16702
 26851  00652C                     u19410:
 26852                           
 26853                           ; BSR set to: 1
 26854  00652C  0100               	movlb	0	; () banked
 26855  00652E  05A0               	decf	(_var_sys_NVM+8)& (0+255),w,b	;volatile
 26856  006530  A4D8               	btfss	status,2,c
 26857  006532  D003               	goto	l16702
 26858                           
 26859                           ; BSR set to: 0
 26860                           ;inputs_MC50.c: 700:             {;inputs_MC50.c: 701:                 var_sys.StateMoto
      +                          r = Stopped;
 26861  006534  0E00               	movlw	0
 26862  006536  0101               	movlb	1	; () banked
 26863  006538  D015               	goto	L102
 26864  00653A                     l16702:
 26865  00653A  0E03               	movlw	3
 26866  00653C  0101               	movlb	1	; () banked
 26867  00653E  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 26868  006540  A4D8               	btfss	status,2,c
 26869  006542  D011               	goto	l16712
 26870                           
 26871                           ; BSR set to: 1
 26872  006544  0100               	movlb	0	; () banked
 26873  006546  51A0               	movf	(_var_sys_NVM+8)& (0+255),w,b	;volatile
 26874  006548  A4D8               	btfss	status,2,c
 26875  00654A  D00D               	goto	l16712
 26876                           
 26877                           ; BSR set to: 0
 26878  00654C  0101               	movlb	1	; () banked
 26879  00654E  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 26880  006550  D005               	goto	u19450
 26881  006552  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 26882  006554  E108               	bnz	l16712
 26883  006556  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 26884  006558  B0D8               	btfsc	status,0,c
 26885  00655A  D005               	goto	l16712
 26886  00655C                     u19450:
 26887                           
 26888                           ; BSR set to: 1
 26889  00655C  0527               	decf	(_var_sys+39)& (0+255),w,b	;volatile
 26890  00655E  A4D8               	btfss	status,2,c
 26891  006560  D002               	goto	l16712
 26892                           
 26893                           ; BSR set to: 1
 26894                           ;inputs_MC50.c: 706:             {;inputs_MC50.c: 707:                 var_sys.StateMoto
      +                          r = Stopped;
 26895  006562  0E00               	movlw	0
 26896  006564                     L102:
 26897  006564  6F00               	movwf	_var_sys& (0+255),b	;volatile
 26898  006566                     l16712:
 26899                           
 26900                           ;inputs_MC50.c: 713:         if((var_sys_NVM.securityBandIsON == 1 || var_sys_NVM.Stopbo
      +                          ton == 1) && (var_sys.SecurityBarIsObstructed == YES && var_sys.AutoInversionActive == N
      +                          O))
 26901  006566  0100               	movlb	0	; () banked
 26902  006568  05A1               	decf	(_var_sys_NVM+9)& (0+255),w,b	;volatile
 26903  00656A  B4D8               	btfsc	status,2,c
 26904  00656C  D003               	goto	u19480
 26905                           
 26906                           ; BSR set to: 0
 26907  00656E  05AE               	decf	(_var_sys_NVM+22)& (0+255),w,b	;volatile
 26908  006570  A4D8               	btfss	status,2,c
 26909  006572  0012               	return	
 26910  006574                     u19480:
 26911                           
 26912                           ; BSR set to: 0
 26913  006574  0101               	movlb	1	; () banked
 26914  006576  0502               	decf	(_var_sys+2)& (0+255),w,b	;volatile
 26915  006578  A4D8               	btfss	status,2,c
 26916  00657A  0012               	return	
 26917                           
 26918                           ; BSR set to: 1
 26919  00657C  5127               	movf	(_var_sys+39)& (0+255),w,b	;volatile
 26920  00657E  A4D8               	btfss	status,2,c
 26921  006580  0012               	return	
 26922                           
 26923                           ; BSR set to: 1
 26924                           ;inputs_MC50.c: 714:         {;inputs_MC50.c: 723:             if(var_sys.StateMotor == 
      +                          InClose && (var_sys_NVM.securityBandInOpen == 0))
 26925  006582  0E03               	movlw	3
 26926  006584  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 26927  006586  A4D8               	btfss	status,2,c
 26928  006588  D008               	goto	l16726
 26929                           
 26930                           ; BSR set to: 1
 26931  00658A  0100               	movlb	0	; () banked
 26932  00658C  51A3               	movf	(_var_sys_NVM+11)& (0+255),w,b	;volatile
 26933  00658E  A4D8               	btfss	status,2,c
 26934  006590  D004               	goto	l16726
 26935                           
 26936                           ; BSR set to: 0
 26937                           ;inputs_MC50.c: 724:             {;inputs_MC50.c: 725:                 var_sys.StateMoto
      +                          r = Stopped;
 26938  006592  0E00               	movlw	0
 26939  006594  0101               	movlb	1	; () banked
 26940  006596  6F00               	movwf	_var_sys& (0+255),b	;volatile
 26941                           
 26942                           ;inputs_MC50.c: 727:             }
 26943  006598  0012               	return	
 26944  00659A                     l16726:
 26945  00659A  0101               	movlb	1	; () banked
 26946  00659C  0500               	decf	_var_sys& (0+255),w,b	;volatile
 26947  00659E  B4D8               	btfsc	status,2,c
 26948  0065A0  D004               	goto	u19540
 26949                           
 26950                           ; BSR set to: 1
 26951  0065A2  0E02               	movlw	2
 26952  0065A4  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 26953  0065A6  A4D8               	btfss	status,2,c
 26954  0065A8  D004               	goto	u19550
 26955  0065AA                     u19540:
 26956                           
 26957                           ; BSR set to: 1
 26958  0065AA  0100               	movlb	0	; () banked
 26959  0065AC  05A3               	decf	(_var_sys_NVM+11)& (0+255),w,b	;volatile
 26960  0065AE  B4D8               	btfsc	status,2,c
 26961  0065B0  D004               	goto	u19560
 26962  0065B2                     u19550:
 26963  0065B2  0100               	movlb	0	; () banked
 26964  0065B4  05AE               	decf	(_var_sys_NVM+22)& (0+255),w,b	;volatile
 26965  0065B6  A4D8               	btfss	status,2,c
 26966  0065B8  0012               	return	
 26967  0065BA                     u19560:
 26968                           
 26969                           ; BSR set to: 0
 26970                           ;inputs_MC50.c: 730:             {;inputs_MC50.c: 731:                 var_sys.StateMoto
      +                          r = Stopped;
 26971  0065BA  0E00               	movlw	0
 26972  0065BC  0101               	movlb	1	; () banked
 26973  0065BE  6F00               	movwf	_var_sys& (0+255),b	;volatile
 26974  0065C0  0012               	return	
 26975  0065C2                     __end_of_ControlInputs:
 26976                           	callstack 0
 26977                           
 26978 ;; *************** function _ControlCurrent *****************
 26979 ;; Defined at:
 26980 ;;		line 342 in file "controlCurrent_MC50.c"
 26981 ;; Parameters:    Size  Location     Type
 26982 ;;		None
 26983 ;; Auto vars:     Size  Location     Type
 26984 ;;		None
 26985 ;; Return value:  Size  Location     Type
 26986 ;;                  1    wreg      void 
 26987 ;; Registers used:
 26988 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26989 ;; Tracked objects:
 26990 ;;		On entry : 3E/1
 26991 ;;		On exit  : 3E/0
 26992 ;;		Unchanged: 0/0
 26993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26996 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26997 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26998 ;;Total ram usage:        4 bytes
 26999 ;; Hardware stack levels used: 1
 27000 ;; Hardware stack levels required when called: 6
 27001 ;; This function calls:
 27002 ;;		_GetMotorPower
 27003 ;;		_getCurrentComparator
 27004 ;;		_refreshADCZeroOffset
 27005 ;;		_refreshCurrent
 27006 ;; This function is called by:
 27007 ;;		_main
 27008 ;; This function uses a non-reentrant model
 27009 ;;
 27010                           
 27011                           	psect	text116
 27012  005E58                     __ptext116:
 27013                           	callstack 0
 27014  005E58                     _ControlCurrent:
 27015                           	callstack 24
 27016                           
 27017                           ;controlCurrent_MC50.c: 345:     refreshCurrent();
 27018                           
 27019                           ;incstack = 0
 27020  005E58  ECBA  F043         	call	_refreshCurrent	;wreg free
 27021                           
 27022                           ;controlCurrent_MC50.c: 351:     refreshADCZeroOffset();
 27023  005E5C  EC74  F034         	call	_refreshADCZeroOffset	;wreg free
 27024                           
 27025                           ;controlCurrent_MC50.c: 354:     var_sys.velocityActual = GetMotorPower();
 27026  005E60  EC9B  F037         	call	_GetMotorPower	;wreg free
 27027  005E64  6E23               	movwf	??_ControlCurrent^0,c
 27028  005E66  5023               	movf	??_ControlCurrent^0,w,c
 27029  005E68  6F38               	movwf	(_var_sys+56)& (0+255),b	;volatile
 27030  005E6A  6B39               	clrf	(_var_sys+57)& (0+255),b	;volatile
 27031                           
 27032                           ; BSR set to: 1
 27033                           ;controlCurrent_MC50.c: 355:     var_sys.ActualComparatorCurrent = getCurrentComparator(
      +                          );
 27034  005E6C  EC41  F02B         	call	_getCurrentComparator	;wreg free
 27035  005E70  C016  F134         	movff	?_getCurrentComparator,_var_sys+52	;volatile
 27036  005E74  C017  F135         	movff	?_getCurrentComparator+1,_var_sys+53	;volatile
 27037  005E78  C018  F136         	movff	?_getCurrentComparator+2,_var_sys+54	;volatile
 27038  005E7C  C019  F137         	movff	?_getCurrentComparator+3,_var_sys+55	;volatile
 27039                           
 27040                           ; BSR set to: 1
 27041                           ;controlCurrent_MC50.c: 357:     if(var_sys.StateMotor == Stopped)
 27042  005E80  5100               	movf	_var_sys& (0+255),w,b	;volatile
 27043  005E82  A4D8               	btfss	status,2,c
 27044  005E84  D00F               	goto	l22558
 27045                           
 27046                           ; BSR set to: 1
 27047                           ;controlCurrent_MC50.c: 358:     {;controlCurrent_MC50.c: 360:         numberOfErrorCurr
      +                          ent=0;
 27048  005E86  0E00               	movlw	0
 27049  005E88  0100               	movlb	0	; () banked
 27050  005E8A  6F8E               	movwf	_numberOfErrorCurrent& (0+255),b	;volatile
 27051                           
 27052                           ;controlCurrent_MC50.c: 361:         var_sys.CurrentAlarmIsOn=NO;
 27053  005E8C  0E00               	movlw	0
 27054  005E8E  0101               	movlb	1	; () banked
 27055  005E90  6F41               	movwf	(_var_sys+65)& (0+255),b	;volatile
 27056                           
 27057                           ;controlCurrent_MC50.c: 362:         var_sys.InvertionCurrentOpening=NO;
 27058  005E92  0E00               	movlw	0
 27059  005E94  6F45               	movwf	(_var_sys+69)& (0+255),b	;volatile
 27060                           
 27061                           ;controlCurrent_MC50.c: 363:         var_sys.InvertionCurrentClosing=NO;
 27062  005E96  0E00               	movlw	0
 27063  005E98  6F44               	movwf	(_var_sys+68)& (0+255),b	;volatile
 27064                           
 27065                           ;controlCurrent_MC50.c: 364:         ts_system.TimeTransitionDecelaration=(1000/50);
 27066  005E9A  0E00               	movlw	0
 27067  005E9C  6FD3               	movwf	(_ts_system+57)& (0+255),b	;volatile
 27068  005E9E  0E14               	movlw	20
 27069  005EA0  6FD2               	movwf	(_ts_system+56)& (0+255),b	;volatile
 27070                           
 27071                           ;controlCurrent_MC50.c: 365:     }
 27072  005EA2  0012               	return	
 27073  005EA4                     l22558:
 27074                           
 27075                           ; BSR set to: 1
 27076  005EA4  517B               	movf	_powerControl_st& (0+255),w,b
 27077  005EA6  A4D8               	btfss	status,2,c
 27078  005EA8  D05D               	goto	l22592
 27079                           
 27080                           ; BSR set to: 1
 27081                           ;controlCurrent_MC50.c: 368:     {;controlCurrent_MC50.c: 376:         ts_system.TimeTra
      +                          nsitionDecelaration=(1000/50);
 27082  005EAA  0E00               	movlw	0
 27083  005EAC  6FD3               	movwf	(_ts_system+57)& (0+255),b	;volatile
 27084  005EAE  0E14               	movlw	20
 27085  005EB0  6FD2               	movwf	(_ts_system+56)& (0+255),b	;volatile
 27086                           
 27087                           ; BSR set to: 1
 27088                           ;controlCurrent_MC50.c: 377:         if (( var_sys.ActualCurrent>var_sys.ActualComparato
      +                          rCurrent ) && (ts_system.TimeChargeCondesador<=0)&&var_sys_NVM.motorSensitivity!=0 && ts
      +                          _system.TimeReleCapacitor<=0)
 27089  005EB2  512E               	movf	(_var_sys+46)& (0+255),w,b	;volatile
 27090  005EB4  6E23               	movwf	??_ControlCurrent^0,c
 27091  005EB6  512F               	movf	(_var_sys+47)& (0+255),w,b	;volatile
 27092  005EB8  6E24               	movwf	(??_ControlCurrent+1)^0,c
 27093  005EBA  6A25               	clrf	(??_ControlCurrent+2)^0,c
 27094  005EBC  6A26               	clrf	(??_ControlCurrent+3)^0,c
 27095  005EBE  5023               	movf	??_ControlCurrent^0,w,c
 27096  005EC0  5D34               	subwf	(_var_sys+52)& (0+255),w,b	;volatile
 27097  005EC2  5024               	movf	(??_ControlCurrent+1)^0,w,c
 27098  005EC4  5935               	subwfb	(_var_sys+53)& (0+255),w,b	;volatile
 27099  005EC6  5025               	movf	(??_ControlCurrent+2)^0,w,c
 27100  005EC8  5936               	subwfb	(_var_sys+54)& (0+255),w,b	;volatile
 27101  005ECA  5026               	movf	(??_ControlCurrent+3)^0,w,c
 27102  005ECC  5937               	subwfb	(_var_sys+55)& (0+255),w,b	;volatile
 27103  005ECE  B0D8               	btfsc	status,0,c
 27104  005ED0  D03E               	goto	l22590
 27105                           
 27106                           ; BSR set to: 1
 27107  005ED2  BFB5               	btfsc	(_ts_system+27)& (0+255),7,b	;volatile
 27108  005ED4  D005               	goto	u27330
 27109  005ED6  51B5               	movf	(_ts_system+27)& (0+255),w,b	;volatile
 27110  005ED8  E13A               	bnz	l22590
 27111  005EDA  05B4               	decf	(_ts_system+26)& (0+255),w,b	;volatile
 27112  005EDC  B0D8               	btfsc	status,0,c
 27113  005EDE  D037               	goto	l22590
 27114  005EE0                     u27330:
 27115                           
 27116                           ; BSR set to: 1
 27117  005EE0  0100               	movlb	0	; () banked
 27118  005EE2  519B               	movf	(_var_sys_NVM+3)& (0+255),w,b	;volatile
 27119  005EE4  B4D8               	btfsc	status,2,c
 27120  005EE6  D033               	goto	l22590
 27121                           
 27122                           ; BSR set to: 0
 27123  005EE8  0101               	movlb	1	; () banked
 27124  005EEA  BFDD               	btfsc	(_ts_system+67)& (0+255),7,b	;volatile
 27125  005EEC  D005               	goto	u27350
 27126  005EEE  51DD               	movf	(_ts_system+67)& (0+255),w,b	;volatile
 27127  005EF0  E12E               	bnz	l22590
 27128  005EF2  05DC               	decf	(_ts_system+66)& (0+255),w,b	;volatile
 27129  005EF4  B0D8               	btfsc	status,0,c
 27130  005EF6  D02B               	goto	l22590
 27131  005EF8                     u27350:
 27132                           
 27133                           ; BSR set to: 1
 27134                           ;controlCurrent_MC50.c: 378:         {;controlCurrent_MC50.c: 379:              if (numb
      +                          erOfErrorCurrent >=1)
 27135  005EF8  0100               	movlb	0	; () banked
 27136  005EFA  518E               	movf	_numberOfErrorCurrent& (0+255),w,b	;volatile
 27137  005EFC  B4D8               	btfsc	status,2,c
 27138  005EFE  D00B               	goto	l22576
 27139                           
 27140                           ; BSR set to: 0
 27141                           ;controlCurrent_MC50.c: 380:              {;controlCurrent_MC50.c: 381:                 
      +                           if(erroranterior > var_sys.ActualCurrent )
 27142  005F00  0101               	movlb	1	; () banked
 27143  005F02  5189               	movf	_erroranterior& (0+255),w,b	;volatile
 27144  005F04  5D2E               	subwf	(_var_sys+46)& (0+255),w,b	;volatile
 27145  005F06  518A               	movf	(_erroranterior+1)& (0+255),w,b	;volatile
 27146  005F08  592F               	subwfb	(_var_sys+47)& (0+255),w,b	;volatile
 27147  005F0A  B0D8               	btfsc	status,0,c
 27148  005F0C  D004               	goto	l22576
 27149                           
 27150                           ; BSR set to: 1
 27151                           ;controlCurrent_MC50.c: 382:                  {;controlCurrent_MC50.c: 383:             
      +                                 numberOfErrorCurrent = 0;
 27152  005F0E  0E00               	movlw	0
 27153  005F10  0100               	movlb	0	; () banked
 27154  005F12  6F8E               	movwf	_numberOfErrorCurrent& (0+255),b	;volatile
 27155                           
 27156                           ;controlCurrent_MC50.c: 384:                  }
 27157  005F14  D002               	goto	l22578
 27158  005F16                     l22576:
 27159                           
 27160                           ;controlCurrent_MC50.c: 386:                  {;controlCurrent_MC50.c: 387:             
      +                                 numberOfErrorCurrent++;
 27161  005F16  0100               	movlb	0	; () banked
 27162  005F18  2B8E               	incf	_numberOfErrorCurrent& (0+255),f,b	;volatile
 27163  005F1A                     l22578:
 27164                           
 27165                           ; BSR set to: 0
 27166                           ;controlCurrent_MC50.c: 389:                  erroranterior = var_sys.ActualCurrent;
 27167  005F1A  C12E  F189         	movff	_var_sys+46,_erroranterior	;volatile
 27168  005F1E  C12F  F18A         	movff	_var_sys+47,_erroranterior+1	;volatile
 27169                           
 27170                           ; BSR set to: 0
 27171                           ;controlCurrent_MC50.c: 398:             if(ts_system.TimeCurrentWaitForAlarm<=0&&number
      +                          OfErrorCurrent>1)
 27172                           
 27173                           ;controlCurrent_MC50.c: 390:              }
 27174  005F22  0101               	movlb	1	; () banked
 27175  005F24  BFC9               	btfsc	(_ts_system+47)& (0+255),7,b	;volatile
 27176  005F26  D005               	goto	u27380
 27177  005F28  51C9               	movf	(_ts_system+47)& (0+255),w,b	;volatile
 27178  005F2A  E14F               	bnz	l1405
 27179  005F2C  05C8               	decf	(_ts_system+46)& (0+255),w,b	;volatile
 27180  005F2E  B0D8               	btfsc	status,0,c
 27181  005F30  0012               	return	
 27182  005F32                     u27380:
 27183                           
 27184                           ; BSR set to: 1
 27185  005F32  0E01               	movlw	1
 27186  005F34  0100               	movlb	0	; () banked
 27187  005F36  658E               	cpfsgt	_numberOfErrorCurrent& (0+255),b	;volatile
 27188  005F38  0012               	return	
 27189                           
 27190                           ; BSR set to: 0
 27191                           ;controlCurrent_MC50.c: 399:             {;controlCurrent_MC50.c: 400:                 v
      +                          ar_sys.StateMotor = Stopped;
 27192  005F3A  0E00               	movlw	0
 27193  005F3C  0101               	movlb	1	; () banked
 27194  005F3E  6F00               	movwf	_var_sys& (0+255),b	;volatile
 27195                           
 27196                           ;controlCurrent_MC50.c: 401:                 ts_system.TimeCurrentAlarm= (1000/50)*10;
 27197  005F40  0E00               	movlw	0
 27198  005F42  6FC5               	movwf	(_ts_system+43)& (0+255),b	;volatile
 27199  005F44  0EC8               	movlw	200
 27200  005F46  6FC4               	movwf	(_ts_system+42)& (0+255),b	;volatile
 27201                           
 27202                           ;controlCurrent_MC50.c: 402:                 var_sys.CurrentAlarmIsOn=YES;
 27203  005F48  0E01               	movlw	1
 27204  005F4A  6F41               	movwf	(_var_sys+65)& (0+255),b	;volatile
 27205  005F4C  0012               	return	
 27206  005F4E                     l22590:
 27207                           
 27208                           ;controlCurrent_MC50.c: 409:         {;controlCurrent_MC50.c: 410:             numberOfE
      +                          rrorCurrent=0;
 27209  005F4E  0E00               	movlw	0
 27210  005F50  0100               	movlb	0	; () banked
 27211  005F52  6F8E               	movwf	_numberOfErrorCurrent& (0+255),b	;volatile
 27212                           
 27213                           ;controlCurrent_MC50.c: 411:             var_sys.CurrentAlarmIsOn=NO;
 27214  005F54  0E00               	movlw	0
 27215  005F56  0101               	movlb	1	; () banked
 27216  005F58  6F41               	movwf	(_var_sys+65)& (0+255),b	;volatile
 27217                           
 27218                           ;controlCurrent_MC50.c: 412:             var_sys.InvertionCurrentOpening=NO;
 27219  005F5A  0E00               	movlw	0
 27220  005F5C  6F45               	movwf	(_var_sys+69)& (0+255),b	;volatile
 27221                           
 27222                           ;controlCurrent_MC50.c: 413:             var_sys.InvertionCurrentClosing=NO;
 27223  005F5E  0E00               	movlw	0
 27224  005F60  6F44               	movwf	(_var_sys+68)& (0+255),b	;volatile
 27225  005F62  0012               	return	
 27226  005F64                     l22592:
 27227                           
 27228                           ; BSR set to: 1
 27229                           ;controlCurrent_MC50.c: 419:     {;controlCurrent_MC50.c: 420:         if( ( var_sys.Act
      +                          ualHistCurrent<var_sys.ActualComparatorCurrent ) && (ts_system.TimeChargeCondesador<=0)&
      +                          &ts_system.TimeTransitionDecelaration<=0&&var_sys_NVM.decelarationSensivity!=0)
 27230  005F64  5134               	movf	(_var_sys+52)& (0+255),w,b	;volatile
 27231  005F66  5D30               	subwf	(_var_sys+48)& (0+255),w,b	;volatile
 27232  005F68  5135               	movf	(_var_sys+53)& (0+255),w,b	;volatile
 27233  005F6A  5931               	subwfb	(_var_sys+49)& (0+255),w,b	;volatile
 27234  005F6C  5136               	movf	(_var_sys+54)& (0+255),w,b	;volatile
 27235  005F6E  5932               	subwfb	(_var_sys+50)& (0+255),w,b	;volatile
 27236  005F70  5137               	movf	(_var_sys+55)& (0+255),w,b	;volatile
 27237  005F72  5933               	subwfb	(_var_sys+51)& (0+255),w,b	;volatile
 27238  005F74  B0D8               	btfsc	status,0,c
 27239  005F76  D7EB               	goto	l22590
 27240                           
 27241                           ; BSR set to: 1
 27242  005F78  BFB5               	btfsc	(_ts_system+27)& (0+255),7,b	;volatile
 27243  005F7A  D005               	goto	u27410
 27244  005F7C  51B5               	movf	(_ts_system+27)& (0+255),w,b	;volatile
 27245  005F7E  E1E7               	bnz	l22590
 27246  005F80  05B4               	decf	(_ts_system+26)& (0+255),w,b	;volatile
 27247  005F82  B0D8               	btfsc	status,0,c
 27248  005F84  D7E4               	goto	l22590
 27249  005F86                     u27410:
 27250                           
 27251                           ; BSR set to: 1
 27252  005F86  BFD3               	btfsc	(_ts_system+57)& (0+255),7,b	;volatile
 27253  005F88  D005               	goto	u27420
 27254  005F8A  51D3               	movf	(_ts_system+57)& (0+255),w,b	;volatile
 27255  005F8C  E1E0               	bnz	l22590
 27256  005F8E  05D2               	decf	(_ts_system+56)& (0+255),w,b	;volatile
 27257  005F90  B0D8               	btfsc	status,0,c
 27258  005F92  D7DD               	goto	l22590
 27259  005F94                     u27420:
 27260                           
 27261                           ; BSR set to: 1
 27262  005F94  0100               	movlb	0	; () banked
 27263  005F96  51A7               	movf	(_var_sys_NVM+15)& (0+255),w,b	;volatile
 27264  005F98  B4D8               	btfsc	status,2,c
 27265  005F9A  D7D9               	goto	l22590
 27266                           
 27267                           ; BSR set to: 0
 27268                           ;controlCurrent_MC50.c: 421:         {;controlCurrent_MC50.c: 423:             numberOfE
      +                          rrorCurrent++;
 27269  005F9C  2B8E               	incf	_numberOfErrorCurrent& (0+255),f,b	;volatile
 27270                           
 27271                           ; BSR set to: 0
 27272                           ;controlCurrent_MC50.c: 424:             if(ts_system.TimeCurrentWaitForAlarm<=0&&number
      +                          OfErrorCurrent>2)
 27273  005F9E  0101               	movlb	1	; () banked
 27274  005FA0  BFC9               	btfsc	(_ts_system+47)& (0+255),7,b	;volatile
 27275  005FA2  D005               	goto	u27440
 27276  005FA4  51C9               	movf	(_ts_system+47)& (0+255),w,b	;volatile
 27277  005FA6  E111               	bnz	l1405
 27278  005FA8  05C8               	decf	(_ts_system+46)& (0+255),w,b	;volatile
 27279  005FAA  B0D8               	btfsc	status,0,c
 27280  005FAC  0012               	return	
 27281  005FAE                     u27440:
 27282                           
 27283                           ; BSR set to: 1
 27284  005FAE  0E02               	movlw	2
 27285  005FB0  0100               	movlb	0	; () banked
 27286  005FB2  658E               	cpfsgt	_numberOfErrorCurrent& (0+255),b	;volatile
 27287  005FB4  0012               	return	
 27288                           
 27289                           ; BSR set to: 0
 27290                           ;controlCurrent_MC50.c: 425:             {;controlCurrent_MC50.c: 426:                 v
      +                          ar_sys.StateMotor = Stopped;
 27291  005FB6  0E00               	movlw	0
 27292  005FB8  0101               	movlb	1	; () banked
 27293  005FBA  6F00               	movwf	_var_sys& (0+255),b	;volatile
 27294                           
 27295                           ;controlCurrent_MC50.c: 427:                 ts_system.TimeCurrentAlarm= (1000/50)*10;
 27296  005FBC  0E00               	movlw	0
 27297  005FBE  6FC5               	movwf	(_ts_system+43)& (0+255),b	;volatile
 27298  005FC0  0EC8               	movlw	200
 27299  005FC2  6FC4               	movwf	(_ts_system+42)& (0+255),b	;volatile
 27300                           
 27301                           ;controlCurrent_MC50.c: 428:                 var_sys.CurrentAlarmIsOn=YES;
 27302  005FC4  0E01               	movlw	1
 27303  005FC6  6F41               	movwf	(_var_sys+65)& (0+255),b	;volatile
 27304  005FC8  0012               	return	
 27305  005FCA                     l1405:
 27306  005FCA  0012               	return		;funcret
 27307  005FCC                     __end_of_ControlCurrent:
 27308                           	callstack 0
 27309                           
 27310 ;; *************** function _refreshCurrent *****************
 27311 ;; Defined at:
 27312 ;;		line 233 in file "controlCurrent_MC50.c"
 27313 ;; Parameters:    Size  Location     Type
 27314 ;;		None
 27315 ;; Auto vars:     Size  Location     Type
 27316 ;;		None
 27317 ;; Return value:  Size  Location     Type
 27318 ;;                  1    wreg      void 
 27319 ;; Registers used:
 27320 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27321 ;; Tracked objects:
 27322 ;;		On entry : 3E/1
 27323 ;;		On exit  : 3F/0
 27324 ;;		Unchanged: 0/0
 27325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27327 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27329 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27330 ;;Total ram usage:        0 bytes
 27331 ;; Hardware stack levels used: 1
 27332 ;; Hardware stack levels required when called: 5
 27333 ;; This function calls:
 27334 ;;		_saveEnergyADCHist
 27335 ;;		_sumEnergyADC
 27336 ;;		_sumHIST
 27337 ;; This function is called by:
 27338 ;;		_ControlCurrent
 27339 ;; This function uses a non-reentrant model
 27340 ;;
 27341                           
 27342                           	psect	text117
 27343  008774                     __ptext117:
 27344                           	callstack 0
 27345  008774                     _refreshCurrent:
 27346                           	callstack 24
 27347                           
 27348                           ;controlCurrent_MC50.c: 238:     if ( (var_sys_NVM.electricBrake==1) && (ts_system.TimeE
      +                          lectricBrake>0) )
 27349                           
 27350                           ;incstack = 0
 27351  008774  0100               	movlb	0	; () banked
 27352  008776  05AF               	decf	(_var_sys_NVM+23)& (0+255),w,b	;volatile
 27353  008778  A4D8               	btfss	status,2,c
 27354  00877A  D008               	goto	l14434
 27355                           
 27356                           ; BSR set to: 0
 27357  00877C  0101               	movlb	1	; () banked
 27358  00877E  BFC3               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 27359  008780  D005               	goto	l14434
 27360  008782  51C3               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 27361  008784  E109               	bnz	l1372
 27362  008786  05C2               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 27363  008788  B0D8               	btfsc	status,0,c
 27364  00878A  D006               	goto	l1372
 27365  00878C                     l14434:
 27366                           
 27367                           ;controlCurrent_MC50.c: 243:     {;controlCurrent_MC50.c: 245:         var_sys.ActualCur
      +                          rent=sumEnergyADC();
 27368  00878C  EC81  F03B         	call	_sumEnergyADC	;wreg free
 27369  008790  C010  F12E         	movff	?_sumEnergyADC,_var_sys+46	;volatile
 27370  008794  C011  F12F         	movff	?_sumEnergyADC+1,_var_sys+47	;volatile
 27371  008798                     l1372:
 27372                           
 27373                           ; BSR set to: 1
 27374                           ;controlCurrent_MC50.c: 248:     saveEnergyADCHist(var_sys.ActualCurrent);
 27375  008798  C12E  F010         	movff	_var_sys+46,saveEnergyADCHist@valueToSave	;volatile
 27376  00879C  C12F  F011         	movff	_var_sys+47,saveEnergyADCHist@valueToSave+1	;volatile
 27377  0087A0  ECC6  F046         	call	_saveEnergyADCHist	;wreg free
 27378                           
 27379                           ;controlCurrent_MC50.c: 250:     var_sys.ActualHistCurrent=sumHIST();
 27380  0087A4  EC71  F035         	call	_sumHIST	;wreg free
 27381  0087A8  C010  F130         	movff	?_sumHIST,_var_sys+48	;volatile
 27382  0087AC  C011  F131         	movff	?_sumHIST+1,_var_sys+49	;volatile
 27383  0087B0  C012  F132         	movff	?_sumHIST+2,_var_sys+50	;volatile
 27384  0087B4  C013  F133         	movff	?_sumHIST+3,_var_sys+51	;volatile
 27385                           
 27386                           ; BSR set to: 0
 27387  0087B8  0012               	return		;funcret
 27388  0087BA                     __end_of_refreshCurrent:
 27389                           	callstack 0
 27390                           
 27391 ;; *************** function _sumHIST *****************
 27392 ;; Defined at:
 27393 ;;		line 199 in file "controlCurrent_MC50.c"
 27394 ;; Parameters:    Size  Location     Type
 27395 ;;		None
 27396 ;; Auto vars:     Size  Location     Type
 27397 ;;  sumH            4   27[COMRAM] unsigned long 
 27398 ;;  min             2   25[COMRAM] unsigned int 
 27399 ;;  max             2   23[COMRAM] unsigned int 
 27400 ;;  i               1   31[COMRAM] unsigned char 
 27401 ;; Return value:  Size  Location     Type
 27402 ;;                  4   15[COMRAM] unsigned long 
 27403 ;; Registers used:
 27404 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 27405 ;; Tracked objects:
 27406 ;;		On entry : 3F/0
 27407 ;;		On exit  : 3F/0
 27408 ;;		Unchanged: 3F/0
 27409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27410 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27411 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27412 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27413 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27414 ;;Total ram usage:       17 bytes
 27415 ;; Hardware stack levels used: 1
 27416 ;; Hardware stack levels required when called: 4
 27417 ;; This function calls:
 27418 ;;		Nothing
 27419 ;; This function is called by:
 27420 ;;		_refreshCurrent
 27421 ;; This function uses a non-reentrant model
 27422 ;;
 27423                           
 27424                           	psect	text118
 27425  006AE2                     __ptext118:
 27426                           	callstack 0
 27427  006AE2                     _sumHIST:
 27428                           	callstack 24
 27429                           
 27430                           ; BSR set to: 0
 27431                           ;controlCurrent_MC50.c: 201:     unsigned char i;;controlCurrent_MC50.c: 202:     unsign
      +                          ed long sumH = 0;
 27432                           
 27433                           ; BSR set to: 0
 27434                           ;incstack = 0
 27435  006AE2  0E00               	movlw	0
 27436  006AE4  6E1C               	movwf	sumHIST@sumH^0,c
 27437  006AE6  0E00               	movlw	0
 27438  006AE8  6E1D               	movwf	(sumHIST@sumH+1)^0,c
 27439  006AEA  0E00               	movlw	0
 27440  006AEC  6E1E               	movwf	(sumHIST@sumH+2)^0,c
 27441  006AEE  0E00               	movlw	0
 27442  006AF0  6E1F               	movwf	(sumHIST@sumH+3)^0,c
 27443                           
 27444                           ;controlCurrent_MC50.c: 203:     unsigned int max=0;
 27445  006AF2  0E00               	movlw	0
 27446  006AF4  6E19               	movwf	(sumHIST@max+1)^0,c
 27447  006AF6  0E00               	movlw	0
 27448  006AF8  6E18               	movwf	sumHIST@max^0,c
 27449                           
 27450                           ; BSR set to: 0
 27451                           ;controlCurrent_MC50.c: 204:     unsigned int min=0xFFFF;
 27452  006AFA  681A               	setf	sumHIST@min^0,c
 27453  006AFC  681B               	setf	(sumHIST@min+1)^0,c
 27454                           
 27455                           ;controlCurrent_MC50.c: 207:     for( i = 0; i<(10); i++)
 27456  006AFE  0E00               	movlw	0
 27457  006B00  6E20               	movwf	sumHIST@i^0,c
 27458  006B02                     l12596:
 27459                           
 27460                           ; BSR set to: 0
 27461                           ;controlCurrent_MC50.c: 208:     {;controlCurrent_MC50.c: 209:         sumH=sumH+SumEner
      +                          gyADCHist_array[i];
 27462  006B02  5020               	movf	sumHIST@i^0,w,c
 27463  006B04  0D02               	mullw	2
 27464  006B06  0E60               	movlw	low _SumEnergyADCHist_array
 27465  006B08  24F3               	addwf	243,w,c
 27466  006B0A  6ED9               	movwf	fsr2l,c
 27467  006B0C  0E02               	movlw	high _SumEnergyADCHist_array
 27468  006B0E  20F4               	addwfc	prodh,w,c
 27469  006B10  6EDA               	movwf	fsr2h,c
 27470  006B12  CFDE F014          	movff	postinc2,??_sumHIST
 27471  006B16  CFDD F015          	movff	postdec2,??_sumHIST+1
 27472  006B1A  5014               	movf	??_sumHIST^0,w,c
 27473  006B1C  241C               	addwf	sumHIST@sumH^0,w,c
 27474  006B1E  6E1C               	movwf	sumHIST@sumH^0,c
 27475  006B20  5015               	movf	(??_sumHIST+1)^0,w,c
 27476  006B22  201D               	addwfc	(sumHIST@sumH+1)^0,w,c
 27477  006B24  6E1D               	movwf	(sumHIST@sumH+1)^0,c
 27478  006B26  0E00               	movlw	0
 27479  006B28  201E               	addwfc	(sumHIST@sumH+2)^0,w,c
 27480  006B2A  6E1E               	movwf	(sumHIST@sumH+2)^0,c
 27481  006B2C  0E00               	movlw	0
 27482  006B2E  201F               	addwfc	(sumHIST@sumH+3)^0,w,c
 27483  006B30  6E1F               	movwf	(sumHIST@sumH+3)^0,c
 27484                           
 27485                           ;controlCurrent_MC50.c: 212:         if(SumEnergyADCHist_array[i]>max)
 27486  006B32  5020               	movf	sumHIST@i^0,w,c
 27487  006B34  0D02               	mullw	2
 27488  006B36  0E60               	movlw	low _SumEnergyADCHist_array
 27489  006B38  24F3               	addwf	243,w,c
 27490  006B3A  6ED9               	movwf	fsr2l,c
 27491  006B3C  0E02               	movlw	high _SumEnergyADCHist_array
 27492  006B3E  20F4               	addwfc	prodh,w,c
 27493  006B40  6EDA               	movwf	fsr2h,c
 27494  006B42  50DE               	movf	postinc2,w,c
 27495  006B44  5C18               	subwf	sumHIST@max^0,w,c
 27496  006B46  50DE               	movf	postinc2,w,c
 27497  006B48  5819               	subwfb	(sumHIST@max+1)^0,w,c
 27498  006B4A  B0D8               	btfsc	status,0,c
 27499  006B4C  D00C               	goto	l1366
 27500                           
 27501                           ; BSR set to: 0
 27502                           ;controlCurrent_MC50.c: 213:         {;controlCurrent_MC50.c: 214:             max=SumEn
      +                          ergyADCHist_array[i];
 27503  006B4E  5020               	movf	sumHIST@i^0,w,c
 27504  006B50  0D02               	mullw	2
 27505  006B52  0E60               	movlw	low _SumEnergyADCHist_array
 27506  006B54  24F3               	addwf	243,w,c
 27507  006B56  6ED9               	movwf	fsr2l,c
 27508  006B58  0E02               	movlw	high _SumEnergyADCHist_array
 27509  006B5A  20F4               	addwfc	prodh,w,c
 27510  006B5C  6EDA               	movwf	fsr2h,c
 27511  006B5E  CFDE F018          	movff	postinc2,sumHIST@max
 27512  006B62  CFDD F019          	movff	postdec2,sumHIST@max+1
 27513  006B66                     l1366:
 27514                           
 27515                           ; BSR set to: 0
 27516                           ;controlCurrent_MC50.c: 218:         if(SumEnergyADCHist_array[i]<min)
 27517  006B66  5020               	movf	sumHIST@i^0,w,c
 27518  006B68  0D02               	mullw	2
 27519  006B6A  0E60               	movlw	low _SumEnergyADCHist_array
 27520  006B6C  24F3               	addwf	243,w,c
 27521  006B6E  6ED9               	movwf	fsr2l,c
 27522  006B70  0E02               	movlw	high _SumEnergyADCHist_array
 27523  006B72  20F4               	addwfc	prodh,w,c
 27524  006B74  6EDA               	movwf	fsr2h,c
 27525  006B76  501A               	movf	sumHIST@min^0,w,c
 27526  006B78  5CDE               	subwf	postinc2,w,c
 27527  006B7A  501B               	movf	(sumHIST@min+1)^0,w,c
 27528  006B7C  58DE               	subwfb	postinc2,w,c
 27529  006B7E  B0D8               	btfsc	status,0,c
 27530  006B80  D00C               	goto	l12602
 27531                           
 27532                           ; BSR set to: 0
 27533                           ;controlCurrent_MC50.c: 219:         {;controlCurrent_MC50.c: 220:             min=SumEn
      +                          ergyADCHist_array[i];
 27534  006B82  5020               	movf	sumHIST@i^0,w,c
 27535  006B84  0D02               	mullw	2
 27536  006B86  0E60               	movlw	low _SumEnergyADCHist_array
 27537  006B88  24F3               	addwf	243,w,c
 27538  006B8A  6ED9               	movwf	fsr2l,c
 27539  006B8C  0E02               	movlw	high _SumEnergyADCHist_array
 27540  006B8E  20F4               	addwfc	prodh,w,c
 27541  006B90  6EDA               	movwf	fsr2h,c
 27542  006B92  CFDE F01A          	movff	postinc2,sumHIST@min
 27543  006B96  CFDD F01B          	movff	postdec2,sumHIST@min+1
 27544  006B9A                     l12602:
 27545                           
 27546                           ; BSR set to: 0
 27547                           ;controlCurrent_MC50.c: 222:     }
 27548  006B9A  2A20               	incf	sumHIST@i^0,f,c
 27549                           
 27550                           ; BSR set to: 0
 27551  006B9C  0E09               	movlw	9
 27552  006B9E  6420               	cpfsgt	sumHIST@i^0,c
 27553  006BA0  D7B0               	goto	l12596
 27554                           
 27555                           ; BSR set to: 0
 27556                           ;controlCurrent_MC50.c: 224:     sumH = sumH - ( max+min );
 27557  006BA2  501A               	movf	sumHIST@min^0,w,c
 27558  006BA4  2418               	addwf	sumHIST@max^0,w,c
 27559  006BA6  6E14               	movwf	??_sumHIST^0,c
 27560  006BA8  501B               	movf	(sumHIST@min+1)^0,w,c
 27561  006BAA  2019               	addwfc	(sumHIST@max+1)^0,w,c
 27562  006BAC  6E15               	movwf	(??_sumHIST+1)^0,c
 27563  006BAE  6A16               	clrf	(??_sumHIST+2)^0,c
 27564  006BB0  6A17               	clrf	(??_sumHIST+3)^0,c
 27565  006BB2  5014               	movf	??_sumHIST^0,w,c
 27566  006BB4  5C1C               	subwf	sumHIST@sumH^0,w,c
 27567  006BB6  6E1C               	movwf	sumHIST@sumH^0,c
 27568  006BB8  5015               	movf	(??_sumHIST+1)^0,w,c
 27569  006BBA  581D               	subwfb	(sumHIST@sumH+1)^0,w,c
 27570  006BBC  6E1D               	movwf	(sumHIST@sumH+1)^0,c
 27571  006BBE  5016               	movf	(??_sumHIST+2)^0,w,c
 27572  006BC0  581E               	subwfb	(sumHIST@sumH+2)^0,w,c
 27573  006BC2  6E1E               	movwf	(sumHIST@sumH+2)^0,c
 27574  006BC4  5017               	movf	(??_sumHIST+3)^0,w,c
 27575  006BC6  581F               	subwfb	(sumHIST@sumH+3)^0,w,c
 27576  006BC8  6E1F               	movwf	(sumHIST@sumH+3)^0,c
 27577                           
 27578                           ; BSR set to: 0
 27579                           ;controlCurrent_MC50.c: 226:     return sumH;
 27580  006BCA  C01C  F010         	movff	sumHIST@sumH,?_sumHIST
 27581  006BCE  C01D  F011         	movff	sumHIST@sumH+1,?_sumHIST+1
 27582  006BD2  C01E  F012         	movff	sumHIST@sumH+2,?_sumHIST+2
 27583  006BD6  C01F  F013         	movff	sumHIST@sumH+3,?_sumHIST+3
 27584                           
 27585                           ; BSR set to: 0
 27586  006BDA  0012               	return		;funcret
 27587  006BDC                     __end_of_sumHIST:
 27588                           	callstack 0
 27589                           
 27590 ;; *************** function _sumEnergyADC *****************
 27591 ;; Defined at:
 27592 ;;		line 59 in file "controlCurrent_MC50.c"
 27593 ;; Parameters:    Size  Location     Type
 27594 ;;		None
 27595 ;; Auto vars:     Size  Location     Type
 27596 ;;  auxValue        2   21[COMRAM] unsigned int 
 27597 ;;  sumE            2   19[COMRAM] unsigned int 
 27598 ;;  i               1   23[COMRAM] unsigned char 
 27599 ;; Return value:  Size  Location     Type
 27600 ;;                  2   15[COMRAM] unsigned int 
 27601 ;; Registers used:
 27602 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 27603 ;; Tracked objects:
 27604 ;;		On entry : 3E/0
 27605 ;;		On exit  : 3F/1
 27606 ;;		Unchanged: 0/0
 27607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27608 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27609 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27610 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27611 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27612 ;;Total ram usage:        9 bytes
 27613 ;; Hardware stack levels used: 1
 27614 ;; Hardware stack levels required when called: 4
 27615 ;; This function calls:
 27616 ;;		Nothing
 27617 ;; This function is called by:
 27618 ;;		_refreshCurrent
 27619 ;; This function uses a non-reentrant model
 27620 ;;
 27621                           
 27622                           	psect	text119
 27623  007702                     __ptext119:
 27624                           	callstack 0
 27625  007702                     _sumEnergyADC:
 27626                           	callstack 24
 27627                           
 27628                           ;controlCurrent_MC50.c: 61:     unsigned char i;;controlCurrent_MC50.c: 63:     unsigned
      +                           int sumE = 0;
 27629                           
 27630                           ; BSR set to: 0
 27631                           ;incstack = 0
 27632  007702  0E00               	movlw	0
 27633  007704  6E15               	movwf	(sumEnergyADC@sumE+1)^0,c
 27634  007706  0E00               	movlw	0
 27635  007708  6E14               	movwf	sumEnergyADC@sumE^0,c
 27636                           
 27637                           ;controlCurrent_MC50.c: 72:     for ( i=0 ; i<(30) ; i++ )
 27638  00770A  0E00               	movlw	0
 27639  00770C  6E18               	movwf	sumEnergyADC@i^0,c
 27640  00770E                     l12568:
 27641                           
 27642                           ;controlCurrent_MC50.c: 73:     {;controlCurrent_MC50.c: 83:         if ( ADC_array[i] >
      +                           var_sys.ADCZeroOffset )
 27643  00770E  5018               	movf	sumEnergyADC@i^0,w,c
 27644  007710  0D02               	mullw	2
 27645  007712  0E00               	movlw	low _ADC_array
 27646  007714  24F3               	addwf	243,w,c
 27647  007716  6ED9               	movwf	fsr2l,c
 27648  007718  0E02               	movlw	high _ADC_array
 27649  00771A  20F4               	addwfc	prodh,w,c
 27650  00771C  6EDA               	movwf	fsr2h,c
 27651  00771E  50DE               	movf	postinc2,w,c
 27652  007720  0101               	movlb	1	; () banked
 27653  007722  5D4B               	subwf	(_var_sys+75)& (0+255),w,b	;volatile
 27654  007724  50DE               	movf	postinc2,w,c
 27655  007726  594C               	subwfb	(_var_sys+76)& (0+255),w,b	;volatile
 27656  007728  B0D8               	btfsc	status,0,c
 27657  00772A  D012               	goto	l12572
 27658                           
 27659                           ; BSR set to: 1
 27660                           ;controlCurrent_MC50.c: 84:         {;controlCurrent_MC50.c: 85:             auxValue = 
      +                          ( ADC_array[i] - var_sys.ADCZeroOffset );
 27661  00772C  5018               	movf	sumEnergyADC@i^0,w,c
 27662  00772E  0D02               	mullw	2
 27663  007730  0E00               	movlw	low _ADC_array
 27664  007732  24F3               	addwf	243,w,c
 27665  007734  6ED9               	movwf	fsr2l,c
 27666  007736  0E02               	movlw	high _ADC_array
 27667  007738  20F4               	addwfc	prodh,w,c
 27668  00773A  6EDA               	movwf	fsr2h,c
 27669  00773C  CFDE F012          	movff	postinc2,??_sumEnergyADC
 27670  007740  CFDD F013          	movff	postdec2,??_sumEnergyADC+1
 27671  007744  514B               	movf	(_var_sys+75)& (0+255),w,b	;volatile
 27672  007746  5C12               	subwf	??_sumEnergyADC^0,w,c
 27673  007748  6E16               	movwf	sumEnergyADC@auxValue^0,c
 27674  00774A  514C               	movf	(_var_sys+76)& (0+255),w,b	;volatile
 27675  00774C  5813               	subwfb	(??_sumEnergyADC+1)^0,w,c
 27676  00774E  D011               	goto	L103
 27677  007750                     l12572:
 27678                           
 27679                           ; BSR set to: 1
 27680                           ;controlCurrent_MC50.c: 88:         {;controlCurrent_MC50.c: 89:            auxValue = (
      +                           var_sys.ADCZeroOffset - ADC_array[i] );
 27681  007750  5018               	movf	sumEnergyADC@i^0,w,c
 27682  007752  0D02               	mullw	2
 27683  007754  0E00               	movlw	low _ADC_array
 27684  007756  24F3               	addwf	243,w,c
 27685  007758  6ED9               	movwf	fsr2l,c
 27686  00775A  0E02               	movlw	high _ADC_array
 27687  00775C  20F4               	addwfc	prodh,w,c
 27688  00775E  6EDA               	movwf	fsr2h,c
 27689  007760  CFDE F012          	movff	postinc2,??_sumEnergyADC
 27690  007764  CFDD F013          	movff	postdec2,??_sumEnergyADC+1
 27691  007768  5012               	movf	??_sumEnergyADC^0,w,c
 27692  00776A  5D4B               	subwf	(_var_sys+75)& (0+255),w,b	;volatile
 27693  00776C  6E16               	movwf	sumEnergyADC@auxValue^0,c
 27694  00776E  5013               	movf	(??_sumEnergyADC+1)^0,w,c
 27695  007770  594C               	subwfb	(_var_sys+76)& (0+255),w,b	;volatile
 27696  007772                     L103:
 27697  007772  6E17               	movwf	(sumEnergyADC@auxValue+1)^0,c
 27698                           
 27699                           ; BSR set to: 1
 27700                           ;controlCurrent_MC50.c: 91:         sumE += auxValue;
 27701  007774  5016               	movf	sumEnergyADC@auxValue^0,w,c
 27702  007776  2614               	addwf	sumEnergyADC@sumE^0,f,c
 27703  007778  5017               	movf	(sumEnergyADC@auxValue+1)^0,w,c
 27704  00777A  2215               	addwfc	(sumEnergyADC@sumE+1)^0,f,c
 27705                           
 27706                           ; BSR set to: 1
 27707                           ;controlCurrent_MC50.c: 94:     }
 27708  00777C  2A18               	incf	sumEnergyADC@i^0,f,c
 27709                           
 27710                           ; BSR set to: 1
 27711  00777E  0E1D               	movlw	29
 27712  007780  6418               	cpfsgt	sumEnergyADC@i^0,c
 27713  007782  D7C5               	goto	l12568
 27714                           
 27715                           ; BSR set to: 1
 27716                           ;controlCurrent_MC50.c: 96:     return sumE;
 27717  007784  C014  F010         	movff	sumEnergyADC@sumE,?_sumEnergyADC
 27718  007788  C015  F011         	movff	sumEnergyADC@sumE+1,?_sumEnergyADC+1
 27719                           
 27720                           ; BSR set to: 1
 27721  00778C  0012               	return		;funcret
 27722  00778E                     __end_of_sumEnergyADC:
 27723                           	callstack 0
 27724                           
 27725 ;; *************** function _saveEnergyADCHist *****************
 27726 ;; Defined at:
 27727 ;;		line 182 in file "controlCurrent_MC50.c"
 27728 ;; Parameters:    Size  Location     Type
 27729 ;;  valueToSave     2   15[COMRAM] unsigned int 
 27730 ;; Auto vars:     Size  Location     Type
 27731 ;;		None
 27732 ;; Return value:  Size  Location     Type
 27733 ;;                  1    wreg      void 
 27734 ;; Registers used:
 27735 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 27736 ;; Tracked objects:
 27737 ;;		On entry : 3F/1
 27738 ;;		On exit  : 3F/0
 27739 ;;		Unchanged: 0/0
 27740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27741 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27742 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27744 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27745 ;;Total ram usage:        2 bytes
 27746 ;; Hardware stack levels used: 1
 27747 ;; Hardware stack levels required when called: 4
 27748 ;; This function calls:
 27749 ;;		Nothing
 27750 ;; This function is called by:
 27751 ;;		_refreshCurrent
 27752 ;; This function uses a non-reentrant model
 27753 ;;
 27754                           
 27755                           	psect	text120
 27756  008D8C                     __ptext120:
 27757                           	callstack 0
 27758  008D8C                     _saveEnergyADCHist:
 27759                           	callstack 24
 27760                           
 27761                           ; BSR set to: 1
 27762                           ;controlCurrent_MC50.c: 182: void saveEnergyADCHist(unsigned int valueToSave);controlCur
      +                          rent_MC50.c: 183: {;controlCurrent_MC50.c: 184:     if(idxSaveEnergyADCHist>=10)
 27763                           
 27764                           ; BSR set to: 1
 27765                           ;incstack = 0
 27766  008D8C  0E09               	movlw	9
 27767  008D8E  0100               	movlb	0	; () banked
 27768  008D90  6590               	cpfsgt	_idxSaveEnergyADCHist& (0+255),b	;volatile
 27769  008D92  D002               	goto	l12584
 27770                           
 27771                           ; BSR set to: 0
 27772                           ;controlCurrent_MC50.c: 185:     {;controlCurrent_MC50.c: 186:         idxSaveEnergyADCH
      +                          ist=0;
 27773  008D94  0E00               	movlw	0
 27774  008D96  6F90               	movwf	_idxSaveEnergyADCHist& (0+255),b	;volatile
 27775  008D98                     l12584:
 27776                           
 27777                           ; BSR set to: 0
 27778                           ;controlCurrent_MC50.c: 189:     SumEnergyADCHist_array[idxSaveEnergyADCHist]=valueToSav
      +                          e;
 27779  008D98  5190               	movf	_idxSaveEnergyADCHist& (0+255),w,b	;volatile
 27780  008D9A  0D02               	mullw	2
 27781  008D9C  0E60               	movlw	low _SumEnergyADCHist_array
 27782  008D9E  24F3               	addwf	243,w,c
 27783  008DA0  6ED9               	movwf	fsr2l,c
 27784  008DA2  0E02               	movlw	high _SumEnergyADCHist_array
 27785  008DA4  20F4               	addwfc	prodh,w,c
 27786  008DA6  6EDA               	movwf	fsr2h,c
 27787  008DA8  C010  FFDE         	movff	saveEnergyADCHist@valueToSave,postinc2
 27788  008DAC  C011  FFDD         	movff	saveEnergyADCHist@valueToSave+1,postdec2
 27789                           
 27790                           ; BSR set to: 0
 27791                           ;controlCurrent_MC50.c: 190:     idxSaveEnergyADCHist++;
 27792  008DB0  2B90               	incf	_idxSaveEnergyADCHist& (0+255),f,b	;volatile
 27793                           
 27794                           ; BSR set to: 0
 27795  008DB2  0012               	return		;funcret
 27796  008DB4                     __end_of_saveEnergyADCHist:
 27797                           	callstack 0
 27798                           
 27799 ;; *************** function _refreshADCZeroOffset *****************
 27800 ;; Defined at:
 27801 ;;		line 103 in file "controlCurrent_MC50.c"
 27802 ;; Parameters:    Size  Location     Type
 27803 ;;		None
 27804 ;; Auto vars:     Size  Location     Type
 27805 ;;  media           2   23[COMRAM] unsigned int 
 27806 ;;  i               1   22[COMRAM] unsigned char 
 27807 ;; Return value:  Size  Location     Type
 27808 ;;                  1    wreg      void 
 27809 ;; Registers used:
 27810 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27811 ;; Tracked objects:
 27812 ;;		On entry : 3F/0
 27813 ;;		On exit  : 3E/0
 27814 ;;		Unchanged: 0/0
 27815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27816 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27817 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27818 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27819 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27820 ;;Total ram usage:        3 bytes
 27821 ;; Hardware stack levels used: 1
 27822 ;; Hardware stack levels required when called: 5
 27823 ;; This function calls:
 27824 ;;		___lwdiv
 27825 ;; This function is called by:
 27826 ;;		_ControlCurrent
 27827 ;; This function uses a non-reentrant model
 27828 ;;
 27829                           
 27830                           	psect	text121
 27831  0068E8                     __ptext121:
 27832                           	callstack 0
 27833  0068E8                     _refreshADCZeroOffset:
 27834                           	callstack 24
 27835                           
 27836                           ; BSR set to: 0
 27837                           ;controlCurrent_MC50.c: 105:     unsigned char i;;controlCurrent_MC50.c: 106:     unsign
      +                          ed int media = 0;
 27838                           
 27839                           ; BSR set to: 0
 27840                           ;incstack = 0
 27841  0068E8  0E00               	movlw	0
 27842  0068EA  6E19               	movwf	(refreshADCZeroOffset@media+1)^0,c
 27843  0068EC  0E00               	movlw	0
 27844  0068EE  6E18               	movwf	refreshADCZeroOffset@media^0,c
 27845                           
 27846                           ;controlCurrent_MC50.c: 109:     if ( var_sys.StateMotor == Stopped )
 27847  0068F0  0101               	movlb	1	; () banked
 27848  0068F2  5100               	movf	_var_sys& (0+255),w,b	;volatile
 27849  0068F4  A4D8               	btfss	status,2,c
 27850  0068F6  0012               	return	
 27851                           
 27852                           ; BSR set to: 1
 27853                           ;controlCurrent_MC50.c: 110:     {;controlCurrent_MC50.c: 111:         if ( ts_system.Ti
      +                          meStopADCZeroOffsetCalc <= 0 )
 27854  0068F8  BFD9               	btfsc	(_ts_system+63)& (0+255),7,b	;volatile
 27855  0068FA  D005               	goto	u14670
 27856  0068FC  51D9               	movf	(_ts_system+63)& (0+255),w,b	;volatile
 27857  0068FE  E172               	bnz	l1357
 27858  006900  05D8               	decf	(_ts_system+62)& (0+255),w,b	;volatile
 27859  006902  B0D8               	btfsc	status,0,c
 27860  006904  0012               	return	
 27861  006906                     u14670:
 27862                           
 27863                           ; BSR set to: 1
 27864                           ;controlCurrent_MC50.c: 112:         {;controlCurrent_MC50.c: 113:             ts_system
      +                          .TimeStopADCZeroOffsetCalc = (1000/50);
 27865  006906  0E00               	movlw	0
 27866  006908  6FD9               	movwf	(_ts_system+63)& (0+255),b	;volatile
 27867  00690A  0E14               	movlw	20
 27868  00690C  6FD8               	movwf	(_ts_system+62)& (0+255),b	;volatile
 27869                           
 27870                           ;controlCurrent_MC50.c: 121:             for ( i=0 ; i<(30) ; i++ )
 27871  00690E  0E00               	movlw	0
 27872  006910  6E17               	movwf	refreshADCZeroOffset@i^0,c
 27873  006912                     l14386:
 27874                           
 27875                           ;controlCurrent_MC50.c: 122:             {;controlCurrent_MC50.c: 126:                 m
      +                          edia += ADC_array[i];
 27876  006912  5017               	movf	refreshADCZeroOffset@i^0,w,c
 27877  006914  0D02               	mullw	2
 27878  006916  0E00               	movlw	low _ADC_array
 27879  006918  24F3               	addwf	243,w,c
 27880  00691A  6ED9               	movwf	fsr2l,c
 27881  00691C  0E02               	movlw	high _ADC_array
 27882  00691E  20F4               	addwfc	prodh,w,c
 27883  006920  6EDA               	movwf	fsr2h,c
 27884  006922  50DE               	movf	postinc2,w,c
 27885  006924  2618               	addwf	refreshADCZeroOffset@media^0,f,c
 27886  006926  50DD               	movf	postdec2,w,c
 27887  006928  2219               	addwfc	(refreshADCZeroOffset@media+1)^0,f,c
 27888                           
 27889                           ;controlCurrent_MC50.c: 128:             }
 27890  00692A  2A17               	incf	refreshADCZeroOffset@i^0,f,c
 27891  00692C  0E1D               	movlw	29
 27892  00692E  6417               	cpfsgt	refreshADCZeroOffset@i^0,c
 27893  006930  D7F0               	goto	l14386
 27894                           
 27895                           ;controlCurrent_MC50.c: 130:             media = media/30;
 27896  006932  C018  F010         	movff	refreshADCZeroOffset@media,___lwdiv@dividend
 27897  006936  C019  F011         	movff	refreshADCZeroOffset@media+1,___lwdiv@dividend+1
 27898  00693A  0E00               	movlw	0
 27899  00693C  6E13               	movwf	(___lwdiv@divisor+1)^0,c
 27900  00693E  0E1E               	movlw	30
 27901  006940  6E12               	movwf	___lwdiv@divisor^0,c
 27902  006942  ECAA  F042         	call	___lwdiv	;wreg free
 27903  006946  C010  F018         	movff	?___lwdiv,refreshADCZeroOffset@media
 27904  00694A  C011  F019         	movff	?___lwdiv+1,refreshADCZeroOffset@media+1
 27905                           
 27906                           ;controlCurrent_MC50.c: 131:             if ( (media>(510 -20)) && (media<(510 +20)) )
 27907  00694E  0EEB               	movlw	235
 27908  006950  5C18               	subwf	refreshADCZeroOffset@media^0,w,c
 27909  006952  0E01               	movlw	1
 27910  006954  5819               	subwfb	(refreshADCZeroOffset@media+1)^0,w,c
 27911  006956  A0D8               	btfss	status,0,c
 27912  006958  D006               	goto	l14400
 27913  00695A  0E12               	movlw	18
 27914  00695C  5C18               	subwf	refreshADCZeroOffset@media^0,w,c
 27915  00695E  0E02               	movlw	2
 27916  006960  5819               	subwfb	(refreshADCZeroOffset@media+1)^0,w,c
 27917  006962  A0D8               	btfss	status,0,c
 27918  006964  D004               	goto	l14402
 27919  006966                     l14400:
 27920                           
 27921                           ;controlCurrent_MC50.c: 136:             {;controlCurrent_MC50.c: 138:                 m
      +                          edia = 510;
 27922  006966  0E01               	movlw	1
 27923  006968  6E19               	movwf	(refreshADCZeroOffset@media+1)^0,c
 27924  00696A  0EFE               	movlw	254
 27925  00696C  6E18               	movwf	refreshADCZeroOffset@media^0,c
 27926  00696E                     l14402:
 27927                           
 27928                           ;controlCurrent_MC50.c: 142:             if ( idxAdcZeroAquisition >= 30 )
 27929  00696E  0E1D               	movlw	29
 27930  006970  0100               	movlb	0	; () banked
 27931  006972  658F               	cpfsgt	_idxAdcZeroAquisition& (0+255),b	;volatile
 27932  006974  D002               	goto	l14406
 27933                           
 27934                           ; BSR set to: 0
 27935                           ;controlCurrent_MC50.c: 143:             {;controlCurrent_MC50.c: 144:                 i
      +                          dxAdcZeroAquisition = 0;
 27936  006976  0E00               	movlw	0
 27937  006978  6F8F               	movwf	_idxAdcZeroAquisition& (0+255),b	;volatile
 27938  00697A                     l14406:
 27939                           
 27940                           ; BSR set to: 0
 27941                           ;controlCurrent_MC50.c: 146:             ADC_zero_array[idxAdcZeroAquisition] = media;
 27942  00697A  518F               	movf	_idxAdcZeroAquisition& (0+255),w,b	;volatile
 27943  00697C  0D02               	mullw	2
 27944  00697E  0E96               	movlw	low _ADC_zero_array
 27945  006980  24F3               	addwf	243,w,c
 27946  006982  6ED9               	movwf	fsr2l,c
 27947  006984  0E03               	movlw	high _ADC_zero_array
 27948  006986  20F4               	addwfc	prodh,w,c
 27949  006988  6EDA               	movwf	fsr2h,c
 27950  00698A  C018  FFDE         	movff	refreshADCZeroOffset@media,postinc2
 27951  00698E  C019  FFDD         	movff	refreshADCZeroOffset@media+1,postdec2
 27952                           
 27953                           ; BSR set to: 0
 27954                           ;controlCurrent_MC50.c: 147:             idxAdcZeroAquisition++;
 27955  006992  2B8F               	incf	_idxAdcZeroAquisition& (0+255),f,b	;volatile
 27956                           
 27957                           ; BSR set to: 0
 27958                           ;controlCurrent_MC50.c: 150:             media = 0;
 27959  006994  0E00               	movlw	0
 27960  006996  6E19               	movwf	(refreshADCZeroOffset@media+1)^0,c
 27961  006998  0E00               	movlw	0
 27962  00699A  6E18               	movwf	refreshADCZeroOffset@media^0,c
 27963                           
 27964                           ; BSR set to: 0
 27965                           ;controlCurrent_MC50.c: 151:             for ( i=0 ; i<(30) ; i++ )
 27966  00699C  0E00               	movlw	0
 27967  00699E  6E17               	movwf	refreshADCZeroOffset@i^0,c
 27968  0069A0                     l14418:
 27969                           
 27970                           ; BSR set to: 0
 27971                           ;controlCurrent_MC50.c: 152:             {;controlCurrent_MC50.c: 158:                 m
      +                          edia += ADC_zero_array[i];
 27972  0069A0  5017               	movf	refreshADCZeroOffset@i^0,w,c
 27973  0069A2  0D02               	mullw	2
 27974  0069A4  0E96               	movlw	low _ADC_zero_array
 27975  0069A6  24F3               	addwf	243,w,c
 27976  0069A8  6ED9               	movwf	fsr2l,c
 27977  0069AA  0E03               	movlw	high _ADC_zero_array
 27978  0069AC  20F4               	addwfc	prodh,w,c
 27979  0069AE  6EDA               	movwf	fsr2h,c
 27980  0069B0  50DE               	movf	postinc2,w,c
 27981  0069B2  2618               	addwf	refreshADCZeroOffset@media^0,f,c
 27982  0069B4  50DD               	movf	postdec2,w,c
 27983  0069B6  2219               	addwfc	(refreshADCZeroOffset@media+1)^0,f,c
 27984                           
 27985                           ; BSR set to: 0
 27986                           ;controlCurrent_MC50.c: 159:             }
 27987  0069B8  2A17               	incf	refreshADCZeroOffset@i^0,f,c
 27988                           
 27989                           ; BSR set to: 0
 27990  0069BA  0E1D               	movlw	29
 27991  0069BC  6417               	cpfsgt	refreshADCZeroOffset@i^0,c
 27992  0069BE  D7F0               	goto	l14418
 27993                           
 27994                           ; BSR set to: 0
 27995                           ;controlCurrent_MC50.c: 160:             media = media/30;
 27996  0069C0  C018  F010         	movff	refreshADCZeroOffset@media,___lwdiv@dividend
 27997  0069C4  C019  F011         	movff	refreshADCZeroOffset@media+1,___lwdiv@dividend+1
 27998  0069C8  0E00               	movlw	0
 27999  0069CA  6E13               	movwf	(___lwdiv@divisor+1)^0,c
 28000  0069CC  0E1E               	movlw	30
 28001  0069CE  6E12               	movwf	___lwdiv@divisor^0,c
 28002  0069D0  ECAA  F042         	call	___lwdiv	;wreg free
 28003  0069D4  C010  F018         	movff	?___lwdiv,refreshADCZeroOffset@media
 28004  0069D8  C011  F019         	movff	?___lwdiv+1,refreshADCZeroOffset@media+1
 28005                           
 28006                           ;controlCurrent_MC50.c: 162:             var_sys.ADCZeroOffset = media;
 28007  0069DC  C018  F14B         	movff	refreshADCZeroOffset@media,_var_sys+75	;volatile
 28008  0069E0  C019  F14C         	movff	refreshADCZeroOffset@media+1,_var_sys+76	;volatile
 28009  0069E4                     l1357:
 28010  0069E4  0012               	return		;funcret
 28011  0069E6                     __end_of_refreshADCZeroOffset:
 28012                           	callstack 0
 28013                           
 28014 ;; *************** function ___lwdiv *****************
 28015 ;; Defined at:
 28016 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\lwdiv.c"
 28017 ;; Parameters:    Size  Location     Type
 28018 ;;  dividend        2   15[COMRAM] unsigned int 
 28019 ;;  divisor         2   17[COMRAM] unsigned int 
 28020 ;; Auto vars:     Size  Location     Type
 28021 ;;  quotient        2   19[COMRAM] unsigned int 
 28022 ;;  counter         1   21[COMRAM] unsigned char 
 28023 ;; Return value:  Size  Location     Type
 28024 ;;                  2   15[COMRAM] unsigned int 
 28025 ;; Registers used:
 28026 ;;		wreg, status,2, status,0
 28027 ;; Tracked objects:
 28028 ;;		On entry : 3E/1
 28029 ;;		On exit  : 3E/0
 28030 ;;		Unchanged: 3E/0
 28031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28032 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28033 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28035 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28036 ;;Total ram usage:        7 bytes
 28037 ;; Hardware stack levels used: 1
 28038 ;; Hardware stack levels required when called: 4
 28039 ;; This function calls:
 28040 ;;		Nothing
 28041 ;; This function is called by:
 28042 ;;		_refreshADCZeroOffset
 28043 ;;		_sm_execute_menuConfiguration
 28044 ;; This function uses a non-reentrant model
 28045 ;;
 28046                           
 28047                           	psect	text122
 28048  008554                     __ptext122:
 28049                           	callstack 0
 28050  008554                     ___lwdiv:
 28051                           	callstack 24
 28052                           
 28053                           ;incstack = 0
 28054  008554  0E00               	movlw	0
 28055  008556  6E15               	movwf	(___lwdiv@quotient+1)^0,c
 28056  008558  0E00               	movlw	0
 28057  00855A  6E14               	movwf	___lwdiv@quotient^0,c
 28058  00855C  5012               	movf	___lwdiv@divisor^0,w,c
 28059  00855E  1013               	iorwf	(___lwdiv@divisor+1)^0,w,c
 28060  008560  B4D8               	btfsc	status,2,c
 28061  008562  D01C               	goto	l4138
 28062  008564  0E01               	movlw	1
 28063  008566  6E16               	movwf	___lwdiv@counter^0,c
 28064  008568  D004               	goto	l13866
 28065  00856A                     l13864:
 28066  00856A  90D8               	bcf	status,0,c
 28067  00856C  3612               	rlcf	___lwdiv@divisor^0,f,c
 28068  00856E  3613               	rlcf	(___lwdiv@divisor+1)^0,f,c
 28069  008570  2A16               	incf	___lwdiv@counter^0,f,c
 28070  008572                     l13866:
 28071  008572  AE13               	btfss	(___lwdiv@divisor+1)^0,7,c
 28072  008574  D7FA               	goto	l13864
 28073  008576                     u13690:
 28074  008576  90D8               	bcf	status,0,c
 28075  008578  3614               	rlcf	___lwdiv@quotient^0,f,c
 28076  00857A  3615               	rlcf	(___lwdiv@quotient+1)^0,f,c
 28077  00857C  5012               	movf	___lwdiv@divisor^0,w,c
 28078  00857E  5C10               	subwf	___lwdiv@dividend^0,w,c
 28079  008580  5013               	movf	(___lwdiv@divisor+1)^0,w,c
 28080  008582  5811               	subwfb	(___lwdiv@dividend+1)^0,w,c
 28081  008584  A0D8               	btfss	status,0,c
 28082  008586  D005               	goto	l13876
 28083  008588  5012               	movf	___lwdiv@divisor^0,w,c
 28084  00858A  5E10               	subwf	___lwdiv@dividend^0,f,c
 28085  00858C  5013               	movf	(___lwdiv@divisor+1)^0,w,c
 28086  00858E  5A11               	subwfb	(___lwdiv@dividend+1)^0,f,c
 28087  008590  8014               	bsf	___lwdiv@quotient^0,0,c
 28088  008592                     l13876:
 28089  008592  90D8               	bcf	status,0,c
 28090  008594  3213               	rrcf	(___lwdiv@divisor+1)^0,f,c
 28091  008596  3212               	rrcf	___lwdiv@divisor^0,f,c
 28092  008598  2E16               	decfsz	___lwdiv@counter^0,f,c
 28093  00859A  D7ED               	goto	u13690
 28094  00859C                     l4138:
 28095  00859C  C014  F010         	movff	___lwdiv@quotient,?___lwdiv
 28096  0085A0  C015  F011         	movff	___lwdiv@quotient+1,?___lwdiv+1
 28097  0085A4  0012               	return		;funcret
 28098  0085A6                     __end_of___lwdiv:
 28099                           	callstack 0
 28100                           
 28101 ;; *************** function _getCurrentComparator *****************
 28102 ;; Defined at:
 28103 ;;		line 264 in file "controlCurrent_MC50.c"
 28104 ;; Parameters:    Size  Location     Type
 28105 ;;		None
 28106 ;; Auto vars:     Size  Location     Type
 28107 ;;  x               1   33[COMRAM] unsigned char 
 28108 ;;  tempOffset      2   31[COMRAM] unsigned int 
 28109 ;; Return value:  Size  Location     Type
 28110 ;;                  4   21[COMRAM] unsigned long 
 28111 ;; Registers used:
 28112 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 28113 ;; Tracked objects:
 28114 ;;		On entry : 3F/1
 28115 ;;		On exit  : 3F/1
 28116 ;;		Unchanged: 0/0
 28117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28118 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28119 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28120 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28121 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28122 ;;Total ram usage:       13 bytes
 28123 ;; Hardware stack levels used: 1
 28124 ;; Hardware stack levels required when called: 5
 28125 ;; This function calls:
 28126 ;;		___wmul
 28127 ;; This function is called by:
 28128 ;;		_ControlCurrent
 28129 ;; This function uses a non-reentrant model
 28130 ;;
 28131                           
 28132                           	psect	text123
 28133  005682                     __ptext123:
 28134                           	callstack 0
 28135  005682                     _getCurrentComparator:
 28136                           	callstack 24
 28137                           
 28138                           ; BSR set to: 1
 28139                           ;controlCurrent_MC50.c: 269:     if(ts_system.timeSoftStart>0)
 28140                           
 28141                           ; BSR set to: 1
 28142                           
 28143                           ;incstack = 0
 28144  005682  BFB1               	btfsc	(_ts_system+23)& (0+255),7,b	;volatile
 28145  005684  D00A               	goto	l14442
 28146  005686  51B1               	movf	(_ts_system+23)& (0+255),w,b	;volatile
 28147  005688  E103               	bnz	u14750
 28148  00568A  05B0               	decf	(_ts_system+22)& (0+255),w,b	;volatile
 28149  00568C  A0D8               	btfss	status,0,c
 28150  00568E  D005               	goto	l14442
 28151  005690                     u14750:
 28152                           
 28153                           ; BSR set to: 1
 28154                           ;controlCurrent_MC50.c: 270:     {;controlCurrent_MC50.c: 271:         ts_system.timewai
      +                          tBeforeSoftStart=(1000/50);
 28155  005690  0E00               	movlw	0
 28156  005692  6FD5               	movwf	(_ts_system+59)& (0+255),b	;volatile
 28157  005694  0E14               	movlw	20
 28158  005696  6FD4               	movwf	(_ts_system+58)& (0+255),b	;volatile
 28159  005698  D007               	goto	u14760
 28160  00569A                     l14442:
 28161                           
 28162                           ; BSR set to: 1
 28163  00569A  BFD5               	btfsc	(_ts_system+59)& (0+255),7,b	;volatile
 28164  00569C  D009               	goto	l14446
 28165  00569E  51D5               	movf	(_ts_system+59)& (0+255),w,b	;volatile
 28166  0056A0  E103               	bnz	u14760
 28167  0056A2  05D4               	decf	(_ts_system+58)& (0+255),w,b	;volatile
 28168  0056A4  A0D8               	btfss	status,0,c
 28169  0056A6  D004               	goto	l14446
 28170  0056A8                     u14760:
 28171                           
 28172                           ; BSR set to: 1
 28173                           ;controlCurrent_MC50.c: 276:     {;controlCurrent_MC50.c: 277:         tempOffset=1200;
 28174  0056A8  0E04               	movlw	4
 28175  0056AA  6E21               	movwf	(getCurrentComparator@tempOffset+1)^0,c
 28176  0056AC  0EB0               	movlw	176
 28177  0056AE  D003               	goto	L104
 28178  0056B0                     l14446:
 28179                           
 28180                           ; BSR set to: 1
 28181                           ;controlCurrent_MC50.c: 280:     {;controlCurrent_MC50.c: 281:         tempOffset=0;
 28182  0056B0  0E00               	movlw	0
 28183  0056B2  6E21               	movwf	(getCurrentComparator@tempOffset+1)^0,c
 28184  0056B4  0E00               	movlw	0
 28185  0056B6                     L104:
 28186  0056B6  6E20               	movwf	getCurrentComparator@tempOffset^0,c
 28187                           
 28188                           ; BSR set to: 1
 28189                           ;controlCurrent_MC50.c: 284:     if(powerControl_st.decelarationActive==NO)
 28190  0056B8  517B               	movf	_powerControl_st& (0+255),w,b
 28191  0056BA  A4D8               	btfss	status,2,c
 28192  0056BC  D05B               	goto	l14462
 28193                           
 28194                           ; BSR set to: 1
 28195                           ;controlCurrent_MC50.c: 285:     {;controlCurrent_MC50.c: 286:         if(var_sys.StateM
      +                          otor==InClose)
 28196  0056BE  0E03               	movlw	3
 28197  0056C0  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 28198  0056C2  A4D8               	btfss	status,2,c
 28199  0056C4  D005               	goto	l14452
 28200                           
 28201                           ; BSR set to: 1
 28202                           ;controlCurrent_MC50.c: 287:         {;controlCurrent_MC50.c: 288:             var_sys.A
      +                          ctualComparatorCurrent=var_sys_NVM.learningCurrentNormalClose;
 28203  0056C6  C0C8  F134         	movff	_var_sys_NVM+48,_var_sys+52	;volatile
 28204  0056CA  C0C9  F135         	movff	_var_sys_NVM+49,_var_sys+53	;volatile
 28205  0056CE  D004               	goto	L105
 28206  0056D0                     l14452:
 28207                           
 28208                           ; BSR set to: 1
 28209                           ;controlCurrent_MC50.c: 291:         {;controlCurrent_MC50.c: 292:             var_sys.A
      +                          ctualComparatorCurrent=var_sys_NVM.learningCurrentNormalOpen;
 28210  0056D0  C0CA  F134         	movff	_var_sys_NVM+50,_var_sys+52	;volatile
 28211  0056D4  C0CB  F135         	movff	_var_sys_NVM+51,_var_sys+53	;volatile
 28212  0056D8                     L105:
 28213  0056D8  6B36               	clrf	(_var_sys+54)& (0+255),b	;volatile
 28214  0056DA  6B37               	clrf	(_var_sys+55)& (0+255),b	;volatile
 28215                           
 28216                           ; BSR set to: 1
 28217                           ;controlCurrent_MC50.c: 295:         if(var_sys.ActualComparatorCurrent<=100||(var_sys.A
      +                          ctualComparatorCurrent>(510*30)))
 28218  0056DC  5137               	movf	(_var_sys+55)& (0+255),w,b	;volatile
 28219  0056DE  1136               	iorwf	(_var_sys+54)& (0+255),w,b	;volatile
 28220  0056E0  1135               	iorwf	(_var_sys+53)& (0+255),w,b	;volatile
 28221  0056E2  E104               	bnz	u14790
 28222  0056E4  0E65               	movlw	101
 28223  0056E6  5D34               	subwf	(_var_sys+52)& (0+255),w,b	;volatile
 28224  0056E8  A0D8               	btfss	status,0,c
 28225  0056EA  D009               	goto	u14800
 28226  0056EC                     u14790:
 28227                           
 28228                           ; BSR set to: 1
 28229  0056EC  5137               	movf	(_var_sys+55)& (0+255),w,b	;volatile
 28230  0056EE  1136               	iorwf	(_var_sys+54)& (0+255),w,b	;volatile
 28231  0056F0  E106               	bnz	u14800
 28232  0056F2  0EC5               	movlw	197
 28233  0056F4  5D34               	subwf	(_var_sys+52)& (0+255),w,b	;volatile
 28234  0056F6  0E3B               	movlw	59
 28235  0056F8  5935               	subwfb	(_var_sys+53)& (0+255),w,b	;volatile
 28236  0056FA  A0D8               	btfss	status,0,c
 28237  0056FC  D004               	goto	l1383
 28238  0056FE                     u14800:
 28239                           
 28240                           ; BSR set to: 1
 28241                           ;controlCurrent_MC50.c: 296:         {;controlCurrent_MC50.c: 297:              var_sys.
      +                          ActualComparatorCurrent=(510*30);
 28242  0056FE  0EC4               	movlw	196
 28243  005700  6F34               	movwf	(_var_sys+52)& (0+255),b	;volatile
 28244  005702  0E3B               	movlw	59
 28245  005704  D058               	goto	L107
 28246  005706                     l1383:
 28247                           
 28248                           ; BSR set to: 1
 28249                           ;controlCurrent_MC50.c: 300:         {;controlCurrent_MC50.c: 301:             unsigned 
      +                          char x=var_sys_NVM.motorSensitivity;
 28250  005706  C09B  F022         	movff	_var_sys_NVM+3,getCurrentComparator@x	;volatile
 28251                           
 28252                           ; BSR set to: 1
 28253                           ;controlCurrent_MC50.c: 307:            var_sys.ActualComparatorCurrent=var_sys.ActualCo
      +                          mparatorCurrent+((10*(x*x))+(-200*x)+1300);
 28254  00570A  5022               	movf	getCurrentComparator@x^0,w,c
 28255  00570C  0222               	mulwf	getCurrentComparator@x^0,c
 28256  00570E  CFF3 F010          	movff	prodl,___wmul@multiplier
 28257  005712  CFF4 F011          	movff	prodh,___wmul@multiplier+1
 28258  005716  0E00               	movlw	0
 28259  005718  6E13               	movwf	(___wmul@multiplicand+1)^0,c
 28260  00571A  0E0A               	movlw	10
 28261  00571C  6E12               	movwf	___wmul@multiplicand^0,c
 28262  00571E  EC00  F047         	call	___wmul	;wreg free
 28263  005722  C010  F01A         	movff	?___wmul,??_getCurrentComparator
 28264  005726  C011  F01B         	movff	?___wmul+1,??_getCurrentComparator+1
 28265  00572A  C022  F010         	movff	getCurrentComparator@x,___wmul@multiplier
 28266  00572E  6A11               	clrf	(___wmul@multiplier+1)^0,c
 28267  005730  0EFF               	movlw	255
 28268  005732  6E13               	movwf	(___wmul@multiplicand+1)^0,c
 28269  005734  0E38               	movlw	56
 28270  005736  6E12               	movwf	___wmul@multiplicand^0,c
 28271  005738  EC00  F047         	call	___wmul	;wreg free
 28272  00573C  5010               	movf	?___wmul^0,w,c
 28273  00573E  261A               	addwf	??_getCurrentComparator^0,f,c
 28274  005740  5011               	movf	(?___wmul+1)^0,w,c
 28275  005742  221B               	addwfc	(??_getCurrentComparator+1)^0,f,c
 28276  005744  0E14               	movlw	20
 28277  005746  241A               	addwf	??_getCurrentComparator^0,w,c
 28278  005748  6E1C               	movwf	(??_getCurrentComparator+2)^0,c
 28279  00574A  0E05               	movlw	5
 28280  00574C  201B               	addwfc	(??_getCurrentComparator+1)^0,w,c
 28281  00574E  6E1D               	movwf	(??_getCurrentComparator+3)^0,c
 28282  005750  6A1E               	clrf	(??_getCurrentComparator+4)^0,c
 28283  005752  BE1D               	btfsc	(??_getCurrentComparator+3)^0,7,c
 28284  005754  061E               	decf	(??_getCurrentComparator+4)^0,f,c
 28285  005756  501E               	movf	(??_getCurrentComparator+4)^0,w,c
 28286  005758  6E1F               	movwf	(??_getCurrentComparator+5)^0,c
 28287  00575A  0101               	movlb	1	; () banked
 28288  00575C  5134               	movf	(_var_sys+52)& (0+255),w,b	;volatile
 28289  00575E  241C               	addwf	(??_getCurrentComparator+2)^0,w,c
 28290  005760  6F34               	movwf	(_var_sys+52)& (0+255),b	;volatile
 28291  005762  5135               	movf	(_var_sys+53)& (0+255),w,b	;volatile
 28292  005764  201D               	addwfc	(??_getCurrentComparator+3)^0,w,c
 28293  005766  6F35               	movwf	(_var_sys+53)& (0+255),b	;volatile
 28294  005768  5136               	movf	(_var_sys+54)& (0+255),w,b	;volatile
 28295  00576A  201E               	addwfc	(??_getCurrentComparator+4)^0,w,c
 28296  00576C  6F36               	movwf	(_var_sys+54)& (0+255),b	;volatile
 28297  00576E  5137               	movf	(_var_sys+55)& (0+255),w,b	;volatile
 28298  005770  201F               	addwfc	(??_getCurrentComparator+5)^0,w,c
 28299  005772  D046               	goto	L106
 28300  005774                     l14462:
 28301                           
 28302                           ; BSR set to: 1
 28303                           ;controlCurrent_MC50.c: 311:     {;controlCurrent_MC50.c: 312:         if(var_sys.StateM
      +                          otor==InClose)
 28304  005774  0E03               	movlw	3
 28305  005776  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 28306  005778  A4D8               	btfss	status,2,c
 28307  00577A  D009               	goto	l1388
 28308                           
 28309                           ; BSR set to: 1
 28310                           ;controlCurrent_MC50.c: 313:         {;controlCurrent_MC50.c: 314:             var_sys.A
      +                          ctualComparatorCurrent=var_sys_NVM.learningCurrentDecelarationClose;
 28311  00577C  C0C0  F134         	movff	_var_sys_NVM+40,_var_sys+52	;volatile
 28312  005780  C0C1  F135         	movff	_var_sys_NVM+41,_var_sys+53	;volatile
 28313  005784  C0C2  F136         	movff	_var_sys_NVM+42,_var_sys+54	;volatile
 28314  005788  C0C3  F137         	movff	_var_sys_NVM+43,_var_sys+55	;volatile
 28315                           
 28316                           ;controlCurrent_MC50.c: 315:         }
 28317  00578C  D008               	goto	l14466
 28318  00578E                     l1388:
 28319                           
 28320                           ; BSR set to: 1
 28321                           ;controlCurrent_MC50.c: 317:         {;controlCurrent_MC50.c: 318:             var_sys.A
      +                          ctualComparatorCurrent=var_sys_NVM.learningCurrentDecelarationOpen ;
 28322  00578E  C0C4  F134         	movff	_var_sys_NVM+44,_var_sys+52	;volatile
 28323  005792  C0C5  F135         	movff	_var_sys_NVM+45,_var_sys+53	;volatile
 28324  005796  C0C6  F136         	movff	_var_sys_NVM+46,_var_sys+54	;volatile
 28325  00579A  C0C7  F137         	movff	_var_sys_NVM+47,_var_sys+55	;volatile
 28326  00579E                     l14466:
 28327                           
 28328                           ; BSR set to: 1
 28329                           ;controlCurrent_MC50.c: 321:         if(var_sys.ActualComparatorCurrent<=5000)
 28330  00579E  5137               	movf	(_var_sys+55)& (0+255),w,b	;volatile
 28331  0057A0  1136               	iorwf	(_var_sys+54)& (0+255),w,b	;volatile
 28332  0057A2  E10E               	bnz	l14470
 28333  0057A4  0E89               	movlw	137
 28334  0057A6  5D34               	subwf	(_var_sys+52)& (0+255),w,b	;volatile
 28335  0057A8  0E13               	movlw	19
 28336  0057AA  5935               	subwfb	(_var_sys+53)& (0+255),w,b	;volatile
 28337  0057AC  B0D8               	btfsc	status,0,c
 28338  0057AE  D008               	goto	l14470
 28339                           
 28340                           ; BSR set to: 1
 28341                           ;controlCurrent_MC50.c: 322:         {;controlCurrent_MC50.c: 323:             var_sys.A
      +                          ctualComparatorCurrent=5000;
 28342  0057B0  0E88               	movlw	136
 28343  0057B2  6F34               	movwf	(_var_sys+52)& (0+255),b	;volatile
 28344  0057B4  0E13               	movlw	19
 28345  0057B6                     L107:
 28346  0057B6  6F35               	movwf	(_var_sys+53)& (0+255),b	;volatile
 28347  0057B8  0E00               	movlw	0
 28348  0057BA  6F36               	movwf	(_var_sys+54)& (0+255),b	;volatile
 28349  0057BC  0E00               	movlw	0
 28350  0057BE  D020               	goto	L106
 28351  0057C0                     l14470:
 28352                           
 28353                           ; BSR set to: 1
 28354                           ;controlCurrent_MC50.c: 326:         {;controlCurrent_MC50.c: 327:             var_sys.A
      +                          ctualComparatorCurrent=var_sys.ActualComparatorCurrent-(1200 +(500*(10-var_sys_NVM.decel
      +                          arationSensivity)));
 28355  0057C0  C0A7  F010         	movff	_var_sys_NVM+15,___wmul@multiplier	;volatile
 28356  0057C4  6A11               	clrf	(___wmul@multiplier+1)^0,c
 28357  0057C6  0EFE               	movlw	254
 28358  0057C8  6E13               	movwf	(___wmul@multiplicand+1)^0,c
 28359  0057CA  0E0C               	movlw	12
 28360  0057CC  6E12               	movwf	___wmul@multiplicand^0,c
 28361  0057CE  EC00  F047         	call	___wmul	;wreg free
 28362  0057D2  0E38               	movlw	56
 28363  0057D4  2410               	addwf	?___wmul^0,w,c
 28364  0057D6  6E1A               	movwf	??_getCurrentComparator^0,c
 28365  0057D8  0E18               	movlw	24
 28366  0057DA  2011               	addwfc	(?___wmul+1)^0,w,c
 28367  0057DC  6E1B               	movwf	(??_getCurrentComparator+1)^0,c
 28368  0057DE  6A1C               	clrf	(??_getCurrentComparator+2)^0,c
 28369  0057E0  BE1B               	btfsc	(??_getCurrentComparator+1)^0,7,c
 28370  0057E2  061C               	decf	(??_getCurrentComparator+2)^0,f,c
 28371  0057E4  501C               	movf	(??_getCurrentComparator+2)^0,w,c
 28372  0057E6  6E1D               	movwf	(??_getCurrentComparator+3)^0,c
 28373  0057E8  501A               	movf	??_getCurrentComparator^0,w,c
 28374  0057EA  0101               	movlb	1	; () banked
 28375  0057EC  5D34               	subwf	(_var_sys+52)& (0+255),w,b	;volatile
 28376  0057EE  6F34               	movwf	(_var_sys+52)& (0+255),b	;volatile
 28377  0057F0  501B               	movf	(??_getCurrentComparator+1)^0,w,c
 28378  0057F2  5935               	subwfb	(_var_sys+53)& (0+255),w,b	;volatile
 28379  0057F4  6F35               	movwf	(_var_sys+53)& (0+255),b	;volatile
 28380  0057F6  501C               	movf	(??_getCurrentComparator+2)^0,w,c
 28381  0057F8  5936               	subwfb	(_var_sys+54)& (0+255),w,b	;volatile
 28382  0057FA  6F36               	movwf	(_var_sys+54)& (0+255),b	;volatile
 28383  0057FC  501D               	movf	(??_getCurrentComparator+3)^0,w,c
 28384  0057FE  5937               	subwfb	(_var_sys+55)& (0+255),w,b	;volatile
 28385  005800                     L106:
 28386  005800  6F37               	movwf	(_var_sys+55)& (0+255),b	;volatile
 28387                           
 28388                           ; BSR set to: 1
 28389                           ;controlCurrent_MC50.c: 332:     return var_sys.ActualComparatorCurrent+tempOffset;
 28390  005802  5020               	movf	getCurrentComparator@tempOffset^0,w,c
 28391  005804  2534               	addwf	(_var_sys+52)& (0+255),w,b	;volatile
 28392  005806  6E16               	movwf	?_getCurrentComparator^0,c
 28393  005808  5021               	movf	(getCurrentComparator@tempOffset+1)^0,w,c
 28394  00580A  2135               	addwfc	(_var_sys+53)& (0+255),w,b	;volatile
 28395  00580C  6E17               	movwf	(?_getCurrentComparator+1)^0,c
 28396  00580E  0E00               	movlw	0
 28397  005810  2136               	addwfc	(_var_sys+54)& (0+255),w,b	;volatile
 28398  005812  6E18               	movwf	(?_getCurrentComparator+2)^0,c
 28399  005814  0E00               	movlw	0
 28400  005816  2137               	addwfc	(_var_sys+55)& (0+255),w,b	;volatile
 28401  005818  6E19               	movwf	(?_getCurrentComparator+3)^0,c
 28402                           
 28403                           ; BSR set to: 1
 28404  00581A  0012               	return		;funcret
 28405  00581C                     __end_of_getCurrentComparator:
 28406                           	callstack 0
 28407                           
 28408 ;; *************** function ___wmul *****************
 28409 ;; Defined at:
 28410 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\Umul16.c"
 28411 ;; Parameters:    Size  Location     Type
 28412 ;;  multiplier      2   15[COMRAM] unsigned int 
 28413 ;;  multiplicand    2   17[COMRAM] unsigned int 
 28414 ;; Auto vars:     Size  Location     Type
 28415 ;;  product         2   19[COMRAM] unsigned int 
 28416 ;; Return value:  Size  Location     Type
 28417 ;;                  2   15[COMRAM] unsigned int 
 28418 ;; Registers used:
 28419 ;;		wreg, status,2, status,0, prodl, prodh
 28420 ;; Tracked objects:
 28421 ;;		On entry : 0/0
 28422 ;;		On exit  : 0/0
 28423 ;;		Unchanged: 0/0
 28424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28425 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28426 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28428 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28429 ;;Total ram usage:        6 bytes
 28430 ;; Hardware stack levels used: 1
 28431 ;; Hardware stack levels required when called: 4
 28432 ;; This function calls:
 28433 ;;		Nothing
 28434 ;; This function is called by:
 28435 ;;		_getCurrentComparator
 28436 ;;		_getHopCode
 28437 ;; This function uses a non-reentrant model
 28438 ;;
 28439                           
 28440                           	psect	text124
 28441  008E00                     __ptext124:
 28442                           	callstack 0
 28443  008E00                     ___wmul:
 28444                           	callstack 22
 28445                           
 28446                           ; BSR set to: 1
 28447                           ;incstack = 0
 28448  008E00  5010               	movf	___wmul@multiplier^0,w,c
 28449  008E02  0212               	mulwf	___wmul@multiplicand^0,c
 28450  008E04  CFF3 F014          	movff	prodl,___wmul@product
 28451  008E08  CFF4 F015          	movff	prodh,___wmul@product+1
 28452  008E0C  5010               	movf	___wmul@multiplier^0,w,c
 28453  008E0E  0213               	mulwf	(___wmul@multiplicand+1)^0,c
 28454  008E10  50F3               	movf	243,w,c
 28455  008E12  2615               	addwf	(___wmul@product+1)^0,f,c
 28456  008E14  5011               	movf	(___wmul@multiplier+1)^0,w,c
 28457  008E16  0212               	mulwf	___wmul@multiplicand^0,c
 28458  008E18  50F3               	movf	243,w,c
 28459  008E1A  2615               	addwf	(___wmul@product+1)^0,f,c
 28460  008E1C  C014  F010         	movff	___wmul@product,?___wmul
 28461  008E20  C015  F011         	movff	___wmul@product+1,?___wmul+1
 28462  008E24  0012               	return		;funcret
 28463  008E26                     __end_of___wmul:
 28464                           	callstack 0
 28465                           
 28466 ;; *************** function _GetMotorPower *****************
 28467 ;; Defined at:
 28468 ;;		line 405 in file "outputs_MC50.c"
 28469 ;; Parameters:    Size  Location     Type
 28470 ;;		None
 28471 ;; Auto vars:     Size  Location     Type
 28472 ;;  defineatraso    1   18[COMRAM] unsigned char 
 28473 ;; Return value:  Size  Location     Type
 28474 ;;                  1    wreg      unsigned char 
 28475 ;; Registers used:
 28476 ;;		wreg, status,2, status,0, prodl, prodh
 28477 ;; Tracked objects:
 28478 ;;		On entry : 3E/1
 28479 ;;		On exit  : 3F/1
 28480 ;;		Unchanged: 0/0
 28481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28482 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28483 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28484 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28485 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28486 ;;Total ram usage:        4 bytes
 28487 ;; Hardware stack levels used: 1
 28488 ;; Hardware stack levels required when called: 4
 28489 ;; This function calls:
 28490 ;;		Nothing
 28491 ;; This function is called by:
 28492 ;;		_ControlCurrent
 28493 ;;		_InitSoftStart
 28494 ;;		_InitSoftStop
 28495 ;; This function uses a non-reentrant model
 28496 ;;
 28497                           
 28498                           	psect	text125
 28499  006F36                     __ptext125:
 28500                           	callstack 0
 28501  006F36                     _GetMotorPower:
 28502                           	callstack 22
 28503                           
 28504                           ;outputs_MC50.c: 408:     unsigned char defineatraso;;outputs_MC50.c: 413:     if(powerC
      +                          ontrol_st.decelarationActive==YES)
 28505                           
 28506                           ;incstack = 0
 28507  006F36  0101               	movlb	1	; () banked
 28508  006F38  057B               	decf	_powerControl_st& (0+255),w,b
 28509  006F3A  A4D8               	btfss	status,2,c
 28510  006F3C  D006               	goto	l19332
 28511                           
 28512                           ; BSR set to: 1
 28513                           ;outputs_MC50.c: 414:     {;outputs_MC50.c: 415:        temppower=(var_sys_NVM.motorPowe
      +                          r*6);
 28514  006F3E  0100               	movlb	0	; () banked
 28515  006F40  519A               	movf	(_var_sys_NVM+2)& (0+255),w,b	;volatile
 28516  006F42  0D06               	mullw	6
 28517  006F44  CFF3 F18E          	movff	prodl,_temppower
 28518                           
 28519                           ;outputs_MC50.c: 416:     }
 28520  006F48  D043               	goto	l2235
 28521  006F4A                     l19332:
 28522                           
 28523                           ; BSR set to: 1
 28524                           ;outputs_MC50.c: 418:     {;outputs_MC50.c: 419:         fullmotorPower=(var_sys_NVM.mot
      +                          orPower*6);
 28525  006F4A  0100               	movlb	0	; () banked
 28526  006F4C  519A               	movf	(_var_sys_NVM+2)& (0+255),w,b	;volatile
 28527  006F4E  0D06               	mullw	6
 28528  006F50  CFF3 F082          	movff	prodl,_fullmotorPower
 28529                           
 28530                           ; BSR set to: 0
 28531                           ;outputs_MC50.c: 421:         if(var_sys.velocityFactor>0)
 28532  006F54  0101               	movlb	1	; () banked
 28533  006F56  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 28534  006F58  D01C               	goto	l19342
 28535  006F5A  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 28536  006F5C  E103               	bnz	u22050
 28537  006F5E  050E               	decf	(_var_sys+14)& (0+255),w,b	;volatile
 28538  006F60  A0D8               	btfss	status,0,c
 28539  006F62  D017               	goto	l19342
 28540  006F64                     u22050:
 28541                           
 28542                           ; BSR set to: 1
 28543                           ;outputs_MC50.c: 422:         {;outputs_MC50.c: 423:             if(var_sys.velocityFact
      +                          or>fullmotorPower)
 28544  006F64  0100               	movlb	0	; () banked
 28545  006F66  5182               	movf	_fullmotorPower& (0+255),w,b
 28546  006F68  6E10               	movwf	??_GetMotorPower^0,c
 28547  006F6A  6A11               	clrf	(??_GetMotorPower+1)^0,c
 28548  006F6C  0101               	movlb	1	; () banked
 28549  006F6E  510E               	movf	(_var_sys+14)& (0+255),w,b	;volatile
 28550  006F70  5C10               	subwf	??_GetMotorPower^0,w,c
 28551  006F72  5011               	movf	(??_GetMotorPower+1)^0,w,c
 28552  006F74  0A80               	xorlw	128
 28553  006F76  6E12               	movwf	(??_GetMotorPower+2)^0,c
 28554  006F78  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 28555  006F7A  0A80               	xorlw	128
 28556  006F7C  5812               	subwfb	(??_GetMotorPower+2)^0,w,c
 28557  006F7E  B0D8               	btfsc	status,0,c
 28558  006F80  D002               	goto	l19340
 28559                           
 28560                           ; BSR set to: 1
 28561                           ;outputs_MC50.c: 424:             {;outputs_MC50.c: 425:                 temppower=1;
 28562  006F82  0E01               	movlw	1
 28563  006F84  D004               	goto	L109
 28564  006F86                     l19340:
 28565                           
 28566                           ; BSR set to: 1
 28567                           ;outputs_MC50.c: 428:             {;outputs_MC50.c: 430:                 temppower =full
      +                          motorPower-var_sys.velocityFactor;
 28568  006F86  510E               	movf	(_var_sys+14)& (0+255),w,b	;volatile
 28569  006F88  0100               	movlb	0	; () banked
 28570  006F8A  5D82               	subwf	_fullmotorPower& (0+255),w,b
 28571  006F8C  D017               	goto	L110
 28572  006F8E                     L109:
 28573  006F8E  6F8E               	movwf	_temppower& (0+255),b
 28574  006F90  D01F               	goto	l2235
 28575  006F92                     l19342:
 28576                           
 28577                           ; BSR set to: 1
 28578  006F92  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 28579  006F94  D005               	goto	u22070
 28580  006F96  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 28581  006F98  E113               	bnz	l19352
 28582  006F9A  050E               	decf	(_var_sys+14)& (0+255),w,b	;volatile
 28583  006F9C  B0D8               	btfsc	status,0,c
 28584  006F9E  D010               	goto	l19352
 28585  006FA0                     u22070:
 28586                           
 28587                           ; BSR set to: 1
 28588  006FA0  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 28589  006FA2  D005               	goto	u22080
 28590  006FA4  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 28591  006FA6  E10C               	bnz	l19352
 28592  006FA8  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 28593  006FAA  B0D8               	btfsc	status,0,c
 28594  006FAC  D009               	goto	l19352
 28595  006FAE                     u22080:
 28596                           
 28597                           ; BSR set to: 1
 28598                           ;outputs_MC50.c: 434:         {;outputs_MC50.c: 435:             temppower =fullmotorPow
      +                          er;
 28599  006FAE  C082  F18E         	movff	_fullmotorPower,_temppower
 28600                           
 28601                           ; BSR set to: 1
 28602                           ;outputs_MC50.c: 438:             if ( var_sys_NVM.motorPower>8 )
 28603  006FB2  0E08               	movlw	8
 28604  006FB4  0100               	movlb	0	; () banked
 28605  006FB6  659A               	cpfsgt	(_var_sys_NVM+2)& (0+255),b	;volatile
 28606  006FB8  D00B               	goto	l2235
 28607                           
 28608                           ; BSR set to: 0
 28609                           ;outputs_MC50.c: 439:             {;outputs_MC50.c: 440:                 temppower = 80 
      +                          -23 +1;
 28610  006FBA  0E3A               	movlw	58
 28611  006FBC                     L110:
 28612  006FBC  0101               	movlb	1	; () banked
 28613  006FBE  D7E7               	goto	L109
 28614  006FC0                     l19352:
 28615                           
 28616                           ; BSR set to: 1
 28617  006FC0  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 28618  006FC2  D006               	goto	l2235
 28619  006FC4  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 28620  006FC6  E102               	bnz	u22100
 28621  006FC8  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 28622  006FCA  B0D8               	btfsc	status,0,c
 28623  006FCC                     u22100:
 28624                           
 28625                           ; BSR set to: 1
 28626                           ;outputs_MC50.c: 447:                 temppower = var_sys.velocityFactorstop;
 28627  006FCC  C110  F18E         	movff	_var_sys+16,_temppower	;volatile
 28628  006FD0                     l2235:
 28629                           
 28630                           ;outputs_MC50.c: 451:     if ((var_sys.velocityFactorstop > 0)&&(var_sys.velocityFactor 
      +                          <= 0 )){
 28631  006FD0  0101               	movlb	1	; () banked
 28632  006FD2  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 28633  006FD4  D00E               	goto	l19362
 28634  006FD6  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 28635  006FD8  E103               	bnz	u22110
 28636  006FDA  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 28637  006FDC  A0D8               	btfss	status,0,c
 28638  006FDE  D009               	goto	l19362
 28639  006FE0                     u22110:
 28640                           
 28641                           ; BSR set to: 1
 28642  006FE0  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 28643  006FE2  D005               	goto	u22120
 28644  006FE4  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 28645  006FE6  E105               	bnz	l19362
 28646  006FE8  050E               	decf	(_var_sys+14)& (0+255),w,b	;volatile
 28647  006FEA  B0D8               	btfsc	status,0,c
 28648  006FEC  D002               	goto	l19362
 28649  006FEE                     u22120:
 28650                           
 28651                           ; BSR set to: 1
 28652                           ;outputs_MC50.c: 452:     defineatraso = 5;
 28653  006FEE  0E05               	movlw	5
 28654  006FF0  D001               	goto	L108
 28655  006FF2                     l19362:
 28656                           
 28657                           ; BSR set to: 1
 28658                           ;outputs_MC50.c: 455:     {;outputs_MC50.c: 456:     defineatraso = 23;
 28659  006FF2  0E17               	movlw	23
 28660  006FF4                     L108:
 28661  006FF4  6E13               	movwf	GetMotorPower@defineatraso^0,c
 28662                           
 28663                           ; BSR set to: 1
 28664                           ;outputs_MC50.c: 459:     return temppower+defineatraso;
 28665  006FF6  518E               	movf	_temppower& (0+255),w,b
 28666  006FF8  2413               	addwf	GetMotorPower@defineatraso^0,w,c
 28667                           
 28668                           ; BSR set to: 1
 28669  006FFA  0012               	return		;funcret
 28670  006FFC                     __end_of_GetMotorPower:
 28671                           	callstack 0
 28672                           
 28673 ;; *************** function _ControlCounterMoves *****************
 28674 ;; Defined at:
 28675 ;;		line 293 in file "controlMemory_MC50.c"
 28676 ;; Parameters:    Size  Location     Type
 28677 ;;		None
 28678 ;; Auto vars:     Size  Location     Type
 28679 ;;		None
 28680 ;; Return value:  Size  Location     Type
 28681 ;;                  1    wreg      void 
 28682 ;; Registers used:
 28683 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28684 ;; Tracked objects:
 28685 ;;		On entry : 3E/1
 28686 ;;		On exit  : 0/0
 28687 ;;		Unchanged: 0/0
 28688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28692 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28693 ;;Total ram usage:        0 bytes
 28694 ;; Hardware stack levels used: 1
 28695 ;; Hardware stack levels required when called: 14
 28696 ;; This function calls:
 28697 ;;		_SaveNVM_VarSystem
 28698 ;; This function is called by:
 28699 ;;		_main
 28700 ;; This function uses a non-reentrant model
 28701 ;;
 28702                           
 28703                           	psect	text126
 28704  00834C                     __ptext126:
 28705                           	callstack 0
 28706  00834C                     _ControlCounterMoves:
 28707                           	callstack 16
 28708                           
 28709                           ;controlMemory_MC50.c: 296:     if(ts_system.timeBetweenSaveCounters<=0)
 28710                           
 28711                           ; BSR set to: 1
 28712                           ;incstack = 0
 28713  00834C  0101               	movlb	1	; () banked
 28714  00834E  BFC1               	btfsc	(_ts_system+39)& (0+255),7,b	;volatile
 28715  008350  D005               	goto	u27480
 28716  008352  51C1               	movf	(_ts_system+39)& (0+255),w,b	;volatile
 28717  008354  E127               	bnz	l1486
 28718  008356  05C0               	decf	(_ts_system+38)& (0+255),w,b	;volatile
 28719  008358  B0D8               	btfsc	status,0,c
 28720  00835A  0012               	return	
 28721  00835C                     u27480:
 28722                           
 28723                           ; BSR set to: 1
 28724                           ;controlMemory_MC50.c: 297:     {;controlMemory_MC50.c: 298:        ts_system.timeBetwee
      +                          nSaveCounters=((1000/50)*60)*5;
 28725  00835C  0E17               	movlw	23
 28726  00835E  6FC1               	movwf	(_ts_system+39)& (0+255),b	;volatile
 28727  008360  0E70               	movlw	112
 28728  008362  6FC0               	movwf	(_ts_system+38)& (0+255),b	;volatile
 28729                           
 28730                           ; BSR set to: 1
 28731                           ;controlMemory_MC50.c: 300:        if(var_sys.actualCounterMoves!=var_sys_NVM.counterMov
      +                          es)
 28732  008364  0100               	movlb	0	; () banked
 28733  008366  51BA               	movf	(_var_sys_NVM+34)& (0+255),w,b	;volatile
 28734  008368  0101               	movlb	1	; () banked
 28735  00836A  193C               	xorwf	(_var_sys+60)& (0+255),w,b	;volatile
 28736  00836C  E110               	bnz	u27490
 28737  00836E  0100               	movlb	0	; () banked
 28738  008370  51BB               	movf	(_var_sys_NVM+35)& (0+255),w,b	;volatile
 28739  008372  0101               	movlb	1	; () banked
 28740  008374  193D               	xorwf	(_var_sys+61)& (0+255),w,b	;volatile
 28741  008376  E10B               	bnz	u27490
 28742  008378  0100               	movlb	0	; () banked
 28743  00837A  51BC               	movf	(_var_sys_NVM+36)& (0+255),w,b	;volatile
 28744  00837C  0101               	movlb	1	; () banked
 28745  00837E  193E               	xorwf	(_var_sys+62)& (0+255),w,b	;volatile
 28746  008380  E106               	bnz	u27490
 28747  008382  0100               	movlb	0	; () banked
 28748  008384  51BD               	movf	(_var_sys_NVM+37)& (0+255),w,b	;volatile
 28749  008386  0101               	movlb	1	; () banked
 28750  008388  193F               	xorwf	(_var_sys+63)& (0+255),w,b	;volatile
 28751  00838A  B4D8               	btfsc	status,2,c
 28752  00838C  0012               	return	
 28753  00838E                     u27490:
 28754                           
 28755                           ; BSR set to: 1
 28756                           ;controlMemory_MC50.c: 301:        {;controlMemory_MC50.c: 302:            var_sys_NVM.c
      +                          ounterMoves=var_sys.actualCounterMoves;
 28757  00838E  C13C  F0BA         	movff	_var_sys+60,_var_sys_NVM+34	;volatile
 28758  008392  C13D  F0BB         	movff	_var_sys+61,_var_sys_NVM+35	;volatile
 28759  008396  C13E  F0BC         	movff	_var_sys+62,_var_sys_NVM+36	;volatile
 28760  00839A  C13F  F0BD         	movff	_var_sys+63,_var_sys_NVM+37	;volatile
 28761                           
 28762                           ; BSR set to: 1
 28763                           ;controlMemory_MC50.c: 303:            SaveNVM_VarSystem(pageMemoryCounters);
 28764  00839E  0E02               	movlw	2
 28765  0083A0  ECFD  F044         	call	_SaveNVM_VarSystem
 28766  0083A4                     l1486:
 28767  0083A4  0012               	return		;funcret
 28768  0083A6                     __end_of_ControlCounterMoves:
 28769                           	callstack 0
 28770                           
 28771 ;; *************** function _SaveNVM_VarSystem *****************
 28772 ;; Defined at:
 28773 ;;		line 175 in file "controlMemory_MC50.c"
 28774 ;; Parameters:    Size  Location     Type
 28775 ;;  page            1    wreg     unsigned char 
 28776 ;; Auto vars:     Size  Location     Type
 28777 ;;  page            1    0[BANK0 ] unsigned char 
 28778 ;;  tempAdd         2    1[BANK0 ] unsigned int 
 28779 ;;  point           1    3[BANK0 ] PTR unsigned char 
 28780 ;;		 -> var_sys_NVM(64), 
 28781 ;; Return value:  Size  Location     Type
 28782 ;;                  1    wreg      void 
 28783 ;; Registers used:
 28784 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28785 ;; Tracked objects:
 28786 ;;		On entry : 0/0
 28787 ;;		On exit  : 0/0
 28788 ;;		Unchanged: 0/0
 28789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28791 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28793 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28794 ;;Total ram usage:        4 bytes
 28795 ;; Hardware stack levels used: 1
 28796 ;; Hardware stack levels required when called: 13
 28797 ;; This function calls:
 28798 ;;		_i2c_writeNBytes
 28799 ;; This function is called by:
 28800 ;;		_loadNVM_VarSystem
 28801 ;;		_ResetDefaultMemory
 28802 ;;		_ControlCounterMoves
 28803 ;;		_checkNVM_VarSystem
 28804 ;;		_sm_execute_ControlLearning
 28805 ;;		_sm_execute_menuConfiguration
 28806 ;;		_setValueToEdit
 28807 ;;		_controlSelectRemote
 28808 ;;		_eusartparser
 28809 ;; This function uses a non-reentrant model
 28810 ;;
 28811                           
 28812                           	psect	text127
 28813  0089FA                     __ptext127:
 28814                           	callstack 0
 28815  0089FA                     _SaveNVM_VarSystem:
 28816                           	callstack 14
 28817                           
 28818                           ;incstack = 0
 28819                           ;SaveNVM_VarSystem@page stored from wreg
 28820  0089FA  0100               	movlb	0	; () banked
 28821  0089FC  6FD8               	movwf	SaveNVM_VarSystem@page& (0+255),b
 28822                           
 28823                           ;controlMemory_MC50.c: 175: void SaveNVM_VarSystem(unsigned char page);controlMemory_MC5
      +                          0.c: 176: {;controlMemory_MC50.c: 177:     unsigned int tempAdd=page*16;
 28824  0089FE  0100               	movlb	0	; () banked
 28825  008A00  51D8               	movf	SaveNVM_VarSystem@page& (0+255),w,b
 28826  008A02  0D10               	mullw	16
 28827  008A04  CFF3 F0D9          	movff	prodl,SaveNVM_VarSystem@tempAdd
 28828  008A08  CFF4 F0DA          	movff	prodh,SaveNVM_VarSystem@tempAdd+1
 28829                           
 28830                           ; BSR set to: 0
 28831                           ;controlMemory_MC50.c: 178:     char* point=(char*)&var_sys_NVM;
 28832  008A0C  0E98               	movlw	low _var_sys_NVM
 28833  008A0E  6FDB               	movwf	SaveNVM_VarSystem@point& (0+255),b
 28834                           
 28835                           ; BSR set to: 0
 28836                           ;controlMemory_MC50.c: 179:     point=point+tempAdd;
 28837  008A10  51DB               	movf	SaveNVM_VarSystem@point& (0+255),w,b
 28838  008A12  25D9               	addwf	SaveNVM_VarSystem@tempAdd& (0+255),w,b
 28839  008A14  6FDB               	movwf	SaveNVM_VarSystem@point& (0+255),b
 28840                           
 28841                           ; BSR set to: 0
 28842                           ;controlMemory_MC50.c: 180:    i2c_writeNBytes(0x50, tempAdd, point, 16);
 28843  008A16  C0D9  F022         	movff	SaveNVM_VarSystem@tempAdd,i2c_writeNBytes@reg
 28844  008A1A  C0DA  F023         	movff	SaveNVM_VarSystem@tempAdd+1,i2c_writeNBytes@reg+1
 28845  008A1E  C0DB  F024         	movff	SaveNVM_VarSystem@point,i2c_writeNBytes@data
 28846  008A22  0E00               	movlw	0
 28847  008A24  6E26               	movwf	(i2c_writeNBytes@len+1)^0,c
 28848  008A26  0E10               	movlw	16
 28849  008A28  6E25               	movwf	i2c_writeNBytes@len^0,c
 28850  008A2A  0E50               	movlw	80
 28851  008A2C  EC07  F03F         	call	_i2c_writeNBytes
 28852  008A30  0012               	return		;funcret
 28853  008A32                     __end_of_SaveNVM_VarSystem:
 28854                           	callstack 0
 28855                           
 28856 ;; *************** function _i2c_writeNBytes *****************
 28857 ;; Defined at:
 28858 ;;		line 50 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 28859 ;; Parameters:    Size  Location     Type
 28860 ;;  address         1    wreg     unsigned char 
 28861 ;;  reg             2   33[COMRAM] unsigned short 
 28862 ;;  data            1   35[COMRAM] PTR void 
 28863 ;;		 -> RemoveSerial@tempSerial(4), saveNewSerial@tempSerial(4), var_sys_NVM(64), 
 28864 ;;  len             2   36[COMRAM] unsigned int 
 28865 ;; Auto vars:     Size  Location     Type
 28866 ;;  address         1   56[COMRAM] unsigned char 
 28867 ;;  dat            17   39[COMRAM] unsigned char [17]
 28868 ;; Return value:  Size  Location     Type
 28869 ;;                  1    wreg      void 
 28870 ;; Registers used:
 28871 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28872 ;; Tracked objects:
 28873 ;;		On entry : 3F/0
 28874 ;;		On exit  : 0/0
 28875 ;;		Unchanged: 0/0
 28876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28877 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28878 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28879 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28880 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28881 ;;Total ram usage:       24 bytes
 28882 ;; Hardware stack levels used: 1
 28883 ;; Hardware stack levels required when called: 12
 28884 ;; This function calls:
 28885 ;;		_I2C1_Close
 28886 ;;		_I2C1_MasterWrite
 28887 ;;		_I2C1_Open
 28888 ;;		_I2C1_SetAddressNackCallback
 28889 ;;		_I2C1_SetBuffer
 28890 ;;		_memcpy
 28891 ;; This function is called by:
 28892 ;;		_saveNewSerial
 28893 ;;		_RemoveSerial
 28894 ;;		_SaveNVM_VarSystem
 28895 ;; This function uses a non-reentrant model
 28896 ;;
 28897                           
 28898                           	psect	text128
 28899  007E0E                     __ptext128:
 28900                           	callstack 0
 28901  007E0E                     _i2c_writeNBytes:
 28902                           	callstack 14
 28903                           
 28904                           ;incstack = 0
 28905                           ;i2c_writeNBytes@address stored from wreg
 28906  007E0E  6E39               	movwf	i2c_writeNBytes@address^0,c
 28907                           
 28908                           ;mcc_generated_files/drivers/i2c_simple_master.c: 50: void i2c_writeNBytes(i2c1_address_
      +                          t address, uint16_t reg, void* data, size_t len);mcc_generated_files/drivers/i2c_simple_
      +                          master.c: 51: {;mcc_generated_files/drivers/i2c_simple_master.c: 52:     uint8_t dat[17]
      +                          ;;mcc_generated_files/drivers/i2c_simple_master.c: 53:     dat[0] = reg;
 28909  007E10  C022  F028         	movff	i2c_writeNBytes@reg,i2c_writeNBytes@dat
 28910                           
 28911                           ;mcc_generated_files/drivers/i2c_simple_master.c: 54:     memcpy(dat + 1, data, len);
 28912  007E14  0E29               	movlw	low (i2c_writeNBytes@dat+1)
 28913  007E16  6E10               	movwf	memcpy@d1^0,c
 28914  007E18  6A11               	clrf	(memcpy@d1+1)^0,c
 28915  007E1A  C024  F012         	movff	i2c_writeNBytes@data,memcpy@s1
 28916  007E1E  6A13               	clrf	(memcpy@s1+1)^0,c
 28917  007E20  C025  F014         	movff	i2c_writeNBytes@len,memcpy@n
 28918  007E24  C026  F015         	movff	i2c_writeNBytes@len+1,memcpy@n+1
 28919  007E28  ECFF  F043         	call	_memcpy	;wreg free
 28920  007E2C                     l19386:
 28921  007E2C  5023               	movf	(i2c_writeNBytes@reg+1)^0,w,c
 28922  007E2E  1039               	iorwf	i2c_writeNBytes@address^0,w,c
 28923  007E30  ECD7  F03C         	call	_I2C1_Open
 28924  007E34  0900               	iorlw	0
 28925  007E36  B4D8               	btfsc	status,2,c
 28926  007E38  D7F9               	goto	l19386
 28927                           
 28928                           ;mcc_generated_files/drivers/i2c_simple_master.c: 56:     I2C1_SetBuffer(dat,len + 1);
 28929  007E3A  0E28               	movlw	low i2c_writeNBytes@dat
 28930  007E3C  6E10               	movwf	I2C1_SetBuffer@buffer^0,c
 28931  007E3E  6A11               	clrf	(I2C1_SetBuffer@buffer+1)^0,c
 28932  007E40  0E01               	movlw	1
 28933  007E42  2425               	addwf	i2c_writeNBytes@len^0,w,c
 28934  007E44  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 28935  007E46  0E00               	movlw	0
 28936  007E48  2026               	addwfc	(i2c_writeNBytes@len+1)^0,w,c
 28937  007E4A  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 28938  007E4C  ECFB  F047         	call	_I2C1_SetBuffer	;wreg free
 28939                           
 28940                           ; BSR set to: 2
 28941                           ;mcc_generated_files/drivers/i2c_simple_master.c: 57:     I2C1_SetAddressNackCallback(((
      +                          void*)0),((void*)0));
 28942  007E50  0E00               	movlw	0
 28943  007E52  6E15               	movwf	I2C1_SetAddressNackCallback@cb^0,c
 28944  007E54  0E00               	movlw	0
 28945  007E56  6E16               	movwf	(I2C1_SetAddressNackCallback@cb+1)^0,c
 28946  007E58  0E00               	movlw	0
 28947  007E5A  6E17               	movwf	I2C1_SetAddressNackCallback@ptr^0,c
 28948  007E5C  0E00               	movlw	0
 28949  007E5E  6E18               	movwf	(I2C1_SetAddressNackCallback@ptr+1)^0,c
 28950  007E60  EC2C  F048         	call	_I2C1_SetAddressNackCallback	;wreg free
 28951                           
 28952                           ;mcc_generated_files/drivers/i2c_simple_master.c: 58:     I2C1_MasterWrite();
 28953  007E64  ECFA  F048         	call	_I2C1_MasterWrite	;wreg free
 28954  007E68                     l19394:
 28955  007E68  EC6D  F047         	call	_I2C1_Close	;wreg free
 28956  007E6C  06E8               	decf	wreg,f,c
 28957  007E6E  B4D8               	btfsc	status,2,c
 28958  007E70  D7FB               	goto	l19394
 28959                           
 28960                           ;mcc_generated_files/drivers/i2c_simple_master.c: 60:     _delay((unsigned long)((10)*(6
      +                          4000000/4000.0)));
 28961  007E72  0ED0               	movlw	208
 28962  007E74  6E27               	movwf	??_i2c_writeNBytes^0,c
 28963  007E76  0ECA               	movlw	202
 28964  007E78                     u28847:
 28965  007E78  2EE8               	decfsz	wreg,f,c
 28966  007E7A  D7FE               	bra	u28847
 28967  007E7C  2E27               	decfsz	??_i2c_writeNBytes^0,f,c
 28968  007E7E  D7FC               	bra	u28847
 28969  007E80  0012               	return		;funcret
 28970  007E82                     __end_of_i2c_writeNBytes:
 28971                           	callstack 0
 28972                           
 28973 ;; *************** function _memcpy *****************
 28974 ;; Defined at:
 28975 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\memcpy.c"
 28976 ;; Parameters:    Size  Location     Type
 28977 ;;  d1              2   15[COMRAM] PTR void 
 28978 ;;		 -> controlSelectRemote@tempSerial(4), Decrypt@Buffer(4), SecureKeyGen@SKEYtemp(8), SecureKeyGen@HOPtemp(4), 
 28979 ;;		 -> SecureKeyGen@Buffer(8), NormalKeyGen@SKEYtemp(4), NormalKeyGen@SEED(4), NormalKeyGen@HOPtemp(4), 
 28980 ;;		 -> NormalKeyGen@Buffer(8), DKEY(8), classic_data(16), I2C1_WriteNBytes@dat(17), 
 28981 ;;		 -> i2c_writeNBytes@dat(17), 
 28982 ;;  s1              2   17[COMRAM] PTR const void 
 28983 ;;		 -> classic_data.raw_data(4), Decrypt@Buffer(4), SecureKeyGen@SKEYtemp(8), SecureKeyGen@HOPtemp(4), 
 28984 ;;		 -> SecureKeyGen@Buffer(8), NormalKeyGen@SKEYtemp(4), NormalKeyGen@SEED(4), NormalKeyGen@HOPtemp(4), 
 28985 ;;		 -> NormalKeyGen@Buffer(8), classic_data.serialnumber(4), classic_data(16), BufferRF(9), 
 28986 ;;		 -> RemoveSerial@tempSerial(4), saveNewSerial@tempSerial(4), var_sys_NVM(64), 
 28987 ;;  n               2   19[COMRAM] unsigned int 
 28988 ;; Auto vars:     Size  Location     Type
 28989 ;;  s               2   24[COMRAM] PTR const unsigned char 
 28990 ;;		 -> classic_data.raw_data(4), Decrypt@Buffer(4), SecureKeyGen@SKEYtemp(8), SecureKeyGen@HOPtemp(4), 
 28991 ;;		 -> SecureKeyGen@Buffer(8), NormalKeyGen@SKEYtemp(4), NormalKeyGen@SEED(4), NormalKeyGen@HOPtemp(4), 
 28992 ;;		 -> NormalKeyGen@Buffer(8), classic_data.serialnumber(4), classic_data(16), BufferRF(9), 
 28993 ;;		 -> RemoveSerial@tempSerial(4), saveNewSerial@tempSerial(4), var_sys_NVM(64), 
 28994 ;;  d               2   22[COMRAM] PTR unsigned char 
 28995 ;;		 -> controlSelectRemote@tempSerial(4), Decrypt@Buffer(4), SecureKeyGen@SKEYtemp(8), SecureKeyGen@HOPtemp(4), 
 28996 ;;		 -> SecureKeyGen@Buffer(8), NormalKeyGen@SKEYtemp(4), NormalKeyGen@SEED(4), NormalKeyGen@HOPtemp(4), 
 28997 ;;		 -> NormalKeyGen@Buffer(8), DKEY(8), classic_data(16), I2C1_WriteNBytes@dat(17), 
 28998 ;;		 -> i2c_writeNBytes@dat(17), 
 28999 ;;  tmp             1   21[COMRAM] unsigned char 
 29000 ;; Return value:  Size  Location     Type
 29001 ;;                  2   15[COMRAM] PTR void 
 29002 ;; Registers used:
 29003 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 29004 ;; Tracked objects:
 29005 ;;		On entry : 0/0
 29006 ;;		On exit  : 0/0
 29007 ;;		Unchanged: 0/0
 29008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29009 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29010 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29012 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29013 ;;Total ram usage:       11 bytes
 29014 ;; Hardware stack levels used: 1
 29015 ;; Hardware stack levels required when called: 4
 29016 ;; This function calls:
 29017 ;;		Nothing
 29018 ;; This function is called by:
 29019 ;;		_i2c_writeNBytes
 29020 ;;		_getSerialCmd
 29021 ;;		_NormalKeyGen
 29022 ;;		_Decrypt
 29023 ;;		_keeloqDecryptPacket
 29024 ;;		_DecryptPacket_12BIT
 29025 ;; This function uses a non-reentrant model
 29026 ;;
 29027                           
 29028                           	psect	text129
 29029  0087FE                     __ptext129:
 29030                           	callstack 0
 29031  0087FE                     _memcpy:
 29032                           	callstack 21
 29033                           
 29034                           ;incstack = 0
 29035  0087FE  C012  F019         	movff	memcpy@s1,memcpy@s
 29036  008802  C013  F01A         	movff	memcpy@s1+1,memcpy@s+1
 29037  008806  C010  F017         	movff	memcpy@d1,memcpy@d
 29038  00880A  C011  F018         	movff	memcpy@d1+1,memcpy@d+1
 29039  00880E  D010               	goto	l19326
 29040  008810                     l19318:
 29041  008810  C019  FFD9         	movff	memcpy@s,fsr2l
 29042  008814  C01A  FFDA         	movff	memcpy@s+1,fsr2h
 29043  008818  50DF               	movf	indf2,w,c
 29044  00881A  6E16               	movwf	memcpy@tmp^0,c
 29045  00881C  4A19               	infsnz	memcpy@s^0,f,c
 29046  00881E  2A1A               	incf	(memcpy@s+1)^0,f,c
 29047  008820  C017  FFD9         	movff	memcpy@d,fsr2l
 29048  008824  C018  FFDA         	movff	memcpy@d+1,fsr2h
 29049  008828  C016  FFDF         	movff	memcpy@tmp,indf2
 29050  00882C  4A17               	infsnz	memcpy@d^0,f,c
 29051  00882E  2A18               	incf	(memcpy@d+1)^0,f,c
 29052  008830                     l19326:
 29053  008830  0614               	decf	memcpy@n^0,f,c
 29054  008832  A0D8               	btfss	status,0,c
 29055  008834  0615               	decf	(memcpy@n+1)^0,f,c
 29056  008836  2814               	incf	memcpy@n^0,w,c
 29057  008838  E1EB               	bnz	l19318
 29058  00883A  2815               	incf	(memcpy@n+1)^0,w,c
 29059  00883C  B4D8               	btfsc	status,2,c
 29060  00883E  0012               	return	
 29061  008840  D7E7               	goto	l19318
 29062  008842                     __end_of_memcpy:
 29063                           	callstack 0
 29064                           
 29065 ;; *************** function _I2C1_SetAddressNackCallback *****************
 29066 ;; Defined at:
 29067 ;;		line 283 in file "mcc_generated_files/i2c1_master.c"
 29068 ;; Parameters:    Size  Location     Type
 29069 ;;  cb              2   20[COMRAM] PTR FTN(PTR void ,)enum 
 29070 ;;		 -> Absolute function(1), 
 29071 ;;  ptr             2   22[COMRAM] PTR void 
 29072 ;;		 -> NULL(0), 
 29073 ;; Auto vars:     Size  Location     Type
 29074 ;;		None
 29075 ;; Return value:  Size  Location     Type
 29076 ;;                  1    wreg      void 
 29077 ;; Registers used:
 29078 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29079 ;; Tracked objects:
 29080 ;;		On entry : 3F/2
 29081 ;;		On exit  : 0/0
 29082 ;;		Unchanged: 0/0
 29083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29084 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29085 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29087 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29088 ;;Total ram usage:        4 bytes
 29089 ;; Hardware stack levels used: 1
 29090 ;; Hardware stack levels required when called: 5
 29091 ;; This function calls:
 29092 ;;		_I2C1_SetCallback
 29093 ;; This function is called by:
 29094 ;;		_i2c_writeNBytes
 29095 ;;		_i2c_readDataBlock
 29096 ;;		_I2C1_Read1ByteRegister
 29097 ;; This function uses a non-reentrant model
 29098 ;;
 29099                           
 29100                           	psect	text130
 29101  009058                     __ptext130:
 29102                           	callstack 0
 29103  009058                     _I2C1_SetAddressNackCallback:
 29104                           	callstack 20
 29105                           
 29106                           ; BSR set to: 2
 29107                           ;mcc_generated_files/i2c1_master.c: 283: void I2C1_SetAddressNackCallback(i2c1_callback_
      +                          t cb, void *ptr);mcc_generated_files/i2c1_master.c: 284: {;mcc_generated_files/i2c1_mast
      +                          er.c: 285:     I2C1_SetCallback(I2C1_ADDR_NACK, cb, ptr);
 29108                           
 29109                           ;incstack = 0
 29110  009058  C015  F010         	movff	I2C1_SetAddressNackCallback@cb,I2C1_SetCallback@cb
 29111  00905C  C016  F011         	movff	I2C1_SetAddressNackCallback@cb+1,I2C1_SetCallback@cb+1
 29112  009060  C017  F012         	movff	I2C1_SetAddressNackCallback@ptr,I2C1_SetCallback@ptr
 29113  009064  C018  F013         	movff	I2C1_SetAddressNackCallback@ptr+1,I2C1_SetCallback@ptr+1
 29114  009068  0E02               	movlw	2
 29115  00906A  ECE8  F03F         	call	_I2C1_SetCallback
 29116  00906E  0012               	return		;funcret
 29117  009070                     __end_of_I2C1_SetAddressNackCallback:
 29118                           	callstack 0
 29119                           
 29120 ;; *************** function _I2C1_Open *****************
 29121 ;; Defined at:
 29122 ;;		line 176 in file "mcc_generated_files/i2c1_master.c"
 29123 ;; Parameters:    Size  Location     Type
 29124 ;;  address         1    wreg     unsigned char 
 29125 ;; Auto vars:     Size  Location     Type
 29126 ;;  address         1   15[COMRAM] unsigned char 
 29127 ;;  returnValue     1   16[COMRAM] enum E355
 29128 ;; Return value:  Size  Location     Type
 29129 ;;                  1    wreg      enum E355
 29130 ;; Registers used:
 29131 ;;		wreg, status,2, status,0, cstack
 29132 ;; Tracked objects:
 29133 ;;		On entry : 0/1
 29134 ;;		On exit  : 33/2
 29135 ;;		Unchanged: 0/0
 29136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29137 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29138 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29140 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29141 ;;Total ram usage:        2 bytes
 29142 ;; Hardware stack levels used: 1
 29143 ;; Hardware stack levels required when called: 5
 29144 ;; This function calls:
 29145 ;;		_I2C1_MasterClearIrq
 29146 ;;		_I2C1_MasterOpen
 29147 ;; This function is called by:
 29148 ;;		_i2c_writeNBytes
 29149 ;;		_i2c_readDataBlock
 29150 ;;		_I2C1_Read1ByteRegister
 29151 ;; This function uses a non-reentrant model
 29152 ;;
 29153                           
 29154                           	psect	text131
 29155  0079AE                     __ptext131:
 29156                           	callstack 0
 29157  0079AE                     _I2C1_Open:
 29158                           	callstack 20
 29159                           
 29160                           ;incstack = 0
 29161                           ;I2C1_Open@address stored from wreg
 29162  0079AE  6E10               	movwf	I2C1_Open@address^0,c
 29163                           
 29164                           ;mcc_generated_files/i2c1_master.c: 176: i2c1_error_t I2C1_Open(i2c1_address_t address);
      +                          mcc_generated_files/i2c1_master.c: 177: {;mcc_generated_files/i2c1_master.c: 178:     i2
      +                          c1_error_t returnValue = I2C1_BUSY;
 29165  0079B0  0E01               	movlw	1
 29166  0079B2  6E11               	movwf	I2C1_Open@returnValue^0,c
 29167                           
 29168                           ;mcc_generated_files/i2c1_master.c: 180:     if(!I2C1_Status.inUse)
 29169  0079B4  0102               	movlb	2	; () banked
 29170  0079B6  B55F               	btfsc	(_I2C1_Status+35)& (0+255),2,b
 29171  0079B8  D03A               	goto	l19292
 29172                           
 29173                           ; BSR set to: 2
 29174                           ;mcc_generated_files/i2c1_master.c: 181:     {;mcc_generated_files/i2c1_master.c: 182:  
      +                                 I2C1_Status.address = address;
 29175  0079BA  C010  F258         	movff	I2C1_Open@address,_I2C1_Status+28
 29176                           
 29177                           ; BSR set to: 2
 29178                           ;mcc_generated_files/i2c1_master.c: 183:         I2C1_Status.busy = 0;
 29179  0079BE  935F               	bcf	(_I2C1_Status+35)& (0+255),1,b
 29180                           
 29181                           ; BSR set to: 2
 29182                           ;mcc_generated_files/i2c1_master.c: 184:         I2C1_Status.inUse = 1;
 29183  0079C0  855F               	bsf	(_I2C1_Status+35)& (0+255),2,b
 29184                           
 29185                           ; BSR set to: 2
 29186                           ;mcc_generated_files/i2c1_master.c: 185:         I2C1_Status.addressNackCheck = 0;
 29187  0079C2  915F               	bcf	(_I2C1_Status+35)& (0+255),0,b
 29188                           
 29189                           ; BSR set to: 2
 29190                           ;mcc_generated_files/i2c1_master.c: 186:         I2C1_Status.state = I2C1_RESET;
 29191  0079C4  0E0E               	movlw	14
 29192  0079C6  6F5D               	movwf	(_I2C1_Status+33)& (0+255),b
 29193                           
 29194                           ; BSR set to: 2
 29195                           ;mcc_generated_files/i2c1_master.c: 187:         I2C1_Status.time_out_value = 500;
 29196  0079C8  0E01               	movlw	1
 29197  0079CA  6F57               	movwf	(_I2C1_Status+27)& (0+255),b
 29198  0079CC  0EF4               	movlw	244
 29199  0079CE  6F56               	movwf	(_I2C1_Status+26)& (0+255),b
 29200                           
 29201                           ; BSR set to: 2
 29202                           ;mcc_generated_files/i2c1_master.c: 188:         I2C1_Status.bufferFree = 1;
 29203  0079D0  875F               	bsf	(_I2C1_Status+35)& (0+255),3,b
 29204                           
 29205                           ; BSR set to: 2
 29206                           ;mcc_generated_files/i2c1_master.c: 191:         I2C1_Status.callbackTable[I2C1_DATA_COM
      +                          PLETE]=I2C1_CallbackReturnStop;
 29207  0079D2  0E8E               	movlw	low _I2C1_CallbackReturnStop
 29208  0079D4  6F3C               	movwf	_I2C1_Status& (0+255),b
 29209  0079D6  0E92               	movlw	high _I2C1_CallbackReturnStop
 29210  0079D8  6F3D               	movwf	(_I2C1_Status+1)& (0+255),b
 29211                           
 29212                           ; BSR set to: 2
 29213                           ;mcc_generated_files/i2c1_master.c: 192:         I2C1_Status.callbackPayload[I2C1_DATA_C
      +                          OMPLETE] = ((void*)0);
 29214  0079DA  0E00               	movlw	0
 29215  0079DC  6F48               	movwf	(_I2C1_Status+12)& (0+255),b
 29216  0079DE  0E00               	movlw	0
 29217  0079E0  6F49               	movwf	(_I2C1_Status+13)& (0+255),b
 29218                           
 29219                           ; BSR set to: 2
 29220                           ;mcc_generated_files/i2c1_master.c: 193:         I2C1_Status.callbackTable[I2C1_WRITE_CO
      +                          LLISION]=I2C1_CallbackReturnStop;
 29221  0079E2  0E8E               	movlw	low _I2C1_CallbackReturnStop
 29222  0079E4  6F3E               	movwf	(_I2C1_Status+2)& (0+255),b
 29223  0079E6  0E92               	movlw	high _I2C1_CallbackReturnStop
 29224  0079E8  6F3F               	movwf	(_I2C1_Status+3)& (0+255),b
 29225                           
 29226                           ; BSR set to: 2
 29227                           ;mcc_generated_files/i2c1_master.c: 194:         I2C1_Status.callbackPayload[I2C1_WRITE_
      +                          COLLISION] = ((void*)0);
 29228  0079EA  0E00               	movlw	0
 29229  0079EC  6F4A               	movwf	(_I2C1_Status+14)& (0+255),b
 29230  0079EE  0E00               	movlw	0
 29231  0079F0  6F4B               	movwf	(_I2C1_Status+15)& (0+255),b
 29232                           
 29233                           ; BSR set to: 2
 29234                           ;mcc_generated_files/i2c1_master.c: 195:         I2C1_Status.callbackTable[I2C1_ADDR_NAC
      +                          K]=I2C1_CallbackReturnStop;
 29235  0079F2  0E8E               	movlw	low _I2C1_CallbackReturnStop
 29236  0079F4  6F40               	movwf	(_I2C1_Status+4)& (0+255),b
 29237  0079F6  0E92               	movlw	high _I2C1_CallbackReturnStop
 29238  0079F8  6F41               	movwf	(_I2C1_Status+5)& (0+255),b
 29239                           
 29240                           ; BSR set to: 2
 29241                           ;mcc_generated_files/i2c1_master.c: 196:         I2C1_Status.callbackPayload[I2C1_ADDR_N
      +                          ACK] = ((void*)0);
 29242  0079FA  0E00               	movlw	0
 29243  0079FC  6F4C               	movwf	(_I2C1_Status+16)& (0+255),b
 29244  0079FE  0E00               	movlw	0
 29245  007A00  6F4D               	movwf	(_I2C1_Status+17)& (0+255),b
 29246                           
 29247                           ; BSR set to: 2
 29248                           ;mcc_generated_files/i2c1_master.c: 197:         I2C1_Status.callbackTable[I2C1_DATA_NAC
      +                          K]=I2C1_CallbackReturnStop;
 29249  007A02  0E8E               	movlw	low _I2C1_CallbackReturnStop
 29250  007A04  6F42               	movwf	(_I2C1_Status+6)& (0+255),b
 29251  007A06  0E92               	movlw	high _I2C1_CallbackReturnStop
 29252  007A08  6F43               	movwf	(_I2C1_Status+7)& (0+255),b
 29253                           
 29254                           ; BSR set to: 2
 29255                           ;mcc_generated_files/i2c1_master.c: 198:         I2C1_Status.callbackPayload[I2C1_DATA_N
      +                          ACK] = ((void*)0);
 29256  007A0A  0E00               	movlw	0
 29257  007A0C  6F4E               	movwf	(_I2C1_Status+18)& (0+255),b
 29258  007A0E  0E00               	movlw	0
 29259  007A10  6F4F               	movwf	(_I2C1_Status+19)& (0+255),b
 29260                           
 29261                           ; BSR set to: 2
 29262                           ;mcc_generated_files/i2c1_master.c: 199:         I2C1_Status.callbackTable[I2C1_TIMEOUT]
      +                          =I2C1_CallbackReturnReset;
 29263  007A12  0E8A               	movlw	low _I2C1_CallbackReturnReset
 29264  007A14  6F44               	movwf	(_I2C1_Status+8)& (0+255),b
 29265  007A16  0E92               	movlw	high _I2C1_CallbackReturnReset
 29266  007A18  6F45               	movwf	(_I2C1_Status+9)& (0+255),b
 29267                           
 29268                           ; BSR set to: 2
 29269                           ;mcc_generated_files/i2c1_master.c: 200:         I2C1_Status.callbackPayload[I2C1_TIMEOU
      +                          T] = ((void*)0);
 29270  007A1A  0E00               	movlw	0
 29271  007A1C  6F50               	movwf	(_I2C1_Status+20)& (0+255),b
 29272  007A1E  0E00               	movlw	0
 29273  007A20  6F51               	movwf	(_I2C1_Status+21)& (0+255),b
 29274                           
 29275                           ; BSR set to: 2
 29276                           ;mcc_generated_files/i2c1_master.c: 202:         I2C1_MasterClearIrq();
 29277  007A22  EC31  F049         	call	_I2C1_MasterClearIrq	;wreg free
 29278                           
 29279                           ; BSR set to: 14
 29280                           ;mcc_generated_files/i2c1_master.c: 203:         I2C1_MasterOpen();
 29281  007A26  EC38  F048         	call	_I2C1_MasterOpen	;wreg free
 29282                           
 29283                           ; BSR set to: 14
 29284                           ;mcc_generated_files/i2c1_master.c: 204:         returnValue = I2C1_NOERR;
 29285  007A2A  0E00               	movlw	0
 29286  007A2C  6E11               	movwf	I2C1_Open@returnValue^0,c
 29287  007A2E                     l19292:
 29288                           
 29289                           ;mcc_generated_files/i2c1_master.c: 206:     return returnValue;
 29290  007A2E  5011               	movf	I2C1_Open@returnValue^0,w,c
 29291  007A30  0012               	return		;funcret
 29292  007A32                     __end_of_I2C1_Open:
 29293                           	callstack 0
 29294                           
 29295 ;; *************** function _I2C1_MasterOpen *****************
 29296 ;; Defined at:
 29297 ;;		line 543 in file "mcc_generated_files/i2c1_master.c"
 29298 ;; Parameters:    Size  Location     Type
 29299 ;;		None
 29300 ;; Auto vars:     Size  Location     Type
 29301 ;;		None
 29302 ;; Return value:  Size  Location     Type
 29303 ;;                  1    wreg      _Bool 
 29304 ;; Registers used:
 29305 ;;		wreg, status,2
 29306 ;; Tracked objects:
 29307 ;;		On entry : 3F/E
 29308 ;;		On exit  : 3F/E
 29309 ;;		Unchanged: 3F/0
 29310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29312 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29314 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29315 ;;Total ram usage:        0 bytes
 29316 ;; Hardware stack levels used: 1
 29317 ;; Hardware stack levels required when called: 4
 29318 ;; This function calls:
 29319 ;;		Nothing
 29320 ;; This function is called by:
 29321 ;;		_I2C1_Open
 29322 ;; This function uses a non-reentrant model
 29323 ;;
 29324                           
 29325                           	psect	text132
 29326  009070                     __ptext132:
 29327                           	callstack 0
 29328  009070                     _I2C1_MasterOpen:
 29329                           	callstack 20
 29330                           
 29331                           ; BSR set to: 14
 29332                           ;mcc_generated_files/i2c1_master.c: 545:     if(!SSP1CON1bits.SSPEN)
 29333                           
 29334                           ;incstack = 0
 29335  009070  BA96               	btfsc	150,5,c	;volatile
 29336  009072  0012               	return	
 29337                           
 29338                           ; BSR set to: 14
 29339                           ;mcc_generated_files/i2c1_master.c: 546:     {;mcc_generated_files/i2c1_master.c: 547:  
      +                                 SSP1STAT = 0x80;
 29340  009074  0E80               	movlw	128
 29341  009076  6E95               	movwf	149,c	;volatile
 29342                           
 29343                           ;mcc_generated_files/i2c1_master.c: 548:         SSP1CON1 = 0x08;
 29344  009078  0E08               	movlw	8
 29345  00907A  6E96               	movwf	150,c	;volatile
 29346                           
 29347                           ;mcc_generated_files/i2c1_master.c: 549:         SSP1CON2 = 0x00;
 29348  00907C  0E00               	movlw	0
 29349  00907E  6E97               	movwf	151,c	;volatile
 29350                           
 29351                           ;mcc_generated_files/i2c1_master.c: 550:         SSP1ADD = 0x9F;
 29352  009080  0E9F               	movlw	159
 29353  009082  6E93               	movwf	147,c	;volatile
 29354                           
 29355                           ; BSR set to: 14
 29356                           ;mcc_generated_files/i2c1_master.c: 551:         SSP1CON1bits.SSPEN = 1;
 29357  009084  8A96               	bsf	150,5,c	;volatile
 29358                           
 29359                           ; BSR set to: 14
 29360  009086  0012               	return		;funcret
 29361  009088                     __end_of_I2C1_MasterOpen:
 29362                           	callstack 0
 29363                           
 29364 ;; *************** function _I2C1_MasterWrite *****************
 29365 ;; Defined at:
 29366 ;;		line 251 in file "mcc_generated_files/i2c1_master.c"
 29367 ;; Parameters:    Size  Location     Type
 29368 ;;		None
 29369 ;; Auto vars:     Size  Location     Type
 29370 ;;		None
 29371 ;; Return value:  Size  Location     Type
 29372 ;;                  1    wreg      enum E355
 29373 ;; Registers used:
 29374 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29375 ;; Tracked objects:
 29376 ;;		On entry : 0/2
 29377 ;;		On exit  : 3F/2
 29378 ;;		Unchanged: 0/0
 29379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29383 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29384 ;;Total ram usage:        0 bytes
 29385 ;; Hardware stack levels used: 1
 29386 ;; Hardware stack levels required when called: 11
 29387 ;; This function calls:
 29388 ;;		_I2C1_MasterOperation
 29389 ;; This function is called by:
 29390 ;;		_i2c_writeNBytes
 29391 ;;		_i2c_readDataBlock
 29392 ;;		_I2C1_Read1ByteRegister
 29393 ;; This function uses a non-reentrant model
 29394 ;;
 29395                           
 29396                           	psect	text133
 29397  0091F4                     __ptext133:
 29398                           	callstack 0
 29399  0091F4                     _I2C1_MasterWrite:
 29400                           	callstack 14
 29401                           
 29402                           ;mcc_generated_files/i2c1_master.c: 253:     return I2C1_MasterOperation(0);;	Return val
      +                          ue of _I2C1_MasterWrite is never used
 29403                           
 29404                           ; BSR set to: 14
 29405                           ;incstack = 0
 29406  0091F4  0E00               	movlw	0
 29407  0091F6  ECD6  F045         	call	_I2C1_MasterOperation
 29408                           
 29409                           ; BSR set to: 2
 29410  0091FA  0012               	return		;funcret
 29411  0091FC                     __end_of_I2C1_MasterWrite:
 29412                           	callstack 0
 29413                           
 29414 ;; *************** function _I2C1_MasterOperation *****************
 29415 ;; Defined at:
 29416 ;;		line 224 in file "mcc_generated_files/i2c1_master.c"
 29417 ;; Parameters:    Size  Location     Type
 29418 ;;  read            1    wreg     _Bool 
 29419 ;; Auto vars:     Size  Location     Type
 29420 ;;  read            1   31[COMRAM] _Bool 
 29421 ;;  returnValue     1   32[COMRAM] enum E355
 29422 ;; Return value:  Size  Location     Type
 29423 ;;                  1    wreg      enum E355
 29424 ;; Registers used:
 29425 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29426 ;; Tracked objects:
 29427 ;;		On entry : 0/2
 29428 ;;		On exit  : 3F/2
 29429 ;;		Unchanged: 0/0
 29430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29431 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29432 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29433 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29434 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29435 ;;Total ram usage:        2 bytes
 29436 ;; Hardware stack levels used: 1
 29437 ;; Hardware stack levels required when called: 10
 29438 ;; This function calls:
 29439 ;;		_I2C1_MasterStart
 29440 ;;		_I2C1_Poller
 29441 ;; This function is called by:
 29442 ;;		_I2C1_MasterWrite
 29443 ;; This function uses a non-reentrant model
 29444 ;;
 29445                           
 29446                           	psect	text134
 29447  008BAC                     __ptext134:
 29448                           	callstack 0
 29449  008BAC                     _I2C1_MasterOperation:
 29450                           	callstack 14
 29451                           
 29452                           ; BSR set to: 2
 29453                           ;incstack = 0
 29454                           ;I2C1_MasterOperation@read stored from wreg
 29455  008BAC  6E20               	movwf	I2C1_MasterOperation@read^0,c
 29456                           
 29457                           ;mcc_generated_files/i2c1_master.c: 224: i2c1_error_t I2C1_MasterOperation(_Bool read);m
      +                          cc_generated_files/i2c1_master.c: 225: {;mcc_generated_files/i2c1_master.c: 226:     i2c
      +                          1_error_t returnValue = I2C1_BUSY;
 29458  008BAE  0E01               	movlw	1
 29459  008BB0  6E21               	movwf	I2C1_MasterOperation@returnValue^0,c
 29460                           
 29461                           ;mcc_generated_files/i2c1_master.c: 227:     if(!I2C1_Status.busy)
 29462  008BB2  0102               	movlb	2	; () banked
 29463  008BB4  B35F               	btfsc	(_I2C1_Status+35)& (0+255),1,b
 29464  008BB6  D00E               	goto	l19244
 29465                           
 29466                           ; BSR set to: 2
 29467                           ;mcc_generated_files/i2c1_master.c: 228:     {;mcc_generated_files/i2c1_master.c: 229:  
      +                                 I2C1_Status.busy = 1;
 29468  008BB8  835F               	bsf	(_I2C1_Status+35)& (0+255),1,b
 29469                           
 29470                           ; BSR set to: 2
 29471                           ;mcc_generated_files/i2c1_master.c: 230:         returnValue = I2C1_NOERR;
 29472  008BBA  0E00               	movlw	0
 29473  008BBC  6E21               	movwf	I2C1_MasterOperation@returnValue^0,c
 29474                           
 29475                           ; BSR set to: 2
 29476                           ;mcc_generated_files/i2c1_master.c: 232:         if(read)
 29477  008BBE  5020               	movf	I2C1_MasterOperation@read^0,w,c
 29478  008BC0  B4D8               	btfsc	status,2,c
 29479  008BC2  D002               	goto	l19238
 29480                           
 29481                           ; BSR set to: 2
 29482                           ;mcc_generated_files/i2c1_master.c: 233:         {;mcc_generated_files/i2c1_master.c: 23
      +                          4:             I2C1_Status.state = I2C1_SEND_ADR_READ;
 29483  008BC4  0E01               	movlw	1
 29484  008BC6  D001               	goto	L111
 29485  008BC8                     l19238:
 29486                           
 29487                           ; BSR set to: 2
 29488                           ;mcc_generated_files/i2c1_master.c: 237:         {;mcc_generated_files/i2c1_master.c: 23
      +                          8:             I2C1_Status.state = I2C1_SEND_ADR_WRITE;
 29489  008BC8  0E02               	movlw	2
 29490  008BCA                     L111:
 29491  008BCA  6F5D               	movwf	(_I2C1_Status+33)& (0+255),b
 29492                           
 29493                           ; BSR set to: 2
 29494                           ;mcc_generated_files/i2c1_master.c: 240:         I2C1_MasterStart();
 29495  008BCC  EC4D  F049         	call	_I2C1_MasterStart	;wreg free
 29496                           
 29497                           ; BSR set to: 2
 29498                           ;mcc_generated_files/i2c1_master.c: 241:         I2C1_Poller();
 29499  008BD0  EC95  F048         	call	_I2C1_Poller	;wreg free
 29500  008BD4                     l19244:
 29501                           
 29502                           ; BSR set to: 2
 29503                           ;mcc_generated_files/i2c1_master.c: 243:     return returnValue;
 29504  008BD4  5021               	movf	I2C1_MasterOperation@returnValue^0,w,c
 29505                           
 29506                           ; BSR set to: 2
 29507  008BD6  0012               	return		;funcret
 29508  008BD8                     __end_of_I2C1_MasterOperation:
 29509                           	callstack 0
 29510                           
 29511 ;; *************** function _I2C1_Poller *****************
 29512 ;; Defined at:
 29513 ;;		line 312 in file "mcc_generated_files/i2c1_master.c"
 29514 ;; Parameters:    Size  Location     Type
 29515 ;;		None
 29516 ;; Auto vars:     Size  Location     Type
 29517 ;;		None
 29518 ;; Return value:  Size  Location     Type
 29519 ;;                  1    wreg      void 
 29520 ;; Registers used:
 29521 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29522 ;; Tracked objects:
 29523 ;;		On entry : 3F/2
 29524 ;;		On exit  : 3F/2
 29525 ;;		Unchanged: 0/0
 29526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29527 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29530 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29531 ;;Total ram usage:        0 bytes
 29532 ;; Hardware stack levels used: 1
 29533 ;; Hardware stack levels required when called: 9
 29534 ;; This function calls:
 29535 ;;		_I2C1_MasterFsm
 29536 ;;		_I2C1_MasterWaitForEvent
 29537 ;; This function is called by:
 29538 ;;		_I2C1_MasterOperation
 29539 ;; This function uses a non-reentrant model
 29540 ;;
 29541                           
 29542                           	psect	text135
 29543  00912A                     __ptext135:
 29544                           	callstack 0
 29545  00912A                     _I2C1_Poller:
 29546                           	callstack 14
 29547                           
 29548                           ; BSR set to: 2
 29549                           ;mcc_generated_files/i2c1_master.c: 314:     while(I2C1_Status.busy)
 29550                           
 29551                           ; BSR set to: 2
 29552                           ;incstack = 0
 29553  00912A  D004               	goto	l19212
 29554  00912C                     l19208:
 29555                           
 29556                           ; BSR set to: 2
 29557                           ;mcc_generated_files/i2c1_master.c: 315:     {;mcc_generated_files/i2c1_master.c: 316:  
      +                                 I2C1_MasterWaitForEvent();
 29558  00912C  ECFE  F048         	call	_I2C1_MasterWaitForEvent	;wreg free
 29559                           
 29560                           ; BSR set to: 14
 29561                           ;mcc_generated_files/i2c1_master.c: 317:     I2C1_MasterFsm();
 29562  009130  EC80  F042         	call	_I2C1_MasterFsm	;wreg free
 29563  009134                     l19212:
 29564                           
 29565                           ; BSR set to: 2
 29566                           ;mcc_generated_files/i2c1_master.c: 314:     while(I2C1_Status.busy)
 29567  009134  A35F               	btfss	(_I2C1_Status+35)& (0+255),1,b
 29568  009136  0012               	return	
 29569  009138  D7F9               	goto	l19208
 29570  00913A                     __end_of_I2C1_Poller:
 29571                           	callstack 0
 29572                           
 29573 ;; *************** function _I2C1_MasterWaitForEvent *****************
 29574 ;; Defined at:
 29575 ;;		line 650 in file "mcc_generated_files/i2c1_master.c"
 29576 ;; Parameters:    Size  Location     Type
 29577 ;;		None
 29578 ;; Auto vars:     Size  Location     Type
 29579 ;;		None
 29580 ;; Return value:  Size  Location     Type
 29581 ;;                  1    wreg      void 
 29582 ;; Registers used:
 29583 ;;		None
 29584 ;; Tracked objects:
 29585 ;;		On entry : 3F/2
 29586 ;;		On exit  : 3F/E
 29587 ;;		Unchanged: 0/0
 29588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29589 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29590 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29592 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29593 ;;Total ram usage:        0 bytes
 29594 ;; Hardware stack levels used: 1
 29595 ;; Hardware stack levels required when called: 4
 29596 ;; This function calls:
 29597 ;;		Nothing
 29598 ;; This function is called by:
 29599 ;;		_I2C1_Poller
 29600 ;; This function uses a non-reentrant model
 29601 ;;
 29602                           
 29603                           	psect	text136
 29604  0091FC                     __ptext136:
 29605                           	callstack 0
 29606  0091FC                     _I2C1_MasterWaitForEvent:
 29607                           	callstack 18
 29608                           
 29609                           ; BSR set to: 2
 29610                           ;mcc_generated_files/i2c1_master.c: 653:     {;mcc_generated_files/i2c1_master.c: 654:  
      +                                 if(PIR3bits.SSP1IF)
 29611                           
 29612                           ; BSR set to: 2
 29613                           ;incstack = 0
 29614                           ;mcc_generated_files/i2c1_master.c: 652:     while(1)
 29615  0091FC  010E               	movlb	14	; () banked
 29616  0091FE  B1CD               	btfsc	205,0,b	;volatile
 29617  009200  0012               	return	
 29618  009202  D7FC               	goto	__ptext136
 29619  009204                     __end_of_I2C1_MasterWaitForEvent:
 29620                           	callstack 0
 29621                           
 29622 ;; *************** function _I2C1_MasterFsm *****************
 29623 ;; Defined at:
 29624 ;;		line 321 in file "mcc_generated_files/i2c1_master.c"
 29625 ;; Parameters:    Size  Location     Type
 29626 ;;		None
 29627 ;; Auto vars:     Size  Location     Type
 29628 ;;		None
 29629 ;; Return value:  Size  Location     Type
 29630 ;;                  1    wreg      void 
 29631 ;; Registers used:
 29632 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29633 ;; Tracked objects:
 29634 ;;		On entry : 3F/E
 29635 ;;		On exit  : 3F/2
 29636 ;;		Unchanged: 0/0
 29637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29640 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29641 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29642 ;;Total ram usage:        3 bytes
 29643 ;; Hardware stack levels used: 1
 29644 ;; Hardware stack levels required when called: 8
 29645 ;; This function calls:
 29646 ;;		_I2C1_DO_ADDRESS_NACK
 29647 ;;		_I2C1_DO_IDLE
 29648 ;;		_I2C1_DO_RCEN
 29649 ;;		_I2C1_DO_RESET
 29650 ;;		_I2C1_DO_RX
 29651 ;;		_I2C1_DO_RX_ACK
 29652 ;;		_I2C1_DO_RX_NACK_RESTART
 29653 ;;		_I2C1_DO_RX_NACK_STOP
 29654 ;;		_I2C1_DO_SEND_ADR_READ
 29655 ;;		_I2C1_DO_SEND_ADR_WRITE
 29656 ;;		_I2C1_DO_SEND_RESTART
 29657 ;;		_I2C1_DO_SEND_RESTART_READ
 29658 ;;		_I2C1_DO_SEND_RESTART_WRITE
 29659 ;;		_I2C1_DO_SEND_STOP
 29660 ;;		_I2C1_DO_TX
 29661 ;;		_I2C1_DO_TX_EMPTY
 29662 ;;		_I2C1_MasterClearIrq
 29663 ;;		_I2C1_MasterIsNack
 29664 ;; This function is called by:
 29665 ;;		_I2C1_Poller
 29666 ;; This function uses a non-reentrant model
 29667 ;;
 29668                           
 29669                           	psect	text137
 29670  008500                     __ptext137:
 29671                           	callstack 0
 29672  008500                     _I2C1_MasterFsm:
 29673                           	callstack 14
 29674                           
 29675                           ; BSR set to: 14
 29676                           ;mcc_generated_files/i2c1_master.c: 323:     I2C1_MasterClearIrq();
 29677                           
 29678                           ; BSR set to: 14
 29679                           ;incstack = 0
 29680  008500  EC31  F049         	call	_I2C1_MasterClearIrq	;wreg free
 29681                           
 29682                           ; BSR set to: 14
 29683                           ;mcc_generated_files/i2c1_master.c: 325:     if(I2C1_Status.addressNackCheck && I2C1_Mas
      +                          terIsNack())
 29684  008504  0102               	movlb	2	; () banked
 29685  008506  A15F               	btfss	(_I2C1_Status+35)& (0+255),0,b
 29686  008508  D007               	goto	l19202
 29687                           
 29688                           ; BSR set to: 2
 29689  00850A  ECB2  F048         	call	_I2C1_MasterIsNack	;wreg free
 29690  00850E  0900               	iorlw	0
 29691  008510  B4D8               	btfsc	status,2,c
 29692  008512  D002               	goto	l19202
 29693                           
 29694                           ; BSR set to: 2
 29695                           ;mcc_generated_files/i2c1_master.c: 326:     {;mcc_generated_files/i2c1_master.c: 327:  
      +                                 I2C1_Status.state = I2C1_ADDRESS_NACK;
 29696  008514  0E0F               	movlw	15
 29697  008516  6F5D               	movwf	(_I2C1_Status+33)& (0+255),b
 29698  008518                     l19202:
 29699                           
 29700                           ; BSR set to: 2
 29701                           ;mcc_generated_files/i2c1_master.c: 329:     I2C1_Status.state = i2c1_fsmStateTable[I2C1
      +                          _Status.state]();
 29702  008518  515D               	movf	(_I2C1_Status+33)& (0+255),w,b
 29703  00851A  0D02               	mullw	2
 29704  00851C  50F3               	movf	243,w,c
 29705  00851E  0F01               	addlw	low _i2c1_fsmStateTable
 29706  008520  6E1D               	movwf	??_I2C1_MasterFsm^0,c
 29707  008522  C01D  FFF6         	movff	??_I2C1_MasterFsm,tblptrl
 29708  008526                     	if	1	;There is more than 1 active tblptr byte
 29709  008526  0E0F               	movlw	high __smallconst
 29710  008528  6EF7               	movwf	tblptrh,c
 29711  00852A                     	endif
 29712  00852A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 29713  00852A  6AF8               	clrf	tblptru,c
 29714  00852C                     	endif
 29715  00852C                     	if	0	;tblptru may be non-zero
 29716  00852C                     	endif
 29717  00852C  0009               	tblrd		*+
 29718  00852E  CFF5 F01E          	movff	tablat,??_I2C1_MasterFsm+1
 29719  008532  0009               	tblrd		*+
 29720  008534  CFF5 F01F          	movff	tablat,??_I2C1_MasterFsm+2
 29721  008538  D801               	call	u21968
 29722  00853A  D009               	goto	u21969
 29723  00853C                     u21968:
 29724  00853C  0005               	push	
 29725  00853E  6EFA               	movwf	pclath,c
 29726  008540  501E               	movf	(??_I2C1_MasterFsm+1)^0,w,c
 29727  008542  6EFD               	movwf	tosl,c
 29728  008544  501F               	movf	(??_I2C1_MasterFsm+2)^0,w,c
 29729  008546  6EFE               	movwf	tosh,c
 29730  008548  6AFF               	clrf	tosu,c
 29731  00854A  50FA               	movf	pclath,w,c
 29732  00854C  0012               	return		;indir
 29733  00854E                     u21969:
 29734  00854E  0102               	movlb	2	; () banked
 29735  008550  6F5D               	movwf	(_I2C1_Status+33)& (0+255),b
 29736                           
 29737                           ; BSR set to: 2
 29738  008552  0012               	return		;funcret
 29739  008554                     __end_of_I2C1_MasterFsm:
 29740                           	callstack 0
 29741                           
 29742 ;; *************** function _I2C1_DO_ADDRESS_NACK *****************
 29743 ;; Defined at:
 29744 ;;		line 500 in file "mcc_generated_files/i2c1_master.c"
 29745 ;; Parameters:    Size  Location     Type
 29746 ;;		None
 29747 ;; Auto vars:     Size  Location     Type
 29748 ;;		None
 29749 ;; Return value:  Size  Location     Type
 29750 ;;                  1    wreg      enum E10442
 29751 ;; Registers used:
 29752 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 29753 ;; Tracked objects:
 29754 ;;		On entry : 3F/2
 29755 ;;		On exit  : 0/0
 29756 ;;		Unchanged: 0/0
 29757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29760 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29761 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29762 ;;Total ram usage:        2 bytes
 29763 ;; Hardware stack levels used: 1
 29764 ;; Hardware stack levels required when called: 7
 29765 ;; This function calls:
 29766 ;;		Absolute function
 29767 ;;		_I2C1_CallbackReturnReset
 29768 ;;		_I2C1_CallbackReturnStop
 29769 ;;		_I2C1_DO_SEND_RESTART
 29770 ;;		_I2C1_DO_SEND_STOP
 29771 ;;		_rd1RegCompleteHandler
 29772 ;;		_rd1RegCompleteHandler@i2c1_master_example$F500
 29773 ;;		_rd2RegCompleteHandler
 29774 ;;		_rd2RegCompleteHandler@i2c1_master_example$F511
 29775 ;;		_rdBlkRegCompleteHandler
 29776 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F535
 29777 ;;		_wr1RegCompleteHandler
 29778 ;;		_wr1RegCompleteHandler@i2c1_master_example$F517
 29779 ;;		_wr2RegCompleteHandler
 29780 ;;		_wr2RegCompleteHandler@i2c1_master_example$F523
 29781 ;; This function is called by:
 29782 ;;		_I2C1_MasterFsm
 29783 ;; This function uses a non-reentrant model
 29784 ;;
 29785                           
 29786                           	psect	text138
 29787  008694                     __ptext138:
 29788                           	callstack 0
 29789  008694                     _I2C1_DO_ADDRESS_NACK:
 29790                           	callstack 14
 29791                           
 29792                           ; BSR set to: 2
 29793                           ;mcc_generated_files/i2c1_master.c: 502:     I2C1_Status.addressNackCheck = 0;
 29794                           
 29795                           ; BSR set to: 2
 29796                           ;incstack = 0
 29797  008694  915F               	bcf	(_I2C1_Status+35)& (0+255),0,b
 29798                           
 29799                           ; BSR set to: 2
 29800                           ;mcc_generated_files/i2c1_master.c: 503:     I2C1_Status.error = I2C1_FAIL;
 29801  008696  0E02               	movlw	2
 29802  008698  6F5E               	movwf	(_I2C1_Status+34)& (0+255),b
 29803                           
 29804                           ;mcc_generated_files/i2c1_master.c: 504:     switch(I2C1_Status.callbackTable[I2C1_ADDR_
      +                          NACK](I2C1_Status.callbackPayload[I2C1_ADDR_NACK]))
 29805  00869A  D006               	goto	l19186
 29806  00869C                     l19176:
 29807                           
 29808                           ;mcc_generated_files/i2c1_master.c: 508:             return I2C1_DO_SEND_RESTART();
 29809  00869C  EC12  F049         	call	_I2C1_DO_SEND_RESTART	;wreg free
 29810  0086A0  0012               	return	
 29811  0086A2                     l19180:
 29812                           
 29813                           ;mcc_generated_files/i2c1_master.c: 510:             return I2C1_DO_SEND_STOP();
 29814  0086A2  EC0E  F049         	call	_I2C1_DO_SEND_STOP	;wreg free
 29815  0086A6  0012               	return	
 29816  0086A8                     l19186:
 29817                           
 29818                           ; BSR set to: 2
 29819  0086A8  C24C  F019         	movff	_I2C1_Status+16,I2C1_CallbackReturnReset@funPtr
 29820  0086AC  C24D  F01A         	movff	_I2C1_Status+17,I2C1_CallbackReturnReset@funPtr+1
 29821  0086B0  D801               	call	u21928
 29822  0086B2  D009               	goto	u21929
 29823  0086B4                     u21928:
 29824  0086B4  0005               	push	
 29825  0086B6  6EFA               	movwf	pclath,c
 29826  0086B8  5140               	movf	(_I2C1_Status+4)& (0+255),w,b
 29827  0086BA  6EFD               	movwf	tosl,c
 29828  0086BC  5141               	movf	(_I2C1_Status+5)& (0+255),w,b
 29829  0086BE  6EFE               	movwf	tosh,c
 29830  0086C0  6AFF               	clrf	tosu,c
 29831  0086C2  50FA               	movf	pclath,w,c
 29832  0086C4  0012               	return		;indir
 29833  0086C6                     u21929:
 29834  0086C6  6E1B               	movwf	??_I2C1_DO_ADDRESS_NACK^0,c
 29835  0086C8  6A1C               	clrf	(??_I2C1_DO_ADDRESS_NACK+1)^0,c
 29836                           
 29837                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 29838                           ; Switch size 1, requested type "simple"
 29839                           ; Number of cases is 1, Range of values is 0 to 0
 29840                           ; switch strategies available:
 29841                           ; Name         Instructions Cycles
 29842                           ; simple_byte            4     3 (average)
 29843                           ;	Chosen strategy is simple_byte
 29844  0086CA  501C               	movf	(??_I2C1_DO_ADDRESS_NACK+1)^0,w,c
 29845  0086CC  0A00               	xorlw	0	; case 0
 29846  0086CE  A4D8               	btfss	status,2,c
 29847  0086D0  D7E8               	goto	l19180
 29848                           
 29849                           ; Switch size 1, requested type "simple"
 29850                           ; Number of cases is 2, Range of values is 2 to 3
 29851                           ; switch strategies available:
 29852                           ; Name         Instructions Cycles
 29853                           ; simple_byte            7     4 (average)
 29854                           ;	Chosen strategy is simple_byte
 29855  0086D2  501B               	movf	??_I2C1_DO_ADDRESS_NACK^0,w,c
 29856  0086D4  0A02               	xorlw	2	; case 2
 29857  0086D6  B4D8               	btfsc	status,2,c
 29858  0086D8  D7E1               	goto	l19176
 29859  0086DA  0A01               	xorlw	1	; case 3
 29860  0086DC  B4D8               	btfsc	status,2,c
 29861  0086DE  D7DE               	goto	l19176
 29862  0086E0  D7E0               	goto	l19180
 29863  0086E2                     __end_of_I2C1_DO_ADDRESS_NACK:
 29864                           	callstack 0
 29865                           
 29866 ;; *************** function _I2C1_DO_RESET *****************
 29867 ;; Defined at:
 29868 ;;		line 494 in file "mcc_generated_files/i2c1_master.c"
 29869 ;; Parameters:    Size  Location     Type
 29870 ;;		None
 29871 ;; Auto vars:     Size  Location     Type
 29872 ;;		None
 29873 ;; Return value:  Size  Location     Type
 29874 ;;                  1    wreg      enum E10442
 29875 ;; Registers used:
 29876 ;;		wreg, status,2
 29877 ;; Tracked objects:
 29878 ;;		On entry : 3F/2
 29879 ;;		On exit  : 3F/2
 29880 ;;		Unchanged: 0/0
 29881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29882 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29885 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29886 ;;Total ram usage:        0 bytes
 29887 ;; Hardware stack levels used: 1
 29888 ;; Hardware stack levels required when called: 4
 29889 ;; This function calls:
 29890 ;;		Nothing
 29891 ;; This function is called by:
 29892 ;;		_I2C1_MasterFsm
 29893 ;; This function uses a non-reentrant model
 29894 ;;
 29895                           
 29896                           	psect	text139
 29897  0091D6                     __ptext139:
 29898                           	callstack 0
 29899  0091D6                     _I2C1_DO_RESET:
 29900                           	callstack 17
 29901                           
 29902                           ; BSR set to: 2
 29903                           ;mcc_generated_files/i2c1_master.c: 496:     I2C1_Status.busy = 0;
 29904                           
 29905                           ;incstack = 0
 29906  0091D6  935F               	bcf	(_I2C1_Status+35)& (0+255),1,b
 29907                           
 29908                           ; BSR set to: 2
 29909                           ;mcc_generated_files/i2c1_master.c: 497:     I2C1_Status.error = I2C1_NOERR;
 29910  0091D8  0E00               	movlw	0
 29911  0091DA  6F5E               	movwf	(_I2C1_Status+34)& (0+255),b
 29912                           
 29913                           ; BSR set to: 2
 29914                           ;mcc_generated_files/i2c1_master.c: 498:     return I2C1_RESET;
 29915  0091DC  0E0E               	movlw	14
 29916                           
 29917                           ; BSR set to: 2
 29918  0091DE  0012               	return		;funcret
 29919  0091E0                     __end_of_I2C1_DO_RESET:
 29920                           	callstack 0
 29921                           
 29922 ;; *************** function _I2C1_DO_RX_NACK_RESTART *****************
 29923 ;; Defined at:
 29924 ;;		line 488 in file "mcc_generated_files/i2c1_master.c"
 29925 ;; Parameters:    Size  Location     Type
 29926 ;;		None
 29927 ;; Auto vars:     Size  Location     Type
 29928 ;;		None
 29929 ;; Return value:  Size  Location     Type
 29930 ;;                  1    wreg      enum E10442
 29931 ;; Registers used:
 29932 ;;		wreg, cstack
 29933 ;; Tracked objects:
 29934 ;;		On entry : 0/2
 29935 ;;		On exit  : 0/0
 29936 ;;		Unchanged: 0/0
 29937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29938 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29939 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29940 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29941 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29942 ;;Total ram usage:        0 bytes
 29943 ;; Hardware stack levels used: 1
 29944 ;; Hardware stack levels required when called: 5
 29945 ;; This function calls:
 29946 ;;		_I2C1_MasterSendNack
 29947 ;; This function is called by:
 29948 ;;		_I2C1_DO_RX
 29949 ;;		_I2C1_MasterFsm
 29950 ;; This function uses a non-reentrant model
 29951 ;;
 29952                           
 29953                           	psect	text140
 29954  009204                     __ptext140:
 29955                           	callstack 0
 29956  009204                     _I2C1_DO_RX_NACK_RESTART:
 29957                           	callstack 16
 29958                           
 29959                           ;mcc_generated_files/i2c1_master.c: 490:     I2C1_MasterSendNack();
 29960                           
 29961                           ; BSR set to: 2
 29962                           ;incstack = 0
 29963  009204  EC2E  F049         	call	_I2C1_MasterSendNack	;wreg free
 29964                           
 29965                           ;mcc_generated_files/i2c1_master.c: 491:     return I2C1_SEND_RESTART;
 29966  009208  0E09               	movlw	9
 29967  00920A  0012               	return		;funcret
 29968  00920C                     __end_of_I2C1_DO_RX_NACK_RESTART:
 29969                           	callstack 0
 29970                           
 29971 ;; *************** function _I2C1_DO_RX_NACK_STOP *****************
 29972 ;; Defined at:
 29973 ;;		line 482 in file "mcc_generated_files/i2c1_master.c"
 29974 ;; Parameters:    Size  Location     Type
 29975 ;;		None
 29976 ;; Auto vars:     Size  Location     Type
 29977 ;;		None
 29978 ;; Return value:  Size  Location     Type
 29979 ;;                  1    wreg      enum E10442
 29980 ;; Registers used:
 29981 ;;		wreg, cstack
 29982 ;; Tracked objects:
 29983 ;;		On entry : 0/2
 29984 ;;		On exit  : 0/0
 29985 ;;		Unchanged: 0/0
 29986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29987 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29988 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29990 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29991 ;;Total ram usage:        0 bytes
 29992 ;; Hardware stack levels used: 1
 29993 ;; Hardware stack levels required when called: 5
 29994 ;; This function calls:
 29995 ;;		_I2C1_MasterSendNack
 29996 ;; This function is called by:
 29997 ;;		_I2C1_DO_RX
 29998 ;;		_I2C1_MasterFsm
 29999 ;; This function uses a non-reentrant model
 30000 ;;
 30001                           
 30002                           	psect	text141
 30003  00920C                     __ptext141:
 30004                           	callstack 0
 30005  00920C                     _I2C1_DO_RX_NACK_STOP:
 30006                           	callstack 16
 30007                           
 30008                           ;mcc_generated_files/i2c1_master.c: 484:     I2C1_MasterSendNack();
 30009                           
 30010                           ;incstack = 0
 30011  00920C  EC2E  F049         	call	_I2C1_MasterSendNack	;wreg free
 30012                           
 30013                           ;mcc_generated_files/i2c1_master.c: 485:     return I2C1_SEND_STOP;
 30014  009210  0E0A               	movlw	10
 30015  009212  0012               	return		;funcret
 30016  009214                     __end_of_I2C1_DO_RX_NACK_STOP:
 30017                           	callstack 0
 30018                           
 30019 ;; *************** function _I2C1_DO_RX_ACK *****************
 30020 ;; Defined at:
 30021 ;;		line 475 in file "mcc_generated_files/i2c1_master.c"
 30022 ;; Parameters:    Size  Location     Type
 30023 ;;		None
 30024 ;; Auto vars:     Size  Location     Type
 30025 ;;		None
 30026 ;; Return value:  Size  Location     Type
 30027 ;;                  1    wreg      enum E10442
 30028 ;; Registers used:
 30029 ;;		wreg, cstack
 30030 ;; Tracked objects:
 30031 ;;		On entry : 3F/2
 30032 ;;		On exit  : 3F/2
 30033 ;;		Unchanged: 3F/0
 30034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30035 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30036 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30038 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30039 ;;Total ram usage:        0 bytes
 30040 ;; Hardware stack levels used: 1
 30041 ;; Hardware stack levels required when called: 5
 30042 ;; This function calls:
 30043 ;;		_I2C1_MasterSendAck
 30044 ;; This function is called by:
 30045 ;;		_I2C1_MasterFsm
 30046 ;; This function uses a non-reentrant model
 30047 ;;
 30048                           
 30049                           	psect	text142
 30050  009214                     __ptext142:
 30051                           	callstack 0
 30052  009214                     _I2C1_DO_RX_ACK:
 30053                           	callstack 16
 30054                           
 30055                           ; BSR set to: 2
 30056                           ;mcc_generated_files/i2c1_master.c: 477:     I2C1_MasterSendAck();
 30057                           
 30058                           ;incstack = 0
 30059  009214  EC2B  F049         	call	_I2C1_MasterSendAck	;wreg free
 30060                           
 30061                           ; BSR set to: 2
 30062                           ;mcc_generated_files/i2c1_master.c: 478:     return I2C1_RCEN;
 30063  009218  0E05               	movlw	5
 30064                           
 30065                           ; BSR set to: 2
 30066  00921A  0012               	return		;funcret
 30067  00921C                     __end_of_I2C1_DO_RX_ACK:
 30068                           	callstack 0
 30069                           
 30070 ;; *************** function _I2C1_DO_SEND_STOP *****************
 30071 ;; Defined at:
 30072 ;;		line 469 in file "mcc_generated_files/i2c1_master.c"
 30073 ;; Parameters:    Size  Location     Type
 30074 ;;		None
 30075 ;; Auto vars:     Size  Location     Type
 30076 ;;		None
 30077 ;; Return value:  Size  Location     Type
 30078 ;;                  1    wreg      enum E10442
 30079 ;; Registers used:
 30080 ;;		wreg, cstack
 30081 ;; Tracked objects:
 30082 ;;		On entry : 0/2
 30083 ;;		On exit  : 0/0
 30084 ;;		Unchanged: 0/0
 30085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30089 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30090 ;;Total ram usage:        0 bytes
 30091 ;; Hardware stack levels used: 1
 30092 ;; Hardware stack levels required when called: 5
 30093 ;; This function calls:
 30094 ;;		_I2C1_MasterStop
 30095 ;; This function is called by:
 30096 ;;		_I2C1_DO_TX
 30097 ;;		_I2C1_DO_TX_EMPTY
 30098 ;;		_I2C1_DO_ADDRESS_NACK
 30099 ;;		_I2C1_MasterFsm
 30100 ;; This function uses a non-reentrant model
 30101 ;;
 30102                           
 30103                           	psect	text143
 30104  00921C                     __ptext143:
 30105                           	callstack 0
 30106  00921C                     _I2C1_DO_SEND_STOP:
 30107                           	callstack 15
 30108                           
 30109                           ;mcc_generated_files/i2c1_master.c: 471:     I2C1_MasterStop();
 30110                           
 30111                           ; BSR set to: 2
 30112                           ;incstack = 0
 30113  00921C  EC49  F049         	call	_I2C1_MasterStop	;wreg free
 30114                           
 30115                           ;mcc_generated_files/i2c1_master.c: 472:     return I2C1_IDLE;
 30116  009220  0E00               	movlw	0
 30117  009222  0012               	return		;funcret
 30118  009224                     __end_of_I2C1_DO_SEND_STOP:
 30119                           	callstack 0
 30120                           
 30121 ;; *************** function _I2C1_DO_SEND_RESTART *****************
 30122 ;; Defined at:
 30123 ;;		line 463 in file "mcc_generated_files/i2c1_master.c"
 30124 ;; Parameters:    Size  Location     Type
 30125 ;;		None
 30126 ;; Auto vars:     Size  Location     Type
 30127 ;;		None
 30128 ;; Return value:  Size  Location     Type
 30129 ;;                  1    wreg      enum E10442
 30130 ;; Registers used:
 30131 ;;		wreg, cstack
 30132 ;; Tracked objects:
 30133 ;;		On entry : 0/2
 30134 ;;		On exit  : 0/0
 30135 ;;		Unchanged: 0/0
 30136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30137 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30138 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30140 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30141 ;;Total ram usage:        0 bytes
 30142 ;; Hardware stack levels used: 1
 30143 ;; Hardware stack levels required when called: 5
 30144 ;; This function calls:
 30145 ;;		_I2C1_MasterEnableRestart
 30146 ;; This function is called by:
 30147 ;;		_I2C1_DO_TX_EMPTY
 30148 ;;		_I2C1_DO_ADDRESS_NACK
 30149 ;;		_I2C1_MasterFsm
 30150 ;; This function uses a non-reentrant model
 30151 ;;
 30152                           
 30153                           	psect	text144
 30154  009224                     __ptext144:
 30155                           	callstack 0
 30156  009224                     _I2C1_DO_SEND_RESTART:
 30157                           	callstack 15
 30158                           
 30159                           ;mcc_generated_files/i2c1_master.c: 465:     I2C1_MasterEnableRestart();
 30160                           
 30161                           ;incstack = 0
 30162  009224  EC4B  F049         	call	_I2C1_MasterEnableRestart	;wreg free
 30163                           
 30164                           ;mcc_generated_files/i2c1_master.c: 466:     return I2C1_SEND_ADR_READ;
 30165  009228  0E01               	movlw	1
 30166  00922A  0012               	return		;funcret
 30167  00922C                     __end_of_I2C1_DO_SEND_RESTART:
 30168                           	callstack 0
 30169                           
 30170 ;; *************** function _I2C1_DO_SEND_RESTART_WRITE *****************
 30171 ;; Defined at:
 30172 ;;		line 456 in file "mcc_generated_files/i2c1_master.c"
 30173 ;; Parameters:    Size  Location     Type
 30174 ;;		None
 30175 ;; Auto vars:     Size  Location     Type
 30176 ;;		None
 30177 ;; Return value:  Size  Location     Type
 30178 ;;                  1    wreg      enum E10442
 30179 ;; Registers used:
 30180 ;;		wreg, cstack
 30181 ;; Tracked objects:
 30182 ;;		On entry : 0/2
 30183 ;;		On exit  : 0/0
 30184 ;;		Unchanged: 0/0
 30185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30186 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30189 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30190 ;;Total ram usage:        0 bytes
 30191 ;; Hardware stack levels used: 1
 30192 ;; Hardware stack levels required when called: 5
 30193 ;; This function calls:
 30194 ;;		_I2C1_MasterEnableRestart
 30195 ;; This function is called by:
 30196 ;;		_I2C1_DO_TX
 30197 ;;		_I2C1_MasterFsm
 30198 ;; This function uses a non-reentrant model
 30199 ;;
 30200                           
 30201                           	psect	text145
 30202  00922C                     __ptext145:
 30203                           	callstack 0
 30204  00922C                     _I2C1_DO_SEND_RESTART_WRITE:
 30205                           	callstack 15
 30206                           
 30207                           ;mcc_generated_files/i2c1_master.c: 458:     I2C1_MasterEnableRestart();
 30208                           
 30209                           ;incstack = 0
 30210  00922C  EC4B  F049         	call	_I2C1_MasterEnableRestart	;wreg free
 30211                           
 30212                           ;mcc_generated_files/i2c1_master.c: 459:     return I2C1_SEND_ADR_WRITE;
 30213  009230  0E02               	movlw	2
 30214  009232  0012               	return		;funcret
 30215  009234                     __end_of_I2C1_DO_SEND_RESTART_WRITE:
 30216                           	callstack 0
 30217                           
 30218 ;; *************** function _I2C1_DO_SEND_RESTART_READ *****************
 30219 ;; Defined at:
 30220 ;;		line 450 in file "mcc_generated_files/i2c1_master.c"
 30221 ;; Parameters:    Size  Location     Type
 30222 ;;		None
 30223 ;; Auto vars:     Size  Location     Type
 30224 ;;		None
 30225 ;; Return value:  Size  Location     Type
 30226 ;;                  1    wreg      enum E10442
 30227 ;; Registers used:
 30228 ;;		wreg, cstack
 30229 ;; Tracked objects:
 30230 ;;		On entry : 0/2
 30231 ;;		On exit  : 0/0
 30232 ;;		Unchanged: 0/0
 30233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30234 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30235 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30237 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30238 ;;Total ram usage:        0 bytes
 30239 ;; Hardware stack levels used: 1
 30240 ;; Hardware stack levels required when called: 5
 30241 ;; This function calls:
 30242 ;;		_I2C1_MasterEnableRestart
 30243 ;; This function is called by:
 30244 ;;		_I2C1_DO_TX
 30245 ;;		_I2C1_MasterFsm
 30246 ;; This function uses a non-reentrant model
 30247 ;;
 30248                           
 30249                           	psect	text146
 30250  009234                     __ptext146:
 30251                           	callstack 0
 30252  009234                     _I2C1_DO_SEND_RESTART_READ:
 30253                           	callstack 15
 30254                           
 30255                           ;mcc_generated_files/i2c1_master.c: 452:     I2C1_MasterEnableRestart();
 30256                           
 30257                           ;incstack = 0
 30258  009234  EC4B  F049         	call	_I2C1_MasterEnableRestart	;wreg free
 30259                           
 30260                           ;mcc_generated_files/i2c1_master.c: 453:     return I2C1_SEND_ADR_READ;
 30261  009238  0E01               	movlw	1
 30262  00923A  0012               	return		;funcret
 30263  00923C                     __end_of_I2C1_DO_SEND_RESTART_READ:
 30264                           	callstack 0
 30265                           
 30266 ;; *************** function _I2C1_DO_RCEN *****************
 30267 ;; Defined at:
 30268 ;;		line 402 in file "mcc_generated_files/i2c1_master.c"
 30269 ;; Parameters:    Size  Location     Type
 30270 ;;		None
 30271 ;; Auto vars:     Size  Location     Type
 30272 ;;		None
 30273 ;; Return value:  Size  Location     Type
 30274 ;;                  1    wreg      enum E10442
 30275 ;; Registers used:
 30276 ;;		wreg, cstack
 30277 ;; Tracked objects:
 30278 ;;		On entry : 3F/2
 30279 ;;		On exit  : 3F/2
 30280 ;;		Unchanged: 0/0
 30281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30282 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30283 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30284 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30285 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30286 ;;Total ram usage:        0 bytes
 30287 ;; Hardware stack levels used: 1
 30288 ;; Hardware stack levels required when called: 5
 30289 ;; This function calls:
 30290 ;;		_I2C1_MasterStartRx
 30291 ;; This function is called by:
 30292 ;;		_I2C1_MasterFsm
 30293 ;; This function uses a non-reentrant model
 30294 ;;
 30295                           
 30296                           	psect	text147
 30297  0091E0                     __ptext147:
 30298                           	callstack 0
 30299  0091E0                     _I2C1_DO_RCEN:
 30300                           	callstack 16
 30301                           
 30302                           ; BSR set to: 2
 30303                           ;mcc_generated_files/i2c1_master.c: 404:     I2C1_Status.addressNackCheck = 0;
 30304                           
 30305                           ;incstack = 0
 30306  0091E0  915F               	bcf	(_I2C1_Status+35)& (0+255),0,b
 30307                           
 30308                           ; BSR set to: 2
 30309                           ;mcc_generated_files/i2c1_master.c: 405:     I2C1_MasterStartRx();
 30310  0091E2  EC43  F049         	call	_I2C1_MasterStartRx	;wreg free
 30311                           
 30312                           ; BSR set to: 2
 30313                           ;mcc_generated_files/i2c1_master.c: 406:     return I2C1_RX;
 30314  0091E6  0E04               	movlw	4
 30315                           
 30316                           ; BSR set to: 2
 30317  0091E8  0012               	return		;funcret
 30318  0091EA                     __end_of_I2C1_DO_RCEN:
 30319                           	callstack 0
 30320                           
 30321 ;; *************** function _I2C1_DO_RX *****************
 30322 ;; Defined at:
 30323 ;;		line 378 in file "mcc_generated_files/i2c1_master.c"
 30324 ;; Parameters:    Size  Location     Type
 30325 ;;		None
 30326 ;; Auto vars:     Size  Location     Type
 30327 ;;		None
 30328 ;; Return value:  Size  Location     Type
 30329 ;;                  1    wreg      enum E10442
 30330 ;; Registers used:
 30331 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 30332 ;; Tracked objects:
 30333 ;;		On entry : 3F/2
 30334 ;;		On exit  : 0/0
 30335 ;;		Unchanged: 0/0
 30336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30338 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30339 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30340 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30341 ;;Total ram usage:        2 bytes
 30342 ;; Hardware stack levels used: 1
 30343 ;; Hardware stack levels required when called: 7
 30344 ;; This function calls:
 30345 ;;		Absolute function
 30346 ;;		_I2C1_CallbackReturnReset
 30347 ;;		_I2C1_CallbackReturnStop
 30348 ;;		_I2C1_DO_RX_NACK_RESTART
 30349 ;;		_I2C1_DO_RX_NACK_STOP
 30350 ;;		_I2C1_MasterGetRxData
 30351 ;;		_I2C1_MasterSendAck
 30352 ;;		_rd1RegCompleteHandler
 30353 ;;		_rd1RegCompleteHandler@i2c1_master_example$F500
 30354 ;;		_rd2RegCompleteHandler
 30355 ;;		_rd2RegCompleteHandler@i2c1_master_example$F511
 30356 ;;		_rdBlkRegCompleteHandler
 30357 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F535
 30358 ;;		_wr1RegCompleteHandler
 30359 ;;		_wr1RegCompleteHandler@i2c1_master_example$F517
 30360 ;;		_wr2RegCompleteHandler
 30361 ;;		_wr2RegCompleteHandler@i2c1_master_example$F523
 30362 ;; This function is called by:
 30363 ;;		_I2C1_MasterFsm
 30364 ;; This function uses a non-reentrant model
 30365 ;;
 30366                           
 30367                           	psect	text148
 30368  007C2E                     __ptext148:
 30369                           	callstack 0
 30370  007C2E                     _I2C1_DO_RX:
 30371                           	callstack 14
 30372                           
 30373                           ; BSR set to: 2
 30374                           ;mcc_generated_files/i2c1_master.c: 380:     *I2C1_Status.data_ptr++ = I2C1_MasterGetRxD
      +                          ata();
 30375                           
 30376                           ; BSR set to: 2
 30377                           ;incstack = 0
 30378  007C2E  EC41  F049         	call	_I2C1_MasterGetRxData	;wreg free
 30379  007C32  C259  FFD9         	movff	_I2C1_Status+29,fsr2l
 30380  007C36  C25A  FFDA         	movff	_I2C1_Status+30,fsr2h
 30381  007C3A  6EDF               	movwf	indf2,c
 30382                           
 30383                           ; BSR set to: 2
 30384  007C3C  4B59               	infsnz	(_I2C1_Status+29)& (0+255),f,b
 30385  007C3E  2B5A               	incf	(_I2C1_Status+30)& (0+255),f,b
 30386                           
 30387                           ; BSR set to: 2
 30388                           ;mcc_generated_files/i2c1_master.c: 381:     if(--I2C1_Status.data_length)
 30389  007C40  075B               	decf	(_I2C1_Status+31)& (0+255),f,b
 30390  007C42  A0D8               	btfss	status,0,c
 30391  007C44  075C               	decf	(_I2C1_Status+32)& (0+255),f,b
 30392  007C46  515B               	movf	(_I2C1_Status+31)& (0+255),w,b
 30393  007C48  115C               	iorwf	(_I2C1_Status+32)& (0+255),w,b
 30394  007C4A  B4D8               	btfsc	status,2,c
 30395  007C4C  D004               	goto	l690
 30396                           
 30397                           ; BSR set to: 2
 30398                           ;mcc_generated_files/i2c1_master.c: 382:     {;mcc_generated_files/i2c1_master.c: 383:  
      +                                 I2C1_MasterSendAck();
 30399  007C4E  EC2B  F049         	call	_I2C1_MasterSendAck	;wreg free
 30400                           
 30401                           ; BSR set to: 2
 30402                           ;mcc_generated_files/i2c1_master.c: 384:         return I2C1_RCEN;
 30403  007C52  0E05               	movlw	5
 30404  007C54  0012               	return	
 30405  007C56                     l690:
 30406                           
 30407                           ; BSR set to: 2
 30408                           ;mcc_generated_files/i2c1_master.c: 387:     {;mcc_generated_files/i2c1_master.c: 388:  
      +                                 I2C1_Status.bufferFree = 1;
 30409  007C56  875F               	bsf	(_I2C1_Status+35)& (0+255),3,b
 30410                           
 30411                           ;mcc_generated_files/i2c1_master.c: 389:         switch(I2C1_Status.callbackTable[I2C1_D
      +                          ATA_COMPLETE](I2C1_Status.callbackPayload[I2C1_DATA_COMPLETE]))
 30412  007C58  D006               	goto	l19120
 30413  007C5A                     l19110:
 30414                           
 30415                           ;mcc_generated_files/i2c1_master.c: 393:                 return I2C1_DO_RX_NACK_RESTART(
      +                          );
 30416  007C5A  EC02  F049         	call	_I2C1_DO_RX_NACK_RESTART	;wreg free
 30417  007C5E  0012               	return	
 30418  007C60                     l19114:
 30419                           
 30420                           ;mcc_generated_files/i2c1_master.c: 397:                 return I2C1_DO_RX_NACK_STOP();
 30421  007C60  EC06  F049         	call	_I2C1_DO_RX_NACK_STOP	;wreg free
 30422  007C64  0012               	return	
 30423  007C66                     l19120:
 30424                           
 30425                           ; BSR set to: 2
 30426  007C66  C248  F019         	movff	_I2C1_Status+12,I2C1_CallbackReturnReset@funPtr
 30427  007C6A  C249  F01A         	movff	_I2C1_Status+13,I2C1_CallbackReturnReset@funPtr+1
 30428  007C6E  D801               	call	u21908
 30429  007C70  D009               	goto	u21909
 30430  007C72                     u21908:
 30431  007C72  0005               	push	
 30432  007C74  6EFA               	movwf	pclath,c
 30433  007C76  513C               	movf	_I2C1_Status& (0+255),w,b
 30434  007C78  6EFD               	movwf	tosl,c
 30435  007C7A  513D               	movf	(_I2C1_Status+1)& (0+255),w,b
 30436  007C7C  6EFE               	movwf	tosh,c
 30437  007C7E  6AFF               	clrf	tosu,c
 30438  007C80  50FA               	movf	pclath,w,c
 30439  007C82  0012               	return		;indir
 30440  007C84                     u21909:
 30441  007C84  6E1B               	movwf	??_I2C1_DO_RX^0,c
 30442  007C86  6A1C               	clrf	(??_I2C1_DO_RX+1)^0,c
 30443                           
 30444                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 30445                           ; Switch size 1, requested type "simple"
 30446                           ; Number of cases is 1, Range of values is 0 to 0
 30447                           ; switch strategies available:
 30448                           ; Name         Instructions Cycles
 30449                           ; simple_byte            4     3 (average)
 30450                           ;	Chosen strategy is simple_byte
 30451  007C88  501C               	movf	(??_I2C1_DO_RX+1)^0,w,c
 30452  007C8A  0A00               	xorlw	0	; case 0
 30453  007C8C  A4D8               	btfss	status,2,c
 30454  007C8E  D7E8               	goto	l19114
 30455                           
 30456                           ; Switch size 1, requested type "simple"
 30457                           ; Number of cases is 4, Range of values is 1 to 4
 30458                           ; switch strategies available:
 30459                           ; Name         Instructions Cycles
 30460                           ; simple_byte           13     7 (average)
 30461                           ;	Chosen strategy is simple_byte
 30462  007C90  501B               	movf	??_I2C1_DO_RX^0,w,c
 30463  007C92  0A01               	xorlw	1	; case 1
 30464  007C94  B4D8               	btfsc	status,2,c
 30465  007C96  D7E4               	goto	l19114
 30466  007C98  0A03               	xorlw	3	; case 2
 30467  007C9A  B4D8               	btfsc	status,2,c
 30468  007C9C  D7DE               	goto	l19110
 30469  007C9E  0A01               	xorlw	1	; case 3
 30470  007CA0  B4D8               	btfsc	status,2,c
 30471  007CA2  D7DB               	goto	l19110
 30472  007CA4  0A07               	xorlw	7	; case 4
 30473  007CA6  D7DC               	goto	l19114
 30474  007CA8                     __end_of_I2C1_DO_RX:
 30475                           	callstack 0
 30476                           
 30477 ;; *************** function _I2C1_DO_TX *****************
 30478 ;; Defined at:
 30479 ;;		line 354 in file "mcc_generated_files/i2c1_master.c"
 30480 ;; Parameters:    Size  Location     Type
 30481 ;;		None
 30482 ;; Auto vars:     Size  Location     Type
 30483 ;;		None
 30484 ;; Return value:  Size  Location     Type
 30485 ;;                  1    wreg      enum E10442
 30486 ;; Registers used:
 30487 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 30488 ;; Tracked objects:
 30489 ;;		On entry : 3F/2
 30490 ;;		On exit  : 0/0
 30491 ;;		Unchanged: 0/0
 30492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30495 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30496 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30497 ;;Total ram usage:        2 bytes
 30498 ;; Hardware stack levels used: 1
 30499 ;; Hardware stack levels required when called: 7
 30500 ;; This function calls:
 30501 ;;		Absolute function
 30502 ;;		_I2C1_CallbackReturnReset
 30503 ;;		_I2C1_CallbackReturnStop
 30504 ;;		_I2C1_DO_SEND_RESTART_READ
 30505 ;;		_I2C1_DO_SEND_RESTART_WRITE
 30506 ;;		_I2C1_DO_SEND_STOP
 30507 ;;		_I2C1_MasterIsNack
 30508 ;;		_I2C1_MasterSendTxData
 30509 ;;		_rd1RegCompleteHandler
 30510 ;;		_rd1RegCompleteHandler@i2c1_master_example$F500
 30511 ;;		_rd2RegCompleteHandler
 30512 ;;		_rd2RegCompleteHandler@i2c1_master_example$F511
 30513 ;;		_rdBlkRegCompleteHandler
 30514 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F535
 30515 ;;		_wr1RegCompleteHandler
 30516 ;;		_wr1RegCompleteHandler@i2c1_master_example$F517
 30517 ;;		_wr2RegCompleteHandler
 30518 ;;		_wr2RegCompleteHandler@i2c1_master_example$F523
 30519 ;; This function is called by:
 30520 ;;		_I2C1_MasterFsm
 30521 ;; This function uses a non-reentrant model
 30522 ;;
 30523                           
 30524                           	psect	text149
 30525  00778E                     __ptext149:
 30526                           	callstack 0
 30527  00778E                     _I2C1_DO_TX:
 30528                           	callstack 14
 30529                           
 30530                           ; BSR set to: 2
 30531                           ;mcc_generated_files/i2c1_master.c: 356:     if(I2C1_MasterIsNack())
 30532                           
 30533                           ;incstack = 0
 30534  00778E  ECB2  F048         	call	_I2C1_MasterIsNack	;wreg free
 30535  007792  0900               	iorlw	0
 30536  007794  A4D8               	btfss	status,2,c
 30537  007796  D00A               	goto	l19080
 30538  007798  D02A               	goto	l674
 30539  00779A                     l19066:
 30540                           
 30541                           ;mcc_generated_files/i2c1_master.c: 361:                 return I2C1_DO_SEND_RESTART_REA
      +                          D();
 30542  00779A  EC1A  F049         	call	_I2C1_DO_SEND_RESTART_READ	;wreg free
 30543  00779E  0012               	return	
 30544  0077A0                     l19070:
 30545                           
 30546                           ;mcc_generated_files/i2c1_master.c: 363:                   return I2C1_DO_SEND_RESTART_W
      +                          RITE();
 30547  0077A0  EC16  F049         	call	_I2C1_DO_SEND_RESTART_WRITE	;wreg free
 30548  0077A4  0012               	return	
 30549  0077A6                     l19074:
 30550                           
 30551                           ;mcc_generated_files/i2c1_master.c: 367:                 return I2C1_DO_SEND_STOP();
 30552  0077A6  EC0E  F049         	call	_I2C1_DO_SEND_STOP	;wreg free
 30553  0077AA  0012               	return	
 30554  0077AC                     l19080:
 30555                           
 30556                           ; BSR set to: 2
 30557  0077AC  C24E  F019         	movff	_I2C1_Status+18,I2C1_CallbackReturnReset@funPtr
 30558  0077B0  C24F  F01A         	movff	_I2C1_Status+19,I2C1_CallbackReturnReset@funPtr+1
 30559  0077B4  D801               	call	u21878
 30560  0077B6  D009               	goto	u21879
 30561  0077B8                     u21878:
 30562  0077B8  0005               	push	
 30563  0077BA  6EFA               	movwf	pclath,c
 30564  0077BC  5142               	movf	(_I2C1_Status+6)& (0+255),w,b
 30565  0077BE  6EFD               	movwf	tosl,c
 30566  0077C0  5143               	movf	(_I2C1_Status+7)& (0+255),w,b
 30567  0077C2  6EFE               	movwf	tosh,c
 30568  0077C4  6AFF               	clrf	tosu,c
 30569  0077C6  50FA               	movf	pclath,w,c
 30570  0077C8  0012               	return		;indir
 30571  0077CA                     u21879:
 30572  0077CA  6E1B               	movwf	??_I2C1_DO_TX^0,c
 30573  0077CC  6A1C               	clrf	(??_I2C1_DO_TX+1)^0,c
 30574                           
 30575                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 30576                           ; Switch size 1, requested type "simple"
 30577                           ; Number of cases is 1, Range of values is 0 to 0
 30578                           ; switch strategies available:
 30579                           ; Name         Instructions Cycles
 30580                           ; simple_byte            4     3 (average)
 30581                           ;	Chosen strategy is simple_byte
 30582  0077CE  501C               	movf	(??_I2C1_DO_TX+1)^0,w,c
 30583  0077D0  0A00               	xorlw	0	; case 0
 30584  0077D2  A4D8               	btfss	status,2,c
 30585  0077D4  D7E8               	goto	l19074
 30586                           
 30587                           ; Switch size 1, requested type "simple"
 30588                           ; Number of cases is 4, Range of values is 1 to 4
 30589                           ; switch strategies available:
 30590                           ; Name         Instructions Cycles
 30591                           ; simple_byte           13     7 (average)
 30592                           ;	Chosen strategy is simple_byte
 30593  0077D6  501B               	movf	??_I2C1_DO_TX^0,w,c
 30594  0077D8  0A01               	xorlw	1	; case 1
 30595  0077DA  B4D8               	btfsc	status,2,c
 30596  0077DC  D7E4               	goto	l19074
 30597  0077DE  0A03               	xorlw	3	; case 2
 30598  0077E0  B4D8               	btfsc	status,2,c
 30599  0077E2  D7DB               	goto	l19066
 30600  0077E4  0A01               	xorlw	1	; case 3
 30601  0077E6  B4D8               	btfsc	status,2,c
 30602  0077E8  D7DB               	goto	l19070
 30603  0077EA  0A07               	xorlw	7	; case 4
 30604  0077EC  D7DC               	goto	l19074
 30605  0077EE                     l674:
 30606                           
 30607                           ; BSR set to: 2
 30608                           ;mcc_generated_files/i2c1_master.c: 371:     {;mcc_generated_files/i2c1_master.c: 372:  
      +                                 I2C1_Status.addressNackCheck = 0;
 30609  0077EE  915F               	bcf	(_I2C1_Status+35)& (0+255),0,b
 30610                           
 30611                           ; BSR set to: 2
 30612                           ;mcc_generated_files/i2c1_master.c: 373:         I2C1_MasterSendTxData(*I2C1_Status.data
      +                          _ptr++);
 30613  0077F0  C259  FFD9         	movff	_I2C1_Status+29,fsr2l
 30614  0077F4  C25A  FFDA         	movff	_I2C1_Status+30,fsr2h
 30615  0077F8  4B59               	infsnz	(_I2C1_Status+29)& (0+255),f,b
 30616  0077FA  2B5A               	incf	(_I2C1_Status+30)& (0+255),f,b
 30617  0077FC  50DF               	movf	indf2,w,c
 30618  0077FE  EC1E  F049         	call	_I2C1_MasterSendTxData
 30619                           
 30620                           ;mcc_generated_files/i2c1_master.c: 374:         return (--I2C1_Status.data_length)?I2C1
      +                          _TX:I2C1_TX_EMPTY;
 30621  007802  0102               	movlb	2	; () banked
 30622  007804  075B               	decf	(_I2C1_Status+31)& (0+255),f,b
 30623  007806  A0D8               	btfss	status,0,c
 30624  007808  075C               	decf	(_I2C1_Status+32)& (0+255),f,b
 30625  00780A  515B               	movf	(_I2C1_Status+31)& (0+255),w,b
 30626  00780C  115C               	iorwf	(_I2C1_Status+32)& (0+255),w,b
 30627  00780E  A4D8               	btfss	status,2,c
 30628  007810  D002               	goto	l19088
 30629                           
 30630                           ; BSR set to: 2
 30631  007812  0E06               	movlw	6
 30632  007814  0012               	return	
 30633  007816                     l19088:
 30634                           
 30635                           ; BSR set to: 2
 30636  007816  0E03               	movlw	3
 30637  007818  0012               	return		;funcret
 30638  00781A                     __end_of_I2C1_DO_TX:
 30639                           	callstack 0
 30640                           
 30641 ;; *************** function _I2C1_DO_SEND_ADR_WRITE *****************
 30642 ;; Defined at:
 30643 ;;		line 347 in file "mcc_generated_files/i2c1_master.c"
 30644 ;; Parameters:    Size  Location     Type
 30645 ;;		None
 30646 ;; Auto vars:     Size  Location     Type
 30647 ;;		None
 30648 ;; Return value:  Size  Location     Type
 30649 ;;                  1    wreg      enum E10442
 30650 ;; Registers used:
 30651 ;;		wreg, status,2, status,0, cstack
 30652 ;; Tracked objects:
 30653 ;;		On entry : 3F/2
 30654 ;;		On exit  : 0/0
 30655 ;;		Unchanged: 0/0
 30656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30660 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30661 ;;Total ram usage:        0 bytes
 30662 ;; Hardware stack levels used: 1
 30663 ;; Hardware stack levels required when called: 5
 30664 ;; This function calls:
 30665 ;;		_I2C1_MasterSendTxData
 30666 ;; This function is called by:
 30667 ;;		_I2C1_MasterFsm
 30668 ;; This function uses a non-reentrant model
 30669 ;;
 30670                           
 30671                           	psect	text150
 30672  009148                     __ptext150:
 30673                           	callstack 0
 30674  009148                     _I2C1_DO_SEND_ADR_WRITE:
 30675                           	callstack 16
 30676                           
 30677                           ; BSR set to: 2
 30678                           ;mcc_generated_files/i2c1_master.c: 349:     I2C1_Status.addressNackCheck = 1;
 30679                           
 30680                           ;incstack = 0
 30681  009148  815F               	bsf	(_I2C1_Status+35)& (0+255),0,b
 30682                           
 30683                           ; BSR set to: 2
 30684                           ;mcc_generated_files/i2c1_master.c: 350:     I2C1_MasterSendTxData((uint8_t) (I2C1_Statu
      +                          s.address << 1));
 30685  00914A  5158               	movf	(_I2C1_Status+28)& (0+255),w,b
 30686  00914C  2558               	addwf	(_I2C1_Status+28)& (0+255),w,b
 30687  00914E  EC1E  F049         	call	_I2C1_MasterSendTxData
 30688                           
 30689                           ;mcc_generated_files/i2c1_master.c: 351:     return I2C1_TX;
 30690  009152  0E03               	movlw	3
 30691  009154  0012               	return		;funcret
 30692  009156                     __end_of_I2C1_DO_SEND_ADR_WRITE:
 30693                           	callstack 0
 30694                           
 30695 ;; *************** function _I2C1_DO_SEND_ADR_READ *****************
 30696 ;; Defined at:
 30697 ;;		line 340 in file "mcc_generated_files/i2c1_master.c"
 30698 ;; Parameters:    Size  Location     Type
 30699 ;;		None
 30700 ;; Auto vars:     Size  Location     Type
 30701 ;;		None
 30702 ;; Return value:  Size  Location     Type
 30703 ;;                  1    wreg      enum E10442
 30704 ;; Registers used:
 30705 ;;		wreg, status,0, cstack
 30706 ;; Tracked objects:
 30707 ;;		On entry : 3F/2
 30708 ;;		On exit  : 0/0
 30709 ;;		Unchanged: 0/0
 30710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30714 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30715 ;;Total ram usage:        0 bytes
 30716 ;; Hardware stack levels used: 1
 30717 ;; Hardware stack levels required when called: 5
 30718 ;; This function calls:
 30719 ;;		_I2C1_MasterSendTxData
 30720 ;; This function is called by:
 30721 ;;		_I2C1_MasterFsm
 30722 ;; This function uses a non-reentrant model
 30723 ;;
 30724                           
 30725                           	psect	text151
 30726  009156                     __ptext151:
 30727                           	callstack 0
 30728  009156                     _I2C1_DO_SEND_ADR_READ:
 30729                           	callstack 16
 30730                           
 30731                           ; BSR set to: 2
 30732                           ;mcc_generated_files/i2c1_master.c: 342:     I2C1_Status.addressNackCheck = 1;
 30733                           
 30734                           ;incstack = 0
 30735  009156  815F               	bsf	(_I2C1_Status+35)& (0+255),0,b
 30736                           
 30737                           ; BSR set to: 2
 30738                           ;mcc_generated_files/i2c1_master.c: 343:     I2C1_MasterSendTxData((uint8_t) (I2C1_Statu
      +                          s.address << 1 | 1));
 30739  009158  80D8               	bsf	status,0,c
 30740  00915A  3558               	rlcf	(_I2C1_Status+28)& (0+255),w,b
 30741  00915C  EC1E  F049         	call	_I2C1_MasterSendTxData
 30742                           
 30743                           ;mcc_generated_files/i2c1_master.c: 344:     return I2C1_RCEN;
 30744  009160  0E05               	movlw	5
 30745  009162  0012               	return		;funcret
 30746  009164                     __end_of_I2C1_DO_SEND_ADR_READ:
 30747                           	callstack 0
 30748                           
 30749 ;; *************** function _I2C1_DO_IDLE *****************
 30750 ;; Defined at:
 30751 ;;		line 333 in file "mcc_generated_files/i2c1_master.c"
 30752 ;; Parameters:    Size  Location     Type
 30753 ;;		None
 30754 ;; Auto vars:     Size  Location     Type
 30755 ;;		None
 30756 ;; Return value:  Size  Location     Type
 30757 ;;                  1    wreg      enum E10442
 30758 ;; Registers used:
 30759 ;;		wreg, status,2
 30760 ;; Tracked objects:
 30761 ;;		On entry : 3F/2
 30762 ;;		On exit  : 3F/2
 30763 ;;		Unchanged: 0/0
 30764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30765 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30766 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30767 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30768 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30769 ;;Total ram usage:        0 bytes
 30770 ;; Hardware stack levels used: 1
 30771 ;; Hardware stack levels required when called: 4
 30772 ;; This function calls:
 30773 ;;		Nothing
 30774 ;; This function is called by:
 30775 ;;		_I2C1_MasterFsm
 30776 ;; This function uses a non-reentrant model
 30777 ;;
 30778                           
 30779                           	psect	text152
 30780  0091EA                     __ptext152:
 30781                           	callstack 0
 30782  0091EA                     _I2C1_DO_IDLE:
 30783                           	callstack 17
 30784                           
 30785                           ; BSR set to: 2
 30786                           ;mcc_generated_files/i2c1_master.c: 335:     I2C1_Status.busy = 0;
 30787                           
 30788                           ;incstack = 0
 30789  0091EA  935F               	bcf	(_I2C1_Status+35)& (0+255),1,b
 30790                           
 30791                           ; BSR set to: 2
 30792                           ;mcc_generated_files/i2c1_master.c: 336:     I2C1_Status.error = I2C1_NOERR;
 30793  0091EC  0E00               	movlw	0
 30794  0091EE  6F5E               	movwf	(_I2C1_Status+34)& (0+255),b
 30795                           
 30796                           ; BSR set to: 2
 30797                           ;mcc_generated_files/i2c1_master.c: 337:     return I2C1_RESET;
 30798  0091F0  0E0E               	movlw	14
 30799                           
 30800                           ; BSR set to: 2
 30801  0091F2  0012               	return		;funcret
 30802  0091F4                     __end_of_I2C1_DO_IDLE:
 30803                           	callstack 0
 30804                           
 30805 ;; *************** function _I2C1_DO_TX_EMPTY *****************
 30806 ;; Defined at:
 30807 ;;		line 409 in file "mcc_generated_files/i2c1_master.c"
 30808 ;; Parameters:    Size  Location     Type
 30809 ;;		None
 30810 ;; Auto vars:     Size  Location     Type
 30811 ;;		None
 30812 ;; Return value:  Size  Location     Type
 30813 ;;                  1    wreg      enum E10442
 30814 ;; Registers used:
 30815 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 30816 ;; Tracked objects:
 30817 ;;		On entry : 3F/2
 30818 ;;		On exit  : 0/0
 30819 ;;		Unchanged: 0/0
 30820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30821 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30822 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30823 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30824 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30825 ;;Total ram usage:        2 bytes
 30826 ;; Hardware stack levels used: 1
 30827 ;; Hardware stack levels required when called: 7
 30828 ;; This function calls:
 30829 ;;		Absolute function
 30830 ;;		_I2C1_CallbackReturnReset
 30831 ;;		_I2C1_CallbackReturnStop
 30832 ;;		_I2C1_DO_SEND_RESTART
 30833 ;;		_I2C1_DO_SEND_STOP
 30834 ;;		_I2C1_MasterSetIrq
 30835 ;;		_rd1RegCompleteHandler
 30836 ;;		_rd1RegCompleteHandler@i2c1_master_example$F500
 30837 ;;		_rd2RegCompleteHandler
 30838 ;;		_rd2RegCompleteHandler@i2c1_master_example$F511
 30839 ;;		_rdBlkRegCompleteHandler
 30840 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F535
 30841 ;;		_wr1RegCompleteHandler
 30842 ;;		_wr1RegCompleteHandler@i2c1_master_example$F517
 30843 ;;		_wr2RegCompleteHandler
 30844 ;;		_wr2RegCompleteHandler@i2c1_master_example$F523
 30845 ;; This function is called by:
 30846 ;;		_I2C1_MasterFsm
 30847 ;; This function uses a non-reentrant model
 30848 ;;
 30849                           
 30850                           	psect	text153
 30851  0081DA                     __ptext153:
 30852                           	callstack 0
 30853  0081DA                     _I2C1_DO_TX_EMPTY:
 30854                           	callstack 14
 30855                           
 30856                           ; BSR set to: 2
 30857                           ;mcc_generated_files/i2c1_master.c: 411:     I2C1_Status.bufferFree = 1;
 30858                           
 30859                           ; BSR set to: 2
 30860                           ;incstack = 0
 30861  0081DA  875F               	bsf	(_I2C1_Status+35)& (0+255),3,b
 30862                           
 30863                           ;mcc_generated_files/i2c1_master.c: 412:     switch(I2C1_Status.callbackTable[I2C1_DATA_
      +                          COMPLETE](I2C1_Status.callbackPayload[I2C1_DATA_COMPLETE]))
 30864  0081DC  D00A               	goto	l19152
 30865  0081DE                     l19136:
 30866                           
 30867                           ;mcc_generated_files/i2c1_master.c: 416:             return I2C1_DO_SEND_RESTART();
 30868  0081DE  EC12  F049         	call	_I2C1_DO_SEND_RESTART	;wreg free
 30869  0081E2  0012               	return	
 30870  0081E4                     l19140:
 30871                           
 30872                           ;mcc_generated_files/i2c1_master.c: 418:             I2C1_MasterSetIrq();
 30873  0081E4  EC28  F049         	call	_I2C1_MasterSetIrq	;wreg free
 30874                           
 30875                           ; BSR set to: 14
 30876                           ;mcc_generated_files/i2c1_master.c: 419:             return I2C1_TX;
 30877  0081E8  0E03               	movlw	3
 30878  0081EA  0012               	return	
 30879  0081EC                     l19146:
 30880                           
 30881                           ;mcc_generated_files/i2c1_master.c: 422:             return I2C1_DO_SEND_STOP();
 30882  0081EC  EC0E  F049         	call	_I2C1_DO_SEND_STOP	;wreg free
 30883  0081F0  0012               	return	
 30884  0081F2                     l19152:
 30885                           
 30886                           ; BSR set to: 2
 30887  0081F2  C248  F019         	movff	_I2C1_Status+12,I2C1_CallbackReturnReset@funPtr
 30888  0081F6  C249  F01A         	movff	_I2C1_Status+13,I2C1_CallbackReturnReset@funPtr+1
 30889  0081FA  D801               	call	u21918
 30890  0081FC  D009               	goto	u21919
 30891  0081FE                     u21918:
 30892  0081FE  0005               	push	
 30893  008200  6EFA               	movwf	pclath,c
 30894  008202  513C               	movf	_I2C1_Status& (0+255),w,b
 30895  008204  6EFD               	movwf	tosl,c
 30896  008206  513D               	movf	(_I2C1_Status+1)& (0+255),w,b
 30897  008208  6EFE               	movwf	tosh,c
 30898  00820A  6AFF               	clrf	tosu,c
 30899  00820C  50FA               	movf	pclath,w,c
 30900  00820E  0012               	return		;indir
 30901  008210                     u21919:
 30902  008210  6E1B               	movwf	??_I2C1_DO_TX_EMPTY^0,c
 30903  008212  6A1C               	clrf	(??_I2C1_DO_TX_EMPTY+1)^0,c
 30904                           
 30905                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 30906                           ; Switch size 1, requested type "simple"
 30907                           ; Number of cases is 1, Range of values is 0 to 0
 30908                           ; switch strategies available:
 30909                           ; Name         Instructions Cycles
 30910                           ; simple_byte            4     3 (average)
 30911                           ;	Chosen strategy is simple_byte
 30912  008214  501C               	movf	(??_I2C1_DO_TX_EMPTY+1)^0,w,c
 30913  008216  0A00               	xorlw	0	; case 0
 30914  008218  A4D8               	btfss	status,2,c
 30915  00821A  D7E8               	goto	l19146
 30916                           
 30917                           ; Switch size 1, requested type "simple"
 30918                           ; Number of cases is 4, Range of values is 1 to 4
 30919                           ; switch strategies available:
 30920                           ; Name         Instructions Cycles
 30921                           ; simple_byte           13     7 (average)
 30922                           ;	Chosen strategy is simple_byte
 30923  00821C  501B               	movf	??_I2C1_DO_TX_EMPTY^0,w,c
 30924  00821E  0A01               	xorlw	1	; case 1
 30925  008220  B4D8               	btfsc	status,2,c
 30926  008222  D7E4               	goto	l19146
 30927  008224  0A03               	xorlw	3	; case 2
 30928  008226  B4D8               	btfsc	status,2,c
 30929  008228  D7DA               	goto	l19136
 30930  00822A  0A01               	xorlw	1	; case 3
 30931  00822C  B4D8               	btfsc	status,2,c
 30932  00822E  D7D7               	goto	l19136
 30933  008230  0A07               	xorlw	7	; case 4
 30934  008232  B4D8               	btfsc	status,2,c
 30935  008234  D7D7               	goto	l19140
 30936  008236  D7DA               	goto	l19146
 30937  008238                     __end_of_I2C1_DO_TX_EMPTY:
 30938                           	callstack 0
 30939                           
 30940 ;; *************** function _I2C1_MasterSetIrq *****************
 30941 ;; Defined at:
 30942 ;;		line 645 in file "mcc_generated_files/i2c1_master.c"
 30943 ;; Parameters:    Size  Location     Type
 30944 ;;		None
 30945 ;; Auto vars:     Size  Location     Type
 30946 ;;		None
 30947 ;; Return value:  Size  Location     Type
 30948 ;;                  1    wreg      void 
 30949 ;; Registers used:
 30950 ;;		None
 30951 ;; Tracked objects:
 30952 ;;		On entry : 0/2
 30953 ;;		On exit  : 3F/E
 30954 ;;		Unchanged: 0/0
 30955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30956 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30957 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30959 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30960 ;;Total ram usage:        0 bytes
 30961 ;; Hardware stack levels used: 1
 30962 ;; Hardware stack levels required when called: 4
 30963 ;; This function calls:
 30964 ;;		Nothing
 30965 ;; This function is called by:
 30966 ;;		_I2C1_DO_TX_EMPTY
 30967 ;; This function uses a non-reentrant model
 30968 ;;
 30969                           
 30970                           	psect	text154
 30971  009250                     __ptext154:
 30972                           	callstack 0
 30973  009250                     _I2C1_MasterSetIrq:
 30974                           	callstack 16
 30975                           
 30976                           ;mcc_generated_files/i2c1_master.c: 647:     PIR3bits.SSP1IF = 1;
 30977                           
 30978                           ;incstack = 0
 30979  009250  010E               	movlb	14	; () banked
 30980  009252  81CD               	bsf	205,0,b	;volatile
 30981                           
 30982                           ; BSR set to: 14
 30983  009254  0012               	return		;funcret
 30984  009256                     __end_of_I2C1_MasterSetIrq:
 30985                           	callstack 0
 30986                           
 30987 ;; *************** function _I2C1_MasterIsNack *****************
 30988 ;; Defined at:
 30989 ;;		line 598 in file "mcc_generated_files/i2c1_master.c"
 30990 ;; Parameters:    Size  Location     Type
 30991 ;;		None
 30992 ;; Auto vars:     Size  Location     Type
 30993 ;;		None
 30994 ;; Return value:  Size  Location     Type
 30995 ;;                  1    wreg      _Bool 
 30996 ;; Registers used:
 30997 ;;		wreg
 30998 ;; Tracked objects:
 30999 ;;		On entry : 3F/2
 31000 ;;		On exit  : 3F/2
 31001 ;;		Unchanged: 3F/0
 31002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31003 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31004 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31006 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31007 ;;Total ram usage:        0 bytes
 31008 ;; Hardware stack levels used: 1
 31009 ;; Hardware stack levels required when called: 4
 31010 ;; This function calls:
 31011 ;;		Nothing
 31012 ;; This function is called by:
 31013 ;;		_I2C1_MasterFsm
 31014 ;;		_I2C1_DO_TX
 31015 ;; This function uses a non-reentrant model
 31016 ;;
 31017                           
 31018                           	psect	text155
 31019  009164                     __ptext155:
 31020                           	callstack 0
 31021  009164                     _I2C1_MasterIsNack:
 31022                           	callstack 17
 31023                           
 31024                           ; BSR set to: 2
 31025                           ;mcc_generated_files/i2c1_master.c: 600:     return SSP1CON2bits.ACKSTAT;
 31026                           
 31027                           ; BSR set to: 14
 31028                           ;incstack = 0
 31029  009164  AC97               	btfss	151,6,c	;volatile
 31030  009166  D002               	goto	u21850
 31031  009168  0E01               	movlw	1
 31032  00916A  0012               	return	
 31033  00916C                     u21850:
 31034  00916C  0E00               	movlw	0
 31035                           
 31036                           ; BSR set to: 2
 31037  00916E  0012               	return		;funcret
 31038  009170                     __end_of_I2C1_MasterIsNack:
 31039                           	callstack 0
 31040                           
 31041 ;; *************** function _I2C1_MasterSendTxData *****************
 31042 ;; Defined at:
 31043 ;;		line 568 in file "mcc_generated_files/i2c1_master.c"
 31044 ;; Parameters:    Size  Location     Type
 31045 ;;  data            1    wreg     unsigned char 
 31046 ;; Auto vars:     Size  Location     Type
 31047 ;;  data            1   15[COMRAM] unsigned char 
 31048 ;; Return value:  Size  Location     Type
 31049 ;;                  1    wreg      void 
 31050 ;; Registers used:
 31051 ;;		wreg
 31052 ;; Tracked objects:
 31053 ;;		On entry : 3F/2
 31054 ;;		On exit  : 0/0
 31055 ;;		Unchanged: 0/0
 31056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31057 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31058 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31060 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31061 ;;Total ram usage:        1 bytes
 31062 ;; Hardware stack levels used: 1
 31063 ;; Hardware stack levels required when called: 4
 31064 ;; This function calls:
 31065 ;;		Nothing
 31066 ;; This function is called by:
 31067 ;;		_I2C1_DO_SEND_ADR_READ
 31068 ;;		_I2C1_DO_SEND_ADR_WRITE
 31069 ;;		_I2C1_DO_TX
 31070 ;; This function uses a non-reentrant model
 31071 ;;
 31072                           
 31073                           	psect	text156
 31074  00923C                     __ptext156:
 31075                           	callstack 0
 31076  00923C                     _I2C1_MasterSendTxData:
 31077                           	callstack 16
 31078                           
 31079                           ; BSR set to: 2
 31080                           ;incstack = 0
 31081                           ;I2C1_MasterSendTxData@data stored from wreg
 31082  00923C  6E10               	movwf	I2C1_MasterSendTxData@data^0,c
 31083                           
 31084                           ;mcc_generated_files/i2c1_master.c: 568: static __attribute__((inline)) void I2C1_Master
      +                          SendTxData(uint8_t data);mcc_generated_files/i2c1_master.c: 569: {;mcc_generated_files/i
      +                          2c1_master.c: 570:     SSP1BUF = data;
 31085  00923E  C010  FF92         	movff	I2C1_MasterSendTxData@data,3986	;volatile
 31086  009242  0012               	return		;funcret
 31087  009244                     __end_of_I2C1_MasterSendTxData:
 31088                           	callstack 0
 31089                           
 31090 ;; *************** function _I2C1_MasterSendAck *****************
 31091 ;; Defined at:
 31092 ;;		line 603 in file "mcc_generated_files/i2c1_master.c"
 31093 ;; Parameters:    Size  Location     Type
 31094 ;;		None
 31095 ;; Auto vars:     Size  Location     Type
 31096 ;;		None
 31097 ;; Return value:  Size  Location     Type
 31098 ;;                  1    wreg      void 
 31099 ;; Registers used:
 31100 ;;		None
 31101 ;; Tracked objects:
 31102 ;;		On entry : 3F/2
 31103 ;;		On exit  : 3F/2
 31104 ;;		Unchanged: 3F/0
 31105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31106 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31107 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31109 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31110 ;;Total ram usage:        0 bytes
 31111 ;; Hardware stack levels used: 1
 31112 ;; Hardware stack levels required when called: 4
 31113 ;; This function calls:
 31114 ;;		Nothing
 31115 ;; This function is called by:
 31116 ;;		_I2C1_DO_RX
 31117 ;;		_I2C1_DO_RX_ACK
 31118 ;; This function uses a non-reentrant model
 31119 ;;
 31120                           
 31121                           	psect	text157
 31122  009256                     __ptext157:
 31123                           	callstack 0
 31124  009256                     _I2C1_MasterSendAck:
 31125                           	callstack 16
 31126                           
 31127                           ; BSR set to: 2
 31128                           ;mcc_generated_files/i2c1_master.c: 605:     SSP1CON2bits.ACKDT = 0;
 31129                           
 31130                           ;incstack = 0
 31131  009256  9A97               	bcf	151,5,c	;volatile
 31132                           
 31133                           ;mcc_generated_files/i2c1_master.c: 606:     SSP1CON2bits.ACKEN = 1;
 31134  009258  8897               	bsf	151,4,c	;volatile
 31135                           
 31136                           ; BSR set to: 2
 31137  00925A  0012               	return		;funcret
 31138  00925C                     __end_of_I2C1_MasterSendAck:
 31139                           	callstack 0
 31140                           
 31141 ;; *************** function _I2C1_MasterGetRxData *****************
 31142 ;; Defined at:
 31143 ;;		line 563 in file "mcc_generated_files/i2c1_master.c"
 31144 ;; Parameters:    Size  Location     Type
 31145 ;;		None
 31146 ;; Auto vars:     Size  Location     Type
 31147 ;;		None
 31148 ;; Return value:  Size  Location     Type
 31149 ;;                  1    wreg      unsigned char 
 31150 ;; Registers used:
 31151 ;;		wreg, status,2
 31152 ;; Tracked objects:
 31153 ;;		On entry : 3F/2
 31154 ;;		On exit  : 3F/2
 31155 ;;		Unchanged: 3F/0
 31156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31157 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31158 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31160 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31161 ;;Total ram usage:        0 bytes
 31162 ;; Hardware stack levels used: 1
 31163 ;; Hardware stack levels required when called: 4
 31164 ;; This function calls:
 31165 ;;		Nothing
 31166 ;; This function is called by:
 31167 ;;		_I2C1_DO_RX
 31168 ;; This function uses a non-reentrant model
 31169 ;;
 31170                           
 31171                           	psect	text158
 31172  009282                     __ptext158:
 31173                           	callstack 0
 31174  009282                     _I2C1_MasterGetRxData:
 31175                           	callstack 16
 31176                           
 31177                           ; BSR set to: 2
 31178                           ;mcc_generated_files/i2c1_master.c: 565:     return SSP1BUF;
 31179                           
 31180                           ; BSR set to: 2
 31181                           ;incstack = 0
 31182  009282  5092               	movf	146,w,c	;volatile
 31183                           
 31184                           ; BSR set to: 2
 31185  009284  0012               	return		;funcret
 31186  009286                     __end_of_I2C1_MasterGetRxData:
 31187                           	callstack 0
 31188                           
 31189 ;; *************** function _I2C1_MasterSendNack *****************
 31190 ;; Defined at:
 31191 ;;		line 609 in file "mcc_generated_files/i2c1_master.c"
 31192 ;; Parameters:    Size  Location     Type
 31193 ;;		None
 31194 ;; Auto vars:     Size  Location     Type
 31195 ;;		None
 31196 ;; Return value:  Size  Location     Type
 31197 ;;                  1    wreg      void 
 31198 ;; Registers used:
 31199 ;;		None
 31200 ;; Tracked objects:
 31201 ;;		On entry : 0/2
 31202 ;;		On exit  : 0/0
 31203 ;;		Unchanged: 0/0
 31204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31205 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31206 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31208 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31209 ;;Total ram usage:        0 bytes
 31210 ;; Hardware stack levels used: 1
 31211 ;; Hardware stack levels required when called: 4
 31212 ;; This function calls:
 31213 ;;		Nothing
 31214 ;; This function is called by:
 31215 ;;		_I2C1_DO_RX_NACK_STOP
 31216 ;;		_I2C1_DO_RX_NACK_RESTART
 31217 ;; This function uses a non-reentrant model
 31218 ;;
 31219                           
 31220                           	psect	text159
 31221  00925C                     __ptext159:
 31222                           	callstack 0
 31223  00925C                     _I2C1_MasterSendNack:
 31224                           	callstack 16
 31225                           
 31226                           ;mcc_generated_files/i2c1_master.c: 611:     SSP1CON2bits.ACKDT = 1;
 31227                           
 31228                           ; BSR set to: 2
 31229                           ;incstack = 0
 31230  00925C  8A97               	bsf	151,5,c	;volatile
 31231                           
 31232                           ;mcc_generated_files/i2c1_master.c: 612:     SSP1CON2bits.ACKEN = 1;
 31233  00925E  8897               	bsf	151,4,c	;volatile
 31234  009260  0012               	return		;funcret
 31235  009262                     __end_of_I2C1_MasterSendNack:
 31236                           	callstack 0
 31237                           
 31238 ;; *************** function _I2C1_MasterStartRx *****************
 31239 ;; Defined at:
 31240 ;;		line 583 in file "mcc_generated_files/i2c1_master.c"
 31241 ;; Parameters:    Size  Location     Type
 31242 ;;		None
 31243 ;; Auto vars:     Size  Location     Type
 31244 ;;		None
 31245 ;; Return value:  Size  Location     Type
 31246 ;;                  1    wreg      void 
 31247 ;; Registers used:
 31248 ;;		None
 31249 ;; Tracked objects:
 31250 ;;		On entry : 3F/2
 31251 ;;		On exit  : 3F/2
 31252 ;;		Unchanged: 3F/0
 31253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31255 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31257 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31258 ;;Total ram usage:        0 bytes
 31259 ;; Hardware stack levels used: 1
 31260 ;; Hardware stack levels required when called: 4
 31261 ;; This function calls:
 31262 ;;		Nothing
 31263 ;; This function is called by:
 31264 ;;		_I2C1_DO_RCEN
 31265 ;; This function uses a non-reentrant model
 31266 ;;
 31267                           
 31268                           	psect	text160
 31269  009286                     __ptext160:
 31270                           	callstack 0
 31271  009286                     _I2C1_MasterStartRx:
 31272                           	callstack 16
 31273                           
 31274                           ; BSR set to: 2
 31275                           ;mcc_generated_files/i2c1_master.c: 585:     SSP1CON2bits.RCEN = 1;
 31276                           
 31277                           ;incstack = 0
 31278  009286  8697               	bsf	151,3,c	;volatile
 31279                           
 31280                           ; BSR set to: 2
 31281  009288  0012               	return		;funcret
 31282  00928A                     __end_of_I2C1_MasterStartRx:
 31283                           	callstack 0
 31284                           
 31285 ;; *************** function _I2C1_CallbackReturnReset *****************
 31286 ;; Defined at:
 31287 ;;		line 525 in file "mcc_generated_files/i2c1_master.c"
 31288 ;; Parameters:    Size  Location     Type
 31289 ;;  funPtr          2   24[COMRAM] PTR void 
 31290 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 31291 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 31292 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 31293 ;; Auto vars:     Size  Location     Type
 31294 ;;		None
 31295 ;; Return value:  Size  Location     Type
 31296 ;;                  1    wreg      enum E360
 31297 ;; Registers used:
 31298 ;;		wreg
 31299 ;; Tracked objects:
 31300 ;;		On entry : 3F/2
 31301 ;;		On exit  : 3F/2
 31302 ;;		Unchanged: 3F/0
 31303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31304 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31305 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31307 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31308 ;;Total ram usage:        2 bytes
 31309 ;; Hardware stack levels used: 1
 31310 ;; Hardware stack levels required when called: 4
 31311 ;; This function calls:
 31312 ;;		Nothing
 31313 ;; This function is called by:
 31314 ;;		_I2C1_Open
 31315 ;;		_I2C1_DO_TX
 31316 ;;		_I2C1_DO_RX
 31317 ;;		_I2C1_DO_TX_EMPTY
 31318 ;;		_I2C1_DO_ADDRESS_NACK
 31319 ;; This function uses a non-reentrant model
 31320 ;;
 31321                           
 31322                           	psect	text161
 31323  00928A                     __ptext161:
 31324                           	callstack 0
 31325  00928A                     _I2C1_CallbackReturnReset:
 31326                           	callstack 16
 31327                           
 31328                           ; BSR set to: 2
 31329                           ;mcc_generated_files/i2c1_master.c: 525: i2c1_operations_t I2C1_CallbackReturnReset(void
      +                           *funPtr);mcc_generated_files/i2c1_master.c: 526: {;mcc_generated_files/i2c1_master.c: 5
      +                          27:     return I2C1_RESET_LINK;
 31330                           
 31331                           ; BSR set to: 2
 31332                           ;incstack = 0
 31333  00928A  0E05               	movlw	5
 31334                           
 31335                           ; BSR set to: 2
 31336  00928C  0012               	return		;funcret
 31337  00928E                     __end_of_I2C1_CallbackReturnReset:
 31338                           	callstack 0
 31339                           
 31340 ;; *************** function _I2C1_CallbackReturnStop *****************
 31341 ;; Defined at:
 31342 ;;		line 520 in file "mcc_generated_files/i2c1_master.c"
 31343 ;; Parameters:    Size  Location     Type
 31344 ;;  funPtr          2   24[COMRAM] PTR void 
 31345 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 31346 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 31347 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 31348 ;; Auto vars:     Size  Location     Type
 31349 ;;		None
 31350 ;; Return value:  Size  Location     Type
 31351 ;;                  1    wreg      enum E360
 31352 ;; Registers used:
 31353 ;;		wreg
 31354 ;; Tracked objects:
 31355 ;;		On entry : 3F/2
 31356 ;;		On exit  : 3F/2
 31357 ;;		Unchanged: 3F/0
 31358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31359 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31360 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31362 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31363 ;;Total ram usage:        2 bytes
 31364 ;; Hardware stack levels used: 1
 31365 ;; Hardware stack levels required when called: 4
 31366 ;; This function calls:
 31367 ;;		Nothing
 31368 ;; This function is called by:
 31369 ;;		_I2C1_Open
 31370 ;;		_I2C1_SetCallback
 31371 ;;		_I2C1_DO_TX
 31372 ;;		_I2C1_DO_RX
 31373 ;;		_I2C1_DO_TX_EMPTY
 31374 ;;		_I2C1_DO_ADDRESS_NACK
 31375 ;; This function uses a non-reentrant model
 31376 ;;
 31377                           
 31378                           	psect	text162
 31379  00928E                     __ptext162:
 31380                           	callstack 0
 31381  00928E                     _I2C1_CallbackReturnStop:
 31382                           	callstack 16
 31383                           
 31384                           ; BSR set to: 2
 31385                           ;mcc_generated_files/i2c1_master.c: 520: i2c1_operations_t I2C1_CallbackReturnStop(void 
      +                          *funPtr);mcc_generated_files/i2c1_master.c: 521: {;mcc_generated_files/i2c1_master.c: 52
      +                          2:     return I2C1_STOP;
 31386                           
 31387                           ; BSR set to: 2
 31388                           ;incstack = 0
 31389  00928E  0E01               	movlw	1
 31390                           
 31391                           ; BSR set to: 2
 31392  009290  0012               	return		;funcret
 31393  009292                     __end_of_I2C1_CallbackReturnStop:
 31394                           	callstack 0
 31395                           
 31396 ;; *************** function _rdBlkRegCompleteHandler@i2c1_master_example$F535 *****************
 31397 ;; Defined at:
 31398 ;;		line 176 in file "mcc_generated_files/examples/i2c1_master_example.c"
 31399 ;; Parameters:    Size  Location     Type
 31400 ;;  ptr             2   24[COMRAM] PTR void 
 31401 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 31402 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 31403 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 31404 ;; Auto vars:     Size  Location     Type
 31405 ;;		None
 31406 ;; Return value:  Size  Location     Type
 31407 ;;                  1    wreg      enum E527
 31408 ;; Registers used:
 31409 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31410 ;; Tracked objects:
 31411 ;;		On entry : 3F/2
 31412 ;;		On exit  : 0/0
 31413 ;;		Unchanged: 0/0
 31414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31415 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31418 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31419 ;;Total ram usage:        2 bytes
 31420 ;; Hardware stack levels used: 1
 31421 ;; Hardware stack levels required when called: 6
 31422 ;; This function calls:
 31423 ;;		_I2C1_SetBuffer
 31424 ;;		_I2C1_SetDataCompleteCallback
 31425 ;; This function is called by:
 31426 ;;		_I2C1_DO_TX
 31427 ;;		_I2C1_DO_RX
 31428 ;;		_I2C1_DO_TX_EMPTY
 31429 ;;		_I2C1_DO_ADDRESS_NACK
 31430 ;; This function uses a non-reentrant model
 31431 ;;
 31432                           
 31433                           	psect	text163
 31434  0088C4                     __ptext163:
 31435                           	callstack 0
 31436  0088C4                     _rdBlkRegCompleteHandler@i2c1_master_example$F535:
 31437                           	callstack 14
 31438                           
 31439                           ; BSR set to: 2
 31440                           ;mcc_generated_files/examples/i2c1_master_example.c: 176: static i2c1_operations_t rdBlk
      +                          RegCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 177: {
      +                          ;mcc_generated_files/examples/i2c1_master_example.c: 178:     I2C1_SetBuffer(((i2c1_buff
      +                          er_t *)ptr)->data,((i2c1_buffer_t*)ptr)->len);
 31441                           
 31442                           ; BSR set to: 2
 31443                           ;incstack = 0
 31444  0088C4  EE20 F002          	lfsr	2,2
 31445  0088C8  5019               	movf	rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr^0,w,c
 31446  0088CA  26D9               	addwf	fsr2l,f,c
 31447  0088CC  501A               	movf	(rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr+1)^0,w,c
 31448  0088CE  22DA               	addwfc	fsr2h,f,c
 31449  0088D0  CFDE F010          	movff	postinc2,I2C1_SetBuffer@buffer
 31450  0088D4  CFDD F011          	movff	postdec2,I2C1_SetBuffer@buffer+1
 31451  0088D8  C019  FFD9         	movff	rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr,fsr2l
 31452  0088DC  C01A  FFDA         	movff	rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr+1,fsr2h
 31453  0088E0  CFDE F012          	movff	postinc2,I2C1_SetBuffer@bufferSize
 31454  0088E4  CFDD F013          	movff	postdec2,I2C1_SetBuffer@bufferSize+1
 31455  0088E8  ECFB  F047         	call	_I2C1_SetBuffer	;wreg free
 31456                           
 31457                           ; BSR set to: 2
 31458                           ;mcc_generated_files/examples/i2c1_master_example.c: 179:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 31459  0088EC  0E00               	movlw	0
 31460  0088EE  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 31461  0088F0  0E00               	movlw	0
 31462  0088F2  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 31463  0088F4  0E00               	movlw	0
 31464  0088F6  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 31465  0088F8  0E00               	movlw	0
 31466  0088FA  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 31467  0088FC  EC44  F048         	call	_I2C1_SetDataCompleteCallback	;wreg free
 31468                           
 31469                           ;mcc_generated_files/examples/i2c1_master_example.c: 180:     return I2C1_RESTART_READ;
 31470  008900  0E02               	movlw	2
 31471  008902  0012               	return		;funcret
 31472  008904                     __end_of_rdBlkRegCompleteHandler@i2c1_master_example$F535:
 31473                           	callstack 0
 31474                           
 31475 ;; *************** function _wr1RegCompleteHandler@i2c1_master_example$F517 *****************
 31476 ;; Defined at:
 31477 ;;		line 162 in file "mcc_generated_files/examples/i2c1_master_example.c"
 31478 ;; Parameters:    Size  Location     Type
 31479 ;;  ptr             2   24[COMRAM] PTR void 
 31480 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 31481 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 31482 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 31483 ;; Auto vars:     Size  Location     Type
 31484 ;;		None
 31485 ;; Return value:  Size  Location     Type
 31486 ;;                  1    wreg      enum E527
 31487 ;; Registers used:
 31488 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31489 ;; Tracked objects:
 31490 ;;		On entry : 3F/2
 31491 ;;		On exit  : 0/0
 31492 ;;		Unchanged: 0/0
 31493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31494 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31497 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31498 ;;Total ram usage:        2 bytes
 31499 ;; Hardware stack levels used: 1
 31500 ;; Hardware stack levels required when called: 6
 31501 ;; This function calls:
 31502 ;;		_I2C1_SetBuffer
 31503 ;;		_I2C1_SetDataCompleteCallback
 31504 ;; This function is called by:
 31505 ;;		_I2C1_DO_TX
 31506 ;;		_I2C1_DO_RX
 31507 ;;		_I2C1_DO_TX_EMPTY
 31508 ;;		_I2C1_DO_ADDRESS_NACK
 31509 ;; This function uses a non-reentrant model
 31510 ;;
 31511                           
 31512                           	psect	text164
 31513  008BD8                     __ptext164:
 31514                           	callstack 0
 31515  008BD8                     _wr1RegCompleteHandler@i2c1_master_example$F517:
 31516                           	callstack 14
 31517                           
 31518                           ; BSR set to: 2
 31519                           ;mcc_generated_files/examples/i2c1_master_example.c: 162: static i2c1_operations_t wr1Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 163: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 164:     I2C1_SetBuffer(ptr,1);
 31520                           
 31521                           ;incstack = 0
 31522  008BD8  C019  F010         	movff	wr1RegCompleteHandler@i2c1_master_example$F517@ptr,I2C1_SetBuffer@buffer
 31523  008BDC  C01A  F011         	movff	wr1RegCompleteHandler@i2c1_master_example$F517@ptr+1,I2C1_SetBuffer@buffer+1
 31524  008BE0  0E00               	movlw	0
 31525  008BE2  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 31526  008BE4  0E01               	movlw	1
 31527  008BE6  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 31528  008BE8  ECFB  F047         	call	_I2C1_SetBuffer	;wreg free
 31529                           
 31530                           ; BSR set to: 2
 31531                           ;mcc_generated_files/examples/i2c1_master_example.c: 165:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 31532  008BEC  0E00               	movlw	0
 31533  008BEE  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 31534  008BF0  0E00               	movlw	0
 31535  008BF2  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 31536  008BF4  0E00               	movlw	0
 31537  008BF6  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 31538  008BF8  0E00               	movlw	0
 31539  008BFA  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 31540  008BFC  EC44  F048         	call	_I2C1_SetDataCompleteCallback	;wreg free
 31541                           
 31542                           ;mcc_generated_files/examples/i2c1_master_example.c: 166:     return I2C1_CONTINUE;
 31543  008C00  0E04               	movlw	4
 31544  008C02  0012               	return		;funcret
 31545  008C04                     __end_of_wr1RegCompleteHandler@i2c1_master_example$F517:
 31546                           	callstack 0
 31547                           
 31548 ;; *************** function _rd2RegCompleteHandler@i2c1_master_example$F511 *****************
 31549 ;; Defined at:
 31550 ;;		line 155 in file "mcc_generated_files/examples/i2c1_master_example.c"
 31551 ;; Parameters:    Size  Location     Type
 31552 ;;  ptr             2   24[COMRAM] PTR void 
 31553 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 31554 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 31555 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 31556 ;; Auto vars:     Size  Location     Type
 31557 ;;		None
 31558 ;; Return value:  Size  Location     Type
 31559 ;;                  1    wreg      enum E527
 31560 ;; Registers used:
 31561 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31562 ;; Tracked objects:
 31563 ;;		On entry : 3F/2
 31564 ;;		On exit  : 0/0
 31565 ;;		Unchanged: 0/0
 31566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31567 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31568 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31569 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31570 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31571 ;;Total ram usage:        2 bytes
 31572 ;; Hardware stack levels used: 1
 31573 ;; Hardware stack levels required when called: 6
 31574 ;; This function calls:
 31575 ;;		_I2C1_SetBuffer
 31576 ;;		_I2C1_SetDataCompleteCallback
 31577 ;; This function is called by:
 31578 ;;		_I2C1_DO_TX
 31579 ;;		_I2C1_DO_RX
 31580 ;;		_I2C1_DO_TX_EMPTY
 31581 ;;		_I2C1_DO_ADDRESS_NACK
 31582 ;; This function uses a non-reentrant model
 31583 ;;
 31584                           
 31585                           	psect	text165
 31586  008C04                     __ptext165:
 31587                           	callstack 0
 31588  008C04                     _rd2RegCompleteHandler@i2c1_master_example$F511:
 31589                           	callstack 14
 31590                           
 31591                           ; BSR set to: 2
 31592                           ;mcc_generated_files/examples/i2c1_master_example.c: 155: static i2c1_operations_t rd2Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 156: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 157:     I2C1_SetBuffer(ptr,2);
 31593                           
 31594                           ;incstack = 0
 31595  008C04  C019  F010         	movff	rd2RegCompleteHandler@i2c1_master_example$F511@ptr,I2C1_SetBuffer@buffer
 31596  008C08  C01A  F011         	movff	rd2RegCompleteHandler@i2c1_master_example$F511@ptr+1,I2C1_SetBuffer@buffer+1
 31597  008C0C  0E00               	movlw	0
 31598  008C0E  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 31599  008C10  0E02               	movlw	2
 31600  008C12  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 31601  008C14  ECFB  F047         	call	_I2C1_SetBuffer	;wreg free
 31602                           
 31603                           ; BSR set to: 2
 31604                           ;mcc_generated_files/examples/i2c1_master_example.c: 158:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 31605  008C18  0E00               	movlw	0
 31606  008C1A  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 31607  008C1C  0E00               	movlw	0
 31608  008C1E  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 31609  008C20  0E00               	movlw	0
 31610  008C22  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 31611  008C24  0E00               	movlw	0
 31612  008C26  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 31613  008C28  EC44  F048         	call	_I2C1_SetDataCompleteCallback	;wreg free
 31614                           
 31615                           ;mcc_generated_files/examples/i2c1_master_example.c: 159:     return I2C1_RESTART_READ;
 31616  008C2C  0E02               	movlw	2
 31617  008C2E  0012               	return		;funcret
 31618  008C30                     __end_of_rd2RegCompleteHandler@i2c1_master_example$F511:
 31619                           	callstack 0
 31620                           
 31621 ;; *************** function _rd1RegCompleteHandler@i2c1_master_example$F500 *****************
 31622 ;; Defined at:
 31623 ;;		line 148 in file "mcc_generated_files/examples/i2c1_master_example.c"
 31624 ;; Parameters:    Size  Location     Type
 31625 ;;  ptr             2   24[COMRAM] PTR void 
 31626 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 31627 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 31628 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 31629 ;; Auto vars:     Size  Location     Type
 31630 ;;		None
 31631 ;; Return value:  Size  Location     Type
 31632 ;;                  1    wreg      enum E527
 31633 ;; Registers used:
 31634 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31635 ;; Tracked objects:
 31636 ;;		On entry : 3F/2
 31637 ;;		On exit  : 0/0
 31638 ;;		Unchanged: 0/0
 31639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31640 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31641 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31643 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31644 ;;Total ram usage:        2 bytes
 31645 ;; Hardware stack levels used: 1
 31646 ;; Hardware stack levels required when called: 6
 31647 ;; This function calls:
 31648 ;;		_I2C1_SetBuffer
 31649 ;;		_I2C1_SetDataCompleteCallback
 31650 ;; This function is called by:
 31651 ;;		_I2C1_Read1ByteRegister
 31652 ;;		_I2C1_DO_TX
 31653 ;;		_I2C1_DO_RX
 31654 ;;		_I2C1_DO_TX_EMPTY
 31655 ;;		_I2C1_DO_ADDRESS_NACK
 31656 ;; This function uses a non-reentrant model
 31657 ;;
 31658                           
 31659                           	psect	text166
 31660  008C30                     __ptext166:
 31661                           	callstack 0
 31662  008C30                     _rd1RegCompleteHandler@i2c1_master_example$F500:
 31663                           	callstack 14
 31664                           
 31665                           ; BSR set to: 2
 31666                           ;mcc_generated_files/examples/i2c1_master_example.c: 148: static i2c1_operations_t rd1Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 149: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 150:     I2C1_SetBuffer(ptr,1);
 31667                           
 31668                           ;incstack = 0
 31669  008C30  C019  F010         	movff	rd1RegCompleteHandler@i2c1_master_example$F500@ptr,I2C1_SetBuffer@buffer
 31670  008C34  C01A  F011         	movff	rd1RegCompleteHandler@i2c1_master_example$F500@ptr+1,I2C1_SetBuffer@buffer+1
 31671  008C38  0E00               	movlw	0
 31672  008C3A  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 31673  008C3C  0E01               	movlw	1
 31674  008C3E  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 31675  008C40  ECFB  F047         	call	_I2C1_SetBuffer	;wreg free
 31676                           
 31677                           ; BSR set to: 2
 31678                           ;mcc_generated_files/examples/i2c1_master_example.c: 151:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 31679  008C44  0E00               	movlw	0
 31680  008C46  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 31681  008C48  0E00               	movlw	0
 31682  008C4A  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 31683  008C4C  0E00               	movlw	0
 31684  008C4E  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 31685  008C50  0E00               	movlw	0
 31686  008C52  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 31687  008C54  EC44  F048         	call	_I2C1_SetDataCompleteCallback	;wreg free
 31688                           
 31689                           ;mcc_generated_files/examples/i2c1_master_example.c: 152:     return I2C1_RESTART_READ;
 31690  008C58  0E02               	movlw	2
 31691  008C5A  0012               	return		;funcret
 31692  008C5C                     __end_of_rd1RegCompleteHandler@i2c1_master_example$F500:
 31693                           	callstack 0
 31694                           
 31695 ;; *************** function _rdBlkRegCompleteHandler *****************
 31696 ;; Defined at:
 31697 ;;		line 140 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 31698 ;; Parameters:    Size  Location     Type
 31699 ;;  p               2   24[COMRAM] PTR void 
 31700 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 31701 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 31702 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 31703 ;; Auto vars:     Size  Location     Type
 31704 ;;		None
 31705 ;; Return value:  Size  Location     Type
 31706 ;;                  1    wreg      enum E360
 31707 ;; Registers used:
 31708 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31709 ;; Tracked objects:
 31710 ;;		On entry : 3F/2
 31711 ;;		On exit  : 0/0
 31712 ;;		Unchanged: 0/0
 31713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31714 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31717 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31718 ;;Total ram usage:        2 bytes
 31719 ;; Hardware stack levels used: 1
 31720 ;; Hardware stack levels required when called: 6
 31721 ;; This function calls:
 31722 ;;		_I2C1_SetBuffer
 31723 ;;		_I2C1_SetDataCompleteCallback
 31724 ;; This function is called by:
 31725 ;;		_i2c_readDataBlock
 31726 ;;		_I2C1_DO_TX
 31727 ;;		_I2C1_DO_RX
 31728 ;;		_I2C1_DO_TX_EMPTY
 31729 ;;		_I2C1_DO_ADDRESS_NACK
 31730 ;; This function uses a non-reentrant model
 31731 ;;
 31732                           
 31733                           	psect	text167
 31734  008904                     __ptext167:
 31735                           	callstack 0
 31736  008904                     _rdBlkRegCompleteHandler:
 31737                           	callstack 14
 31738                           
 31739                           ; BSR set to: 2
 31740                           ;mcc_generated_files/drivers/i2c_simple_master.c: 140: static i2c1_operations_t rdBlkReg
      +                          CompleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 141: {;mcc_gen
      +                          erated_files/drivers/i2c_simple_master.c: 142:     I2C1_SetBuffer(((buf_t *)p)->data,((b
      +                          uf_t*)p)->len);
 31741                           
 31742                           ;incstack = 0
 31743  008904  EE20 F002          	lfsr	2,2
 31744  008908  5019               	movf	rdBlkRegCompleteHandler@p^0,w,c
 31745  00890A  26D9               	addwf	fsr2l,f,c
 31746  00890C  501A               	movf	(rdBlkRegCompleteHandler@p+1)^0,w,c
 31747  00890E  22DA               	addwfc	fsr2h,f,c
 31748  008910  CFDE F010          	movff	postinc2,I2C1_SetBuffer@buffer
 31749  008914  CFDD F011          	movff	postdec2,I2C1_SetBuffer@buffer+1
 31750  008918  C019  FFD9         	movff	rdBlkRegCompleteHandler@p,fsr2l
 31751  00891C  C01A  FFDA         	movff	rdBlkRegCompleteHandler@p+1,fsr2h
 31752  008920  CFDE F012          	movff	postinc2,I2C1_SetBuffer@bufferSize
 31753  008924  CFDD F013          	movff	postdec2,I2C1_SetBuffer@bufferSize+1
 31754  008928  ECFB  F047         	call	_I2C1_SetBuffer	;wreg free
 31755                           
 31756                           ; BSR set to: 2
 31757                           ;mcc_generated_files/drivers/i2c_simple_master.c: 143:     I2C1_SetDataCompleteCallback(
      +                          ((void*)0),((void*)0));
 31758  00892C  0E00               	movlw	0
 31759  00892E  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 31760  008930  0E00               	movlw	0
 31761  008932  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 31762  008934  0E00               	movlw	0
 31763  008936  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 31764  008938  0E00               	movlw	0
 31765  00893A  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 31766  00893C  EC44  F048         	call	_I2C1_SetDataCompleteCallback	;wreg free
 31767                           
 31768                           ;mcc_generated_files/drivers/i2c_simple_master.c: 144:     return I2C1_RESTART_READ;
 31769  008940  0E02               	movlw	2
 31770  008942  0012               	return		;funcret
 31771  008944                     __end_of_rdBlkRegCompleteHandler:
 31772                           	callstack 0
 31773                           
 31774 ;; *************** function _wr2RegCompleteHandler *****************
 31775 ;; Defined at:
 31776 ;;		line 116 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 31777 ;; Parameters:    Size  Location     Type
 31778 ;;  p               2   24[COMRAM] PTR void 
 31779 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 31780 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 31781 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 31782 ;; Auto vars:     Size  Location     Type
 31783 ;;		None
 31784 ;; Return value:  Size  Location     Type
 31785 ;;                  1    wreg      enum E360
 31786 ;; Registers used:
 31787 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31788 ;; Tracked objects:
 31789 ;;		On entry : 3F/2
 31790 ;;		On exit  : 0/0
 31791 ;;		Unchanged: 0/0
 31792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31793 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31794 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31796 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31797 ;;Total ram usage:        2 bytes
 31798 ;; Hardware stack levels used: 1
 31799 ;; Hardware stack levels required when called: 6
 31800 ;; This function calls:
 31801 ;;		_I2C1_SetBuffer
 31802 ;;		_I2C1_SetDataCompleteCallback
 31803 ;; This function is called by:
 31804 ;;		_I2C1_DO_TX
 31805 ;;		_I2C1_DO_RX
 31806 ;;		_I2C1_DO_TX_EMPTY
 31807 ;;		_I2C1_DO_ADDRESS_NACK
 31808 ;; This function uses a non-reentrant model
 31809 ;;
 31810                           
 31811                           	psect	text168
 31812  008C5C                     __ptext168:
 31813                           	callstack 0
 31814  008C5C                     _wr2RegCompleteHandler:
 31815                           	callstack 14
 31816                           
 31817                           ; BSR set to: 2
 31818                           ;mcc_generated_files/drivers/i2c_simple_master.c: 116: static i2c1_operations_t wr2RegCo
      +                          mpleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 117: {;mcc_gener
      +                          ated_files/drivers/i2c_simple_master.c: 118:     I2C1_SetBuffer(p,2);
 31819                           
 31820                           ;incstack = 0
 31821  008C5C  C019  F010         	movff	wr2RegCompleteHandler@p,I2C1_SetBuffer@buffer
 31822  008C60  C01A  F011         	movff	wr2RegCompleteHandler@p+1,I2C1_SetBuffer@buffer+1
 31823  008C64  0E00               	movlw	0
 31824  008C66  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 31825  008C68  0E02               	movlw	2
 31826  008C6A  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 31827  008C6C  ECFB  F047         	call	_I2C1_SetBuffer	;wreg free
 31828                           
 31829                           ; BSR set to: 2
 31830                           ;mcc_generated_files/drivers/i2c_simple_master.c: 119:     I2C1_SetDataCompleteCallback(
      +                          ((void*)0),((void*)0));
 31831  008C70  0E00               	movlw	0
 31832  008C72  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 31833  008C74  0E00               	movlw	0
 31834  008C76  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 31835  008C78  0E00               	movlw	0
 31836  008C7A  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 31837  008C7C  0E00               	movlw	0
 31838  008C7E  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 31839  008C80  EC44  F048         	call	_I2C1_SetDataCompleteCallback	;wreg free
 31840                           
 31841                           ;mcc_generated_files/drivers/i2c_simple_master.c: 120:     return I2C1_CONTINUE;
 31842  008C84  0E04               	movlw	4
 31843  008C86  0012               	return		;funcret
 31844  008C88                     __end_of_wr2RegCompleteHandler:
 31845                           	callstack 0
 31846                           
 31847 ;; *************** function _rd2RegCompleteHandler *****************
 31848 ;; Defined at:
 31849 ;;		line 93 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 31850 ;; Parameters:    Size  Location     Type
 31851 ;;  p               2   24[COMRAM] PTR void 
 31852 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 31853 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 31854 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 31855 ;; Auto vars:     Size  Location     Type
 31856 ;;		None
 31857 ;; Return value:  Size  Location     Type
 31858 ;;                  1    wreg      enum E360
 31859 ;; Registers used:
 31860 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31861 ;; Tracked objects:
 31862 ;;		On entry : 3F/2
 31863 ;;		On exit  : 0/0
 31864 ;;		Unchanged: 0/0
 31865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31866 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31867 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31869 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31870 ;;Total ram usage:        2 bytes
 31871 ;; Hardware stack levels used: 1
 31872 ;; Hardware stack levels required when called: 6
 31873 ;; This function calls:
 31874 ;;		_I2C1_SetBuffer
 31875 ;;		_I2C1_SetDataCompleteCallback
 31876 ;; This function is called by:
 31877 ;;		_I2C1_DO_TX
 31878 ;;		_I2C1_DO_RX
 31879 ;;		_I2C1_DO_TX_EMPTY
 31880 ;;		_I2C1_DO_ADDRESS_NACK
 31881 ;; This function uses a non-reentrant model
 31882 ;;
 31883                           
 31884                           	psect	text169
 31885  008C88                     __ptext169:
 31886                           	callstack 0
 31887  008C88                     _rd2RegCompleteHandler:
 31888                           	callstack 14
 31889                           
 31890                           ; BSR set to: 2
 31891                           ;mcc_generated_files/drivers/i2c_simple_master.c: 93: static i2c1_operations_t rd2RegCom
      +                          pleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 94: {;mcc_generat
      +                          ed_files/drivers/i2c_simple_master.c: 95:     I2C1_SetBuffer(p,2);
 31892                           
 31893                           ;incstack = 0
 31894  008C88  C019  F010         	movff	rd2RegCompleteHandler@p,I2C1_SetBuffer@buffer
 31895  008C8C  C01A  F011         	movff	rd2RegCompleteHandler@p+1,I2C1_SetBuffer@buffer+1
 31896  008C90  0E00               	movlw	0
 31897  008C92  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 31898  008C94  0E02               	movlw	2
 31899  008C96  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 31900  008C98  ECFB  F047         	call	_I2C1_SetBuffer	;wreg free
 31901                           
 31902                           ; BSR set to: 2
 31903                           ;mcc_generated_files/drivers/i2c_simple_master.c: 96:     I2C1_SetDataCompleteCallback((
      +                          (void*)0),((void*)0));
 31904  008C9C  0E00               	movlw	0
 31905  008C9E  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 31906  008CA0  0E00               	movlw	0
 31907  008CA2  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 31908  008CA4  0E00               	movlw	0
 31909  008CA6  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 31910  008CA8  0E00               	movlw	0
 31911  008CAA  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 31912  008CAC  EC44  F048         	call	_I2C1_SetDataCompleteCallback	;wreg free
 31913                           
 31914                           ;mcc_generated_files/drivers/i2c_simple_master.c: 97:     return I2C1_RESTART_READ;
 31915  008CB0  0E02               	movlw	2
 31916  008CB2  0012               	return		;funcret
 31917  008CB4                     __end_of_rd2RegCompleteHandler:
 31918                           	callstack 0
 31919                           
 31920 ;; *************** function _rd1RegCompleteHandler *****************
 31921 ;; Defined at:
 31922 ;;		line 64 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 31923 ;; Parameters:    Size  Location     Type
 31924 ;;  p               2   24[COMRAM] PTR void 
 31925 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 31926 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 31927 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 31928 ;; Auto vars:     Size  Location     Type
 31929 ;;		None
 31930 ;; Return value:  Size  Location     Type
 31931 ;;                  1    wreg      enum E360
 31932 ;; Registers used:
 31933 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31934 ;; Tracked objects:
 31935 ;;		On entry : 3F/2
 31936 ;;		On exit  : 0/0
 31937 ;;		Unchanged: 0/0
 31938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31939 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31940 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31941 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31942 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31943 ;;Total ram usage:        2 bytes
 31944 ;; Hardware stack levels used: 1
 31945 ;; Hardware stack levels required when called: 6
 31946 ;; This function calls:
 31947 ;;		_I2C1_SetBuffer
 31948 ;;		_I2C1_SetDataCompleteCallback
 31949 ;; This function is called by:
 31950 ;;		_I2C1_DO_TX
 31951 ;;		_I2C1_DO_RX
 31952 ;;		_I2C1_DO_TX_EMPTY
 31953 ;;		_I2C1_DO_ADDRESS_NACK
 31954 ;; This function uses a non-reentrant model
 31955 ;;
 31956                           
 31957                           	psect	text170
 31958  008CB4                     __ptext170:
 31959                           	callstack 0
 31960  008CB4                     _rd1RegCompleteHandler:
 31961                           	callstack 14
 31962                           
 31963                           ; BSR set to: 2
 31964                           ;mcc_generated_files/drivers/i2c_simple_master.c: 64: static i2c1_operations_t rd1RegCom
      +                          pleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 65: {;mcc_generat
      +                          ed_files/drivers/i2c_simple_master.c: 66:     I2C1_SetBuffer(p,1);
 31965                           
 31966                           ;incstack = 0
 31967  008CB4  C019  F010         	movff	rd1RegCompleteHandler@p,I2C1_SetBuffer@buffer
 31968  008CB8  C01A  F011         	movff	rd1RegCompleteHandler@p+1,I2C1_SetBuffer@buffer+1
 31969  008CBC  0E00               	movlw	0
 31970  008CBE  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 31971  008CC0  0E01               	movlw	1
 31972  008CC2  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 31973  008CC4  ECFB  F047         	call	_I2C1_SetBuffer	;wreg free
 31974                           
 31975                           ; BSR set to: 2
 31976                           ;mcc_generated_files/drivers/i2c_simple_master.c: 67:     I2C1_SetDataCompleteCallback((
      +                          (void*)0),((void*)0));
 31977  008CC8  0E00               	movlw	0
 31978  008CCA  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 31979  008CCC  0E00               	movlw	0
 31980  008CCE  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 31981  008CD0  0E00               	movlw	0
 31982  008CD2  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 31983  008CD4  0E00               	movlw	0
 31984  008CD6  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 31985  008CD8  EC44  F048         	call	_I2C1_SetDataCompleteCallback	;wreg free
 31986                           
 31987                           ;mcc_generated_files/drivers/i2c_simple_master.c: 68:     return I2C1_RESTART_READ;
 31988  008CDC  0E02               	movlw	2
 31989  008CDE  0012               	return		;funcret
 31990  008CE0                     __end_of_rd1RegCompleteHandler:
 31991                           	callstack 0
 31992                           
 31993 ;; *************** function _wr1RegCompleteHandler *****************
 31994 ;; Defined at:
 31995 ;;		line 33 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 31996 ;; Parameters:    Size  Location     Type
 31997 ;;  p               2   24[COMRAM] PTR void 
 31998 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 31999 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 32000 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 32001 ;; Auto vars:     Size  Location     Type
 32002 ;;		None
 32003 ;; Return value:  Size  Location     Type
 32004 ;;                  1    wreg      enum E360
 32005 ;; Registers used:
 32006 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32007 ;; Tracked objects:
 32008 ;;		On entry : 3F/2
 32009 ;;		On exit  : 0/0
 32010 ;;		Unchanged: 0/0
 32011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32012 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32013 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32014 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32015 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32016 ;;Total ram usage:        2 bytes
 32017 ;; Hardware stack levels used: 1
 32018 ;; Hardware stack levels required when called: 6
 32019 ;; This function calls:
 32020 ;;		_I2C1_SetBuffer
 32021 ;;		_I2C1_SetDataCompleteCallback
 32022 ;; This function is called by:
 32023 ;;		_I2C1_DO_TX
 32024 ;;		_I2C1_DO_RX
 32025 ;;		_I2C1_DO_TX_EMPTY
 32026 ;;		_I2C1_DO_ADDRESS_NACK
 32027 ;; This function uses a non-reentrant model
 32028 ;;
 32029                           
 32030                           	psect	text171
 32031  008CE0                     __ptext171:
 32032                           	callstack 0
 32033  008CE0                     _wr1RegCompleteHandler:
 32034                           	callstack 14
 32035                           
 32036                           ; BSR set to: 2
 32037                           ;mcc_generated_files/drivers/i2c_simple_master.c: 33: static i2c1_operations_t wr1RegCom
      +                          pleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 34: {;mcc_generat
      +                          ed_files/drivers/i2c_simple_master.c: 35:     I2C1_SetBuffer(p,1);
 32038                           
 32039                           ;incstack = 0
 32040  008CE0  C019  F010         	movff	wr1RegCompleteHandler@p,I2C1_SetBuffer@buffer
 32041  008CE4  C01A  F011         	movff	wr1RegCompleteHandler@p+1,I2C1_SetBuffer@buffer+1
 32042  008CE8  0E00               	movlw	0
 32043  008CEA  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 32044  008CEC  0E01               	movlw	1
 32045  008CEE  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 32046  008CF0  ECFB  F047         	call	_I2C1_SetBuffer	;wreg free
 32047                           
 32048                           ; BSR set to: 2
 32049                           ;mcc_generated_files/drivers/i2c_simple_master.c: 36:     I2C1_SetDataCompleteCallback((
      +                          (void*)0),((void*)0));
 32050  008CF4  0E00               	movlw	0
 32051  008CF6  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 32052  008CF8  0E00               	movlw	0
 32053  008CFA  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 32054  008CFC  0E00               	movlw	0
 32055  008CFE  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 32056  008D00  0E00               	movlw	0
 32057  008D02  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 32058  008D04  EC44  F048         	call	_I2C1_SetDataCompleteCallback	;wreg free
 32059                           
 32060                           ;mcc_generated_files/drivers/i2c_simple_master.c: 37:     return I2C1_CONTINUE;
 32061  008D08  0E04               	movlw	4
 32062  008D0A  0012               	return		;funcret
 32063  008D0C                     __end_of_wr1RegCompleteHandler:
 32064                           	callstack 0
 32065                           
 32066 ;; *************** function _wr2RegCompleteHandler@i2c1_master_example$F523 *****************
 32067 ;; Defined at:
 32068 ;;		line 169 in file "mcc_generated_files/examples/i2c1_master_example.c"
 32069 ;; Parameters:    Size  Location     Type
 32070 ;;  ptr             2   24[COMRAM] PTR void 
 32071 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 32072 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 32073 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 32074 ;; Auto vars:     Size  Location     Type
 32075 ;;		None
 32076 ;; Return value:  Size  Location     Type
 32077 ;;                  1    wreg      enum E527
 32078 ;; Registers used:
 32079 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32080 ;; Tracked objects:
 32081 ;;		On entry : 3F/2
 32082 ;;		On exit  : 0/0
 32083 ;;		Unchanged: 0/0
 32084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32085 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32088 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32089 ;;Total ram usage:        2 bytes
 32090 ;; Hardware stack levels used: 1
 32091 ;; Hardware stack levels required when called: 6
 32092 ;; This function calls:
 32093 ;;		_I2C1_SetBuffer
 32094 ;;		_I2C1_SetDataCompleteCallback
 32095 ;; This function is called by:
 32096 ;;		_I2C1_DO_TX
 32097 ;;		_I2C1_DO_RX
 32098 ;;		_I2C1_DO_TX_EMPTY
 32099 ;;		_I2C1_DO_ADDRESS_NACK
 32100 ;; This function uses a non-reentrant model
 32101 ;;
 32102                           
 32103                           	psect	text172
 32104  008D0C                     __ptext172:
 32105                           	callstack 0
 32106  008D0C                     _wr2RegCompleteHandler@i2c1_master_example$F523:
 32107                           	callstack 14
 32108                           
 32109                           ; BSR set to: 2
 32110                           ;mcc_generated_files/examples/i2c1_master_example.c: 169: static i2c1_operations_t wr2Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 170: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 171:     I2C1_SetBuffer(ptr,2);
 32111                           
 32112                           ;incstack = 0
 32113  008D0C  C019  F010         	movff	wr2RegCompleteHandler@i2c1_master_example$F523@ptr,I2C1_SetBuffer@buffer
 32114  008D10  C01A  F011         	movff	wr2RegCompleteHandler@i2c1_master_example$F523@ptr+1,I2C1_SetBuffer@buffer+1
 32115  008D14  0E00               	movlw	0
 32116  008D16  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 32117  008D18  0E02               	movlw	2
 32118  008D1A  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 32119  008D1C  ECFB  F047         	call	_I2C1_SetBuffer	;wreg free
 32120                           
 32121                           ; BSR set to: 2
 32122                           ;mcc_generated_files/examples/i2c1_master_example.c: 172:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 32123  008D20  0E00               	movlw	0
 32124  008D22  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 32125  008D24  0E00               	movlw	0
 32126  008D26  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 32127  008D28  0E00               	movlw	0
 32128  008D2A  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 32129  008D2C  0E00               	movlw	0
 32130  008D2E  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 32131  008D30  EC44  F048         	call	_I2C1_SetDataCompleteCallback	;wreg free
 32132                           
 32133                           ;mcc_generated_files/examples/i2c1_master_example.c: 173:     return I2C1_CONTINUE;
 32134  008D34  0E04               	movlw	4
 32135  008D36  0012               	return		;funcret
 32136  008D38                     __end_of_wr2RegCompleteHandler@i2c1_master_example$F523:
 32137                           	callstack 0
 32138                           
 32139 ;; *************** function _I2C1_SetDataCompleteCallback *****************
 32140 ;; Defined at:
 32141 ;;		line 273 in file "mcc_generated_files/i2c1_master.c"
 32142 ;; Parameters:    Size  Location     Type
 32143 ;;  cb              2   20[COMRAM] PTR FTN(PTR void ,)enum 
 32144 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler@i2c1_master_example$F535(1), wr2RegCompleteHandler@i2c1_master_exa
      +mple$F523(1), wr1RegCompleteHandler@i2c1_master_example$F517(1), 
 32145 ;;		 -> rd2RegCompleteHandler@i2c1_master_example$F511(1), rd1RegCompleteHandler@i2c1_master_example$F500(1), rdBlkRegCo
      +mpleteHandler(1), wr2RegCompleteHandler(1), 
 32146 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), wr1RegCompleteHandler(1), 
 32147 ;;  ptr             2   22[COMRAM] PTR void 
 32148 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 32149 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 32150 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 32151 ;; Auto vars:     Size  Location     Type
 32152 ;;		None
 32153 ;; Return value:  Size  Location     Type
 32154 ;;                  1    wreg      void 
 32155 ;; Registers used:
 32156 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32157 ;; Tracked objects:
 32158 ;;		On entry : 33/2
 32159 ;;		On exit  : 0/0
 32160 ;;		Unchanged: 0/0
 32161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32162 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32163 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32164 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32165 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32166 ;;Total ram usage:        4 bytes
 32167 ;; Hardware stack levels used: 1
 32168 ;; Hardware stack levels required when called: 5
 32169 ;; This function calls:
 32170 ;;		_I2C1_SetCallback
 32171 ;; This function is called by:
 32172 ;;		_wr1RegCompleteHandler
 32173 ;;		_rd1RegCompleteHandler
 32174 ;;		_rd2RegCompleteHandler
 32175 ;;		_wr2RegCompleteHandler
 32176 ;;		_rdBlkRegCompleteHandler
 32177 ;;		_i2c_readDataBlock
 32178 ;;		_I2C1_Read1ByteRegister
 32179 ;;		_rd1RegCompleteHandler@i2c1_master_example$F500
 32180 ;;		_rd2RegCompleteHandler@i2c1_master_example$F511
 32181 ;;		_wr1RegCompleteHandler@i2c1_master_example$F517
 32182 ;;		_wr2RegCompleteHandler@i2c1_master_example$F523
 32183 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F535
 32184 ;; This function uses a non-reentrant model
 32185 ;;
 32186                           
 32187                           	psect	text173
 32188  009088                     __ptext173:
 32189                           	callstack 0
 32190  009088                     _I2C1_SetDataCompleteCallback:
 32191                           	callstack 20
 32192                           
 32193                           ;mcc_generated_files/i2c1_master.c: 273: void I2C1_SetDataCompleteCallback(i2c1_callback
      +                          _t cb, void *ptr);mcc_generated_files/i2c1_master.c: 274: {;mcc_generated_files/i2c1_mas
      +                          ter.c: 275:     I2C1_SetCallback(I2C1_DATA_COMPLETE, cb, ptr);
 32194                           
 32195                           ;incstack = 0
 32196  009088  C015  F010         	movff	I2C1_SetDataCompleteCallback@cb,I2C1_SetCallback@cb
 32197  00908C  C016  F011         	movff	I2C1_SetDataCompleteCallback@cb+1,I2C1_SetCallback@cb+1
 32198  009090  C017  F012         	movff	I2C1_SetDataCompleteCallback@ptr,I2C1_SetCallback@ptr
 32199  009094  C018  F013         	movff	I2C1_SetDataCompleteCallback@ptr+1,I2C1_SetCallback@ptr+1
 32200  009098  0E00               	movlw	0
 32201  00909A  ECE8  F03F         	call	_I2C1_SetCallback
 32202  00909E  0012               	return		;funcret
 32203  0090A0                     __end_of_I2C1_SetDataCompleteCallback:
 32204                           	callstack 0
 32205                           
 32206 ;; *************** function _I2C1_SetCallback *****************
 32207 ;; Defined at:
 32208 ;;		line 298 in file "mcc_generated_files/i2c1_master.c"
 32209 ;; Parameters:    Size  Location     Type
 32210 ;;  idx             1    wreg     enum E10460
 32211 ;;  cb              2   15[COMRAM] PTR FTN(PTR void ,)enum 
 32212 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler@i2c1_master_example$F535(1), wr2RegCompleteHandler@i2c1_master_exa
      +mple$F523(1), wr1RegCompleteHandler@i2c1_master_example$F517(1), 
 32213 ;;		 -> rd2RegCompleteHandler@i2c1_master_example$F511(1), rd1RegCompleteHandler@i2c1_master_example$F500(1), rdBlkRegCo
      +mpleteHandler(1), wr2RegCompleteHandler(1), 
 32214 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), wr1RegCompleteHandler(1), 
 32215 ;;  ptr             2   17[COMRAM] PTR void 
 32216 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 32217 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 32218 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 32219 ;; Auto vars:     Size  Location     Type
 32220 ;;  idx             1   19[COMRAM] enum E10460
 32221 ;; Return value:  Size  Location     Type
 32222 ;;                  1    wreg      void 
 32223 ;; Registers used:
 32224 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 32225 ;; Tracked objects:
 32226 ;;		On entry : 33/2
 32227 ;;		On exit  : 0/0
 32228 ;;		Unchanged: 0/0
 32229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32230 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32231 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32233 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32234 ;;Total ram usage:        5 bytes
 32235 ;; Hardware stack levels used: 1
 32236 ;; Hardware stack levels required when called: 4
 32237 ;; This function calls:
 32238 ;;		Nothing
 32239 ;; This function is called by:
 32240 ;;		_I2C1_SetDataCompleteCallback
 32241 ;;		_I2C1_SetAddressNackCallback
 32242 ;; This function uses a non-reentrant model
 32243 ;;
 32244                           
 32245                           	psect	text174
 32246  007FD0                     __ptext174:
 32247                           	callstack 0
 32248  007FD0                     _I2C1_SetCallback:
 32249                           	callstack 20
 32250                           
 32251                           ;incstack = 0
 32252                           ;I2C1_SetCallback@idx stored from wreg
 32253  007FD0  6E14               	movwf	I2C1_SetCallback@idx^0,c
 32254                           
 32255                           ;mcc_generated_files/i2c1_master.c: 298: static void I2C1_SetCallback(i2c1_callbackIndex
      +                          _t idx, i2c1_callback_t cb, void *ptr);mcc_generated_files/i2c1_master.c: 299: {;mcc_gen
      +                          erated_files/i2c1_master.c: 300:     if(cb)
 32256  007FD2  5010               	movf	I2C1_SetCallback@cb^0,w,c
 32257  007FD4  1011               	iorwf	(I2C1_SetCallback@cb+1)^0,w,c
 32258  007FD6  B4D8               	btfsc	status,2,c
 32259  007FD8  D019               	goto	l18878
 32260                           
 32261                           ;mcc_generated_files/i2c1_master.c: 301:     {;mcc_generated_files/i2c1_master.c: 302:  
      +                                 I2C1_Status.callbackTable[idx] = cb;
 32262  007FDA  5014               	movf	I2C1_SetCallback@idx^0,w,c
 32263  007FDC  0D02               	mullw	2
 32264  007FDE  0E3C               	movlw	low _I2C1_Status
 32265  007FE0  24F3               	addwf	243,w,c
 32266  007FE2  6ED9               	movwf	fsr2l,c
 32267  007FE4  0E02               	movlw	high _I2C1_Status
 32268  007FE6  20F4               	addwfc	prodh,w,c
 32269  007FE8  6EDA               	movwf	fsr2h,c
 32270  007FEA  C010  FFDE         	movff	I2C1_SetCallback@cb,postinc2
 32271  007FEE  C011  FFDD         	movff	I2C1_SetCallback@cb+1,postdec2
 32272                           
 32273                           ;mcc_generated_files/i2c1_master.c: 303:         I2C1_Status.callbackPayload[idx] = ptr;
 32274  007FF2  5014               	movf	I2C1_SetCallback@idx^0,w,c
 32275  007FF4  0D02               	mullw	2
 32276  007FF6  0E48               	movlw	low (_I2C1_Status+12)
 32277  007FF8  24F3               	addwf	243,w,c
 32278  007FFA  6ED9               	movwf	fsr2l,c
 32279  007FFC  0E02               	movlw	high (_I2C1_Status+12)
 32280  007FFE  20F4               	addwfc	prodh,w,c
 32281  008000  6EDA               	movwf	fsr2h,c
 32282  008002  C012  FFDE         	movff	I2C1_SetCallback@ptr,postinc2
 32283  008006  C013  FFDD         	movff	I2C1_SetCallback@ptr+1,postdec2
 32284                           
 32285                           ;mcc_generated_files/i2c1_master.c: 304:     }
 32286  00800A  0012               	return	
 32287  00800C                     l18878:
 32288                           
 32289                           ;mcc_generated_files/i2c1_master.c: 306:     {;mcc_generated_files/i2c1_master.c: 307:  
      +                                 I2C1_Status.callbackTable[idx] = I2C1_CallbackReturnStop;
 32290  00800C  5014               	movf	I2C1_SetCallback@idx^0,w,c
 32291  00800E  0D02               	mullw	2
 32292  008010  0E3C               	movlw	low _I2C1_Status
 32293  008012  24F3               	addwf	243,w,c
 32294  008014  6ED9               	movwf	fsr2l,c
 32295  008016  0E02               	movlw	high _I2C1_Status
 32296  008018  20F4               	addwfc	prodh,w,c
 32297  00801A  6EDA               	movwf	fsr2h,c
 32298  00801C  0E8E               	movlw	low _I2C1_CallbackReturnStop
 32299  00801E  6EDE               	movwf	postinc2,c
 32300  008020  0E92               	movlw	high _I2C1_CallbackReturnStop
 32301  008022  6EDD               	movwf	postdec2,c
 32302                           
 32303                           ;mcc_generated_files/i2c1_master.c: 308:         I2C1_Status.callbackPayload[idx] = ((vo
      +                          id*)0);
 32304  008024  5014               	movf	I2C1_SetCallback@idx^0,w,c
 32305  008026  0D02               	mullw	2
 32306  008028  0E48               	movlw	low (_I2C1_Status+12)
 32307  00802A  24F3               	addwf	243,w,c
 32308  00802C  6ED9               	movwf	fsr2l,c
 32309  00802E  0E02               	movlw	high (_I2C1_Status+12)
 32310  008030  20F4               	addwfc	prodh,w,c
 32311  008032  6EDA               	movwf	fsr2h,c
 32312  008034  0E00               	movlw	0
 32313  008036  6EDE               	movwf	postinc2,c
 32314  008038  0E00               	movlw	0
 32315  00803A  6EDD               	movwf	postdec2,c
 32316  00803C  0012               	return		;funcret
 32317  00803E                     __end_of_I2C1_SetCallback:
 32318                           	callstack 0
 32319                           
 32320 ;; *************** function _I2C1_SetBuffer *****************
 32321 ;; Defined at:
 32322 ;;		line 263 in file "mcc_generated_files/i2c1_master.c"
 32323 ;; Parameters:    Size  Location     Type
 32324 ;;  buffer          2   15[COMRAM] PTR void 
 32325 ;;		 -> cmdMemoryIsEmpty@tempSerial(4), memoryTEMP(16), var_sys_NVM(64), I2C1_ReadDataBlock@reg(1), 
 32326 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_WriteNBytes@dat(17), I2C1_Write2ByteRegister@reg(1), I2C1_Write2ByteRegi
      +ster@data(2), 
 32327 ;;		 -> I2C1_Write1ByteRegister@reg(1), I2C1_Write1ByteRegister@data(1), I2C1_Read2ByteRegister@reg(1), I2C1_Read2ByteRe
      +gister@returnValue(2), 
 32328 ;;		 -> I2C1_Read1ByteRegister@reg(1), I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@reg(2), i2c_readDataBloc
      +k@d(4), 
 32329 ;;		 -> i2c_write2ByteRegister@reg(1), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@reg(1), i2c_read2ByteRegist
      +er@result(2), 
 32330 ;;		 -> i2c_read1ByteRegister@reg(1), i2c_read1ByteRegister@d2(1), i2c_writeNBytes@dat(17), i2c_write1ByteRegister@reg(1
      +), 
 32331 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 32332 ;;  bufferSize      2   17[COMRAM] unsigned int 
 32333 ;; Auto vars:     Size  Location     Type
 32334 ;;		None
 32335 ;; Return value:  Size  Location     Type
 32336 ;;                  1    wreg      void 
 32337 ;; Registers used:
 32338 ;;		wreg, status,2, status,0
 32339 ;; Tracked objects:
 32340 ;;		On entry : 0/2
 32341 ;;		On exit  : 3F/2
 32342 ;;		Unchanged: 0/0
 32343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32344 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32345 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32347 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32348 ;;Total ram usage:        4 bytes
 32349 ;; Hardware stack levels used: 1
 32350 ;; Hardware stack levels required when called: 4
 32351 ;; This function calls:
 32352 ;;		Nothing
 32353 ;; This function is called by:
 32354 ;;		_wr1RegCompleteHandler
 32355 ;;		_i2c_writeNBytes
 32356 ;;		_rd1RegCompleteHandler
 32357 ;;		_rd2RegCompleteHandler
 32358 ;;		_wr2RegCompleteHandler
 32359 ;;		_rdBlkRegCompleteHandler
 32360 ;;		_i2c_readDataBlock
 32361 ;;		_I2C1_Read1ByteRegister
 32362 ;;		_rd1RegCompleteHandler@i2c1_master_example$F500
 32363 ;;		_rd2RegCompleteHandler@i2c1_master_example$F511
 32364 ;;		_wr1RegCompleteHandler@i2c1_master_example$F517
 32365 ;;		_wr2RegCompleteHandler@i2c1_master_example$F523
 32366 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F535
 32367 ;; This function uses a non-reentrant model
 32368 ;;
 32369                           
 32370                           	psect	text175
 32371  008FF6                     __ptext175:
 32372                           	callstack 0
 32373  008FF6                     _I2C1_SetBuffer:
 32374                           	callstack 21
 32375                           
 32376                           ;mcc_generated_files/i2c1_master.c: 263: void I2C1_SetBuffer(void *buffer, size_t buffer
      +                          Size);mcc_generated_files/i2c1_master.c: 264: {;mcc_generated_files/i2c1_master.c: 265: 
      +                              if(I2C1_Status.bufferFree)
 32377                           
 32378                           ;incstack = 0
 32379  008FF6  0102               	movlb	2	; () banked
 32380  008FF8  A75F               	btfss	(_I2C1_Status+35)& (0+255),3,b
 32381  008FFA  0012               	return	
 32382                           
 32383                           ; BSR set to: 2
 32384                           ;mcc_generated_files/i2c1_master.c: 266:     {;mcc_generated_files/i2c1_master.c: 267:  
      +                                 I2C1_Status.data_ptr = buffer;
 32385  008FFC  C010  F259         	movff	I2C1_SetBuffer@buffer,_I2C1_Status+29
 32386  009000  C011  F25A         	movff	I2C1_SetBuffer@buffer+1,_I2C1_Status+30
 32387                           
 32388                           ; BSR set to: 2
 32389                           ;mcc_generated_files/i2c1_master.c: 268:         I2C1_Status.data_length = bufferSize;
 32390  009004  C012  F25B         	movff	I2C1_SetBuffer@bufferSize,_I2C1_Status+31
 32391  009008  C013  F25C         	movff	I2C1_SetBuffer@bufferSize+1,_I2C1_Status+32
 32392                           
 32393                           ; BSR set to: 2
 32394                           ;mcc_generated_files/i2c1_master.c: 269:         I2C1_Status.bufferFree = 0;
 32395  00900C  975F               	bcf	(_I2C1_Status+35)& (0+255),3,b
 32396                           
 32397                           ; BSR set to: 2
 32398  00900E  0012               	return		;funcret
 32399  009010                     __end_of_I2C1_SetBuffer:
 32400                           	callstack 0
 32401                           
 32402 ;; *************** function _I2C1_MasterStop *****************
 32403 ;; Defined at:
 32404 ;;		line 593 in file "mcc_generated_files/i2c1_master.c"
 32405 ;; Parameters:    Size  Location     Type
 32406 ;;		None
 32407 ;; Auto vars:     Size  Location     Type
 32408 ;;		None
 32409 ;; Return value:  Size  Location     Type
 32410 ;;                  1    wreg      void 
 32411 ;; Registers used:
 32412 ;;		None
 32413 ;; Tracked objects:
 32414 ;;		On entry : 0/2
 32415 ;;		On exit  : 0/0
 32416 ;;		Unchanged: 0/0
 32417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32419 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32421 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32422 ;;Total ram usage:        0 bytes
 32423 ;; Hardware stack levels used: 1
 32424 ;; Hardware stack levels required when called: 4
 32425 ;; This function calls:
 32426 ;;		Nothing
 32427 ;; This function is called by:
 32428 ;;		_I2C1_DO_SEND_STOP
 32429 ;; This function uses a non-reentrant model
 32430 ;;
 32431                           
 32432                           	psect	text176
 32433  009292                     __ptext176:
 32434                           	callstack 0
 32435  009292                     _I2C1_MasterStop:
 32436                           	callstack 15
 32437                           
 32438                           ;mcc_generated_files/i2c1_master.c: 595:     SSP1CON2bits.PEN = 1;
 32439                           
 32440                           ; BSR set to: 2
 32441                           ;incstack = 0
 32442  009292  8497               	bsf	151,2,c	;volatile
 32443  009294  0012               	return		;funcret
 32444  009296                     __end_of_I2C1_MasterStop:
 32445                           	callstack 0
 32446                           
 32447 ;; *************** function _I2C1_MasterEnableRestart *****************
 32448 ;; Defined at:
 32449 ;;		line 573 in file "mcc_generated_files/i2c1_master.c"
 32450 ;; Parameters:    Size  Location     Type
 32451 ;;		None
 32452 ;; Auto vars:     Size  Location     Type
 32453 ;;		None
 32454 ;; Return value:  Size  Location     Type
 32455 ;;                  1    wreg      void 
 32456 ;; Registers used:
 32457 ;;		None
 32458 ;; Tracked objects:
 32459 ;;		On entry : 0/2
 32460 ;;		On exit  : 0/0
 32461 ;;		Unchanged: 0/0
 32462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32466 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32467 ;;Total ram usage:        0 bytes
 32468 ;; Hardware stack levels used: 1
 32469 ;; Hardware stack levels required when called: 4
 32470 ;; This function calls:
 32471 ;;		Nothing
 32472 ;; This function is called by:
 32473 ;;		_I2C1_DO_SEND_RESTART_READ
 32474 ;;		_I2C1_DO_SEND_RESTART_WRITE
 32475 ;;		_I2C1_DO_SEND_RESTART
 32476 ;; This function uses a non-reentrant model
 32477 ;;
 32478                           
 32479                           	psect	text177
 32480  009296                     __ptext177:
 32481                           	callstack 0
 32482  009296                     _I2C1_MasterEnableRestart:
 32483                           	callstack 15
 32484                           
 32485                           ;mcc_generated_files/i2c1_master.c: 575:     SSP1CON2bits.RSEN = 1;
 32486                           
 32487                           ;incstack = 0
 32488  009296  8297               	bsf	151,1,c	;volatile
 32489  009298  0012               	return		;funcret
 32490  00929A                     __end_of_I2C1_MasterEnableRestart:
 32491                           	callstack 0
 32492                           
 32493 ;; *************** function _I2C1_MasterStart *****************
 32494 ;; Defined at:
 32495 ;;		line 588 in file "mcc_generated_files/i2c1_master.c"
 32496 ;; Parameters:    Size  Location     Type
 32497 ;;		None
 32498 ;; Auto vars:     Size  Location     Type
 32499 ;;		None
 32500 ;; Return value:  Size  Location     Type
 32501 ;;                  1    wreg      void 
 32502 ;; Registers used:
 32503 ;;		None
 32504 ;; Tracked objects:
 32505 ;;		On entry : 3F/2
 32506 ;;		On exit  : 3F/2
 32507 ;;		Unchanged: 3F/0
 32508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32509 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32510 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32512 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32513 ;;Total ram usage:        0 bytes
 32514 ;; Hardware stack levels used: 1
 32515 ;; Hardware stack levels required when called: 4
 32516 ;; This function calls:
 32517 ;;		Nothing
 32518 ;; This function is called by:
 32519 ;;		_I2C1_MasterOperation
 32520 ;; This function uses a non-reentrant model
 32521 ;;
 32522                           
 32523                           	psect	text178
 32524  00929A                     __ptext178:
 32525                           	callstack 0
 32526  00929A                     _I2C1_MasterStart:
 32527                           	callstack 19
 32528                           
 32529                           ; BSR set to: 2
 32530                           ;mcc_generated_files/i2c1_master.c: 590:     SSP1CON2bits.SEN = 1;
 32531                           
 32532                           ;incstack = 0
 32533  00929A  8097               	bsf	151,0,c	;volatile
 32534                           
 32535                           ; BSR set to: 2
 32536  00929C  0012               	return		;funcret
 32537  00929E                     __end_of_I2C1_MasterStart:
 32538                           	callstack 0
 32539                           
 32540 ;; *************** function _I2C1_Close *****************
 32541 ;; Defined at:
 32542 ;;		line 209 in file "mcc_generated_files/i2c1_master.c"
 32543 ;; Parameters:    Size  Location     Type
 32544 ;;		None
 32545 ;; Auto vars:     Size  Location     Type
 32546 ;;  returnValue     1   15[COMRAM] enum E355
 32547 ;; Return value:  Size  Location     Type
 32548 ;;                  1    wreg      enum E355
 32549 ;; Registers used:
 32550 ;;		wreg, status,2, cstack
 32551 ;; Tracked objects:
 32552 ;;		On entry : 0/2
 32553 ;;		On exit  : 33/2
 32554 ;;		Unchanged: 0/0
 32555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32556 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32557 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32559 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32560 ;;Total ram usage:        1 bytes
 32561 ;; Hardware stack levels used: 1
 32562 ;; Hardware stack levels required when called: 5
 32563 ;; This function calls:
 32564 ;;		_I2C1_MasterClearIrq
 32565 ;;		_I2C1_MasterClose
 32566 ;;		_I2C1_MasterDisableIrq
 32567 ;; This function is called by:
 32568 ;;		_i2c_writeNBytes
 32569 ;;		_i2c_readDataBlock
 32570 ;;		_I2C1_Read1ByteRegister
 32571 ;; This function uses a non-reentrant model
 32572 ;;
 32573                           
 32574                           	psect	text179
 32575  008EDA                     __ptext179:
 32576                           	callstack 0
 32577  008EDA                     _I2C1_Close:
 32578                           	callstack 20
 32579                           
 32580                           ;mcc_generated_files/i2c1_master.c: 211:     i2c1_error_t returnValue = I2C1_BUSY;
 32581                           
 32582                           ; BSR set to: 2
 32583                           ;incstack = 0
 32584  008EDA  0E01               	movlw	1
 32585  008EDC  6E10               	movwf	I2C1_Close@returnValue^0,c
 32586                           
 32587                           ;mcc_generated_files/i2c1_master.c: 212:     if(!I2C1_Status.busy)
 32588  008EDE  0102               	movlb	2	; () banked
 32589  008EE0  B35F               	btfsc	(_I2C1_Status+35)& (0+255),1,b
 32590  008EE2  D00A               	goto	l19312
 32591                           
 32592                           ; BSR set to: 2
 32593                           ;mcc_generated_files/i2c1_master.c: 213:     {;mcc_generated_files/i2c1_master.c: 214:  
      +                                 I2C1_Status.inUse = 0;
 32594  008EE4  955F               	bcf	(_I2C1_Status+35)& (0+255),2,b
 32595                           
 32596                           ;mcc_generated_files/i2c1_master.c: 215:         I2C1_Status.address = 0xff;
 32597  008EE6  6958               	setf	(_I2C1_Status+28)& (0+255),b
 32598                           
 32599                           ; BSR set to: 2
 32600                           ;mcc_generated_files/i2c1_master.c: 216:         I2C1_MasterClearIrq();
 32601  008EE8  EC31  F049         	call	_I2C1_MasterClearIrq	;wreg free
 32602                           
 32603                           ;mcc_generated_files/i2c1_master.c: 217:         I2C1_MasterDisableIrq();
 32604  008EEC  EC4F  F049         	call	_I2C1_MasterDisableIrq	;wreg free
 32605                           
 32606                           ;mcc_generated_files/i2c1_master.c: 218:         I2C1_MasterClose();
 32607  008EF0  EC51  F049         	call	_I2C1_MasterClose	;wreg free
 32608                           
 32609                           ; BSR set to: 14
 32610                           ;mcc_generated_files/i2c1_master.c: 219:         returnValue = I2C1_Status.error;
 32611  008EF4  C25E  F010         	movff	_I2C1_Status+34,I2C1_Close@returnValue
 32612  008EF8                     l19312:
 32613                           
 32614                           ;mcc_generated_files/i2c1_master.c: 221:     return returnValue;
 32615  008EF8  5010               	movf	I2C1_Close@returnValue^0,w,c
 32616  008EFA  0012               	return		;funcret
 32617  008EFC                     __end_of_I2C1_Close:
 32618                           	callstack 0
 32619                           
 32620 ;; *************** function _I2C1_MasterDisableIrq *****************
 32621 ;; Defined at:
 32622 ;;		line 635 in file "mcc_generated_files/i2c1_master.c"
 32623 ;; Parameters:    Size  Location     Type
 32624 ;;		None
 32625 ;; Auto vars:     Size  Location     Type
 32626 ;;		None
 32627 ;; Return value:  Size  Location     Type
 32628 ;;                  1    wreg      void 
 32629 ;; Registers used:
 32630 ;;		None
 32631 ;; Tracked objects:
 32632 ;;		On entry : 3F/E
 32633 ;;		On exit  : 3F/E
 32634 ;;		Unchanged: 0/0
 32635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32637 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32639 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32640 ;;Total ram usage:        0 bytes
 32641 ;; Hardware stack levels used: 1
 32642 ;; Hardware stack levels required when called: 4
 32643 ;; This function calls:
 32644 ;;		Nothing
 32645 ;; This function is called by:
 32646 ;;		_I2C1_Close
 32647 ;; This function uses a non-reentrant model
 32648 ;;
 32649                           
 32650                           	psect	text180
 32651  00929E                     __ptext180:
 32652                           	callstack 0
 32653  00929E                     _I2C1_MasterDisableIrq:
 32654                           	callstack 20
 32655                           
 32656                           ; BSR set to: 14
 32657                           ;mcc_generated_files/i2c1_master.c: 637:     PIE3bits.SSP1IE = 0;
 32658                           
 32659                           ;incstack = 0
 32660  00929E  91C5               	bcf	197,0,b	;volatile
 32661                           
 32662                           ; BSR set to: 14
 32663  0092A0  0012               	return		;funcret
 32664  0092A2                     __end_of_I2C1_MasterDisableIrq:
 32665                           	callstack 0
 32666                           
 32667 ;; *************** function _I2C1_MasterClose *****************
 32668 ;; Defined at:
 32669 ;;		line 557 in file "mcc_generated_files/i2c1_master.c"
 32670 ;; Parameters:    Size  Location     Type
 32671 ;;		None
 32672 ;; Auto vars:     Size  Location     Type
 32673 ;;		None
 32674 ;; Return value:  Size  Location     Type
 32675 ;;                  1    wreg      void 
 32676 ;; Registers used:
 32677 ;;		None
 32678 ;; Tracked objects:
 32679 ;;		On entry : 3F/E
 32680 ;;		On exit  : 3F/E
 32681 ;;		Unchanged: 3F/0
 32682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32684 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32686 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32687 ;;Total ram usage:        0 bytes
 32688 ;; Hardware stack levels used: 1
 32689 ;; Hardware stack levels required when called: 4
 32690 ;; This function calls:
 32691 ;;		Nothing
 32692 ;; This function is called by:
 32693 ;;		_I2C1_Close
 32694 ;; This function uses a non-reentrant model
 32695 ;;
 32696                           
 32697                           	psect	text181
 32698  0092A2                     __ptext181:
 32699                           	callstack 0
 32700  0092A2                     _I2C1_MasterClose:
 32701                           	callstack 20
 32702                           
 32703                           ; BSR set to: 14
 32704                           ;mcc_generated_files/i2c1_master.c: 560:     SSP1CON1bits.SSPEN = 0;
 32705                           
 32706                           ; BSR set to: 14
 32707                           ;incstack = 0
 32708  0092A2  9A96               	bcf	150,5,c	;volatile
 32709                           
 32710                           ; BSR set to: 14
 32711  0092A4  0012               	return		;funcret
 32712  0092A6                     __end_of_I2C1_MasterClose:
 32713                           	callstack 0
 32714                           
 32715 ;; *************** function _I2C1_MasterClearIrq *****************
 32716 ;; Defined at:
 32717 ;;		line 640 in file "mcc_generated_files/i2c1_master.c"
 32718 ;; Parameters:    Size  Location     Type
 32719 ;;		None
 32720 ;; Auto vars:     Size  Location     Type
 32721 ;;		None
 32722 ;; Return value:  Size  Location     Type
 32723 ;;                  1    wreg      void 
 32724 ;; Registers used:
 32725 ;;		None
 32726 ;; Tracked objects:
 32727 ;;		On entry : 33/2
 32728 ;;		On exit  : 3F/E
 32729 ;;		Unchanged: 0/0
 32730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32731 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32732 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32734 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32735 ;;Total ram usage:        0 bytes
 32736 ;; Hardware stack levels used: 1
 32737 ;; Hardware stack levels required when called: 4
 32738 ;; This function calls:
 32739 ;;		Nothing
 32740 ;; This function is called by:
 32741 ;;		_I2C1_Open
 32742 ;;		_I2C1_Close
 32743 ;;		_I2C1_MasterFsm
 32744 ;; This function uses a non-reentrant model
 32745 ;;
 32746                           
 32747                           	psect	text182
 32748  009262                     __ptext182:
 32749                           	callstack 0
 32750  009262                     _I2C1_MasterClearIrq:
 32751                           	callstack 20
 32752                           
 32753                           ;mcc_generated_files/i2c1_master.c: 642:     PIR3bits.SSP1IF = 0;
 32754                           
 32755                           ; BSR set to: 14
 32756                           ;incstack = 0
 32757  009262  010E               	movlb	14	; () banked
 32758  009264  91CD               	bcf	205,0,b	;volatile
 32759                           
 32760                           ; BSR set to: 14
 32761  009266  0012               	return		;funcret
 32762  009268                     __end_of_I2C1_MasterClearIrq:
 32763                           	callstack 0
 32764                           
 32765 ;; *************** function _INTERRUPT_InterruptManager *****************
 32766 ;; Defined at:
 32767 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
 32768 ;; Parameters:    Size  Location     Type
 32769 ;;		None
 32770 ;; Auto vars:     Size  Location     Type
 32771 ;;		None
 32772 ;; Return value:  Size  Location     Type
 32773 ;;                  1    wreg      void 
 32774 ;; Registers used:
 32775 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 32776 ;; Tracked objects:
 32777 ;;		On entry : 0/0
 32778 ;;		On exit  : 0/0
 32779 ;;		Unchanged: 0/0
 32780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32783 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32784 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32785 ;;Total ram usage:        6 bytes
 32786 ;; Hardware stack levels used: 1
 32787 ;; Hardware stack levels required when called: 3
 32788 ;; This function calls:
 32789 ;;		Absolute function
 32790 ;;		_EUSART1_Receive_ISR
 32791 ;;		_EUSART1_Transmit_ISR
 32792 ;;		_TMR0_ISR
 32793 ;;		_TMR1_ISR
 32794 ;;		_TMR2_ISR
 32795 ;; This function is called by:
 32796 ;;		Interrupt level 2
 32797 ;; This function uses a non-reentrant model
 32798 ;;
 32799                           
 32800                           	psect	intcode
 32801  000008                     __pintcode:
 32802                           	callstack 0
 32803  000008                     _INTERRUPT_InterruptManager:
 32804                           	callstack 14
 32805                           
 32806                           ; BSR set to: 14
 32807                           ;incstack = 0
 32808  000008  8250               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 32809  00000A  CFFA F00A          	movff	pclath,??_INTERRUPT_InterruptManager
 32810  00000E  CFFB F00B          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 32811  000012  CFD9 F00C          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
 32812  000016  CFDA F00D          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
 32813  00001A  CFF3 F00E          	movff	prodl,??_INTERRUPT_InterruptManager+4
 32814  00001E  CFF4 F00F          	movff	prodh,??_INTERRUPT_InterruptManager+5
 32815                           
 32816                           ;mcc_generated_files/interrupt_manager.c: 61:     if(PIE0bits.TMR0IE == 1 && PIR0bits.TM
      +                          R0IF == 1)
 32817  000022  010E               	movlb	14	; () banked
 32818  000024  BBC2               	btfsc	194,5,b	;volatile
 32819                           
 32820                           ; BSR set to: 14
 32821  000026  ABCA               	btfss	202,5,b	;volatile
 32822  000028  D003               	goto	i2l867
 32823                           
 32824                           ; BSR set to: 14
 32825                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         TMR0_ISR();
 32826  00002A  EC13  F047         	call	_TMR0_ISR	;wreg free
 32827                           
 32828                           ;mcc_generated_files/interrupt_manager.c: 64:     }
 32829  00002E  D028               	goto	i2l873
 32830  000030                     i2l867:
 32831                           
 32832                           ; BSR set to: 14
 32833  000030  ACF2               	btfss	242,6,c	;volatile
 32834  000032  D026               	goto	i2l873
 32835                           
 32836                           ; BSR set to: 14
 32837                           ;mcc_generated_files/interrupt_manager.c: 66:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 67:         if(PIE3bits.TX1IE == 1 && PIR3bits.TX1IF == 1)
 32838  000034  B9C5               	btfsc	197,4,b	;volatile
 32839                           
 32840                           ; BSR set to: 14
 32841  000036  A9CD               	btfss	205,4,b	;volatile
 32842  000038  D009               	goto	i2l870
 32843                           
 32844                           ; BSR set to: 14
 32845                           ;mcc_generated_files/interrupt_manager.c: 68:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 69:             EUSART1_TxDefaultInterruptHandler();
 32846  00003A  D801               	call	i2u2168_48
 32847  00003C  D021               	goto	i2l873
 32848  00003E                     i2u2168_48:
 32849  00003E  0005               	push	
 32850  000040  6EFA               	movwf	pclath,c
 32851  000042  0102               	movlb	2	; () banked
 32852  000044  51ED               	movf	_EUSART1_TxDefaultInterruptHandler& (0+255),w,b
 32853  000046  6EFD               	movwf	tosl,c
 32854  000048  51EE               	movf	(_EUSART1_TxDefaultInterruptHandler+1)& (0+255),w,b
 32855  00004A  D00B               	goto	L112
 32856  00004C                     i2l870:
 32857                           
 32858                           ; BSR set to: 14
 32859  00004C  BBC5               	btfsc	197,5,b	;volatile
 32860                           
 32861                           ; BSR set to: 14
 32862  00004E  ABCD               	btfss	205,5,b	;volatile
 32863  000050  D00C               	goto	i2l872
 32864                           
 32865                           ; BSR set to: 14
 32866                           ;mcc_generated_files/interrupt_manager.c: 72:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 73:             EUSART1_RxDefaultInterruptHandler();
 32867  000052  D801               	call	i2u2171_48
 32868  000054  D015               	goto	i2l873
 32869  000056                     i2u2171_48:
 32870  000056  0005               	push	
 32871  000058  6EFA               	movwf	pclath,c
 32872  00005A  0102               	movlb	2	; () banked
 32873  00005C  51EB               	movf	_EUSART1_RxDefaultInterruptHandler& (0+255),w,b
 32874  00005E  6EFD               	movwf	tosl,c
 32875  000060  51EC               	movf	(_EUSART1_RxDefaultInterruptHandler+1)& (0+255),w,b
 32876  000062                     L112:
 32877  000062  6EFE               	movwf	tosh,c
 32878  000064  6AFF               	clrf	tosu,c
 32879  000066  50FA               	movf	pclath,w,c
 32880  000068  0012               	return		;indir
 32881  00006A                     i2l872:
 32882                           
 32883                           ; BSR set to: 14
 32884  00006A  B1C6               	btfsc	198,0,b	;volatile
 32885                           
 32886                           ; BSR set to: 14
 32887  00006C  A1CE               	btfss	206,0,b	;volatile
 32888  00006E  D003               	goto	i2l874
 32889                           
 32890                           ; BSR set to: 14
 32891                           ;mcc_generated_files/interrupt_manager.c: 76:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 77:             TMR1_ISR();
 32892  000070  ECA2  F044         	call	_TMR1_ISR	;wreg free
 32893                           
 32894                           ;mcc_generated_files/interrupt_manager.c: 78:         }
 32895  000074  D005               	goto	i2l873
 32896  000076                     i2l874:
 32897                           
 32898                           ; BSR set to: 14
 32899  000076  B3C6               	btfsc	198,1,b	;volatile
 32900                           
 32901                           ; BSR set to: 14
 32902  000078  A3CE               	btfss	206,1,b	;volatile
 32903  00007A  D002               	goto	i2l873
 32904                           
 32905                           ; BSR set to: 14
 32906                           ;mcc_generated_files/interrupt_manager.c: 80:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 81:             TMR2_ISR();
 32907  00007C  ECE6  F02F         	call	_TMR2_ISR	;wreg free
 32908  000080                     i2l873:
 32909                           
 32910                           ; BSR set to: 14
 32911  000080  C00F  FFF4         	movff	??_INTERRUPT_InterruptManager+5,prodh
 32912  000084  C00E  FFF3         	movff	??_INTERRUPT_InterruptManager+4,prodl
 32913  000088  C00D  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
 32914  00008C  C00C  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
 32915  000090  C00B  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 32916  000094  C00A  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 32917  000098  9250               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 32918  00009A  0011               	retfie		f
 32919  00009C                     __end_of_INTERRUPT_InterruptManager:
 32920                           	callstack 0
 32921                           
 32922 ;; *************** function _TMR2_ISR *****************
 32923 ;; Defined at:
 32924 ;;		line 180 in file "mcc_generated_files/tmr2.c"
 32925 ;; Parameters:    Size  Location     Type
 32926 ;;		None
 32927 ;; Auto vars:     Size  Location     Type
 32928 ;;		None
 32929 ;; Return value:  Size  Location     Type
 32930 ;;                  1    wreg      void 
 32931 ;; Registers used:
 32932 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 32933 ;; Tracked objects:
 32934 ;;		On entry : 3F/E
 32935 ;;		On exit  : 0/0
 32936 ;;		Unchanged: 0/0
 32937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32938 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32939 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32940 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32941 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32942 ;;Total ram usage:        0 bytes
 32943 ;; Hardware stack levels used: 1
 32944 ;; Hardware stack levels required when called: 2
 32945 ;; This function calls:
 32946 ;;		Absolute function
 32947 ;;		_ReadADC
 32948 ;;		_TMR2_DefaultInterruptHandler
 32949 ;;		_controlTimeslots
 32950 ;;		_refreshSegment
 32951 ;; This function is called by:
 32952 ;;		_INTERRUPT_InterruptManager
 32953 ;; This function uses a non-reentrant model
 32954 ;;
 32955                           
 32956                           	psect	text184
 32957  005FCC                     __ptext184:
 32958                           	callstack 0
 32959  005FCC                     _TMR2_ISR:
 32960                           	callstack 14
 32961                           
 32962                           ; BSR set to: 14
 32963                           ;mcc_generated_files/tmr2.c: 184:     PIR4bits.TMR2IF = 0;
 32964                           
 32965                           ;incstack = 0
 32966  005FCC  93CE               	bcf	206,1,b	;volatile
 32967                           
 32968                           ; BSR set to: 14
 32969                           ;mcc_generated_files/tmr2.c: 188:                 ReadADC();
 32970  005FCE  EC55  F042         	call	_ReadADC	;wreg free
 32971                           
 32972                           ;mcc_generated_files/tmr2.c: 191:             refreshSegment();
 32973  005FD2  EC52  F03C         	call	_refreshSegment	;wreg free
 32974                           
 32975                           ;mcc_generated_files/tmr2.c: 193:             if(ts_system.ts_TimeSlotMain>0)
 32976  005FD6  0101               	movlb	1	; () banked
 32977  005FD8  519D               	movf	(_ts_system+3)& (0+255),w,b	;volatile
 32978  005FDA  A4D8               	btfss	status,2,c
 32979                           
 32980                           ; BSR set to: 1
 32981                           ;mcc_generated_files/tmr2.c: 194:                 {;mcc_generated_files/tmr2.c: 195:    
      +                                       ts_system.ts_TimeSlotMain--;
 32982  005FDC  079D               	decf	(_ts_system+3)& (0+255),f,b	;volatile
 32983                           
 32984                           ; BSR set to: 1
 32985                           ;mcc_generated_files/tmr2.c: 198:             if (ts_system.ts_TimeSlot50ms > 0)
 32986  005FDE  519B               	movf	(_ts_system+1)& (0+255),w,b	;volatile
 32987  005FE0  B4D8               	btfsc	status,2,c
 32988  005FE2  D002               	goto	i2l16264
 32989                           
 32990                           ; BSR set to: 1
 32991                           ;mcc_generated_files/tmr2.c: 199:                 {;mcc_generated_files/tmr2.c: 200:    
      +                                       ts_system.ts_TimeSlot50ms--;
 32992  005FE4  079B               	decf	(_ts_system+1)& (0+255),f,b	;volatile
 32993                           
 32994                           ;mcc_generated_files/tmr2.c: 201:                 }
 32995  005FE6  D089               	goto	i2l16336
 32996  005FE8                     i2l16264:
 32997                           
 32998                           ; BSR set to: 1
 32999                           ;mcc_generated_files/tmr2.c: 203:                 {;mcc_generated_files/tmr2.c: 204:    
      +                                       ts_system.ts_TimeSlot50ms = 50;
 33000  005FE8  0E32               	movlw	50
 33001  005FEA  6F9B               	movwf	(_ts_system+1)& (0+255),b	;volatile
 33002                           
 33003                           ; BSR set to: 1
 33004                           ;mcc_generated_files/tmr2.c: 208:                     controlTimeslots();
 33005  005FEC  EC0E  F02C         	call	_controlTimeslots	;wreg free
 33006                           
 33007                           ; BSR set to: 1
 33008                           ;mcc_generated_files/tmr2.c: 210:                       if (Counterchoose == 0)
 33009  005FF0  0100               	movlb	0	; () banked
 33010  005FF2  5192               	movf	_Counterchoose& (0+255),w,b
 33011  005FF4  A4D8               	btfss	status,2,c
 33012  005FF6  D002               	goto	i2l16272
 33013                           
 33014                           ; BSR set to: 0
 33015                           ;mcc_generated_files/tmr2.c: 211:                                {;mcc_generated_files/t
      +                          mr2.c: 212:                                    Counterchoose = 1;
 33016  005FF8  0E01               	movlw	1
 33017  005FFA  D001               	goto	L113
 33018  005FFC                     i2l16272:
 33019                           
 33020                           ; BSR set to: 0
 33021                           ;mcc_generated_files/tmr2.c: 215:                                {;mcc_generated_files/t
      +                          mr2.c: 216:                                    Counterchoose = 0;
 33022  005FFC  0E00               	movlw	0
 33023  005FFE                     L113:
 33024  005FFE  6F92               	movwf	_Counterchoose& (0+255),b
 33025                           
 33026                           ; BSR set to: 0
 33027                           ;mcc_generated_files/tmr2.c: 218:                            if (var_sys.LearningIsEnabl
      +                          ed==NO)
 33028                           
 33029                           ;mcc_generated_files/tmr2.c: 217:                                }
 33030  006000  0101               	movlb	1	; () banked
 33031  006002  5126               	movf	(_var_sys+38)& (0+255),w,b	;volatile
 33032  006004  A4D8               	btfss	status,2,c
 33033  006006  D034               	goto	i2l16298
 33034                           
 33035                           ; BSR set to: 1
 33036                           ;mcc_generated_files/tmr2.c: 219:                            {;mcc_generated_files/tmr2.
      +                          c: 222:                                if (var_sys.TimeMaxMotorIsON > 0 && var_sys.Activ
      +                          atecounter != stoped)
 33037  006008  5118               	movf	(_var_sys+24)& (0+255),w,b	;volatile
 33038  00600A  1119               	iorwf	(_var_sys+25)& (0+255),w,b	;volatile
 33039  00600C  111A               	iorwf	(_var_sys+26)& (0+255),w,b	;volatile
 33040  00600E  111B               	iorwf	(_var_sys+27)& (0+255),w,b	;volatile
 33041  006010  B4D8               	btfsc	status,2,c
 33042  006012  D008               	goto	i2l1266
 33043                           
 33044                           ; BSR set to: 1
 33045  006014  5116               	movf	(_var_sys+22)& (0+255),w,b	;volatile
 33046  006016  B4D8               	btfsc	status,2,c
 33047  006018  D005               	goto	i2l1266
 33048                           
 33049                           ; BSR set to: 1
 33050                           ;mcc_generated_files/tmr2.c: 223:                                {;mcc_generated_files/t
      +                          mr2.c: 225:                                     var_sys.TimeMaxMotorIsON--;
 33051  00601A  0718               	decf	(_var_sys+24)& (0+255),f,b	;volatile
 33052  00601C  0E00               	movlw	0
 33053  00601E  5B19               	subwfb	(_var_sys+25)& (0+255),f,b	;volatile
 33054  006020  5B1A               	subwfb	(_var_sys+26)& (0+255),f,b	;volatile
 33055  006022  5B1B               	subwfb	(_var_sys+27)& (0+255),f,b	;volatile
 33056  006024                     i2l1266:
 33057                           
 33058                           ; BSR set to: 1
 33059                           ;mcc_generated_files/tmr2.c: 230:                                if (var_sys.Activatecou
      +                          nter == open)
 33060  006024  0516               	decf	(_var_sys+22)& (0+255),w,b	;volatile
 33061  006026  A4D8               	btfss	status,2,c
 33062  006028  D00E               	goto	i2l16288
 33063                           
 33064                           ; BSR set to: 1
 33065                           ;mcc_generated_files/tmr2.c: 231:                                {;mcc_generated_files/t
      +                          mr2.c: 232:                                    {;mcc_generated_files/tmr2.c: 234:       
      +                                                            if (powerControl_st.decelarationActive==YES)
 33066  00602A  057B               	decf	_powerControl_st& (0+255),w,b
 33067  00602C  A4D8               	btfss	status,2,c
 33068  00602E  D004               	goto	i2u1841_40
 33069                           
 33070                           ; BSR set to: 1
 33071                           ;mcc_generated_files/tmr2.c: 235:                                         {;mcc_generate
      +                          d_files/tmr2.c: 236:                                             if(Counterchoose ==1){
 33072  006030  0100               	movlb	0	; () banked
 33073  006032  0592               	decf	_Counterchoose& (0+255),w,b
 33074  006034  A4D8               	btfss	status,2,c
 33075  006036  D061               	goto	i2l16336
 33076  006038                     i2u1841_40:
 33077                           
 33078                           ;mcc_generated_files/tmr2.c: 237:                                               var_sys.
      +                          PositionActual++;
 33079  006038  0E01               	movlw	1
 33080  00603A  0101               	movlb	1	; () banked
 33081  00603C  271E               	addwf	(_var_sys+30)& (0+255),f,b	;volatile
 33082  00603E  0E00               	movlw	0
 33083  006040  231F               	addwfc	(_var_sys+31)& (0+255),f,b	;volatile
 33084  006042  2320               	addwfc	(_var_sys+32)& (0+255),f,b	;volatile
 33085  006044  D013               	goto	L114
 33086  006046                     i2l16288:
 33087                           
 33088                           ; BSR set to: 1
 33089  006046  0E02               	movlw	2
 33090  006048  1916               	xorwf	(_var_sys+22)& (0+255),w,b	;volatile
 33091  00604A  A4D8               	btfss	status,2,c
 33092  00604C  D056               	goto	i2l16336
 33093                           
 33094                           ; BSR set to: 1
 33095                           ;mcc_generated_files/tmr2.c: 250:                                {;mcc_generated_files/t
      +                          mr2.c: 251:                                        if (powerControl_st.decelarationActiv
      +                          e==YES)
 33096  00604E  057B               	decf	_powerControl_st& (0+255),w,b
 33097  006050  A4D8               	btfss	status,2,c
 33098  006052  D004               	goto	i2u1844_40
 33099                           
 33100                           ; BSR set to: 1
 33101                           ;mcc_generated_files/tmr2.c: 252:                                         {;mcc_generate
      +                          d_files/tmr2.c: 253:                                             if(Counterchoose ==1){
 33102  006054  0100               	movlb	0	; () banked
 33103  006056  0592               	decf	_Counterchoose& (0+255),w,b
 33104  006058  A4D8               	btfss	status,2,c
 33105  00605A  D04F               	goto	i2l16336
 33106  00605C                     i2u1844_40:
 33107                           
 33108                           ;mcc_generated_files/tmr2.c: 254:                                               var_sys.
      +                          PositionActual--;
 33109  00605C  0EFF               	movlw	255
 33110  00605E  0101               	movlb	1	; () banked
 33111  006060  271E               	addwf	(_var_sys+30)& (0+255),f,b	;volatile
 33112  006062  0EFF               	movlw	255
 33113  006064  231F               	addwfc	(_var_sys+31)& (0+255),f,b	;volatile
 33114  006066  0EFF               	movlw	255
 33115  006068  2320               	addwfc	(_var_sys+32)& (0+255),f,b	;volatile
 33116  00606A  0EFF               	movlw	255
 33117  00606C                     L114:
 33118  00606C  2321               	addwfc	(_var_sys+33)& (0+255),f,b	;volatile
 33119                           
 33120                           ;mcc_generated_files/tmr2.c: 263:                            }
 33121  00606E  D045               	goto	i2l16336
 33122  006070                     i2l16298:
 33123                           
 33124                           ; BSR set to: 1
 33125                           ;mcc_generated_files/tmr2.c: 266:                            {;mcc_generated_files/tmr2.
      +                          c: 267:                                if (var_sys.Counter_Learning ==1)
 33126  006070  0517               	decf	(_var_sys+23)& (0+255),w,b	;volatile
 33127  006072  A4D8               	btfss	status,2,c
 33128  006074  D01C               	goto	i2l1277
 33129                           
 33130                           ; BSR set to: 1
 33131                           ;mcc_generated_files/tmr2.c: 268:                                {;mcc_generated_files/t
      +                          mr2.c: 270:                                     if (var_sys.Activatecounter == open)
 33132  006076  0516               	decf	(_var_sys+22)& (0+255),w,b	;volatile
 33133  006078  A4D8               	btfss	status,2,c
 33134  00607A  D00B               	goto	i2l16308
 33135                           
 33136                           ; BSR set to: 1
 33137                           ;mcc_generated_files/tmr2.c: 271:                                     {;mcc_generated_fi
      +                          les/tmr2.c: 273:                                         if (var_sys.LearningDecelaratio
      +                          n ==1)
 33138  00607C  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 33139  00607E  B4D8               	btfsc	status,2,c
 33140  006080  D016               	goto	i2l1277
 33141                           
 33142                           ; BSR set to: 1
 33143                           ;mcc_generated_files/tmr2.c: 282:                                            {;mcc_gener
      +                          ated_files/tmr2.c: 283:                                              learn_st.timeOpen++
      +                          ;
 33144  006082  0E01               	movlw	1
 33145  006084  0100               	movlb	0	; () banked
 33146  006086  2764               	addwf	(_learn_st+4)& (0+255),f,b	;volatile
 33147  006088  0E00               	movlw	0
 33148  00608A  2365               	addwfc	(_learn_st+5)& (0+255),f,b	;volatile
 33149  00608C  2366               	addwfc	(_learn_st+6)& (0+255),f,b	;volatile
 33150  00608E  2367               	addwfc	(_learn_st+7)& (0+255),f,b	;volatile
 33151  006090  D00E               	goto	i2l1277
 33152  006092                     i2l16308:
 33153                           
 33154                           ; BSR set to: 1
 33155  006092  0E02               	movlw	2
 33156  006094  1916               	xorwf	(_var_sys+22)& (0+255),w,b	;volatile
 33157  006096  A4D8               	btfss	status,2,c
 33158  006098  D00A               	goto	i2l1277
 33159                           
 33160                           ; BSR set to: 1
 33161                           ;mcc_generated_files/tmr2.c: 287:                                     {;mcc_generated_fi
      +                          les/tmr2.c: 289:                                         if (var_sys.LearningDecelaratio
      +                          n ==1)
 33162  00609A  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 33163  00609C  B4D8               	btfsc	status,2,c
 33164  00609E  D007               	goto	i2l1277
 33165                           
 33166                           ; BSR set to: 1
 33167                           ;mcc_generated_files/tmr2.c: 297:                                             {;mcc_gene
      +                          rated_files/tmr2.c: 298:                                                learn_st.timeClo
      +                          se++;
 33168  0060A0  0E01               	movlw	1
 33169  0060A2  0100               	movlb	0	; () banked
 33170  0060A4  2760               	addwf	_learn_st& (0+255),f,b	;volatile
 33171  0060A6  0E00               	movlw	0
 33172  0060A8  2361               	addwfc	(_learn_st+1)& (0+255),f,b	;volatile
 33173  0060AA  2362               	addwfc	(_learn_st+2)& (0+255),f,b	;volatile
 33174  0060AC  2363               	addwfc	(_learn_st+3)& (0+255),f,b	;volatile
 33175  0060AE                     i2l1277:
 33176                           
 33177                           ;mcc_generated_files/tmr2.c: 304:                                 if (var_sys.LearningDe
      +                          celaration ==1 && var_sys.programinAutomatic == 1)
 33178  0060AE  0101               	movlb	1	; () banked
 33179  0060B0  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 33180  0060B2  A4D8               	btfss	status,2,c
 33181  0060B4  D022               	goto	i2l16336
 33182                           
 33183                           ; BSR set to: 1
 33184  0060B6  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
 33185  0060B8  A4D8               	btfss	status,2,c
 33186  0060BA  D01F               	goto	i2l16336
 33187                           
 33188                           ; BSR set to: 1
 33189                           ;mcc_generated_files/tmr2.c: 305:                                 {;mcc_generated_files/
      +                          tmr2.c: 308:                                        if ( ts_system.ts_TimeSlot500ms > 0)
 33190  0060BC  519A               	movf	_ts_system& (0+255),w,b	;volatile
 33191  0060BE  B4D8               	btfsc	status,2,c
 33192  0060C0  D002               	goto	i2l16322
 33193                           
 33194                           ; BSR set to: 1
 33195                           ;mcc_generated_files/tmr2.c: 309:                                            {;mcc_gener
      +                          ated_files/tmr2.c: 310:                                                ts_system.ts_Time
      +                          Slot500ms--;
 33196  0060C2  079A               	decf	_ts_system& (0+255),f,b	;volatile
 33197                           
 33198                           ;mcc_generated_files/tmr2.c: 311:                                            }
 33199  0060C4  D01A               	goto	i2l16336
 33200  0060C6                     i2l16322:
 33201                           
 33202                           ; BSR set to: 1
 33203                           ;mcc_generated_files/tmr2.c: 314:                                          {;mcc_generat
      +                          ed_files/tmr2.c: 315:                                             ts_system.ts_TimeSlot5
      +                          00ms = 10;
 33204  0060C6  0E0A               	movlw	10
 33205  0060C8  6F9A               	movwf	_ts_system& (0+255),b	;volatile
 33206                           
 33207                           ; BSR set to: 1
 33208                           ;mcc_generated_files/tmr2.c: 317:                                             if ( var_s
      +                          ys.Activatecounter ==open )
 33209  0060CA  0516               	decf	(_var_sys+22)& (0+255),w,b	;volatile
 33210  0060CC  A4D8               	btfss	status,2,c
 33211  0060CE  D009               	goto	i2l16330
 33212                           
 33213                           ; BSR set to: 1
 33214                           ;mcc_generated_files/tmr2.c: 318:                                                {;mcc_g
      +                          enerated_files/tmr2.c: 319:                                                  learn_st.ti
      +                          meDecelerationOpen++;
 33215  0060D0  0100               	movlb	0	; () banked
 33216  0060D2  2B69               	incf	(_learn_st+9)& (0+255),f,b	;volatile
 33217                           
 33218                           ; BSR set to: 0
 33219                           ;mcc_generated_files/tmr2.c: 320:                                                  learn
      +                          _st.timeOpen++;
 33220  0060D4  0E01               	movlw	1
 33221  0060D6  2764               	addwf	(_learn_st+4)& (0+255),f,b	;volatile
 33222  0060D8  0E00               	movlw	0
 33223  0060DA  2365               	addwfc	(_learn_st+5)& (0+255),f,b	;volatile
 33224  0060DC  2366               	addwfc	(_learn_st+6)& (0+255),f,b	;volatile
 33225  0060DE  2367               	addwfc	(_learn_st+7)& (0+255),f,b	;volatile
 33226                           
 33227                           ;mcc_generated_files/tmr2.c: 322:                                                }
 33228  0060E0  D00C               	goto	i2l16336
 33229  0060E2                     i2l16330:
 33230                           
 33231                           ; BSR set to: 1
 33232  0060E2  0E02               	movlw	2
 33233  0060E4  1916               	xorwf	(_var_sys+22)& (0+255),w,b	;volatile
 33234  0060E6  A4D8               	btfss	status,2,c
 33235  0060E8  D008               	goto	i2l16336
 33236                           
 33237                           ; BSR set to: 1
 33238                           ;mcc_generated_files/tmr2.c: 325:                                                {;mcc_g
      +                          enerated_files/tmr2.c: 326:                                                  learn_st.ti
      +                          meDecelerationClose++;
 33239  0060EA  0100               	movlb	0	; () banked
 33240  0060EC  2B68               	incf	(_learn_st+8)& (0+255),f,b	;volatile
 33241                           
 33242                           ; BSR set to: 0
 33243                           ;mcc_generated_files/tmr2.c: 327:                                                  learn
      +                          _st.timeClose++;
 33244  0060EE  0E01               	movlw	1
 33245  0060F0  2760               	addwf	_learn_st& (0+255),f,b	;volatile
 33246  0060F2  0E00               	movlw	0
 33247  0060F4  2361               	addwfc	(_learn_st+1)& (0+255),f,b	;volatile
 33248  0060F6  2362               	addwfc	(_learn_st+2)& (0+255),f,b	;volatile
 33249  0060F8  2363               	addwfc	(_learn_st+3)& (0+255),f,b	;volatile
 33250  0060FA                     i2l16336:
 33251                           
 33252                           ;mcc_generated_files/tmr2.c: 335:     if(TMR2_InterruptHandler)
 33253  0060FA  0102               	movlb	2	; () banked
 33254  0060FC  51DD               	movf	_TMR2_InterruptHandler& (0+255),w,b
 33255  0060FE  11DE               	iorwf	(_TMR2_InterruptHandler+1)& (0+255),w,b
 33256  006100  B4D8               	btfsc	status,2,c
 33257  006102  0012               	return	
 33258                           
 33259                           ; BSR set to: 2
 33260                           ;mcc_generated_files/tmr2.c: 336:     {;mcc_generated_files/tmr2.c: 337:         TMR2_In
      +                          terruptHandler();
 33261  006104  D801               	call	i2u1856_48
 33262  006106  0012               	return	
 33263  006108                     i2u1856_48:
 33264  006108  0005               	push	
 33265  00610A  6EFA               	movwf	pclath,c
 33266  00610C  51DD               	movf	_TMR2_InterruptHandler& (0+255),w,b
 33267  00610E  6EFD               	movwf	tosl,c
 33268  006110  51DE               	movf	(_TMR2_InterruptHandler+1)& (0+255),w,b
 33269  006112  6EFE               	movwf	tosh,c
 33270  006114  6AFF               	clrf	tosu,c
 33271  006116  50FA               	movf	pclath,w,c
 33272  006118  0012               	return		;indir
 33273  00611A                     __end_of_TMR2_ISR:
 33274                           	callstack 0
 33275                           
 33276 ;; *************** function _refreshSegment *****************
 33277 ;; Defined at:
 33278 ;;		line 50 in file "outputs_MC50.c"
 33279 ;; Parameters:    Size  Location     Type
 33280 ;;		None
 33281 ;; Auto vars:     Size  Location     Type
 33282 ;;		None
 33283 ;; Return value:  Size  Location     Type
 33284 ;;                  1    wreg      void 
 33285 ;; Registers used:
 33286 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 33287 ;; Tracked objects:
 33288 ;;		On entry : 31/E
 33289 ;;		On exit  : 3E/0
 33290 ;;		Unchanged: 0/0
 33291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33292 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33293 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33295 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33296 ;;Total ram usage:        0 bytes
 33297 ;; Hardware stack levels used: 1
 33298 ;; Hardware stack levels required when called: 1
 33299 ;; This function calls:
 33300 ;;		_Segments_Set
 33301 ;; This function is called by:
 33302 ;;		_TMR2_ISR
 33303 ;; This function uses a non-reentrant model
 33304 ;;
 33305                           
 33306                           	psect	text185
 33307  0078A4                     __ptext185:
 33308                           	callstack 0
 33309  0078A4                     _refreshSegment:
 33310                           	callstack 14
 33311                           
 33312                           ;outputs_MC50.c: 54:     if (dispStruct.intermitentFreq==0||dispStruct.upFase==1)
 33313                           
 33314                           ;incstack = 0
 33315  0078A4  0100               	movlb	0	; () banked
 33316  0078A6  5175               	movf	(_dispStruct+3)& (0+255),w,b	;volatile
 33317  0078A8  1176               	iorwf	(_dispStruct+4)& (0+255),w,b	;volatile
 33318  0078AA  B4D8               	btfsc	status,2,c
 33319  0078AC  D003               	goto	i2u1458_40
 33320                           
 33321                           ; BSR set to: 0
 33322  0078AE  0577               	decf	(_dispStruct+5)& (0+255),w,b	;volatile
 33323  0078B0  A4D8               	btfss	status,2,c
 33324  0078B2  D01F               	goto	i2l2128
 33325  0078B4                     i2u1458_40:
 33326                           
 33327                           ; BSR set to: 0
 33328                           ;outputs_MC50.c: 55:     {;outputs_MC50.c: 56:         if (dispStruct.lastDisplay==disp2
      +                          _e)
 33329  0078B4  0574               	decf	(_dispStruct+2)& (0+255),w,b	;volatile
 33330  0078B6  A4D8               	btfss	status,2,c
 33331  0078B8  D00D               	goto	i2l2123
 33332                           
 33333                           ; BSR set to: 0
 33334                           
 33335                           ;outputs_MC50.c: 57:         {;outputs_MC50.c: 58:             do { LATCbits.LATC0 = 0; 
      +                          } while(0);
 33336  0078BA  9085               	bcf	133,0,c	;volatile
 33337                           
 33338                           ; BSR set to: 0
 33339                           ;outputs_MC50.c: 59:             Segments_Set(DispTable[dispStruct.display_grp.value_dis
      +                          play1]);
 33340  0078BC  0ED2               	movlw	low _DispTable
 33341  0078BE  2572               	addwf	_dispStruct& (0+255),w,b	;volatile
 33342  0078C0  6ED9               	movwf	fsr2l,c
 33343  0078C2  6ADA               	clrf	fsr2h,c
 33344  0078C4  0E03               	movlw	high _DispTable
 33345  0078C6  22DA               	addwfc	fsr2h,f,c
 33346  0078C8  50DF               	movf	indf2,w,c
 33347  0078CA  ECB8  F048         	call	_Segments_Set
 33348  0078CE  8285               	bsf	133,1,c	;volatile
 33349                           
 33350                           ;outputs_MC50.c: 61:             dispStruct.lastDisplay=disp1_e;
 33351  0078D0  0E00               	movlw	0
 33352  0078D2  D00C               	goto	L115
 33353  0078D4                     i2l2123:
 33354                           
 33355                           ; BSR set to: 0
 33356  0078D4  9285               	bcf	133,1,c	;volatile
 33357                           
 33358                           ; BSR set to: 0
 33359                           ;outputs_MC50.c: 66:             Segments_Set(DispTable[dispStruct.display_grp.value_dis
      +                          play2]);
 33360  0078D6  0ED2               	movlw	low _DispTable
 33361  0078D8  2573               	addwf	(_dispStruct+1)& (0+255),w,b	;volatile
 33362  0078DA  6ED9               	movwf	fsr2l,c
 33363  0078DC  6ADA               	clrf	fsr2h,c
 33364  0078DE  0E03               	movlw	high _DispTable
 33365  0078E0  22DA               	addwfc	fsr2h,f,c
 33366  0078E2  50DF               	movf	indf2,w,c
 33367  0078E4  ECB8  F048         	call	_Segments_Set
 33368  0078E8  8085               	bsf	133,0,c	;volatile
 33369                           
 33370                           ;outputs_MC50.c: 68:             dispStruct.lastDisplay=disp2_e;
 33371  0078EA  0E01               	movlw	1
 33372  0078EC                     L115:
 33373  0078EC  0100               	movlb	0	; () banked
 33374  0078EE  6F74               	movwf	(_dispStruct+2)& (0+255),b	;volatile
 33375  0078F0  D002               	goto	i2l14352
 33376  0078F2                     i2l2128:
 33377                           
 33378                           ; BSR set to: 0
 33379  0078F2  9085               	bcf	133,0,c	;volatile
 33380                           
 33381                           ; BSR set to: 0
 33382                           
 33383                           ;outputs_MC50.c: 75:         do { LATCbits.LATC1 = 0; } while(0);
 33384  0078F4  9285               	bcf	133,1,c	;volatile
 33385  0078F6                     i2l14352:
 33386                           
 33387                           ; BSR set to: 0
 33388                           ;outputs_MC50.c: 79:     if(ts_system.timeFreqDigit<=0 && dispStruct.intermitentFreq!=0)
 33389  0078F6  0101               	movlb	1	; () banked
 33390  0078F8  BFA5               	btfsc	(_ts_system+11)& (0+255),7,b	;volatile
 33391  0078FA  D005               	goto	i2u1460_40
 33392  0078FC  51A5               	movf	(_ts_system+11)& (0+255),w,b	;volatile
 33393  0078FE  E114               	bnz	i2l2135
 33394  007900  05A4               	decf	(_ts_system+10)& (0+255),w,b	;volatile
 33395  007902  B0D8               	btfsc	status,0,c
 33396  007904  0012               	return	
 33397  007906                     i2u1460_40:
 33398                           
 33399                           ; BSR set to: 1
 33400  007906  0100               	movlb	0	; () banked
 33401  007908  5175               	movf	(_dispStruct+3)& (0+255),w,b	;volatile
 33402  00790A  1176               	iorwf	(_dispStruct+4)& (0+255),w,b	;volatile
 33403  00790C  B4D8               	btfsc	status,2,c
 33404  00790E  0012               	return	
 33405                           
 33406                           ; BSR set to: 0
 33407                           ;outputs_MC50.c: 80:     {;outputs_MC50.c: 81:         ts_system.timeFreqDigit=dispStruc
      +                          t.intermitentFreq;
 33408  007910  C075  F1A4         	movff	_dispStruct+3,_ts_system+10	;volatile
 33409  007914  C076  F1A5         	movff	_dispStruct+4,_ts_system+11	;volatile
 33410                           
 33411                           ; BSR set to: 0
 33412                           ;outputs_MC50.c: 82:         if(dispStruct.upFase==1)
 33413  007918  0577               	decf	(_dispStruct+5)& (0+255),w,b	;volatile
 33414  00791A  A4D8               	btfss	status,2,c
 33415  00791C  D003               	goto	i2l14362
 33416                           
 33417                           ; BSR set to: 0
 33418                           ;outputs_MC50.c: 83:         {;outputs_MC50.c: 84:             dispStruct.upFase = 0;
 33419  00791E  0E00               	movlw	0
 33420  007920  6F77               	movwf	(_dispStruct+5)& (0+255),b	;volatile
 33421                           
 33422                           ;outputs_MC50.c: 85:         }
 33423  007922  0012               	return	
 33424  007924                     i2l14362:
 33425                           
 33426                           ; BSR set to: 0
 33427                           ;outputs_MC50.c: 87:         {;outputs_MC50.c: 88:             dispStruct.upFase = 1;
 33428  007924  0E01               	movlw	1
 33429  007926  6F77               	movwf	(_dispStruct+5)& (0+255),b	;volatile
 33430  007928                     i2l2135:
 33431  007928  0012               	return		;funcret
 33432  00792A                     __end_of_refreshSegment:
 33433                           	callstack 0
 33434                           
 33435 ;; *************** function _Segments_Set *****************
 33436 ;; Defined at:
 33437 ;;		line 93 in file "outputs_MC50.c"
 33438 ;; Parameters:    Size  Location     Type
 33439 ;;  value           1    wreg     unsigned char 
 33440 ;; Auto vars:     Size  Location     Type
 33441 ;;  value           1    0[COMRAM] unsigned char 
 33442 ;; Return value:  Size  Location     Type
 33443 ;;                  1    wreg      void 
 33444 ;; Registers used:
 33445 ;;		wreg, status,2, status,0
 33446 ;; Tracked objects:
 33447 ;;		On entry : 3F/0
 33448 ;;		On exit  : 0/0
 33449 ;;		Unchanged: 0/0
 33450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33451 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33452 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33453 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33454 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33455 ;;Total ram usage:        1 bytes
 33456 ;; Hardware stack levels used: 1
 33457 ;; This function calls:
 33458 ;;		Nothing
 33459 ;; This function is called by:
 33460 ;;		_refreshSegment
 33461 ;; This function uses a non-reentrant model
 33462 ;;
 33463                           
 33464                           	psect	text186
 33465  009170                     __ptext186:
 33466                           	callstack 0
 33467  009170                     _Segments_Set:
 33468                           	callstack 14
 33469                           
 33470                           ;incstack = 0
 33471                           ;Segments_Set@value stored from wreg
 33472  009170  6E01               	movwf	Segments_Set@value^0,c
 33473                           
 33474                           ;outputs_MC50.c: 93: void Segments_Set(char value);outputs_MC50.c: 94: {;outputs_MC50.c:
      +                           95:    LATD &= 0x80;
 33475  009172  0E80               	movlw	128
 33476  009174  1686               	andwf	134,f,c	;volatile
 33477                           
 33478                           ;outputs_MC50.c: 96:    LATD |= value;
 33479  009176  5001               	movf	Segments_Set@value^0,w,c	;volatile
 33480  009178  1286               	iorwf	134,f,c	;volatile
 33481  00917A  0012               	return		;funcret
 33482  00917C                     __end_of_Segments_Set:
 33483                           	callstack 0
 33484                           
 33485 ;; *************** function _controlTimeslots *****************
 33486 ;; Defined at:
 33487 ;;		line 190 in file "main_MC50.c"
 33488 ;; Parameters:    Size  Location     Type
 33489 ;;		None
 33490 ;; Auto vars:     Size  Location     Type
 33491 ;;		None
 33492 ;; Return value:  Size  Location     Type
 33493 ;;                  1    wreg      void 
 33494 ;; Registers used:
 33495 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 33496 ;; Tracked objects:
 33497 ;;		On entry : 3F/1
 33498 ;;		On exit  : 3F/1
 33499 ;;		Unchanged: 0/0
 33500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33502 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33504 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33505 ;;Total ram usage:        0 bytes
 33506 ;; Hardware stack levels used: 1
 33507 ;; Hardware stack levels required when called: 1
 33508 ;; This function calls:
 33509 ;;		_decrementTimeslot
 33510 ;; This function is called by:
 33511 ;;		_TMR2_ISR
 33512 ;; This function uses a non-reentrant model
 33513 ;;
 33514                           
 33515                           	psect	text187
 33516  00581C                     __ptext187:
 33517                           	callstack 0
 33518  00581C                     _controlTimeslots:
 33519                           	callstack 14
 33520                           
 33521                           ; BSR set to: 1
 33522                           ;main_MC50.c: 192:  decrementTimeslot((int*)&ts_system.Debug_TS);
 33523                           
 33524                           ;incstack = 0
 33525  00581C  0EA2               	movlw	low (_ts_system+8)
 33526  00581E  6E01               	movwf	decrementTimeslot@ts^0,c
 33527  005820  0E01               	movlw	high (_ts_system+8)
 33528  005822  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33529  005824  ECB1  F046         	call	_decrementTimeslot	;wreg free
 33530                           
 33531                           ;main_MC50.c: 193:     decrementTimeslot((int*)&ts_system.timewaitFlashRGB);
 33532  005828  0EE0               	movlw	low (_ts_system+70)
 33533  00582A  6E01               	movwf	decrementTimeslot@ts^0,c
 33534  00582C  0E01               	movlw	high (_ts_system+70)
 33535  00582E  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33536  005830  ECB1  F046         	call	_decrementTimeslot	;wreg free
 33537                           
 33538                           ;main_MC50.c: 194:     decrementTimeslot((int*)&ts_system.timeFreqDigit);
 33539  005834  0EA4               	movlw	low (_ts_system+10)
 33540  005836  6E01               	movwf	decrementTimeslot@ts^0,c
 33541  005838  0E01               	movlw	high (_ts_system+10)
 33542  00583A  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33543  00583C  ECB1  F046         	call	_decrementTimeslot	;wreg free
 33544                           
 33545                           ;main_MC50.c: 195:     decrementTimeslot((int*)&ts_system.timeSinalizationDigit);
 33546  005840  0EA6               	movlw	low (_ts_system+12)
 33547  005842  6E01               	movwf	decrementTimeslot@ts^0,c
 33548  005844  0E01               	movlw	high (_ts_system+12)
 33549  005846  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33550  005848  ECB1  F046         	call	_decrementTimeslot	;wreg free
 33551                           
 33552                           ;main_MC50.c: 196:     decrementTimeslot((int*)&ts_system.timeoutMenu);
 33553  00584C  0EA8               	movlw	low (_ts_system+14)
 33554  00584E  6E01               	movwf	decrementTimeslot@ts^0,c
 33555  005850  0E01               	movlw	high (_ts_system+14)
 33556  005852  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33557  005854  ECB1  F046         	call	_decrementTimeslot	;wreg free
 33558                           
 33559                           ;main_MC50.c: 197:     decrementTimeslot((int*)&ts_system.timeOpenWalk);
 33560  005858  0EAA               	movlw	low (_ts_system+16)
 33561  00585A  6E01               	movwf	decrementTimeslot@ts^0,c
 33562  00585C  0E01               	movlw	high (_ts_system+16)
 33563  00585E  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33564  005860  ECB1  F046         	call	_decrementTimeslot	;wreg free
 33565                           
 33566                           ;main_MC50.c: 198:     decrementTimeslot((int*)&ts_system.timeWaitToClose);
 33567  005864  0EAC               	movlw	low (_ts_system+18)
 33568  005866  6E01               	movwf	decrementTimeslot@ts^0,c
 33569  005868  0E01               	movlw	high (_ts_system+18)
 33570  00586A  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33571  00586C  ECB1  F046         	call	_decrementTimeslot	;wreg free
 33572                           
 33573                           ;main_MC50.c: 199:     decrementTimeslot((int*)&ts_system.TimeLastCommand);
 33574  005870  0EAE               	movlw	low (_ts_system+20)
 33575  005872  6E01               	movwf	decrementTimeslot@ts^0,c
 33576  005874  0E01               	movlw	high (_ts_system+20)
 33577  005876  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33578  005878  ECB1  F046         	call	_decrementTimeslot	;wreg free
 33579                           
 33580                           ;main_MC50.c: 200:     decrementTimeslot((int*)&ts_system.timeSoftStart);
 33581  00587C  0EB0               	movlw	low (_ts_system+22)
 33582  00587E  6E01               	movwf	decrementTimeslot@ts^0,c
 33583  005880  0E01               	movlw	high (_ts_system+22)
 33584  005882  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33585  005884  ECB1  F046         	call	_decrementTimeslot	;wreg free
 33586                           
 33587                           ;main_MC50.c: 201:     decrementTimeslot((int*)&ts_system.TimeChargeCondesador);
 33588  005888  0EB4               	movlw	low (_ts_system+26)
 33589  00588A  6E01               	movwf	decrementTimeslot@ts^0,c
 33590  00588C  0E01               	movlw	high (_ts_system+26)
 33591  00588E  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33592  005890  ECB1  F046         	call	_decrementTimeslot	;wreg free
 33593                           
 33594                           ;main_MC50.c: 203:     decrementTimeslot((int*)&ts_system.timeFreqRGB);
 33595  005894  0EB6               	movlw	low (_ts_system+28)
 33596  005896  6E01               	movwf	decrementTimeslot@ts^0,c
 33597  005898  0E01               	movlw	high (_ts_system+28)
 33598  00589A  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33599  00589C  ECB1  F046         	call	_decrementTimeslot	;wreg free
 33600                           
 33601                           ;main_MC50.c: 204:     decrementTimeslot((int*)&ts_system.timeFreqFlashligth);
 33602  0058A0  0EB8               	movlw	low (_ts_system+30)
 33603  0058A2  6E01               	movwf	decrementTimeslot@ts^0,c
 33604  0058A4  0E01               	movlw	high (_ts_system+30)
 33605  0058A6  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33606  0058A8  ECB1  F046         	call	_decrementTimeslot	;wreg free
 33607                           
 33608                           ;main_MC50.c: 206:     decrementTimeslot((int*)&ts_system.TimeWaitToNextState);
 33609  0058AC  0EBE               	movlw	low (_ts_system+36)
 33610  0058AE  6E01               	movwf	decrementTimeslot@ts^0,c
 33611  0058B0  0E01               	movlw	high (_ts_system+36)
 33612  0058B2  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33613  0058B4  ECB1  F046         	call	_decrementTimeslot	;wreg free
 33614                           
 33615                           ;main_MC50.c: 208:     decrementTimeslot((int*)&ts_system.timeBetweenSaveCounters);
 33616  0058B8  0EC0               	movlw	low (_ts_system+38)
 33617  0058BA  6E01               	movwf	decrementTimeslot@ts^0,c
 33618  0058BC  0E01               	movlw	high (_ts_system+38)
 33619  0058BE  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33620  0058C0  ECB1  F046         	call	_decrementTimeslot	;wreg free
 33621                           
 33622                           ;main_MC50.c: 209:     decrementTimeslot((int*)&ts_system.TimeElectricBrake);
 33623  0058C4  0EC2               	movlw	low (_ts_system+40)
 33624  0058C6  6E01               	movwf	decrementTimeslot@ts^0,c
 33625  0058C8  0E01               	movlw	high (_ts_system+40)
 33626  0058CA  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33627  0058CC  ECB1  F046         	call	_decrementTimeslot	;wreg free
 33628                           
 33629                           ;main_MC50.c: 210:     decrementTimeslot((int*)&ts_system.TimeCurrentAlarm);
 33630  0058D0  0EC4               	movlw	low (_ts_system+42)
 33631  0058D2  6E01               	movwf	decrementTimeslot@ts^0,c
 33632  0058D4  0E01               	movlw	high (_ts_system+42)
 33633  0058D6  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33634  0058D8  ECB1  F046         	call	_decrementTimeslot	;wreg free
 33635                           
 33636                           ;main_MC50.c: 212:     decrementTimeslot((int*)&ts_system.TimeStopedBeforeDecelaration);
 33637  0058DC  0EC6               	movlw	low (_ts_system+44)
 33638  0058DE  6E01               	movwf	decrementTimeslot@ts^0,c
 33639  0058E0  0E01               	movlw	high (_ts_system+44)
 33640  0058E2  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33641  0058E4  ECB1  F046         	call	_decrementTimeslot	;wreg free
 33642                           
 33643                           ;main_MC50.c: 213:     decrementTimeslot((int*)&ts_system.TimeCurrentWaitForAlarm);
 33644  0058E8  0EC8               	movlw	low (_ts_system+46)
 33645  0058EA  6E01               	movwf	decrementTimeslot@ts^0,c
 33646  0058EC  0E01               	movlw	high (_ts_system+46)
 33647  0058EE  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33648  0058F0  ECB1  F046         	call	_decrementTimeslot	;wreg free
 33649                           
 33650                           ;main_MC50.c: 214:     decrementTimeslot((int*)&ts_system.TimeInversionStart);
 33651  0058F4  0ECA               	movlw	low (_ts_system+48)
 33652  0058F6  6E01               	movwf	decrementTimeslot@ts^0,c
 33653  0058F8  0E01               	movlw	high (_ts_system+48)
 33654  0058FA  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33655  0058FC  ECB1  F046         	call	_decrementTimeslot	;wreg free
 33656                           
 33657                           ;main_MC50.c: 215:     decrementTimeslot((int*)&ts_system.TimeReleCapacitor);
 33658  005900  0EDC               	movlw	low (_ts_system+66)
 33659  005902  6E01               	movwf	decrementTimeslot@ts^0,c
 33660  005904  0E01               	movlw	high (_ts_system+66)
 33661  005906  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33662  005908  ECB1  F046         	call	_decrementTimeslot	;wreg free
 33663                           
 33664                           ;main_MC50.c: 216:     decrementTimeslot((int*)&ts_system.TimeWaitReleCapacitor);
 33665  00590C  0EDE               	movlw	low (_ts_system+68)
 33666  00590E  6E01               	movwf	decrementTimeslot@ts^0,c
 33667  005910  0E01               	movlw	high (_ts_system+68)
 33668  005912  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33669  005914  ECB1  F046         	call	_decrementTimeslot	;wreg free
 33670                           
 33671                           ;main_MC50.c: 221:     if ( ( var_sys_NVM.electricBrake==0 ) || ( ts_system.TimeElectric
      +                          Brake<=0 ) )
 33672  005918  0100               	movlb	0	; () banked
 33673  00591A  51AF               	movf	(_var_sys_NVM+23)& (0+255),w,b	;volatile
 33674  00591C  B4D8               	btfsc	status,2,c
 33675  00591E  D008               	goto	i2u1464_40
 33676                           
 33677                           ; BSR set to: 0
 33678  005920  0101               	movlb	1	; () banked
 33679  005922  BFC3               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 33680  005924  D005               	goto	i2u1464_40
 33681  005926  51C3               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 33682  005928  E109               	bnz	i2l2019
 33683  00592A  05C2               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 33684  00592C  B0D8               	btfsc	status,0,c
 33685  00592E  D006               	goto	i2l2019
 33686  005930                     i2u1464_40:
 33687                           
 33688                           ;main_MC50.c: 222:     {;main_MC50.c: 225:         decrementTimeslot((int*)&ts_system.In
      +                          vertionTimeClosingFromOpen);
 33689  005930  0ECC               	movlw	low (_ts_system+50)
 33690  005932  6E01               	movwf	decrementTimeslot@ts^0,c
 33691  005934  0E01               	movlw	high (_ts_system+50)
 33692  005936  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33693  005938  ECB1  F046         	call	_decrementTimeslot	;wreg free
 33694  00593C                     i2l2019:
 33695                           
 33696                           ;main_MC50.c: 228:     decrementTimeslot((int*)&ts_system.TimeWaitToGetCurrent);
 33697  00593C  0ECE               	movlw	low (_ts_system+52)
 33698  00593E  6E01               	movwf	decrementTimeslot@ts^0,c
 33699  005940  0E01               	movlw	high (_ts_system+52)
 33700  005942  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33701  005944  ECB1  F046         	call	_decrementTimeslot	;wreg free
 33702                           
 33703                           ;main_MC50.c: 229:     decrementTimeslot((int*)&ts_system.TimeLearningDecelaration);
 33704  005948  0ED0               	movlw	low (_ts_system+54)
 33705  00594A  6E01               	movwf	decrementTimeslot@ts^0,c
 33706  00594C  0E01               	movlw	high (_ts_system+54)
 33707  00594E  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33708  005950  ECB1  F046         	call	_decrementTimeslot	;wreg free
 33709                           
 33710                           ;main_MC50.c: 230:     decrementTimeslot((int*)&ts_system.TimeTransitionDecelaration);
 33711  005954  0ED2               	movlw	low (_ts_system+56)
 33712  005956  6E01               	movwf	decrementTimeslot@ts^0,c
 33713  005958  0E01               	movlw	high (_ts_system+56)
 33714  00595A  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33715  00595C  ECB1  F046         	call	_decrementTimeslot	;wreg free
 33716                           
 33717                           ;main_MC50.c: 232:     decrementTimeslot((int*)&ts_system.timewaitBeforeSoftStart);
 33718  005960  0ED4               	movlw	low (_ts_system+58)
 33719  005962  6E01               	movwf	decrementTimeslot@ts^0,c
 33720  005964  0E01               	movlw	high (_ts_system+58)
 33721  005966  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33722  005968  ECB1  F046         	call	_decrementTimeslot	;wreg free
 33723                           
 33724                           ;main_MC50.c: 233:     decrementTimeslot((int*)&ts_system.TimeShowVersion);
 33725  00596C  0ED6               	movlw	low (_ts_system+60)
 33726  00596E  6E01               	movwf	decrementTimeslot@ts^0,c
 33727  005970  0E01               	movlw	high (_ts_system+60)
 33728  005972  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33729  005974  ECB1  F046         	call	_decrementTimeslot	;wreg free
 33730                           
 33731                           ;main_MC50.c: 235:     decrementTimeslot((int*)&ts_system.TimeStopADCZeroOffsetCalc);
 33732  005978  0ED8               	movlw	low (_ts_system+62)
 33733  00597A  6E01               	movwf	decrementTimeslot@ts^0,c
 33734  00597C  0E01               	movlw	high (_ts_system+62)
 33735  00597E  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33736  005980  ECB1  F046         	call	_decrementTimeslot	;wreg free
 33737                           
 33738                           ;main_MC50.c: 237:     decrementTimeslot((int*)&ts_system.TimeStopElectricBrake);
 33739  005984  0EDA               	movlw	low (_ts_system+64)
 33740  005986  6E01               	movwf	decrementTimeslot@ts^0,c
 33741  005988  0E01               	movlw	high (_ts_system+64)
 33742  00598A  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33743  00598C  ECB1  F046         	call	_decrementTimeslot	;wreg free
 33744                           
 33745                           ;main_MC50.c: 240:     if (ts_system.TimeOnFlashLigth>0)
 33746  005990  0101               	movlb	1	; () banked
 33747  005992  BFBD               	btfsc	(_ts_system+35)& (0+255),7,b	;volatile
 33748  005994  0012               	return	
 33749  005996  51BD               	movf	(_ts_system+35)& (0+255),w,b	;volatile
 33750  005998  11BC               	iorwf	(_ts_system+34)& (0+255),w,b	;volatile
 33751  00599A  11BB               	iorwf	(_ts_system+33)& (0+255),w,b	;volatile
 33752  00599C  E103               	bnz	i2u1465_40
 33753  00599E  05BA               	decf	(_ts_system+32)& (0+255),w,b	;volatile
 33754  0059A0  A0D8               	btfss	status,0,c
 33755  0059A2  0012               	return	
 33756  0059A4                     i2u1465_40:
 33757                           
 33758                           ; BSR set to: 1
 33759                           ;main_MC50.c: 241:     {;main_MC50.c: 242:         ts_system.TimeOnFlashLigth--;
 33760  0059A4  0EFF               	movlw	255
 33761  0059A6  27BA               	addwf	(_ts_system+32)& (0+255),f,b	;volatile
 33762  0059A8  0EFF               	movlw	255
 33763  0059AA  23BB               	addwfc	(_ts_system+33)& (0+255),f,b	;volatile
 33764  0059AC  0EFF               	movlw	255
 33765  0059AE  23BC               	addwfc	(_ts_system+34)& (0+255),f,b	;volatile
 33766  0059B0  0EFF               	movlw	255
 33767  0059B2  23BD               	addwfc	(_ts_system+35)& (0+255),f,b	;volatile
 33768                           
 33769                           ; BSR set to: 1
 33770  0059B4  0012               	return		;funcret
 33771  0059B6                     __end_of_controlTimeslots:
 33772                           	callstack 0
 33773                           
 33774 ;; *************** function _decrementTimeslot *****************
 33775 ;; Defined at:
 33776 ;;		line 246 in file "main_MC50.c"
 33777 ;; Parameters:    Size  Location     Type
 33778 ;;  ts              2    0[COMRAM] PTR int 
 33779 ;;		 -> ts_system.TimeShowVersion(2), ts_system.TimeLearningDecelaration(2), ts_system.TimeWaitToGetCurrent(2), ts_syste
      +m.InvertionTimeClosingFromOpen(2), 
 33780 ;;		 -> ts_system.TimeWaitReleCapacitor(2), ts_system.TimeInversionStart(2), ts_system.TimeStopedBeforeDecelaration(2), 
      +ts_system.TimeWaitToNextState(2), 
 33781 ;;		 -> ts_system.timeFreqFlashligth(2), ts_system.timeFreqRGB(2), ts_system.timeWaitToClose(2), ts_system.timeOpenWalk(
      +2), 
 33782 ;;		 -> ts_system.timeoutMenu(2), ts_system.timeFreqDigit(2), ts_system.timewaitFlashRGB(2), ts_system.TimeStopElectricB
      +rake(2), 
 33783 ;;		 -> ts_system.Debug_TS(2), ts_system.timeSinalizationDigit(2), ts_system.TimeLastCommand(2), ts_system.timeBetweenSa
      +veCounters(2), 
 33784 ;;		 -> ts_system.TimeCurrentAlarm(2), ts_system.TimeCurrentWaitForAlarm(2), ts_system.TimeReleCapacitor(2), ts_system.T
      +imeChargeCondesador(2), 
 33785 ;;		 -> ts_system.TimeTransitionDecelaration(2), ts_system.timewaitBeforeSoftStart(2), ts_system.timeSoftStart(2), ts_sy
      +stem.TimeElectricBrake(2), 
 33786 ;;		 -> ts_system.TimeStopADCZeroOffsetCalc(2), ts_system(72), 
 33787 ;; Auto vars:     Size  Location     Type
 33788 ;;		None
 33789 ;; Return value:  Size  Location     Type
 33790 ;;                  1    wreg      void 
 33791 ;; Registers used:
 33792 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 33793 ;; Tracked objects:
 33794 ;;		On entry : 0/1
 33795 ;;		On exit  : 0/0
 33796 ;;		Unchanged: 0/0
 33797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33798 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33799 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33800 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33801 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33802 ;;Total ram usage:        4 bytes
 33803 ;; Hardware stack levels used: 1
 33804 ;; This function calls:
 33805 ;;		Nothing
 33806 ;; This function is called by:
 33807 ;;		_controlTimeslots
 33808 ;; This function uses a non-reentrant model
 33809 ;;
 33810                           
 33811                           	psect	text188
 33812  008D62                     __ptext188:
 33813                           	callstack 0
 33814  008D62                     _decrementTimeslot:
 33815                           	callstack 14
 33816                           
 33817                           ;main_MC50.c: 246: void decrementTimeslot(int * ts);main_MC50.c: 247: {;main_MC50.c: 248
      +                          :     if (ts[0]>0)
 33818                           
 33819                           ; BSR set to: 1
 33820                           ;incstack = 0
 33821  008D62  C001  FFD9         	movff	decrementTimeslot@ts,fsr2l
 33822  008D66  C002  FFDA         	movff	decrementTimeslot@ts+1,fsr2h
 33823  008D6A  0E01               	movlw	1
 33824  008D6C  BEDB               	btfsc	plusw2,7,c
 33825  008D6E  0012               	return	
 33826  008D70  0E01               	movlw	1
 33827  008D72  50DB               	movf	plusw2,w,c
 33828  008D74  E103               	bnz	i2u1303_40
 33829  008D76  04DE               	decf	postinc2,w,c
 33830  008D78  A0D8               	btfss	status,0,c
 33831  008D7A  0012               	return	
 33832  008D7C                     i2u1303_40:
 33833                           
 33834                           ;main_MC50.c: 249:     {;main_MC50.c: 250:         ts[0]--;
 33835  008D7C  C001  FFD9         	movff	decrementTimeslot@ts,fsr2l
 33836  008D80  C002  FFDA         	movff	decrementTimeslot@ts+1,fsr2h
 33837  008D84  06DE               	decf	postinc2,f,c
 33838  008D86  0E00               	movlw	0
 33839  008D88  5ADD               	subwfb	postdec2,f,c
 33840  008D8A  0012               	return		;funcret
 33841  008D8C                     __end_of_decrementTimeslot:
 33842                           	callstack 0
 33843                           
 33844 ;; *************** function _TMR2_DefaultInterruptHandler *****************
 33845 ;; Defined at:
 33846 ;;		line 346 in file "mcc_generated_files/tmr2.c"
 33847 ;; Parameters:    Size  Location     Type
 33848 ;;		None
 33849 ;; Auto vars:     Size  Location     Type
 33850 ;;		None
 33851 ;; Return value:  Size  Location     Type
 33852 ;;                  1    wreg      void 
 33853 ;; Registers used:
 33854 ;;		None
 33855 ;; Tracked objects:
 33856 ;;		On entry : 3F/2
 33857 ;;		On exit  : 3F/2
 33858 ;;		Unchanged: 3F/0
 33859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33860 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33861 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33863 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33864 ;;Total ram usage:        0 bytes
 33865 ;; Hardware stack levels used: 1
 33866 ;; This function calls:
 33867 ;;		Nothing
 33868 ;; This function is called by:
 33869 ;;		_TMR2_Initialize
 33870 ;;		_TMR2_ISR
 33871 ;; This function uses a non-reentrant model
 33872 ;;
 33873                           
 33874                           	psect	text189
 33875  0092AA                     __ptext189:
 33876                           	callstack 0
 33877  0092AA                     _TMR2_DefaultInterruptHandler:
 33878                           	callstack 15
 33879                           
 33880                           ; BSR set to: 2
 33881                           
 33882                           ;incstack = 0
 33883  0092AA  0012               	return		;funcret
 33884  0092AC                     __end_of_TMR2_DefaultInterruptHandler:
 33885                           	callstack 0
 33886                           
 33887 ;; *************** function _ReadADC *****************
 33888 ;; Defined at:
 33889 ;;		line 38 in file "controlCurrent_MC50.c"
 33890 ;; Parameters:    Size  Location     Type
 33891 ;;		None
 33892 ;; Auto vars:     Size  Location     Type
 33893 ;;		None
 33894 ;; Return value:  Size  Location     Type
 33895 ;;                  1    wreg      void 
 33896 ;; Registers used:
 33897 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33898 ;; Tracked objects:
 33899 ;;		On entry : 3F/E
 33900 ;;		On exit  : 31/0
 33901 ;;		Unchanged: 0/0
 33902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33903 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33904 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33905 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33906 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33907 ;;Total ram usage:        3 bytes
 33908 ;; Hardware stack levels used: 1
 33909 ;; Hardware stack levels required when called: 1
 33910 ;; This function calls:
 33911 ;;		_ADCC_GetSingleConversion
 33912 ;; This function is called by:
 33913 ;;		_TMR2_ISR
 33914 ;; This function uses a non-reentrant model
 33915 ;;
 33916                           
 33917                           	psect	text190
 33918  0084AA                     __ptext190:
 33919                           	callstack 0
 33920  0084AA                     _ReadADC:
 33921                           	callstack 14
 33922                           
 33923                           ; BSR set to: 14
 33924                           ;controlCurrent_MC50.c: 40:      if (!ADCON0bits.GO_nDONE)
 33925                           
 33926                           ; BSR set to: 2
 33927                           ;incstack = 0
 33928  0084AA  B060               	btfsc	96,0,c	;volatile
 33929  0084AC  0012               	return	
 33930                           
 33931                           ; BSR set to: 14
 33932                           ;controlCurrent_MC50.c: 41:      {;controlCurrent_MC50.c: 42:         if ( idxAdcAquisit
      +                          ion >= 30 )
 33933  0084AE  0E1D               	movlw	29
 33934  0084B0  0100               	movlb	0	; () banked
 33935  0084B2  6591               	cpfsgt	_idxAdcAquisition& (0+255),b	;volatile
 33936  0084B4  D002               	goto	i2l14328
 33937                           
 33938                           ; BSR set to: 0
 33939                           ;controlCurrent_MC50.c: 43:         {;controlCurrent_MC50.c: 44:             idxAdcAquis
      +                          ition=0;
 33940  0084B6  0E00               	movlw	0
 33941  0084B8  6F91               	movwf	_idxAdcAquisition& (0+255),b	;volatile
 33942  0084BA                     i2l14328:
 33943                           
 33944                           ; BSR set to: 0
 33945                           ;controlCurrent_MC50.c: 47:         ADC_array[idxAdcAquisition] = ((unsigned int)((ADRES
      +                          H << 8) + ADRESL)>>6);
 33946  0084BA  5063               	movf	99,w,c	;volatile
 33947  0084BC  CF64 F002          	movff	3940,??_ReadADC	;volatile
 33948  0084C0  6A03               	clrf	(??_ReadADC+1)^0,c
 33949  0084C2  C002  F003         	movff	??_ReadADC,??_ReadADC+1
 33950  0084C6  6A02               	clrf	??_ReadADC^0,c
 33951  0084C8  2602               	addwf	??_ReadADC^0,f,c
 33952  0084CA  0E00               	movlw	0
 33953  0084CC  2203               	addwfc	(??_ReadADC+1)^0,f,c
 33954  0084CE  0E06               	movlw	6
 33955  0084D0  6E04               	movwf	(??_ReadADC+2)^0,c
 33956  0084D2                     i2u1456_45:
 33957  0084D2  90D8               	bcf	status,0,c
 33958  0084D4  3203               	rrcf	(??_ReadADC+1)^0,f,c
 33959  0084D6  3202               	rrcf	??_ReadADC^0,f,c
 33960  0084D8  2E04               	decfsz	(??_ReadADC+2)^0,f,c
 33961  0084DA  D7FB               	goto	i2u1456_45
 33962  0084DC  5191               	movf	_idxAdcAquisition& (0+255),w,b	;volatile
 33963  0084DE  0D02               	mullw	2
 33964  0084E0  0E00               	movlw	low _ADC_array
 33965  0084E2  24F3               	addwf	243,w,c
 33966  0084E4  6ED9               	movwf	fsr2l,c
 33967  0084E6  0E02               	movlw	high _ADC_array
 33968  0084E8  20F4               	addwfc	prodh,w,c
 33969  0084EA  6EDA               	movwf	fsr2h,c
 33970  0084EC  C002  FFDE         	movff	??_ReadADC,postinc2
 33971  0084F0  C003  FFDD         	movff	??_ReadADC+1,postdec2
 33972                           
 33973                           ; BSR set to: 0
 33974                           ;controlCurrent_MC50.c: 48:         ADCC_GetSingleConversion(0x00);
 33975  0084F4  0E00               	movlw	0
 33976  0084F6  EC5B  F048         	call	_ADCC_GetSingleConversion
 33977                           
 33978                           ;controlCurrent_MC50.c: 49:         idxAdcAquisition++;
 33979  0084FA  0100               	movlb	0	; () banked
 33980  0084FC  2B91               	incf	_idxAdcAquisition& (0+255),f,b	;volatile
 33981  0084FE  0012               	return		;funcret
 33982  008500                     __end_of_ReadADC:
 33983                           	callstack 0
 33984                           
 33985 ;; *************** function _ADCC_GetSingleConversion *****************
 33986 ;; Defined at:
 33987 ;;		line 131 in file "mcc_generated_files/adcc.c"
 33988 ;; Parameters:    Size  Location     Type
 33989 ;;  channel         1    wreg     enum E10053
 33990 ;; Auto vars:     Size  Location     Type
 33991 ;;  channel         1    0[COMRAM] enum E10053
 33992 ;; Return value:  Size  Location     Type
 33993 ;;                  2  433[None  ] int 
 33994 ;; Registers used:
 33995 ;;		wreg, status,2, cstack
 33996 ;; Tracked objects:
 33997 ;;		On entry : 3F/0
 33998 ;;		On exit  : 0/0
 33999 ;;		Unchanged: 0/0
 34000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34001 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34002 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34004 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34005 ;;Total ram usage:        1 bytes
 34006 ;; Hardware stack levels used: 1
 34007 ;; This function calls:
 34008 ;;		Nothing
 34009 ;; This function is called by:
 34010 ;;		_ReadADC
 34011 ;; This function uses a non-reentrant model
 34012 ;;
 34013                           
 34014                           	psect	text191
 34015  0090B6                     __ptext191:
 34016                           	callstack 0
 34017  0090B6                     _ADCC_GetSingleConversion:
 34018                           	callstack 14
 34019                           
 34020                           ;incstack = 0
 34021                           ;ADCC_GetSingleConversion@channel stored from wreg
 34022  0090B6  6E01               	movwf	ADCC_GetSingleConversion@channel^0,c
 34023                           
 34024                           ;mcc_generated_files/adcc.c: 131: ADCC_GetSingleConversion(adcc_channel_t channel);mcc_g
      +                          enerated_files/adcc.c: 132: {;mcc_generated_files/adcc.c: 134:     ADPCH = channel;
 34025  0090B8  C001  FF5F         	movff	ADCC_GetSingleConversion@channel,3935	;volatile
 34026                           
 34027                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADON = 1;
 34028  0090BC  8E60               	bsf	96,7,c	;volatile
 34029                           
 34030                           ;mcc_generated_files/adcc.c: 139:       _delay((unsigned long)((5)*(64000000/4000000.0))
      +                          );
 34031  0090BE  0E1A               	movlw	26
 34032  0090C0                     i2u2885_47:
 34033  0090C0  2EE8               	decfsz	wreg,f,c
 34034  0090C2  D7FE               	bra	i2u2885_47
 34035  0090C4  D000               	nop2	
 34036                           
 34037                           ;mcc_generated_files/adcc.c: 142:     ADCON0bits.ADCONT = 0;
 34038  0090C6  9C60               	bcf	96,6,c	;volatile
 34039                           
 34040                           ;mcc_generated_files/adcc.c: 145:     ADCON0bits.ADGO = 1;
 34041  0090C8  8060               	bsf	96,0,c	;volatile
 34042  0090CA  0012               	return		;funcret
 34043  0090CC                     __end_of_ADCC_GetSingleConversion:
 34044                           	callstack 0
 34045                           
 34046 ;; *************** function _TMR1_ISR *****************
 34047 ;; Defined at:
 34048 ;;		line 166 in file "mcc_generated_files/tmr1.c"
 34049 ;; Parameters:    Size  Location     Type
 34050 ;;		None
 34051 ;; Auto vars:     Size  Location     Type
 34052 ;;		None
 34053 ;; Return value:  Size  Location     Type
 34054 ;;                  1    wreg      void 
 34055 ;; Registers used:
 34056 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 34057 ;; Tracked objects:
 34058 ;;		On entry : 3F/E
 34059 ;;		On exit  : 0/0
 34060 ;;		Unchanged: 0/0
 34061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34062 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34063 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34065 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34066 ;;Total ram usage:        0 bytes
 34067 ;; Hardware stack levels used: 1
 34068 ;; Hardware stack levels required when called: 2
 34069 ;; This function calls:
 34070 ;;		Absolute function
 34071 ;;		_TMR1_DefaultInterruptHandler
 34072 ;;		_TMR1_WriteTimer
 34073 ;;		_controlMotorForce
 34074 ;; This function is called by:
 34075 ;;		_INTERRUPT_InterruptManager
 34076 ;; This function uses a non-reentrant model
 34077 ;;
 34078                           
 34079                           	psect	text192
 34080  008944                     __ptext192:
 34081                           	callstack 0
 34082  008944                     _TMR1_ISR:
 34083                           	callstack 14
 34084                           
 34085                           ; BSR set to: 14
 34086                           ;mcc_generated_files/tmr1.c: 170:     PIR4bits.TMR1IF = 0;
 34087                           
 34088                           ;incstack = 0
 34089  008944  91CE               	bcf	206,0,b	;volatile
 34090                           
 34091                           ; BSR set to: 14
 34092                           ;mcc_generated_files/tmr1.c: 172:             controlMotorForce();
 34093  008946  ECBF  F024         	call	_controlMotorForce	;wreg free
 34094                           
 34095                           ;mcc_generated_files/tmr1.c: 173:             if(ts_system.ts_TimeSlotTRIAC>0)
 34096  00894A  0101               	movlb	1	; () banked
 34097  00894C  519F               	movf	(_ts_system+5)& (0+255),w,b	;volatile
 34098  00894E  A4D8               	btfss	status,2,c
 34099                           
 34100                           ; BSR set to: 1
 34101                           ;mcc_generated_files/tmr1.c: 174:             {;mcc_generated_files/tmr1.c: 176:        
      +                                   ts_system.ts_TimeSlotTRIAC--;
 34102  008950  079F               	decf	(_ts_system+5)& (0+255),f,b	;volatile
 34103                           
 34104                           ; BSR set to: 1
 34105                           ;mcc_generated_files/tmr1.c: 178:             if (ts_system.ts_TimeSlot1ms > 0 )
 34106  008952  519C               	movf	(_ts_system+2)& (0+255),w,b	;volatile
 34107  008954  A4D8               	btfss	status,2,c
 34108                           
 34109                           ; BSR set to: 1
 34110                           ;mcc_generated_files/tmr1.c: 179:             {;mcc_generated_files/tmr1.c: 180:        
      +                               ts_system.ts_TimeSlot1ms--;
 34111  008956  079C               	decf	(_ts_system+2)& (0+255),f,b	;volatile
 34112                           
 34113                           ; BSR set to: 1
 34114                           ;mcc_generated_files/tmr1.c: 183:     TMR1_WriteTimer(timer1ReloadVal);
 34115  008958  C2E1  F001         	movff	_timer1ReloadVal,TMR1_WriteTimer@timerVal	;volatile
 34116  00895C  C2E2  F002         	movff	_timer1ReloadVal+1,TMR1_WriteTimer@timerVal+1	;volatile
 34117  008960  ECB9  F047         	call	_TMR1_WriteTimer	;wreg free
 34118                           
 34119                           ; BSR set to: 1
 34120                           ;mcc_generated_files/tmr1.c: 185:     if(TMR1_InterruptHandler)
 34121  008964  0102               	movlb	2	; () banked
 34122  008966  51DF               	movf	_TMR1_InterruptHandler& (0+255),w,b
 34123  008968  11E0               	iorwf	(_TMR1_InterruptHandler+1)& (0+255),w,b
 34124  00896A  B4D8               	btfsc	status,2,c
 34125  00896C  0012               	return	
 34126                           
 34127                           ; BSR set to: 2
 34128                           ;mcc_generated_files/tmr1.c: 186:     {;mcc_generated_files/tmr1.c: 187:         TMR1_In
      +                          terruptHandler();
 34129  00896E  D801               	call	i2u1832_48
 34130  008970  0012               	return	
 34131  008972                     i2u1832_48:
 34132  008972  0005               	push	
 34133  008974  6EFA               	movwf	pclath,c
 34134  008976  51DF               	movf	_TMR1_InterruptHandler& (0+255),w,b
 34135  008978  6EFD               	movwf	tosl,c
 34136  00897A  51E0               	movf	(_TMR1_InterruptHandler+1)& (0+255),w,b
 34137  00897C  6EFE               	movwf	tosh,c
 34138  00897E  6AFF               	clrf	tosu,c
 34139  008980  50FA               	movf	pclath,w,c
 34140  008982  0012               	return		;indir
 34141  008984                     __end_of_TMR1_ISR:
 34142                           	callstack 0
 34143                           
 34144 ;; *************** function _controlMotorForce *****************
 34145 ;; Defined at:
 34146 ;;		line 213 in file "outputs_MC50.c"
 34147 ;; Parameters:    Size  Location     Type
 34148 ;;		None
 34149 ;; Auto vars:     Size  Location     Type
 34150 ;;		None
 34151 ;; Return value:  Size  Location     Type
 34152 ;;                  1    wreg      void 
 34153 ;; Registers used:
 34154 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 34155 ;; Tracked objects:
 34156 ;;		On entry : 3F/E
 34157 ;;		On exit  : 3E/0
 34158 ;;		Unchanged: 0/0
 34159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34161 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34162 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34163 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34164 ;;Total ram usage:        5 bytes
 34165 ;; Hardware stack levels used: 1
 34166 ;; Hardware stack levels required when called: 1
 34167 ;; This function calls:
 34168 ;;		i2_GetMotorPower
 34169 ;;		i2_VerifyElectricalBrake
 34170 ;; This function is called by:
 34171 ;;		_TMR1_ISR
 34172 ;; This function uses a non-reentrant model
 34173 ;;
 34174                           
 34175                           	psect	text193
 34176  00497E                     __ptext193:
 34177                           	callstack 0
 34178  00497E                     _controlMotorForce:
 34179                           	callstack 14
 34180                           
 34181                           ; BSR set to: 14
 34182                           ;outputs_MC50.c: 217:     difTime=GetMotorPower();
 34183                           
 34184                           ;incstack = 0
 34185  00497E  ECFE  F037         	call	i2_GetMotorPower	;wreg free
 34186  004982  6F8F               	movwf	_difTime& (0+255),b
 34187                           
 34188                           ; BSR set to: 1
 34189                           ;outputs_MC50.c: 218:     if(powerControl_st.decelarationActive==YES)
 34190  004984  057B               	decf	_powerControl_st& (0+255),w,b
 34191  004986  A4D8               	btfss	status,2,c
 34192  004988  D00F               	goto	i2l2186
 34193                           
 34194                           ; BSR set to: 1
 34195                           ;outputs_MC50.c: 219:     {;outputs_MC50.c: 220:         if(ts_system.TimeStopedBeforeDe
      +                          celaration>0)
 34196  00498A  BFC7               	btfsc	(_ts_system+45)& (0+255),7,b	;volatile
 34197  00498C  D008               	goto	i2l14216
 34198  00498E  51C7               	movf	(_ts_system+45)& (0+255),w,b	;volatile
 34199  004990  E103               	bnz	i2u1416_40
 34200  004992  05C6               	decf	(_ts_system+44)& (0+255),w,b	;volatile
 34201  004994  A0D8               	btfss	status,0,c
 34202  004996  D003               	goto	i2l14216
 34203  004998                     i2u1416_40:
 34204                           
 34205                           ; BSR set to: 1
 34206                           ;outputs_MC50.c: 221:         {;outputs_MC50.c: 222:             StateTRIAC=0;
 34207  004998  0E00               	movlw	0
 34208  00499A  6F90               	movwf	_StateTRIAC& (0+255),b
 34209                           
 34210                           ;outputs_MC50.c: 223:         }
 34211  00499C  D005               	goto	i2l2186
 34212  00499E                     i2l14216:
 34213                           
 34214                           ; BSR set to: 1
 34215  00499E  517D               	movf	(_powerControl_st+2)& (0+255),w,b
 34216  0049A0  5D7F               	subwf	(_powerControl_st+4)& (0+255),w,b
 34217  0049A2  A0D8               	btfss	status,0,c
 34218                           
 34219                           ; BSR set to: 1
 34220                           ;outputs_MC50.c: 225:         {;outputs_MC50.c: 227:             difTime=powerControl_st
      +                          .decelarationPower;
 34221  0049A4  C17E  F18F         	movff	_powerControl_st+3,_difTime
 34222  0049A8                     i2l2186:
 34223                           
 34224                           ; BSR set to: 1
 34225                           ;outputs_MC50.c: 242:     if(PORTAbits.RA3==1 && zeroCrossing==0)
 34226  0049A8  A68D               	btfss	141,3,c	;volatile
 34227  0049AA  D071               	goto	i2l2190
 34228                           
 34229                           ; BSR set to: 1
 34230  0049AC  5192               	movf	_zeroCrossing& (0+255),w,b
 34231  0049AE  A4D8               	btfss	status,2,c
 34232  0049B0  D06E               	goto	i2l2190
 34233                           
 34234                           ; BSR set to: 1
 34235                           ;outputs_MC50.c: 243:     {;outputs_MC50.c: 257:         if ( waitZeroPeak == 0 )
 34236  0049B2  5191               	movf	_waitZeroPeak& (0+255),w,b
 34237  0049B4  A4D8               	btfss	status,2,c
 34238  0049B6  D016               	goto	i2l14232
 34239                           
 34240                           ; BSR set to: 1
 34241                           ;outputs_MC50.c: 258:         {;outputs_MC50.c: 260:             zeroCrossingWaitTime[ze
      +                          roCrossingWaitTimeIdx] = (zeroCrossingLength>>1);
 34242  0049B8  0EEF               	movlw	low _zeroCrossingWaitTime
 34243  0049BA  0100               	movlb	0	; () banked
 34244  0049BC  2584               	addwf	_zeroCrossingWaitTimeIdx& (0+255),w,b
 34245  0049BE  6ED9               	movwf	fsr2l,c
 34246  0049C0  6ADA               	clrf	fsr2h,c
 34247  0049C2  0E02               	movlw	high _zeroCrossingWaitTime
 34248  0049C4  22DA               	addwfc	fsr2h,f,c
 34249  0049C6  0101               	movlb	1	; () banked
 34250  0049C8  90D8               	bcf	status,0,c
 34251  0049CA  3193               	rrcf	_zeroCrossingLength& (0+255),w,b
 34252  0049CC  6EDF               	movwf	indf2,c
 34253                           
 34254                           ; BSR set to: 1
 34255                           ;outputs_MC50.c: 261:             if ( zeroCrossingWaitTimeIdx == 0 )
 34256  0049CE  0100               	movlb	0	; () banked
 34257  0049D0  5184               	movf	_zeroCrossingWaitTimeIdx& (0+255),w,b
 34258  0049D2  A4D8               	btfss	status,2,c
 34259  0049D4  D002               	goto	i2l14230
 34260                           
 34261                           ; BSR set to: 0
 34262                           ;outputs_MC50.c: 262:             {;outputs_MC50.c: 263:                 zeroCrossingWai
      +                          tTimeIdx = 1;
 34263  0049D6  0E01               	movlw	1
 34264  0049D8  D001               	goto	L116
 34265  0049DA                     i2l14230:
 34266                           
 34267                           ; BSR set to: 0
 34268                           ;outputs_MC50.c: 266:             {;outputs_MC50.c: 267:                 zeroCrossingWai
      +                          tTimeIdx = 0;
 34269  0049DA  0E00               	movlw	0
 34270  0049DC                     L116:
 34271  0049DC  6F84               	movwf	_zeroCrossingWaitTimeIdx& (0+255),b
 34272                           
 34273                           ; BSR set to: 0
 34274                           ;outputs_MC50.c: 270:             zeroCrossingLength = 0;
 34275                           
 34276                           ;outputs_MC50.c: 268:             }
 34277  0049DE  0E00               	movlw	0
 34278  0049E0  0101               	movlb	1	; () banked
 34279  0049E2  6F93               	movwf	_zeroCrossingLength& (0+255),b
 34280  0049E4                     i2l14232:
 34281                           
 34282                           ; BSR set to: 1
 34283                           ;outputs_MC50.c: 273:         if ( (difTime<=80) || (ts_system.TimeElectricBrake>0) )
 34284  0049E4  0E50               	movlw	80
 34285  0049E6  658F               	cpfsgt	_difTime& (0+255),b
 34286  0049E8  D007               	goto	i2u1423_40
 34287                           
 34288                           ; BSR set to: 1
 34289  0049EA  BFC3               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 34290  0049EC  D008               	goto	i2l14238
 34291  0049EE  51C3               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 34292  0049F0  E103               	bnz	i2u1423_40
 34293  0049F2  05C2               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 34294  0049F4  A0D8               	btfss	status,0,c
 34295  0049F6  D003               	goto	i2l14238
 34296  0049F8                     i2u1423_40:
 34297                           
 34298                           ; BSR set to: 1
 34299                           
 34300                           ;outputs_MC50.c: 274:         {;outputs_MC50.c: 275:             do { LATDbits.LATD7 = 0
      +                          ; } while(0);
 34301  0049F8  9E86               	bcf	134,7,c	;volatile
 34302                           
 34303                           ; BSR set to: 1
 34304                           ;outputs_MC50.c: 276:             var_sys.TriacON=NO;
 34305  0049FA  0E00               	movlw	0
 34306  0049FC  6F0C               	movwf	(_var_sys+12)& (0+255),b	;volatile
 34307  0049FE                     i2l14238:
 34308                           
 34309                           ; BSR set to: 1
 34310                           ;outputs_MC50.c: 280:         waitZeroPeak++;
 34311  0049FE  2B91               	incf	_waitZeroPeak& (0+255),f,b
 34312                           
 34313                           ; BSR set to: 1
 34314                           ;outputs_MC50.c: 282:         if ( waitZeroPeak > zeroCrossingWaitTime[zeroCrossingWaitT
      +                          imeIdx] )
 34315  004A00  0EEF               	movlw	low _zeroCrossingWaitTime
 34316  004A02  0100               	movlb	0	; () banked
 34317  004A04  2584               	addwf	_zeroCrossingWaitTimeIdx& (0+255),w,b
 34318  004A06  6ED9               	movwf	fsr2l,c
 34319  004A08  6ADA               	clrf	fsr2h,c
 34320  004A0A  0E02               	movlw	high _zeroCrossingWaitTime
 34321  004A0C  22DA               	addwfc	fsr2h,f,c
 34322  004A0E  0101               	movlb	1	; () banked
 34323  004A10  5191               	movf	_waitZeroPeak& (0+255),w,b
 34324  004A12  5CDE               	subwf	postinc2,w,c
 34325  004A14  B0D8               	btfsc	status,0,c
 34326  004A16  D044               	goto	i2l14268
 34327                           
 34328                           ; BSR set to: 1
 34329                           ;outputs_MC50.c: 284:         {;outputs_MC50.c: 286:             if ((var_sys.Control50o
      +                          r60hz >= 90)&&(var_sys.Control50or60hz <= 105)){
 34330  004A18  0E59               	movlw	89
 34331  004A1A  654D               	cpfsgt	(_var_sys+77)& (0+255),b	;volatile
 34332  004A1C  D005               	goto	i2l14248
 34333                           
 34334                           ; BSR set to: 1
 34335  004A1E  0E6A               	movlw	106
 34336  004A20  614D               	cpfslt	(_var_sys+77)& (0+255),b	;volatile
 34337  004A22  D002               	goto	i2l14248
 34338                           
 34339                           ; BSR set to: 1
 34340                           ;outputs_MC50.c: 287:                 var_sys.Torquerelanty = 1;
 34341  004A24  0E01               	movlw	1
 34342  004A26  D001               	goto	L117
 34343  004A28                     i2l14248:
 34344                           
 34345                           ; BSR set to: 1
 34346                           ;outputs_MC50.c: 290:             {;outputs_MC50.c: 291:                var_sys.Torquere
      +                          lanty = 0;
 34347  004A28  0E00               	movlw	0
 34348  004A2A                     L117:
 34349  004A2A  6F15               	movwf	(_var_sys+21)& (0+255),b	;volatile
 34350                           
 34351                           ; BSR set to: 1
 34352                           ;outputs_MC50.c: 294:             ts_system.ts_TimeSlotTRIAC=80;
 34353                           
 34354                           ;outputs_MC50.c: 292:             }
 34355  004A2C  0E50               	movlw	80
 34356  004A2E  6F9F               	movwf	(_ts_system+5)& (0+255),b	;volatile
 34357                           
 34358                           ;outputs_MC50.c: 295:             var_sys.Control50or60hz = 0;
 34359  004A30  0E00               	movlw	0
 34360  004A32  6F4D               	movwf	(_var_sys+77)& (0+255),b	;volatile
 34361                           
 34362                           ;outputs_MC50.c: 296:             StateTRIAC=1;
 34363  004A34  0E01               	movlw	1
 34364  004A36  6F90               	movwf	_StateTRIAC& (0+255),b
 34365                           
 34366                           ;outputs_MC50.c: 297:             zeroCrossing=1;
 34367  004A38  0E01               	movlw	1
 34368  004A3A  6F92               	movwf	_zeroCrossing& (0+255),b
 34369                           
 34370                           ; BSR set to: 1
 34371                           ;outputs_MC50.c: 298:             powerControl_st.actualCycle++;
 34372  004A3C  2B7F               	incf	(_powerControl_st+4)& (0+255),f,b
 34373                           
 34374                           ; BSR set to: 1
 34375                           ;outputs_MC50.c: 304:             if ( var_sys_NVM.electricBrake==1 && ts_system.TimeEle
      +                          ctricBrake>0 )
 34376  004A3E  0100               	movlb	0	; () banked
 34377  004A40  05AF               	decf	(_var_sys_NVM+23)& (0+255),w,b	;volatile
 34378  004A42  A4D8               	btfss	status,2,c
 34379  004A44  D00E               	goto	i2l14260
 34380                           
 34381                           ; BSR set to: 0
 34382  004A46  0101               	movlb	1	; () banked
 34383  004A48  BFC3               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 34384  004A4A  D00B               	goto	i2l14260
 34385  004A4C  51C3               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 34386  004A4E  E103               	bnz	i2u1428_40
 34387  004A50  05C2               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 34388  004A52  A0D8               	btfss	status,0,c
 34389  004A54  D006               	goto	i2l14260
 34390  004A56                     i2u1428_40:
 34391                           
 34392                           ; BSR set to: 1
 34393                           ;outputs_MC50.c: 305:             {;outputs_MC50.c: 307:                 if ( powerContr
      +                          ol_st.actualCycle>=2 )
 34394  004A56  0E01               	movlw	1
 34395  004A58  657F               	cpfsgt	(_powerControl_st+4)& (0+255),b
 34396  004A5A  D022               	goto	i2l14268
 34397  004A5C                     i2u1429_40:
 34398                           
 34399                           ; BSR set to: 1
 34400                           ;outputs_MC50.c: 308:                 {;outputs_MC50.c: 309:                     powerCo
      +                          ntrol_st.actualCycle=0;
 34401  004A5C  0E00               	movlw	0
 34402  004A5E  6F7F               	movwf	(_powerControl_st+4)& (0+255),b
 34403  004A60  D01F               	goto	i2l14268
 34404  004A62                     i2l14260:
 34405                           
 34406                           ;outputs_MC50.c: 313:             {;outputs_MC50.c: 314:                 if ( powerContr
      +                          ol_st.actualCycle>=(powerControl_st.decelarationCyclesOff+powerControl_st.decelarationCy
      +                          clesOn) )
 34407  004A62  0101               	movlb	1	; () banked
 34408  004A64  517C               	movf	(_powerControl_st+1)& (0+255),w,b
 34409  004A66  C17D  F005         	movff	_powerControl_st+2,??_controlMotorForce
 34410  004A6A  6A06               	clrf	(??_controlMotorForce+1)^0,c
 34411  004A6C  2605               	addwf	??_controlMotorForce^0,f,c
 34412  004A6E  0E00               	movlw	0
 34413  004A70  2206               	addwfc	(??_controlMotorForce+1)^0,f,c
 34414  004A72  517F               	movf	(_powerControl_st+4)& (0+255),w,b
 34415  004A74  6E07               	movwf	(??_controlMotorForce+2)^0,c
 34416  004A76  6A08               	clrf	(??_controlMotorForce+3)^0,c
 34417  004A78  5005               	movf	??_controlMotorForce^0,w,c
 34418  004A7A  5C07               	subwf	(??_controlMotorForce+2)^0,w,c
 34419  004A7C  5008               	movf	(??_controlMotorForce+3)^0,w,c
 34420  004A7E  0A80               	xorlw	128
 34421  004A80  6E09               	movwf	(??_controlMotorForce+4)^0,c
 34422  004A82  5006               	movf	(??_controlMotorForce+1)^0,w,c
 34423  004A84  0A80               	xorlw	128
 34424  004A86  5809               	subwfb	(??_controlMotorForce+4)^0,w,c
 34425  004A88  B0D8               	btfsc	status,0,c
 34426  004A8A  D7E8               	goto	i2u1429_40
 34427  004A8C  D009               	goto	i2l14268
 34428  004A8E                     i2l2190:
 34429                           
 34430                           ; BSR set to: 1
 34431  004A8E  B68D               	btfsc	141,3,c	;volatile
 34432  004A90  D007               	goto	i2l14268
 34433                           
 34434                           ; BSR set to: 1
 34435  004A92  5192               	movf	_zeroCrossing& (0+255),w,b
 34436  004A94  B4D8               	btfsc	status,2,c
 34437  004A96  D004               	goto	i2l14268
 34438                           
 34439                           ; BSR set to: 1
 34440                           ;outputs_MC50.c: 328:     {;outputs_MC50.c: 330:         zeroCrossing=0;
 34441  004A98  0E00               	movlw	0
 34442  004A9A  6F92               	movwf	_zeroCrossing& (0+255),b
 34443                           
 34444                           ;outputs_MC50.c: 331:         waitZeroPeak=0;
 34445  004A9C  0E00               	movlw	0
 34446  004A9E  6F91               	movwf	_waitZeroPeak& (0+255),b
 34447  004AA0                     i2l14268:
 34448                           
 34449                           ; BSR set to: 1
 34450                           ;outputs_MC50.c: 336:     if ( PORTAbits.RA3!=0 )
 34451  004AA0  B68D               	btfsc	141,3,c	;volatile
 34452                           
 34453                           ; BSR set to: 1
 34454                           ;outputs_MC50.c: 337:     {;outputs_MC50.c: 339:         zeroCrossingLength++;
 34455  004AA2  2B93               	incf	_zeroCrossingLength& (0+255),f,b
 34456                           
 34457                           ; BSR set to: 1
 34458                           ;outputs_MC50.c: 342:    var_sys.Control50or60hz ++;
 34459                           
 34460                           ;outputs_MC50.c: 340:     }
 34461  004AA4  2B4D               	incf	(_var_sys+77)& (0+255),f,b	;volatile
 34462                           
 34463                           ; BSR set to: 1
 34464                           ;outputs_MC50.c: 352:     stateMotor = VerifyElectricalBrake(var_sys.StateMotor);
 34465  004AA6  5100               	movf	_var_sys& (0+255),w,b	;volatile
 34466  004AA8  EC90  F03E         	call	i2_VerifyElectricalBrake
 34467  004AAC  0100               	movlb	0	; () banked
 34468  004AAE  6F83               	movwf	_stateMotor& (0+255),b
 34469                           
 34470                           ; BSR set to: 0
 34471                           ;outputs_MC50.c: 354:     if ( var_sys_NVM.electricBrake==1 && ts_system.TimeElectricBra
      +                          ke>0 && ts_system.TimeStopElectricBrake<=0 )
 34472  004AB0  05AF               	decf	(_var_sys_NVM+23)& (0+255),w,b	;volatile
 34473  004AB2  A4D8               	btfss	status,2,c
 34474  004AB4  D02E               	goto	i2l14292
 34475                           
 34476                           ; BSR set to: 0
 34477  004AB6  0101               	movlb	1	; () banked
 34478  004AB8  BFC3               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 34479  004ABA  D02B               	goto	i2l14292
 34480  004ABC  51C3               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 34481  004ABE  E103               	bnz	i2u1435_40
 34482  004AC0  05C2               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 34483  004AC2  A0D8               	btfss	status,0,c
 34484  004AC4  D026               	goto	i2l14292
 34485  004AC6                     i2u1435_40:
 34486                           
 34487                           ; BSR set to: 1
 34488  004AC6  BFDB               	btfsc	(_ts_system+65)& (0+255),7,b	;volatile
 34489  004AC8  D005               	goto	i2u1436_40
 34490  004ACA  51DB               	movf	(_ts_system+65)& (0+255),w,b	;volatile
 34491  004ACC  E122               	bnz	i2l14292
 34492  004ACE  05DA               	decf	(_ts_system+64)& (0+255),w,b	;volatile
 34493  004AD0  B0D8               	btfsc	status,0,c
 34494  004AD2  D01F               	goto	i2l14292
 34495  004AD4                     i2u1436_40:
 34496                           
 34497                           ; BSR set to: 1
 34498                           ;outputs_MC50.c: 355:     {;outputs_MC50.c: 357:         if(stateMotor !=0 && StateTRIAC
      +                          ==1 && ts_system.ts_TRIACWait<=0 && powerControl_st.actualCycle==0 && ts_system.TimeElec
      +                          tricBrake<(((5+6)*( 100/50))-(5*( 100/50))) )
 34499  004AD4  0100               	movlb	0	; () banked
 34500  004AD6  5183               	movf	_stateMotor& (0+255),w,b
 34501  004AD8  B4D8               	btfsc	status,2,c
 34502  004ADA  D03A               	goto	i2l14304
 34503                           
 34504                           ; BSR set to: 0
 34505  004ADC  0101               	movlb	1	; () banked
 34506  004ADE  0590               	decf	_StateTRIAC& (0+255),w,b
 34507  004AE0  A4D8               	btfss	status,2,c
 34508  004AE2  D036               	goto	i2l14304
 34509                           
 34510                           ; BSR set to: 1
 34511  004AE4  BFA1               	btfsc	(_ts_system+7)& (0+255),7,b	;volatile
 34512  004AE6  D005               	goto	i2u1439_40
 34513  004AE8  51A1               	movf	(_ts_system+7)& (0+255),w,b	;volatile
 34514  004AEA  E132               	bnz	i2l14304
 34515  004AEC  05A0               	decf	(_ts_system+6)& (0+255),w,b	;volatile
 34516  004AEE  B0D8               	btfsc	status,0,c
 34517  004AF0  D02F               	goto	i2l14304
 34518  004AF2                     i2u1439_40:
 34519                           
 34520                           ; BSR set to: 1
 34521  004AF2  517F               	movf	(_powerControl_st+4)& (0+255),w,b
 34522  004AF4  A4D8               	btfss	status,2,c
 34523  004AF6  D02C               	goto	i2l14304
 34524                           
 34525                           ; BSR set to: 1
 34526  004AF8  BFC3               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 34527  004AFA  D006               	goto	i2u1441_40
 34528  004AFC  51C3               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 34529  004AFE  E128               	bnz	i2l14304
 34530  004B00  0E0C               	movlw	12
 34531  004B02  5DC2               	subwf	(_ts_system+40)& (0+255),w,b	;volatile
 34532  004B04  B0D8               	btfsc	status,0,c
 34533  004B06  D024               	goto	i2l14304
 34534  004B08                     i2u1441_40:
 34535                           
 34536                           ; BSR set to: 1
 34537                           
 34538                           ;outputs_MC50.c: 358:         {;outputs_MC50.c: 359:            do { LATDbits.LATD7 = 1;
      +                           } while(0);
 34539  004B08  8E86               	bsf	134,7,c	;volatile
 34540                           
 34541                           ; BSR set to: 1
 34542                           ;outputs_MC50.c: 360:            ts_system.ts_TRIACWait=-(25*200);
 34543  004B0A  0EEC               	movlw	236
 34544  004B0C  6FA1               	movwf	(_ts_system+7)& (0+255),b	;volatile
 34545  004B0E  0E78               	movlw	120
 34546  004B10  D01A               	goto	L118
 34547  004B12                     i2l14292:
 34548                           
 34549                           ;outputs_MC50.c: 366:     {;outputs_MC50.c: 368:         if(stateMotor !=0 && ts_system.
      +                          ts_TimeSlotTRIAC<difTime && StateTRIAC==1 && ts_system.ts_TRIACWait<=0 && var_sys.InStop
      +                          ing==NO)
 34550  004B12  0100               	movlb	0	; () banked
 34551  004B14  5183               	movf	_stateMotor& (0+255),w,b
 34552  004B16  B4D8               	btfsc	status,2,c
 34553  004B18  D01B               	goto	i2l14304
 34554                           
 34555                           ; BSR set to: 0
 34556  004B1A  0101               	movlb	1	; () banked
 34557  004B1C  518F               	movf	_difTime& (0+255),w,b
 34558  004B1E  5D9F               	subwf	(_ts_system+5)& (0+255),w,b	;volatile
 34559  004B20  B0D8               	btfsc	status,0,c
 34560  004B22  D016               	goto	i2l14304
 34561                           
 34562                           ; BSR set to: 1
 34563  004B24  0590               	decf	_StateTRIAC& (0+255),w,b
 34564  004B26  A4D8               	btfss	status,2,c
 34565  004B28  D013               	goto	i2l14304
 34566                           
 34567                           ; BSR set to: 1
 34568  004B2A  BFA1               	btfsc	(_ts_system+7)& (0+255),7,b	;volatile
 34569  004B2C  D005               	goto	i2u1445_40
 34570  004B2E  51A1               	movf	(_ts_system+7)& (0+255),w,b	;volatile
 34571  004B30  E10F               	bnz	i2l14304
 34572  004B32  05A0               	decf	(_ts_system+6)& (0+255),w,b	;volatile
 34573  004B34  B0D8               	btfsc	status,0,c
 34574  004B36  D00C               	goto	i2l14304
 34575  004B38                     i2u1445_40:
 34576                           
 34577                           ; BSR set to: 1
 34578  004B38  510D               	movf	(_var_sys+13)& (0+255),w,b	;volatile
 34579  004B3A  A4D8               	btfss	status,2,c
 34580  004B3C  D009               	goto	i2l14304
 34581                           
 34582                           ; BSR set to: 1
 34583                           
 34584                           ;outputs_MC50.c: 369:         {;outputs_MC50.c: 370:            do { LATDbits.LATD7 = 1;
      +                           } while(0);
 34585  004B3E  8E86               	bsf	134,7,c	;volatile
 34586                           
 34587                           ; BSR set to: 1
 34588                           ;outputs_MC50.c: 371:            ts_system.ts_TRIACWait=-200;
 34589  004B40  0EFF               	movlw	255
 34590  004B42  6FA1               	movwf	(_ts_system+7)& (0+255),b	;volatile
 34591  004B44  0E38               	movlw	56
 34592  004B46                     L118:
 34593  004B46  6FA0               	movwf	(_ts_system+6)& (0+255),b	;volatile
 34594                           
 34595                           ;outputs_MC50.c: 372:            var_sys.TriacON=YES;
 34596  004B48  0E01               	movlw	1
 34597  004B4A  6F0C               	movwf	(_var_sys+12)& (0+255),b	;volatile
 34598                           
 34599                           ;outputs_MC50.c: 373:            StateTRIAC=0;
 34600  004B4C  0E00               	movlw	0
 34601  004B4E  6F90               	movwf	_StateTRIAC& (0+255),b
 34602  004B50                     i2l14304:
 34603                           
 34604                           ;outputs_MC50.c: 377:     if (((ts_system.ts_TimeSlotTRIAC <= 20 )&& ts_system.TimeElect
      +                          ricBrake<0) || (stateMotor==0))
 34605  004B50  0E15               	movlw	21
 34606  004B52  0101               	movlb	1	; () banked
 34607  004B54  619F               	cpfslt	(_ts_system+5)& (0+255),b	;volatile
 34608  004B56  D002               	goto	i2u1448_40
 34609                           
 34610                           ; BSR set to: 1
 34611  004B58  BFC3               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 34612  004B5A  D004               	goto	i2u1449_40
 34613  004B5C                     i2u1448_40:
 34614                           
 34615                           ; BSR set to: 1
 34616  004B5C  0100               	movlb	0	; () banked
 34617  004B5E  5183               	movf	_stateMotor& (0+255),w,b
 34618  004B60  A4D8               	btfss	status,2,c
 34619  004B62  D004               	goto	i2l2217
 34620  004B64                     i2u1449_40:
 34621                           
 34622                           ;outputs_MC50.c: 378:     {;outputs_MC50.c: 384:             do { LATDbits.LATD7 = 0; } 
      +                          while(0);
 34623  004B64  9E86               	bcf	134,7,c	;volatile
 34624                           
 34625                           ;outputs_MC50.c: 385:             var_sys.TriacON=NO;
 34626  004B66  0E00               	movlw	0
 34627  004B68  0101               	movlb	1	; () banked
 34628  004B6A  6F0C               	movwf	(_var_sys+12)& (0+255),b	;volatile
 34629  004B6C                     i2l2217:
 34630                           
 34631                           ;outputs_MC50.c: 396:     if(stateMotor !=0 && ts_system.ts_TRIACWait>0)
 34632  004B6C  0100               	movlb	0	; () banked
 34633  004B6E  5183               	movf	_stateMotor& (0+255),w,b
 34634  004B70  B4D8               	btfsc	status,2,c
 34635  004B72  D00C               	goto	i2l14316
 34636                           
 34637                           ; BSR set to: 0
 34638  004B74  0101               	movlb	1	; () banked
 34639  004B76  BFA1               	btfsc	(_ts_system+7)& (0+255),7,b	;volatile
 34640  004B78  D009               	goto	i2l14316
 34641  004B7A  51A1               	movf	(_ts_system+7)& (0+255),w,b	;volatile
 34642  004B7C  E103               	bnz	i2u1451_40
 34643  004B7E  05A0               	decf	(_ts_system+6)& (0+255),w,b	;volatile
 34644  004B80  A0D8               	btfss	status,0,c
 34645  004B82  D004               	goto	i2l14316
 34646  004B84                     i2u1451_40:
 34647                           
 34648                           ; BSR set to: 1
 34649                           ;outputs_MC50.c: 397:     {;outputs_MC50.c: 398:         ts_system.ts_TRIACWait--;
 34650  004B84  07A0               	decf	(_ts_system+6)& (0+255),f,b	;volatile
 34651  004B86  A0D8               	btfss	status,0,c
 34652  004B88  07A1               	decf	(_ts_system+7)& (0+255),f,b	;volatile
 34653                           
 34654                           ;outputs_MC50.c: 399:     }
 34655  004B8A  0012               	return	
 34656  004B8C                     i2l14316:
 34657  004B8C  0100               	movlb	0	; () banked
 34658  004B8E  5183               	movf	_stateMotor& (0+255),w,b
 34659  004B90  A4D8               	btfss	status,2,c
 34660  004B92  0012               	return	
 34661                           
 34662                           ; BSR set to: 0
 34663  004B94  0101               	movlb	1	; () banked
 34664  004B96  AFA1               	btfss	(_ts_system+7)& (0+255),7,b	;volatile
 34665  004B98  0012               	return	
 34666                           
 34667                           ; BSR set to: 1
 34668                           ;outputs_MC50.c: 401:     {;outputs_MC50.c: 402:         ts_system.ts_TRIACWait++;
 34669  004B9A  4BA0               	infsnz	(_ts_system+6)& (0+255),f,b	;volatile
 34670  004B9C  2BA1               	incf	(_ts_system+7)& (0+255),f,b	;volatile
 34671  004B9E  0012               	return		;funcret
 34672  004BA0                     __end_of_controlMotorForce:
 34673                           	callstack 0
 34674                           
 34675 ;; *************** function i2_VerifyElectricalBrake *****************
 34676 ;; Defined at:
 34677 ;;		line 658 in file "outputs_MC50.c"
 34678 ;; Parameters:    Size  Location     Type
 34679 ;;  actualState     1    wreg     enum E10381
 34680 ;; Auto vars:     Size  Location     Type
 34681 ;;  actualState     1    1[COMRAM] enum E10381
 34682 ;;  tempState       1    0[COMRAM] enum E10381
 34683 ;; Return value:  Size  Location     Type
 34684 ;;                  1    wreg      enum E10381
 34685 ;; Registers used:
 34686 ;;		wreg, status,2, status,0
 34687 ;; Tracked objects:
 34688 ;;		On entry : 3F/1
 34689 ;;		On exit  : 3E/0
 34690 ;;		Unchanged: 0/0
 34691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34692 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34693 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34695 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34696 ;;Total ram usage:        2 bytes
 34697 ;; Hardware stack levels used: 1
 34698 ;; This function calls:
 34699 ;;		Nothing
 34700 ;; This function is called by:
 34701 ;;		_controlMotorForce
 34702 ;; This function uses a non-reentrant model
 34703 ;;
 34704                           
 34705                           	psect	text194
 34706  007D20                     __ptext194:
 34707                           	callstack 0
 34708  007D20                     i2_VerifyElectricalBrake:
 34709                           	callstack 14
 34710                           
 34711                           ;incstack = 0
 34712                           ;i2VerifyElectricalBrake@actualState stored from wreg
 34713  007D20  6E02               	movwf	i2VerifyElectricalBrake@actualState^0,c
 34714                           
 34715                           ;outputs_MC50.c: 658: stateMotor_enum VerifyElectricalBrake(stateMotor_enum actualState)
      +                          ;outputs_MC50.c: 659: {;outputs_MC50.c: 660:     stateMotor_enum tempState;;outputs_MC50
      +                          .c: 661:     tempState=actualState;
 34716  007D22  C002  F001         	movff	i2VerifyElectricalBrake@actualState,i2VerifyElectricalBrake@tempState
 34717                           
 34718                           ;outputs_MC50.c: 662:     if(var_sys_NVM.electricBrake==1 && actualState==Stopped && ts_
      +                          system.TimeStopElectricBrake<=0)
 34719  007D26  0100               	movlb	0	; () banked
 34720  007D28  05AF               	decf	(_var_sys_NVM+23)& (0+255),w,b	;volatile
 34721  007D2A  A4D8               	btfss	status,2,c
 34722  007D2C  D02E               	goto	i2l2318
 34723                           
 34724                           ; BSR set to: 0
 34725  007D2E  5002               	movf	i2VerifyElectricalBrake@actualState^0,w,c
 34726  007D30  A4D8               	btfss	status,2,c
 34727  007D32  D02B               	goto	i2l2318
 34728                           
 34729                           ; BSR set to: 0
 34730  007D34  0101               	movlb	1	; () banked
 34731  007D36  BFDB               	btfsc	(_ts_system+65)& (0+255),7,b	;volatile
 34732  007D38  D005               	goto	i2u1382_40
 34733  007D3A  51DB               	movf	(_ts_system+65)& (0+255),w,b	;volatile
 34734  007D3C  E126               	bnz	i2l2318
 34735  007D3E  05DA               	decf	(_ts_system+64)& (0+255),w,b	;volatile
 34736  007D40  B0D8               	btfsc	status,0,c
 34737  007D42  D023               	goto	i2l2318
 34738  007D44                     i2u1382_40:
 34739                           
 34740                           ; BSR set to: 1
 34741                           ;outputs_MC50.c: 663:     {;outputs_MC50.c: 664:         if(actualState!=brakeElectric_s
      +                          t.lastState && brakeElectric_st.ElectricBrakeIsActive==NO )
 34742  007D44  5002               	movf	i2VerifyElectricalBrake@actualState^0,w,c
 34743  007D46  0100               	movlb	0	; () banked
 34744  007D48  1978               	xorwf	_brakeElectric_st& (0+255),w,b
 34745  007D4A  B4D8               	btfsc	status,2,c
 34746  007D4C  D00B               	goto	i2l13934
 34747                           
 34748                           ; BSR set to: 0
 34749  007D4E  5179               	movf	(_brakeElectric_st+1)& (0+255),w,b
 34750  007D50  A4D8               	btfss	status,2,c
 34751  007D52  D008               	goto	i2l13934
 34752                           
 34753                           ; BSR set to: 0
 34754                           ;outputs_MC50.c: 665:         {;outputs_MC50.c: 666:             brakeElectric_st.Electr
      +                          icBrakeIsActive=YES;
 34755  007D54  0E01               	movlw	1
 34756  007D56  6F79               	movwf	(_brakeElectric_st+1)& (0+255),b
 34757                           
 34758                           ;outputs_MC50.c: 668:             ts_system.TimeElectricBrake=((5+6)*( 100/50));
 34759  007D58  0E00               	movlw	0
 34760  007D5A  0101               	movlb	1	; () banked
 34761  007D5C  6FC3               	movwf	(_ts_system+41)& (0+255),b	;volatile
 34762  007D5E  0E16               	movlw	22
 34763  007D60  6FC2               	movwf	(_ts_system+40)& (0+255),b	;volatile
 34764                           
 34765                           ;outputs_MC50.c: 670:         }
 34766  007D62  D018               	goto	i2l2323
 34767  007D64                     i2l13934:
 34768                           
 34769                           ; BSR set to: 0
 34770  007D64  0579               	decf	(_brakeElectric_st+1)& (0+255),w,b
 34771  007D66  A4D8               	btfss	status,2,c
 34772  007D68  D00B               	goto	i2l13940
 34773                           
 34774                           ; BSR set to: 0
 34775  007D6A  0101               	movlb	1	; () banked
 34776  007D6C  BFC3               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 34777  007D6E  D008               	goto	i2l13940
 34778  007D70  51C3               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 34779  007D72  E103               	bnz	i2u1386_40
 34780  007D74  05C2               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 34781  007D76  A0D8               	btfss	status,0,c
 34782  007D78  D003               	goto	i2l13940
 34783  007D7A                     i2u1386_40:
 34784                           
 34785                           ; BSR set to: 1
 34786                           ;outputs_MC50.c: 672:         {;outputs_MC50.c: 673:             tempState=InOpenFull;
 34787  007D7A  0E01               	movlw	1
 34788  007D7C  6E01               	movwf	i2VerifyElectricalBrake@tempState^0,c
 34789                           
 34790                           ;outputs_MC50.c: 686:         }
 34791  007D7E  D00A               	goto	i2l2323
 34792  007D80                     i2l13940:
 34793                           
 34794                           ;outputs_MC50.c: 688:         {;outputs_MC50.c: 689:             brakeElectric_st.lastSt
      +                          ate=Stopped;
 34795  007D80  0E00               	movlw	0
 34796  007D82  0100               	movlb	0	; () banked
 34797  007D84  6F78               	movwf	_brakeElectric_st& (0+255),b
 34798                           
 34799                           ;outputs_MC50.c: 690:             brakeElectric_st.ElectricBrakeIsActive=NO;
 34800  007D86  0E00               	movlw	0
 34801  007D88  D004               	goto	L119
 34802  007D8A                     i2l2318:
 34803                           
 34804                           ;outputs_MC50.c: 695:     {;outputs_MC50.c: 696:         brakeElectric_st.lastState=actu
      +                          alState;
 34805  007D8A  C002  F078         	movff	i2VerifyElectricalBrake@actualState,_brakeElectric_st
 34806                           
 34807                           ;outputs_MC50.c: 697:         brakeElectric_st.ElectricBrakeIsActive=NO;
 34808  007D8E  0E00               	movlw	0
 34809  007D90  0100               	movlb	0	; () banked
 34810  007D92                     L119:
 34811  007D92  6F79               	movwf	(_brakeElectric_st+1)& (0+255),b
 34812  007D94                     i2l2323:
 34813                           
 34814                           ;outputs_MC50.c: 700:     return tempState;
 34815  007D94  5001               	movf	i2VerifyElectricalBrake@tempState^0,w,c
 34816  007D96  0012               	return		;funcret
 34817  007D98                     __end_ofi2_VerifyElectricalBrake:
 34818                           	callstack 0
 34819                           
 34820 ;; *************** function i2_GetMotorPower *****************
 34821 ;; Defined at:
 34822 ;;		line 405 in file "outputs_MC50.c"
 34823 ;; Parameters:    Size  Location     Type
 34824 ;;		None
 34825 ;; Auto vars:     Size  Location     Type
 34826 ;;  defineatraso    1    3[COMRAM] unsigned char 
 34827 ;; Return value:  Size  Location     Type
 34828 ;;                  1    wreg      unsigned char 
 34829 ;; Registers used:
 34830 ;;		wreg, status,2, status,0, prodl, prodh
 34831 ;; Tracked objects:
 34832 ;;		On entry : 3F/E
 34833 ;;		On exit  : 3F/1
 34834 ;;		Unchanged: 0/0
 34835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34836 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34837 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34838 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34839 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34840 ;;Total ram usage:        4 bytes
 34841 ;; Hardware stack levels used: 1
 34842 ;; This function calls:
 34843 ;;		Nothing
 34844 ;; This function is called by:
 34845 ;;		_controlMotorForce
 34846 ;; This function uses a non-reentrant model
 34847 ;;
 34848                           
 34849                           	psect	text195
 34850  006FFC                     __ptext195:
 34851                           	callstack 0
 34852  006FFC                     i2_GetMotorPower:
 34853                           	callstack 14
 34854                           
 34855                           ; BSR set to: 14
 34856                           ;outputs_MC50.c: 408:     unsigned char defineatraso;;outputs_MC50.c: 413:     if(powerC
      +                          ontrol_st.decelarationActive==YES)
 34857                           
 34858                           ;incstack = 0
 34859  006FFC  0101               	movlb	1	; () banked
 34860  006FFE  057B               	decf	_powerControl_st& (0+255),w,b
 34861  007000  A4D8               	btfss	status,2,c
 34862  007002  D006               	goto	i2l13884
 34863                           
 34864                           ; BSR set to: 1
 34865                           ;outputs_MC50.c: 414:     {;outputs_MC50.c: 415:        temppower=(var_sys_NVM.motorPowe
      +                          r*6);
 34866  007004  0100               	movlb	0	; () banked
 34867  007006  519A               	movf	(_var_sys_NVM+2)& (0+255),w,b	;volatile
 34868  007008  0D06               	mullw	6
 34869  00700A  CFF3 F18E          	movff	prodl,_temppower
 34870                           
 34871                           ;outputs_MC50.c: 416:     }
 34872  00700E  D043               	goto	i2l2235
 34873  007010                     i2l13884:
 34874                           
 34875                           ; BSR set to: 1
 34876                           ;outputs_MC50.c: 418:     {;outputs_MC50.c: 419:         fullmotorPower=(var_sys_NVM.mot
      +                          orPower*6);
 34877  007010  0100               	movlb	0	; () banked
 34878  007012  519A               	movf	(_var_sys_NVM+2)& (0+255),w,b	;volatile
 34879  007014  0D06               	mullw	6
 34880  007016  CFF3 F082          	movff	prodl,_fullmotorPower
 34881                           
 34882                           ; BSR set to: 0
 34883                           ;outputs_MC50.c: 421:         if(var_sys.velocityFactor>0)
 34884  00701A  0101               	movlb	1	; () banked
 34885  00701C  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 34886  00701E  D01C               	goto	i2l13894
 34887  007020  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 34888  007022  E103               	bnz	i2u1372_40
 34889  007024  050E               	decf	(_var_sys+14)& (0+255),w,b	;volatile
 34890  007026  A0D8               	btfss	status,0,c
 34891  007028  D017               	goto	i2l13894
 34892  00702A                     i2u1372_40:
 34893                           
 34894                           ; BSR set to: 1
 34895                           ;outputs_MC50.c: 422:         {;outputs_MC50.c: 423:             if(var_sys.velocityFact
      +                          or>fullmotorPower)
 34896  00702A  0100               	movlb	0	; () banked
 34897  00702C  5182               	movf	_fullmotorPower& (0+255),w,b
 34898  00702E  6E01               	movwf	??i2_GetMotorPower^0,c
 34899  007030  6A02               	clrf	(??i2_GetMotorPower+1)^0,c
 34900  007032  0101               	movlb	1	; () banked
 34901  007034  510E               	movf	(_var_sys+14)& (0+255),w,b	;volatile
 34902  007036  5C01               	subwf	??i2_GetMotorPower^0,w,c
 34903  007038  5002               	movf	(??i2_GetMotorPower+1)^0,w,c
 34904  00703A  0A80               	xorlw	128
 34905  00703C  6E03               	movwf	(??i2_GetMotorPower+2)^0,c
 34906  00703E  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 34907  007040  0A80               	xorlw	128
 34908  007042  5803               	subwfb	(??i2_GetMotorPower+2)^0,w,c
 34909  007044  B0D8               	btfsc	status,0,c
 34910  007046  D002               	goto	i2l13892
 34911                           
 34912                           ; BSR set to: 1
 34913                           ;outputs_MC50.c: 424:             {;outputs_MC50.c: 425:                 temppower=1;
 34914  007048  0E01               	movlw	1
 34915  00704A  D004               	goto	L121
 34916  00704C                     i2l13892:
 34917                           
 34918                           ; BSR set to: 1
 34919                           ;outputs_MC50.c: 428:             {;outputs_MC50.c: 430:                 temppower =full
      +                          motorPower-var_sys.velocityFactor;
 34920  00704C  510E               	movf	(_var_sys+14)& (0+255),w,b	;volatile
 34921  00704E  0100               	movlb	0	; () banked
 34922  007050  5D82               	subwf	_fullmotorPower& (0+255),w,b
 34923  007052  D017               	goto	L122
 34924  007054                     L121:
 34925  007054  6F8E               	movwf	_temppower& (0+255),b
 34926  007056  D01F               	goto	i2l2235
 34927  007058                     i2l13894:
 34928                           
 34929                           ; BSR set to: 1
 34930  007058  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 34931  00705A  D005               	goto	i2u1374_40
 34932  00705C  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 34933  00705E  E113               	bnz	i2l13904
 34934  007060  050E               	decf	(_var_sys+14)& (0+255),w,b	;volatile
 34935  007062  B0D8               	btfsc	status,0,c
 34936  007064  D010               	goto	i2l13904
 34937  007066                     i2u1374_40:
 34938                           
 34939                           ; BSR set to: 1
 34940  007066  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 34941  007068  D005               	goto	i2u1375_40
 34942  00706A  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 34943  00706C  E10C               	bnz	i2l13904
 34944  00706E  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 34945  007070  B0D8               	btfsc	status,0,c
 34946  007072  D009               	goto	i2l13904
 34947  007074                     i2u1375_40:
 34948                           
 34949                           ; BSR set to: 1
 34950                           ;outputs_MC50.c: 434:         {;outputs_MC50.c: 435:             temppower =fullmotorPow
      +                          er;
 34951  007074  C082  F18E         	movff	_fullmotorPower,_temppower
 34952                           
 34953                           ; BSR set to: 1
 34954                           ;outputs_MC50.c: 438:             if ( var_sys_NVM.motorPower>8 )
 34955  007078  0E08               	movlw	8
 34956  00707A  0100               	movlb	0	; () banked
 34957  00707C  659A               	cpfsgt	(_var_sys_NVM+2)& (0+255),b	;volatile
 34958  00707E  D00B               	goto	i2l2235
 34959                           
 34960                           ; BSR set to: 0
 34961                           ;outputs_MC50.c: 439:             {;outputs_MC50.c: 440:                 temppower = 80 
      +                          -23 +1;
 34962  007080  0E3A               	movlw	58
 34963  007082                     L122:
 34964  007082  0101               	movlb	1	; () banked
 34965  007084  D7E7               	goto	L121
 34966  007086                     i2l13904:
 34967                           
 34968                           ; BSR set to: 1
 34969  007086  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 34970  007088  D006               	goto	i2l2235
 34971  00708A  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 34972  00708C  E102               	bnz	i2u1377_40
 34973  00708E  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 34974  007090  B0D8               	btfsc	status,0,c
 34975  007092                     i2u1377_40:
 34976                           
 34977                           ; BSR set to: 1
 34978                           ;outputs_MC50.c: 447:                 temppower = var_sys.velocityFactorstop;
 34979  007092  C110  F18E         	movff	_var_sys+16,_temppower	;volatile
 34980  007096                     i2l2235:
 34981                           
 34982                           ;outputs_MC50.c: 451:     if ((var_sys.velocityFactorstop > 0)&&(var_sys.velocityFactor 
      +                          <= 0 )){
 34983  007096  0101               	movlb	1	; () banked
 34984  007098  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 34985  00709A  D00E               	goto	i2l13914
 34986  00709C  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 34987  00709E  E103               	bnz	i2u1378_40
 34988  0070A0  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 34989  0070A2  A0D8               	btfss	status,0,c
 34990  0070A4  D009               	goto	i2l13914
 34991  0070A6                     i2u1378_40:
 34992                           
 34993                           ; BSR set to: 1
 34994  0070A6  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 34995  0070A8  D005               	goto	i2u1379_40
 34996  0070AA  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 34997  0070AC  E105               	bnz	i2l13914
 34998  0070AE  050E               	decf	(_var_sys+14)& (0+255),w,b	;volatile
 34999  0070B0  B0D8               	btfsc	status,0,c
 35000  0070B2  D002               	goto	i2l13914
 35001  0070B4                     i2u1379_40:
 35002                           
 35003                           ; BSR set to: 1
 35004                           ;outputs_MC50.c: 452:     defineatraso = 5;
 35005  0070B4  0E05               	movlw	5
 35006  0070B6  D001               	goto	L120
 35007  0070B8                     i2l13914:
 35008                           
 35009                           ; BSR set to: 1
 35010                           ;outputs_MC50.c: 455:     {;outputs_MC50.c: 456:     defineatraso = 23;
 35011  0070B8  0E17               	movlw	23
 35012  0070BA                     L120:
 35013  0070BA  6E04               	movwf	i2GetMotorPower@defineatraso^0,c
 35014                           
 35015                           ; BSR set to: 1
 35016                           ;outputs_MC50.c: 459:     return temppower+defineatraso;
 35017  0070BC  518E               	movf	_temppower& (0+255),w,b
 35018  0070BE  2404               	addwf	i2GetMotorPower@defineatraso^0,w,c
 35019                           
 35020                           ; BSR set to: 1
 35021  0070C0  0012               	return		;funcret
 35022  0070C2                     __end_ofi2_GetMotorPower:
 35023                           	callstack 0
 35024                           
 35025 ;; *************** function _TMR1_WriteTimer *****************
 35026 ;; Defined at:
 35027 ;;		line 129 in file "mcc_generated_files/tmr1.c"
 35028 ;; Parameters:    Size  Location     Type
 35029 ;;  timerVal        2    0[COMRAM] unsigned short 
 35030 ;; Auto vars:     Size  Location     Type
 35031 ;;		None
 35032 ;; Return value:  Size  Location     Type
 35033 ;;                  1    wreg      void 
 35034 ;; Registers used:
 35035 ;;		None
 35036 ;; Tracked objects:
 35037 ;;		On entry : 3F/1
 35038 ;;		On exit  : 3F/1
 35039 ;;		Unchanged: 3F/0
 35040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35041 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35042 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35044 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35045 ;;Total ram usage:        2 bytes
 35046 ;; Hardware stack levels used: 1
 35047 ;; This function calls:
 35048 ;;		Nothing
 35049 ;; This function is called by:
 35050 ;;		_TMR1_ISR
 35051 ;; This function uses a non-reentrant model
 35052 ;;
 35053                           
 35054                           	psect	text196
 35055  008F72                     __ptext196:
 35056                           	callstack 0
 35057  008F72                     _TMR1_WriteTimer:
 35058                           	callstack 15
 35059                           
 35060                           ; BSR set to: 1
 35061                           ;mcc_generated_files/tmr1.c: 129: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 130: {;mcc_generated_files/tmr1.c: 131:     if (T1CONbits.nT1SYNC == 1)
 35062                           
 35063                           ; BSR set to: 1
 35064                           ;incstack = 0
 35065  008F72  A4CF               	btfss	207,2,c	;volatile
 35066  008F74  D007               	goto	i2l1147
 35067                           
 35068                           ; BSR set to: 1
 35069                           ;mcc_generated_files/tmr1.c: 132:     {;mcc_generated_files/tmr1.c: 134:         T1CONbi
      +                          ts.TMR1ON = 0;
 35070  008F76  90CF               	bcf	207,0,c	;volatile
 35071                           
 35072                           ;mcc_generated_files/tmr1.c: 137:         TMR1H = (uint8_t)(timerVal >> 8);
 35073  008F78  C002  FFCE         	movff	TMR1_WriteTimer@timerVal+1,4046	;volatile
 35074                           
 35075                           ;mcc_generated_files/tmr1.c: 138:         TMR1L = (uint8_t)timerVal;
 35076  008F7C  C001  FFCD         	movff	TMR1_WriteTimer@timerVal,4045	;volatile
 35077                           
 35078                           ;mcc_generated_files/tmr1.c: 141:         T1CONbits.TMR1ON =1;
 35079  008F80  80CF               	bsf	207,0,c	;volatile
 35080                           
 35081                           ;mcc_generated_files/tmr1.c: 142:     }
 35082  008F82  0012               	return	
 35083  008F84                     i2l1147:
 35084                           
 35085                           ; BSR set to: 1
 35086                           ;mcc_generated_files/tmr1.c: 144:     {;mcc_generated_files/tmr1.c: 146:         TMR1H =
      +                           (uint8_t)(timerVal >> 8);
 35087  008F84  C002  FFCE         	movff	TMR1_WriteTimer@timerVal+1,4046	;volatile
 35088                           
 35089                           ;mcc_generated_files/tmr1.c: 147:         TMR1L = (uint8_t)timerVal;
 35090  008F88  C001  FFCD         	movff	TMR1_WriteTimer@timerVal,4045	;volatile
 35091                           
 35092                           ; BSR set to: 1
 35093  008F8C  0012               	return		;funcret
 35094  008F8E                     __end_of_TMR1_WriteTimer:
 35095                           	callstack 0
 35096                           
 35097 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 35098 ;; Defined at:
 35099 ;;		line 196 in file "mcc_generated_files/tmr1.c"
 35100 ;; Parameters:    Size  Location     Type
 35101 ;;		None
 35102 ;; Auto vars:     Size  Location     Type
 35103 ;;		None
 35104 ;; Return value:  Size  Location     Type
 35105 ;;                  1    wreg      void 
 35106 ;; Registers used:
 35107 ;;		None
 35108 ;; Tracked objects:
 35109 ;;		On entry : 3F/2
 35110 ;;		On exit  : 3F/2
 35111 ;;		Unchanged: 3F/0
 35112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35113 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35114 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35116 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35117 ;;Total ram usage:        0 bytes
 35118 ;; Hardware stack levels used: 1
 35119 ;; This function calls:
 35120 ;;		Nothing
 35121 ;; This function is called by:
 35122 ;;		_TMR1_Initialize
 35123 ;;		_TMR1_ISR
 35124 ;; This function uses a non-reentrant model
 35125 ;;
 35126                           
 35127                           	psect	text197
 35128  0092AC                     __ptext197:
 35129                           	callstack 0
 35130  0092AC                     _TMR1_DefaultInterruptHandler:
 35131                           	callstack 15
 35132                           
 35133                           ; BSR set to: 2
 35134                           
 35135                           ; BSR set to: 1
 35136                           ;incstack = 0
 35137  0092AC  0012               	return		;funcret
 35138  0092AE                     __end_of_TMR1_DefaultInterruptHandler:
 35139                           	callstack 0
 35140                           
 35141 ;; *************** function _TMR0_ISR *****************
 35142 ;; Defined at:
 35143 ;;		line 127 in file "mcc_generated_files/tmr0.c"
 35144 ;; Parameters:    Size  Location     Type
 35145 ;;		None
 35146 ;; Auto vars:     Size  Location     Type
 35147 ;;		None
 35148 ;; Return value:  Size  Location     Type
 35149 ;;                  1    wreg      void 
 35150 ;; Registers used:
 35151 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 35152 ;; Tracked objects:
 35153 ;;		On entry : 3F/E
 35154 ;;		On exit  : 0/0
 35155 ;;		Unchanged: 0/0
 35156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35157 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35158 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35160 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35161 ;;Total ram usage:        0 bytes
 35162 ;; Hardware stack levels used: 1
 35163 ;; Hardware stack levels required when called: 1
 35164 ;; This function calls:
 35165 ;;		Absolute function
 35166 ;;		_TMR0_DefaultInterruptHandler
 35167 ;;		_rxi
 35168 ;; This function is called by:
 35169 ;;		_INTERRUPT_InterruptManager
 35170 ;; This function uses a non-reentrant model
 35171 ;;
 35172                           
 35173                           	psect	text198
 35174  008E26                     __ptext198:
 35175                           	callstack 0
 35176  008E26                     _TMR0_ISR:
 35177                           	callstack 15
 35178                           
 35179                           ; BSR set to: 14
 35180                           ;mcc_generated_files/tmr0.c: 130:     PIR0bits.TMR0IF = 0;
 35181                           
 35182                           ; BSR set to: 2
 35183                           ;incstack = 0
 35184  008E26  9BCA               	bcf	202,5,b	;volatile
 35185                           
 35186                           ; BSR set to: 14
 35187                           ;mcc_generated_files/tmr0.c: 132:     rxi();
 35188  008E28  EC35  F021         	call	_rxi	;wreg free
 35189                           
 35190                           ;mcc_generated_files/tmr0.c: 134:     if(TMR0_InterruptHandler)
 35191  008E2C  0102               	movlb	2	; () banked
 35192  008E2E  51E3               	movf	_TMR0_InterruptHandler& (0+255),w,b
 35193  008E30  11E4               	iorwf	(_TMR0_InterruptHandler+1)& (0+255),w,b
 35194  008E32  B4D8               	btfsc	status,2,c
 35195  008E34  0012               	return	
 35196                           
 35197                           ; BSR set to: 2
 35198                           ;mcc_generated_files/tmr0.c: 135:     {;mcc_generated_files/tmr0.c: 136:         TMR0_In
      +                          terruptHandler();
 35199  008E36  D801               	call	i2u1828_48
 35200  008E38  0012               	return	
 35201  008E3A                     i2u1828_48:
 35202  008E3A  0005               	push	
 35203  008E3C  6EFA               	movwf	pclath,c
 35204  008E3E  51E3               	movf	_TMR0_InterruptHandler& (0+255),w,b
 35205  008E40  6EFD               	movwf	tosl,c
 35206  008E42  51E4               	movf	(_TMR0_InterruptHandler+1)& (0+255),w,b
 35207  008E44  6EFE               	movwf	tosh,c
 35208  008E46  6AFF               	clrf	tosu,c
 35209  008E48  50FA               	movf	pclath,w,c
 35210  008E4A  0012               	return		;indir
 35211  008E4C                     __end_of_TMR0_ISR:
 35212                           	callstack 0
 35213                           
 35214 ;; *************** function _rxi *****************
 35215 ;; Defined at:
 35216 ;;		line 41 in file "inputs_MC50.c"
 35217 ;; Parameters:    Size  Location     Type
 35218 ;;		None
 35219 ;; Auto vars:     Size  Location     Type
 35220 ;;		None
 35221 ;; Return value:  Size  Location     Type
 35222 ;;                  1    wreg      void 
 35223 ;; Registers used:
 35224 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 35225 ;; Tracked objects:
 35226 ;;		On entry : 3F/E
 35227 ;;		On exit  : 3C/0
 35228 ;;		Unchanged: 0/0
 35229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35231 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35232 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35233 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35234 ;;Total ram usage:        2 bytes
 35235 ;; Hardware stack levels used: 1
 35236 ;; This function calls:
 35237 ;;		Nothing
 35238 ;; This function is called by:
 35239 ;;		_TMR0_ISR
 35240 ;; This function uses a non-reentrant model
 35241 ;;
 35242                           
 35243                           	psect	text199
 35244  00426A                     __ptext199:
 35245                           	callstack 0
 35246  00426A                     _rxi:
 35247                           	callstack 15
 35248                           
 35249                           ; BSR set to: 14
 35250                           ;inputs_MC50.c: 43:     RFBit = PORTBbits.RB3;
 35251                           
 35252                           ;incstack = 0
 35253  00426A  0E00               	movlw	0
 35254  00426C  B68E               	btfsc	142,3,c	;volatile
 35255  00426E  0E01               	movlw	1
 35256  004270  0100               	movlb	0	; () banked
 35257  004272  6F89               	movwf	_RFBit& (0+255),b	;volatile
 35258                           
 35259                           ; BSR set to: 0
 35260                           ;inputs_MC50.c: 47:     if (RFFull)
 35261  004274  518B               	movf	_RFFull& (0+255),w,b	;volatile
 35262  004276  A4D8               	btfss	status,2,c
 35263  004278  0012               	return	
 35264  00427A  D116               	goto	i2l14198
 35265  00427C                     i2l14088:
 35266                           
 35267                           ; BSR set to: 1
 35268                           ;inputs_MC50.c: 53:             if (RFBit == 0) {
 35269  00427C  0100               	movlb	0	; () banked
 35270  00427E  5189               	movf	_RFBit& (0+255),w,b	;volatile
 35271  004280  A4D8               	btfss	status,2,c
 35272  004282  D004               	goto	i2l14092
 35273                           
 35274                           ; BSR set to: 0
 35275                           ;inputs_MC50.c: 56:                 RFstate = 3;
 35276  004284  0E03               	movlw	3
 35277  004286  0101               	movlb	1	; () banked
 35278  004288  6F98               	movwf	_RFstate& (0+255),b
 35279                           
 35280                           ;inputs_MC50.c: 57:             } else {
 35281  00428A  0012               	return	
 35282  00428C                     i2l14092:
 35283                           
 35284                           ; BSR set to: 0
 35285                           ;inputs_MC50.c: 58:                 RFcount--;
 35286  00428C  077E               	decf	_RFcount& (0+255),f,b
 35287  00428E  A0D8               	btfss	status,0,c
 35288  004290  077F               	decf	(_RFcount+1)& (0+255),f,b
 35289                           
 35290                           ; BSR set to: 0
 35291                           ;inputs_MC50.c: 59:                 if (RFcount < -10)
 35292  004292  AF7F               	btfss	(_RFcount+1)& (0+255),7,b
 35293  004294  0012               	return	
 35294  004296  0EF6               	movlw	246
 35295  004298  5D7E               	subwf	_RFcount& (0+255),w,b
 35296  00429A  0EFF               	movlw	255
 35297  00429C  597F               	subwfb	(_RFcount+1)& (0+255),w,b
 35298  00429E  B0D8               	btfsc	status,0,c
 35299  0042A0  0012               	return	
 35300  0042A2                     i2u1393_40:
 35301  0042A2                     i2l14096:
 35302                           
 35303                           ; BSR set to: 0
 35304                           ;inputs_MC50.c: 60:                 {;inputs_MC50.c: 62:                     RFstate = 0
      +                          ;
 35305  0042A2  0E00               	movlw	0
 35306  0042A4  0101               	movlb	1	; () banked
 35307  0042A6  6F98               	movwf	_RFstate& (0+255),b
 35308  0042A8  0012               	return	
 35309  0042AA                     i2l14098:
 35310                           
 35311                           ; BSR set to: 1
 35312                           ;inputs_MC50.c: 67:             if (RFBit) {
 35313  0042AA  0100               	movlb	0	; () banked
 35314  0042AC  5189               	movf	_RFBit& (0+255),w,b	;volatile
 35315  0042AE  B4D8               	btfsc	status,2,c
 35316  0042B0  D02C               	goto	i2l14118
 35317                           
 35318                           ; BSR set to: 0
 35319                           ;inputs_MC50.c: 71:                 RFstate = 2;
 35320  0042B2  0E02               	movlw	2
 35321  0042B4  0101               	movlb	1	; () banked
 35322  0042B6  6F98               	movwf	_RFstate& (0+255),b
 35323                           
 35324                           ; BSR set to: 1
 35325                           ;inputs_MC50.c: 72:                 BufferRF[Bptr] >>= 1;
 35326  0042B8  0EC8               	movlw	low _BufferRF
 35327  0042BA  0100               	movlb	0	; () banked
 35328  0042BC  258D               	addwf	_Bptr& (0+255),w,b
 35329  0042BE  6ED9               	movwf	fsr2l,c
 35330  0042C0  6ADA               	clrf	fsr2h,c
 35331  0042C2  0E02               	movlw	high _BufferRF
 35332  0042C4  22DA               	addwfc	fsr2h,f,c
 35333  0042C6  90D8               	bcf	status,0,c
 35334  0042C8  32DF               	rrcf	indf2,f,c
 35335                           
 35336                           ; BSR set to: 0
 35337                           ;inputs_MC50.c: 73:                 if (RFcount >= 0) {
 35338  0042CA  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 35339  0042CC  D008               	goto	i2l14108
 35340                           
 35341                           ; BSR set to: 0
 35342                           ;inputs_MC50.c: 74:                     BufferRF[Bptr] += 0x80;
 35343  0042CE  0EC8               	movlw	low _BufferRF
 35344  0042D0  258D               	addwf	_Bptr& (0+255),w,b
 35345  0042D2  6ED9               	movwf	fsr2l,c
 35346  0042D4  6ADA               	clrf	fsr2h,c
 35347  0042D6  0E02               	movlw	high _BufferRF
 35348  0042D8  22DA               	addwfc	fsr2h,f,c
 35349  0042DA  0E80               	movlw	128
 35350  0042DC  26DF               	addwf	indf2,f,c
 35351  0042DE                     i2l14108:
 35352                           
 35353                           ; BSR set to: 0
 35354                           ;inputs_MC50.c: 81:                 RFcount = 0;
 35355  0042DE  0E00               	movlw	0
 35356  0042E0  6F7F               	movwf	(_RFcount+1)& (0+255),b
 35357  0042E2  0E00               	movlw	0
 35358  0042E4  6F7E               	movwf	_RFcount& (0+255),b
 35359                           
 35360                           ; BSR set to: 0
 35361                           ;inputs_MC50.c: 83:                 if ((++BitCount & 7) == 0)
 35362  0042E6  2B8C               	incf	_BitCount& (0+255),f,b
 35363  0042E8  C08C  F001         	movff	_BitCount,??_rxi
 35364  0042EC  0E07               	movlw	7
 35365  0042EE  1601               	andwf	??_rxi^0,f,c
 35366  0042F0  B4D8               	btfsc	status,2,c
 35367                           
 35368                           ; BSR set to: 0
 35369                           ;inputs_MC50.c: 84:                     Bptr++;
 35370  0042F2  2B8D               	incf	_Bptr& (0+255),f,b
 35371                           
 35372                           ; BSR set to: 0
 35373                           ;inputs_MC50.c: 85:                 if (BitCount == 65) {
 35374  0042F4  0E41               	movlw	65
 35375  0042F6  198C               	xorwf	_BitCount& (0+255),w,b
 35376  0042F8  A4D8               	btfss	status,2,c
 35377  0042FA  0012               	return	
 35378                           
 35379                           ; BSR set to: 0
 35380                           ;inputs_MC50.c: 86:                     RFstate = 0;
 35381  0042FC  0E00               	movlw	0
 35382  0042FE  0101               	movlb	1	; () banked
 35383  004300  6F98               	movwf	_RFstate& (0+255),b
 35384                           
 35385                           ;inputs_MC50.c: 87:                     RFFull = 1;
 35386  004302  0E01               	movlw	1
 35387  004304  0100               	movlb	0	; () banked
 35388  004306  6F8B               	movwf	_RFFull& (0+255),b	;volatile
 35389  004308  0012               	return	
 35390  00430A                     i2l14118:
 35391                           
 35392                           ; BSR set to: 0
 35393                           ;inputs_MC50.c: 92:                 RFcount++;
 35394  00430A  4B7E               	infsnz	_RFcount& (0+255),f,b
 35395  00430C  2B7F               	incf	(_RFcount+1)& (0+255),f,b
 35396                           
 35397                           ; BSR set to: 0
 35398                           ;inputs_MC50.c: 93:                 if (RFcount >= 10)
 35399  00430E  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 35400  004310  0012               	return	
 35401  004312  517F               	movf	(_RFcount+1)& (0+255),w,b
 35402  004314  E104               	bnz	i2u1398_40
 35403  004316  0E0A               	movlw	10
 35404  004318  5D7E               	subwf	_RFcount& (0+255),w,b
 35405  00431A  A0D8               	btfss	status,0,c
 35406  00431C  0012               	return	
 35407  00431E                     i2u1398_40:
 35408                           
 35409                           ; BSR set to: 0
 35410                           ;inputs_MC50.c: 94:                 {;inputs_MC50.c: 96:                     RFstate = 1
      +                          ;
 35411  00431E  0E01               	movlw	1
 35412  004320  0101               	movlb	1	; () banked
 35413  004322  6F98               	movwf	_RFstate& (0+255),b
 35414                           
 35415                           ;inputs_MC50.c: 97:                     Bptr = 0;
 35416  004324  0E00               	movlw	0
 35417  004326  0100               	movlb	0	; () banked
 35418  004328  6F8D               	movwf	_Bptr& (0+255),b
 35419                           
 35420                           ;inputs_MC50.c: 98:                     BitCount = 0;
 35421  00432A  0E00               	movlw	0
 35422  00432C  6F8C               	movwf	_BitCount& (0+255),b
 35423  00432E  0012               	return	
 35424  004330                     i2l14124:
 35425                           
 35426                           ; BSR set to: 1
 35427                           ;inputs_MC50.c: 103:             if (RFBit) {
 35428  004330  0100               	movlb	0	; () banked
 35429  004332  5189               	movf	_RFBit& (0+255),w,b	;volatile
 35430  004334  B4D8               	btfsc	status,2,c
 35431  004336  D030               	goto	i2l14140
 35432                           
 35433                           ; BSR set to: 0
 35434                           ;inputs_MC50.c: 106:                 if ((RFcount < 20) || (RFcount >= 45)) {
 35435  004338  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 35436  00433A  D00E               	goto	i2u1401_40
 35437  00433C  517F               	movf	(_RFcount+1)& (0+255),w,b
 35438  00433E  E104               	bnz	i2u1400_40
 35439  004340  0E14               	movlw	20
 35440  004342  5D7E               	subwf	_RFcount& (0+255),w,b
 35441  004344  A0D8               	btfss	status,0,c
 35442  004346  D008               	goto	i2u1401_40
 35443  004348                     i2u1400_40:
 35444                           
 35445                           ; BSR set to: 0
 35446  004348  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 35447  00434A  D01E               	goto	i2l14138
 35448  00434C  517F               	movf	(_RFcount+1)& (0+255),w,b
 35449  00434E  E104               	bnz	i2u1401_40
 35450  004350  0E2D               	movlw	45
 35451  004352  5D7E               	subwf	_RFcount& (0+255),w,b
 35452  004354  A0D8               	btfss	status,0,c
 35453  004356  D018               	goto	i2l14138
 35454  004358                     i2u1401_40:
 35455                           
 35456                           ; BSR set to: 0
 35457                           ;inputs_MC50.c: 107:                     if((RFcount < 80) || RFcount>=100)
 35458  004358  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 35459  00435A  D7A3               	goto	i2u1393_40
 35460  00435C  517F               	movf	(_RFcount+1)& (0+255),w,b
 35461  00435E  E104               	bnz	i2u1402_40
 35462  004360  0E50               	movlw	80
 35463  004362  5D7E               	subwf	_RFcount& (0+255),w,b
 35464  004364  A0D8               	btfss	status,0,c
 35465  004366  D79D               	goto	i2u1393_40
 35466  004368                     i2u1402_40:
 35467                           
 35468                           ; BSR set to: 0
 35469  004368  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 35470  00436A  D006               	goto	i2l14136
 35471  00436C  517F               	movf	(_RFcount+1)& (0+255),w,b
 35472  00436E  E199               	bnz	i2l14096
 35473  004370  0E64               	movlw	100
 35474  004372  5D7E               	subwf	_RFcount& (0+255),w,b
 35475  004374  B0D8               	btfsc	status,0,c
 35476  004376  D795               	goto	i2u1393_40
 35477  004378                     i2l14136:
 35478                           
 35479                           ; BSR set to: 0
 35480                           ;inputs_MC50.c: 112:                     {;inputs_MC50.c: 113:                         R
      +                          Fcount = -10;
 35481  004378  0EFF               	movlw	255
 35482  00437A  6F7F               	movwf	(_RFcount+1)& (0+255),b
 35483  00437C  0EF6               	movlw	246
 35484  00437E  6F7E               	movwf	_RFcount& (0+255),b
 35485                           
 35486                           ;inputs_MC50.c: 114:                         RFstate = 4;
 35487  004380  0E04               	movlw	4
 35488  004382  0101               	movlb	1	; () banked
 35489  004384  6F98               	movwf	_RFstate& (0+255),b
 35490  004386  0012               	return	
 35491  004388                     i2l14138:
 35492                           
 35493                           ; BSR set to: 0
 35494                           ;inputs_MC50.c: 118:                     RFcount = 0;
 35495  004388  0E00               	movlw	0
 35496  00438A  6F7F               	movwf	(_RFcount+1)& (0+255),b
 35497  00438C  0E00               	movlw	0
 35498  00438E  6F7E               	movwf	_RFcount& (0+255),b
 35499                           
 35500                           ;inputs_MC50.c: 119:                     RFstate = 2;
 35501  004390  0E02               	movlw	2
 35502  004392  0101               	movlb	1	; () banked
 35503  004394  6F98               	movwf	_RFstate& (0+255),b
 35504  004396  0012               	return	
 35505  004398                     i2l14140:
 35506                           
 35507                           ; BSR set to: 0
 35508                           ;inputs_MC50.c: 122:                 RFcount++;
 35509  004398  4B7E               	infsnz	_RFcount& (0+255),f,b
 35510  00439A  2B7F               	incf	(_RFcount+1)& (0+255),f,b
 35511  00439C  0012               	return	
 35512  00439E                     i2l14142:
 35513                           
 35514                           ; BSR set to: 1
 35515                           ;inputs_MC50.c: 127:             if (RFBit == 0) {
 35516  00439E  0100               	movlb	0	; () banked
 35517  0043A0  5189               	movf	_RFBit& (0+255),w,b	;volatile
 35518  0043A2  A4D8               	btfss	status,2,c
 35519  0043A4  D056               	goto	i2l14178
 35520                           
 35521                           ; BSR set to: 0
 35522                           ;inputs_MC50.c: 130:                 RFstate = 5;
 35523  0043A6  0E05               	movlw	5
 35524  0043A8  0101               	movlb	1	; () banked
 35525  0043AA  6F98               	movwf	_RFstate& (0+255),b
 35526                           
 35527                           ; BSR set to: 1
 35528                           ;inputs_MC50.c: 131:                 BufferRF[Bptr] >>= 1;
 35529  0043AC  0EC8               	movlw	low _BufferRF
 35530  0043AE  0100               	movlb	0	; () banked
 35531  0043B0  258D               	addwf	_Bptr& (0+255),w,b
 35532  0043B2  6ED9               	movwf	fsr2l,c
 35533  0043B4  6ADA               	clrf	fsr2h,c
 35534  0043B6  0E02               	movlw	high _BufferRF
 35535  0043B8  22DA               	addwfc	fsr2h,f,c
 35536  0043BA  90D8               	bcf	status,0,c
 35537  0043BC  32DF               	rrcf	indf2,f,c
 35538                           
 35539                           ; BSR set to: 0
 35540                           ;inputs_MC50.c: 132:                 if (RFcount >= 0) {
 35541  0043BE  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 35542  0043C0  D008               	goto	i2l14152
 35543                           
 35544                           ; BSR set to: 0
 35545                           ;inputs_MC50.c: 133:                     BufferRF[Bptr] += 0x80;
 35546  0043C2  0EC8               	movlw	low _BufferRF
 35547  0043C4  258D               	addwf	_Bptr& (0+255),w,b
 35548  0043C6  6ED9               	movwf	fsr2l,c
 35549  0043C8  6ADA               	clrf	fsr2h,c
 35550  0043CA  0E02               	movlw	high _BufferRF
 35551  0043CC  22DA               	addwfc	fsr2h,f,c
 35552  0043CE  0E80               	movlw	128
 35553  0043D0  26DF               	addwf	indf2,f,c
 35554  0043D2                     i2l14152:
 35555                           
 35556                           ; BSR set to: 0
 35557                           ;inputs_MC50.c: 136:                 RFcount = 0;
 35558  0043D2  0E00               	movlw	0
 35559  0043D4  6F7F               	movwf	(_RFcount+1)& (0+255),b
 35560  0043D6  0E00               	movlw	0
 35561  0043D8  6F7E               	movwf	_RFcount& (0+255),b
 35562                           
 35563                           ; BSR set to: 0
 35564                           ;inputs_MC50.c: 138:                 if ((++BitCount & 7) == 0)
 35565  0043DA  2B8C               	incf	_BitCount& (0+255),f,b
 35566  0043DC  C08C  F001         	movff	_BitCount,??_rxi
 35567  0043E0  0E07               	movlw	7
 35568  0043E2  1601               	andwf	??_rxi^0,f,c
 35569  0043E4  A4D8               	btfss	status,2,c
 35570  0043E6  D009               	goto	i2l14160
 35571                           
 35572                           ; BSR set to: 0
 35573                           ;inputs_MC50.c: 139:                 {;inputs_MC50.c: 140:                     Bptr++;
 35574  0043E8  2B8D               	incf	_Bptr& (0+255),f,b
 35575                           
 35576                           ; BSR set to: 0
 35577                           ;inputs_MC50.c: 141:                     BufferRF[Bptr]=0;
 35578  0043EA  0EC8               	movlw	low _BufferRF
 35579  0043EC  258D               	addwf	_Bptr& (0+255),w,b
 35580  0043EE  6ED9               	movwf	fsr2l,c
 35581  0043F0  6ADA               	clrf	fsr2h,c
 35582  0043F2  0E02               	movlw	high _BufferRF
 35583  0043F4  22DA               	addwfc	fsr2h,f,c
 35584  0043F6  0E00               	movlw	0
 35585  0043F8  6EDF               	movwf	indf2,c
 35586  0043FA                     i2l14160:
 35587                           
 35588                           ; BSR set to: 0
 35589                           ;inputs_MC50.c: 143:                 if (BitCount == 13) {
 35590  0043FA  0E0D               	movlw	13
 35591  0043FC  198C               	xorwf	_BitCount& (0+255),w,b
 35592  0043FE  A4D8               	btfss	status,2,c
 35593  004400  0012               	return	
 35594                           
 35595                           ; BSR set to: 0
 35596                           ;inputs_MC50.c: 144:                     RFstate = 0;
 35597  004402  0E00               	movlw	0
 35598  004404  0101               	movlb	1	; () banked
 35599  004406  6F98               	movwf	_RFstate& (0+255),b
 35600                           
 35601                           ; BSR set to: 1
 35602                           ;inputs_MC50.c: 145:                     if(RFFull_12BIT==1)
 35603  004408  0100               	movlb	0	; () banked
 35604  00440A  058A               	decf	_RFFull_12BIT& (0+255),w,b	;volatile
 35605  00440C  A4D8               	btfss	status,2,c
 35606  00440E  D01A               	goto	i2l14172
 35607                           
 35608                           ; BSR set to: 0
 35609                           ;inputs_MC50.c: 146:                     {;inputs_MC50.c: 147:                         i
      +                          f(BufferRF_12BIT[0]==BufferRF[0] && BufferRF_12BIT[1]==BufferRF[1])
 35610  004410  0102               	movlb	2	; () banked
 35611  004412  51C8               	movf	_BufferRF& (0+255),w,b
 35612  004414  0101               	movlb	1	; () banked
 35613  004416  1987               	xorwf	_BufferRF_12BIT& (0+255),w,b
 35614  004418  A4D8               	btfss	status,2,c
 35615  00441A  D00F               	goto	i2l1615
 35616                           
 35617                           ; BSR set to: 1
 35618  00441C  0102               	movlb	2	; () banked
 35619  00441E  51C9               	movf	(_BufferRF+1)& (0+255),w,b
 35620  004420  0101               	movlb	1	; () banked
 35621  004422  1988               	xorwf	(_BufferRF_12BIT+1)& (0+255),w,b
 35622  004424  A4D8               	btfss	status,2,c
 35623  004426  D009               	goto	i2l1615
 35624                           
 35625                           ; BSR set to: 1
 35626                           ;inputs_MC50.c: 148:                         {;inputs_MC50.c: 149:                      
      +                                 RFFull = 1;
 35627  004428  0E01               	movlw	1
 35628  00442A  0100               	movlb	0	; () banked
 35629  00442C  6F8B               	movwf	_RFFull& (0+255),b	;volatile
 35630                           
 35631                           ;inputs_MC50.c: 150:                             BufferRF[2]=0;
 35632  00442E  0E00               	movlw	0
 35633  004430  0102               	movlb	2	; () banked
 35634  004432  6FCA               	movwf	(_BufferRF+2)& (0+255),b
 35635                           
 35636                           ;inputs_MC50.c: 151:                             BufferRF[3]=0;
 35637  004434  0E00               	movlw	0
 35638  004436  6FCB               	movwf	(_BufferRF+3)& (0+255),b
 35639                           
 35640                           ;inputs_MC50.c: 152:                         }
 35641  004438  0012               	return	
 35642  00443A                     i2l1615:
 35643                           
 35644                           ; BSR set to: 1
 35645                           ;inputs_MC50.c: 154:                         {;inputs_MC50.c: 155:                      
      +                                 BufferRF_12BIT[0]=BufferRF[0];
 35646  00443A  C2C8  F187         	movff	_BufferRF,_BufferRF_12BIT
 35647                           
 35648                           ;inputs_MC50.c: 156:                             BufferRF_12BIT[1]=BufferRF[1];
 35649  00443E  C2C9  F188         	movff	_BufferRF+1,_BufferRF_12BIT+1
 35650  004442  0012               	return	
 35651  004444                     i2l14172:
 35652                           
 35653                           ; BSR set to: 0
 35654                           ;inputs_MC50.c: 161:                     {;inputs_MC50.c: 162:                         R
      +                          FFull_12BIT=1;
 35655  004444  0E01               	movlw	1
 35656  004446  6F8A               	movwf	_RFFull_12BIT& (0+255),b	;volatile
 35657                           
 35658                           ; BSR set to: 0
 35659                           ;inputs_MC50.c: 163:                         BufferRF_12BIT[0]=BufferRF[0];
 35660  004448  C2C8  F187         	movff	_BufferRF,_BufferRF_12BIT
 35661                           
 35662                           ; BSR set to: 0
 35663                           ;inputs_MC50.c: 164:                         BufferRF_12BIT[1]=BufferRF[1];
 35664  00444C  C2C9  F188         	movff	_BufferRF+1,_BufferRF_12BIT+1
 35665  004450  0012               	return	
 35666  004452                     i2l14178:
 35667                           
 35668                           ; BSR set to: 0
 35669                           ;inputs_MC50.c: 168:                 RFcount++;
 35670  004452  4B7E               	infsnz	_RFcount& (0+255),f,b
 35671  004454  2B7F               	incf	(_RFcount+1)& (0+255),f,b
 35672                           
 35673                           ; BSR set to: 0
 35674                           ;inputs_MC50.c: 169:                 if (RFcount >= 10)
 35675  004456  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 35676  004458  0012               	return	
 35677  00445A  517F               	movf	(_RFcount+1)& (0+255),w,b
 35678  00445C  E104               	bnz	i2u1411_40
 35679  00445E  0E0A               	movlw	10
 35680  004460  5D7E               	subwf	_RFcount& (0+255),w,b
 35681  004462  A0D8               	btfss	status,0,c
 35682  004464  0012               	return	
 35683  004466                     i2u1411_40:
 35684  004466  D71D               	goto	i2u1393_40
 35685  004468                     i2l14184:
 35686                           
 35687                           ; BSR set to: 1
 35688                           ;inputs_MC50.c: 177:             if (RFBit) {
 35689  004468  0100               	movlb	0	; () banked
 35690  00446A  5189               	movf	_RFBit& (0+255),w,b	;volatile
 35691  00446C  B4D8               	btfsc	status,2,c
 35692  00446E  D004               	goto	i2l14188
 35693                           
 35694                           ; BSR set to: 0
 35695                           ;inputs_MC50.c: 181:                 RFstate = 4;
 35696  004470  0E04               	movlw	4
 35697  004472  0101               	movlb	1	; () banked
 35698  004474  6F98               	movwf	_RFstate& (0+255),b
 35699                           
 35700                           ;inputs_MC50.c: 183:             } else {
 35701  004476  0012               	return	
 35702  004478                     i2l14188:
 35703                           
 35704                           ; BSR set to: 0
 35705                           ;inputs_MC50.c: 184:                 RFcount--;
 35706  004478  077E               	decf	_RFcount& (0+255),f,b
 35707  00447A  A0D8               	btfss	status,0,c
 35708  00447C  077F               	decf	(_RFcount+1)& (0+255),f,b
 35709                           
 35710                           ; BSR set to: 0
 35711                           ;inputs_MC50.c: 185:                 if (RFcount < -10)
 35712  00447E  AF7F               	btfss	(_RFcount+1)& (0+255),7,b
 35713  004480  0012               	return	
 35714  004482  0EF6               	movlw	246
 35715  004484  5D7E               	subwf	_RFcount& (0+255),w,b
 35716  004486  0EFF               	movlw	255
 35717  004488  597F               	subwfb	(_RFcount+1)& (0+255),w,b
 35718  00448A  B0D8               	btfsc	status,0,c
 35719  00448C  0012               	return	
 35720  00448E  D747               	goto	i2u1398_40
 35721  004490                     i2l14194:
 35722                           
 35723                           ; BSR set to: 1
 35724                           ;inputs_MC50.c: 197:             RFstate = 1;
 35725  004490  0E01               	movlw	1
 35726  004492  6F98               	movwf	_RFstate& (0+255),b
 35727                           
 35728                           ;inputs_MC50.c: 198:             RFcount = 0;
 35729  004494  0E00               	movlw	0
 35730  004496  0100               	movlb	0	; () banked
 35731  004498  6F7F               	movwf	(_RFcount+1)& (0+255),b
 35732  00449A  0E00               	movlw	0
 35733  00449C  6F7E               	movwf	_RFcount& (0+255),b
 35734                           
 35735                           ;inputs_MC50.c: 199:             Bptr = 0;
 35736  00449E  0E00               	movlw	0
 35737  0044A0  6F8D               	movwf	_Bptr& (0+255),b
 35738                           
 35739                           ;inputs_MC50.c: 200:             BitCount = 0;
 35740  0044A2  0E00               	movlw	0
 35741  0044A4  6F8C               	movwf	_BitCount& (0+255),b
 35742                           
 35743                           ;inputs_MC50.c: 201:             break;
 35744  0044A6  0012               	return	
 35745  0044A8                     i2l14198:
 35746                           
 35747                           ; BSR set to: 0
 35748  0044A8  0101               	movlb	1	; () banked
 35749  0044AA  5198               	movf	_RFstate& (0+255),w,b
 35750  0044AC  6E01               	movwf	??_rxi^0,c
 35751  0044AE  6A02               	clrf	(??_rxi+1)^0,c
 35752                           
 35753                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 35754                           ; Switch size 1, requested type "simple"
 35755                           ; Number of cases is 1, Range of values is 0 to 0
 35756                           ; switch strategies available:
 35757                           ; Name         Instructions Cycles
 35758                           ; simple_byte            4     3 (average)
 35759                           ;	Chosen strategy is simple_byte
 35760  0044B0  5002               	movf	(??_rxi+1)^0,w,c
 35761  0044B2  0A00               	xorlw	0	; case 0
 35762  0044B4  A4D8               	btfss	status,2,c
 35763  0044B6  D7EC               	goto	i2l14194
 35764                           
 35765                           ; BSR set to: 1
 35766                           ; Switch size 1, requested type "simple"
 35767                           ; Number of cases is 6, Range of values is 0 to 5
 35768                           ; switch strategies available:
 35769                           ; Name         Instructions Cycles
 35770                           ; simple_byte           19    10 (average)
 35771                           ;	Chosen strategy is simple_byte
 35772  0044B8  5001               	movf	??_rxi^0,w,c
 35773  0044BA  0A00               	xorlw	0	; case 0
 35774  0044BC  B4D8               	btfsc	status,2,c
 35775  0044BE  D7E8               	goto	i2l14194
 35776  0044C0  0A01               	xorlw	1	; case 1
 35777  0044C2  B4D8               	btfsc	status,2,c
 35778  0044C4  D735               	goto	i2l14124
 35779  0044C6  0A03               	xorlw	3	; case 2
 35780  0044C8  B4D8               	btfsc	status,2,c
 35781  0044CA  D6D8               	goto	i2l14088
 35782  0044CC  0A01               	xorlw	1	; case 3
 35783  0044CE  B4D8               	btfsc	status,2,c
 35784  0044D0  D6EC               	goto	i2l14098
 35785  0044D2  0A07               	xorlw	7	; case 4
 35786  0044D4  B4D8               	btfsc	status,2,c
 35787  0044D6  D763               	goto	i2l14142
 35788  0044D8  0A01               	xorlw	1	; case 5
 35789  0044DA  B4D8               	btfsc	status,2,c
 35790  0044DC  D7C5               	goto	i2l14184
 35791  0044DE  D7D8               	goto	i2l14194
 35792  0044E0                     __end_of_rxi:
 35793                           	callstack 0
 35794                           
 35795 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 35796 ;; Defined at:
 35797 ;;		line 147 in file "mcc_generated_files/tmr0.c"
 35798 ;; Parameters:    Size  Location     Type
 35799 ;;		None
 35800 ;; Auto vars:     Size  Location     Type
 35801 ;;		None
 35802 ;; Return value:  Size  Location     Type
 35803 ;;                  1    wreg      void 
 35804 ;; Registers used:
 35805 ;;		None
 35806 ;; Tracked objects:
 35807 ;;		On entry : 3F/2
 35808 ;;		On exit  : 3F/2
 35809 ;;		Unchanged: 3F/0
 35810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35811 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35812 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35814 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35815 ;;Total ram usage:        0 bytes
 35816 ;; Hardware stack levels used: 1
 35817 ;; This function calls:
 35818 ;;		Nothing
 35819 ;; This function is called by:
 35820 ;;		_TMR0_Initialize
 35821 ;;		_TMR0_ISR
 35822 ;; This function uses a non-reentrant model
 35823 ;;
 35824                           
 35825                           	psect	text200
 35826  0092AE                     __ptext200:
 35827                           	callstack 0
 35828  0092AE                     _TMR0_DefaultInterruptHandler:
 35829                           	callstack 15
 35830                           
 35831                           ; BSR set to: 2
 35832                           
 35833                           ;incstack = 0
 35834  0092AE  0012               	return		;funcret
 35835  0092B0                     __end_of_TMR0_DefaultInterruptHandler:
 35836                           	callstack 0
 35837                           
 35838 ;; *************** function _EUSART1_Transmit_ISR *****************
 35839 ;; Defined at:
 35840 ;;		line 197 in file "mcc_generated_files/eusart1.c"
 35841 ;; Parameters:    Size  Location     Type
 35842 ;;		None
 35843 ;; Auto vars:     Size  Location     Type
 35844 ;;		None
 35845 ;; Return value:  Size  Location     Type
 35846 ;;                  1    wreg      void 
 35847 ;; Registers used:
 35848 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 35849 ;; Tracked objects:
 35850 ;;		On entry : 3F/2
 35851 ;;		On exit  : 30/0
 35852 ;;		Unchanged: 0/0
 35853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35854 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35855 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35857 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35858 ;;Total ram usage:        0 bytes
 35859 ;; Hardware stack levels used: 1
 35860 ;; This function calls:
 35861 ;;		Nothing
 35862 ;; This function is called by:
 35863 ;;		_EUSART1_Initialize
 35864 ;;		_INTERRUPT_InterruptManager
 35865 ;; This function uses a non-reentrant model
 35866 ;;
 35867                           
 35868                           	psect	text201
 35869  008A98                     __ptext201:
 35870                           	callstack 0
 35871  008A98                     _EUSART1_Transmit_ISR:
 35872                           	callstack 16
 35873                           
 35874                           ; BSR set to: 2
 35875                           ;mcc_generated_files/eusart1.c: 201:     if(sizeof(eusart1TxBuffer) > eusart1TxBufferRem
      +                          aining)
 35876                           
 35877                           ; BSR set to: 2
 35878                           ;incstack = 0
 35879  008A98  0E08               	movlw	8
 35880  008A9A  0101               	movlb	1	; () banked
 35881  008A9C  61FE               	cpfslt	_eusart1TxBufferRemaining& (0+255),b
 35882  008A9E  D012               	goto	i2l106
 35883                           
 35884                           ; BSR set to: 1
 35885                           ;mcc_generated_files/eusart1.c: 202:     {;mcc_generated_files/eusart1.c: 203:         T
      +                          X1REG = eusart1TxBuffer[eusart1TxTail++];
 35886  008AA0  0E84               	movlw	low _eusart1TxBuffer
 35887  008AA2  0100               	movlb	0	; () banked
 35888  008AA4  2596               	addwf	_eusart1TxTail& (0+255),w,b	;volatile
 35889  008AA6  6ED9               	movwf	fsr2l,c
 35890  008AA8  6ADA               	clrf	fsr2h,c
 35891  008AAA  0E02               	movlw	high _eusart1TxBuffer
 35892  008AAC  22DA               	addwfc	fsr2h,f,c
 35893  008AAE  50DF               	movf	indf2,w,c
 35894  008AB0  6E9A               	movwf	154,c	;volatile
 35895                           
 35896                           ; BSR set to: 0
 35897  008AB2  2B96               	incf	_eusart1TxTail& (0+255),f,b	;volatile
 35898                           
 35899                           ; BSR set to: 0
 35900                           ;mcc_generated_files/eusart1.c: 204:         if(sizeof(eusart1TxBuffer) <= eusart1TxTail
      +                          )
 35901  008AB4  0E07               	movlw	7
 35902  008AB6  6596               	cpfsgt	_eusart1TxTail& (0+255),b
 35903  008AB8  D002               	goto	i2l16202
 35904                           
 35905                           ; BSR set to: 0
 35906                           ;mcc_generated_files/eusart1.c: 205:         {;mcc_generated_files/eusart1.c: 206:      
      +                                 eusart1TxTail = 0;
 35907  008ABA  0E00               	movlw	0
 35908  008ABC  6F96               	movwf	_eusart1TxTail& (0+255),b	;volatile
 35909  008ABE                     i2l16202:
 35910                           
 35911                           ; BSR set to: 0
 35912                           ;mcc_generated_files/eusart1.c: 208:         eusart1TxBufferRemaining++;
 35913  008ABE  0101               	movlb	1	; () banked
 35914  008AC0  2BFE               	incf	_eusart1TxBufferRemaining& (0+255),f,b	;volatile
 35915                           
 35916                           ;mcc_generated_files/eusart1.c: 209:     }
 35917  008AC2  0012               	return	
 35918  008AC4                     i2l106:
 35919                           
 35920                           ; BSR set to: 1
 35921                           ;mcc_generated_files/eusart1.c: 211:     {;mcc_generated_files/eusart1.c: 212:         P
      +                          IE3bits.TX1IE = 0;
 35922  008AC4  010E               	movlb	14	; () banked
 35923  008AC6  99C5               	bcf	197,4,b	;volatile
 35924  008AC8  0012               	return		;funcret
 35925  008ACA                     __end_of_EUSART1_Transmit_ISR:
 35926                           	callstack 0
 35927                           
 35928 ;; *************** function _EUSART1_Receive_ISR *****************
 35929 ;; Defined at:
 35930 ;;		line 216 in file "mcc_generated_files/eusart1.c"
 35931 ;; Parameters:    Size  Location     Type
 35932 ;;		None
 35933 ;; Auto vars:     Size  Location     Type
 35934 ;;		None
 35935 ;; Return value:  Size  Location     Type
 35936 ;;                  1    wreg      void 
 35937 ;; Registers used:
 35938 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 35939 ;; Tracked objects:
 35940 ;;		On entry : 3F/2
 35941 ;;		On exit  : 0/0
 35942 ;;		Unchanged: 0/0
 35943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35944 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35945 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35946 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35947 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35948 ;;Total ram usage:        0 bytes
 35949 ;; Hardware stack levels used: 1
 35950 ;; Hardware stack levels required when called: 2
 35951 ;; This function calls:
 35952 ;;		Absolute function
 35953 ;;		_EUSART1_DefaultErrorHandler
 35954 ;;		_EUSART1_DefaultFramingErrorHandler
 35955 ;;		_EUSART1_DefaultOverrunErrorHandler
 35956 ;;		_EUSART1_RxDataHandler
 35957 ;; This function is called by:
 35958 ;;		_EUSART1_Initialize
 35959 ;;		_INTERRUPT_InterruptManager
 35960 ;; This function uses a non-reentrant model
 35961 ;;
 35962                           
 35963                           	psect	text202
 35964  007422                     __ptext202:
 35965                           	callstack 0
 35966  007422                     _EUSART1_Receive_ISR:
 35967                           	callstack 14
 35968                           
 35969                           ; BSR set to: 2
 35970                           ;mcc_generated_files/eusart1.c: 219:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
 35971                           
 35972                           ;incstack = 0
 35973  007422  0E74               	movlw	low _eusart1RxStatusBuffer
 35974  007424  0100               	movlb	0	; () banked
 35975  007426  2595               	addwf	_eusart1RxHead& (0+255),w,b	;volatile
 35976  007428  6ED9               	movwf	fsr2l,c
 35977  00742A  6ADA               	clrf	fsr2h,c
 35978  00742C  0E02               	movlw	high _eusart1RxStatusBuffer
 35979  00742E  22DA               	addwfc	fsr2h,f,c
 35980  007430  0E00               	movlw	0
 35981  007432  6EDF               	movwf	indf2,c
 35982                           
 35983                           ; BSR set to: 0
 35984                           ;mcc_generated_files/eusart1.c: 221:     if(RC1STAbits.FERR){
 35985  007434  A49D               	btfss	157,2,c	;volatile
 35986  007436  D013               	goto	i2u1822_49
 35987                           
 35988                           ; BSR set to: 0
 35989                           ;mcc_generated_files/eusart1.c: 222:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
 35990  007438  0E74               	movlw	low _eusart1RxStatusBuffer
 35991  00743A  2595               	addwf	_eusart1RxHead& (0+255),w,b	;volatile
 35992  00743C  6ED9               	movwf	fsr2l,c
 35993  00743E  6ADA               	clrf	fsr2h,c
 35994  007440  0E02               	movlw	high _eusart1RxStatusBuffer
 35995  007442  22DA               	addwfc	fsr2h,f,c
 35996  007444  0102               	movlb	2	; () banked
 35997  007446  82DF               	bsf	indf2,1,c
 35998                           
 35999                           ; BSR set to: 2
 36000                           ;mcc_generated_files/eusart1.c: 223:         EUSART1_FramingErrorHandler();
 36001  007448  D801               	call	i2u1822_48
 36002  00744A  D009               	goto	i2u1822_49
 36003  00744C                     i2u1822_48:
 36004  00744C  0005               	push	
 36005  00744E  6EFA               	movwf	pclath,c
 36006  007450  51E9               	movf	_EUSART1_FramingErrorHandler& (0+255),w,b
 36007  007452  6EFD               	movwf	tosl,c
 36008  007454  51EA               	movf	(_EUSART1_FramingErrorHandler+1)& (0+255),w,b
 36009  007456  6EFE               	movwf	tosh,c
 36010  007458  6AFF               	clrf	tosu,c
 36011  00745A  50FA               	movf	pclath,w,c
 36012  00745C  0012               	return		;indir
 36013  00745E                     i2u1822_49:
 36014                           
 36015                           ;mcc_generated_files/eusart1.c: 226:     if(RC1STAbits.OERR){
 36016  00745E  A29D               	btfss	157,1,c	;volatile
 36017  007460  D014               	goto	i2u1824_49
 36018                           
 36019                           ;mcc_generated_files/eusart1.c: 227:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
 36020  007462  0E74               	movlw	low _eusart1RxStatusBuffer
 36021  007464  0100               	movlb	0	; () banked
 36022  007466  2595               	addwf	_eusart1RxHead& (0+255),w,b	;volatile
 36023  007468  6ED9               	movwf	fsr2l,c
 36024  00746A  6ADA               	clrf	fsr2h,c
 36025  00746C  0E02               	movlw	high _eusart1RxStatusBuffer
 36026  00746E  22DA               	addwfc	fsr2h,f,c
 36027  007470  0102               	movlb	2	; () banked
 36028  007472  84DF               	bsf	indf2,2,c
 36029                           
 36030                           ; BSR set to: 2
 36031                           ;mcc_generated_files/eusart1.c: 228:         EUSART1_OverrunErrorHandler();
 36032  007474  D801               	call	i2u1824_48
 36033  007476  D009               	goto	i2u1824_49
 36034  007478                     i2u1824_48:
 36035  007478  0005               	push	
 36036  00747A  6EFA               	movwf	pclath,c
 36037  00747C  51E7               	movf	_EUSART1_OverrunErrorHandler& (0+255),w,b
 36038  00747E  6EFD               	movwf	tosl,c
 36039  007480  51E8               	movf	(_EUSART1_OverrunErrorHandler+1)& (0+255),w,b
 36040  007482  6EFE               	movwf	tosh,c
 36041  007484  6AFF               	clrf	tosu,c
 36042  007486  50FA               	movf	pclath,w,c
 36043  007488  0012               	return		;indir
 36044  00748A                     i2u1824_49:
 36045                           
 36046                           ;mcc_generated_files/eusart1.c: 231:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
 36047  00748A  0E74               	movlw	low _eusart1RxStatusBuffer
 36048  00748C  0100               	movlb	0	; () banked
 36049  00748E  2595               	addwf	_eusart1RxHead& (0+255),w,b	;volatile
 36050  007490  6ED9               	movwf	fsr2l,c
 36051  007492  6ADA               	clrf	fsr2h,c
 36052  007494  0E02               	movlw	high _eusart1RxStatusBuffer
 36053  007496  22DA               	addwfc	fsr2h,f,c
 36054  007498  50DF               	movf	indf2,w,c
 36055  00749A  B4D8               	btfsc	status,2,c
 36056  00749C  D00C               	goto	i2l16222
 36057                           
 36058                           ; BSR set to: 0
 36059                           ;mcc_generated_files/eusart1.c: 232:         EUSART1_ErrorHandler();
 36060  00749E  D801               	call	i2u1826_48
 36061  0074A0  0012               	return	
 36062  0074A2                     i2u1826_48:
 36063  0074A2  0005               	push	
 36064  0074A4  6EFA               	movwf	pclath,c
 36065  0074A6  0102               	movlb	2	; () banked
 36066  0074A8  51E5               	movf	_EUSART1_ErrorHandler& (0+255),w,b
 36067  0074AA  6EFD               	movwf	tosl,c
 36068  0074AC  51E6               	movf	(_EUSART1_ErrorHandler+1)& (0+255),w,b
 36069  0074AE  6EFE               	movwf	tosh,c
 36070  0074B0  6AFF               	clrf	tosu,c
 36071  0074B2  50FA               	movf	pclath,w,c
 36072  0074B4  0012               	return		;indir
 36073  0074B6                     i2l16222:
 36074                           
 36075                           ; BSR set to: 0
 36076                           ;mcc_generated_files/eusart1.c: 234:         EUSART1_RxDataHandler();
 36077  0074B6  EC7E  F047         	call	_EUSART1_RxDataHandler	;wreg free
 36078  0074BA  0012               	return		;funcret
 36079  0074BC                     __end_of_EUSART1_Receive_ISR:
 36080                           	callstack 0
 36081                           
 36082 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
 36083 ;; Defined at:
 36084 ;;		line 252 in file "mcc_generated_files/eusart1.c"
 36085 ;; Parameters:    Size  Location     Type
 36086 ;;		None
 36087 ;; Auto vars:     Size  Location     Type
 36088 ;;		None
 36089 ;; Return value:  Size  Location     Type
 36090 ;;                  1    wreg      void 
 36091 ;; Registers used:
 36092 ;;		None
 36093 ;; Tracked objects:
 36094 ;;		On entry : 3F/2
 36095 ;;		On exit  : 3F/2
 36096 ;;		Unchanged: 3F/0
 36097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36098 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36099 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36101 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36102 ;;Total ram usage:        0 bytes
 36103 ;; Hardware stack levels used: 1
 36104 ;; This function calls:
 36105 ;;		Nothing
 36106 ;; This function is called by:
 36107 ;;		_EUSART1_Initialize
 36108 ;;		_EUSART1_Receive_ISR
 36109 ;; This function uses a non-reentrant model
 36110 ;;
 36111                           
 36112                           	psect	text203
 36113  009268                     __ptext203:
 36114                           	callstack 0
 36115  009268                     _EUSART1_DefaultOverrunErrorHandler:
 36116                           	callstack 15
 36117                           
 36118                           ; BSR set to: 2
 36119                           ;mcc_generated_files/eusart1.c: 255:     RC1STAbits.CREN = 0;
 36120                           
 36121                           ;incstack = 0
 36122  009268  989D               	bcf	157,4,c	;volatile
 36123                           
 36124                           ;mcc_generated_files/eusart1.c: 256:     RC1STAbits.CREN = 1;
 36125  00926A  889D               	bsf	157,4,c	;volatile
 36126                           
 36127                           ; BSR set to: 2
 36128  00926C  0012               	return		;funcret
 36129  00926E                     __end_of_EUSART1_DefaultOverrunErrorHandler:
 36130                           	callstack 0
 36131                           
 36132 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
 36133 ;; Defined at:
 36134 ;;		line 250 in file "mcc_generated_files/eusart1.c"
 36135 ;; Parameters:    Size  Location     Type
 36136 ;;		None
 36137 ;; Auto vars:     Size  Location     Type
 36138 ;;		None
 36139 ;; Return value:  Size  Location     Type
 36140 ;;                  1    wreg      void 
 36141 ;; Registers used:
 36142 ;;		None
 36143 ;; Tracked objects:
 36144 ;;		On entry : 3F/2
 36145 ;;		On exit  : 3F/2
 36146 ;;		Unchanged: 3F/0
 36147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36148 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36149 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36151 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36152 ;;Total ram usage:        0 bytes
 36153 ;; Hardware stack levels used: 1
 36154 ;; This function calls:
 36155 ;;		Nothing
 36156 ;; This function is called by:
 36157 ;;		_EUSART1_Initialize
 36158 ;;		_EUSART1_Receive_ISR
 36159 ;; This function uses a non-reentrant model
 36160 ;;
 36161                           
 36162                           	psect	text204
 36163  0092B0                     __ptext204:
 36164                           	callstack 0
 36165  0092B0                     _EUSART1_DefaultFramingErrorHandler:
 36166                           	callstack 15
 36167                           
 36168                           ; BSR set to: 2
 36169                           
 36170                           ; BSR set to: 2
 36171                           ;incstack = 0
 36172  0092B0  0012               	return		;funcret
 36173  0092B2                     __end_of_EUSART1_DefaultFramingErrorHandler:
 36174                           	callstack 0
 36175                           
 36176 ;; *************** function _EUSART1_DefaultErrorHandler *****************
 36177 ;; Defined at:
 36178 ;;		line 260 in file "mcc_generated_files/eusart1.c"
 36179 ;; Parameters:    Size  Location     Type
 36180 ;;		None
 36181 ;; Auto vars:     Size  Location     Type
 36182 ;;		None
 36183 ;; Return value:  Size  Location     Type
 36184 ;;                  1    wreg      void 
 36185 ;; Registers used:
 36186 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 36187 ;; Tracked objects:
 36188 ;;		On entry : 3F/2
 36189 ;;		On exit  : 3F/0
 36190 ;;		Unchanged: 0/0
 36191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36195 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36196 ;;Total ram usage:        0 bytes
 36197 ;; Hardware stack levels used: 1
 36198 ;; Hardware stack levels required when called: 1
 36199 ;; This function calls:
 36200 ;;		_EUSART1_RxDataHandler
 36201 ;; This function is called by:
 36202 ;;		_EUSART1_Initialize
 36203 ;;		_EUSART1_Receive_ISR
 36204 ;; This function uses a non-reentrant model
 36205 ;;
 36206                           
 36207                           	psect	text205
 36208  00926E                     __ptext205:
 36209                           	callstack 0
 36210  00926E                     _EUSART1_DefaultErrorHandler:
 36211                           	callstack 14
 36212                           
 36213                           ; BSR set to: 2
 36214                           ;mcc_generated_files/eusart1.c: 261:     EUSART1_RxDataHandler();
 36215                           
 36216                           ; BSR set to: 2
 36217                           ;incstack = 0
 36218  00926E  EC7E  F047         	call	_EUSART1_RxDataHandler	;wreg free
 36219                           
 36220                           ; BSR set to: 0
 36221  009272  0012               	return		;funcret
 36222  009274                     __end_of_EUSART1_DefaultErrorHandler:
 36223                           	callstack 0
 36224                           
 36225 ;; *************** function _EUSART1_RxDataHandler *****************
 36226 ;; Defined at:
 36227 ;;		line 240 in file "mcc_generated_files/eusart1.c"
 36228 ;; Parameters:    Size  Location     Type
 36229 ;;		None
 36230 ;; Auto vars:     Size  Location     Type
 36231 ;;		None
 36232 ;; Return value:  Size  Location     Type
 36233 ;;                  1    wreg      void 
 36234 ;; Registers used:
 36235 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 36236 ;; Tracked objects:
 36237 ;;		On entry : 3D/0
 36238 ;;		On exit  : 3F/0
 36239 ;;		Unchanged: 0/0
 36240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36241 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36242 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36243 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36244 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36245 ;;Total ram usage:        0 bytes
 36246 ;; Hardware stack levels used: 1
 36247 ;; This function calls:
 36248 ;;		Nothing
 36249 ;; This function is called by:
 36250 ;;		_EUSART1_Receive_ISR
 36251 ;;		_EUSART1_DefaultErrorHandler
 36252 ;; This function uses a non-reentrant model
 36253 ;;
 36254                           
 36255                           	psect	text206
 36256  008EFC                     __ptext206:
 36257                           	callstack 0
 36258  008EFC                     _EUSART1_RxDataHandler:
 36259                           	callstack 15
 36260                           
 36261                           ;mcc_generated_files/eusart1.c: 242:     eusart1RxBuffer[eusart1RxHead++] = RC1REG;
 36262                           
 36263                           ; BSR set to: 0
 36264                           ;incstack = 0
 36265  008EFC  0E7C               	movlw	low _eusart1RxBuffer
 36266  008EFE  0100               	movlb	0	; () banked
 36267  008F00  2595               	addwf	_eusart1RxHead& (0+255),w,b	;volatile
 36268  008F02  6ED9               	movwf	fsr2l,c
 36269  008F04  6ADA               	clrf	fsr2h,c
 36270  008F06  0E02               	movlw	high _eusart1RxBuffer
 36271  008F08  22DA               	addwfc	fsr2h,f,c
 36272  008F0A  CF99 FFDF          	movff	3993,indf2	;volatile
 36273                           
 36274                           ; BSR set to: 0
 36275  008F0E  2B95               	incf	_eusart1RxHead& (0+255),f,b	;volatile
 36276                           
 36277                           ; BSR set to: 0
 36278                           ;mcc_generated_files/eusart1.c: 243:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
 36279  008F10  0E07               	movlw	7
 36280  008F12  6595               	cpfsgt	_eusart1RxHead& (0+255),b
 36281  008F14  D002               	goto	i2l12544
 36282                           
 36283                           ; BSR set to: 0
 36284                           ;mcc_generated_files/eusart1.c: 244:     {;mcc_generated_files/eusart1.c: 245:         e
      +                          usart1RxHead = 0;
 36285  008F16  0E00               	movlw	0
 36286  008F18  6F95               	movwf	_eusart1RxHead& (0+255),b	;volatile
 36287  008F1A                     i2l12544:
 36288                           
 36289                           ; BSR set to: 0
 36290                           ;mcc_generated_files/eusart1.c: 247:     eusart1RxCount++;
 36291  008F1A  2B93               	incf	_eusart1RxCount& (0+255),f,b	;volatile
 36292                           
 36293                           ; BSR set to: 0
 36294  008F1C  0012               	return		;funcret
 36295  008F1E                     __end_of_EUSART1_RxDataHandler:
 36296                           	callstack 0
 36297                           
 36298                           	psect	text207
 36299  000000                     __ptext207:
 36300                           	callstack 0
 36301                           
 36302                           	psect	rparam
 36303  0000                     
 36304                           	psect	temp
 36305  000050                     btemp:
 36306                           	callstack 0
 36307  000050                     	ds	1
 36308  0000                     int$flags	set	btemp
 36309  0000                     wtemp8	set	btemp+1
 36310  0000                     ttemp5	set	btemp+1
 36311  0000                     ttemp6	set	btemp+4
 36312  0000                     ttemp7	set	btemp+8
 36313                           
 36314                           	psect	idloc
 36315                           
 36316                           ;Config register IDLOC0 @ 0x200000
 36317                           ;	unspecified, using default values
 36318  200000                     	org	2097152
 36319  200000  0FFF               	dw	4095
 36320                           
 36321                           ;Config register IDLOC1 @ 0x200002
 36322                           ;	unspecified, using default values
 36323  200002                     	org	2097154
 36324  200002  0FFF               	dw	4095
 36325                           
 36326                           ;Config register IDLOC2 @ 0x200004
 36327                           ;	unspecified, using default values
 36328  200004                     	org	2097156
 36329  200004  0FFF               	dw	4095
 36330                           
 36331                           ;Config register IDLOC3 @ 0x200006
 36332                           ;	unspecified, using default values
 36333  200006                     	org	2097158
 36334  200006  0FFF               	dw	4095
 36335                           
 36336                           ;Config register IDLOC4 @ 0x200008
 36337                           ;	unspecified, using default values
 36338  200008                     	org	2097160
 36339  200008  0FFF               	dw	4095
 36340                           
 36341                           ;Config register IDLOC5 @ 0x20000A
 36342                           ;	unspecified, using default values
 36343  20000A                     	org	2097162
 36344  20000A  0FFF               	dw	4095
 36345                           
 36346                           ;Config register IDLOC6 @ 0x20000C
 36347                           ;	unspecified, using default values
 36348  20000C                     	org	2097164
 36349  20000C  0FFF               	dw	4095
 36350                           
 36351                           ;Config register IDLOC7 @ 0x20000E
 36352                           ;	unspecified, using default values
 36353  20000E                     	org	2097166
 36354  20000E  0FFF               	dw	4095
 36355                           
 36356                           	psect	config
 36357                           
 36358                           ;Config register CONFIG1L @ 0x300000
 36359                           ;	External Oscillator mode Selection bits
 36360                           ;	FEXTOSC = OFF, Oscillator not enabled
 36361                           ;	Power-up default value for COSC bits
 36362                           ;	RSTOSC = HFINTOSC_64MHZ, HFINTOSC with HFFRQ = 64 MHz and CDIV = 1:1
 36363  300000                     	org	3145728
 36364  300000  8C                 	db	140
 36365                           
 36366                           ;Config register CONFIG1H @ 0x300001
 36367                           ;	Clock Out Enable bit
 36368                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
 36369                           ;	Clock Switch Enable bit
 36370                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 36371                           ;	Fail-Safe Clock Monitor Enable bit
 36372                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
 36373  300001                     	org	3145729
 36374  300001  FF                 	db	255
 36375                           
 36376                           ;Config register CONFIG2L @ 0x300002
 36377                           ;	Master Clear Enable bit
 36378                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
 36379                           ;	Power-up Timer Enable bit
 36380                           ;	PWRTE = ON, Power up timer enabled
 36381                           ;	Low-power BOR enable bit
 36382                           ;	LPBOREN = OFF, ULPBOR disabled
 36383                           ;	Brown-out Reset Enable bits
 36384                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
 36385  300002                     	org	3145730
 36386  300002  FD                 	db	253
 36387                           
 36388                           ;Config register CONFIG2H @ 0x300003
 36389                           ;	Brown Out Reset Voltage selection bits
 36390                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
 36391                           ;	ZCD Disable bit
 36392                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
 36393                           ;	PPSLOCK bit One-Way Set Enable bit
 36394                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
 36395                           ;	Stack Full/Underflow Reset Enable bit
 36396                           ;	STVREN = ON, Stack full/underflow will cause Reset
 36397                           ;	Debugger Enable bit
 36398                           ;	DEBUG = OFF, Background debugger disabled
 36399                           ;	Extended Instruction Set Enable bit
 36400                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
 36401  300003                     	org	3145731
 36402  300003  FF                 	db	255
 36403                           
 36404                           ;Config register CONFIG3L @ 0x300004
 36405                           ;	WDT Period Select bits
 36406                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 36407                           ;	WDT operating mode
 36408                           ;	WDTE = SWDTEN, WDT enabled/disabled by SWDTEN bit
 36409  300004                     	org	3145732
 36410  300004  BF                 	db	191
 36411                           
 36412                           ;Config register CONFIG3H @ 0x300005
 36413                           ;	WDT Window Select bits
 36414                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 36415                           ;	WDT input clock selector
 36416                           ;	WDTCCS = SC, Software Control
 36417  300005                     	org	3145733
 36418  300005  FF                 	db	255
 36419                           
 36420                           ;Config register CONFIG4L @ 0x300006
 36421                           ;	Write Protection Block 0
 36422                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
 36423                           ;	Write Protection Block 1
 36424                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
 36425                           ;	Write Protection Block 2
 36426                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
 36427                           ;	Write Protection Block 3
 36428                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
 36429  300006                     	org	3145734
 36430  300006  FF                 	db	255
 36431                           
 36432                           ;Config register CONFIG4H @ 0x300007
 36433                           ;	Configuration Register Write Protection bit
 36434                           ;	WRTC = OFF, Configuration registers (300000-30000Bh) not write-protected
 36435                           ;	Boot Block Write Protection bit
 36436                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 36437                           ;	Data EEPROM Write Protection bit
 36438                           ;	WRTD = OFF, Data EEPROM not write-protected
 36439                           ;	Scanner Enable bit
 36440                           ;	SCANE = ON, Scanner module is available for use, SCANMD bit can control the module
 36441                           ;	Low Voltage Programming Enable bit
 36442                           ;	LVP = OFF, HV on MCLR/VPP must be used for programming
 36443  300007                     	org	3145735
 36444  300007  DF                 	db	223
 36445                           
 36446                           ;Config register CONFIG5L @ 0x300008
 36447                           ;	UserNVM Program Memory Code Protection bit
 36448                           ;	CP = ON, UserNVM code protection enabled
 36449                           ;	DataNVM Memory Code Protection bit
 36450                           ;	CPD = ON, DataNVM code protection enabled
 36451  300008                     	org	3145736
 36452  300008  FC                 	db	252
 36453                           
 36454                           ;Config register CONFIG5H @ 0x300009
 36455                           ;	unspecified, using default values
 36456  300009                     	org	3145737
 36457  300009  FF                 	db	255
 36458                           
 36459                           ;Config register CONFIG6L @ 0x30000A
 36460                           ;	Table Read Protection Block 0
 36461                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
 36462                           ;	Table Read Protection Block 1
 36463                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
 36464                           ;	Table Read Protection Block 2
 36465                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
 36466                           ;	Table Read Protection Block 3
 36467                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
 36468  30000A                     	org	3145738
 36469  30000A  FF                 	db	255
 36470                           
 36471                           ;Config register CONFIG6H @ 0x30000B
 36472                           ;	Boot Block Table Read Protection bit
 36473                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 36474  30000B                     	org	3145739
 36475  30000B  FF                 	db	255
 36476                           tosu	equ	0xFFF
 36477                           tosh	equ	0xFFE
 36478                           tosl	equ	0xFFD
 36479                           stkptr	equ	0xFFC
 36480                           pclatu	equ	0xFFB
 36481                           pclath	equ	0xFFA
 36482                           pcl	equ	0xFF9
 36483                           tblptru	equ	0xFF8
 36484                           tblptrh	equ	0xFF7
 36485                           tblptrl	equ	0xFF6
 36486                           tablat	equ	0xFF5
 36487                           prodh	equ	0xFF4
 36488                           prodl	equ	0xFF3
 36489                           indf0	equ	0xFEF
 36490                           postinc0	equ	0xFEE
 36491                           postdec0	equ	0xFED
 36492                           preinc0	equ	0xFEC
 36493                           plusw0	equ	0xFEB
 36494                           fsr0h	equ	0xFEA
 36495                           fsr0l	equ	0xFE9
 36496                           wreg	equ	0xFE8
 36497                           indf1	equ	0xFE7
 36498                           postinc1	equ	0xFE6
 36499                           postdec1	equ	0xFE5
 36500                           preinc1	equ	0xFE4
 36501                           plusw1	equ	0xFE3
 36502                           fsr1h	equ	0xFE2
 36503                           fsr1l	equ	0xFE1
 36504                           bsr	equ	0xFE0
 36505                           indf2	equ	0xFDF
 36506                           postinc2	equ	0xFDE
 36507                           postdec2	equ	0xFDD
 36508                           preinc2	equ	0xFDC
 36509                           plusw2	equ	0xFDB
 36510                           fsr2h	equ	0xFDA
 36511                           fsr2l	equ	0xFD9
 36512                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    32
    Data        46
    BSS         821
    Persistent  19
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     58      79
    BANK0           160     32     154
    BANK1           256      0     255
    BANK2           256      0     241
    BANK3           256      0     247
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          136      0       0

Pointer List with Targets:

    i2c_write1ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0
		 -> cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    i2c_read1ByteRegister@d2.data	PTR unsigned char  size(2) Largest target is 0
		 -> cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    i2c_read2ByteRegister@result.data	PTR unsigned char  size(2) Largest target is 0
		 -> cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    i2c_write2ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0
		 -> cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    I2C1_Read1ByteRegister@returnValue.data	PTR unsigned char  size(2) Largest target is 0
		 -> cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    I2C1_Read2ByteRegister@returnValue.data	PTR unsigned char  size(2) Largest target is 0
		 -> cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    I2C1_Write1ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0
		 -> cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    I2C1_Write2ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0
		 -> cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    I2C1_DO_TX$8214$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_DO_RX$8220$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_DO_TX_EMPTY$8226$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_DO_RX_EMPTY$8232$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_DO_TX_EMPTY$8231	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_DO_TX_EMPTY$8226	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F535(), 
		 -> wr2RegCompleteHandler@i2c1_master_example$F523(), wr1RegCompleteHandler@i2c1_master_example$F517(), rd2RegCompleteHandler@i2c1_master_example$F511(), rd1RegCompleteHandler@i2c1_master_example$F500(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), 

    I2C1_DO_RX$8225	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_DO_RX$8220	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F535(), 
		 -> wr2RegCompleteHandler@i2c1_master_example$F523(), wr1RegCompleteHandler@i2c1_master_example$F517(), rd2RegCompleteHandler@i2c1_master_example$F511(), rd1RegCompleteHandler@i2c1_master_example$F500(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), 

    I2C1_DO_TX$8219	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_DO_TX$8214	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F535(), 
		 -> wr2RegCompleteHandler@i2c1_master_example$F523(), wr1RegCompleteHandler@i2c1_master_example$F517(), rd2RegCompleteHandler@i2c1_master_example$F511(), rd1RegCompleteHandler@i2c1_master_example$F500(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), 

    I2C1_MasterFsm$8213	const PTR FTN()enum E10442 size(2) Largest target is 1
		 -> I2C1_DO_ADDRESS_NACK(), I2C1_DO_RESET(), I2C1_DO_RX_NACK_RESTART(), I2C1_DO_RX_NACK_STOP(), 
		 -> I2C1_DO_RX_ACK(), I2C1_DO_SEND_STOP(), I2C1_DO_SEND_RESTART(), I2C1_DO_SEND_RESTART_WRITE(), 
		 -> I2C1_DO_SEND_RESTART_READ(), I2C1_DO_TX_EMPTY(), I2C1_DO_RCEN(), I2C1_DO_RX(), 
		 -> I2C1_DO_TX(), I2C1_DO_SEND_ADR_WRITE(), I2C1_DO_SEND_ADR_READ(), I2C1_DO_IDLE(), 

    I2C1_CallbackReturnStop@funPtr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_CallbackReturnReset@funPtr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    Absolute function$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    S935$0$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    memcpy@d1	PTR void  size(2) Largest target is 17
		 -> controlSelectRemote@tempSerial(BANK0[4]), Decrypt@Buffer(COMRAM[4]), SecureKeyGen@SKEYtemp(COMRAM[8]), SecureKeyGen@HOPtemp(COMRAM[4]), 
		 -> SecureKeyGen@Buffer(COMRAM[8]), NormalKeyGen@SKEYtemp(COMRAM[4]), NormalKeyGen@SEED(BANK2[4]), NormalKeyGen@HOPtemp(COMRAM[4]), 
		 -> NormalKeyGen@Buffer(COMRAM[8]), DKEY(BANK2[8]), classic_data(BANK2[16]), I2C1_WriteNBytes@dat(COMRAM[17]), 
		 -> i2c_writeNBytes@dat(COMRAM[17]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 17
		 -> controlSelectRemote@tempSerial(BANK0[4]), Decrypt@Buffer(COMRAM[4]), SecureKeyGen@SKEYtemp(COMRAM[8]), SecureKeyGen@HOPtemp(COMRAM[4]), 
		 -> SecureKeyGen@Buffer(COMRAM[8]), NormalKeyGen@SKEYtemp(COMRAM[4]), NormalKeyGen@SEED(BANK2[4]), NormalKeyGen@HOPtemp(COMRAM[4]), 
		 -> NormalKeyGen@Buffer(COMRAM[8]), DKEY(BANK2[8]), classic_data(BANK2[16]), I2C1_WriteNBytes@dat(COMRAM[17]), 
		 -> i2c_writeNBytes@dat(COMRAM[17]), 

    memcpy@s1	PTR const void  size(2) Largest target is 64
		 -> classic_data.raw_data(BANK2[4]), Decrypt@Buffer(COMRAM[4]), SecureKeyGen@SKEYtemp(COMRAM[8]), SecureKeyGen@HOPtemp(COMRAM[4]), 
		 -> SecureKeyGen@Buffer(COMRAM[8]), NormalKeyGen@SKEYtemp(COMRAM[4]), NormalKeyGen@SEED(BANK2[4]), NormalKeyGen@HOPtemp(COMRAM[4]), 
		 -> NormalKeyGen@Buffer(COMRAM[8]), classic_data.serialnumber(BANK2[4]), classic_data(BANK2[16]), BufferRF(BANK2[9]), 
		 -> RemoveSerial@tempSerial(BANK0[4]), saveNewSerial@tempSerial(BANK0[4]), var_sys_NVM(BANK0[64]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 64
		 -> classic_data.raw_data(BANK2[4]), Decrypt@Buffer(COMRAM[4]), SecureKeyGen@SKEYtemp(COMRAM[8]), SecureKeyGen@HOPtemp(COMRAM[4]), 
		 -> SecureKeyGen@Buffer(COMRAM[8]), NormalKeyGen@SKEYtemp(COMRAM[4]), NormalKeyGen@SEED(BANK2[4]), NormalKeyGen@HOPtemp(COMRAM[4]), 
		 -> NormalKeyGen@Buffer(COMRAM[8]), classic_data.serialnumber(BANK2[4]), classic_data(BANK2[16]), BufferRF(BANK2[9]), 
		 -> RemoveSerial@tempSerial(BANK0[4]), saveNewSerial@tempSerial(BANK0[4]), var_sys_NVM(BANK0[64]), 

    eusartparser@package	PTR struct package_t size(1) Largest target is 7
		 -> main@package(BANK0[7]), 

    read_eusartparser@package	PTR struct package_t size(1) Largest target is 7
		 -> main@package(BANK0[7]), 

    sm_send_event@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_send_event@psm	PTR struct . size(2) Largest target is 12
		 -> controlLearning_stateMachine(BANK2[11]), controlGate_stateMachine(BANK1[11]), main_stateMachine(BANK1[11]), menuConfiguration_stateMachine(BANK2[11]), 

    sm_get_current_state@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_get_current_state@psm	PTR struct . size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_restart@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_restart@psm	PTR struct . size(2) Largest target is 12
		 -> controlLearning_stateMachine(BANK2[11]), controlGate_stateMachine(BANK1[11]), main_stateMachine(BANK1[11]), menuConfiguration_stateMachine(BANK2[11]), 

    sm_init@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_init@psm	PTR struct . size(2) Largest target is 12
		 -> controlLearning_stateMachine(BANK2[11]), controlGate_stateMachine(BANK1[11]), main_stateMachine(BANK1[11]), menuConfiguration_stateMachine(BANK2[11]), 

    sm_execute_menuConfiguration@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_execute_menuConfiguration@psm	PTR struct . size(2) Largest target is 12
		 -> menuConfiguration_stateMachine(BANK2[11]), 

    S6605$Value	PTR unsigned char  size(2) Largest target is 64
		 -> setValueToEdit@value(BANK1[1]), var_sys_NVM(BANK0[64]), NULL(NULL[0]), 

    edit_Param.Value	PTR unsigned char  size(2) Largest target is 64
		 -> setValueToEdit@value(BANK1[1]), var_sys_NVM.walkTime(BANK0[1]), var_sys_NVM.softStart(BANK0[1]), var_sys_NVM.softstop(BANK0[1]), 
		 -> var_sys_NVM.flashRGBMode(BANK0[1]), var_sys_NVM.velocityDecelaration(BANK0[1]), var_sys_NVM.operationMode(BANK0[1]), var_sys_NVM.autoTimeFullClose(BANK0[1]), 
		 -> var_sys_NVM.Stopboton(BANK0[1]), var_sys_NVM.logicDigital(BANK0[1]), var_sys_NVM.Direction_motor(BANK0[1]), var_sys_NVM.folow_me(BANK0[1]), 
		 -> var_sys_NVM.ligthTime(BANK0[1]), var_sys_NVM.autoTimeWalkClose(BANK0[1]), var_sys_NVM.programmingDistance(BANK0[1]), var_sys_NVM.flashLightMode(BANK0[1]), 
		 -> var_sys_NVM.securityBandInOpen(BANK0[1]), var_sys_NVM.securityBandType(BANK0[1]), var_sys_NVM.securityBandIsON(BANK0[1]), var_sys_NVM.photoCellInOpen(BANK0[1]), 
		 -> var_sys_NVM.photoCellIsON(BANK0[1]), var_sys_NVM.decelarationClose(BANK0[1]), var_sys_NVM.motorPower(BANK0[1]), var_sys_NVM.decelarationOpen(BANK0[1]), 
		 -> var_sys_NVM.homemPresente(BANK0[1]), var_sys_NVM.TypeofMotor(BANK0[1]), var_sys_NVM.positionRemotesWalk(BANK0[1]), var_sys_NVM.decelarationSensivity(BANK0[1]), 
		 -> var_sys_NVM.motorSensitivity(BANK0[1]), var_sys_NVM.electricBrake(BANK0[1]), var_sys_NVM(BANK0[64]), NULL(NULL[0]), 

    sm_execute_main@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_execute_main@psm	PTR struct . size(2) Largest target is 12
		 -> main_stateMachine(BANK1[11]), 

    sm_execute_ControlLearning@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_execute_ControlLearning@psm	PTR struct . size(2) Largest target is 12
		 -> controlLearning_stateMachine(BANK2[11]), 

    sm_execute_ControlGate@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_execute_ControlGate@psm	PTR struct . size(2) Largest target is 12
		 -> controlGate_stateMachine(BANK1[11]), 

    decrementTimeslot@ts	PTR int  size(2) Largest target is 72
		 -> ts_system.TimeShowVersion(BANK1[2]), ts_system.TimeLearningDecelaration(BANK1[2]), ts_system.TimeWaitToGetCurrent(BANK1[2]), ts_system.InvertionTimeClosingFromOpen(BANK1[2]), 
		 -> ts_system.TimeWaitReleCapacitor(BANK1[2]), ts_system.TimeInversionStart(BANK1[2]), ts_system.TimeStopedBeforeDecelaration(BANK1[2]), ts_system.TimeWaitToNextState(BANK1[2]), 
		 -> ts_system.timeFreqFlashligth(BANK1[2]), ts_system.timeFreqRGB(BANK1[2]), ts_system.timeWaitToClose(BANK1[2]), ts_system.timeOpenWalk(BANK1[2]), 
		 -> ts_system.timeoutMenu(BANK1[2]), ts_system.timeFreqDigit(BANK1[2]), ts_system.timewaitFlashRGB(BANK1[2]), ts_system.TimeStopElectricBrake(BANK1[2]), 
		 -> ts_system.Debug_TS(BANK1[2]), ts_system.timeSinalizationDigit(BANK1[2]), ts_system.TimeLastCommand(BANK1[2]), ts_system.timeBetweenSaveCounters(BANK1[2]), 
		 -> ts_system.TimeCurrentAlarm(BANK1[2]), ts_system.TimeCurrentWaitForAlarm(BANK1[2]), ts_system.TimeReleCapacitor(BANK1[2]), ts_system.TimeChargeCondesador(BANK1[2]), 
		 -> ts_system.TimeTransitionDecelaration(BANK1[2]), ts_system.timewaitBeforeSoftStart(BANK1[2]), ts_system.timeSoftStart(BANK1[2]), ts_system.TimeElectricBrake(BANK1[2]), 
		 -> ts_system.TimeStopADCZeroOffsetCalc(BANK1[2]), ts_system(BANK1[72]), 

    controlLearning_stateMachine.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    controlGate_stateMachine.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    main_stateMachine.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S4643$parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    menuConfiguration_stateMachine.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    verifyProgramingMode@classic_data	PTR struct . size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    keeloq_classic_decrypt_packet@data	PTR struct . size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    DecryptPacket_12BIT@data	PTR unsigned char  size(2) Largest target is 9
		 -> BufferRF(BANK2[9]), 

    DecryptPacket_12BIT@classic_data	PTR struct . size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    keeloqDecryptPacket@data	PTR unsigned char  size(2) Largest target is 9
		 -> BufferRF(BANK2[9]), 

    keeloqDecryptPacket@classic_data	PTR struct . size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    getHopCode@data	PTR struct . size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    HopCHK@data	PTR struct . size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    DecCHK@data	PTR struct . size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    Decrypt@packet	PTR unsigned char  size(2) Largest target is 16
		 -> SecureKeyGen@HOPtemp(COMRAM[4]), NormalKeyGen@Buffer(COMRAM[8]), classic_data(BANK2[16]), 

    NormalKeyGen@serial	PTR unsigned long  size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    sp__getClassicManufCode	PTR void  size(2) Largest target is 8
		 -> DKEY(BANK2[8]), 

    getSerialCmd@serial	PTR unsigned long  size(1) Largest target is 4
		 -> controlSelectRemote@tempSerial(BANK0[4]), 

    SaveNVM_VarSystem@point	PTR unsigned char  size(1) Largest target is 64
		 -> var_sys_NVM(BANK0[64]), 

    validateRemoteSerialNumber@position	PTR unsigned char  size(2) Largest target is 16
		 -> controlSelectRemote@pos(BANK0[1]), classic_data(BANK2[16]), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), Absolute function(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), Absolute function(), 

    I2C1_SetCallback@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_SetCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F535(), wr2RegCompleteHandler@i2c1_master_example$F523(), wr1RegCompleteHandler@i2c1_master_example$F517(), 
		 -> rd2RegCompleteHandler@i2c1_master_example$F511(), rd1RegCompleteHandler@i2c1_master_example$F500(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), wr1RegCompleteHandler(), 

    I2C1_SetAddressNackCallback@ptr	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    I2C1_SetAddressNackCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), 

    I2C1_SetDataCompleteCallback@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_SetDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F535(), wr2RegCompleteHandler@i2c1_master_example$F523(), wr1RegCompleteHandler@i2c1_master_example$F517(), 
		 -> rd2RegCompleteHandler@i2c1_master_example$F511(), rd1RegCompleteHandler@i2c1_master_example$F500(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), wr1RegCompleteHandler(), 

    I2C1_SetBuffer@buffer	PTR void  size(2) Largest target is 64
		 -> cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), I2C1_ReadDataBlock@reg(COMRAM[1]), 
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_WriteNBytes@dat(COMRAM[17]), I2C1_Write2ByteRegister@reg(COMRAM[1]), I2C1_Write2ByteRegister@data(COMRAM[2]), 
		 -> I2C1_Write1ByteRegister@reg(COMRAM[1]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@reg(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@reg(COMRAM[1]), I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@reg(COMRAM[2]), i2c_readDataBlock@d(COMRAM[4]), 
		 -> i2c_write2ByteRegister@reg(COMRAM[1]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@reg(COMRAM[1]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@reg(COMRAM[1]), i2c_read1ByteRegister@d2(COMRAM[1]), i2c_writeNBytes@dat(COMRAM[17]), i2c_write1ByteRegister@reg(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    S935$data_ptr	PTR unsigned char  size(2) Largest target is 64
		 -> cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), I2C1_ReadDataBlock@reg(COMRAM[1]), 
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_WriteNBytes@dat(COMRAM[17]), I2C1_Write2ByteRegister@reg(COMRAM[1]), I2C1_Write2ByteRegister@data(COMRAM[2]), 
		 -> I2C1_Write1ByteRegister@reg(COMRAM[1]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@reg(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@reg(COMRAM[1]), I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@reg(COMRAM[2]), i2c_readDataBlock@d(COMRAM[4]), 
		 -> i2c_write2ByteRegister@reg(COMRAM[1]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@reg(COMRAM[1]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@reg(COMRAM[1]), i2c_read1ByteRegister@d2(COMRAM[1]), i2c_writeNBytes@dat(COMRAM[17]), i2c_write1ByteRegister@reg(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_Status.data_ptr	PTR unsigned char  size(2) Largest target is 64
		 -> cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), I2C1_ReadDataBlock@reg(COMRAM[1]), 
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_WriteNBytes@dat(COMRAM[17]), I2C1_Write2ByteRegister@reg(COMRAM[1]), I2C1_Write2ByteRegister@data(COMRAM[2]), 
		 -> I2C1_Write1ByteRegister@reg(COMRAM[1]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@reg(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@reg(COMRAM[1]), I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@reg(COMRAM[2]), i2c_readDataBlock@d(COMRAM[4]), 
		 -> i2c_write2ByteRegister@reg(COMRAM[1]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@reg(COMRAM[1]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@reg(COMRAM[1]), i2c_read1ByteRegister@d2(COMRAM[1]), i2c_writeNBytes@dat(COMRAM[17]), i2c_write1ByteRegister@reg(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    S935$callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_Status.callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    S935$callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F535(), 
		 -> wr2RegCompleteHandler@i2c1_master_example$F523(), wr1RegCompleteHandler@i2c1_master_example$F517(), rd2RegCompleteHandler@i2c1_master_example$F511(), rd1RegCompleteHandler@i2c1_master_example$F500(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), 

    I2C1_Status.callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F535(), 
		 -> wr2RegCompleteHandler@i2c1_master_example$F523(), wr1RegCompleteHandler@i2c1_master_example$F517(), rd2RegCompleteHandler@i2c1_master_example$F511(), rd1RegCompleteHandler@i2c1_master_example$F500(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), 

    i2c1_fsmStateTable	const PTR FTN()enum E10442[16] size(2) Largest target is 1
		 -> I2C1_DO_ADDRESS_NACK(), I2C1_DO_RESET(), I2C1_DO_RX_NACK_RESTART(), I2C1_DO_RX_NACK_STOP(), 
		 -> I2C1_DO_RX_ACK(), I2C1_DO_SEND_STOP(), I2C1_DO_SEND_RESTART(), I2C1_DO_SEND_RESTART_WRITE(), 
		 -> I2C1_DO_SEND_RESTART_READ(), I2C1_DO_TX_EMPTY(), I2C1_DO_RCEN(), I2C1_DO_RX(), 
		 -> I2C1_DO_TX(), I2C1_DO_SEND_ADR_WRITE(), I2C1_DO_SEND_ADR_READ(), I2C1_DO_IDLE(), 

    rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr.data	PTR unsigned char  size(2) Largest target is 64
		 -> cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    wr2RegCompleteHandler@i2c1_master_example$F523@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    wr1RegCompleteHandler@i2c1_master_example$F517@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    rd2RegCompleteHandler@i2c1_master_example$F511@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    rd1RegCompleteHandler@i2c1_master_example$F500@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    bufferBlock.data	PTR unsigned char  size(2) Largest target is 64
		 -> cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    i2c_readDataBlock@data	PTR void  size(2) Largest target is 64
		 -> var_sys_NVM.homemPresente(BANK0[1]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), var_sys_NVM.positionRemotesFull(BANK0[1]), memoryTEMP(BANK2[16]), 
		 -> var_sys_NVM.learningCurrentNormalClose(BANK0[2]), var_sys_NVM(BANK0[64]), 

    d.data	PTR unsigned char  size(2) Largest target is 64
		 -> var_sys_NVM.homemPresente(BANK0[1]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), var_sys_NVM.positionRemotesFull(BANK0[1]), memoryTEMP(BANK2[16]), 
		 -> var_sys_NVM.learningCurrentNormalClose(BANK0[2]), var_sys_NVM(BANK0[64]), 

    S429$data	PTR unsigned char  size(2) Largest target is 64
		 -> cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    rdBlkRegCompleteHandler@p.data	PTR unsigned char  size(2) Largest target is 64
		 -> cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    rdBlkRegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    wr2RegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    rd2RegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    rd1RegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    sp__memcpy	PTR void  size(2) Largest target is 17
		 -> controlSelectRemote@tempSerial(BANK0[4]), Decrypt@Buffer(COMRAM[4]), SecureKeyGen@SKEYtemp(COMRAM[8]), SecureKeyGen@HOPtemp(COMRAM[4]), 
		 -> SecureKeyGen@Buffer(COMRAM[8]), NormalKeyGen@SKEYtemp(COMRAM[4]), NormalKeyGen@SEED(BANK2[4]), NormalKeyGen@HOPtemp(COMRAM[4]), 
		 -> NormalKeyGen@Buffer(COMRAM[8]), DKEY(BANK2[8]), classic_data(BANK2[16]), I2C1_WriteNBytes@dat(COMRAM[17]), 
		 -> i2c_writeNBytes@dat(COMRAM[17]), 

    i2c_writeNBytes@data	PTR void  size(1) Largest target is 64
		 -> RemoveSerial@tempSerial(BANK0[4]), saveNewSerial@tempSerial(BANK0[4]), var_sys_NVM(BANK0[64]), 

    wr1RegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Receive_ISR(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Transmit_ISR(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMRAM

    _main->_eusartparser
    _sm_execute_menuConfiguration->_ResetDefaultMemory
    _sm_execute_menuConfiguration->_setValueToEdit
    _load_New_Menu->_SetSegmentValueIntermitentMain
    _controlSelectRemote->_RemoveSerial
    _controlSelectRemote->_saveNewSerial
    _controlSelectRemote->_validateRemoteSerialNumber
    _saveNewSerial->_i2c_writeNBytes
    _getSerialCmd->_memcpy
    _cmdMemoryIsEmpty->_i2c_readDataBlock
    _RemoveSerial->_i2c_writeNBytes
    _controlSaveRemote->_SetSegmentValueIntermitentMain
    ___awdiv->___lbmod
    _SetSegmentValueMain->___awdiv
    _controlLearnDigit->_SetSegmentValueLearn
    _sm_execute_ControlGate->_sm_execute_ControlLearning
    _generateErrorLearnig->_sm_init
    _sm_init->_sm_restart
    _setPositionInvertionInOpening->_getTimeDecelaration
    _controlVelocity->_getStateOpenPosition
    _getStateOpenPosition->_getTimeDecelaration
    _InitSoftStop->_GetMotorPower
    _CloseOrder->_sm_send_event
    _setPositionInvertionInClosing->_getTimeDecelaration
    _getTimeDecelaration->___lmul
    ___lmul->___lldiv
    _StopOrder->_sm_send_event
    _GetSecurityStateInClosing->_SetSegmentValueIntermitent
    _WaitPreFlash->_sm_send_event
    _OpenFullOrder->_sm_send_event
    _OpenWalkOrder->_sm_send_event
    _sm_send_event->_sm_get_current_state
    _InitSoftStart->_GetMotorPower
    _GetSecurityStateInOpening->_SetSegmentValueIntermitent
    _GetOpenOrder->_SetSegmentValueIntermitentMain
    _SetSegmentValueIntermitentMain->___awdiv
    _read_package->_EUSART1_Read
    _keeloqDecryptPacket->_validateRemoteSerialNumber
    _keeloq_classic_decrypt_packet->_NormalKeyGen
    _NormalKeyGen->_Decrypt
    _Decrypt->_memcpy
    _HopCHK->_getHopCode
    _getHopCode->___wmul
    _DecryptPacket_12BIT->_validateRemoteSerialNumber
    _validateRemoteSerialNumber->_i2c_readDataBlock
    _loadNVM_VarSystem->_ResetDefaultMemory
    _loadNVM_VarSystem->_checkNVM_VarSystem
    _read_eusartparser->_write_package
    _write_package->_EUSART1_Write
    _ShowVersion->_SetSegmentValue
    _SetSegmentValue->___awdiv
    _SYSTEM_Initialize->_TMR1_Initialize
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler
    _ControlMotor->_VerifyElectricalBrake
    _ControlLights->_setRGB_ON
    _setRGB_ON->_RGB_Set
    _ControlCurrent->_getCurrentComparator
    _refreshCurrent->_sumHIST
    _refreshADCZeroOffset->___lwdiv
    _getCurrentComparator->___wmul
    _SaveNVM_VarSystem->_i2c_writeNBytes
    _I2C1_SetAddressNackCallback->_I2C1_SetCallback
    _I2C1_MasterWrite->_I2C1_MasterOperation
    _I2C1_Poller->_I2C1_MasterFsm
    _I2C1_MasterFsm->_I2C1_DO_ADDRESS_NACK
    _I2C1_MasterFsm->_I2C1_DO_RX
    _I2C1_MasterFsm->_I2C1_DO_TX
    _I2C1_MasterFsm->_I2C1_DO_TX_EMPTY
    _I2C1_DO_TX_EMPTY->_I2C1_CallbackReturnReset
    _I2C1_DO_TX_EMPTY->_I2C1_CallbackReturnStop
    _I2C1_DO_TX_EMPTY->_rd1RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_rd1RegCompleteHandler@i2c1_master_example$F500
    _I2C1_DO_TX_EMPTY->_rd2RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_rd2RegCompleteHandler@i2c1_master_example$F511
    _I2C1_DO_TX_EMPTY->_rdBlkRegCompleteHandler
    _I2C1_DO_TX_EMPTY->_rdBlkRegCompleteHandler@i2c1_master_example$F535
    _I2C1_DO_TX_EMPTY->_wr1RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_wr1RegCompleteHandler@i2c1_master_example$F517
    _I2C1_DO_TX_EMPTY->_wr2RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_wr2RegCompleteHandler@i2c1_master_example$F523
    _I2C1_DO_TX->_I2C1_CallbackReturnReset
    _I2C1_DO_TX->_I2C1_CallbackReturnStop
    _I2C1_DO_TX->_rd1RegCompleteHandler
    _I2C1_DO_TX->_rd1RegCompleteHandler@i2c1_master_example$F500
    _I2C1_DO_TX->_rd2RegCompleteHandler
    _I2C1_DO_TX->_rd2RegCompleteHandler@i2c1_master_example$F511
    _I2C1_DO_TX->_rdBlkRegCompleteHandler
    _I2C1_DO_TX->_rdBlkRegCompleteHandler@i2c1_master_example$F535
    _I2C1_DO_TX->_wr1RegCompleteHandler
    _I2C1_DO_TX->_wr1RegCompleteHandler@i2c1_master_example$F517
    _I2C1_DO_TX->_wr2RegCompleteHandler
    _I2C1_DO_TX->_wr2RegCompleteHandler@i2c1_master_example$F523
    _I2C1_DO_SEND_ADR_WRITE->_I2C1_MasterSendTxData
    _I2C1_DO_RX->_I2C1_CallbackReturnReset
    _I2C1_DO_RX->_I2C1_CallbackReturnStop
    _I2C1_DO_RX->_rd1RegCompleteHandler
    _I2C1_DO_RX->_rd1RegCompleteHandler@i2c1_master_example$F500
    _I2C1_DO_RX->_rd2RegCompleteHandler
    _I2C1_DO_RX->_rd2RegCompleteHandler@i2c1_master_example$F511
    _I2C1_DO_RX->_rdBlkRegCompleteHandler
    _I2C1_DO_RX->_rdBlkRegCompleteHandler@i2c1_master_example$F535
    _I2C1_DO_RX->_wr1RegCompleteHandler
    _I2C1_DO_RX->_wr1RegCompleteHandler@i2c1_master_example$F517
    _I2C1_DO_RX->_wr2RegCompleteHandler
    _I2C1_DO_RX->_wr2RegCompleteHandler@i2c1_master_example$F523
    _I2C1_DO_ADDRESS_NACK->_I2C1_CallbackReturnReset
    _I2C1_DO_ADDRESS_NACK->_I2C1_CallbackReturnStop
    _I2C1_DO_ADDRESS_NACK->_rd1RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_rd1RegCompleteHandler@i2c1_master_example$F500
    _I2C1_DO_ADDRESS_NACK->_rd2RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_rd2RegCompleteHandler@i2c1_master_example$F511
    _I2C1_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler@i2c1_master_example$F535
    _I2C1_DO_ADDRESS_NACK->_wr1RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_wr1RegCompleteHandler@i2c1_master_example$F517
    _I2C1_DO_ADDRESS_NACK->_wr2RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_wr2RegCompleteHandler@i2c1_master_example$F523
    _wr2RegCompleteHandler@i2c1_master_example$F523->_I2C1_SetDataCompleteCallback
    _wr2RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _wr1RegCompleteHandler@i2c1_master_example$F517->_I2C1_SetDataCompleteCallback
    _wr1RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rdBlkRegCompleteHandler@i2c1_master_example$F535->_I2C1_SetDataCompleteCallback
    _rdBlkRegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rd2RegCompleteHandler@i2c1_master_example$F511->_I2C1_SetDataCompleteCallback
    _rd2RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rd1RegCompleteHandler@i2c1_master_example$F500->_I2C1_SetDataCompleteCallback
    _rd1RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _I2C1_SetDataCompleteCallback->_I2C1_SetCallback

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR2_ISR->_ReadADC
    _refreshSegment->_Segments_Set
    _controlTimeslots->_decrementTimeslot
    _ReadADC->_ADCC_GetSingleConversion
    _TMR1_ISR->_controlMotorForce
    _controlMotorForce->i2_GetMotorPower
    _TMR0_ISR->_rxi

Critical Paths under _main in BANK0

    _main->_sm_execute_main
    _sm_execute_main->_sm_execute_menuConfiguration
    _sm_execute_menuConfiguration->_controlSelectRemote
    _setValueToEdit->_SaveNVM_VarSystem
    _controlSelectRemote->_validateRemoteSerialNumber
    _sm_execute_ControlGate->_actionZone_Opening
    _sm_execute_ControlLearning->_SaveNVM_VarSystem
    _actionZone_Opening->_setPositionInvertionInClosing
    _controlVelocity->_getStateOpenPosition
    _actionZone_Closing->_setPositionInvertionInClosing
    _readRFButtons->_keeloqDecryptPacket
    _keeloqDecryptPacket->_validateRemoteSerialNumber
    _DecryptPacket_12BIT->_validateRemoteSerialNumber
    _loadNVM_VarSystem->_SaveNVM_VarSystem
    _checkNVM_VarSystem->_SaveNVM_VarSystem
    _ResetDefaultMemory->_SaveNVM_VarSystem
    _eusartparser->_SaveNVM_VarSystem
    _ControlCounterMoves->_SaveNVM_VarSystem

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0 7104586
                                             25 BANK0      7     7      0
                _ControlCounterMoves
                     _ControlCurrent
                      _ControlInputs
                      _ControlLights
                       _ControlMotor
                _EUSART1_is_rx_ready
                       _InitReceiver
                  _SYSTEM_Initialize
                    _SetSegmentValue
                        _ShowVersion
                    _WWDT_SoftEnable
                    _WWDT_TimerClear
                    _controlVelocity
                       _eusartparser
                      _getKeyPressed
                  _loadNVM_VarSystem
                         _readInputs
                      _readRFButtons
                       _read_package
                         _readbutton
             _sm_execute_ControlGate
                    _sm_execute_main
                            _sm_init
 ---------------------------------------------------------------------------------
 (1) _sm_execute_main                                      4     2      2 3265240
                                             21 BANK0      4     2      2
     _SetSegmentValueIntermitentMain
                _SetSegmentValueMain
                      _load_New_Menu
       _sm_execute_menuConfiguration
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (2) _sm_execute_menuConfiguration                         4     2      2 3239816
                                             17 BANK0      4     2      2
                    _ClearFlag_rfCMD
                 _ResetDefaultMemory
                  _SaveNVM_VarSystem
     _SetSegmentValueIntermitentMain
                _SetSegmentValueMain
                            ___lbdiv
                            ___lldiv
                             ___lmul
                            ___lwdiv
                  _controlLearnDigit
                  _controlSaveRemote
                _controlSelectRemote
                      _load_New_Menu
                     _setValueToEdit
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _setValueToEdit                                       6     5      1  716791
                                             57 COMRAM     1     0      1
                                              4 BANK0      5     5      0
                       _InitReceiver
                  _SaveNVM_VarSystem
                   _cmdMemoryIsEmpty
                      _load_New_Menu
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (4) _load_New_Menu                                        4     4      0    7093
                                             31 COMRAM     4     4      0
     _SetSegmentValueIntermitentMain
                _SetSegmentValueMain
 ---------------------------------------------------------------------------------
 (4) _InitReceiver                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _controlSelectRemote                                  9     9      0 1773799
                                              8 BANK0      9     9      0
                    _ClearFlag_rfCMD
                       _RemoveSerial
                  _SaveNVM_VarSystem
                    _SetSegmentValue
     _SetSegmentValueIntermitentMain
                _SetSegmentValueMain
                            ___awdiv
                            ___lbmod
                   _cmdMemoryIsEmpty
                       _getSerialCmd
                      _getTypeRemote
                      _saveNewSerial
                      _sm_send_event
         _validateRemoteSerialNumber
 ---------------------------------------------------------------------------------
 (4) _saveNewSerial                                        8     3      5  349450
                                             57 COMRAM     1     1      0
                                              0 BANK0      7     2      5
                    _i2c_writeNBytes
 ---------------------------------------------------------------------------------
 (4) _getTypeRemote                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _getSerialCmd                                         2     1      1    6667
                                             26 COMRAM     2     1      1
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _cmdMemoryIsEmpty                                     8     7      1  348241
                                             45 COMRAM     8     7      1
                  _i2c_readDataBlock
 ---------------------------------------------------------------------------------
 (4) _RemoveSerial                                         8     7      1  349363
                                             57 COMRAM     1     0      1
                                              0 BANK0      7     7      0
                    _i2c_writeNBytes
 ---------------------------------------------------------------------------------
 (3) _controlSaveRemote                                    1     1      0   20456
                                             31 COMRAM     1     1      0
                    _ClearFlag_rfCMD
     _SetSegmentValueIntermitentMain
                _SetSegmentValueMain
                            ___awdiv
                            ___lbmod
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (4) ___lbmod                                              4     3      1    1223
                                             15 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4    1364
                                             19 COMRAM     8     4      4
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (5) _SetSegmentValueMain                                  2     1      1    2020
                                             27 COMRAM     2     1      1
                            ___awdiv (ARG)
                            ___lbdiv (ARG)
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (4) _ClearFlag_rfCMD                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _controlLearnDigit                                    0     0      0      22
               _SetSegmentValueLearn
 ---------------------------------------------------------------------------------
 (4) _SetSegmentValueLearn                                 3     3      0      22
                                             15 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     466
                                             15 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _sm_execute_ControlGate                               5     3      2  633789
                                             15 BANK0      5     3      2
                       _GetOpenOrder
         _SetSegmentValueIntermitent
                       _WaitPreFlash
                  _actionZone_Closed
                 _actionZone_Closing
                  _actionZone_Opened
                 _actionZone_Opening
         _sm_execute_ControlLearning
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (2) _sm_execute_ControlLearning                           5     3      2  372027
                                             57 COMRAM     1     1      0
                                              4 BANK0      4     2      2
                       _GetOpenOrder
                  _SaveNVM_VarSystem
                      _calculateMean
                 _clearLearningValue
               _generateErrorLearnig
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _generateErrorLearnig                                 0     0      0    2622
                            _sm_init
 ---------------------------------------------------------------------------------
 (1) _sm_init                                              5     0      5    2622
                                             17 COMRAM     5     0      5
                         _sm_restart
 ---------------------------------------------------------------------------------
 (2) _sm_restart                                           2     0      2     214
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _clearLearningValue                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _calculateMean                                       12     4      8    1241
                                             15 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) _actionZone_Opening                                   3     3      0   52477
                                             12 BANK0      3     3      0
                         _CloseOrder
                       _GetOpenOrder
          _GetSecurityStateInClosing
          _GetSecurityStateInOpening
                   _InitFullAutoTime
                   _InitWalkAutoTime
         _SetSegmentValueIntermitent
                          _StopOrder
                     _VerifyFollowMe
                    _controlVelocity
      _setPositionInvertionInClosing
      _setPositionInvertionInOpening
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _setPositionInvertionInOpening                        8     8      0    1207
                                             49 COMRAM     8     8      0
                _getTimeDecelaration
 ---------------------------------------------------------------------------------
 (3) _controlVelocity                                      1     1      0    3806
                                              2 BANK0      1     1      0
          _ControlDecelarationFactor
                       _InitSoftStop
               _getStateOpenPosition
                _getTimeDecelaration
 ---------------------------------------------------------------------------------
 (4) _getStateOpenPosition                                11    11      0    2562
                                             49 COMRAM     9     9      0
                                              0 BANK0      2     2      0
                             ___lmul
                _getTimeDecelaration
 ---------------------------------------------------------------------------------
 (4) _InitSoftStop                                         1     1      0      37
                                             19 COMRAM     1     1      0
                      _GetMotorPower
 ---------------------------------------------------------------------------------
 (4) _ControlDecelarationFactor                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _actionZone_Opened                                    2     2      0   42796
                                             31 COMRAM     2     2      0
                         _CloseOrder
                       _GetOpenOrder
          _GetSecurityStateInClosing
                   _InitFullAutoTime
                   _InitWalkAutoTime
                      _OpenFullOrder
                      _OpenWalkOrder
                     _VerifyFollowMe
 ---------------------------------------------------------------------------------
 (3) _VerifyFollowMe                                       1     1      0      31
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _CloseOrder                                           0     0      0   11293
                      _InitSoftStart
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (2) _actionZone_Closing                                   2     2      0   58040
                                             49 COMRAM     2     2      0
                       _GetOpenOrder
          _GetSecurityStateInClosing
                   _InitFullAutoTime
                   _InitWalkAutoTime
                      _OpenFullOrder
                      _OpenWalkOrder
         _SetSegmentValueIntermitent
                          _StopOrder
                             ___lmul
      _setPositionInvertionInClosing
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _setPositionInvertionInClosing                       12    12      0    1207
                                              0 BANK0     12    12      0
                _getTimeDecelaration
 ---------------------------------------------------------------------------------
 (4) _getTimeDecelaration                                  9     5      4    1207
                                             40 COMRAM     9     5      4
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8    1176
                                             28 COMRAM    12     4      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) _StopOrder                                            0     0      0   11256
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _GetSecurityStateInClosing                            0     0      0    1893
         _SetSegmentValueIntermitent
 ---------------------------------------------------------------------------------
 (2) _actionZone_Closed                                    2     2      0   65057
                                             31 COMRAM     2     2      0
                       _GetOpenOrder
          _GetSecurityStateInOpening
                   _InitFullAutoTime
                   _InitWalkAutoTime
                      _OpenFullOrder
                      _OpenWalkOrder
                       _WaitPreFlash
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _WaitPreFlash                                         0     0      0   22549
                   _InitFullAutoTime
                      _OpenFullOrder
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _OpenFullOrder                                        0     0      0   11293
                      _InitSoftStart
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _InitFullAutoTime                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _OpenWalkOrder                                        4     4      0   11389
                                             23 COMRAM     4     4      0
                      _InitSoftStart
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (2) _sm_send_event                                        6     2      4   11256
                                             17 COMRAM     6     2      4
               _sm_get_current_state
 ---------------------------------------------------------------------------------
 (3) _sm_get_current_state                                 2     0      2     121
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _InitSoftStart                                        1     1      0      37
                                             19 COMRAM     1     1      0
                      _GetMotorPower
 ---------------------------------------------------------------------------------
 (3) _InitWalkAutoTime                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _GetSecurityStateInOpening                            0     0      0    1893
         _SetSegmentValueIntermitent
 ---------------------------------------------------------------------------------
 (3) _SetSegmentValueIntermitent                           4     1      3    1893
                                             15 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (3) _GetOpenOrder                                         0     0      0    6454
     _SetSegmentValueIntermitentMain
                            ___lbdiv
 ---------------------------------------------------------------------------------
 (3) ___lbdiv                                              4     3      1    1861
                                             15 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (5) _SetSegmentValueIntermitentMain                       4     1      3    4593
                                             27 COMRAM     4     1      3
                            ___awdiv (ARG)
                            ___lbdiv (ARG)
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _readbutton                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _read_package                                        14     7      7     283
                                             16 COMRAM    14     7      7
                       _EUSART1_Read
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Read                                         1     1      0      24
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _readRFButtons                                        0     0      0  740427
                _DecryptPacket_12BIT
                _keeloqDecryptPacket
 ---------------------------------------------------------------------------------
 (2) _keeloqDecryptPacket                                 10     6      4  384102
                                              8 BANK0     10     6      4
                             _DecCHK
                             _HopCHK
      _keeloq_classic_decrypt_packet
                             _memcpy
         _validateRemoteSerialNumber
               _verifyProgramingMode
 ---------------------------------------------------------------------------------
 (3) _verifyProgramingMode                                 3     1      2     152
                                             15 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _keeloq_classic_decrypt_packet                        5     3      2   23218
                                             55 COMRAM     2     0      2
                                              0 BANK0      3     3      0
                            _Decrypt
                       _NormalKeyGen
 ---------------------------------------------------------------------------------
 (4) _NormalKeyGen                                        18    16      2   15069
                                             37 COMRAM    18    16      2
                            _Decrypt
                      _LoadManufCode
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _LoadManufCode                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _Decrypt                                             11     9      2    7935
                                             26 COMRAM    11     9      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _HopCHK                                               4     2      2    3536
                                             35 COMRAM     4     2      2
                          _ReqResync
                         _getHopCode
 ---------------------------------------------------------------------------------
 (4) _getHopCode                                          14    12      2    3145
                                             21 COMRAM    14    12      2
                          _ReqResync
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) _ReqResync                                            2     0      2     174
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _DecCHK                                               4     2      2     242
                                             15 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _DecryptPacket_12BIT                                  5     1      4  356325
                                              8 BANK0      5     1      4
                             _memcpy
         _validateRemoteSerialNumber
 ---------------------------------------------------------------------------------
 (4) _validateRemoteSerialNumber                          21    14      7  349416
                                             45 COMRAM    13     6      7
                                              0 BANK0      8     8      0
                  _i2c_readDataBlock
 ---------------------------------------------------------------------------------
 (1) _readInputs                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _loadNVM_VarSystem                                    0     0      0 1741500
             _I2C1_Read1ByteRegister
                 _ResetDefaultMemory
                  _SaveNVM_VarSystem
                 _checkNVM_VarSystem
                  _i2c_readDataBlock
 ---------------------------------------------------------------------------------
 (5) _i2c_readDataBlock                                   12     6      6  347773
                                             33 COMRAM    12     6      6
                         _I2C1_Close
                   _I2C1_MasterWrite
                          _I2C1_Open
        _I2C1_SetAddressNackCallback
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (2) _checkNVM_VarSystem                                   1     1      0  349391
                                             57 COMRAM     1     1      0
                  _SaveNVM_VarSystem
 ---------------------------------------------------------------------------------
 (3) _ResetDefaultMemory                                   1     1      0  349369
                                             57 COMRAM     1     1      0
                  _SaveNVM_VarSystem
 ---------------------------------------------------------------------------------
 (2) _I2C1_Read1ByteRegister                               3     2      1  345691
                                             33 COMRAM     3     2      1
                         _I2C1_Close
                   _I2C1_MasterWrite
                          _I2C1_Open
        _I2C1_SetAddressNackCallback
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (1) _getKeyPressed                                        1     1      0      24
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _eusartparser                                        10     9      1  359320
                                             57 COMRAM     1     0      1
                                              4 BANK0      2     2      0
                  _SaveNVM_VarSystem
                  _read_eusartparser
                 _write_eusartparser
                      _write_package
 ---------------------------------------------------------------------------------
 (2) _write_eusartparser                                  19    12      7    1343
                                             15 COMRAM    19    12      7
 ---------------------------------------------------------------------------------
 (2) _read_eusartparser                                    3     2      1    5302
                                             23 COMRAM     3     2      1
                      _write_package
 ---------------------------------------------------------------------------------
 (2) _write_package                                        7     0      7    3092
                                             16 COMRAM     7     0      7
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (3) _EUSART1_Write                                        1     1      0      44
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _WWDT_TimerClear                                      2     2      0      25
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _WWDT_SoftEnable                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ShowVersion                                          0     0      0     500
                    _SetSegmentValue
 ---------------------------------------------------------------------------------
 (4) _SetSegmentValue                                      2     1      1     500
                                             27 COMRAM     2     1      1
                            ___awdiv (ARG)
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     784
                    _ADCC_Initialize
                 _EUSART1_Initialize
                    _I2C1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                    _WWDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WWDT_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0      98
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR2_SetInterruptHandler                             2     0      2      98
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      2     2      0      98
                                             17 COMRAM     2     2      0
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR1_SetInterruptHandler                             2     0      2      98
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0      98
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2      98
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     490
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        2     0      2      98
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2      98
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ControlMotor                                         7     7      0     223
                                             17 COMRAM     7     7      0
              _VerifyElectricalBrake
 ---------------------------------------------------------------------------------
 (2) _VerifyElectricalBrake                                2     2      0     112
                                             15 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ControlLights                                        0     0      0    1620
                   _setFlashLigth_ON
                          _setRGB_ON
 ---------------------------------------------------------------------------------
 (2) _setRGB_ON                                            5     3      2    1022
                                             16 COMRAM     5     3      2
                            _RGB_Set
 ---------------------------------------------------------------------------------
 (3) _RGB_Set                                              1     1      0      22
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _setFlashLigth_ON                                     2     0      2     598
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _ControlInputs                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ControlCurrent                                       4     4      0    4118
                                             34 COMRAM     4     4      0
                      _GetMotorPower
               _getCurrentComparator
               _refreshADCZeroOffset
                     _refreshCurrent
 ---------------------------------------------------------------------------------
 (2) _refreshCurrent                                       0     0      0     576
                  _saveEnergyADCHist
                       _sumEnergyADC
                            _sumHIST
 ---------------------------------------------------------------------------------
 (3) _sumHIST                                             17    13      4     317
                                             15 COMRAM    17    13      4
 ---------------------------------------------------------------------------------
 (3) _sumEnergyADC                                         9     7      2     161
                                             15 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 (3) _saveEnergyADCHist                                    2     0      2      98
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _refreshADCZeroOffset                                 3     3      0     893
                                             22 COMRAM     3     3      0
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     618
                                             15 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _getCurrentComparator                                13     9      4    2612
                                             21 COMRAM    13     9      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    2519
                                             15 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) _GetMotorPower                                        4     4      0      37
                                             15 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (1) _ControlCounterMoves                                  0     0      0  349276
                  _SaveNVM_VarSystem
 ---------------------------------------------------------------------------------
 (4) _SaveNVM_VarSystem                                    4     4      0  349276
                                              0 BANK0      4     4      0
                    _i2c_writeNBytes
 ---------------------------------------------------------------------------------
 (5) _i2c_writeNBytes                                     24    19      5  349112
                                             33 COMRAM    24    19      5
                         _I2C1_Close
                   _I2C1_MasterWrite
                          _I2C1_Open
        _I2C1_SetAddressNackCallback
                     _I2C1_SetBuffer
                             _memcpy
 ---------------------------------------------------------------------------------
 (6) _memcpy                                              11     5      6    6478
                                             15 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (6) _I2C1_SetAddressNackCallback                          4     0      4    2859
                                             20 COMRAM     4     0      4
                   _I2C1_SetCallback
 ---------------------------------------------------------------------------------
 (6) _I2C1_Open                                            2     2      0      68
                                             15 COMRAM     2     2      0
                _I2C1_MasterClearIrq
                    _I2C1_MasterOpen
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterOpen                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterWrite                                     0     0      0  334109
               _I2C1_MasterOperation
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterOperation                                 2     2      0  334109
                                             31 COMRAM     2     2      0
                   _I2C1_MasterStart
                        _I2C1_Poller
 ---------------------------------------------------------------------------------
 (8) _I2C1_Poller                                          0     0      0  334041
                     _I2C1_MasterFsm
            _I2C1_MasterWaitForEvent
 ---------------------------------------------------------------------------------
 (9) _I2C1_MasterWaitForEvent                              0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_MasterFsm                                       3     3      0  334041
                                             28 COMRAM     3     3      0
               _I2C1_DO_ADDRESS_NACK *
                       _I2C1_DO_IDLE *
                       _I2C1_DO_RCEN *
                      _I2C1_DO_RESET *
                         _I2C1_DO_RX *
                     _I2C1_DO_RX_ACK *
            _I2C1_DO_RX_NACK_RESTART *
               _I2C1_DO_RX_NACK_STOP *
              _I2C1_DO_SEND_ADR_READ *
             _I2C1_DO_SEND_ADR_WRITE *
               _I2C1_DO_SEND_RESTART *
          _I2C1_DO_SEND_RESTART_READ *
         _I2C1_DO_SEND_RESTART_WRITE *
                  _I2C1_DO_SEND_STOP *
                         _I2C1_DO_TX *
                   _I2C1_DO_TX_EMPTY *
                _I2C1_MasterClearIrq
                  _I2C1_MasterIsNack
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_TX_EMPTY                                    2     2      0   83487
                                             26 COMRAM     2     2      0
                   Absolute function *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
               _I2C1_DO_SEND_RESTART
                  _I2C1_DO_SEND_STOP
                  _I2C1_MasterSetIrq
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterSetIrq                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_TX                                          2     2      0   83518
                                             26 COMRAM     2     2      0
                   Absolute function *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
          _I2C1_DO_SEND_RESTART_READ
         _I2C1_DO_SEND_RESTART_WRITE
                  _I2C1_DO_SEND_STOP
                  _I2C1_MasterIsNack
              _I2C1_MasterSendTxData
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterIsNack                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C1_DO_SEND_RESTART_WRITE                          0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (11) _I2C1_DO_SEND_RESTART_READ                           0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_SEND_ADR_WRITE                              0     0      0      31
              _I2C1_MasterSendTxData
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_SEND_ADR_READ                               0     0      0      31
              _I2C1_MasterSendTxData
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterSendTxData                               1     1      0      31
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_RX_ACK                                      0     0      0       0
                 _I2C1_MasterSendAck
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_RX                                          2     2      0   83487
                                             26 COMRAM     2     2      0
                   Absolute function *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
            _I2C1_DO_RX_NACK_RESTART
               _I2C1_DO_RX_NACK_STOP
               _I2C1_MasterGetRxData
                 _I2C1_MasterSendAck
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterSendAck                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterGetRxData                                0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_RX_NACK_STOP                                0     0      0       0
                _I2C1_MasterSendNack
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_RX_NACK_RESTART                             0     0      0       0
                _I2C1_MasterSendNack
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterSendNack                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_RESET                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_RCEN                                        0     0      0       0
                 _I2C1_MasterStartRx
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterStartRx                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_IDLE                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_ADDRESS_NACK                                2     2      0   83487
                                             26 COMRAM     2     2      0
                   Absolute function *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
               _I2C1_DO_SEND_RESTART
                  _I2C1_DO_SEND_STOP
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (11) _wr2RegCompleteHandler@i2c1_master_example$F523      2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _wr2RegCompleteHandler                               2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _wr1RegCompleteHandler@i2c1_master_example$F517      2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _wr1RegCompleteHandler                               2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rdBlkRegCompleteHandler@i2c1_master_example$F535    2     0      2    8343
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rdBlkRegCompleteHandler                             2     0      2    8343
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rd2RegCompleteHandler@i2c1_master_example$F511      2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rd2RegCompleteHandler                               2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rd1RegCompleteHandler@i2c1_master_example$F500      2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rd1RegCompleteHandler                               2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (6) _I2C1_SetDataCompleteCallback                         4     0      4    4339
                                             20 COMRAM     4     0      4
                   _I2C1_SetCallback
 ---------------------------------------------------------------------------------
 (7) _I2C1_SetCallback                                     5     1      4     997
                                             15 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (6) _I2C1_SetBuffer                                       4     0      4    3942
                                             15 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (11) _I2C1_DO_SEND_STOP                                   0     0      0       0
                    _I2C1_MasterStop
 ---------------------------------------------------------------------------------
 (12) _I2C1_MasterStop                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C1_DO_SEND_RESTART                                0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (12) _I2C1_MasterEnableRestart                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C1_CallbackReturnStop                             2     0      2       0
                                             24 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (11) _I2C1_CallbackReturnReset                            2     0      2     305
                                             24 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (16) Absolute function(Fake)                              2     0      2       0
 ---------------------------------------------------------------------------------
 (8) _I2C1_MasterStart                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C1_Close                                           1     1      0      37
                                             15 COMRAM     1     1      0
                _I2C1_MasterClearIrq
                   _I2C1_MasterClose
              _I2C1_MasterDisableIrq
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterDisableIrq                                0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterClose                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterClearIrq                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _INTERRUPT_InterruptManager                          6     6      0    2657
                                              9 COMRAM     6     6      0
                   Absolute function *
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
                           _TMR0_ISR
                           _TMR1_ISR
                           _TMR2_ISR
 ---------------------------------------------------------------------------------
 (15) _TMR2_ISR                                            0     0      0    2292
                   Absolute function *
                            _ReadADC
       _TMR2_DefaultInterruptHandler *
                   _controlTimeslots
                     _refreshSegment
 ---------------------------------------------------------------------------------
 (16) _refreshSegment                                      0     0      0      22
                       _Segments_Set
 ---------------------------------------------------------------------------------
 (17) _Segments_Set                                        1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (16) _controlTimeslots                                    0     0      0    2248
                  _decrementTimeslot
 ---------------------------------------------------------------------------------
 (17) _decrementTimeslot                                   4     2      2    2248
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (16) _TMR2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _ReadADC                                             3     3      0      22
                                              1 COMRAM     3     3      0
           _ADCC_GetSingleConversion
 ---------------------------------------------------------------------------------
 (17) _ADCC_GetSingleConversion                            1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (15) _TMR1_ISR                                            0     0      0     365
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                    _TMR1_WriteTimer
                  _controlMotorForce
 ---------------------------------------------------------------------------------
 (16) _controlMotorForce                                   5     5      0     136
                                              4 COMRAM     5     5      0
                    i2_GetMotorPower
            i2_VerifyElectricalBrake
 ---------------------------------------------------------------------------------
 (17) i2_VerifyElectricalBrake                             2     2      0     112
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (17) i2_GetMotorPower                                     4     4      0      24
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (16) _TMR1_WriteTimer                                     2     0      2     229
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (16) _TMR1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _TMR0_ISR                                            0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                                _rxi
 ---------------------------------------------------------------------------------
 (16) _rxi                                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (16) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _EUSART1_Transmit_ISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _EUSART1_Receive_ISR                                 0     0      0       0
                   Absolute function *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (16) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _EUSART1_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _EUSART1_DefaultErrorHandler                         0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (16) _EUSART1_RxDataHandler                               0     0      0       0
 ---------------------------------------------------------------------------------
 (16) Absolute function(Fake)                              2     0      2       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ControlCounterMoves
     _SaveNVM_VarSystem
       _i2c_writeNBytes
         _I2C1_Close
           _I2C1_MasterClearIrq
           _I2C1_MasterClose
           _I2C1_MasterDisableIrq
         _I2C1_MasterWrite
           _I2C1_MasterOperation
             _I2C1_MasterStart
             _I2C1_Poller
               _I2C1_MasterFsm
                 _I2C1_DO_ADDRESS_NACK *
                   Absolute function(Fake) *
                   _I2C1_CallbackReturnReset *
                   _I2C1_CallbackReturnStop *
                   _I2C1_DO_SEND_RESTART *
                     _I2C1_MasterEnableRestart
                   _I2C1_DO_SEND_STOP *
                     _I2C1_MasterStop
                   _rd1RegCompleteHandler *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                       _I2C1_SetCallback
                   _rd1RegCompleteHandler@i2c1_master_example$F500 *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _rd2RegCompleteHandler *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _rd2RegCompleteHandler@i2c1_master_example$F511 *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _rdBlkRegCompleteHandler *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _rdBlkRegCompleteHandler@i2c1_master_example$F535 *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _wr1RegCompleteHandler *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _wr1RegCompleteHandler@i2c1_master_example$F517 *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _wr2RegCompleteHandler *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _wr2RegCompleteHandler@i2c1_master_example$F523 *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                 _I2C1_DO_IDLE *
                 _I2C1_DO_RCEN *
                   _I2C1_MasterStartRx
                 _I2C1_DO_RESET *
                 _I2C1_DO_RX *
                   Absolute function(Fake) *
                   _I2C1_CallbackReturnReset *
                   _I2C1_CallbackReturnStop *
                   _I2C1_DO_RX_NACK_RESTART *
                     _I2C1_MasterSendNack
                   _I2C1_DO_RX_NACK_STOP *
                     _I2C1_MasterSendNack
                   _I2C1_MasterGetRxData *
                   _I2C1_MasterSendAck *
                   _rd1RegCompleteHandler *
                   _rd1RegCompleteHandler@i2c1_master_example$F500 *
                   _rd2RegCompleteHandler *
                   _rd2RegCompleteHandler@i2c1_master_example$F511 *
                   _rdBlkRegCompleteHandler *
                   _rdBlkRegCompleteHandler@i2c1_master_example$F535 *
                   _wr1RegCompleteHandler *
                   _wr1RegCompleteHandler@i2c1_master_example$F517 *
                   _wr2RegCompleteHandler *
                   _wr2RegCompleteHandler@i2c1_master_example$F523 *
                 _I2C1_DO_RX_ACK *
                   _I2C1_MasterSendAck
                 _I2C1_DO_RX_NACK_RESTART *
                 _I2C1_DO_RX_NACK_STOP *
                 _I2C1_DO_SEND_ADR_READ *
                   _I2C1_MasterSendTxData
                 _I2C1_DO_SEND_ADR_WRITE *
                   _I2C1_MasterSendTxData
                 _I2C1_DO_SEND_RESTART *
                 _I2C1_DO_SEND_RESTART_READ *
                   _I2C1_MasterEnableRestart
                 _I2C1_DO_SEND_RESTART_WRITE *
                   _I2C1_MasterEnableRestart
                 _I2C1_DO_SEND_STOP *
                 _I2C1_DO_TX *
                   Absolute function(Fake) *
                   _I2C1_CallbackReturnReset *
                   _I2C1_CallbackReturnStop *
                   _I2C1_DO_SEND_RESTART_READ *
                   _I2C1_DO_SEND_RESTART_WRITE *
                   _I2C1_DO_SEND_STOP *
                   _I2C1_MasterIsNack *
                   _I2C1_MasterSendTxData *
                   _rd1RegCompleteHandler *
                   _rd1RegCompleteHandler@i2c1_master_example$F500 *
                   _rd2RegCompleteHandler *
                   _rd2RegCompleteHandler@i2c1_master_example$F511 *
                   _rdBlkRegCompleteHandler *
                   _rdBlkRegCompleteHandler@i2c1_master_example$F535 *
                   _wr1RegCompleteHandler *
                   _wr1RegCompleteHandler@i2c1_master_example$F517 *
                   _wr2RegCompleteHandler *
                   _wr2RegCompleteHandler@i2c1_master_example$F523 *
                 _I2C1_DO_TX_EMPTY *
                   Absolute function(Fake) *
                   _I2C1_CallbackReturnReset *
                   _I2C1_CallbackReturnStop *
                   _I2C1_DO_SEND_RESTART *
                   _I2C1_DO_SEND_STOP *
                   _I2C1_MasterSetIrq *
                   _rd1RegCompleteHandler *
                   _rd1RegCompleteHandler@i2c1_master_example$F500 *
                   _rd2RegCompleteHandler *
                   _rd2RegCompleteHandler@i2c1_master_example$F511 *
                   _rdBlkRegCompleteHandler *
                   _rdBlkRegCompleteHandler@i2c1_master_example$F535 *
                   _wr1RegCompleteHandler *
                   _wr1RegCompleteHandler@i2c1_master_example$F517 *
                   _wr2RegCompleteHandler *
                   _wr2RegCompleteHandler@i2c1_master_example$F523 *
                 _I2C1_MasterClearIrq *
                 _I2C1_MasterIsNack *
               _I2C1_MasterWaitForEvent
         _I2C1_Open
           _I2C1_MasterClearIrq
           _I2C1_MasterOpen
         _I2C1_SetAddressNackCallback
           _I2C1_SetCallback
         _I2C1_SetBuffer
         _memcpy
   _ControlCurrent
     _GetMotorPower
     _getCurrentComparator
       ___wmul
     _refreshADCZeroOffset
       ___lwdiv
     _refreshCurrent
       _saveEnergyADCHist
       _sumEnergyADC
       _sumHIST
   _ControlInputs
   _ControlLights
     _setFlashLigth_ON
     _setRGB_ON
       _RGB_Set
   _ControlMotor
     _VerifyElectricalBrake
   _EUSART1_is_rx_ready
   _InitReceiver
   _SYSTEM_Initialize
     _ADCC_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _I2C1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
     _WWDT_Initialize
   _SetSegmentValue
     ___awdiv (ARG)
       ___lbmod (ARG)
     ___lbmod (ARG)
   _ShowVersion
     _SetSegmentValue
   _WWDT_SoftEnable
   _WWDT_TimerClear
   _controlVelocity
     _ControlDecelarationFactor
     _InitSoftStop
       _GetMotorPower
     _getStateOpenPosition
       ___lmul
         ___lldiv (ARG)
       _getTimeDecelaration
         ___lmul
     _getTimeDecelaration
   _eusartparser
     _SaveNVM_VarSystem
     _read_eusartparser
       _write_package
         _EUSART1_Write
     _write_eusartparser
     _write_package
   _getKeyPressed
   _loadNVM_VarSystem
     _I2C1_Read1ByteRegister
       _I2C1_Close
       _I2C1_MasterWrite
       _I2C1_Open
       _I2C1_SetAddressNackCallback
       _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
     _ResetDefaultMemory
       _SaveNVM_VarSystem
     _SaveNVM_VarSystem
     _checkNVM_VarSystem
       _SaveNVM_VarSystem
     _i2c_readDataBlock
       _I2C1_Close
       _I2C1_MasterWrite
       _I2C1_Open
       _I2C1_SetAddressNackCallback
       _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
   _readInputs
   _readRFButtons
     _DecryptPacket_12BIT
       _memcpy
       _validateRemoteSerialNumber
         _i2c_readDataBlock
     _keeloqDecryptPacket
       _DecCHK
       _HopCHK
         _ReqResync
         _getHopCode
           _ReqResync
           ___wmul
       _keeloq_classic_decrypt_packet
         _Decrypt
           _memcpy
         _NormalKeyGen
           _Decrypt
           _LoadManufCode
           _memcpy
       _memcpy
       _validateRemoteSerialNumber
       _verifyProgramingMode
   _read_package
     _EUSART1_Read
   _readbutton
   _sm_execute_ControlGate
     _GetOpenOrder
       _SetSegmentValueIntermitentMain
         ___awdiv (ARG)
         ___lbdiv (ARG)
         ___lbmod (ARG)
       ___lbdiv
     _SetSegmentValueIntermitent
     _WaitPreFlash
       _InitFullAutoTime
       _OpenFullOrder
         _InitSoftStart
           _GetMotorPower
         _sm_send_event
           _sm_get_current_state
       _sm_send_event
     _actionZone_Closed
       _GetOpenOrder
       _GetSecurityStateInOpening
         _SetSegmentValueIntermitent
       _InitFullAutoTime
       _InitWalkAutoTime
       _OpenFullOrder
       _OpenWalkOrder
         _InitSoftStart
         _sm_send_event
       _WaitPreFlash
       _sm_send_event
     _actionZone_Closing
       _GetOpenOrder
       _GetSecurityStateInClosing
         _SetSegmentValueIntermitent
       _InitFullAutoTime
       _InitWalkAutoTime
       _OpenFullOrder
       _OpenWalkOrder
       _SetSegmentValueIntermitent
       _StopOrder
         _sm_send_event
       ___lmul
       _setPositionInvertionInClosing
         _getTimeDecelaration
       _sm_send_event
     _actionZone_Opened
       _CloseOrder
         _InitSoftStart
         _sm_send_event
       _GetOpenOrder
       _GetSecurityStateInClosing
       _InitFullAutoTime
       _InitWalkAutoTime
       _OpenFullOrder
       _OpenWalkOrder
       _VerifyFollowMe
     _actionZone_Opening
       _CloseOrder
       _GetOpenOrder
       _GetSecurityStateInClosing
       _GetSecurityStateInOpening
       _InitFullAutoTime
       _InitWalkAutoTime
       _SetSegmentValueIntermitent
       _StopOrder
       _VerifyFollowMe
       _controlVelocity
       _setPositionInvertionInClosing
       _setPositionInvertionInOpening
         _getTimeDecelaration
       _sm_send_event
     _sm_execute_ControlLearning
       _GetOpenOrder
       _SaveNVM_VarSystem
       _calculateMean
       _clearLearningValue
       _generateErrorLearnig
         _sm_init
           _sm_restart
       _sm_send_event
     _sm_send_event
   _sm_execute_main
     _SetSegmentValueIntermitentMain
     _SetSegmentValueMain
       ___awdiv (ARG)
       ___lbdiv (ARG)
       ___lbmod (ARG)
     _load_New_Menu
       _SetSegmentValueIntermitentMain
       _SetSegmentValueMain
     _sm_execute_menuConfiguration
       _ClearFlag_rfCMD
       _ResetDefaultMemory
       _SaveNVM_VarSystem
       _SetSegmentValueIntermitentMain
       _SetSegmentValueMain
       ___lbdiv
       ___lldiv
       ___lmul
       ___lwdiv
       _controlLearnDigit
         _SetSegmentValueLearn
       _controlSaveRemote
         _ClearFlag_rfCMD
         _SetSegmentValueIntermitentMain
         _SetSegmentValueMain
         ___awdiv
         ___lbmod
         _sm_send_event
       _controlSelectRemote
         _ClearFlag_rfCMD
         _RemoveSerial
           _i2c_writeNBytes
         _SaveNVM_VarSystem
         _SetSegmentValue
         _SetSegmentValueIntermitentMain
         _SetSegmentValueMain
         ___awdiv
         ___lbmod
         _cmdMemoryIsEmpty
           _i2c_readDataBlock
         _getSerialCmd
           _memcpy
         _getTypeRemote
         _saveNewSerial
           _i2c_writeNBytes
         _sm_send_event
         _validateRemoteSerialNumber
       _load_New_Menu
       _setValueToEdit
         _InitReceiver
         _SaveNVM_VarSystem
         _cmdMemoryIsEmpty
         _load_New_Menu
         _sm_send_event
       _sm_send_event
     _sm_send_event
   _sm_init

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART1_Receive_ISR *
     Absolute function(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _EUSART1_Transmit_ISR *
   _TMR0_ISR *
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     _rxi *
   _TMR1_ISR *
     Absolute function(Fake) *
     _TMR1_DefaultInterruptHandler *
     _TMR1_WriteTimer *
     _controlMotorForce *
       i2_GetMotorPower
       i2_VerifyElectricalBrake
   _TMR2_ISR *
     Absolute function(Fake) *
     _ReadADC *
       _ADCC_GetSingleConversion
     _TMR2_DefaultInterruptHandler *
     _controlTimeslots *
       _decrementTimeslot
     _refreshSegment *
       _Segments_Set

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E87      0       0      61        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      F7      11       96.5%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      F1       9       94.1%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      FF       7       99.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     20      9A       5       96.2%
BITBANK14           88      0       0      32        0.0%
BANK14              88      0       0      33        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     3A      4F       1       84.0%
BITBIGSFRllll       28      0       0      59        0.0%
BITBIGSFRhlllll     27      0       0      42        0.0%
BITBIGSFRhhllll     1B      0       0      37        0.0%
BITBIGSFRhhlh       1A      0       0      35        0.0%
BITBIGSFRhlllll     13      0       0      48        0.0%
BITBIGSFRhlllhh      F      0       0      41        0.0%
BITBIGSFRhlllll      E      0       0      46        0.0%
BITBIGSFRhhh         D      0       0      34        0.0%
BITBIGSFRhhllll      C      0       0      36        0.0%
BITBIGSFRllh         9      0       0      57        0.0%
BITBIGSFRhlllll      4      0       0      52        0.0%
BITBIGSFRhlllll      3      0       0      44        0.0%
BITBIGSFRhlllll      3      0       0      43        0.0%
BITBIGSFRhlllll      3      0       0      53        0.0%
BITBIGSFRhlllll      3      0       0      55        0.0%
BITBIGSFRhlllll      2      0       0      47        0.0%
BITBIGSFRhlllhh      2      0       0      40        0.0%
BITBIGSFRhlllll      2      0       0      49        0.0%
BITBIGSFRhlllll      2      0       0      54        0.0%
BITBIGSFRlh          2      0       0      56        0.0%
BITBIGSFRlllh        1      0       0      58        0.0%
BITBIGSFRhlllll      1      0       0      45        0.0%
BITBIGSFRhlllll      1      0       0      50        0.0%
BITBIGSFRhlllll      1      0       0      51        0.0%
BITBIGSFRhlllhh      1      0       0      39        0.0%
BITBIGSFRhlllhh      1      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     3D0      60        0.0%
DATA                 0      0     3D0       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Mon Jul 18 09:57:11 2022

                                        ?_ClearFlag_rfCMD 0001  
                              cmdMemoryIsEmpty@tempSerial 0032  
                                           _Counterchoose 0092  
                        __end_of_TMR2_SetInterruptHandler 9190  
                                _eusart1TxBufferRemaining 01FE  
                            SetSegmentValueIntermitent@d1 0013  
                            SetSegmentValueIntermitent@d2 0010  
                                    ??_checkNVM_VarSystem 003A  
                                            ___awdiv@sign 0019  
                                     ___wmul@multiplicand 0012  
                           __end_of_VerifyElectricalBrake 7D20  
                                           _LoadManufCode 8E96  
                                        ?_SetSegmentValue 001C  
                                                     l100 889A  
                            ??_sm_execute_ControlLearning 00DE  
                                                     l674 77EE  
                                                     l690 7C56  
                                                     _GIE 007F97  
                                                     _Hop 007C  
                                   ?_I2C1_MasterOperation 0001  
                                         _timer1ReloadVal 02E1  
                                 keeloqDecryptPacket@data 00E0  
                                                     _rxi 426A  
                                  ControlMotor@stateMotor 0018  
                                         _TMR2_Initialize 8B80  
                                                     prod 000FF3  
                                                     tosl 000FFD  
                                                     wreg 000FE8  
                                  ?_I2C1_MasterSendTxData 0001  
                                       load_New_Menu@Menu 0022  
                                    _I2C1_DO_RX_NACK_STOP 920C  
                               ?_I2C1_MasterEnableRestart 0001  
                                       _SaveNVM_VarSystem 89FA  
                        validateRemoteSerialNumber@serial 002E  
                                    I2C1_SetBuffer@buffer 0010  
                                       getKeyPressed@temp 0010  
                                     eusartparser@package 003A  
                                   getCurrentComparator@x 0022  
                                      ?_SaveNVM_VarSystem 0001  
                                 ??_rd2RegCompleteHandler 001B  
                                                    l2034 816A  
                                                    l1405 5FCA  
                                       readRFButtons@key1 0088  
                                                    l2039 8176  
                                                    l1512 5486  
                                                    l2410 39F8  
                                                    l2306 4DBC  
                                                    l2235 6FD0  
                                                    l2323 7D1C  
                                                    l1372 8798  
                                                    l1436 5502  
                                                    l3060 21C6  
                                                    l1357 69E4  
                                                    l1366 6B66  
                                                    l2502 7674  
                                                    l2318 7D12  
                                                    l1383 5706  
                                                    l2511 8998  
                                                    l1519 54D2  
                                                    l3048 203A  
                                                    l2249 66CE  
                                                    l2514 89BE  
                                                    l1490 5368  
                                                    l2371 48AA  
                                                    l1731 6844  
                                                    l3083 220C  
                                                    l1388 578E  
                                                    l2348 489E  
                                                    l1740 68B0  
                                                    l1732 684C  
                                                    l1652 5AC4  
                                                    l3228 1066  
                                                    l2365 4896  
                                                    l1741 68B8  
                                                    l1486 83A4  
                                                    l2438 3B6A  
                                                    l1734 6868  
                                                    l1726 680A  
                                                    l1662 5B0C  
                                                    l2375 496E  
                                                    l1743 68E2  
                                                    l1735 6870  
                                                    l1727 6812  
                                                    l2472 3C80  
                                                    l2392 4966  
                                                    l3600 2F0E  
                                                    l1737 688C  
                                                    l1649 5A4E  
                                                    l3433 2DD8  
                                                    l3353 29B0  
                                                    l3097 22E6  
                                                    l4138 859C  
                                                    l3610 2F3C  
                                                    l3602 2F14  
                                                    l1738 6894  
                                                    l3506 8292  
                                                    l2722 4DE8  
                                                    l3603 2F1A  
                                                    l3612 2F42  
                                                    l2580 7F60  
                                                    l2724 4E1E  
                                                    l3613 2F48  
                                                    l3605 2F24  
                                                    l2805 4268  
                                                    l2725 4EDE  
                                                    l2398 497A  
                                                    l3614 2F4E  
                                                    l1854 6DE0  
                                                    l2718 4732  
                                                    l3623 31A4  
                                                    l3615 2F54  
                                                    l3607 2F2A  
                                                    l3375 2AAA  
                                                    l3367 2A70  
                                                    l3624 31AE  
                                                    l3608 2F30  
                                                    l1864 6E14  
                                                    l1856 6DF0  
                                                    l2648 3832  
                                                    l3609 2F36  
                                                    l3385 2BEE  
                                                    l3618 301E  
                                                    l3482 722A  
                                                    l3386 2C0E  
                                                    l2907 19FC  
                                                    l3591 2ED2  
                                                    l2768 4084  
                                                    l3488 8AF8  
                                                    l3593 2EDC  
                                                    l3594 2EE6  
                                                    l3586 2EB8  
                                                    l3674 7AA2  
                                                    l3595 2EF0  
                                                    l3596 2EF6  
                                                    l3588 2EC2  
                                                    l3597 2EFC  
                                                    l3589 2ECC  
                                                    l3598 2F02  
                                                    l3599 2F08  
                                                    ?_rxi 0001  
                                                    _DKEY 02D1  
                                                    _LATA 000F83  
                                                    _LATB 000F84  
                                                    _LATC 000F85  
                                                    _LATD 000F86  
                                                    _LATE 000F87  
                                             main@package 00F1  
                                                    _T2PR 000FBC  
                                                    _PMD0 000EE1  
                                                    _PMD1 000EE2  
                                                    _PMD2 000EE3  
                                                    _PMD3 000EE4  
                                                    _PMD4 000EE5  
                                                    _PMD5 000EE6  
                                                    _EHop 028C  
                                                    _WPUA 000F10  
                                                    _WPUB 000F18  
                                                    _WPUC 000F20  
                                                    _WPUD 000F25  
                                                    _WPUE 000F2D  
                                         __end_of_RGB_Set 9148  
                                 ??_wr2RegCompleteHandler 001B  
                                                    _Bptr 008D  
                                        ??_I2C1_MasterFsm 001D  
                                           _EUSART1_Write 8884  
                               ??_I2C1_CallbackReturnStop 001B  
                                __end_of_controlTimeslots 59B6  
                                                    _main 5CD6  
                                           ?_EUSART1_Read 0001  
                                                    _temp 0080  
                                                    fsr1h 000FE2  
                                                    fsr2h 000FDA  
                                                    indf1 000FE7  
                                                    indf2 000FDF  
                                                    fsr1l 000FE1  
                                                    fsr2l 000FD9  
                                                    btemp 0050  
                                    saveNewSerial@cmdType 003A  
                                     ??_SaveNVM_VarSystem 003A  
                                                    prodh 000FF4  
                                                    prodl 000FF3  
                                                    start 009C  
                                        ??_I2C1_SetBuffer 0014  
                                          ??_ControlMotor 0012  
                                         __end_of_Decrypt 6E6C  
                                ?i2_VerifyElectricalBrake 0001  
                                        getSerialCmd@temp 001C  
                                           ?_InitReceiver 0001  
                              ??_TMR1_SetInterruptHandler 0012  
                                            ___param_bank 000000  
                                         i2_GetMotorPower 6FFC  
                                         __end_of_ReadADC 8500  
                           I2C1_CallbackReturnStop@funPtr 0019  
                                         ??_getTypeRemote 0010  
                                                   ??_rxi 0001  
                                    __end_of_GetOpenOrder 5346  
                                 __end_of_TMR0_Initialize 8EDA  
                                          ?_LoadManufCode 0001  
                          ??_TMR0_DefaultInterruptHandler 0001  
                                           ?_InitSoftStop 0001  
                           sm_execute_ControlLearning@psm 00DC  
                           __end_of_OSCILLATOR_Initialize 90B6  
                      SetSegmentValueIntermitentMain@time 001D  
                                                   l12002 8886  
                                                   l20020 5290  
                                                   l20014 5288  
                                                   l20110 741E  
                                                   l12016 88BA  
                                                   l12018 88BE  
                                                   l20034 52B6  
                                                   l20050 5306  
                                                   l21100 538A  
                                                   l20132 7314  
                                                   l20046 5302  
                                                   l20126 7310  
                                                   l20302 4CC8  
                                                   l21120 53D0  
                                                   l21112 53B4  
                                                   l21104 5398  
                                                   l20080 73BA  
                                                   l12232 69F8  
                                                   l20226 8A62  
                                                   l20218 8A4A  
                                                   l20058 5342  
                                                   l20074 73B6  
                                                   l20410 7FC6  
                                                   l20162 7378  
                                                   l20146 7342  
                                                   l20322 4D2A  
                                                   l20330 4D48  
                                                   l20242 4BC4  
                                                   l21034 360E  
                                                   l21140 5416  
                                                   l21132 53FA  
                                                   l21124 53DE  
                                                   l21116 53C2  
                                                   l21108 53A6  
                                                   l20172 8A94  
                                                   l21220 50E2  
                                                   l21204 5054  
                                                   l20404 7FB2  
                                                   l22004 1C8A  
                                                   l12252 6A4A  
                                                   l12244 6A2C  
                                                   l21028 35F8  
                                                   l20500 29D2  
                                                   l20190 786A  
                                                   l20094 73E8  
                                                   l20406 7FBE  
                                                   l20350 4D7E  
                                                   l20254 4BF0  
                                                   l12270 6A94  
                                                   l12238 6A12  
                                                   l20510 29EE  
                                                   l21160 545C  
                                                   l21152 5440  
                                                   l21144 5424  
                                                   l21136 5408  
                                                   l21128 53EC  
                                                   l21208 505E  
                                                   l21312 72AC  
                                                   l20360 4DA8  
                                                   l20352 4D84  
                                                   l20344 4D5A  
                                                   l20248 4BD6  
                                                   l22016 1CE0  
                                                   l12264 6A7A  
                                                   l12256 6A56  
                                                   l12248 6A3E  
                                                   l12520 8D5A  
                                                   l12512 8D42  
                                                   l21056 71EA  
                                                   l20512 29F6  
                                                   l12602 6B9A  
                                                   l21066 82F6  
                                                   l20186 7866  
                                                   l21218 50D2  
                                                   l21226 50E6  
                                                   l20442 6D1A  
                                                   l21402 4626  
                                                   l22130 1EF0  
                                                   l22042 1D50  
                                                   l12282 6ABA  
                                                   l12274 6AA2  
                                                   l12258 6A60  
                                                   l20530 2A16  
                                                   l20522 2A0A  
                                                   l20514 29FE  
                                                   l23002 232E  
                                                   l21076 833E  
                                                   l21180 54A8  
                                                   l21164 546A  
                                                   l21156 544E  
                                                   l21148 5432  
                                                   l21252 5158  
                                                   l21236 512C  
                                                   l20372 7F24  
                                                   l20460 63DA  
                                                   l20452 638E  
                                                   l20436 6CE0  
                                                   l23100 36D8  
                                                   l12460 7964  
                                                   l20700 2D3A  
                                                   l20508 29E6  
                                                   l20540 2A22  
                                                   l22220 1068  
                                                   l23012 2350  
                                                   l20198 7886  
                                                   l21318 72B6  
                                                   l20278 4C7C  
                                                   l20446 6D54  
                                                   l21430 467E  
                                                   l21414 464A  
                                                   l22118 1ED8  
                                                   l12278 6AAE  
                                                   l12286 6AC4  
                                                   l12462 796C  
                                                   l12454 794E  
                                                   l20702 2D3E  
                                                   l20606 2BB4  
                                                   l22310 1328  
                                                   l22214 1044  
                                                   l22206 101E  
                                                   l22222 10AC  
                                                   l14400 6966  
                                                   l21184 54B6  
                                                   l21176 549A  
                                                   l21168 5478  
                                                   l21096 537C  
                                                   l21088 535A  
                                                   l20288 4C9A  
                                                   l21432 4684  
                                                   l22136 1F06  
                                                   l22072 1DEC  
                                                   l22064 1D9E  
                                                   l22056 1D80  
                                                   l23120 3732  
                                                   l12480 79A4  
                                                   l12472 798C  
                                                   l12448 793E  
                                                   l20712 2D6C  
                                                   l20640 2C56  
                                                   l20544 2A7E  
                                                   l22224 10C2  
                                                   l14402 696E  
                                                   l20466 641E  
                                                   l21362 455E  
                                                   l21346 451A  
                                                   l22146 1F54  
                                                   l23210 395A  
                                                   l20706 2D42  
                                                   l20650 2C94  
                                                   l20546 2A86  
                                                   l22410 1562  
                                                   l22250 11AA  
                                                   l22234 112A  
                                                   l22170 0F66  
                                                   l22162 0F24  
                                                   l23018 2374  
                                                   l12572 7750  
                                                   l21188 54C4  
                                                   l21604 4F1E  
                                                   l21540 4E52  
                                                   l21508 4DD8  
                                                   l21452 469E  
                                                   l21348 4530  
                                                   l20484 8196  
                                                   l23212 395E  
                                                   l23124 3754  
                                                   l23108 36FA  
                                                   l12476 7996  
                                                   l20732 2D9E  
                                                   l20660 2CB0  
                                                   l20652 2C9E  
                                                   l20644 2C5E  
                                                   l20636 2C28  
                                                   l20556 2A9A  
                                                   l20548 2A8E  
                                                   l22500 1710  
                                                   l22252 11AC  
                                                   l22244 1190  
                                                   l23044 23E2  
                                                   l14406 697A  
                                                   l16102 266A  
                                                   l16030 2520  
                                                   l16022 24F2  
                                                   l16014 249E  
                                                   l21710 4136  
                                                   l21630 4F7C  
                                                   l21550 4E76  
                                                   l21470 46D4  
                                                   l21382 45CE  
                                                   l20486 81C8  
                                                   l23222 3976  
                                                   l23214 396A  
                                                   l20726 2D80  
                                                   l20718 2D76  
                                                   l20662 2CB4  
                                                   l20646 2C7A  
                                                   l20638 2C52  
                                                   l20582 2B0A  
                                                   l20494 29BA  
                                                   l22510 17DE  
                                                   l22430 15D0  
                                                   l22414 1584  
                                                   l22342 13CC  
                                                   l22318 1344  
                                                   l22326 1360  
                                                   l22270 1226  
                                                   l22254 11D6  
                                                   l22190 0FE4  
                                                   l22182 0FCC  
                                                   l22174 0F88  
                                                   l22166 0F44  
                                                   l23062 2442  
                                                   l23046 23F6  
                                                   l12584 8D98  
                                                   l12568 770E  
                                                   l16112 26E6  
                                                   l16016 24BA  
                                                   l21296 7264  
                                                   l21616 4F4C  
                                                   l21560 4E94  
                                                   l22096 1E76  
                                                   l23208 3954  
                                                   l23152 37F4  
                                                   l23136 3790  
                                                   l20752 2DCA  
                                                   l20680 2D08  
                                                   l20672 2CE0  
                                                   l20656 2CA8  
                                                   l20576 2AC2  
                                                   l20568 2AB2  
                                                   l20496 29C2  
                                                   l22360 1422  
                                                   l22256 11DC  
                                                   l23072 246E  
                                                   l14442 569A  
                                                   l14418 69A0  
                                                   l14434 878C  
                                                   l17002 3B4C  
                                                   l17010 3B76  
                                                   l16122 2762  
                                                   l16106 2688  
                                                   l16050 258C  
                                                   l16042 256C  
                                                   l16034 253E  
                                                   l16026 2502  
                                                   l16018 24D4  
                                                   l21298 727A  
                                                   l21722 415A  
                                                   l21634 4F88  
                                                   l21570 4EB2  
                                                   l21562 4E9C  
                                                   l21554 4E80  
                                                   l21466 46CA  
                                                   l22098 1E80  
                                                   l23218 3970  
                                                   l23162 3834  
                                                   l20762 2DF2  
                                                   l20746 2DAC  
                                                   l20738 2DA8  
                                                   l20690 2D14  
                                                   l20674 2CE4  
                                                   l20666 2CBC  
                                                   l20586 2B1C  
                                                   l20498 29CA  
                                                   l22514 17EE  
                                                   l22442 160A  
                                                   l22266 11FA  
                                                   l22178 0FAA  
                                                   l23066 2456  
                                                   l23306 5E02  
                                                   l14452 56D0  
                                                   l12596 6B02  
                                                   l16132 27D4  
                                                   l16116 2704  
                                                   l22700 5AA8  
                                                   l21732 417C  
                                                   l21740 4196  
                                                   l21580 4EC4  
                                                   l21476 46E6  
                                                   l21468 46CE  
                                                   l21396 460E  
                                                   l23228 3984  
                                                   l23148 37D2  
                                                   l23164 3874  
                                                   l23092 369E  
                                                   l20940 3362  
                                                   l20772 2E14  
                                                   l20684 2D0C  
                                                   l20596 2B2C  
                                                   l22516 17F4  
                                                   l22460 1666  
                                                   l22356 1412  
                                                   l22292 12D8  
                                                   l23068 2462  
                                                   l14470 57C0  
                                                   l14462 5774  
                                                   l14446 56B0  
                                                   l16142 2846  
                                                   l16070 25EA  
                                                   l16062 25BC  
                                                   l16054 259C  
                                                   l16046 257C  
                                                   l16038 255C  
                                                   l16150 28A4  
                                                   l22702 5AAE  
                                                   l21806 4250  
                                                   l21750 41BA  
                                                   l21670 4072  
                                                   l21910 1AD0  
                                                   l21830 18F0  
                                                   l21822 18BE  
                                                   l21814 188E  
                                                   l23166 388A  
                                                   l20950 33FA  
                                                   l20766 2E04  
                                                   l20774 2E30  
                                                   l20686 2D10  
                                                   l20678 2CEC  
                                                   l20598 2B7A  
                                                   l20782 2E50  
                                                   l22518 17FA  
                                                   l22454 164E  
                                                   l22390 14D0  
                                                   l22382 147C  
                                                   l22374 145E  
                                                   l22358 1416  
                                                   l22534 1840  
                                                   l22198 0FFC  
                                                   l14704 899A  
                                                   l14720 760C  
                                                   l17032 3BDA  
                                                   l16136 27E8  
                                                   l16128 27C0  
                                                   l16160 2F5E  
                                                   l22720 5B30  
                                                   l21728 4174  
                                                   l21656 4004  
                                                   l21488 4710  
                                                   l23096 36C0  
                                                   l23088 3690  
                                                   l20928 333E  
                                                   l20696 2D32  
                                                   l20784 2EA2  
                                                   l22472 1694  
                                                   l22384 147E  
                                                   l22288 12B6  
                                                   l14466 579E  
                                                   l14386 6912  
                                                   l14722 7614  
                                                   l17050 3C2E  
                                                   l17034 3BE8  
                                                   l16090 263A  
                                                   l16082 261A  
                                                   l16074 25FA  
                                                   l16066 25CC  
                                                   l16058 25AC  
                                                   l16170 3156  
                                                   l16162 2FD0  
                                                   l21770 41E0  
                                                   l21754 41C2  
                                                   l21738 4190  
                                                   l21690 40EA  
                                                   l21658 401A  
                                                   l21594 4EF8  
                                                   l21586 4EDA  
                                                   l21850 195E  
                                                   l21842 1938  
                                                   l21834 1914  
                                                   l13842 7A54  
                                                   l13826 8AF2  
                                                   l20946 33BC  
                                                   l20938 3360  
                                                   l20698 2D36  
                                                   l22490 16D6  
                                                   l22482 16BC  
                                                   l22394 14F2  
                                                   l22802 2090  
                                                   l23290 5DC0  
                                                   l23266 5D1C  
                                                   l14716 75FC  
                                                   l17028 3BC2  
                                                   l17044 3C0C  
                                                   l16164 3024  
                                                   l22740 6E9E  
                                                   l22732 6E6E  
                                                   l22724 5B3C  
                                                   l21772 41E6  
                                                   l21756 41CA  
                                                   l21916 1AF0  
                                                   l21908 1AB2  
                                                   l23188 38F4  
                                                   l13844 7A60  
                                                   l20980 34D6  
                                                   l20972 34B0  
                                                   l20948 33F4  
                                                   l22468 1688  
                                                   l23276 5D32  
                                                   l22590 5F4E  
                                                   l22558 5EA4  
                                                   l14718 7604  
                                                   l14726 761C  
                                                   l17070 3C9C  
                                                   l17054 3C42  
                                                   l17038 3BFC  
                                                   l16094 264A  
                                                   l16086 262A  
                                                   l16078 260A  
                                                   l16166 3096  
                                                   l16182 31B8  
                                                   l22750 6EC4  
                                                   l22638 62F0  
                                                   l22718 5B28  
                                                   l21790 421E  
                                                   l21782 4204  
                                                   l21950 1B74  
                                                   l21870 19B2  
                                                   l21862 199A  
                                                   l21854 1978  
                                                   l13854 7A94  
                                                   l20982 34EA  
                                                   l13864 856A  
                                                   l22576 5F16  
                                                   l22592 5F64  
                                                   l14728 7644  
                                                   l17072 3CAA  
                                                   l16168 30E4  
                                                   l22752 6ED6  
                                                   l22736 6E7E  
                                                   l22760 6F0A  
                                                   l21768 41DC  
                                                   l21944 1B5C  
                                                   l20968 3476  
                                                   l22488 16CE  
                                                   l22816 20CC  
                                                   l22808 20B0  
                                                   l23296 5DE4  
                                                   l13866 8572  
                                                   l22578 5F1A  
                                                   l14738 7670  
                                                   l17082 3CDA  
                                                   l17066 3C84  
                                                   l16098 265A  
                                                   l22754 6EF0  
                                                   l22746 6EB4  
                                                   l16610 682E  
                                                   l22666 59DA  
                                                   l21890 1A3E  
                                                   l22906 21FC  
                                                   l22826 20DA  
                                                   l13876 8592  
                                                   l17076 3CC0  
                                                   l16612 6838  
                                                   l21972 1BE4  
                                                   l21948 1B6A  
                                                   l21892 1A54  
                                                   l19110 7C5A  
                                                   l16702 653A  
                                                   l14694 7D08  
                                                   l13982 8764  
                                                   l21878 19DA  
                                                   l22942 227E  
                                                   l22934 2264  
                                                   l22862 2136  
                                                   l22846 210E  
                                                   l22838 20F0  
                                                   l22782 2000  
                                                   l22774 1FBE  
                                                   l19120 7C66  
                                                   l16712 6566  
                                                   l14688 7CEC  
                                                   l22696 5A82  
                                                   l22688 5A54  
                                                   l21984 1C3A  
                                                   l21888 19FE  
                                                   l22928 2246  
                                                   l22872 2162  
                                                   l22856 211E  
                                                   l22768 1F96  
                                                   l22792 203C  
                                                   l19114 7C60  
                                                   l19202 8518  
                                                   l16490 9054  
                                                   l16570 8066  
                                                   l22786 2022  
                                                   l22778 1FE0  
                                                   l22794 2068  
                                                   l19140 81E4  
                                                   l19212 9134  
                                                   l16900 4898  
                                                   l22956 22A2  
                                                   l22892 21BC  
                                                   l22868 2150  
                                                   l22796 207E  
                                                   l19070 77A0  
                                                   l16726 659A  
                                                   l16902 48AE  
                                                   l16822 8158  
                                                   l16814 8132  
                                                   l22894 21C8  
                                                   l22886 219C  
                                                   l19312 8EF8  
                                                   l19136 81DE  
                                                   l19152 81F2  
                                                   l19080 77AC  
                                                   l19208 912C  
                                                   l16672 64CC  
                                                   l16840 475C  
                                                   l19400 7DAA  
                                                   l16568 8062  
                                                   l22976 22D6  
                                                   l22968 22B8  
                                                   l22896 21D6  
                                                   l19146 81EC  
                                                   l19074 77A6  
                                                   l19066 779A  
                                                   l16818 8144  
                                                   l19410 7DF4  
                                                   l16658 68DC  
                                                   l16746 85C8  
                                                   l16586 809A  
                                                   l16578 8084  
                                                   l19180 86A2  
                                                   l19244 8BD4  
                                                   l19340 6F86  
                                                   l19332 6F4A  
                                                   l16940 39FA  
                                                   l16924 4956  
                                                   l16596 67F4  
                                                   l16588 809E  
                                                   l19238 8BC8  
                                                   l19318 8810  
                                                   l19326 8830  
                                                   l19342 6F92  
                                                   l16686 6500  
                                                   l16934 39DA  
                                                   l16926 495A  
                                                   l16854 4788  
                                                   l16846 476C  
                                                   l16598 67FE  
                                                   l19430 6DC2  
                                                   l22998 231E  
                                                   l19088 7816  
                                                   l19176 869C  
                                                   l19352 6FC0  
                                                   l16952 3A44  
                                                   l16928 4968  
                                                   l16872 47DA  
                                                   l16856 478E  
                                                   l19186 86A8  
                                                   l19362 6FF2  
                                                   l19292 7A2E  
                                                   l16980 3ADE  
                                                   l16964 3A7E  
                                                   l19540 5554  
                                                   l19532 550A  
                                                   l19460 6E0C  
                                                   l19452 6DF8  
                                                   l19524 87E8  
                                    write_package@package 0011  
                                   _eusart1RxStatusBuffer 0274  
                                                   l16974 3ABA  
                                                   l16982 3AEC  
                                                   l19534 5510  
                                                   l19550 55BC  
                                                   l19438 6DDC  
                                                   l19518 82D8  
                                                   l19374 8464  
                                                   l19606 75E2  
                                                   l19630 8690  
                                                   l16976 3AC8  
                                                   l16968 3A92  
                                                   l16896 4886  
                                                   l19560 560E  
                                                   l19704 6226  
                                                   l19448 6DEC  
                                                   l19800 3D18  
                                                   l19394 7E68  
                                                   l19386 7E2C  
                                                   l16898 488A  
                                                   l19554 55CA  
                                                   l19570 5676  
                                                   l19378 8478  
                                                   l19626 8672  
                                                   l16996 3B26  
                                                   l19548 55B8  
                                                   l19484 6C20  
                                                   l19628 868C  
                                                   l19580 7EBE  
                                                   l19812 3D5A  
                                                   l16998 3B36  
                                                   l19902 5C02  
                                                   l19742 666A  
                                                   l19830 3E08  
                                                   l19806 3D28  
                                                   l19920 5CC8  
                                                   l19568 5672  
                                                   l19496 6C90  
                                                   l19488 6C4C  
                                                   l19736 6616  
                                                   l19728 65D8  
                                                   l19840 3EA6  
                                                   l19832 3E24  
                                                   l19824 3D9C  
                                                   l19906 5C3A  
                                                   l19842 3EBE  
                                                   l19834 3E40  
                                                   l19826 3DC8  
                                                   l19818 3D6A  
                                                   l19850 3F04  
                                                   l19684 617A  
                                                   l19588 7B02  
                                                   l19596 75A0  
                                                   l19860 3FB2  
                                                   l19844 3ED8  
                                                   l19836 3E6E  
                                                   l19828 3DE4  
                                                   l19852 3F68  
                                                   l18878 800C  
                                                   l19678 6128  
                                                   l19942 51BC  
                                                   l19598 75D2  
                                                   l19846 3EF2  
                                                   l19838 3E8A  
                                                   l19872 89D2  
                                                   l19960 51FA  
                                                   l19936 51B8  
                                                   l19856 3F76  
                                                   l19698 6210  
                                                   l19954 51F6  
                                                   l19794 3D08  
                                                   l19884 89EE  
                                                   l19876 89D8  
                                                   l19966 521E  
                                                   l19798 3D12  
                                                   l19888 89F6  
                                                   l19992 524E  
                                                   l19976 5222  
                                                   l19898 5BC6  
                                                   l19998 5256  
                                                   _ADACQ 000F5C  
                                       __end_of_I2C1_Open 7A32  
                                                   _ADCAP 000F5D  
                                                   _ADACT 000F56  
                                   __end_of_saveNewSerial 7EF2  
                                                   ?_main 0001  
                                                   _ADCLK 000F57  
                                                   _ADCNT 000F67  
                                                   _ADPCH 000F5F  
                                                   _ADREF 000F58  
                                         __end_of___awdiv 79AE  
                          ?_keeloq_classic_decrypt_packet 0038  
                                         __end_of___lbdiv 89FA  
                                                   _ADPRE 000F5E  
                                                   _ADRPT 000F66  
                                         __end_of___lbmod 8D62  
                                            _zeroCrossing 0192  
                                         __end_of___lldiv 7AB4  
                                                   u20100 48EA  
                                                   _T1CLK 000FD2  
                                                   u20200 3A1A  
                                                   u20120 490E  
                                                   u20040 48CA  
                                                   u20210 3A2A  
                                                   u20060 48D6  
                                         ___awdiv@divisor 0016  
                                                   u20080 48E0  
                                                   u12080 7970  
                                                   _T1CON 000FCF  
                                                   u20410 3B8C  
                                                   u22100 6FCC  
                                                   u20260 3A8E  
                                                   u22110 6FE0  
                                                   u20350 3B16  
                                                   u20190 3A0C  
                                                   u22120 6FEE  
                                                   u20440 3BA4  
                                                   u20280 3AAA  
                                                   _T2CON 000FBD  
                                                   u22050 6F64  
                                                   u20540 3C3E  
                                                   u22070 6FA0  
                                                   u20630 3CCE  
                                                   u22080 6FAE  
                                                   u22305 6C2C  
                                                   u20490 3BF8  
                                                   u20580 3C6A  
                                                   u22340 827E  
                                                   u13620 8ADA  
                                                   u24100 3550  
                                                   u22325 6C9C  
                                                   u15310 8994  
                                                   u20590 3C72  
                                                   u15320 89AA  
                                                   u23400 4C46  
                                                   u24120 35E0  
                                                   u15250 7CCC  
                                                   u22370 82D0  
                                                   u23410 4C4E  
                                                   u23260 7896  
                                                   u23500 4CE4  
                                                   u23340 4BE2  
                                                   u13660 7A64  
                                                   _T2HLT 000FBE  
                                                   u23510 4CF4  
                                                   u24070 3516  
                                                   u14800 56FE  
                                                   u15360 7654  
                                                   u22800 89DC  
                                                   u23520 4CFC  
                                                   u21850 916C  
                                                   u13690 8576  
                                                   u15290 7D02  
                                                   u25210 4E4C  
                                                   u22650 6678  
                                                   u23610 4D92  
                                                   u23450 4CAA  
                                                   u23370 4C26  
                                                   u23451 4CA8  
                                                   u21908 7C72  
                                                   u24260 5374  
                                                   u22580 6208  
                                                   u22900 5194  
                                                   u25060 4728  
                                                   u21909 7C84  
                                                   u18101 2754  
                                                   u21918 81FE  
                                                   u14750 5690  
                                                   u14670 6906  
                                                   u22590 65D4  
                                                   u23390 4C36  
                                                   u26110 1B0C  
                                                   u24190 7188  
                                                   u21919 8210  
                                                   u18111 2784  
                                                   u23295 83EC  
                                                   u21928 86B4  
                                                   u14760 56A8  
                                                   u25400 4F2C  
                                                   u26200 1BAA  
                                                   u26120 1B14  
                                                   u21929 86C6  
                                                   u18121 27B2  
                                                   u26201 1BA8  
                                                   u22930 51F2  
                                                   u23650 7F12  
                                                   u25250 4E70  
                                                   u22690 86EE  
                                                   u26130 1B2E  
                                                   u27010 1430  
                                                   u18131 280A  
                                                   u26131 1B2C  
                                                   u25500 4FA6  
                                                   u26220 1C02  
                                                   u27100 1536  
                                                   u27020 1436  
                                                   u18141 2838  
                                                   u18061 24C6  
                                                   u25501 4FA4  
                                                   u26221 1C00  
                                                   u21878 77B8  
                                                   u14790 56EC  
                                                   u24470 5492  
                                                   u23670 7F34  
                                                   u23590 4D6A  
                                                   u26230 1C10  
                                                   u26070 1A8E  
                                                   u21879 77CA  
                                                   u18151 2868  
                                                   u18071 26AA  
                                                   u21968 853C  
                                                   u19040 807C  
                                                   u25600 4112  
                                                   u25440 4F5C  
                                                   u25280 4E90  
                                                   u26160 1B64  
                                                   u27200 165E  
                                                   u28000 2172  
                                                   u21969 854E  
                                                   u18161 2896  
                                                   u18081 26D8  
                                                   u27105 1532  
                                                   u18170 9126  
                                                   u23690 7F8C  
                                                   u26410 1D6E  
                                                   u26250 1C4A  
                                                   u23930 337A  
                                                   u27130 15E0  
                                                   u18091 2726  
                                                   u24580 50F6  
                                                   u24900 4634  
                                                   u26500 1E0C  
                                                   u26340 1D04  
                                                   u26260 1C64  
                                                   u26180 1B88  
                                                   u23860 2DFE  
                                                   u27140 15E6  
                                                   u27060 14A4  
                                                   u28020 21AA  
                                                   u26261 1C62  
                                                   u25630 4144  
                                                   u25550 4038  
                                                   u24830 4584  
                                                   u26430 1D9C  
                                                   u26350 1D0A  
                                                   u26190 1B90  
                                                   u23870 32E8  
                                                   u27150 161A  
                                                   u28110 2224  
                                                   u27151 1618  
                                                   u27055 148E  
                                                   u19320 64E8  
                                                   u26440 1DB8  
                                                   u26360 1D2E  
                                                   u26280 1CA8  
                                                   u23880 32EE  
                                                   u26441 1DB6  
                                                   u26361 1D2C  
                                                   u26281 1CA6  
                                                   u27065 14A0  
                                                   u27410 5F86  
                                                   u27330 5EE0  
                                                   u19410 652C  
                                                   u19250 64B4  
                                                   u24690 7288  
                                                   u25730 41F4  
                                                   u25650 4150  
                                                   u24930 4658  
                                                   u24850 45E6  
                                                   u26450 1DC6  
                                                   u26290 1CB6  
                                                   u27170 1630  
                                                   u28130 2234  
                                         __end_of___lwdiv 85A6  
                                                   u27420 5F94  
                                                   u19340 64F4  
                                                   u25660 4168  
                                                   u25580 40FE  
                                                   u24780 4546  
                                                   u26540 1EEA  
                                                   u23980 3434  
                                                   u27260 16E6  
                                                   u27180 1644  
                                                   u28060 21F6  
                                                   u27261 16E4  
                                                   u27350 5EF8  
                                                   u19270 64C0  
                                                   u24870 45FA  
                                                   u26390 1D62  
                                                   u27095 1520  
                                                   u27440 5FAE  
                                                   u27600 5A82  
                                                   u25760 4214  
                                                   u28240 22F6  
                                                   u27185 1640  
                                                   u28241 22F4  
                                                   u19450 655C  
                                                   u25690 41AE  
                                                   u24970 46B2  
                                                   u26570 1F04  
                                                   u26490 1E06  
                                                   u25850 18B2  
                                                   u26730 105A  
                                                   u28410 23C0  
                                                   u27380 5F32  
                                                   u19540 65AA  
                                                   u27620 5AA8  
                                                   u26580 1F20  
                                                   u26581 1F1E  
                                                   u19550 65B2  
                                                   u27630 5ABC  
                                                   u26590 1F2E  
                                                   u26910 1336  
                                                   u18575 8F52  
                                                   u27480 835C  
                                                   u19560 65BA  
                                                   u19480 6574  
                                                   u18576 8F54  
                                                   u25880 18E4  
                                                   u28600 3748  
                                                   u26920 133C  
                                                   u27490 838E  
                                                   u19570 85B0  
                                                   u28530 36B4  
                                                   u26930 1352  
                                                   u28450 240E  
                                                   u28370 23A2  
                                                   u28290 233C  
                                                   u26931 1350  
                                                   u19900 47FC  
                                                   u19660 8120  
                                                   u27820 2016  
                                                   _T2TMR 000FBB  
                                                   u27741 6E90  
                                                   u19581 85BE  
                                                   u19830 47B6  
                                                   u27590 5A74  
                                                   u28710 38A6  
                                                   u28550 36EE  
                                                   u26870 128A  
                                                   u19920 4808  
                                                   u19840 47C4  
                                                   u27680 5B0C  
                                                   u26880 12E6  
                                                   u28480 2426  
                                                   u26865 1274  
                                                   u19850 47D4  
                                                   u26890 12EC  
                                                   _T2RST 000FC0  
                                                   u19851 47D2  
                                                   u27771 6EE2  
                                                   u26875 1286  
                                                   u19940 4812  
                                                   u28580 3726  
                                                   u19870 47E8  
                                                   u28750 38E4  
                                                   u27790 1FB2  
                                                   u19960 481C  
                                                   i2l106 8AC4  
                                                   u19980 483E  
                                                   u28837 7E04  
                                                   u28847 7E78  
                                                   u28791 5DD4  
                                                   i2l870 004C  
                                                   i2l872 006A  
                                                   i2l873 0080  
                                                   i2l874 0076  
                                                   i2l867 0030  
                                         ___awdiv@counter 0018  
                                              _CloseOrder 8DB4  
                              __end_of_i2c1_fsmStateTable 0F21  
                                                   _OSCEN 000EDC  
                                                   _TMR0H 000FD4  
                                                   _TMR1H 000FCE  
                                                   _TMR0L 000FD3  
                                                   _TMR1L 000FCD  
                                                   _RFBit 0089  
                                                   _PORTB 000F8E  
                               __end_of_SaveNVM_VarSystem 8A32  
                          DecryptPacket_12BIT@commandType 00E4  
                                                   _TRISA 000F88  
                                                   _TRISB 000F89  
                                                   _TRISC 000F8A  
                                                   _TRISD 000F8B  
                                                   _TRISE 000F8C  
                                  ??_I2C1_MasterGetRxData 0010  
                                   ?_I2C1_DO_RX_NACK_STOP 0001  
                             validateRemoteSerialNumber@i 003A  
                             validateRemoteSerialNumber@j 0039  
                                     ___lmul@multiplicand 0021  
                               ?_TMR0_SetInterruptHandler 0010  
                                           _InitSoftStart 8294  
                              ??_I2C1_CallbackReturnReset 001B  
                                       ??_I2C1_MasterOpen 0010  
                                        _idxAdcAquisition 0091  
                                    _EUSART1_Transmit_ISR 8A98  
                                       ??_I2C1_MasterStop 0010  
                                       ??_I2C1_Initialize 0010  
                               GetMotorPower@defineatraso 0013  
                                        __end_of_TMR0_ISR 8E4C  
                                        __end_of_TMR1_ISR 8984  
                                        __end_of_TMR2_ISR 611A  
                                    _idxSaveEnergyADCHist 0090  
                                                   _rfCMD 003B  
                                                   _aux_i 018C  
                          actionZone_Closed@typeOpenOrder 0021  
                                        _setFlashLigth_ON 8984  
                                          ?_EUSART1_Write 0001  
                                          readbutton@key1 0086  
                                   SetSegmentValueMain@d1 001D  
                                          readbutton@key2 0196  
                                   SetSegmentValueMain@d2 001C  
                                 __end_of_TMR1_Initialize 8884  
                                    setFlashLigth_ON@Freq 0010  
                                                   pclath 000FFA  
       rd1RegCompleteHandler@i2c1_master_example$F500@ptr 0019  
                                                   pclatu 000FFB  
                                         __end_of_sumHIST 6BDC  
                                         __end_of_sm_init 8454  
                                                   tablat 000FF5  
       rd2RegCompleteHandler@i2c1_master_example$F511@ptr 0019  
       wr2RegCompleteHandler@i2c1_master_example$F523@ptr 0019  
       wr1RegCompleteHandler@i2c1_master_example$F517@ptr 0019  
     rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr 0019  
                                          ??_EUSART1_Read 0010  
                                                   plusw0 000FEB  
                                                   plusw2 000FDB  
                                 __end_of_sm_execute_main 249C  
                                                   ttemp5 0051  
                                                   ttemp6 0054  
                                                   ttemp7 0058  
                                                   status 000FD8  
                                         ??_ControlLights 0016  
                                                   wtemp8 0051  
                                            ??_I2C1_DO_RX 001B  
                                            ??_I2C1_DO_TX 001B  
                                         ??_ControlInputs 0010  
                                         ___lbdiv@divisor 0010  
              __end_of_EUSART1_DefaultFramingErrorHandler 92B2  
                    ??_EUSART1_DefaultFramingErrorHandler 0001  
                     ?_EUSART1_DefaultFramingErrorHandler 0001  
                      _EUSART1_DefaultFramingErrorHandler 92B0  
                                         _TMR1_WriteTimer 8F72  
                                  ??_I2C1_DO_ADDRESS_NACK 001B  
                                         ___lbdiv@counter 0012  
                            __end_of_getStateOpenPosition 66D2  
                                            ??_I2C1_Close 0010  
                                          ??_InitReceiver 0010  
                        VerifyElectricalBrake@actualState 0011  
                      i2VerifyElectricalBrake@actualState 0002  
                                         __initialization 70C2  
                                 cmdMemoryIsEmpty@cmdType 0031  
                             ?_SetSegmentValueIntermitent 0010  
                              __end_of_EUSART1_Initialize 7BB2  
                                            __end_of_main 5E58  
                         sm_execute_menuConfiguration@psm 00E9  
                             __end_of_DecryptPacket_12BIT 7702  
                                          _refreshCurrent 8774  
                                          ??_InitSoftStop 0014  
                      validateRemoteSerialNumber@position 0033  
                                 __end_of_TMR2_Initialize 8BAC  
                             ?_INTERRUPT_InterruptManager 0001  
                                          _refreshSegment 78A4  
                                  ??_I2C1_MasterOperation 0020  
                                _TMR2_SetInterruptHandler 9186  
                                                  ??_main 003B  
                                       ??_WWDT_Initialize 0010  
                                           __activetblptr 000003  
                                       Segments_Set@value 0001  
                                   saveNewSerial@position 00DC  
                      __end_of_validateRemoteSerialNumber 5682  
                              _validateRemoteSerialNumber 54E6  
                                          ?_InitSoftStart 0001  
                                   ?_EUSART1_Transmit_ISR 0001  
                                           sumEnergyADC@i 0018  
                                      __end_of_I2C1_DO_RX 7CA8  
                                      __end_of_I2C1_DO_TX 781A  
                                       ?_InitWalkAutoTime 0001  
                                       ??_controlVelocity 00DA  
                                               ??_RGB_Set 0010  
                              ?_ControlDecelarationFactor 0001  
                                    __end_of_getSerialCmd 8694  
                  __end_of_SetSegmentValueIntermitentMain 90F4  
                          _SetSegmentValueIntermitentMain 90E0  
                                      __end_of_I2C1_Close 8EFC  
                                                  _ADACCH 000F71  
                                                  _ADACCL 000F70  
                                 ?_I2C1_Read1ByteRegister 0022  
                                      ??_InitWalkAutoTime 0010  
                                                  _ADCON0 000F60  
                                                  _ADCON1 000F59  
                                                  _ADCON2 000F5A  
                                                  _ADCON3 000F5B  
                                                  _ADERRH 000F6F  
                                                  _ADERRL 000F6E  
                                                  _ADLTHH 000F6B  
                                                  _ADLTHL 000F6A  
                                                  _ADRESH 000F64  
                                                  _ADRESL 000F63  
                                                  _ADSTAT 000F65  
                                                  _ADUTHH 000F6D  
                                        ___awdiv@dividend 0014  
                                                  _ADUTHL 000F6C  
                                                  _ANSELA 000F11  
                                                  _ANSELB 000F19  
                                                  _ANSELC 000F21  
                                                  _ANSELD 000F26  
                                                  _ANSELE 000F2E  
                                                  _T0CON0 000FD5  
                                                  _T0CON1 000FD6  
                                                  _T1GATE 000FD1  
                                                  _T1GCON 000FD0  
                                     readRFButtons@serial 0181  
                                                  _IOCBN3 00789B  
                                                  _IOCBP3 0078A3  
                                                  _RC1REG 000F99  
                                           _readRFButtons 59B6  
                                                  _RC1STA 000F9D  
                                                  _RC3PPS 000EFA  
                                 TMR1_WriteTimer@timerVal 0001  
                                                  _RC4PPS 000EFB  
                                                  _ODCONA 000F0F  
                                                  _ODCONB 000F17  
                                                  _ODCONC 000F1F  
                                                  _ODCOND 000F24  
                                                  _ODCONE 000F2C  
                                                  _RC7PPS 000EFE  
                                   __end_of_GetMotorPower 6FFC  
                                                  i2l1147 8F84  
                                                  i2l2019 593C  
                                                  i2l2123 78D4  
                                                  i2l2135 7928  
                                                  i2l2128 78F2  
                                                  i2l2217 4B6C  
                                                  i2l1266 6024  
                                                  i2l2235 7096  
                                                  i2l2323 7D94  
                                                  i2l1277 60AE  
                                                  i2l2318 7D8A  
                                                  i2l2190 4A8E  
                                                  i2l1615 443A  
                                                  i2l2186 49A8  
                                                  _INLVLA 000F0D  
                                                  _INLVLB 000F15  
                                                  _INLVLC 000F1D  
                                                  _INLVLD 000F22  
                                                  _INLVLE 000F2A  
                                               ??_Decrypt 001D  
                                  calculateMean@meanValue 0010  
                                                  _OSCFRQ 000EDE  
                         __end_ofi2_VerifyElectricalBrake 7D98  
                                                  _TMR0IE 007615  
                                                  _TMR0IF 007655  
                                                  _RX1PPS 000EB5  
                            __end_of_refreshADCZeroOffset 69E6  
                                                  _TX1REG 000F9A  
                                                  _TX1STA 000F9E  
                                __end_of_cmdMemoryIsEmpty 75E6  
                                       ?_I2C1_MasterClose 0001  
                                                  _DecCHK 8A66  
                                 __end_ofi2_GetMotorPower 70C2  
                                                  _RFFull 008B  
                                rdBlkRegCompleteHandler@p 0019  
                                               ??_ReadADC 0002  
                                 ??_I2C1_MasterDisableIrq 0010  
                                       ?_I2C1_MasterStart 0001  
                    __end_of_sm_execute_menuConfiguration 1886  
                            _sm_execute_menuConfiguration 0F22  
                                       ?_I2C1_MasterWrite 0001  
                                                  _HopCHK 781A  
                                ?_I2C1_MasterWaitForEvent 0001  
                                      ??_I2C1_MasterClose 0010  
                                        _I2C1_DO_TX_EMPTY 81DA  
                                 controlSelectRemote@temp 00E8  
                                  _SumEnergyADCHist_array 0260  
                                      ??_I2C1_MasterStart 0010  
                                      ??_I2C1_MasterWrite 0022  
                                       _decrementTimeslot 8D62  
                    __end_of_TMR1_DefaultInterruptHandler 92AE  
                            _TMR1_DefaultInterruptHandler 92AC  
                                  __end_of_refreshCurrent 87BA  
                                           ?_read_package 0011  
                                                  ___lmul 8454  
                                         ??_LoadManufCode 0010  
                                                  ___wmul 8E00  
                                  __end_of_refreshSegment 792A  
                                               ??___awdiv 0018  
                                               ??___lbdiv 0011  
                                               ??___lbmod 0011  
                                               ??___lldiv 0018  
                                      ?_decrementTimeslot 0001  
                                               ??___lwdiv 0014  
                                       ??_i2c_writeNBytes 0027  
                                           _load_New_Menu 3CE8  
                             __end_of_keeloqDecryptPacket 517E  
                                ?_EUSART1_SetErrorHandler 0010  
                                                  _memcpy 87FE  
                                        ?_TMR0_Initialize 0001  
                                                  clear_0 7138  
                                                  clear_1 7144  
                                                  clear_2 7150  
                                                  clear_3 715C  
                                                  clear_4 7168  
                                        ___awdiv@quotient 001A  
                                       ??_WWDT_TimerClear 0010  
                      __end_of_sm_execute_ControlLearning 1F94  
                              _sm_execute_ControlLearning 1886  
                                                  isa$std 000001  
                        ??_EUSART1_SetOverrunErrorHandler 0012  
                         ?_EUSART1_SetOverrunErrorHandler 0010  
                                       ??_WWDT_SoftEnable 0010  
                                ??_I2C1_DO_SEND_ADR_WRITE 0011  
                          SetSegmentValueIntermitent@time 0011  
                                  setValueToEdit@menuType 00DE  
                                       ?_I2C1_SetCallback 0010  
                                  ??_I2C1_DO_RX_NACK_STOP 0010  
                                           ??_ShowVersion 001E  
                                         _ADCC_Initialize 85F6  
                                     ??_decrementTimeslot 0003  
                                             ?_CloseOrder 0001  
                                   _I2C1_DO_SEND_ADR_READ 9156  
                                          _PMD_Initialize 8F56  
                                              _StateTRIAC 0190  
                                           ?_eusartparser 003A  
                           ?_I2C1_SetDataCompleteCallback 0015  
                                      ??_I2C1_SetCallback 0014  
                                            __mediumconst 0000  
                          __end_of_I2C1_Read1ByteRegister 834C  
                                    __end_of_ControlMotor 497E  
                                                  tblptrh 000FF7  
                                                  tblptrl 000FF6  
                                           Decrypt@Buffer 0022  
                                                  tblptru 000FF8  
                                               ??_sumHIST 0014  
                                               ??_sm_init 0017  
                                   SaveNVM_VarSystem@page 00D8  
                              __end_of_actionZone_Closing 426A  
                               ?_ADCC_GetSingleConversion 0001  
                                         ??_EUSART1_Write 0010  
                       __end_of_ControlDecelarationFactor 9028  
                TMR2_SetInterruptHandler@InterruptHandler 0010  
                TMR1_SetInterruptHandler@InterruptHandler 0010  
                TMR0_SetInterruptHandler@InterruptHandler 0010  
                                        ??_ControlCurrent 0023  
                                  setValueToEdit@posindex 00DF  
                                 __end_of_TMR1_WriteTimer 8F8E  
                                         _eusart1RxBuffer 027C  
                                          ?_readRFButtons 0001  
                                        ___lbdiv@dividend 0011  
                                 _I2C1_DO_RX_NACK_RESTART 9204  
                                         _eusart1TxBuffer 0284  
                                     _SetSegmentValueMain 8FA8  
                                        ?_TMR1_Initialize 0001  
                                       _SYSTEM_Initialize 8AFA  
                              __end_of_actionZone_Opening 4734  
                          I2C1_SetDataCompleteCallback@cb 0015  
                                         ___lbmod@divisor 0010  
                                              __accesstop 0060  
                                 __end_of__initialization 716E  
                                         ___lbmod@counter 0012  
                                           Decrypt@packet 001B  
                           setValueToEdit@haveValueToEdit 00E0  
                                        ?_sm_execute_main 00ED  
                                          _setValueToEdit 29A4  
                                      getSerialCmd@serial 001B  
                         I2C1_MasterOperation@returnValue 0021  
                                      ?_SYSTEM_Initialize 0001  
                                           ___rparam_used 000001  
                               __end_of_decrementTimeslot 8D8C  
                                           ??_I2C1_Poller 0020  
                                           ?_Segments_Set 0001  
                                          ??_read_package 0018  
                         ??_setPositionInvertionInClosing 00D8  
                           ?_sm_execute_menuConfiguration 00E9  
                           __end_of_EUSART1_RxDataHandler 8F1E  
                                 _rdBlkRegCompleteHandler 8904  
                                          __pcstackCOMRAM 0001  
                                         ?_refreshCurrent 0001  
                                   __end_of_getKeyPressed 9058  
                                            __pidataBANK0 92A6  
                                            __pidataBANK1 9274  
                                            __pidataBANK2 92A8  
                                            __pidataBANK3 8E4C  
                                     ??_SYSTEM_Initialize 0014  
                        __end_of_I2C1_MasterEnableRestart 929A  
                                          ?_load_New_Menu 0001  
                               sm_execute_ControlGate@psm 00E7  
                                               ?_TMR0_ISR 0001  
                                         ?_refreshSegment 0001  
                                               ?_TMR1_ISR 0001  
                                               ?_TMR2_ISR 0001  
                           ?_TMR1_DefaultInterruptHandler 0001  
                         ??_setPositionInvertionInOpening 0032  
                                    ?_SetSegmentValueMain 001C  
                                        ?_TMR2_Initialize 0001  
                                        ___lbdiv@quotient 0013  
                                  __end_of_PMD_Initialize 8F72  
                            ??_I2C1_DO_SEND_RESTART_WRITE 0010  
                                 ??_I2C1_MasterSendTxData 0010  
                                         ??_InitSoftStart 0014  
                                    __end_of_EUSART1_Read 8774  
                                          ??_eusartparser 00DC  
                                  ??_EUSART1_Transmit_ISR 0001  
                                    _getStateOpenPosition 65C2  
                               write_eusartparser@package 0010  
                                           ?_RemoveSerial 003A  
                                    __end_of_InitReceiver 8FA8  
                         actionZone_Closing@typeOpenOrder 0033  
                             __end_of_EUSART1_Receive_ISR 74BC  
                                   __end_of_I2C1_DO_RESET 91E0  
                          keeloqDecryptPacket@commandType 00E9  
                                        sumEnergyADC@sumE 0014  
                        verifyProgramingMode@classic_data 0010  
                                       __end_of_ReqResync 9040  
                             VerifyFollowMe@securityClose 0010  
                               __end_of_SYSTEM_Initialize 8B28  
                                     __end_of_ShowVersion 8178  
                                           _eusart1RxHead 0095  
                                           _eusart1TxHead 0097  
                                           _eusart1RxTail 0094  
                                              __pbssBANK0 0060  
                                              __pbssBANK1 0100  
                                              __pbssBANK2 0200  
                                              __pbssBANK3 0300  
                                  __end_of_setValueToEdit 2EA8  
                                           _eusart1TxTail 0096  
                         __end_of_I2C1_MasterWaitForEvent 9204  
                       _EUSART1_TxDefaultInterruptHandler 02ED  
                                            _GetOpenOrder 517E  
                                    __end_of_InitSoftStop 872C  
                         ??_EUSART1_SetRxInterruptHandler 0012  
                          validateRemoteSerialNumber@mask 0035  
                                cmdMemoryIsEmpty@position 002E  
                           __end_of_rd2RegCompleteHandler 8CB4  
                                    I2C1_Open@returnValue 0011  
                                                 ?_DecCHK 0010  
                                           ?_WaitPreFlash 0001  
                                        ?i2_GetMotorPower 0001  
                            __end_of_SetSegmentValueLearn 6AE2  
                                       ?_controlTimeslots 0001  
                           __end_of_wr2RegCompleteHandler 8C88  
                                           ?_NormalKeyGen 0026  
                                   __end_of_sm_send_event 8294  
                                   _rd1RegCompleteHandler 8CB4  
                                                 ?_HopCHK 0024  
                                          ??_Segments_Set 0001  
              validateRemoteSerialNumber@VerifyOnlySerial 0032  
                                              _edit_Param 0046  
                                       _I2C1_DO_SEND_STOP 921C  
                                      ??_controlTimeslots 0005  
                                           _button_struct 004C  
                                   _wr1RegCompleteHandler 8CE0  
                         __end_of_EUSART1_SetErrorHandler 91D6  
                                       getHopCode@tempHop 0020  
                                       getHopCode@tempPos 0022  
                        __end_of_TMR0_SetInterruptHandler 91A4  
                                                 ?___lmul 001D  
                                      ?_I2C1_DO_SEND_STOP 0001  
                                                 ?___wmul 0010  
                                              ??_TMR0_ISR 0003  
                                              _getHopCode 611A  
                                              ??_TMR1_ISR 000A  
                                              ??_TMR2_ISR 0005  
                                 __end_of_ADCC_Initialize 8646  
                                         _I2C1_MasterOpen 9070  
                                   ??_SetSegmentValueMain 001D  
                                         _I2C1_MasterStop 9292  
                                         _I2C1_Initialize 90F4  
                                     __end_of_I2C1_Poller 913A  
                                __end_of_setFlashLigth_ON 89C0  
                                                 _ADFLTRH 000F73  
                                                 _ADFLTRL 000F72  
                                                 ?_memcpy 0010  
                                    readRFButtons@keyType 0087  
                                       __end_of_StopOrder 8F3A  
                                          ___lmul@product 0025  
                                                 _ADPREVH 000F62  
                                                 _ADPREVL 000F61  
                                write_eusartparser@debug2 0021  
                              __end_of_ResetDefaultMemory 5CD6  
                                                 _ADSTPTH 000F69  
                                                 _ADSTPTL 000F68  
                          _menuConfiguration_stateMachine 02BD  
                                         ?_PMD_Initialize 0001  
                       keeloq_classic_decrypt_packet@data 0038  
                                  ?_I2C1_DO_SEND_ADR_READ 0001  
                                           _erroranterior 0189  
                                     ??_I2C1_DO_SEND_STOP 0010  
                  __end_of_EUSART1_SetFramingErrorHandler 91CC  
                          _EUSART1_SetFramingErrorHandler 91C2  
                                    _refreshADCZeroOffset 68E8  
                                ??_sm_execute_ControlGate 00E9  
                                   i2c_readDataBlock@data 0024  
                                   _VerifyElectricalBrake 7CA8  
                                                 i2l14140 4398  
                                                 i2l14124 4330  
                                                 i2l14108 42DE  
                                                 i2l14142 439E  
                                                 i2l14118 430A  
                                                 i2l14230 49DA  
                                                 i2l12544 8F1A  
                                                 i2l14160 43FA  
                                                 i2l14152 43D2  
                                                 i2l14136 4378  
                                                 i2l14304 4B50  
                                                 i2l14232 49E4  
                                                 i2l14216 499E  
                                                 i2l14138 4388  
                                                 i2l14172 4444  
                                                 i2l14092 428C  
                                                 i2l14316 4B8C  
                                                 i2l14260 4A62  
                                                 i2l14238 49FE  
                                                 i2l14184 4468  
                                                 i2l14096 42A2  
                                                 i2l14088 427C  
                                                 i2l14248 4A28  
                                                 i2l14328 84BA  
                                                 i2l14352 78F6  
                                                 i2l16202 8ABE  
                                                 i2l14194 4490  
                                                 i2l14178 4452  
                                                 i2l14098 42AA  
                                                 i2l14362 7924  
                                                 i2l14188 4478  
                                                 i2l14292 4B12  
                                                 i2l14268 4AA0  
                                                 i2l16222 74B6  
                                                 i2l14198 44A8  
                                                 i2l13904 7086  
                                                 i2l13914 70B8  
                                                 i2l16330 60E2  
                                                 i2l16322 60C6  
                                                 i2l13940 7D80  
                                                 i2l16308 6092  
                                                 i2l13934 7D64  
                                                 i2l16272 5FFC  
                                                 i2l16336 60FA  
                                                 i2l16264 5FE8  
                                                 i2l13892 704C  
                                                 i2l13884 7010  
                                                 i2l13894 7058  
                                                 i2l16288 6046  
                                                 i2l16298 6070  
                          actionZone_Opened@typeOpenOrder 0021  
                                   ?_getStateOpenPosition 0001  
                                          ??_RemoveSerial 00D8  
                                              _fimdecurso 0175  
                            ?_EUSART1_DefaultErrorHandler 0001  
                                       _I2C1_MasterIsNack 9164  
                                                 _SP1BRGH 000F9C  
                                                 _SP1BRGL 000F9B  
                                              _dispStruct 0072  
                                                 _OSCCON1 000ED8  
                                                 _OSCCON3 000EDA  
                                               _I2C1_Open 79AE  
                               ??_I2C1_DO_RX_NACK_RESTART 0010  
                                                 _RGB_Set 913A  
                                              _auxCounter 00F8  
                                         ??_readRFButtons 003B  
                                                 _OSCTUNE 000EDD  
                                       _I2C1_MasterSetIrq 9250  
                                                 _SSP1ADD 000F93  
                                                 _SLRCONA 000F0E  
                                                 _SLRCONB 000F16  
                                                 _SLRCONC 000F1E  
                                                 _SLRCOND 000F23  
                                                 _SLRCONE 000F2B  
                                                 _WDTCON0 000ED2  
                                                 _SSP1BUF 000F92  
                                                 _WDTCON1 000ED3  
                                      ?_I2C1_MasterIsNack 0001  
                              ?_I2C1_DO_SEND_RESTART_READ 0001  
                          ??_I2C1_SetDataCompleteCallback 0019  
                                        ?_TMR1_WriteTimer 0001  
                                      ?_I2C1_MasterSetIrq 0001  
                            __end_of_generateErrorLearnig 8112  
                                            _classic_data 0292  
                                          load_New_Menu@i 0023  
                                         ?_setValueToEdit 003A  
                                                 _RFcount 007E  
                         ??_keeloq_classic_decrypt_packet 00D8  
                                                 _Decrypt 6DA0  
                                          ??_WaitPreFlash 0018  
                                                 _RFstate 0198  
                                      _i2c1_fsmStateTable 0F01  
                                          ??_NormalKeyGen 0028  
                                     ??_I2C1_MasterIsNack 0010  
  __end_of_rd1RegCompleteHandler@i2c1_master_example$F500 8C5C  
          _rd1RegCompleteHandler@i2c1_master_example$F500 8C30  
  __end_of_rd2RegCompleteHandler@i2c1_master_example$F511 8C30  
          _rd2RegCompleteHandler@i2c1_master_example$F511 8C04  
  __end_of_wr2RegCompleteHandler@i2c1_master_example$F523 8D38  
          _wr2RegCompleteHandler@i2c1_master_example$F523 8D0C  
  __end_of_wr1RegCompleteHandler@i2c1_master_example$F517 8C04  
                               __end_of_I2C1_DO_SEND_STOP 9224  
          _wr1RegCompleteHandler@i2c1_master_example$F517 8BD8  
__end_of_rdBlkRegCompleteHandler@i2c1_master_example$F535 8904  
        _rdBlkRegCompleteHandler@i2c1_master_example$F535 88C4  
                               ??_rdBlkRegCompleteHandler 001B  
                          getCurrentComparator@tempOffset 0020  
                                                 _ReadADC 84AA  
                                      I2C1_SetCallback@cb 0010  
                                           _write_package 8B54  
                                     ??_I2C1_MasterSetIrq 0010  
                                     _controlSelectRemote 32CC  
                              __end_of_clearLearningValue 7C2E  
                                                 _NextHop 028E  
                                                 __Hparam 0000  
                              __end_of_write_eusartparser 32CC  
                                                 __Lparam 0000  
                                         _WWDT_Initialize 917C  
                                         ??_load_New_Menu 0020  
                              ??_TMR2_SetInterruptHandler 0012  
                                               _ADC_array 0200  
                                            _getSerialCmd 8646  
                                                 ___awdiv 792A  
                                                 ___lbdiv 89C0  
                                                 ___lbmod 8D38  
                                                 ___lldiv 7A32  
                                              _readInputs 67E0  
                                         _controlVelocity 4BA0  
                                                 ___lwdiv 8554  
                                           _OpenFullOrder 8DDA  
                                            __psmallconst 0F00  
                                     RemoveSerial@cmdType 00DA  
                   __end_of_setPositionInvertionInClosing 649E  
                           _setPositionInvertionInClosing 6376  
                          ??_sm_execute_menuConfiguration 00EB  
                                     _EUSART1_is_rx_ready 911A  
                                          getHopCode@data 0016  
                                                 _difTime 018F  
                                                 __pcinit 70C2  
                                           ?_I2C1_DO_IDLE 0001  
                                           ?_I2C1_DO_RCEN 0001  
                                                 __ramtop 0F00  
                                  i2c_writeNBytes@address 0039  
                                   __end_of_getTypeRemote 924A  
                                                 __ptext0 5CD6  
                                                 __ptext1 1F94  
                                                 __ptext2 0F22  
                                                 __ptext3 29A4  
                                                 __ptext4 3CE8  
                                                 __ptext5 8F8E  
                                                 __ptext6 32CC  
                                                 __ptext7 7E82  
                                                 __ptext8 9244  
                                                 __ptext9 8646  
                                   ?_refreshADCZeroOffset 0001  
                                              _memoryTEMP 02A2  
                                      i2c_readDataBlock@d 002A  
                                _I2C1_MasterEnableRestart 9296  
                          ??_TMR1_DefaultInterruptHandler 0001  
                               __end_of_I2C1_MasterIsNack 9170  
                            ?_I2C1_SetAddressNackCallback 0015  
                                               _T1CONbits 000FCF  
                   __end_of_setPositionInvertionInOpening 6DA0  
                           _setPositionInvertionInOpening 6CC4  
                                                 _lastKey 0194  
                                              _readbutton 803E  
                                   _OSCILLATOR_Initialize 90A0  
                                   OpenWalkOrder@diffTime 001A  
                                             _ShowVersion 8112  
                                    ?_controlSelectRemote 0001  
                             ?_validateRemoteSerialNumber 002E  
                                        _InitFullAutoTime 8FC2  
                               __end_of_I2C1_MasterSetIrq 9256  
                             checkNVM_VarSystem@saveParam 003A  
                                                 _menu_st 0151  
                                __end_of_I2C1_DO_TX_EMPTY 8238  
                                  RemoveSerial@tempSerial 00DB  
                                       __end_of_setRGB_ON 7676  
                                      _EUSART1_Initialize 7B34  
                                ??_PIN_MANAGER_Initialize 0010  
                               ?_TMR1_SetInterruptHandler 0010  
                                              ?_I2C1_Open 0001  
                                                 _sumHIST 6AE2  
                                                 _sm_init 83FE  
                                          _BufferRF_12BIT 0187  
                                             sumHIST@sumH 001C  
                                    __end_of_read_package 85F6  
                                                 _var_sys 0100  
                           ??_EUSART1_DefaultErrorHandler 0001  
                             ??_ControlDecelarationFactor 0010  
                                ?_I2C1_CallbackReturnStop 0019  
                                           _OpenWalkOrder 7F62  
                                    _zeroCrossingWaitTime 02EF  
                                       SetSegmentValue@d1 001D  
                                       SetSegmentValue@d2 001C  
                       __end_of_I2C1_DO_SEND_RESTART_READ 923C  
                                    end_of_initialization 716E  
                              __end_of_I2C1_MasterSendAck 925C  
                                    ?_EUSART1_is_rx_ready 0001  
                                     _I2C1_MasterClearIrq 9262  
                                     ?_EUSART1_Initialize 0001  
                                               _PCON0bits 000FD7  
                                                 memcpy@d 0017  
                                                 memcpy@n 0014  
                                                 memcpy@s 0019  
                              __end_of_I2C1_MasterStartRx 928A  
                             _EUSART1_OverrunErrorHandler 02E7  
                                  ?_rd1RegCompleteHandler 0019  
                                         _i2c_writeNBytes 7E0E  
                              ?_GetSecurityStateInClosing 0001  
                                  _I2C1_DO_SEND_ADR_WRITE 9148  
                                       ?_cmdMemoryIsEmpty 002E  
                                          ?_write_package 0011  
                                           _calculateMean 8178  
                                               i2u1303_40 8D7C  
                            __end_of_sm_get_current_state 911A  
                                               i2u1400_40 4348  
                                               i2u1401_40 4358  
                                               i2u1402_40 4368  
                                               i2u1411_40 4466  
                                               i2u1423_40 49F8  
                                               i2u1416_40 4998  
                                               i2u1441_40 4B08  
                                               i2u1451_40 4B84  
                                               i2u1435_40 4AC6  
                                               i2u1372_40 702A  
                                               i2u1436_40 4AD4  
                                               i2u1428_40 4A56  
                                               i2u1460_40 7906  
                                               i2u2171_48 0056  
                                               i2u1445_40 4B38  
                                               i2u1429_40 4A5C  
                                               i2u1374_40 7066  
                                               i2u1382_40 7D44  
                                               i2u1375_40 7074  
                                               i2u1439_40 4AF2  
                            __end_of_I2C1_DO_SEND_RESTART 922C  
                                               i2u1448_40 4B5C  
                                               i2u1464_40 5930  
                                               i2u1456_45 84D2  
                                               i2u1393_40 42A2  
                                               i2u1377_40 7092  
                                               i2u1449_40 4B64  
                                               i2u1465_40 59A4  
                                               i2u2168_48 003E  
                                               i2u1378_40 70A6  
                                               i2u1386_40 7D7A  
                                               i2u1458_40 78B4  
                                               i2u1379_40 70B4  
                                    __end_of_eusartparser 6F36  
                                         _WWDT_TimerClear 8F3A  
                                 __end_of_I2C1_MasterOpen 9088  
                                  ?_wr1RegCompleteHandler 0019  
                                               i2u1398_40 431E  
                                               i2u1822_48 744C  
                                               i2u1822_49 745E  
                                               i2u1824_48 7478  
                                               i2u1832_48 8972  
                                               i2u1841_40 6038  
                                   __end_of_ControlLights 3CE8  
                                               i2u1824_49 748A  
                                               i2u1826_48 74A2  
                                               i2u1844_40 605C  
                                               i2u1828_48 8E3A  
                                 __end_of_I2C1_MasterStop 9296  
                                 __end_of_I2C1_Initialize 9108  
                                               i2u1856_48 6108  
                                         ___lldiv@divisor 0014  
                                   __end_of_ControlInputs 65C2  
                   __end_of_EUSART1_SetRxInterruptHandler 91B8  
                           _EUSART1_SetRxInterruptHandler 91AE  
                                               i2u2885_47 90C0  
                                             _I2C1_Poller 912A  
                        ??_SetSegmentValueIntermitentMain 001F  
                         ?_SetSegmentValueIntermitentMain 001C  
                                         _WWDT_SoftEnable 927A  
                                         ___lldiv@counter 001C  
                                      ??_cmdMemoryIsEmpty 002F  
                               ?_I2C1_CallbackReturnReset 0019  
                           __end_of_I2C1_MasterDisableIrq 92A2  
                                             _I2C1_Status 023C  
                              ?_GetSecurityStateInOpening 0001  
                                            _ControlMotor 4734  
                                  SaveNVM_VarSystem@point 00DB  
                                                 postdec1 000FE5  
                                                 postdec2 000FDD  
                                                 postinc0 000FEE  
                                                 postinc1 000FE6  
                                                 postinc2 000FDE  
                                             ?_getHopCode 0016  
                                          ?_OpenFullOrder 0001  
                        SetSegmentValueIntermitentMain@d1 001F  
                        SetSegmentValueIntermitentMain@d2 001C  
                                     _I2C1_MasterSendNack 925C  
                                           HopCHK@hopDiff 0026  
                     __end_of_I2C1_SetAddressNackCallback 9070  
                             _I2C1_SetAddressNackCallback 9058  
                                        ?_ADCC_Initialize 0001  
                                     _getTimeDecelaration 6BDC  
                                              _sm_restart 87BA  
                        __end_of_ADCC_GetSingleConversion 90CC  
                                    ?_I2C1_MasterClearIrq 0001  
                                          ??_I2C1_DO_IDLE 0010  
                                    ??_EUSART1_Initialize 0012  
                                        NormalKeyGen@SEED 02D9  
                                          ??_I2C1_DO_RCEN 0010  
                      __end_of_I2C1_DO_SEND_RESTART_WRITE 9234  
                              _I2C1_DO_SEND_RESTART_WRITE 922C  
                       actionZone_Closing@securityClosing 0032  
                             ?_sm_execute_ControlLearning 00DC  
                                _TMR0_SetInterruptHandler 919A  
                                               _PORTAbits 000F8D  
                                               _PORTBbits 000F8E  
                                  ?_VerifyElectricalBrake 0001  
                                               _PORTEbits 000F91  
                         __end_of_rdBlkRegCompleteHandler 8944  
                                  ??_getStateOpenPosition 0032  
                                            ??_CloseOrder 0018  
                                   ??_controlSelectRemote 00E0  
                                    _SetSegmentValueLearn 69E6  
                           ??_I2C1_SetAddressNackCallback 0019  
                               I2C1_Read1ByteRegister@reg 0022  
                                        ___lbmod@dividend 0011  
                                    __end_of_Segments_Set 917C  
                                     _ControlCounterMoves 834C  
                            _controlLearning_stateMachine 02B2  
                         I2C1_SetDataCompleteCallback@ptr 0017  
                                          ?_OpenWalkOrder 0001  
                                              _stateMotor 0083  
                                           ?_sumEnergyADC 0010  
                          I2C1_CallbackReturnReset@funPtr 0019  
                       actionZone_Opening@securityClosing 00E4  
                                    ?_I2C1_MasterSendNack 0001  
                         keeloqDecryptPacket@classic_data 00E2  
                                     EUSART1_Write@txData 0010  
                                       ??_ClearFlag_rfCMD 0010  
                                    ?_getTimeDecelaration 0029  
                                   ??_EUSART1_is_rx_ready 0010  
                                       _saveEnergyADCHist 8D8C  
                                 __end_of_WWDT_Initialize 9186  
                                             ___lbmod@rem 0013  
                       actionZone_Opening@securityOpening 00E5  
                                          ?_calculateMean 0010  
                                        ??_refreshCurrent 0021  
                                       ??_SetSegmentValue 001D  
                                            _EUSART1_Read 872C  
                                      ?_saveEnergyADCHist 0010  
                       __end_of_GetSecurityStateInClosing 737C  
                                        ??_refreshSegment 0002  
                                          __end_of_DecCHK 8A98  
                                       _controlLearnDigit 8ACA  
                                 __end_of_controlVelocity 4DBE  
                                    ?_ControlCounterMoves 0001  
                                     setValueToEdit@value 01F8  
                                      _actionZone_Closing 3FDE  
                                    __end_of_RemoveSerial 7B34  
                                          __end_of_HopCHK 78A4  
                                      __end_of_CloseOrder 8DDA  
                                 _zeroCrossingWaitTimeIdx 0084  
                                            _InitReceiver 8F8E  
                               _ControlDecelarationFactor 9010  
                                      ?_controlLearnDigit 0001  
                                    _timer0ReloadVal16bit 0290  
                       __end_of_GetSecurityStateInOpening 7422  
                                       setRGB_ON@RGBLigth 0015  
                                     ??_saveEnergyADCHist 0012  
                            __end_of_INTERRUPT_Initialize 9282  
                                      _actionZone_Opening 44E0  
                                   ??_I2C1_MasterClearIrq 0010  
                    __end_of_TMR2_DefaultInterruptHandler 92AC  
                            _TMR2_DefaultInterruptHandler 92AA  
                                             ?_readInputs 0001  
                                               _DispTable 03D2  
                                          __end_of___lmul 84AA  
                                   __end_of_LoadManufCode 8EB8  
                                     ?_actionZone_Closing 0001  
                                          __end_of___wmul 8E26  
                                          _I2C1_DO_RX_ACK 9214  
                                  ??_refreshADCZeroOffset 0017  
                                    _generateErrorLearnig 80AA  
                                            _InitSoftStop 86E2  
                                     ??_controlLearnDigit 0013  
                                 i2_VerifyElectricalBrake 7D20  
                                          __end_of_memcpy 8842  
                                  ?_OSCILLATOR_Initialize 0001  
                                    __end_of_WaitPreFlash 7F62  
                            __end_of_getCurrentComparator 581C  
                                      sm_send_event@event 0014  
                                    __end_of_NormalKeyGen 67E0  
                                           _saveNewSerial 7E82  
                                             ?_readbutton 0001  
                                     ?_actionZone_Opening 0001  
                                   ?_SetSegmentValueLearn 0001  
                         __end_of_I2C1_CallbackReturnStop 9292  
                          ?_setPositionInvertionInClosing 0001  
                           __end_of_I2C1_MasterSendTxData 9244  
                                       _read_eusartparser 249C  
                                   refreshADCZeroOffset@i 0017  
                                     start_initialization 70C2  
                             i2GetMotorPower@defineatraso 0004  
                                             ??_I2C1_Open 0010  
                                          ??_sumEnergyADC 0012  
                                      ?_read_eusartparser 0018  
                                             __end_of_rxi 44E0  
                                   ??_I2C1_MasterSendNack 0010  
                                 __end_of_i2c_writeNBytes 7E82  
                          ?_setPositionInvertionInOpening 0001  
                                   ??_getTimeDecelaration 002D  
           EUSART1_SetRxInterruptHandler@interruptHandler 0010  
           EUSART1_SetTxInterruptHandler@interruptHandler 0010  
                               __end_of_saveEnergyADCHist 8DB4  
                                 __end_of_WWDT_TimerClear 8F56  
                                    ??_actionZone_Closing 0032  
                                   __end_of_EUSART1_Write 88C4  
                                 __end_of_WWDT_SoftEnable 927E  
                                         ??_write_package 0018  
                                  rd1RegCompleteHandler@p 0019  
                            __end_of_verifyProgramingMode 8A66  
                                               _ReqResync 9028  
                               __end_of_controlLearnDigit 8AFA  
                                     ??_read_eusartparser 0019  
                                                ??_DecCHK 0012  
                                       _programmer_enable 0085  
                                    ??_actionZone_Opening 003B  
                                  _sm_execute_ControlGate 367A  
                 sm_execute_ControlLearning@typeOpenOrder 003A  
                                                ??_HopCHK 0026  
                               refreshADCZeroOffset@media 0018  
                                I2C1_SetBuffer@bufferSize 0012  
                                   ??_ControlCounterMoves 003A  
                                       _controlSaveRemote 7178  
                                        ?_I2C1_MasterOpen 0001  
                            keeloqDecryptPacket@hop_error 00E8  
                                        ?_I2C1_MasterStop 0001  
                                        ?_I2C1_Initialize 0001  
                                 saveNewSerial@tempSerial 00D8  
                                  controlSelectRemote@pos 00E2  
                                         ??_OpenFullOrder 0018  
                                   calculateMean@newValue 0014  
                                      ?_controlSaveRemote 0001  
                                 sm_get_current_state@psm 0010  
                                        ??_PMD_Initialize 0010  
                                                ??___lmul 0025  
                                  __end_of_I2C1_DO_RX_ACK 921C  
                                                ??___wmul 0014  
                                      _zeroCrossingLength 0193  
                                          _VerifyFollowMe 8E72  
                                  wr1RegCompleteHandler@p 0019  
                                   _EUSART1_RxDataHandler 8EFC  
                                 ??_I2C1_DO_SEND_ADR_READ 0010  
                          ?_EUSART1_SetRxInterruptHandler 0010  
                                             ?_sm_restart 0010  
                                             __pdataBANK0 00F8  
                                             __pdataBANK1 01F9  
                                             __pdataBANK2 02EF  
                                             __pdataBANK3 03D2  
                                   ?_generateErrorLearnig 0001  
                                                ??_memcpy 0016  
                                       ?_setFlashLigth_ON 0010  
                           ?_TMR2_DefaultInterruptHandler 0001  
                                       _controlMotorForce 497E  
                                     ??_controlSaveRemote 0020  
                               __end_of_read_eusartparser 29A4  
                                          ?_saveNewSerial 00D8  
                                        I2C1_Open@address 0010  
                                          _eusart1RxCount 0093  
                                      ??_setFlashLigth_ON 0012  
                                _ADCC_GetSingleConversion 90B6  
                                      ?_controlMotorForce 0001  
                                   __end_of_InitSoftStart 82F0  
                                               _StopOrder 8F1E  
                                    _sm_get_current_state 9108  
                                             __pbssCOMRAM 003B  
                                         ??_OpenWalkOrder 0018  
                                    _I2C1_DO_SEND_RESTART 9224  
                                getTimeDecelaration@state 0031  
                       _EUSART1_RxDefaultInterruptHandler 02EB  
                                           __pcstackBANK0 00D8  
                                        ??_setValueToEdit 00DC  
                                                ?_RGB_Set 0001  
                                        _brakeElectric_st 0078  
                             ??_I2C1_DO_SEND_RESTART_READ 0010  
                                     ??_controlMotorForce 0005  
                                      _ResetDefaultMemory 5B4C  
                                         ??_calculateMean 0018  
                         ??_EUSART1_SetTxInterruptHandler 0012  
                                    __end_of_I2C1_DO_IDLE 91F4  
                        ??_EUSART1_SetFramingErrorHandler 0012  
                         ?_EUSART1_SetFramingErrorHandler 0010  
                                                ?_Decrypt 001B  
                                    __end_of_I2C1_DO_RCEN 91EA  
                                           _GetMotorPower 6F36  
                                        ?_WWDT_Initialize 0001  
                                              ?_ReqResync 0010  
                               __end_of_controlSaveRemote 722C  
                           I2C1_SetAddressNackCallback@cb 0015  
                                      sm_execute_main@psm 00ED  
                                                ?_ReadADC 0001  
                                            RGB_Set@value 0010  
                                   _TMR0_InterruptHandler 02E3  
                                     ?_ResetDefaultMemory 0001  
                                               __pnvBANK1 01FE  
                                               __pnvBANK2 02DD  
                                   _rd2RegCompleteHandler 8C88  
                                        _InitWalkAutoTime 90CC  
                                        ?_controlVelocity 0001  
                                __end_of_InitFullAutoTime 8FDC  
                             __end_of_SetSegmentValueMain 8FC2  
                          VerifyElectricalBrake@tempState 0010  
                        i2VerifyElectricalBrake@tempState 0001  
                                        ___lwdiv@dividend 0010  
                                  _PIN_MANAGER_Initialize 74BC  
                                  __end_of_VerifyFollowMe 8E96  
                                   _wr2RegCompleteHandler 8C5C  
                              ??_I2C1_MasterEnableRestart 0010  
                                               __pintcode 0008  
                                            _read_package 85A6  
                                          _I2C1_MasterFsm 8500  
                              __end_of_checkNVM_VarSystem 54E6  
                        __end_of_TMR1_SetInterruptHandler 919A  
                         ADCC_GetSingleConversion@channel 0001  
                                         ?_I2C1_DO_RX_ACK 0001  
                                                ?___awdiv 0014  
                                               __ptext100 90F4  
                                               __ptext101 7B34  
                                                ?___lbdiv 0010  
                                               __ptext110 7CA8  
                                               __ptext102 91A4  
                                               __ptext111 39C4  
                                               __ptext103 91AE  
                                               __ptext200 92AE  
                                               __ptext120 8D8C  
                                               __ptext112 75E6  
                                               __ptext104 91B8  
                                               __ptext201 8A98  
                                               __ptext121 68E8  
                                               __ptext113 913A  
                                               __ptext105 91C2  
                                               __ptext202 7422  
                                               __ptext130 9058  
                                               __ptext122 8554  
                                               __ptext114 8984  
                                               __ptext106 91CC  
                                               __ptext203 9268  
                                               __ptext131 79AE  
                                               __ptext123 5682  
                                               __ptext115 649E  
                                               __ptext107 85F6  
                                               __ptext204 92B0  
                                               __ptext140 9204  
                                               __ptext132 9070  
                                               __ptext124 8E00  
                                               __ptext116 5E58  
                                               __ptext108 911A  
                                               __ptext205 926E  
                                               __ptext141 920C  
                                               __ptext133 91F4  
                                               __ptext125 6F36  
                                               __ptext117 8774  
                                               __ptext109 4734  
                                               __ptext206 8EFC  
                                               __ptext150 9148  
                                               __ptext142 9214  
                                               __ptext134 8BAC  
                                               __ptext126 834C  
                                               __ptext118 6AE2  
                                               __ptext207 0000  
                                               __ptext151 9156  
                                               __ptext143 921C  
                                               __ptext135 912A  
                                               __ptext127 89FA  
                                               __ptext119 7702  
                                               __ptext160 9286  
                                               __ptext152 91EA  
                                               __ptext144 9224  
                                               __ptext136 91FC  
                                               __ptext128 7E0E  
                                               __ptext161 928A  
                                               __ptext153 81DA  
                                               __ptext145 922C  
                                               __ptext137 8500  
                                               __ptext129 87FE  
                                               __ptext170 8CB4  
                                               __ptext162 928E  
                                               __ptext154 9250  
                                               __ptext146 9234  
                                               __ptext138 8694  
                                               __ptext171 8CE0  
                                               __ptext163 88C4  
                                               __ptext155 9164  
                                               __ptext147 91E0  
                                               __ptext139 91D6  
                                               __ptext180 929E  
                                               __ptext172 8D0C  
                                               __ptext164 8BD8  
                                               __ptext156 923C  
                                               __ptext148 7C2E  
                                               __ptext181 92A2  
                                               __ptext173 9088  
                                               __ptext165 8C04  
                                               __ptext157 9256  
                                               __ptext149 778E  
                                               __ptext190 84AA  
                                               __ptext182 9262  
                                               __ptext174 7FD0  
                                               __ptext166 8C30  
                                               __ptext158 9282  
                                               __ptext191 90B6  
                                               __ptext175 8FF6  
                                               __ptext167 8904  
                                               __ptext159 925C  
                                               __ptext192 8944  
                                               __ptext184 5FCC  
                                               __ptext176 9292  
                                               __ptext168 8C5C  
                                               __ptext193 497E  
                                               __ptext185 78A4  
                                               __ptext177 9296  
                                               __ptext169 8C88  
                                               __ptext194 7D20  
                                               __ptext186 9170  
                                               __ptext178 929A  
                                               __ptext195 6FFC  
                                               __ptext187 581C  
                                               __ptext179 8EDA  
                                               __ptext196 8F72  
                                               __ptext188 8D62  
                                               __ptext197 92AC  
                                               __ptext189 92AA  
                                               __ptext198 8E26  
                                               __ptext199 426A  
                                                ?___lbmod 0010  
                                 write_eusartparser@debug 001F  
                            ??_SetSegmentValueIntermitent 0013  
                                                ?___lldiv 0010  
                               ??i2_VerifyElectricalBrake 0001  
                               __end_of_controlMotorForce 4BA0  
                                                ?___lwdiv 0010  
                                    i2c_readDataBlock@len 0026  
                                    i2c_readDataBlock@reg 0022  
                                 _I2C1_MasterWaitForEvent 91FC  
                                        _I2C1_MasterClose 92A2  
                         DecryptPacket_12BIT@classic_data 00E2  
                                ??_I2C1_Read1ByteRegister 0023  
                                          _I2C1_SetBuffer 8FF6  
                            ??_INTERRUPT_InterruptManager 000A  
                                  ??_SetSegmentValueLearn 0010  
                                        _I2C1_MasterStart 929A  
                                    NormalKeyGen@SKEYtemp 002C  
                                        _I2C1_MasterWrite 91F4  
                                      _clearLearningValue 7BB2  
                                      _write_eusartparser 2EA8  
                                    ??_ResetDefaultMemory 003A  
                                                _BAUD1CON 000F9F  
                                             __smallconst 0F00  
                                   ?_sm_get_current_state 0010  
                                            ?_ShowVersion 0001  
                                                _F2Chance 0195  
                                              ?_StopOrder 0001  
              __end_of_EUSART1_DefaultOverrunErrorHandler 926E  
                    ??_EUSART1_DefaultOverrunErrorHandler 0001  
                     ?_EUSART1_DefaultOverrunErrorHandler 0001  
                      _EUSART1_DefaultOverrunErrorHandler 9268  
                                   ?_I2C1_DO_SEND_RESTART 0001  
                                       _i2c_readDataBlock 7D98  
                                            _eusartparser 6E6C  
                                    _EUSART1_ErrorHandler 02E5  
                                       ?_I2C1_DO_TX_EMPTY 0001  
                                                ?_sumHIST 0010  
                                                ?_sm_init 0012  
                                 _EUSART1_SetErrorHandler 91CC  
                                      ?_i2c_readDataBlock 0022  
                                     ReqResync@CurrentHop 0010  
                        __end_of_I2C1_CallbackReturnReset 928E  
                                     ?_clearLearningValue 0001  
                                        ___lwdiv@quotient 0014  
                                     ?_write_eusartparser 0010  
                                        ?_i2c_writeNBytes 0022  
                                      ??_I2C1_DO_TX_EMPTY 001B  
                                                _T2CLKCON 000FBF  
                                   __end_of_readRFButtons 5B4C  
                                 ??_rd1RegCompleteHandler 001B  
                                 ?_I2C1_DO_SEND_ADR_WRITE 0001  
                                               _setRGB_ON 75E6  
                               I2C1_MasterSendTxData@data 0010  
                                        ?_WWDT_TimerClear 0001  
                                    _INTERRUPT_Initialize 927E  
                                          ?_GetMotorPower 0001  
                                 ??_wr1RegCompleteHandler 001B  
                                        ?_WWDT_SoftEnable 0001  
                                              sumHIST@max 0018  
                                              sumHIST@min 001A  
                                       ??_TMR0_Initialize 0012  
                                     ??_i2c_readDataBlock 0028  
                                        _I2C1_SetCallback 7FD0  
                                              sm_init@psm 0012  
                                          ___wmul@product 0014  
                                                _LATAbits 000F83  
                 EUSART1_SetErrorHandler@interruptHandler 0010  
                                                _LATCbits 000F85  
                                read_eusartparser@package 0018  
                                                _LATDbits 000F86  
                                                _LATEbits 000F87  
                                              _I2C1_DO_RX 7C2E  
                                              _I2C1_DO_TX 778E  
                             ??_GetSecurityStateInClosing 0014  
                                                _PIE0bits 000EC2  
                                    _getCurrentComparator 5682  
                                                _PIE3bits 000EC5  
                                                _PIE4bits 000EC6  
                                              DecCHK@data 0010  
                                                Decrypt@i 001E  
                                                Decrypt@j 001F  
                                                Decrypt@p 0020  
                                         _firstselectflag 01FD  
                                     _DecryptPacket_12BIT 7676  
                                              _I2C1_Close 8EDA  
                         setValueToEdit@ParameterSelected 003A  
                                            ?_I2C1_Poller 0001  
                                  __end_of_I2C1_MasterFsm 8554  
                            __end_of_I2C1_MasterGetRxData 9286  
                              ??_TMR0_SetInterruptHandler 0012  
                                                _PIR0bits 000ECA  
                                            _Segments_Set 9170  
                                                _PIR3bits 000ECD  
                                         ?_VerifyFollowMe 0001  
                                                _PIR4bits 000ECE  
                                readRFButtons@rollingCode 0185  
                             ??_GetSecurityStateInOpening 0014  
                                  ?_EUSART1_RxDataHandler 0001  
                                    ??_clearLearningValue 0010  
                                      _I2C1_MasterSendAck 9256  
                                    ??_write_eusartparser 0017  
                                    __end_of_sumEnergyADC 778E  
                               _I2C1_DO_SEND_RESTART_READ 9234  
                                            ??_getHopCode 0018  
                                               _pointSync 007A  
                                   __end_of_load_New_Menu 3FDE  
                                                _SSP1CON1 000F96  
                                                _SSP1CON2 000F97  
                                  ??_generateErrorLearnig 0017  
                                                _TMR0_ISR 8E26  
                                                _TMR1_ISR 8944  
                                                _TMR2_ISR 5FCC  
                                           _getKeyPressed 9040  
                                 ??_VerifyElectricalBrake 0010  
                                  __end_of_I2C1_SetBuffer 9010  
                                               _temppower 018E  
                                         _powerControl_st 017B  
                                                _SSP1STAT 000F95  
                    __end_of_I2C1_SetDataCompleteCallback 90A0  
                            _I2C1_SetDataCompleteCallback 9088  
                                      _I2C1_MasterStartRx 9286  
                                         ??_saveNewSerial 00DD  
                             ?_I2C1_DO_SEND_RESTART_WRITE 0001  
                                       ??_TMR1_Initialize 0012  
                                         _ClearFlag_rfCMD 924A  
                                     ?_I2C1_MasterSendAck 0001  
                                              _ADCON0bits 000F60  
                               __end_of_i2c_readDataBlock 7E0E  
                                       ___wmul@multiplier 0010  
                                ?_I2C1_DO_RX_NACK_RESTART 0001  
                                    _verifyProgramingMode 8A32  
                                       ??_sm_execute_main 00EF  
                                    _numberOfErrorCurrent 008E  
                                    ?_DecryptPacket_12BIT 00E0  
                                               _ts_system 019A  
                                                _BitCount 008C  
                                     ?_I2C1_MasterStartRx 0001  
                            __end_of_I2C1_DO_ADDRESS_NACK 86E2  
                          controlSelectRemote@validSerial 00E1  
                          ??_TMR2_DefaultInterruptHandler 0001  
                                       _actionZone_Closed 722C  
                               ?_TMR2_SetInterruptHandler 0010  
                                    _idxAdcZeroAquisition 008F  
                                         _SetSegmentValue 8FDC  
                                            _RemoveSerial 7AB4  
                          getStateOpenPosition@stateMotor 00D9  
                          __end_of_I2C1_DO_SEND_ADR_WRITE 9156  
                                       _actionZone_Opened 4DBE  
                                           _I2C1_DO_RESET 91D6  
                                      ?_actionZone_Closed 0001  
                                                _BufferRF 02C8  
                                     read_package@package 0018  
                                       ___lmul@multiplier 001D  
                                               copy_data0 70D6  
                                               copy_data1 710E  
                                   ?_INTERRUPT_Initialize 0001  
                                              ?_setRGB_ON 0011  
                                   I2C1_Close@returnValue 0010  
                                ?_rdBlkRegCompleteHandler 0019  
                                      ?_actionZone_Opened 0001  
                                        _Abertura_pedonal 018D  
                                     I2C1_SetCallback@idx 0014  
                                     I2C1_SetCallback@ptr 0012  
                                      __end_of_getHopCode 6248  
                                             ??_ReqResync 0012  
                                    ??_I2C1_MasterSendAck 0010  
                                       ??_TMR2_Initialize 0012  
                                   EUSART1_Read@readValue 0010  
                                  ?_rd2RegCompleteHandler 0019  
                                     ??_actionZone_Closed 0020  
                                            _WaitPreFlash 7EF2  
                                   ?_getCurrentComparator 0016  
                            __end_of_I2C1_MasterOperation 8BD8  
                                            _NormalKeyGen 66D2  
                     sm_execute_ControlGate@typeOpenOrder 00EB  
                                  ?_wr2RegCompleteHandler 0019  
                                    ??_I2C1_MasterStartRx 0010  
                                     ??_actionZone_Opened 0020  
                            saveEnergyADCHist@valueToSave 0010  
                   __end_of_EUSART1_SetTxInterruptHandler 91AE  
                           _EUSART1_SetTxInterruptHandler 91A4  
                                           _sm_send_event 8238  
                                     _keeloqDecryptPacket 4FAC  
                                                __Hrparam 0000  
                                         ?_I2C1_MasterFsm 0001  
                                               memcpy@tmp 0016  
                                                __Lrparam 0000  
                                    sumEnergyADC@auxValue 0016  
                                     i2c_writeNBytes@data 0024  
                         actionZone_Opening@typeOpenOrder 00E6  
                                          ?_getKeyPressed 0001  
                               ??_I2C1_MasterWaitForEvent 0010  
                                       _main_stateMachine 01ED  
                                   _I2C1_MasterDisableIrq 929E  
                                            ??_readInputs 0010  
                                 ??_OSCILLATOR_Initialize 0010  
                             __end_of_controlSelectRemote 367A  
                                         ?_I2C1_SetBuffer 0010  
                                          _fullmotorPower 0082  
                                  ResetDefaultMemory@type 003A  
                                        _controlTimeslots 581C  
                                _TMR1_SetInterruptHandler 9190  
                                  ??_sm_get_current_state 0012  
                                   ?_verifyProgramingMode 0010  
                               _GetSecurityStateInClosing 72D6  
                       I2C1_Read1ByteRegister@returnValue 0024  
                                  ??_I2C1_DO_SEND_RESTART 0010  
                                            ??_readbutton 0010  
                               __end_of_actionZone_Closed 72D6  
                                   ??_DecryptPacket_12BIT 003B  
                                   _TMR1_InterruptHandler 02DF  
                               ??_EUSART1_SetErrorHandler 0012  
                                       ??i2_GetMotorPower 0001  
                     __end_of_EUSART1_DefaultErrorHandler 9274  
                             _EUSART1_DefaultErrorHandler 926E  
                                             ??_StopOrder 0018  
                             __end_of_EUSART1_is_rx_ready 912A  
                                    ?_keeloqDecryptPacket 00E0  
                               __end_of_actionZone_Opened 4FAC  
                               getStateOpenPosition@state 00D8  
                               _GetSecurityStateInOpening 737C  
                                         ___lwdiv@divisor 0012  
                                          ?_I2C1_DO_RESET 0001  
                                         ___lwdiv@counter 0016  
                                                __ptext10 7554  
                                                __ptext11 7AB4  
                                                __ptext20 367A  
                                                __ptext12 7178  
                                                __ptext21 1886  
                                                __ptext13 8D38  
                                                __ptext30 65C2  
                                                __ptext22 80AA  
                                                __ptext14 792A  
                                                __ptext31 86E2  
                                                __ptext23 83FE  
                                                __ptext15 8FA8  
                                                __ptext40 8F1E  
                                                __ptext32 9010  
                                                __ptext24 87BA  
                                                __ptext16 924A  
                                                __ptext41 72D6  
                                                __ptext33 4DBE  
                                                __ptext25 7BB2  
                                                __ptext17 8ACA  
                                                __ptext50 90CC  
                                                __ptext42 722C  
                                                __ptext34 8E72  
                                                __ptext26 8178  
                                                __ptext18 69E6  
                                                __ptext51 737C  
                                                __ptext43 7EF2  
                                                __ptext35 8DB4  
                                                __ptext27 44E0  
                                                __ptext19 7A32  
                                                __ptext60 4FAC  
                                                __ptext52 8B28  
                                                __ptext44 8DDA  
                                                __ptext36 3FDE  
                                                __ptext28 6CC4  
                                                __ptext61 8A32  
                                                __ptext53 517E  
                                                __ptext45 8FC2  
                                                __ptext37 6376  
                                                __ptext29 4BA0  
                                                __ptext70 7676  
                                                __ptext62 83A6  
                                                __ptext54 89C0  
                                                __ptext46 7F62  
                                                __ptext38 6BDC  
                                                __ptext71 54E6  
                                                __ptext63 66D2  
                                                __ptext55 90E0  
                                                __ptext47 8238  
                                                __ptext39 8454  
                                                __ptext80 2EA8  
                                                __ptext72 67E0  
                                                __ptext64 8E96  
                                                __ptext56 803E  
                                                __ptext48 9108  
                                                __ptext81 249C  
                                                __ptext73 6248  
                                                __ptext65 6DA0  
                                                __ptext57 85A6  
                                                __ptext49 8294  
                                                __ptext90 8B80  
                                                __ptext82 8B54  
                                                __ptext74 7D98  
                                                __ptext66 781A  
                                                __ptext58 872C  
                                                __ptext91 9186  
                                                __ptext83 8884  
                                                __ptext75 5346  
                                                __ptext67 611A  
                                                __ptext59 59B6  
                                                __ptext92 8842  
                                                __ptext84 8F3A  
                                                __ptext76 5B4C  
                                                __ptext68 9028  
                                                __ptext93 9190  
                                                __ptext85 927A  
                                                __ptext77 82F0  
                                                __ptext69 8A66  
                                                __ptext94 8EB8  
                                                __ptext86 8112  
                                                __ptext78 9040  
                                                __ptext95 919A  
                                                __ptext87 8FDC  
                                                __ptext79 6E6C  
                                                __ptext96 8F56  
                                                __ptext88 8AFA  
                                                __ptext97 74BC  
                                                __ptext89 917C  
                                                __ptext98 90A0  
                                                __ptext99 927E  
                                            _SSP1CON1bits 000F96  
                                            _SSP1CON2bits 000F97  
                                     NormalKeyGen@HOPtemp 0028  
                                         ??_GetMotorPower 0010  
                                _controlGate_stateMachine 01E2  
                                           ?_GetOpenOrder 0001  
                                 ?_sm_execute_ControlGate 00E7  
                                 DecryptPacket_12BIT@data 00E0  
              ?_rdBlkRegCompleteHandler@pic18f46k40$F7701 0019  
             ??_rdBlkRegCompleteHandler@pic18f46k40$F7703 001B  
                                                _learn_st 0060  
               ??_rd2RegCompleteHandler@pic18f46k40$F7691 001B  
                ?_rd1RegCompleteHandler@pic18f46k40$F7683 0019  
                ?_wr1RegCompleteHandler@pic18f46k40$F7675 0019  
               ??_rd1RegCompleteHandler@pic18f46k40$F7685 001B  
               ??_wr1RegCompleteHandler@pic18f46k40$F7677 001B  
                ?_wr2RegCompleteHandler@pic18f46k40$F7695 0019  
               ??_wr2RegCompleteHandler@pic18f46k40$F7697 001B  
                ?_rd2RegCompleteHandler@pic18f46k40$F7689 0019  
                                      __end_of_readInputs 68E8  
                                _I2C1_CallbackReturnReset 928A  
                                             ?_I2C1_DO_RX 0001  
                                             ?_I2C1_DO_TX 0001  
                                          ?_sm_send_event 0012  
                    __end_of_TMR0_DefaultInterruptHandler 92B0  
                            _TMR0_DefaultInterruptHandler 92AE  
                                i2c_readDataBlock@address 0029  
                             __end_of_I2C1_MasterClearIrq 9268  
                            __end_of_I2C1_DO_RX_NACK_STOP 9214  
                                             ?_I2C1_Close 0001  
                                          _ControlCurrent 5E58  
                                                _security 016A  
                                    RemoveSerial@position 003A  
                                      __end_of_readbutton 80AA  
                                              _RC1STAbits 000F9D  
          EUSART1_SetOverrunErrorHandler@interruptHandler 0010  
                                 __end_of_ClearFlag_rfCMD 9250  
                                    sm_init@initial_state 0014  
                      __end_of_SetSegmentValueIntermitent 8B54  
                              _SetSegmentValueIntermitent 8B28  
                                                isa$xinst 000000  
                              ??_ADCC_GetSingleConversion 0001  
                                                int$flags 0050  
                         __end_of_I2C1_DO_RX_NACK_RESTART 920C  
                           SetSegmentValueLearn@direction 0012  
                                            ??_sm_restart 0012  
                                I2C1_MasterOperation@read 0020  
                      __end_of_INTERRUPT_InterruptManager 009C  
                              _INTERRUPT_InterruptManager 0008  
                                       _loadNVM_VarSystem 6248  
                                SaveNVM_VarSystem@tempAdd 00D9  
                                       ??_TMR1_WriteTimer 0003  
                                 __end_of_SetSegmentValue 8FF6  
                           __end_of_I2C1_DO_SEND_ADR_READ 9164  
                             _EUSART1_FramingErrorHandler 02E9  
                                            _I2C1_DO_IDLE 91EA  
                                     _EUSART1_Receive_ISR 7422  
                                            _I2C1_DO_RCEN 91E0  
                                     decrementTimeslot@ts 0001  
                                      ?_loadNVM_VarSystem 0001  
                           controlSelectRemote@tempSerial 00E4  
                                           _getTypeRemote 9244  
                             __end_of_I2C1_MasterSendNack 9262  
                                        sm_send_event@psm 0012  
                             __end_of_getTimeDecelaration 6CC4  
                                   ??_keeloqDecryptPacket 00E4  
                                            _waitZeroPeak 0191  
                                __end_of_InitWalkAutoTime 90E0  
                                              _INTCONbits 000FF2  
                                       _aux_in_auto_close 018B  
                                                memcpy@d1 0010  
                                                memcpy@s1 0012  
                          I2C1_SetAddressNackCallback@ptr 0017  
                                      i2c_writeNBytes@dat 0028  
                                      i2c_writeNBytes@len 0025  
                                      i2c_writeNBytes@reg 0022  
                                    _I2C1_MasterGetRxData 9282  
                                   _I2C1_MasterSendTxData 923C  
                                     ??_loadNVM_VarSystem 003B  
                                           sm_restart@psm 0010  
                                  ??_INTERRUPT_Initialize 0010  
                                            _RFFull_12BIT 008A  
                                    _control_limit_switch 0081  
                          __end_of_sm_execute_ControlGate 39C4  
                                              Decrypt@aux 0021  
                                              Decrypt@key 001D  
                                          ??_GetOpenOrder 0020  
                                             ??_setRGB_ON 0013  
                             __end_of_ControlCounterMoves 83A6  
                                                intlevel2 0000  
                        actionZone_Opened@securityClosing 0020  
                        actionZone_Closed@securityOpening 0020  
                                __end_of_I2C1_MasterClose 92A6  
                                    ?_EUSART1_Receive_ISR 0001  
                                  _I2C1_Read1ByteRegister 82F0  
                                 readRFButtons@typeRemote 0197  
                                  ??_getCurrentComparator 001A  
                                  rd2RegCompleteHandler@p 0019  
                                      __end_of_sm_restart 87FE  
                                        ___lldiv@dividend 0010  
                                 ?_PIN_MANAGER_Initialize 0001  
                                  __end_of_ControlCurrent 5FCC  
                           I2C1_Read1ByteRegister@address 0023  
                                __end_of_I2C1_MasterStart 929E  
                                __end_of_I2C1_MasterWrite 91FC  
                                   __end_of_write_package 8B80  
                                             _tempCounter 01F9  
                  __end_of_EUSART1_SetOverrunErrorHandler 91C2  
                          _EUSART1_SetOverrunErrorHandler 91B8  
                                        ??_I2C1_DO_RX_ACK 0010  
                                             _WDTCON0bits 000ED2  
                                             getHopCode@i 0023  
                                 _I2C1_CallbackReturnStop 928E  
                            __end_of_EUSART1_Transmit_ISR 8ACA  
                                      NormalKeyGen@Buffer 0030  
                                                sumHIST@i 0020  
                                         ??_getKeyPressed 0010  
                                           _ControlLights 39C4  
                                       ?_InitFullAutoTime 0001  
                                           _ControlInputs 649E  
                           ?_TMR0_DefaultInterruptHandler 0001  
                                    _I2C1_DO_ADDRESS_NACK 8694  
                                              HopCHK@data 0024  
                                  ?_I2C1_MasterDisableIrq 0001  
                                           ?_getSerialCmd 001B  
                                          _ADC_zero_array 0396  
                               __end_of_loadNVM_VarSystem 6376  
                                      ??_InitFullAutoTime 0010  
                   __end_of_keeloq_classic_decrypt_packet 83FE  
                           _keeloq_classic_decrypt_packet 83A6  
                                   __end_of_OpenFullOrder 8E00  
                                  wr2RegCompleteHandler@p 0019  
          EUSART1_SetFramingErrorHandler@interruptHandler 0010  
                          ?_EUSART1_SetTxInterruptHandler 0010  
                                  ??_verifyProgramingMode 0012  
                                      _eusart1RxLastError 0199  
                                          ?_getTypeRemote 0001  
                                        _cmdMemoryIsEmpty 7554  
                                      NormalKeyGen@serial 0026  
                                __end_of_I2C1_SetCallback 803E  
                                             _var_sys_NVM 0098  
                                              _SSP1DATPPS 000EB8  
                                              _SSP1CLKPPS 000EB7  
                                         ??_I2C1_DO_RESET 0010  
                                    WWDT_TimerClear@state 0010  
                                        ___lldiv@quotient 0018  
                                    _I2C1_MasterOperation 8BAC  
                                         _TMR0_Initialize 8EB8  
                            ??_validateRemoteSerialNumber 00D8  
                                      _checkNVM_VarSystem 5346  
                                   ?_I2C1_MasterGetRxData 0001  
                           controlSelectRemote@typeRemote 00E3  
                                   __end_of_OpenWalkOrder 7FD0  
                                            _sumEnergyADC 7702  
                                          _listSyncValues 0300  
                                           setRGB_ON@Freq 0011  
                                     ?_checkNVM_VarSystem 0001  
                                   ??_EUSART1_Receive_ISR 0001  
                          __end_of_PIN_MANAGER_Initialize 7554  
                                       ??_ADCC_Initialize 0010  
                           __end_of_rd1RegCompleteHandler 8CE0  
                                         ??_sm_send_event 0016  
                                        ??_VerifyFollowMe 0010  
                                   __end_of_calculateMean 81DA  
                                        sm_init@hist_mode 0016  
                                         ?_ControlCurrent 0001  
                           __end_of_wr1RegCompleteHandler 8D0C  
                                   _TMR2_InterruptHandler 02DD  
                                 ??_EUSART1_RxDataHandler 0001  
                                          ?_ControlLights 0001  
                                         _TMR1_Initialize 8842  
                                          ?_ControlInputs 0001  
                                   ?_I2C1_DO_ADDRESS_NACK 0001  
                                          ??_getSerialCmd 001C  
                                           ?_ControlMotor 0001  
                                         _sm_execute_main 1F94  
