

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Mon Jul 18 11:14:07 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og9 
     1                           	processor	18F46K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
     9                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    10                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    12                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    13                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    19                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    21                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    22                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    23                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    24                           	psect	text0,global,reloc=2,class=CODE,delta=1
    25                           	psect	text1,global,reloc=2,class=CODE,delta=1
    26                           	psect	text2,global,reloc=2,class=CODE,delta=1
    27                           	psect	text3,global,reloc=2,class=CODE,delta=1
    28                           	psect	text4,global,reloc=2,class=CODE,delta=1
    29                           	psect	text5,global,reloc=2,class=CODE,delta=1
    30                           	psect	text6,global,reloc=2,class=CODE,delta=1
    31                           	psect	text7,global,reloc=2,class=CODE,delta=1
    32                           	psect	text8,global,reloc=2,class=CODE,delta=1
    33                           	psect	text9,global,reloc=2,class=CODE,delta=1
    34                           	psect	text10,global,reloc=2,class=CODE,delta=1
    35                           	psect	text11,global,reloc=2,class=CODE,delta=1
    36                           	psect	text12,global,reloc=2,class=CODE,delta=1
    37                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text15,global,reloc=2,class=CODE,delta=1
    40                           	psect	text16,global,reloc=2,class=CODE,delta=1
    41                           	psect	text17,global,reloc=2,class=CODE,delta=1
    42                           	psect	text18,global,reloc=2,class=CODE,delta=1
    43                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text20,global,reloc=2,class=CODE,delta=1
    45                           	psect	text21,global,reloc=2,class=CODE,delta=1
    46                           	psect	text22,global,reloc=2,class=CODE,delta=1
    47                           	psect	text23,global,reloc=2,class=CODE,delta=1
    48                           	psect	text24,global,reloc=2,class=CODE,delta=1
    49                           	psect	text25,global,reloc=2,class=CODE,delta=1
    50                           	psect	text26,global,reloc=2,class=CODE,delta=1
    51                           	psect	text27,global,reloc=2,class=CODE,delta=1
    52                           	psect	text28,global,reloc=2,class=CODE,delta=1
    53                           	psect	text29,global,reloc=2,class=CODE,delta=1
    54                           	psect	text30,global,reloc=2,class=CODE,delta=1
    55                           	psect	text31,global,reloc=2,class=CODE,delta=1
    56                           	psect	text32,global,reloc=2,class=CODE,delta=1
    57                           	psect	text33,global,reloc=2,class=CODE,delta=1
    58                           	psect	text34,global,reloc=2,class=CODE,delta=1
    59                           	psect	text35,global,reloc=2,class=CODE,delta=1
    60                           	psect	text36,global,reloc=2,class=CODE,delta=1
    61                           	psect	text37,global,reloc=2,class=CODE,delta=1
    62                           	psect	text38,global,reloc=2,class=CODE,delta=1
    63                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    64                           	psect	text40,global,reloc=2,class=CODE,delta=1
    65                           	psect	text41,global,reloc=2,class=CODE,delta=1
    66                           	psect	text42,global,reloc=2,class=CODE,delta=1
    67                           	psect	text43,global,reloc=2,class=CODE,delta=1
    68                           	psect	text44,global,reloc=2,class=CODE,delta=1
    69                           	psect	text45,global,reloc=2,class=CODE,delta=1
    70                           	psect	text46,global,reloc=2,class=CODE,delta=1
    71                           	psect	text47,global,reloc=2,class=CODE,delta=1
    72                           	psect	text48,global,reloc=2,class=CODE,delta=1
    73                           	psect	text49,global,reloc=2,class=CODE,delta=1
    74                           	psect	text50,global,reloc=2,class=CODE,delta=1
    75                           	psect	text51,global,reloc=2,class=CODE,delta=1
    76                           	psect	text52,global,reloc=2,class=CODE,delta=1
    77                           	psect	text53,global,reloc=2,class=CODE,delta=1
    78                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=1
    79                           	psect	text55,global,reloc=2,class=CODE,delta=1
    80                           	psect	text56,global,reloc=2,class=CODE,delta=1
    81                           	psect	text57,global,reloc=2,class=CODE,delta=1
    82                           	psect	text58,global,reloc=2,class=CODE,delta=1
    83                           	psect	text59,global,reloc=2,class=CODE,delta=1
    84                           	psect	text60,global,reloc=2,class=CODE,delta=1
    85                           	psect	text61,global,reloc=2,class=CODE,delta=1
    86                           	psect	text62,global,reloc=2,class=CODE,delta=1
    87                           	psect	text63,global,reloc=2,class=CODE,delta=1
    88                           	psect	text64,global,reloc=2,class=CODE,delta=1
    89                           	psect	text65,global,reloc=2,class=CODE,delta=1
    90                           	psect	text66,global,reloc=2,class=CODE,delta=1
    91                           	psect	text67,global,reloc=2,class=CODE,delta=1
    92                           	psect	text68,global,reloc=2,class=CODE,delta=1
    93                           	psect	text69,global,reloc=2,class=CODE,delta=1
    94                           	psect	text70,global,reloc=2,class=CODE,delta=1
    95                           	psect	text71,global,reloc=2,class=CODE,delta=1
    96                           	psect	text72,global,reloc=2,class=CODE,delta=1
    97                           	psect	text73,global,reloc=2,class=CODE,delta=1
    98                           	psect	text74,global,reloc=2,class=CODE,delta=1
    99                           	psect	text75,global,reloc=2,class=CODE,delta=1
   100                           	psect	text76,global,reloc=2,class=CODE,delta=1
   101                           	psect	text77,global,reloc=2,class=CODE,delta=1
   102                           	psect	text78,global,reloc=2,class=CODE,delta=1
   103                           	psect	text79,global,reloc=2,class=CODE,delta=1
   104                           	psect	text80,global,reloc=2,class=CODE,delta=1
   105                           	psect	text81,global,reloc=2,class=CODE,delta=1
   106                           	psect	text82,global,reloc=2,class=CODE,delta=1
   107                           	psect	text83,global,reloc=2,class=CODE,delta=1
   108                           	psect	text84,global,reloc=2,class=CODE,delta=1
   109                           	psect	text85,global,reloc=2,class=CODE,delta=1
   110                           	psect	text86,global,reloc=2,class=CODE,delta=1
   111                           	psect	text87,global,reloc=2,class=CODE,delta=1
   112                           	psect	text88,global,reloc=2,class=CODE,delta=1
   113                           	psect	text89,global,reloc=2,class=CODE,delta=1
   114                           	psect	text90,global,reloc=2,class=CODE,delta=1
   115                           	psect	text91,global,reloc=2,class=CODE,delta=1
   116                           	psect	text92,global,reloc=2,class=CODE,delta=1
   117                           	psect	text93,global,reloc=2,class=CODE,delta=1
   118                           	psect	text94,global,reloc=2,class=CODE,delta=1
   119                           	psect	text95,global,reloc=2,class=CODE,delta=1
   120                           	psect	text96,global,reloc=2,class=CODE,delta=1
   121                           	psect	text97,global,reloc=2,class=CODE,delta=1
   122                           	psect	text98,global,reloc=2,class=CODE,delta=1
   123                           	psect	text99,global,reloc=2,class=CODE,delta=1
   124                           	psect	text100,global,reloc=2,class=CODE,delta=1
   125                           	psect	text101,global,reloc=2,class=CODE,delta=1
   126                           	psect	text102,global,reloc=2,class=CODE,delta=1
   127                           	psect	text103,global,reloc=2,class=CODE,delta=1
   128                           	psect	text104,global,reloc=2,class=CODE,delta=1
   129                           	psect	text105,global,reloc=2,class=CODE,delta=1
   130                           	psect	text106,global,reloc=2,class=CODE,delta=1
   131                           	psect	text107,global,reloc=2,class=CODE,delta=1
   132                           	psect	text108,global,reloc=2,class=CODE,delta=1
   133                           	psect	text109,global,reloc=2,class=CODE,delta=1
   134                           	psect	text110,global,reloc=2,class=CODE,delta=1
   135                           	psect	text111,global,reloc=2,class=CODE,delta=1
   136                           	psect	text112,global,reloc=2,class=CODE,delta=1
   137                           	psect	text113,global,reloc=2,class=CODE,delta=1
   138                           	psect	text114,global,reloc=2,class=CODE,delta=1
   139                           	psect	text115,global,reloc=2,class=CODE,delta=1
   140                           	psect	text116,global,reloc=2,class=CODE,delta=1
   141                           	psect	text117,global,reloc=2,class=CODE,delta=1
   142                           	psect	text118,global,reloc=2,class=CODE,delta=1
   143                           	psect	text119,global,reloc=2,class=CODE,delta=1
   144                           	psect	text120,global,reloc=2,class=CODE,delta=1
   145                           	psect	text121,global,reloc=2,class=CODE,delta=1
   146                           	psect	text122,global,reloc=2,class=CODE,delta=1,group=1
   147                           	psect	text123,global,reloc=2,class=CODE,delta=1
   148                           	psect	text124,global,reloc=2,class=CODE,delta=1,group=1
   149                           	psect	text125,global,reloc=2,class=CODE,delta=1
   150                           	psect	text126,global,reloc=2,class=CODE,delta=1
   151                           	psect	text127,global,reloc=2,class=CODE,delta=1
   152                           	psect	text128,global,reloc=2,class=CODE,delta=1
   153                           	psect	text129,global,reloc=2,class=CODE,delta=1,group=2
   154                           	psect	text130,global,reloc=2,class=CODE,delta=1
   155                           	psect	text131,global,reloc=2,class=CODE,delta=1
   156                           	psect	text132,global,reloc=2,class=CODE,delta=1,inline
   157                           	psect	text133,global,reloc=2,class=CODE,delta=1
   158                           	psect	text134,global,reloc=2,class=CODE,delta=1
   159                           	psect	text135,global,reloc=2,class=CODE,delta=1
   160                           	psect	text136,global,reloc=2,class=CODE,delta=1,inline
   161                           	psect	text137,global,reloc=2,class=CODE,delta=1,inline
   162                           	psect	text138,global,reloc=2,class=CODE,delta=1
   163                           	psect	text139,global,reloc=2,class=CODE,delta=1
   164                           	psect	text140,global,reloc=2,class=CODE,delta=1
   165                           	psect	text141,global,reloc=2,class=CODE,delta=1
   166                           	psect	text142,global,reloc=2,class=CODE,delta=1
   167                           	psect	text143,global,reloc=2,class=CODE,delta=1
   168                           	psect	text144,global,reloc=2,class=CODE,delta=1
   169                           	psect	text145,global,reloc=2,class=CODE,delta=1
   170                           	psect	text146,global,reloc=2,class=CODE,delta=1
   171                           	psect	text147,global,reloc=2,class=CODE,delta=1
   172                           	psect	text148,global,reloc=2,class=CODE,delta=1
   173                           	psect	text149,global,reloc=2,class=CODE,delta=1
   174                           	psect	text150,global,reloc=2,class=CODE,delta=1
   175                           	psect	text151,global,reloc=2,class=CODE,delta=1
   176                           	psect	text152,global,reloc=2,class=CODE,delta=1
   177                           	psect	text153,global,reloc=2,class=CODE,delta=1
   178                           	psect	text154,global,reloc=2,class=CODE,delta=1,inline
   179                           	psect	text155,global,reloc=2,class=CODE,delta=1,inline
   180                           	psect	text156,global,reloc=2,class=CODE,delta=1,inline
   181                           	psect	text157,global,reloc=2,class=CODE,delta=1,inline
   182                           	psect	text158,global,reloc=2,class=CODE,delta=1,inline
   183                           	psect	text159,global,reloc=2,class=CODE,delta=1,inline
   184                           	psect	text160,global,reloc=2,class=CODE,delta=1,inline
   185                           	psect	text161,global,reloc=2,class=CODE,delta=1
   186                           	psect	text162,global,reloc=2,class=CODE,delta=1
   187                           	psect	text163,global,reloc=2,class=CODE,delta=1
   188                           	psect	text164,global,reloc=2,class=CODE,delta=1
   189                           	psect	text165,global,reloc=2,class=CODE,delta=1
   190                           	psect	text166,global,reloc=2,class=CODE,delta=1
   191                           	psect	text167,global,reloc=2,class=CODE,delta=1
   192                           	psect	text168,global,reloc=2,class=CODE,delta=1
   193                           	psect	text169,global,reloc=2,class=CODE,delta=1
   194                           	psect	text170,global,reloc=2,class=CODE,delta=1
   195                           	psect	text171,global,reloc=2,class=CODE,delta=1
   196                           	psect	text172,global,reloc=2,class=CODE,delta=1
   197                           	psect	text173,global,reloc=2,class=CODE,delta=1
   198                           	psect	text174,global,reloc=2,class=CODE,delta=1
   199                           	psect	text175,global,reloc=2,class=CODE,delta=1
   200                           	psect	text176,global,reloc=2,class=CODE,delta=1,inline
   201                           	psect	text177,global,reloc=2,class=CODE,delta=1,inline
   202                           	psect	text178,global,reloc=2,class=CODE,delta=1,inline
   203                           	psect	text179,global,reloc=2,class=CODE,delta=1
   204                           	psect	text180,global,reloc=2,class=CODE,delta=1,inline
   205                           	psect	text181,global,reloc=2,class=CODE,delta=1,inline
   206                           	psect	text182,global,reloc=2,class=CODE,delta=1,inline
   207                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   208                           	psect	text184,global,reloc=2,class=CODE,delta=1
   209                           	psect	text185,global,reloc=2,class=CODE,delta=1
   210                           	psect	text186,global,reloc=2,class=CODE,delta=1
   211                           	psect	text187,global,reloc=2,class=CODE,delta=1
   212                           	psect	text188,global,reloc=2,class=CODE,delta=1
   213                           	psect	text189,global,reloc=2,class=CODE,delta=1
   214                           	psect	text190,global,reloc=2,class=CODE,delta=1
   215                           	psect	text191,global,reloc=2,class=CODE,delta=1
   216                           	psect	text192,global,reloc=2,class=CODE,delta=1
   217                           	psect	text193,global,reloc=2,class=CODE,delta=1
   218                           	psect	text194,global,reloc=2,class=CODE,delta=1
   219                           	psect	text195,global,reloc=2,class=CODE,delta=1
   220                           	psect	text196,global,reloc=2,class=CODE,delta=1
   221                           	psect	text197,global,reloc=2,class=CODE,delta=1
   222                           	psect	text198,global,reloc=2,class=CODE,delta=1
   223                           	psect	text199,global,reloc=2,class=CODE,delta=1
   224                           	psect	text200,global,reloc=2,class=CODE,delta=1
   225                           	psect	text201,global,reloc=2,class=CODE,delta=1
   226                           	psect	text202,global,reloc=2,class=CODE,delta=1
   227                           	psect	text203,global,reloc=2,class=CODE,delta=1
   228                           	psect	text204,global,reloc=2,class=CODE,delta=1
   229                           	psect	text205,global,reloc=2,class=CODE,delta=1
   230                           	psect	text206,global,reloc=2,class=CODE,delta=1
   231                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   232                           	psect	text207,global,reloc=2,class=CODE,delta=1
   233                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   234                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   235                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   236                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   237  0000                     
   238                           ; Version 2.36
   239                           ; Generated 28/01/2022 GMT
   240                           ; 
   241                           ; Copyright © 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
   242                           ; All rights reserved.
   243                           ; 
   244                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   245                           ; 
   246                           ; Redistribution and use in source and binary forms, with or without modification, are
   247                           ; permitted provided that the following conditions are met:
   248                           ; 
   249                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   250                           ;        conditions and the following disclaimer.
   251                           ; 
   252                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   253                           ;        of conditions and the following disclaimer in the documentation and/or other
   254                           ;        materials provided with the distribution. Publication is not required when
   255                           ;        this file is used in an embedded application.
   256                           ; 
   257                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   258                           ;        software without specific prior written permission.
   259                           ; 
   260                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   261                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   262                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   263                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   264                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   265                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   266                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   267                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   268                           ; 
   269                           ; 
   270                           ; Code-generator required, PIC18F46K40 Definitions
   271                           ; 
   272                           ; SFR Addresses
   273  0000                     
   274                           	psect	idataBANK0
   275  0092B8                     __pidataBANK0:
   276                           	callstack 0
   277                           
   278                           ;initializer for _auxCounter
   279  0092B8  03E8               	dw	1000
   280                           
   281                           	psect	idataBANK1
   282  009286                     __pidataBANK1:
   283                           	callstack 0
   284                           
   285                           ;initializer for _tempCounter
   286  009286  3DDD               	dw	15837
   287  009288  000F               	dw	15
   288                           
   289                           ;initializer for _firstselectflag
   290  00928A  01                 	db	1
   291                           
   292                           	psect	idataBANK2
   293  0092BA                     __pidataBANK2:
   294                           	callstack 0
   295                           
   296                           ;initializer for _zeroCrossingWaitTime
   297  0092BA  19                 	db	25
   298  0092BB  19                 	db	25
   299                           
   300                           	psect	idataBANK3
   301  008E5E                     __pidataBANK3:
   302                           	callstack 0
   303                           
   304                           ;initializer for _DispTable
   305  008E5E  6F                 	db	111
   306  008E5F  21                 	db	33
   307  008E60  76                 	db	118
   308  008E61  73                 	db	115
   309  008E62  39                 	db	57
   310  008E63  5B                 	db	91
   311  008E64  5F                 	db	95
   312  008E65  61                 	db	97
   313  008E66  7F                 	db	127
   314  008E67  7B                 	db	123
   315  008E68  7D                 	db	125
   316  008E69  7F                 	db	127
   317  008E6A  4E                 	db	78
   318  008E6B  37                 	db	55
   319  008E6C  5E                 	db	94
   320  008E6D  5C                 	db	92
   321  008E6E  7C                 	db	124
   322  008E6F  3D                 	db	61
   323  008E70  0E                 	db	14
   324  008E71  2F                 	db	47
   325  008E72  14                 	db	20
   326  008E73  1E                 	db	30
   327  008E74  07                 	db	7
   328  008E75  45                 	db	69
   329  008E76  10                 	db	16
   330  008E77  0C                 	db	12
   331  008E78  40                 	db	64
   332  008E79  20                 	db	32
   333  008E7A  01                 	db	1
   334  008E7B  02                 	db	2
   335  008E7C  04                 	db	4
   336  008E7D  08                 	db	8
   337  008E7E  00                 	db	0
   338  008E7F  3B                 	db	59
   339  008E80  1F                 	db	31
   340  008E81  16                 	db	22
   341  008E82  17                 	db	23
   342                           
   343                           	psect	smallconst
   344  000F00                     __psmallconst:
   345                           	callstack 0
   346  000F00  00                 	db	0
   347  000F01                     _i2c1_fsmStateTable:
   348                           	callstack 0
   349  000F01  FC                 	db	low _I2C1_DO_IDLE
   350  000F02  91                 	db	high _I2C1_DO_IDLE
   351  000F03  68                 	db	low _I2C1_DO_SEND_ADR_READ
   352  000F04  91                 	db	high _I2C1_DO_SEND_ADR_READ
   353  000F05  5A                 	db	low _I2C1_DO_SEND_ADR_WRITE
   354  000F06  91                 	db	high _I2C1_DO_SEND_ADR_WRITE
   355  000F07  A0                 	db	low _I2C1_DO_TX
   356  000F08  77                 	db	high _I2C1_DO_TX
   357  000F09  40                 	db	low _I2C1_DO_RX
   358  000F0A  7C                 	db	high _I2C1_DO_RX
   359  000F0B  F2                 	db	low _I2C1_DO_RCEN
   360  000F0C  91                 	db	high _I2C1_DO_RCEN
   361  000F0D  EC                 	db	low _I2C1_DO_TX_EMPTY
   362  000F0E  81                 	db	high _I2C1_DO_TX_EMPTY
   363  000F0F  46                 	db	low _I2C1_DO_SEND_RESTART_READ
   364  000F10  92                 	db	high _I2C1_DO_SEND_RESTART_READ
   365  000F11  3E                 	db	low _I2C1_DO_SEND_RESTART_WRITE
   366  000F12  92                 	db	high _I2C1_DO_SEND_RESTART_WRITE
   367  000F13  36                 	db	low _I2C1_DO_SEND_RESTART
   368  000F14  92                 	db	high _I2C1_DO_SEND_RESTART
   369  000F15  2E                 	db	low _I2C1_DO_SEND_STOP
   370  000F16  92                 	db	high _I2C1_DO_SEND_STOP
   371  000F17  26                 	db	low _I2C1_DO_RX_ACK
   372  000F18  92                 	db	high _I2C1_DO_RX_ACK
   373  000F19  1E                 	db	low _I2C1_DO_RX_NACK_STOP
   374  000F1A  92                 	db	high _I2C1_DO_RX_NACK_STOP
   375  000F1B  16                 	db	low _I2C1_DO_RX_NACK_RESTART
   376  000F1C  92                 	db	high _I2C1_DO_RX_NACK_RESTART
   377  000F1D  E8                 	db	low _I2C1_DO_RESET
   378  000F1E  91                 	db	high _I2C1_DO_RESET
   379  000F1F  A6                 	db	low _I2C1_DO_ADDRESS_NACK
   380  000F20  86                 	db	high _I2C1_DO_ADDRESS_NACK
   381  000F21                     __end_of_i2c1_fsmStateTable:
   382                           	callstack 0
   383  0000                     _T2CON	set	4029
   384  0000                     _T1CON	set	4047
   385  0000                     _T1CLK	set	4050
   386  0000                     _T1GATE	set	4049
   387  0000                     _T0CON0	set	4053
   388  0000                     _INLVLD	set	3874
   389  0000                     _SLRCOND	set	3875
   390  0000                     _ODCOND	set	3876
   391  0000                     _WPUD	set	3877
   392  0000                     _TRISD	set	3979
   393  0000                     _TRISC	set	3978
   394  0000                     _TRISB	set	3977
   395  0000                     _TRISA	set	3976
   396  0000                     _TRISE	set	3980
   397  0000                     _LATC	set	3973
   398  0000                     _LATB	set	3972
   399  0000                     _OSCTUNE	set	3805
   400  0000                     _OSCFRQ	set	3806
   401  0000                     _ADERRL	set	3950
   402  0000                     _ADERRH	set	3951
   403  0000                     _ADPREVL	set	3937
   404  0000                     _ADPREVH	set	3938
   405  0000                     _ADFLTRL	set	3954
   406  0000                     _ADFLTRH	set	3955
   407  0000                     _ADACCL	set	3952
   408  0000                     _ADACCH	set	3953
   409  0000                     _ADCNT	set	3943
   410  0000                     _ADRESL	set	3939
   411  0000                     _ADRESH	set	3940
   412  0000                     _ADACQ	set	3932
   413  0000                     _ADCON0	set	3936
   414  0000                     _ADCLK	set	3927
   415  0000                     _ADSTAT	set	3941
   416  0000                     _ADCON3	set	3931
   417  0000                     _ADCON2	set	3930
   418  0000                     _ADPRE	set	3934
   419  0000                     _ADSTPTH	set	3945
   420  0000                     _ADUTHH	set	3949
   421  0000                     _ADUTHL	set	3948
   422  0000                     _ADLTHH	set	3947
   423  0000                     _SP1BRGH	set	3996
   424  0000                     _TX1STA	set	3998
   425  000F21  00                 	db	0	; dummy byte at the end
   426  0000                     
   427                           	psect	nvBANK1
   428  0001FE                     __pnvBANK1:
   429                           	callstack 0
   430  0001FE                     _eusart1TxBufferRemaining:
   431                           	callstack 0
   432  0001FE                     	ds	1
   433                           
   434                           	psect	nvBANK2
   435  0002DD                     __pnvBANK2:
   436                           	callstack 0
   437  0002DD                     _TMR2_InterruptHandler:
   438                           	callstack 0
   439  0002DD                     	ds	2
   440  0002DF                     _TMR1_InterruptHandler:
   441                           	callstack 0
   442  0002DF                     	ds	2
   443  0002E1                     _timer1ReloadVal:
   444                           	callstack 0
   445  0002E1                     	ds	2
   446  0002E3                     _TMR0_InterruptHandler:
   447                           	callstack 0
   448  0002E3                     	ds	2
   449  0002E5                     _EUSART1_ErrorHandler:
   450                           	callstack 0
   451  0002E5                     	ds	2
   452  0002E7                     _EUSART1_OverrunErrorHandler:
   453                           	callstack 0
   454  0002E7                     	ds	2
   455  0002E9                     _EUSART1_FramingErrorHandler:
   456                           	callstack 0
   457  0002E9                     	ds	2
   458  0002EB                     _EUSART1_RxDefaultInterruptHandler:
   459                           	callstack 0
   460  0002EB                     	ds	2
   461  0002ED                     _EUSART1_TxDefaultInterruptHandler:
   462                           	callstack 0
   463  0002ED                     	ds	2
   464  0000                     _WDTCON0bits	set	3794
   465  0000                     _TMR0IE	set	30229
   466  0000                     _TMR0IF	set	30293
   467  0000                     _LATEbits	set	3975
   468  0000                     _LATDbits	set	3974
   469  0000                     _LATAbits	set	3971
   470  0000                     _LATCbits	set	3973
   471  0000                     _PORTB	set	3982
   472  0000                     _T1CONbits	set	4047
   473  0000                     _SSP1CON2bits	set	3991
   474  0000                     _SSP1CON1bits	set	3990
   475  0000                     _ADCON0bits	set	3936
   476  0000                     _RC1STAbits	set	3997
   477  0000                     _GIE	set	32663
   478  0000                     _RX1PPS	set	3765
   479  0000                     _SSP1CLKPPS	set	3767
   480  0000                     _PIE0bits	set	3778
   481  0000                     _PIE3bits	set	3781
   482  0000                     _PIE4bits	set	3782
   483  0000                     _PIR0bits	set	3786
   484  0000                     _PIR3bits	set	3789
   485  0000                     _ADACT	set	3926
   486  0000                     _ADREF	set	3928
   487  0000                     _ADCON1	set	3929
   488  0000                     _ADCAP	set	3933
   489  0000                     _ADPCH	set	3935
   490  0000                     _ADRPT	set	3942
   491  0000                     _ADSTPTL	set	3944
   492  0000                     _ADLTHL	set	3946
   493  0000                     _RC1REG	set	3993
   494  0000                     _TX1REG	set	3994
   495  0000                     _SP1BRGL	set	3995
   496  0000                     _RC1STA	set	3997
   497  0000                     _BAUD1CON	set	3999
   498  0000                     _T2TMR	set	4027
   499  0000                     _T2PR	set	4028
   500  0000                     _T2HLT	set	4030
   501  0000                     _T2CLKCON	set	4031
   502  0000                     _TMR1L	set	4045
   503  0000                     _TMR1H	set	4046
   504  0000                     _T1GCON	set	4048
   505  0000                     _TMR0L	set	4051
   506  0000                     _TMR0H	set	4052
   507  0000                     _T0CON1	set	4054
   508  0000                     _PCON0bits	set	4055
   509  0000                     _INTCONbits	set	4082
   510  0000                     _LATA	set	3971
   511  0000                     _LATD	set	3974
   512  0000                     _LATE	set	3975
   513  0000                     _SSP1BUF	set	3986
   514  0000                     _SSP1ADD	set	3987
   515  0000                     _SSP1STAT	set	3989
   516  0000                     _SSP1CON2	set	3991
   517  0000                     _SSP1CON1	set	3990
   518  0000                     _WDTCON0	set	3794
   519  0000                     _OSCCON1	set	3800
   520  0000                     _PIR4bits	set	3790
   521  0000                     _OSCCON3	set	3802
   522  0000                     _OSCEN	set	3804
   523  0000                     _PMD0	set	3809
   524  0000                     _RC3PPS	set	3834
   525  0000                     _INLVLA	set	3853
   526  0000                     _SLRCONA	set	3854
   527  0000                     _ODCONA	set	3855
   528  0000                     _WPUA	set	3856
   529  0000                     _ANSELA	set	3857
   530  0000                     _ANSELB	set	3865
   531  0000                     _ANSELC	set	3873
   532  0000                     _ANSELD	set	3878
   533  0000                     _PMD5	set	3814
   534  0000                     _PMD4	set	3813
   535  0000                     _PMD3	set	3812
   536  0000                     _PMD2	set	3811
   537  0000                     _PMD1	set	3810
   538  0000                     _WDTCON1	set	3795
   539  0000                     _PORTEbits	set	3985
   540  0000                     _PORTBbits	set	3982
   541  0000                     _PORTAbits	set	3981
   542  0000                     _INLVLE	set	3882
   543  0000                     _SLRCONE	set	3883
   544  0000                     _ODCONE	set	3884
   545  0000                     _WPUE	set	3885
   546  0000                     _ANSELE	set	3886
   547  0000                     _INLVLC	set	3869
   548  0000                     _SLRCONC	set	3870
   549  0000                     _ODCONC	set	3871
   550  0000                     _WPUC	set	3872
   551  0000                     _INLVLB	set	3861
   552  0000                     _SLRCONB	set	3862
   553  0000                     _ODCONB	set	3863
   554  0000                     _WPUB	set	3864
   555  0000                     _IOCBN3	set	30875
   556  0000                     _IOCBP3	set	30883
   557  0000                     _SSP1DATPPS	set	3768
   558  0000                     _RC7PPS	set	3838
   559  0000                     _RC4PPS	set	3835
   560  0000                     _T2RST	set	4032
   561                           
   562                           ; #config settings
   563                           
   564                           	psect	cinit
   565  0070D4                     __pcinit:
   566                           	callstack 0
   567  0070D4                     start_initialization:
   568                           	callstack 0
   569  0070D4                     __initialization:
   570                           	callstack 0
   571                           
   572                           ; Initialize objects allocated to BANK3 (37 bytes)
   573                           ; load TBLPTR registers with __pidataBANK3
   574  0070D4  0E5E               	movlw	low __pidataBANK3
   575  0070D6  6EF6               	movwf	tblptrl,c
   576  0070D8  0E8E               	movlw	high __pidataBANK3
   577  0070DA  6EF7               	movwf	tblptrh,c
   578  0070DC  0E00               	movlw	low (__pidataBANK3 shr (0+16))
   579  0070DE  6EF8               	movwf	tblptru,c
   580  0070E0  EE03  F0D2         	lfsr	0,__pdataBANK3
   581  0070E4  EE10 F025          	lfsr	1,37
   582  0070E8                     copy_data0:
   583  0070E8  0009               	tblrd		*+
   584  0070EA  CFF5 FFEE          	movff	tablat,postinc0
   585  0070EE  50E5               	movf	postdec1,w,c
   586  0070F0  50E1               	movf	fsr1l,w,c
   587  0070F2  E1FA               	bnz	copy_data0
   588                           
   589                           ; Initialize objects allocated to BANK2 (2 bytes)
   590                           ; load TBLPTR registers with __pidataBANK2
   591  0070F4  0EBA               	movlw	low __pidataBANK2
   592  0070F6  6EF6               	movwf	tblptrl,c
   593  0070F8  0E92               	movlw	high __pidataBANK2
   594  0070FA  6EF7               	movwf	tblptrh,c
   595  0070FC  0E00               	movlw	low (__pidataBANK2 shr (0+16))
   596  0070FE  6EF8               	movwf	tblptru,c
   597  007100  0009               	tblrd		*+	;fetch initializer
   598  007102  CFF5 F2EF          	movff	tablat,__pdataBANK2
   599  007106  0009               	tblrd		*+	;fetch initializer
   600  007108  CFF5 F2F0          	movff	tablat,__pdataBANK2+1
   601                           
   602                           ; Initialize objects allocated to BANK1 (5 bytes)
   603                           ; load TBLPTR registers with __pidataBANK1
   604  00710C  0E86               	movlw	low __pidataBANK1
   605  00710E  6EF6               	movwf	tblptrl,c
   606  007110  0E92               	movlw	high __pidataBANK1
   607  007112  6EF7               	movwf	tblptrh,c
   608  007114  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   609  007116  6EF8               	movwf	tblptru,c
   610  007118  EE01  F0F9         	lfsr	0,__pdataBANK1
   611  00711C  EE10 F005          	lfsr	1,5
   612  007120                     copy_data1:
   613  007120  0009               	tblrd		*+
   614  007122  CFF5 FFEE          	movff	tablat,postinc0
   615  007126  50E5               	movf	postdec1,w,c
   616  007128  50E1               	movf	fsr1l,w,c
   617  00712A  E1FA               	bnz	copy_data1
   618                           
   619                           ; Initialize objects allocated to BANK0 (2 bytes)
   620                           ; load TBLPTR registers with __pidataBANK0
   621  00712C  0EB8               	movlw	low __pidataBANK0
   622  00712E  6EF6               	movwf	tblptrl,c
   623  007130  0E92               	movlw	high __pidataBANK0
   624  007132  6EF7               	movwf	tblptrh,c
   625  007134  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   626  007136  6EF8               	movwf	tblptru,c
   627  007138  0009               	tblrd		*+	;fetch initializer
   628  00713A  CFF5 F0F8          	movff	tablat,__pdataBANK0
   629  00713E  0009               	tblrd		*+	;fetch initializer
   630  007140  CFF5 F0F9          	movff	tablat,__pdataBANK0+1
   631                           
   632                           ; Clear objects allocated to BANK3 (210 bytes)
   633  007144  EE03  F000         	lfsr	0,__pbssBANK3
   634  007148  0ED2               	movlw	210
   635  00714A                     clear_0:
   636  00714A  6AEE               	clrf	postinc0,c
   637  00714C  06E8               	decf	wreg,f,c
   638  00714E  E1FD               	bnz	clear_0
   639                           
   640                           ; Clear objects allocated to BANK2 (221 bytes)
   641  007150  EE02  F000         	lfsr	0,__pbssBANK2
   642  007154  0EDD               	movlw	221
   643  007156                     clear_1:
   644  007156  6AEE               	clrf	postinc0,c
   645  007158  06E8               	decf	wreg,f,c
   646  00715A  E1FD               	bnz	clear_1
   647                           
   648                           ; Clear objects allocated to BANK1 (249 bytes)
   649  00715C  EE01  F000         	lfsr	0,__pbssBANK1
   650  007160  0EF9               	movlw	249
   651  007162                     clear_2:
   652  007162  6AEE               	clrf	postinc0,c
   653  007164  06E8               	decf	wreg,f,c
   654  007166  E1FD               	bnz	clear_2
   655                           
   656                           ; Clear objects allocated to BANK0 (120 bytes)
   657  007168  EE00  F060         	lfsr	0,__pbssBANK0
   658  00716C  0E78               	movlw	120
   659  00716E                     clear_3:
   660  00716E  6AEE               	clrf	postinc0,c
   661  007170  06E8               	decf	wreg,f,c
   662  007172  E1FD               	bnz	clear_3
   663                           
   664                           ; Clear objects allocated to COMRAM (21 bytes)
   665  007174  EE00  F03B         	lfsr	0,__pbssCOMRAM
   666  007178  0E15               	movlw	21
   667  00717A                     clear_4:
   668  00717A  6AEE               	clrf	postinc0,c
   669  00717C  06E8               	decf	wreg,f,c
   670  00717E  E1FD               	bnz	clear_4
   671  007180                     end_of_initialization:
   672                           	callstack 0
   673  007180                     __end_of__initialization:
   674                           	callstack 0
   675  007180  9050               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   676  007182  9250               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   677  007184  0100               	movlb	0
   678  007186  EF74  F02E         	goto	_main	;jump to C main() function
   679                           
   680                           	psect	bssCOMRAM
   681  00003B                     __pbssCOMRAM:
   682                           	callstack 0
   683  00003B                     _rfCMD:
   684                           	callstack 0
   685  00003B                     	ds	11
   686  000046                     _edit_Param:
   687                           	callstack 0
   688  000046                     	ds	6
   689  00004C                     _button_struct:
   690                           	callstack 0
   691  00004C                     	ds	4
   692                           
   693                           	psect	bssBANK0
   694  000060                     __pbssBANK0:
   695                           	callstack 0
   696  000060                     _learn_st:
   697                           	callstack 0
   698  000060                     	ds	18
   699  000072                     _dispStruct:
   700                           	callstack 0
   701  000072                     	ds	6
   702  000078                     _brakeElectric_st:
   703                           	callstack 0
   704  000078                     	ds	2
   705  00007A                     _pointSync:
   706                           	callstack 0
   707  00007A                     	ds	2
   708  00007C                     _Hop:
   709                           	callstack 0
   710  00007C                     	ds	2
   711  00007E                     _RFcount:
   712                           	callstack 0
   713  00007E                     	ds	2
   714  000080                     _temp:
   715                           	callstack 0
   716  000080                     	ds	1
   717  000081                     _control_limit_switch:
   718                           	callstack 0
   719  000081                     	ds	1
   720  000082                     _fullmotorPower:
   721                           	callstack 0
   722  000082                     	ds	1
   723  000083                     _stateMotor:
   724                           	callstack 0
   725  000083                     	ds	1
   726  000084                     _zeroCrossingWaitTimeIdx:
   727                           	callstack 0
   728  000084                     	ds	1
   729  000085                     _programmer_enable:
   730                           	callstack 0
   731  000085                     	ds	1
   732  000086                     readbutton@key1:
   733                           	callstack 0
   734  000086                     	ds	1
   735  000087                     readRFButtons@keyType:
   736                           	callstack 0
   737  000087                     	ds	1
   738  000088                     readRFButtons@key1:
   739                           	callstack 0
   740  000088                     	ds	1
   741  000089                     _RFBit:
   742                           	callstack 0
   743  000089                     	ds	1
   744  00008A                     _RFFull_12BIT:
   745                           	callstack 0
   746  00008A                     	ds	1
   747  00008B                     _RFFull:
   748                           	callstack 0
   749  00008B                     	ds	1
   750  00008C                     _BitCount:
   751                           	callstack 0
   752  00008C                     	ds	1
   753  00008D                     _Bptr:
   754                           	callstack 0
   755  00008D                     	ds	1
   756  00008E                     _numberOfErrorCurrent:
   757                           	callstack 0
   758  00008E                     	ds	1
   759  00008F                     _idxAdcZeroAquisition:
   760                           	callstack 0
   761  00008F                     	ds	1
   762  000090                     _idxSaveEnergyADCHist:
   763                           	callstack 0
   764  000090                     	ds	1
   765  000091                     _idxAdcAquisition:
   766                           	callstack 0
   767  000091                     	ds	1
   768  000092                     _Counterchoose:
   769                           	callstack 0
   770  000092                     	ds	1
   771  000093                     _eusart1RxCount:
   772                           	callstack 0
   773  000093                     	ds	1
   774  000094                     _eusart1RxTail:
   775                           	callstack 0
   776  000094                     	ds	1
   777  000095                     _eusart1RxHead:
   778                           	callstack 0
   779  000095                     	ds	1
   780  000096                     _eusart1TxTail:
   781                           	callstack 0
   782  000096                     	ds	1
   783  000097                     _eusart1TxHead:
   784                           	callstack 0
   785  000097                     	ds	1
   786  000098                     _var_sys_NVM:
   787                           	callstack 0
   788  000098                     	ds	64
   789                           
   790                           	psect	dataBANK0
   791  0000F8                     __pdataBANK0:
   792                           	callstack 0
   793  0000F8                     _auxCounter:
   794                           	callstack 0
   795  0000F8                     	ds	2
   796                           
   797                           	psect	bssBANK1
   798  000100                     __pbssBANK1:
   799                           	callstack 0
   800  000100                     _var_sys:
   801                           	callstack 0
   802  000100                     	ds	81
   803  000151                     _menu_st:
   804                           	callstack 0
   805  000151                     	ds	25
   806  00016A                     _security:
   807                           	callstack 0
   808  00016A                     	ds	11
   809  000175                     _fimdecurso:
   810                           	callstack 0
   811  000175                     	ds	6
   812  00017B                     _powerControl_st:
   813                           	callstack 0
   814  00017B                     	ds	6
   815  000181                     readRFButtons@serial:
   816                           	callstack 0
   817  000181                     	ds	4
   818  000185                     readRFButtons@rollingCode:
   819                           	callstack 0
   820  000185                     	ds	2
   821  000187                     _BufferRF_12BIT:
   822                           	callstack 0
   823  000187                     	ds	2
   824  000189                     _erroranterior:
   825                           	callstack 0
   826  000189                     	ds	2
   827  00018B                     _aux_in_auto_close:
   828                           	callstack 0
   829  00018B                     	ds	1
   830  00018C                     _aux_i:
   831                           	callstack 0
   832  00018C                     	ds	1
   833  00018D                     _Abertura_pedonal:
   834                           	callstack 0
   835  00018D                     	ds	1
   836  00018E                     _temppower:
   837                           	callstack 0
   838  00018E                     	ds	1
   839  00018F                     _difTime:
   840                           	callstack 0
   841  00018F                     	ds	1
   842  000190                     _StateTRIAC:
   843                           	callstack 0
   844  000190                     	ds	1
   845  000191                     _waitZeroPeak:
   846                           	callstack 0
   847  000191                     	ds	1
   848  000192                     _zeroCrossing:
   849                           	callstack 0
   850  000192                     	ds	1
   851  000193                     _zeroCrossingLength:
   852                           	callstack 0
   853  000193                     	ds	1
   854  000194                     _lastKey:
   855                           	callstack 0
   856  000194                     	ds	1
   857  000195                     _F2Chance:
   858                           	callstack 0
   859  000195                     	ds	1
   860  000196                     readbutton@key2:
   861                           	callstack 0
   862  000196                     	ds	1
   863  000197                     readRFButtons@typeRemote:
   864                           	callstack 0
   865  000197                     	ds	1
   866  000198                     _RFstate:
   867                           	callstack 0
   868  000198                     	ds	1
   869  000199                     _eusart1RxLastError:
   870                           	callstack 0
   871  000199                     	ds	1
   872  00019A                     _ts_system:
   873                           	callstack 0
   874  00019A                     	ds	72
   875  0001E2                     _controlGate_stateMachine:
   876                           	callstack 0
   877  0001E2                     	ds	11
   878  0001ED                     _main_stateMachine:
   879                           	callstack 0
   880  0001ED                     	ds	11
   881  0001F8                     setValueToEdit@value:
   882                           	callstack 0
   883  0001F8                     	ds	1
   884                           
   885                           	psect	dataBANK1
   886  0001F9                     __pdataBANK1:
   887                           	callstack 0
   888  0001F9                     _tempCounter:
   889                           	callstack 0
   890  0001F9                     	ds	4
   891  0001FD                     _firstselectflag:
   892                           	callstack 0
   893  0001FD                     	ds	1
   894                           
   895                           	psect	bssBANK2
   896  000200                     __pbssBANK2:
   897                           	callstack 0
   898  000200                     _ADC_array:
   899                           	callstack 0
   900  000200                     	ds	60
   901  00023C                     _I2C1_Status:
   902                           	callstack 0
   903  00023C                     	ds	36
   904  000260                     _SumEnergyADCHist_array:
   905                           	callstack 0
   906  000260                     	ds	20
   907  000274                     _eusart1RxStatusBuffer:
   908                           	callstack 0
   909  000274                     	ds	8
   910  00027C                     _eusart1RxBuffer:
   911                           	callstack 0
   912  00027C                     	ds	8
   913  000284                     _eusart1TxBuffer:
   914                           	callstack 0
   915  000284                     	ds	8
   916  00028C                     _EHop:
   917                           	callstack 0
   918  00028C                     	ds	2
   919  00028E                     _NextHop:
   920                           	callstack 0
   921  00028E                     	ds	2
   922  000290                     _timer0ReloadVal16bit:
   923                           	callstack 0
   924  000290                     	ds	2
   925  000292                     _classic_data:
   926                           	callstack 0
   927  000292                     	ds	16
   928  0002A2                     _memoryTEMP:
   929                           	callstack 0
   930  0002A2                     	ds	16
   931  0002B2                     _controlLearning_stateMachine:
   932                           	callstack 0
   933  0002B2                     	ds	11
   934  0002BD                     _menuConfiguration_stateMachine:
   935                           	callstack 0
   936  0002BD                     	ds	11
   937  0002C8                     _BufferRF:
   938                           	callstack 0
   939  0002C8                     	ds	9
   940  0002D1                     _DKEY:
   941                           	callstack 0
   942  0002D1                     	ds	8
   943  0002D9                     NormalKeyGen@SEED:
   944                           	callstack 0
   945  0002D9                     	ds	4
   946                           
   947                           	psect	dataBANK2
   948  0002EF                     __pdataBANK2:
   949                           	callstack 0
   950  0002EF                     _zeroCrossingWaitTime:
   951                           	callstack 0
   952  0002EF                     	ds	2
   953                           
   954                           	psect	bssBANK3
   955  000300                     __pbssBANK3:
   956                           	callstack 0
   957  000300                     _listSyncValues:
   958                           	callstack 0
   959  000300                     	ds	150
   960  000396                     _ADC_zero_array:
   961                           	callstack 0
   962  000396                     	ds	60
   963                           
   964                           	psect	dataBANK3
   965  0003D2                     __pdataBANK3:
   966                           	callstack 0
   967  0003D2                     _DispTable:
   968                           	callstack 0
   969  0003D2                     	ds	37
   970                           
   971                           	psect	cstackBANK0
   972  0000D8                     __pcstackBANK0:
   973                           	callstack 0
   974  0000D8                     ??_keeloq_classic_decrypt_packet:
   975  0000D8                     ??_setPositionInvertionInClosing:
   976  0000D8                     ??_validateRemoteSerialNumber:
   977  0000D8                     ??_RemoveSerial:
   978  0000D8                     SaveNVM_VarSystem@page:
   979                           	callstack 0
   980  0000D8                     getStateOpenPosition@state:
   981                           	callstack 0
   982  0000D8                     saveNewSerial@tempSerial:
   983                           	callstack 0
   984                           
   985                           ; 4 bytes @ 0x0
   986  0000D8                     	ds	1
   987  0000D9                     getStateOpenPosition@stateMotor:
   988                           	callstack 0
   989  0000D9                     SaveNVM_VarSystem@tempAdd:
   990                           	callstack 0
   991                           
   992                           ; 2 bytes @ 0x1
   993  0000D9                     	ds	1
   994  0000DA                     ??_controlVelocity:
   995  0000DA                     RemoveSerial@cmdType:
   996                           	callstack 0
   997                           
   998                           ; 1 bytes @ 0x2
   999  0000DA                     	ds	1
  1000  0000DB                     SaveNVM_VarSystem@point:
  1001                           	callstack 0
  1002  0000DB                     RemoveSerial@tempSerial:
  1003                           	callstack 0
  1004                           
  1005                           ; 4 bytes @ 0x3
  1006  0000DB                     	ds	1
  1007  0000DC                     ??_eusartparser:
  1008  0000DC                     ??_setValueToEdit:
  1009  0000DC                     saveNewSerial@position:
  1010                           	callstack 0
  1011  0000DC                     sm_execute_ControlLearning@psm:
  1012                           	callstack 0
  1013                           
  1014                           ; 2 bytes @ 0x4
  1015  0000DC                     	ds	1
  1016  0000DD                     ??_saveNewSerial:
  1017                           
  1018                           ; 1 bytes @ 0x5
  1019  0000DD                     	ds	1
  1020  0000DE                     ??_sm_execute_ControlLearning:
  1021  0000DE                     setValueToEdit@menuType:
  1022                           	callstack 0
  1023                           
  1024                           ; 1 bytes @ 0x6
  1025  0000DE                     	ds	1
  1026  0000DF                     setValueToEdit@posindex:
  1027                           	callstack 0
  1028                           
  1029                           ; 1 bytes @ 0x7
  1030  0000DF                     	ds	1
  1031  0000E0                     ??_controlSelectRemote:
  1032  0000E0                     setValueToEdit@haveValueToEdit:
  1033                           	callstack 0
  1034  0000E0                     keeloqDecryptPacket@data:
  1035                           	callstack 0
  1036  0000E0                     DecryptPacket_12BIT@data:
  1037                           	callstack 0
  1038                           
  1039                           ; 2 bytes @ 0x8
  1040  0000E0                     	ds	1
  1041  0000E1                     controlSelectRemote@validSerial:
  1042                           	callstack 0
  1043                           
  1044                           ; 1 bytes @ 0x9
  1045  0000E1                     	ds	1
  1046  0000E2                     controlSelectRemote@pos:
  1047                           	callstack 0
  1048  0000E2                     keeloqDecryptPacket@classic_data:
  1049                           	callstack 0
  1050  0000E2                     DecryptPacket_12BIT@classic_data:
  1051                           	callstack 0
  1052                           
  1053                           ; 2 bytes @ 0xA
  1054  0000E2                     	ds	1
  1055  0000E3                     controlSelectRemote@typeRemote:
  1056                           	callstack 0
  1057                           
  1058                           ; 1 bytes @ 0xB
  1059  0000E3                     	ds	1
  1060  0000E4                     ??_keeloqDecryptPacket:
  1061  0000E4                     DecryptPacket_12BIT@commandType:
  1062                           	callstack 0
  1063  0000E4                     actionZone_Opening@securityClosing:
  1064                           	callstack 0
  1065  0000E4                     controlSelectRemote@tempSerial:
  1066                           	callstack 0
  1067                           
  1068                           ; 4 bytes @ 0xC
  1069  0000E4                     	ds	1
  1070  0000E5                     actionZone_Opening@securityOpening:
  1071                           	callstack 0
  1072                           
  1073                           ; 1 bytes @ 0xD
  1074  0000E5                     	ds	1
  1075  0000E6                     actionZone_Opening@typeOpenOrder:
  1076                           	callstack 0
  1077                           
  1078                           ; 1 bytes @ 0xE
  1079  0000E6                     	ds	1
  1080  0000E7                     sm_execute_ControlGate@psm:
  1081                           	callstack 0
  1082                           
  1083                           ; 2 bytes @ 0xF
  1084  0000E7                     	ds	1
  1085  0000E8                     keeloqDecryptPacket@hop_error:
  1086                           	callstack 0
  1087  0000E8                     controlSelectRemote@temp:
  1088                           	callstack 0
  1089                           
  1090                           ; 1 bytes @ 0x10
  1091  0000E8                     	ds	1
  1092  0000E9                     ??_sm_execute_ControlGate:
  1093  0000E9                     keeloqDecryptPacket@commandType:
  1094                           	callstack 0
  1095  0000E9                     sm_execute_menuConfiguration@psm:
  1096                           	callstack 0
  1097                           
  1098                           ; 2 bytes @ 0x11
  1099  0000E9                     	ds	2
  1100  0000EB                     ??_sm_execute_menuConfiguration:
  1101  0000EB                     sm_execute_ControlGate@typeOpenOrder:
  1102                           	callstack 0
  1103                           
  1104                           ; 1 bytes @ 0x13
  1105  0000EB                     	ds	2
  1106  0000ED                     sm_execute_main@psm:
  1107                           	callstack 0
  1108                           
  1109                           ; 2 bytes @ 0x15
  1110  0000ED                     	ds	2
  1111  0000EF                     ??_sm_execute_main:
  1112                           
  1113                           ; 1 bytes @ 0x17
  1114  0000EF                     	ds	2
  1115  0000F1                     main@package:
  1116                           	callstack 0
  1117                           
  1118                           ; 7 bytes @ 0x19
  1119  0000F1                     	ds	7
  1120                           
  1121                           	psect	cstackCOMRAM
  1122  000001                     __pcstackCOMRAM:
  1123                           	callstack 0
  1124  000001                     ??_rxi:
  1125  000001                     ??i2_GetMotorPower:
  1126  000001                     ADCC_GetSingleConversion@channel:
  1127                           	callstack 0
  1128  000001                     Segments_Set@value:
  1129                           	callstack 0
  1130  000001                     i2VerifyElectricalBrake@tempState:
  1131                           	callstack 0
  1132  000001                     TMR1_WriteTimer@timerVal:
  1133                           	callstack 0
  1134  000001                     decrementTimeslot@ts:
  1135                           	callstack 0
  1136                           
  1137                           ; 2 bytes @ 0x0
  1138  000001                     	ds	1
  1139  000002                     ??_ReadADC:
  1140  000002                     i2VerifyElectricalBrake@actualState:
  1141                           	callstack 0
  1142                           
  1143                           ; 1 bytes @ 0x1
  1144  000002                     	ds	1
  1145  000003                     
  1146                           ; 1 bytes @ 0x2
  1147  000003                     	ds	1
  1148  000004                     i2GetMotorPower@defineatraso:
  1149                           	callstack 0
  1150                           
  1151                           ; 1 bytes @ 0x3
  1152  000004                     	ds	1
  1153  000005                     ??_controlMotorForce:
  1154  000005                     
  1155                           ; 1 bytes @ 0x4
  1156  000005                     	ds	5
  1157  00000A                     ??_INTERRUPT_InterruptManager:
  1158                           
  1159                           ; 1 bytes @ 0x9
  1160  00000A                     	ds	6
  1161  000010                     ??_GetMotorPower:
  1162  000010                     ??_SetSegmentValueLearn:
  1163  000010                     ?_sumEnergyADC:
  1164                           	callstack 0
  1165  000010                     ?_sm_get_current_state:
  1166                           	callstack 0
  1167  000010                     ?___wmul:
  1168                           	callstack 0
  1169  000010                     ?___lwdiv:
  1170                           	callstack 0
  1171  000010                     ?_calculateMean:
  1172                           	callstack 0
  1173  000010                     ?_sumHIST:
  1174                           	callstack 0
  1175  000010                     ?___lldiv:
  1176                           	callstack 0
  1177  000010                     EUSART1_Read@readValue:
  1178                           	callstack 0
  1179  000010                     EUSART1_Write@txData:
  1180                           	callstack 0
  1181  000010                     I2C1_Open@address:
  1182                           	callstack 0
  1183  000010                     I2C1_Close@returnValue:
  1184                           	callstack 0
  1185  000010                     I2C1_MasterSendTxData@data:
  1186                           	callstack 0
  1187  000010                     WWDT_TimerClear@state:
  1188                           	callstack 0
  1189  000010                     getKeyPressed@temp:
  1190                           	callstack 0
  1191  000010                     RGB_Set@value:
  1192                           	callstack 0
  1193  000010                     SetSegmentValueIntermitent@d2:
  1194                           	callstack 0
  1195  000010                     VerifyElectricalBrake@tempState:
  1196                           	callstack 0
  1197  000010                     VerifyFollowMe@securityClose:
  1198                           	callstack 0
  1199  000010                     ___lbdiv@divisor:
  1200                           	callstack 0
  1201  000010                     ___lbmod@divisor:
  1202                           	callstack 0
  1203  000010                     EUSART1_SetFramingErrorHandler@interruptHandler:
  1204                           	callstack 0
  1205  000010                     EUSART1_SetOverrunErrorHandler@interruptHandler:
  1206                           	callstack 0
  1207  000010                     EUSART1_SetErrorHandler@interruptHandler:
  1208                           	callstack 0
  1209  000010                     EUSART1_SetTxInterruptHandler@interruptHandler:
  1210                           	callstack 0
  1211  000010                     EUSART1_SetRxInterruptHandler@interruptHandler:
  1212                           	callstack 0
  1213  000010                     I2C1_SetBuffer@buffer:
  1214                           	callstack 0
  1215  000010                     I2C1_SetCallback@cb:
  1216                           	callstack 0
  1217  000010                     TMR0_SetInterruptHandler@InterruptHandler:
  1218                           	callstack 0
  1219  000010                     TMR1_SetInterruptHandler@InterruptHandler:
  1220                           	callstack 0
  1221  000010                     TMR2_SetInterruptHandler@InterruptHandler:
  1222                           	callstack 0
  1223  000010                     saveEnergyADCHist@valueToSave:
  1224                           	callstack 0
  1225  000010                     DecCHK@data:
  1226                           	callstack 0
  1227  000010                     ReqResync@CurrentHop:
  1228                           	callstack 0
  1229  000010                     verifyProgramingMode@classic_data:
  1230                           	callstack 0
  1231  000010                     setFlashLigth_ON@Freq:
  1232                           	callstack 0
  1233  000010                     sm_restart@psm:
  1234                           	callstack 0
  1235  000010                     sm_get_current_state@psm:
  1236                           	callstack 0
  1237  000010                     ___wmul@multiplier:
  1238                           	callstack 0
  1239  000010                     ___lwdiv@dividend:
  1240                           	callstack 0
  1241  000010                     memcpy@d1:
  1242                           	callstack 0
  1243  000010                     calculateMean@meanValue:
  1244                           	callstack 0
  1245  000010                     ___lldiv@dividend:
  1246                           	callstack 0
  1247  000010                     write_eusartparser@package:
  1248                           	callstack 0
  1249                           
  1250                           ; 7 bytes @ 0xF
  1251  000010                     	ds	1
  1252  000011                     ?_read_package:
  1253                           	callstack 0
  1254  000011                     I2C1_Open@returnValue:
  1255                           	callstack 0
  1256  000011                     VerifyElectricalBrake@actualState:
  1257                           	callstack 0
  1258  000011                     ___lbdiv@dividend:
  1259                           	callstack 0
  1260  000011                     ___lbmod@dividend:
  1261                           	callstack 0
  1262  000011                     SetSegmentValueIntermitent@time:
  1263                           	callstack 0
  1264  000011                     setRGB_ON@Freq:
  1265                           	callstack 0
  1266  000011                     write_package@package:
  1267                           	callstack 0
  1268                           
  1269                           ; 7 bytes @ 0x10
  1270  000011                     	ds	1
  1271  000012                     ??_TMR1_Initialize:
  1272  000012                     ??_ControlMotor:
  1273  000012                     ??_sumEnergyADC:
  1274  000012                     ??_DecCHK:
  1275  000012                     SetSegmentValueLearn@direction:
  1276                           	callstack 0
  1277  000012                     ___lbdiv@counter:
  1278                           	callstack 0
  1279  000012                     ___lbmod@counter:
  1280                           	callstack 0
  1281  000012                     I2C1_SetBuffer@bufferSize:
  1282                           	callstack 0
  1283  000012                     I2C1_SetCallback@ptr:
  1284                           	callstack 0
  1285  000012                     sm_init@psm:
  1286                           	callstack 0
  1287  000012                     sm_send_event@psm:
  1288                           	callstack 0
  1289  000012                     ___wmul@multiplicand:
  1290                           	callstack 0
  1291  000012                     ___lwdiv@divisor:
  1292                           	callstack 0
  1293  000012                     memcpy@s1:
  1294                           	callstack 0
  1295                           
  1296                           ; 2 bytes @ 0x11
  1297  000012                     	ds	1
  1298  000013                     ??_setRGB_ON:
  1299  000013                     SetSegmentValueIntermitent@d1:
  1300                           	callstack 0
  1301  000013                     GetMotorPower@defineatraso:
  1302                           	callstack 0
  1303  000013                     ___lbdiv@quotient:
  1304                           	callstack 0
  1305  000013                     ___lbmod@rem:
  1306                           	callstack 0
  1307                           
  1308                           ; 1 bytes @ 0x12
  1309  000013                     	ds	1
  1310  000014                     ??_InitSoftStop:
  1311  000014                     ??_InitSoftStart:
  1312  000014                     ??_sumHIST:
  1313  000014                     ?___awdiv:
  1314                           	callstack 0
  1315  000014                     I2C1_SetCallback@idx:
  1316                           	callstack 0
  1317  000014                     sumEnergyADC@sumE:
  1318                           	callstack 0
  1319  000014                     sm_init@initial_state:
  1320                           	callstack 0
  1321  000014                     sm_send_event@event:
  1322                           	callstack 0
  1323  000014                     ___wmul@product:
  1324                           	callstack 0
  1325  000014                     ___awdiv@dividend:
  1326                           	callstack 0
  1327  000014                     ___lwdiv@quotient:
  1328                           	callstack 0
  1329  000014                     memcpy@n:
  1330                           	callstack 0
  1331  000014                     calculateMean@newValue:
  1332                           	callstack 0
  1333  000014                     ___lldiv@divisor:
  1334                           	callstack 0
  1335                           
  1336                           ; 4 bytes @ 0x13
  1337  000014                     	ds	1
  1338  000015                     setRGB_ON@RGBLigth:
  1339                           	callstack 0
  1340  000015                     I2C1_SetDataCompleteCallback@cb:
  1341                           	callstack 0
  1342  000015                     I2C1_SetAddressNackCallback@cb:
  1343                           	callstack 0
  1344                           
  1345                           ; 2 bytes @ 0x14
  1346  000015                     	ds	1
  1347  000016                     ?_getHopCode:
  1348                           	callstack 0
  1349  000016                     ?_getCurrentComparator:
  1350                           	callstack 0
  1351  000016                     sm_init@hist_mode:
  1352                           	callstack 0
  1353  000016                     ___lwdiv@counter:
  1354                           	callstack 0
  1355  000016                     memcpy@tmp:
  1356                           	callstack 0
  1357  000016                     sumEnergyADC@auxValue:
  1358                           	callstack 0
  1359  000016                     getHopCode@data:
  1360                           	callstack 0
  1361  000016                     ___awdiv@divisor:
  1362                           	callstack 0
  1363                           
  1364                           ; 2 bytes @ 0x15
  1365  000016                     	ds	1
  1366  000017                     ??_write_eusartparser:
  1367  000017                     refreshADCZeroOffset@i:
  1368                           	callstack 0
  1369  000017                     I2C1_SetDataCompleteCallback@ptr:
  1370                           	callstack 0
  1371  000017                     I2C1_SetAddressNackCallback@ptr:
  1372                           	callstack 0
  1373  000017                     memcpy@d:
  1374                           	callstack 0
  1375                           
  1376                           ; 2 bytes @ 0x16
  1377  000017                     	ds	1
  1378  000018                     ??_getHopCode:
  1379  000018                     ??_calculateMean:
  1380  000018                     ??_OpenWalkOrder:
  1381  000018                     sumEnergyADC@i:
  1382                           	callstack 0
  1383  000018                     ControlMotor@stateMotor:
  1384                           	callstack 0
  1385  000018                     read_eusartparser@package:
  1386                           	callstack 0
  1387  000018                     ___awdiv@counter:
  1388                           	callstack 0
  1389  000018                     refreshADCZeroOffset@media:
  1390                           	callstack 0
  1391  000018                     sumHIST@max:
  1392                           	callstack 0
  1393  000018                     ___lldiv@quotient:
  1394                           	callstack 0
  1395  000018                     read_package@package:
  1396                           	callstack 0
  1397                           
  1398                           ; 7 bytes @ 0x17
  1399  000018                     	ds	1
  1400  000019                     ??_read_eusartparser:
  1401  000019                     ___awdiv@sign:
  1402                           	callstack 0
  1403  000019                     wr1RegCompleteHandler@p:
  1404                           	callstack 0
  1405  000019                     rd1RegCompleteHandler@p:
  1406                           	callstack 0
  1407  000019                     rd2RegCompleteHandler@p:
  1408                           	callstack 0
  1409  000019                     wr2RegCompleteHandler@p:
  1410                           	callstack 0
  1411  000019                     rdBlkRegCompleteHandler@p:
  1412                           	callstack 0
  1413  000019                     rd1RegCompleteHandler@i2c1_master_example$F500@ptr:
  1414                           	callstack 0
  1415  000019                     rd2RegCompleteHandler@i2c1_master_example$F511@ptr:
  1416                           	callstack 0
  1417  000019                     wr1RegCompleteHandler@i2c1_master_example$F517@ptr:
  1418                           	callstack 0
  1419  000019                     wr2RegCompleteHandler@i2c1_master_example$F523@ptr:
  1420                           	callstack 0
  1421  000019                     rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr:
  1422                           	callstack 0
  1423  000019                     I2C1_CallbackReturnReset@funPtr:
  1424                           	callstack 0
  1425  000019                     memcpy@s:
  1426                           	callstack 0
  1427                           
  1428                           ; 2 bytes @ 0x18
  1429  000019                     	ds	1
  1430  00001A                     ??_getCurrentComparator:
  1431  00001A                     sumHIST@min:
  1432                           	callstack 0
  1433  00001A                     OpenWalkOrder@diffTime:
  1434                           	callstack 0
  1435  00001A                     ___awdiv@quotient:
  1436                           	callstack 0
  1437                           
  1438                           ; 2 bytes @ 0x19
  1439  00001A                     	ds	1
  1440  00001B                     ??_I2C1_DO_TX:
  1441  00001B                     ??_I2C1_DO_RX:
  1442  00001B                     ??_I2C1_DO_TX_EMPTY:
  1443  00001B                     ??_I2C1_DO_ADDRESS_NACK:
  1444  00001B                     getSerialCmd@serial:
  1445                           	callstack 0
  1446  00001B                     Decrypt@packet:
  1447                           	callstack 0
  1448                           
  1449                           ; 2 bytes @ 0x1A
  1450  00001B                     	ds	1
  1451  00001C                     getSerialCmd@temp:
  1452                           	callstack 0
  1453  00001C                     SetSegmentValueMain@d2:
  1454                           	callstack 0
  1455  00001C                     SetSegmentValue@d2:
  1456                           	callstack 0
  1457  00001C                     SetSegmentValueIntermitentMain@d2:
  1458                           	callstack 0
  1459  00001C                     ___lldiv@counter:
  1460                           	callstack 0
  1461  00001C                     sumHIST@sumH:
  1462                           	callstack 0
  1463                           
  1464                           ; 4 bytes @ 0x1B
  1465  00001C                     	ds	1
  1466  00001D                     ??_I2C1_MasterFsm:
  1467  00001D                     ?___lmul:
  1468                           	callstack 0
  1469  00001D                     Decrypt@key:
  1470                           	callstack 0
  1471  00001D                     SetSegmentValueMain@d1:
  1472                           	callstack 0
  1473  00001D                     SetSegmentValue@d1:
  1474                           	callstack 0
  1475  00001D                     SetSegmentValueIntermitentMain@time:
  1476                           	callstack 0
  1477  00001D                     ___lmul@multiplier:
  1478                           	callstack 0
  1479                           
  1480                           ; 4 bytes @ 0x1C
  1481  00001D                     	ds	1
  1482  00001E                     Decrypt@i:
  1483                           	callstack 0
  1484                           
  1485                           ; 1 bytes @ 0x1D
  1486  00001E                     	ds	1
  1487  00001F                     Decrypt@j:
  1488                           	callstack 0
  1489  00001F                     SetSegmentValueIntermitentMain@d1:
  1490                           	callstack 0
  1491  00001F                     write_eusartparser@debug:
  1492                           	callstack 0
  1493                           
  1494                           ; 2 bytes @ 0x1E
  1495  00001F                     	ds	1
  1496  000020                     ??_load_New_Menu:
  1497  000020                     ??_controlSaveRemote:
  1498  000020                     I2C1_MasterOperation@read:
  1499                           	callstack 0
  1500  000020                     sumHIST@i:
  1501                           	callstack 0
  1502  000020                     Decrypt@p:
  1503                           	callstack 0
  1504  000020                     actionZone_Closed@securityOpening:
  1505                           	callstack 0
  1506  000020                     actionZone_Opened@securityClosing:
  1507                           	callstack 0
  1508  000020                     getCurrentComparator@tempOffset:
  1509                           	callstack 0
  1510  000020                     getHopCode@tempHop:
  1511                           	callstack 0
  1512                           
  1513                           ; 2 bytes @ 0x1F
  1514  000020                     	ds	1
  1515  000021                     I2C1_MasterOperation@returnValue:
  1516                           	callstack 0
  1517  000021                     Decrypt@aux:
  1518                           	callstack 0
  1519  000021                     actionZone_Closed@typeOpenOrder:
  1520                           	callstack 0
  1521  000021                     actionZone_Opened@typeOpenOrder:
  1522                           	callstack 0
  1523  000021                     write_eusartparser@debug2:
  1524                           	callstack 0
  1525  000021                     ___lmul@multiplicand:
  1526                           	callstack 0
  1527                           
  1528                           ; 4 bytes @ 0x20
  1529  000021                     	ds	1
  1530  000022                     I2C1_Read1ByteRegister@reg:
  1531                           	callstack 0
  1532  000022                     getCurrentComparator@x:
  1533                           	callstack 0
  1534  000022                     getHopCode@tempPos:
  1535                           	callstack 0
  1536  000022                     load_New_Menu@Menu:
  1537                           	callstack 0
  1538  000022                     i2c_writeNBytes@reg:
  1539                           	callstack 0
  1540  000022                     i2c_readDataBlock@reg:
  1541                           	callstack 0
  1542  000022                     Decrypt@Buffer:
  1543                           	callstack 0
  1544                           
  1545                           ; 4 bytes @ 0x21
  1546  000022                     	ds	1
  1547  000023                     ??_ControlCurrent:
  1548  000023                     I2C1_Read1ByteRegister@address:
  1549                           	callstack 0
  1550  000023                     getHopCode@i:
  1551                           	callstack 0
  1552  000023                     load_New_Menu@i:
  1553                           	callstack 0
  1554                           
  1555                           ; 1 bytes @ 0x22
  1556  000023                     	ds	1
  1557  000024                     i2c_writeNBytes@data:
  1558                           	callstack 0
  1559  000024                     I2C1_Read1ByteRegister@returnValue:
  1560                           	callstack 0
  1561  000024                     i2c_readDataBlock@data:
  1562                           	callstack 0
  1563  000024                     HopCHK@data:
  1564                           	callstack 0
  1565                           
  1566                           ; 2 bytes @ 0x23
  1567  000024                     	ds	1
  1568  000025                     i2c_writeNBytes@len:
  1569                           	callstack 0
  1570  000025                     ___lmul@product:
  1571                           	callstack 0
  1572                           
  1573                           ; 4 bytes @ 0x24
  1574  000025                     	ds	1
  1575  000026                     i2c_readDataBlock@len:
  1576                           	callstack 0
  1577  000026                     NormalKeyGen@serial:
  1578                           	callstack 0
  1579  000026                     HopCHK@hopDiff:
  1580                           	callstack 0
  1581                           
  1582                           ; 2 bytes @ 0x25
  1583  000026                     	ds	1
  1584  000027                     ??_i2c_writeNBytes:
  1585                           
  1586                           ; 1 bytes @ 0x26
  1587  000027                     	ds	1
  1588  000028                     ??_i2c_readDataBlock:
  1589  000028                     NormalKeyGen@HOPtemp:
  1590                           	callstack 0
  1591  000028                     i2c_writeNBytes@dat:
  1592                           	callstack 0
  1593                           
  1594                           ; 17 bytes @ 0x27
  1595  000028                     	ds	1
  1596  000029                     ?_getTimeDecelaration:
  1597                           	callstack 0
  1598  000029                     i2c_readDataBlock@address:
  1599                           	callstack 0
  1600                           
  1601                           ; 1 bytes @ 0x28
  1602  000029                     	ds	1
  1603  00002A                     i2c_readDataBlock@d:
  1604                           	callstack 0
  1605                           
  1606                           ; 4 bytes @ 0x29
  1607  00002A                     	ds	2
  1608  00002C                     NormalKeyGen@SKEYtemp:
  1609                           	callstack 0
  1610                           
  1611                           ; 4 bytes @ 0x2B
  1612  00002C                     	ds	1
  1613  00002D                     ??_getTimeDecelaration:
  1614                           
  1615                           ; 1 bytes @ 0x2C
  1616  00002D                     	ds	1
  1617  00002E                     cmdMemoryIsEmpty@position:
  1618                           	callstack 0
  1619  00002E                     validateRemoteSerialNumber@serial:
  1620                           	callstack 0
  1621                           
  1622                           ; 4 bytes @ 0x2D
  1623  00002E                     	ds	1
  1624  00002F                     ??_cmdMemoryIsEmpty:
  1625                           
  1626                           ; 1 bytes @ 0x2E
  1627  00002F                     	ds	1
  1628  000030                     NormalKeyGen@Buffer:
  1629                           	callstack 0
  1630                           
  1631                           ; 8 bytes @ 0x2F
  1632  000030                     	ds	1
  1633  000031                     cmdMemoryIsEmpty@cmdType:
  1634                           	callstack 0
  1635  000031                     getTimeDecelaration@state:
  1636                           	callstack 0
  1637                           
  1638                           ; 1 bytes @ 0x30
  1639  000031                     	ds	1
  1640  000032                     ??_setPositionInvertionInOpening:
  1641  000032                     ??_getStateOpenPosition:
  1642  000032                     validateRemoteSerialNumber@VerifyOnlySerial:
  1643                           	callstack 0
  1644  000032                     actionZone_Closing@securityClosing:
  1645                           	callstack 0
  1646  000032                     cmdMemoryIsEmpty@tempSerial:
  1647                           	callstack 0
  1648                           
  1649                           ; 4 bytes @ 0x31
  1650  000032                     	ds	1
  1651  000033                     actionZone_Closing@typeOpenOrder:
  1652                           	callstack 0
  1653  000033                     validateRemoteSerialNumber@position:
  1654                           	callstack 0
  1655                           
  1656                           ; 2 bytes @ 0x32
  1657  000033                     	ds	2
  1658  000035                     validateRemoteSerialNumber@mask:
  1659                           	callstack 0
  1660                           
  1661                           ; 4 bytes @ 0x34
  1662  000035                     	ds	3
  1663  000038                     keeloq_classic_decrypt_packet@data:
  1664                           	callstack 0
  1665                           
  1666                           ; 2 bytes @ 0x37
  1667  000038                     	ds	1
  1668  000039                     i2c_writeNBytes@address:
  1669                           	callstack 0
  1670  000039                     validateRemoteSerialNumber@j:
  1671                           	callstack 0
  1672                           
  1673                           ; 1 bytes @ 0x38
  1674  000039                     	ds	1
  1675  00003A                     validateRemoteSerialNumber@i:
  1676                           	callstack 0
  1677  00003A                     saveNewSerial@cmdType:
  1678                           	callstack 0
  1679  00003A                     RemoveSerial@position:
  1680                           	callstack 0
  1681  00003A                     ResetDefaultMemory@type:
  1682                           	callstack 0
  1683  00003A                     checkNVM_VarSystem@saveParam:
  1684                           	callstack 0
  1685  00003A                     sm_execute_ControlLearning@typeOpenOrder:
  1686                           	callstack 0
  1687  00003A                     setValueToEdit@ParameterSelected:
  1688                           	callstack 0
  1689  00003A                     eusartparser@package:
  1690                           	callstack 0
  1691                           
  1692                           ; 1 bytes @ 0x39
  1693  00003A                     	ds	1
  1694  00003B                     
  1695                           ; 1 bytes @ 0x3A
  1696 ;;
  1697 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1698 ;;
  1699 ;; *************** function _main *****************
  1700 ;; Defined at:
  1701 ;;		line 63 in file "main_MC50.c"
  1702 ;; Parameters:    Size  Location     Type
  1703 ;;		None
  1704 ;; Auto vars:     Size  Location     Type
  1705 ;;  package         7   25[BANK0 ] struct package_t
  1706 ;; Return value:  Size  Location     Type
  1707 ;;                  1    wreg      void 
  1708 ;; Registers used:
  1709 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  1710 ;; Tracked objects:
  1711 ;;		On entry : 0/0
  1712 ;;		On exit  : 3F/1
  1713 ;;		Unchanged: 0/0
  1714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1716 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1718 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1719 ;;Total ram usage:        7 bytes
  1720 ;; Hardware stack levels required when called: 17
  1721 ;; This function calls:
  1722 ;;		_ControlCounterMoves
  1723 ;;		_ControlCurrent
  1724 ;;		_ControlInputs
  1725 ;;		_ControlLights
  1726 ;;		_ControlMotor
  1727 ;;		_EUSART1_is_rx_ready
  1728 ;;		_InitReceiver
  1729 ;;		_SYSTEM_Initialize
  1730 ;;		_SetSegmentValue
  1731 ;;		_ShowVersion
  1732 ;;		_WWDT_SoftEnable
  1733 ;;		_WWDT_TimerClear
  1734 ;;		_controlVelocity
  1735 ;;		_eusartparser
  1736 ;;		_getKeyPressed
  1737 ;;		_loadNVM_VarSystem
  1738 ;;		_readInputs
  1739 ;;		_readRFButtons
  1740 ;;		_read_package
  1741 ;;		_readbutton
  1742 ;;		_sm_execute_ControlGate
  1743 ;;		_sm_execute_main
  1744 ;;		_sm_init
  1745 ;; This function is called by:
  1746 ;;		Startup code after reset
  1747 ;; This function uses a non-reentrant model
  1748 ;;
  1749                           
  1750                           	psect	text0
  1751  005CE8                     __ptext0:
  1752                           	callstack 0
  1753  005CE8                     _main:
  1754                           	callstack 14
  1755                           
  1756                           ;main_MC50.c: 70:     dispStruct.display_grp.value_display1=dMinus;
  1757                           
  1758                           ;incstack = 0
  1759  005CE8  0E18               	movlw	24
  1760  005CEA  0100               	movlb	0	; () banked
  1761  005CEC  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  1762                           
  1763                           ;main_MC50.c: 71:     dispStruct.display_grp.value_display1=dMinus;
  1764  005CEE  0E18               	movlw	24
  1765  005CF0  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  1766                           
  1767                           ;main_MC50.c: 72:     dispStruct.intermitentFreq=0;
  1768  005CF2  0E00               	movlw	0
  1769  005CF4  6F76               	movwf	(_dispStruct+4)& (0+255),b	;volatile
  1770  005CF6  0E00               	movlw	0
  1771  005CF8  6F75               	movwf	(_dispStruct+3)& (0+255),b	;volatile
  1772                           
  1773                           ;main_MC50.c: 73:     dispStruct.upFase=1;
  1774  005CFA  0E01               	movlw	1
  1775  005CFC  6F77               	movwf	(_dispStruct+5)& (0+255),b	;volatile
  1776                           
  1777                           ; BSR set to: 0
  1778                           ;main_MC50.c: 76:     SYSTEM_Initialize();
  1779  005CFE  EC86  F045         	call	_SYSTEM_Initialize	;wreg free
  1780                           
  1781                           ; BSR set to: 14
  1782                           ;main_MC50.c: 77:     WWDT_SoftEnable();
  1783  005D02  EC46  F049         	call	_WWDT_SoftEnable	;wreg free
  1784                           
  1785                           ; BSR set to: 14
  1786                           ;main_MC50.c: 80:       (INTCONbits.GIE = 1);
  1787  005D06  8EF2               	bsf	242,7,c	;volatile
  1788                           
  1789                           ; BSR set to: 14
  1790                           ;main_MC50.c: 83:      (INTCONbits.PEIE = 1);
  1791  005D08  8CF2               	bsf	242,6,c	;volatile
  1792                           
  1793                           ; BSR set to: 14
  1794                           ;main_MC50.c: 86:     IOCBP3=1;
  1795  005D0A  010F               	movlb	15	; () banked
  1796  005D0C  8714               	bsf	20,3,b	;volatile
  1797                           
  1798                           ; BSR set to: 15
  1799                           ;main_MC50.c: 87:     IOCBN3=1;
  1800  005D0E  8713               	bsf	19,3,b	;volatile
  1801                           
  1802                           ; BSR set to: 15
  1803                           ;main_MC50.c: 94:     InitReceiver();
  1804  005D10  ECD0  F047         	call	_InitReceiver	;wreg free
  1805                           
  1806                           ; BSR set to: 0
  1807                           ;main_MC50.c: 95:     loadNVM_VarSystem();
  1808  005D14  EC2D  F031         	call	_loadNVM_VarSystem	;wreg free
  1809                           
  1810                           ;main_MC50.c: 97:     WWDT_TimerClear();
  1811  005D18  ECA6  F047         	call	_WWDT_TimerClear	;wreg free
  1812                           
  1813                           ;main_MC50.c: 99:     SetSegmentValue(dMinus,dMinus);
  1814  005D1C  0E18               	movlw	24
  1815  005D1E  6E1C               	movwf	SetSegmentValue@d2^0,c
  1816  005D20  0E18               	movlw	24
  1817  005D22  ECF7  F047         	call	_SetSegmentValue
  1818                           
  1819                           ; BSR set to: 0
  1820                           ;main_MC50.c: 100:     ts_system.ts_TimeSlot1ms = ( 100/50);
  1821  005D26  0E02               	movlw	2
  1822  005D28  0101               	movlb	1	; () banked
  1823  005D2A  6F9C               	movwf	(_ts_system+2)& (0+255),b	;volatile
  1824                           
  1825                           ;main_MC50.c: 101:     while ( ts_system.ts_TimeSlot1ms > 0 )
  1826  005D2C  D00B               	goto	l23295
  1827  005D2E                     l23285:
  1828                           
  1829                           ; BSR set to: 1
  1830                           ;main_MC50.c: 102:     {;main_MC50.c: 103:         if ( ts_system.ts_TimeSlotMain<=0 )
  1831  005D2E  519D               	movf	(_ts_system+3)& (0+255),w,b	;volatile
  1832  005D30  A4D8               	btfss	status,2,c
  1833  005D32  D008               	goto	l23295
  1834                           
  1835                           ; BSR set to: 1
  1836                           ;main_MC50.c: 104:         {;main_MC50.c: 105:             WWDT_TimerClear();
  1837  005D34  ECA6  F047         	call	_WWDT_TimerClear	;wreg free
  1838                           
  1839                           ;main_MC50.c: 106:             ts_system.ts_TimeSlotMain = 50;
  1840  005D38  0E32               	movlw	50
  1841  005D3A  0101               	movlb	1	; () banked
  1842  005D3C  6F9D               	movwf	(_ts_system+3)& (0+255),b	;volatile
  1843                           
  1844                           ; BSR set to: 1
  1845                           ;main_MC50.c: 108:             ts_system.ts_TimeSlot1ms--;
  1846  005D3E  079C               	decf	(_ts_system+2)& (0+255),f,b	;volatile
  1847                           
  1848                           ; BSR set to: 1
  1849                           ;main_MC50.c: 109:             readInputs();
  1850  005D40  ECF9  F033         	call	_readInputs	;wreg free
  1851  005D44                     l23295:
  1852                           
  1853                           ;main_MC50.c: 101:     while ( ts_system.ts_TimeSlot1ms > 0 )
  1854  005D44  0101               	movlb	1	; () banked
  1855  005D46  519C               	movf	(_ts_system+2)& (0+255),w,b	;volatile
  1856  005D48  A4D8               	btfss	status,2,c
  1857  005D4A  D7F1               	goto	l23285
  1858                           
  1859                           ; BSR set to: 1
  1860                           ;main_MC50.c: 117:     sm_init(&menuConfiguration_stateMachine,st_MainMenu,HIST_NONE);
  1861  005D4C  0EBD               	movlw	low _menuConfiguration_stateMachine
  1862  005D4E  6E12               	movwf	sm_init@psm^0,c
  1863  005D50  0E02               	movlw	high _menuConfiguration_stateMachine
  1864  005D52  6E13               	movwf	(sm_init@psm+1)^0,c
  1865  005D54  0E00               	movlw	0
  1866  005D56  6E15               	movwf	(sm_init@initial_state+1)^0,c
  1867  005D58  0E00               	movlw	0
  1868  005D5A  6E14               	movwf	sm_init@initial_state^0,c
  1869  005D5C  0E00               	movlw	0
  1870  005D5E  6E16               	movwf	sm_init@hist_mode^0,c
  1871  005D60  EC08  F042         	call	_sm_init	;wreg free
  1872                           
  1873                           ;main_MC50.c: 118:     sm_init(&main_stateMachine,st_standBy,HIST_NONE);
  1874  005D64  0EED               	movlw	low _main_stateMachine
  1875  005D66  6E12               	movwf	sm_init@psm^0,c
  1876  005D68  0E01               	movlw	high _main_stateMachine
  1877  005D6A  6E13               	movwf	(sm_init@psm+1)^0,c
  1878  005D6C  0E00               	movlw	0
  1879  005D6E  6E15               	movwf	(sm_init@initial_state+1)^0,c
  1880  005D70  0E00               	movlw	0
  1881  005D72  6E14               	movwf	sm_init@initial_state^0,c
  1882  005D74  0E00               	movlw	0
  1883  005D76  6E16               	movwf	sm_init@hist_mode^0,c
  1884  005D78  EC08  F042         	call	_sm_init	;wreg free
  1885                           
  1886                           ;main_MC50.c: 119:     sm_init(&controlGate_stateMachine,st_Idle,HIST_NONE);
  1887  005D7C  0EE2               	movlw	low _controlGate_stateMachine
  1888  005D7E  6E12               	movwf	sm_init@psm^0,c
  1889  005D80  0E01               	movlw	high _controlGate_stateMachine
  1890  005D82  6E13               	movwf	(sm_init@psm+1)^0,c
  1891  005D84  0E00               	movlw	0
  1892  005D86  6E15               	movwf	(sm_init@initial_state+1)^0,c
  1893  005D88  0E00               	movlw	0
  1894  005D8A  6E14               	movwf	sm_init@initial_state^0,c
  1895  005D8C  0E00               	movlw	0
  1896  005D8E  6E16               	movwf	sm_init@hist_mode^0,c
  1897  005D90  EC08  F042         	call	_sm_init	;wreg free
  1898                           
  1899                           ;main_MC50.c: 120:     sm_init(&controlLearning_stateMachine,st_InitLearning,HIST_NONE);
  1900  005D94  0EB2               	movlw	low _controlLearning_stateMachine
  1901  005D96  6E12               	movwf	sm_init@psm^0,c
  1902  005D98  0E02               	movlw	high _controlLearning_stateMachine
  1903  005D9A  6E13               	movwf	(sm_init@psm+1)^0,c
  1904  005D9C  0E00               	movlw	0
  1905  005D9E  6E15               	movwf	(sm_init@initial_state+1)^0,c
  1906  005DA0  0E00               	movlw	0
  1907  005DA2  6E14               	movwf	sm_init@initial_state^0,c
  1908  005DA4  0E00               	movlw	0
  1909  005DA6  6E16               	movwf	sm_init@hist_mode^0,c
  1910  005DA8  EC08  F042         	call	_sm_init	;wreg free
  1911                           
  1912                           ;main_MC50.c: 122:     ts_system.Debug_TS=(1000/50);
  1913  005DAC  0E00               	movlw	0
  1914  005DAE  0101               	movlb	1	; () banked
  1915  005DB0  6FA3               	movwf	(_ts_system+9)& (0+255),b	;volatile
  1916  005DB2  0E14               	movlw	20
  1917  005DB4  6FA2               	movwf	(_ts_system+8)& (0+255),b	;volatile
  1918                           
  1919                           ; BSR set to: 1
  1920                           ;main_MC50.c: 124:     var_sys.ADCZeroOffset = 510;
  1921  005DB6  0E01               	movlw	1
  1922  005DB8  6F4C               	movwf	(_var_sys+76)& (0+255),b	;volatile
  1923  005DBA  0EFE               	movlw	254
  1924  005DBC  6F4B               	movwf	(_var_sys+75)& (0+255),b	;volatile
  1925                           
  1926                           ; BSR set to: 1
  1927                           ;main_MC50.c: 125:     ts_system.TimeStopADCZeroOffsetCalc = (5*(1000/50));
  1928  005DBE  0E00               	movlw	0
  1929  005DC0  6FD9               	movwf	(_ts_system+63)& (0+255),b	;volatile
  1930  005DC2  0E64               	movlw	100
  1931  005DC4  6FD8               	movwf	(_ts_system+62)& (0+255),b	;volatile
  1932                           
  1933                           ; BSR set to: 1
  1934                           ;main_MC50.c: 126:     ts_system.TimeStopElectricBrake = 0;
  1935  005DC6  0E00               	movlw	0
  1936  005DC8  6FDB               	movwf	(_ts_system+65)& (0+255),b	;volatile
  1937  005DCA  0E00               	movlw	0
  1938  005DCC  6FDA               	movwf	(_ts_system+64)& (0+255),b	;volatile
  1939                           
  1940                           ; BSR set to: 1
  1941                           ;main_MC50.c: 129:     var_sys.StateMotor = Stopped;
  1942  005DCE  0E00               	movlw	0
  1943  005DD0  6F00               	movwf	_var_sys& (0+255),b	;volatile
  1944  005DD2                     l23309:
  1945                           
  1946                           ;main_MC50.c: 136:     {;main_MC50.c: 140:         struct package_t package;;main_MC50.c
      +                          : 141:         if(EUSART1_is_rx_ready()){
  1947  005DD2  EC96  F048         	call	_EUSART1_is_rx_ready	;wreg free
  1948  005DD6  0900               	iorlw	0
  1949  005DD8  B4D8               	btfsc	status,2,c
  1950  005DDA  D00D               	goto	l23315
  1951                           
  1952                           ; BSR set to: 0
  1953                           ;main_MC50.c: 142:             package=read_package();
  1954  005DDC  ECDC  F042         	call	_read_package	;wreg free
  1955  005DE0  EE20  F0F1         	lfsr	2,main@package
  1956  005DE4  0E06               	movlw	6
  1957  005DE6                     u28821:
  1958  005DE6  CFEB FFDB          	movff	plusw0,plusw2
  1959  005DEA  06E8               	decf	wreg,f,c
  1960  005DEC  E2FC               	bc	u28821
  1961                           
  1962                           ; BSR set to: 14
  1963                           ;main_MC50.c: 143:             eusartparser(&package);
  1964  005DEE  0EF1               	movlw	low main@package
  1965  005DF0  6E3A               	movwf	eusartparser@package^0,c
  1966  005DF2  EC3F  F037         	call	_eusartparser	;wreg free
  1967  005DF6                     l23315:
  1968                           
  1969                           ;main_MC50.c: 147:         if ( ts_system.ts_TimeSlotMain<=0 )
  1970  005DF6  0101               	movlb	1	; () banked
  1971  005DF8  519D               	movf	(_ts_system+3)& (0+255),w,b	;volatile
  1972  005DFA  A4D8               	btfss	status,2,c
  1973  005DFC  D7EA               	goto	l23309
  1974                           
  1975                           ; BSR set to: 1
  1976                           ;main_MC50.c: 148:         {;main_MC50.c: 149:              ts_system.ts_TimeSlotMain = 
      +                          50;
  1977  005DFE  0E32               	movlw	50
  1978  005E00  6F9D               	movwf	(_ts_system+3)& (0+255),b	;volatile
  1979                           
  1980                           ; BSR set to: 1
  1981                           ;main_MC50.c: 150:             WWDT_TimerClear();
  1982  005E02  ECA6  F047         	call	_WWDT_TimerClear	;wreg free
  1983                           
  1984                           ;main_MC50.c: 152:             if(var_sys.StateVersion<4)
  1985  005E06  0E04               	movlw	4
  1986  005E08  0101               	movlb	1	; () banked
  1987  005E0A  6149               	cpfslt	(_var_sys+73)& (0+255),b	;volatile
  1988  005E0C  D003               	goto	l23325
  1989                           
  1990                           ; BSR set to: 1
  1991                           ;main_MC50.c: 154:             {;main_MC50.c: 155:                 ShowVersion();
  1992  005E0E  EC92  F040         	call	_ShowVersion	;wreg free
  1993                           
  1994                           ;main_MC50.c: 156:             }
  1995  005E12  D7DF               	goto	l23309
  1996  005E14                     l23325:
  1997                           
  1998                           ; BSR set to: 1
  1999                           ;main_MC50.c: 158:             {;main_MC50.c: 160:                 readbutton();
  2000  005E14  EC28  F040         	call	_readbutton	;wreg free
  2001                           
  2002                           ; BSR set to: 1
  2003                           ;main_MC50.c: 162:                 readRFButtons();
  2004  005E18  ECE4  F02C         	call	_readRFButtons	;wreg free
  2005                           
  2006                           ;main_MC50.c: 163:                lastKey=getKeyPressed();
  2007  005E1C  EC29  F048         	call	_getKeyPressed	;wreg free
  2008  005E20  0101               	movlb	1	; () banked
  2009  005E22  6F94               	movwf	_lastKey& (0+255),b
  2010                           
  2011                           ; BSR set to: 1
  2012                           ;main_MC50.c: 165:                 readInputs();
  2013  005E24  ECF9  F033         	call	_readInputs	;wreg free
  2014                           
  2015                           ;main_MC50.c: 166:                 ControlInputs();
  2016  005E28  EC58  F032         	call	_ControlInputs	;wreg free
  2017                           
  2018                           ;main_MC50.c: 167:                 ControlCurrent();
  2019  005E2C  EC35  F02F         	call	_ControlCurrent	;wreg free
  2020                           
  2021                           ;main_MC50.c: 168:                 controlVelocity();
  2022  005E30  ECD9  F025         	call	_controlVelocity	;wreg free
  2023                           
  2024                           ;main_MC50.c: 169:                 ControlMotor();
  2025  005E34  ECA3  F023         	call	_ControlMotor	;wreg free
  2026                           
  2027                           ;main_MC50.c: 170:                 ControlLights();
  2028  005E38  ECEB  F01C         	call	_ControlLights	;wreg free
  2029                           
  2030                           ;main_MC50.c: 171:                 ControlCounterMoves();
  2031  005E3C  ECAF  F041         	call	_ControlCounterMoves	;wreg free
  2032                           
  2033                           ;main_MC50.c: 173:                 sm_execute_main(&main_stateMachine);
  2034  005E40  0EED               	movlw	low _main_stateMachine
  2035  005E42  0100               	movlb	0	; () banked
  2036  005E44  6FED               	movwf	sm_execute_main@psm& (0+255),b
  2037  005E46  0E01               	movlw	high _main_stateMachine
  2038  005E48  6FEE               	movwf	(sm_execute_main@psm+1)& (0+255),b
  2039  005E4A  EC50  F012         	call	_sm_execute_main	;wreg free
  2040                           
  2041                           ;main_MC50.c: 174:                 sm_execute_ControlGate(&controlGate_stateMachine);
  2042  005E4E  0EE2               	movlw	low _controlGate_stateMachine
  2043  005E50  0100               	movlb	0	; () banked
  2044  005E52  6FE7               	movwf	sm_execute_ControlGate@psm& (0+255),b
  2045  005E54  0E01               	movlw	high _controlGate_stateMachine
  2046  005E56  6FE8               	movwf	(sm_execute_ControlGate@psm+1)& (0+255),b
  2047  005E58  EC46  F01B         	call	_sm_execute_ControlGate	;wreg free
  2048                           
  2049                           ;main_MC50.c: 177:                 if(lastKey!=0xff)
  2050  005E5C  0101               	movlb	1	; () banked
  2051  005E5E  2994               	incf	_lastKey& (0+255),w,b
  2052  005E60  B4D8               	btfsc	status,2,c
  2053  005E62  D7B7               	goto	l23309
  2054                           
  2055                           ; BSR set to: 1
  2056                           ;main_MC50.c: 178:                 {;main_MC50.c: 180:                       InitReceive
      +                          r();
  2057  005E64  ECD0  F047         	call	_InitReceiver	;wreg free
  2058                           
  2059                           ; BSR set to: 1
  2060                           
  2061                           ;main_MC50.c: 185:         }
  2062  005E68  D7B4               	goto	l23309
  2063  005E6A                     __end_of_main:
  2064                           	callstack 0
  2065                           
  2066 ;; *************** function _sm_execute_main *****************
  2067 ;; Defined at:
  2068 ;;		line 26 in file "sm_Main_MC50.c"
  2069 ;; Parameters:    Size  Location     Type
  2070 ;;  psm             2   21[BANK0 ] PTR struct .
  2071 ;;		 -> main_stateMachine(11), 
  2072 ;; Auto vars:     Size  Location     Type
  2073 ;;		None
  2074 ;; Return value:  Size  Location     Type
  2075 ;;                  1    wreg      void 
  2076 ;; Registers used:
  2077 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2078 ;; Tracked objects:
  2079 ;;		On entry : 3F/0
  2080 ;;		On exit  : 0/0
  2081 ;;		Unchanged: 0/0
  2082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2083 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2084 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2085 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2086 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2087 ;;Total ram usage:        4 bytes
  2088 ;; Hardware stack levels used: 1
  2089 ;; Hardware stack levels required when called: 16
  2090 ;; This function calls:
  2091 ;;		_SetSegmentValueIntermitentMain
  2092 ;;		_SetSegmentValueMain
  2093 ;;		_load_New_Menu
  2094 ;;		_sm_execute_menuConfiguration
  2095 ;;		_sm_send_event
  2096 ;; This function is called by:
  2097 ;;		_main
  2098 ;; This function uses a non-reentrant model
  2099 ;;
  2100                           
  2101                           	psect	text1
  2102  0024A0                     __ptext1:
  2103                           	callstack 0
  2104  0024A0                     _sm_execute_main:
  2105                           	callstack 14
  2106                           
  2107                           ; BSR set to: 0
  2108                           ;sm_Main_MC50.c: 29:     switch((sm_state_Main_t) psm->current_state)
  2109                           
  2110                           ; BSR set to: 1
  2111                           ;incstack = 0
  2112  0024A0  D053               	goto	l22811
  2113  0024A2                     l22787:
  2114                           
  2115                           ; BSR set to: 0
  2116                           ;sm_Main_MC50.c: 32:         {;sm_Main_MC50.c: 33:             if(programmer_enable==0)
  2117  0024A2  5185               	movf	_programmer_enable& (0+255),w,b
  2118  0024A4  A4D8               	btfss	status,2,c
  2119  0024A6  D066               	goto	l22813
  2120                           
  2121                           ; BSR set to: 0
  2122                           ;sm_Main_MC50.c: 34:                 if(psm->last_event==ev_goto_MenuConfig)
  2123  0024A8  EE20 F004          	lfsr	2,4
  2124  0024AC  51ED               	movf	sm_execute_main@psm& (0+255),w,b
  2125  0024AE  26D9               	addwf	fsr2l,f,c
  2126  0024B0  51EE               	movf	(sm_execute_main@psm+1)& (0+255),w,b
  2127  0024B2  22DA               	addwfc	fsr2h,f,c
  2128  0024B4  0E06               	movlw	6
  2129  0024B6  18DE               	xorwf	postinc2,w,c
  2130  0024B8  10DE               	iorwf	postinc2,w,c
  2131  0024BA  A4D8               	btfss	status,2,c
  2132  0024BC  D006               	goto	l22793
  2133  0024BE                     u27820:
  2134                           
  2135                           ; BSR set to: 0
  2136                           ;sm_Main_MC50.c: 35:                 {;sm_Main_MC50.c: 37:                     psm->curr
      +                          ent_state = st_MenuConfiguration;
  2137  0024BE  C0ED  FFD9         	movff	sm_execute_main@psm,fsr2l
  2138  0024C2  C0EE  FFDA         	movff	sm_execute_main@psm+1,fsr2h
  2139  0024C6  0E01               	movlw	1
  2140  0024C8  D01D               	goto	L2
  2141  0024CA                     l22793:
  2142                           
  2143                           ; BSR set to: 0
  2144  0024CA  EE20 F004          	lfsr	2,4
  2145  0024CE  51ED               	movf	sm_execute_main@psm& (0+255),w,b
  2146  0024D0  26D9               	addwf	fsr2l,f,c
  2147  0024D2  51EE               	movf	(sm_execute_main@psm+1)& (0+255),w,b
  2148  0024D4  22DA               	addwfc	fsr2h,f,c
  2149  0024D6  0E11               	movlw	17
  2150  0024D8  18DE               	xorwf	postinc2,w,c
  2151  0024DA  10DE               	iorwf	postinc2,w,c
  2152  0024DC  A4D8               	btfss	status,2,c
  2153  0024DE  D04A               	goto	l22813
  2154                           
  2155                           ; BSR set to: 0
  2156                           ;sm_Main_MC50.c: 40:                 {;sm_Main_MC50.c: 41:                     psm->curr
      +                          ent_state = st_MotorON;
  2157  0024E0  C0ED  FFD9         	movff	sm_execute_main@psm,fsr2l
  2158  0024E4  C0EE  FFDA         	movff	sm_execute_main@psm+1,fsr2h
  2159  0024E8  0E02               	movlw	2
  2160  0024EA  D00C               	goto	L2
  2161  0024EC                     l22797:
  2162                           
  2163                           ; BSR set to: 0
  2164                           ;sm_Main_MC50.c: 46:         {;sm_Main_MC50.c: 47:             if(psm->last_event==ev_go
      +                          to_StandBy)
  2165  0024EC  EE20 F004          	lfsr	2,4
  2166  0024F0  51ED               	movf	sm_execute_main@psm& (0+255),w,b
  2167  0024F2  26D9               	addwf	fsr2l,f,c
  2168  0024F4  51EE               	movf	(sm_execute_main@psm+1)& (0+255),w,b
  2169  0024F6  22DA               	addwfc	fsr2h,f,c
  2170  0024F8  0E07               	movlw	7
  2171  0024FA  18DE               	xorwf	postinc2,w,c
  2172  0024FC  10DE               	iorwf	postinc2,w,c
  2173  0024FE  A4D8               	btfss	status,2,c
  2174  002500  D039               	goto	l22813
  2175  002502  D00F               	goto	u27850
  2176  002504                     L2:
  2177  002504  6EDE               	movwf	postinc2,c
  2178  002506  0E00               	movlw	0
  2179  002508  6EDD               	movwf	postdec2,c
  2180  00250A  D034               	goto	l22813
  2181  00250C                     l22801:
  2182                           
  2183                           ; BSR set to: 0
  2184                           ;sm_Main_MC50.c: 54:         {;sm_Main_MC50.c: 55:             if(psm->last_event==ev_go
      +                          to_StandBy)
  2185  00250C  EE20 F004          	lfsr	2,4
  2186  002510  51ED               	movf	sm_execute_main@psm& (0+255),w,b
  2187  002512  26D9               	addwf	fsr2l,f,c
  2188  002514  51EE               	movf	(sm_execute_main@psm+1)& (0+255),w,b
  2189  002516  22DA               	addwfc	fsr2h,f,c
  2190  002518  0E07               	movlw	7
  2191  00251A  18DE               	xorwf	postinc2,w,c
  2192  00251C  10DE               	iorwf	postinc2,w,c
  2193  00251E  A4D8               	btfss	status,2,c
  2194  002520  D006               	goto	l22805
  2195  002522                     u27850:
  2196                           
  2197                           ; BSR set to: 0
  2198                           ;sm_Main_MC50.c: 56:             {;sm_Main_MC50.c: 57:                 psm->current_stat
      +                          e = st_standBy;
  2199  002522  C0ED  FFD9         	movff	sm_execute_main@psm,fsr2l
  2200  002526  C0EE  FFDA         	movff	sm_execute_main@psm+1,fsr2h
  2201  00252A  0E00               	movlw	0
  2202  00252C  D7EB               	goto	L2
  2203  00252E                     l22805:
  2204                           
  2205                           ; BSR set to: 0
  2206  00252E  EE20 F004          	lfsr	2,4
  2207  002532  51ED               	movf	sm_execute_main@psm& (0+255),w,b
  2208  002534  26D9               	addwf	fsr2l,f,c
  2209  002536  51EE               	movf	(sm_execute_main@psm+1)& (0+255),w,b
  2210  002538  22DA               	addwfc	fsr2h,f,c
  2211  00253A  0E06               	movlw	6
  2212  00253C  18DE               	xorwf	postinc2,w,c
  2213  00253E  10DE               	iorwf	postinc2,w,c
  2214  002540  A4D8               	btfss	status,2,c
  2215  002542  D018               	goto	l22813
  2216  002544  D7BC               	goto	u27820
  2217  002546                     l3048:
  2218                           
  2219                           ; BSR set to: 0
  2220  002546  D7FF               	goto	l3048
  2221  002548                     l22811:
  2222                           
  2223                           ; BSR set to: 0
  2224  002548  C0ED  FFD9         	movff	sm_execute_main@psm,fsr2l
  2225  00254C  C0EE  FFDA         	movff	sm_execute_main@psm+1,fsr2h
  2226  002550  50DF               	movf	indf2,w,c
  2227  002552  6FEF               	movwf	??_sm_execute_main& (0+255),b
  2228  002554  6BF0               	clrf	(??_sm_execute_main+1)& (0+255),b
  2229                           
  2230                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2231                           ; Switch size 1, requested type "simple"
  2232                           ; Number of cases is 1, Range of values is 0 to 0
  2233                           ; switch strategies available:
  2234                           ; Name         Instructions Cycles
  2235                           ; simple_byte            4     3 (average)
  2236                           ;	Chosen strategy is simple_byte
  2237  002556  51F0               	movf	(??_sm_execute_main+1)& (0+255),w,b
  2238  002558  0A00               	xorlw	0	; case 0
  2239  00255A  A4D8               	btfss	status,2,c
  2240  00255C  D7F4               	goto	l3048
  2241                           
  2242                           ; BSR set to: 0
  2243                           ; Switch size 1, requested type "simple"
  2244                           ; Number of cases is 3, Range of values is 0 to 2
  2245                           ; switch strategies available:
  2246                           ; Name         Instructions Cycles
  2247                           ; simple_byte           10     6 (average)
  2248                           ;	Chosen strategy is simple_byte
  2249  00255E  51EF               	movf	??_sm_execute_main& (0+255),w,b
  2250  002560  0A00               	xorlw	0	; case 0
  2251  002562  B4D8               	btfsc	status,2,c
  2252  002564  D79E               	goto	l22787
  2253  002566  0A01               	xorlw	1	; case 1
  2254  002568  B4D8               	btfsc	status,2,c
  2255  00256A  D7C0               	goto	l22797
  2256  00256C  0A03               	xorlw	3	; case 2
  2257  00256E  B4D8               	btfsc	status,2,c
  2258  002570  D7CD               	goto	l22801
  2259  002572  D7E9               	goto	l3048
  2260  002574                     l22813:
  2261                           
  2262                           ; BSR set to: 0
  2263                           ;sm_Main_MC50.c: 77:     sm_send_event(&main_stateMachine, ev_NULL);
  2264  002574  0EED               	movlw	low _main_stateMachine
  2265  002576  6E12               	movwf	sm_send_event@psm^0,c
  2266  002578  0E01               	movlw	high _main_stateMachine
  2267  00257A  6E13               	movwf	(sm_send_event@psm+1)^0,c
  2268  00257C  0E00               	movlw	0
  2269  00257E  6E15               	movwf	(sm_send_event@event+1)^0,c
  2270  002580  0E00               	movlw	0
  2271  002582  6E14               	movwf	sm_send_event@event^0,c
  2272  002584  EC25  F041         	call	_sm_send_event	;wreg free
  2273                           
  2274                           ;sm_Main_MC50.c: 82:     switch((sm_state_Main_t) psm->current_state)
  2275  002588  D1F8               	goto	l23091
  2276  00258A                     l22815:
  2277                           
  2278                           ; BSR set to: 0
  2279                           ;sm_Main_MC50.c: 85:         {;sm_Main_MC50.c: 86:             if (button_struct.current
      +                          ==0 && button_struct.timer>((1000/50)*5))
  2280  00258A  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  2281  00258C  A4D8               	btfss	status,2,c
  2282  00258E  D016               	goto	l22827
  2283                           
  2284                           ; BSR set to: 0
  2285  002590  0E64               	movlw	100
  2286  002592  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2287  002594  D013               	goto	l22827
  2288                           
  2289                           ; BSR set to: 0
  2290                           ;sm_Main_MC50.c: 87:             {;sm_Main_MC50.c: 88:                 load_New_Menu(E_M
      +                          enu);
  2291  002596  0E01               	movlw	1
  2292  002598  EC7D  F01E         	call	_load_New_Menu
  2293  00259C                     l22821:
  2294                           
  2295                           ;sm_Main_MC50.c: 89:                 sm_send_event(&main_stateMachine, ev_goto_MenuConfi
      +                          g);
  2296  00259C  0EED               	movlw	low _main_stateMachine
  2297  00259E  6E12               	movwf	sm_send_event@psm^0,c
  2298  0025A0  0E01               	movlw	high _main_stateMachine
  2299  0025A2  6E13               	movwf	(sm_send_event@psm+1)^0,c
  2300  0025A4  0E00               	movlw	0
  2301  0025A6  6E15               	movwf	(sm_send_event@event+1)^0,c
  2302  0025A8  0E06               	movlw	6
  2303  0025AA  6E14               	movwf	sm_send_event@event^0,c
  2304  0025AC  EC25  F041         	call	_sm_send_event	;wreg free
  2305                           
  2306                           ;sm_Main_MC50.c: 90:                 button_struct.processed=1;
  2307  0025B0  0E01               	movlw	1
  2308  0025B2  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  2309                           
  2310                           ;sm_Main_MC50.c: 91:                 temp=0;
  2311  0025B4  0E00               	movlw	0
  2312  0025B6  0100               	movlb	0	; () banked
  2313  0025B8  6F80               	movwf	_temp& (0+255),b
  2314                           
  2315                           ;sm_Main_MC50.c: 92:             }
  2316  0025BA  0012               	return	
  2317  0025BC                     l22827:
  2318                           
  2319                           ; BSR set to: 0
  2320  0025BC  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  2321  0025BE  A4D8               	btfss	status,2,c
  2322  0025C0  D00B               	goto	l22835
  2323                           
  2324                           ; BSR set to: 0
  2325  0025C2  0E14               	movlw	20
  2326  0025C4  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2327  0025C6  D008               	goto	l22835
  2328                           
  2329                           ; BSR set to: 0
  2330                           ;sm_Main_MC50.c: 94:             {;sm_Main_MC50.c: 97:                 SetSegmentValueMa
      +                          in(dP,d0);
  2331  0025C8  0E00               	movlw	0
  2332  0025CA  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  2333  0025CC  0E10               	movlw	16
  2334  0025CE  ECDD  F047         	call	_SetSegmentValueMain
  2335                           
  2336                           ; BSR set to: 0
  2337                           ;sm_Main_MC50.c: 98:                 temp=1;
  2338  0025D2  0E01               	movlw	1
  2339  0025D4  6F80               	movwf	_temp& (0+255),b
  2340                           
  2341                           ;sm_Main_MC50.c: 99:             }
  2342  0025D6  0012               	return	
  2343  0025D8                     l22835:
  2344                           
  2345                           ; BSR set to: 0
  2346  0025D8  0580               	decf	_temp& (0+255),w,b
  2347  0025DA  A4D8               	btfss	status,2,c
  2348  0025DC  D004               	goto	l22845
  2349                           
  2350                           ; BSR set to: 0
  2351                           ;sm_Main_MC50.c: 101:             {;sm_Main_MC50.c: 102:                 load_New_Menu(P
      +                          _Menu);
  2352  0025DE  0E00               	movlw	0
  2353  0025E0  EC7D  F01E         	call	_load_New_Menu
  2354  0025E4  D7DB               	goto	l22821
  2355  0025E6                     l22845:
  2356                           
  2357                           ; BSR set to: 0
  2358  0025E6  0E27               	movlw	39
  2359  0025E8  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  2360  0025EA  A4D8               	btfss	status,2,c
  2361  0025EC  D007               	goto	l22857
  2362                           
  2363                           ; BSR set to: 0
  2364  0025EE  0E78               	movlw	120
  2365  0025F0  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2366  0025F2  D004               	goto	l22857
  2367                           
  2368                           ; BSR set to: 0
  2369                           ;sm_Main_MC50.c: 108:             {;sm_Main_MC50.c: 110:                 load_New_Menu(D
      +                          el_Menu);
  2370  0025F4  0E0D               	movlw	13
  2371  0025F6  EC7D  F01E         	call	_load_New_Menu
  2372  0025FA  D7D0               	goto	l22821
  2373  0025FC                     l22857:
  2374                           
  2375                           ; BSR set to: 0
  2376  0025FC  0E27               	movlw	39
  2377  0025FE  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  2378  002600  A4D8               	btfss	status,2,c
  2379  002602  D00B               	goto	l22865
  2380                           
  2381                           ; BSR set to: 0
  2382  002604  0E14               	movlw	20
  2383  002606  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2384  002608  D008               	goto	l22865
  2385                           
  2386                           ; BSR set to: 0
  2387                           ;sm_Main_MC50.c: 116:             {;sm_Main_MC50.c: 118:                 SetSegmentValue
      +                          Main(d5,dU);
  2388  00260A  0E13               	movlw	19
  2389  00260C  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  2390  00260E  0E05               	movlw	5
  2391  002610  ECDD  F047         	call	_SetSegmentValueMain
  2392                           
  2393                           ; BSR set to: 0
  2394                           ;sm_Main_MC50.c: 119:                 temp=2;
  2395  002614  0E02               	movlw	2
  2396  002616  6F80               	movwf	_temp& (0+255),b
  2397                           
  2398                           ;sm_Main_MC50.c: 120:             }
  2399  002618  0012               	return	
  2400  00261A                     l22865:
  2401                           
  2402                           ; BSR set to: 0
  2403  00261A  0E02               	movlw	2
  2404  00261C  1980               	xorwf	_temp& (0+255),w,b
  2405  00261E  A4D8               	btfss	status,2,c
  2406  002620  D004               	goto	l22875
  2407                           
  2408                           ; BSR set to: 0
  2409                           ;sm_Main_MC50.c: 122:             {;sm_Main_MC50.c: 123:                 load_New_Menu(S
      +                          _Menu);
  2410  002622  0E0C               	movlw	12
  2411  002624  EC7D  F01E         	call	_load_New_Menu
  2412  002628  D7B9               	goto	l22821
  2413  00262A                     l22875:
  2414                           
  2415                           ; BSR set to: 0
  2416  00262A  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  2417  00262C  A4D8               	btfss	status,2,c
  2418  00262E  D009               	goto	l22881
  2419                           
  2420                           ; BSR set to: 0
  2421  002630  0101               	movlb	1	; () banked
  2422  002632  5103               	movf	(_var_sys+3)& (0+255),w,b	;volatile
  2423  002634  A4D8               	btfss	status,2,c
  2424  002636  D005               	goto	l22881
  2425                           
  2426                           ; BSR set to: 1
  2427                           ;sm_Main_MC50.c: 129:             {;sm_Main_MC50.c: 130:                 var_sys.StartFr
      +                          omButton=YES;
  2428  002638  0E01               	movlw	1
  2429  00263A  6F09               	movwf	(_var_sys+9)& (0+255),b	;volatile
  2430                           
  2431                           ;sm_Main_MC50.c: 131:                 var_sys.StateMotor=InClose;
  2432  00263C  0E03               	movlw	3
  2433  00263E  6F00               	movwf	_var_sys& (0+255),b	;volatile
  2434                           
  2435                           ;sm_Main_MC50.c: 132:             }
  2436  002640  0012               	return	
  2437  002642                     l22881:
  2438  002642  0E17               	movlw	23
  2439  002644  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  2440  002646  A4D8               	btfss	status,2,c
  2441  002648  D009               	goto	l22887
  2442  00264A  0101               	movlb	1	; () banked
  2443  00264C  5104               	movf	(_var_sys+4)& (0+255),w,b	;volatile
  2444  00264E  A4D8               	btfss	status,2,c
  2445  002650  D005               	goto	l22887
  2446                           
  2447                           ; BSR set to: 1
  2448                           ;sm_Main_MC50.c: 134:             {;sm_Main_MC50.c: 135:                 var_sys.StartFr
      +                          omButton=YES;
  2449  002652  0E01               	movlw	1
  2450  002654  6F09               	movwf	(_var_sys+9)& (0+255),b	;volatile
  2451                           
  2452                           ;sm_Main_MC50.c: 136:                 var_sys.StateMotor=InOpenFull;
  2453  002656  0E01               	movlw	1
  2454  002658  6F00               	movwf	_var_sys& (0+255),b	;volatile
  2455                           
  2456                           ;sm_Main_MC50.c: 137:             }
  2457  00265A  0012               	return	
  2458  00265C                     l22887:
  2459  00265C  0101               	movlb	1	; () banked
  2460  00265E  0509               	decf	(_var_sys+9)& (0+255),w,b	;volatile
  2461  002660  A4D8               	btfss	status,2,c
  2462  002662  D005               	goto	l22891
  2463                           
  2464                           ; BSR set to: 1
  2465                           ;sm_Main_MC50.c: 139:             {;sm_Main_MC50.c: 140:                 var_sys.StartFr
      +                          omButton=NO;
  2466  002664  0E00               	movlw	0
  2467  002666  6F09               	movwf	(_var_sys+9)& (0+255),b	;volatile
  2468                           
  2469                           ;sm_Main_MC50.c: 141:                 var_sys.StateMotor = Stopped;
  2470  002668  0E00               	movlw	0
  2471  00266A  6F00               	movwf	_var_sys& (0+255),b	;volatile
  2472                           
  2473                           ;sm_Main_MC50.c: 142:             }
  2474  00266C  0012               	return	
  2475  00266E                     l22891:
  2476                           
  2477                           ; BSR set to: 1
  2478  00266E  0E06               	movlw	6
  2479  002670  183B               	xorwf	_rfCMD^0,w,c	;volatile
  2480  002672  B4D8               	btfsc	status,2,c
  2481  002674  D004               	goto	u28030
  2482                           
  2483                           ; BSR set to: 1
  2484  002676  0E05               	movlw	5
  2485  002678  183B               	xorwf	_rfCMD^0,w,c	;volatile
  2486  00267A  A4D8               	btfss	status,2,c
  2487  00267C  D015               	goto	l22905
  2488  00267E                     u28030:
  2489                           
  2490                           ; BSR set to: 1
  2491  00267E  0E63               	movlw	99
  2492  002680  6444               	cpfsgt	(_rfCMD+9)^0,c	;volatile
  2493  002682  D012               	goto	l22905
  2494                           
  2495                           ; BSR set to: 1
  2496                           ;sm_Main_MC50.c: 144:             {;sm_Main_MC50.c: 145:                 load_New_Menu(S
      +                          _Menu);
  2497  002684  0E0C               	movlw	12
  2498  002686  EC7D  F01E         	call	_load_New_Menu
  2499                           
  2500                           ;sm_Main_MC50.c: 146:                 sm_send_event(&main_stateMachine, ev_goto_MenuConf
      +                          ig);
  2501  00268A  0EED               	movlw	low _main_stateMachine
  2502  00268C  6E12               	movwf	sm_send_event@psm^0,c
  2503  00268E  0E01               	movlw	high _main_stateMachine
  2504  002690  6E13               	movwf	(sm_send_event@psm+1)^0,c
  2505  002692  0E00               	movlw	0
  2506  002694  6E15               	movwf	(sm_send_event@event+1)^0,c
  2507  002696  0E06               	movlw	6
  2508  002698  6E14               	movwf	sm_send_event@event^0,c
  2509  00269A  EC25  F041         	call	_sm_send_event	;wreg free
  2510                           
  2511                           ;sm_Main_MC50.c: 147:                 var_sys.ProgrammingDistanceIs=rfCMD.currentType;
  2512  00269E  C03B  F13B         	movff	_rfCMD,_var_sys+59	;volatile
  2513                           
  2514                           ;sm_Main_MC50.c: 148:                 rfCMD.processed=1;
  2515  0026A2  0E01               	movlw	1
  2516  0026A4  6E45               	movwf	(_rfCMD+10)^0,c	;volatile
  2517                           
  2518                           ;sm_Main_MC50.c: 149:             }
  2519  0026A6  0012               	return	
  2520  0026A8                     l22905:
  2521                           
  2522                           ; BSR set to: 1
  2523  0026A8  BFA7               	btfsc	(_ts_system+13)& (0+255),7,b	;volatile
  2524  0026AA  D005               	goto	u28050
  2525  0026AC  51A7               	movf	(_ts_system+13)& (0+255),w,b	;volatile
  2526  0026AE  E111               	bnz	l3060
  2527  0026B0  05A6               	decf	(_ts_system+12)& (0+255),w,b	;volatile
  2528  0026B2  B0D8               	btfsc	status,0,c
  2529  0026B4  0012               	return	
  2530  0026B6                     u28050:
  2531                           
  2532                           ; BSR set to: 1
  2533                           ;sm_Main_MC50.c: 151:             {;sm_Main_MC50.c: 152:                 if(var_sys.FimC
      +                          urso_CloseIsEnabled == YES)
  2534  0026B6  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
  2535  0026B8  A4D8               	btfss	status,2,c
  2536  0026BA  D006               	goto	l22911
  2537                           
  2538                           ; BSR set to: 1
  2539                           ;sm_Main_MC50.c: 154:                     {;sm_Main_MC50.c: 156:                        
      +                           SetSegmentValueMain(dF,dC);
  2540  0026BC  0E0C               	movlw	12
  2541  0026BE  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  2542  0026C0  0E0F               	movlw	15
  2543  0026C2  ECDD  F047         	call	_SetSegmentValueMain
  2544                           
  2545                           ;sm_Main_MC50.c: 157:                     }
  2546  0026C6  0012               	return	
  2547  0026C8                     l22911:
  2548                           
  2549                           ; BSR set to: 1
  2550                           ;sm_Main_MC50.c: 160:                 SetSegmentValueMain(dMinus,dMinus);
  2551  0026C8  0E18               	movlw	24
  2552  0026CA  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  2553  0026CC  0E18               	movlw	24
  2554  0026CE  ECDD  F047         	call	_SetSegmentValueMain
  2555  0026D2                     l3060:
  2556                           
  2557                           ; BSR set to: 1
  2558  0026D2  0012               	return	
  2559  0026D4                     l22913:
  2560                           
  2561                           ; BSR set to: 0
  2562                           ;sm_Main_MC50.c: 167:         {;sm_Main_MC50.c: 168:             sm_execute_menuConfigur
      +                          ation(&menuConfiguration_stateMachine);
  2563  0026D4  0EBD               	movlw	low _menuConfiguration_stateMachine
  2564  0026D6  6FE9               	movwf	sm_execute_menuConfiguration@psm& (0+255),b
  2565  0026D8  0E02               	movlw	high _menuConfiguration_stateMachine
  2566  0026DA  6FEA               	movwf	(sm_execute_menuConfiguration@psm+1)& (0+255),b
  2567  0026DC  EC91  F007         	call	_sm_execute_menuConfiguration	;wreg free
  2568                           
  2569                           ;sm_Main_MC50.c: 169:         };sm_Main_MC50.c: 170:         break;
  2570  0026E0  0012               	return	
  2571  0026E2                     l22915:
  2572                           
  2573                           ; BSR set to: 0
  2574                           ;sm_Main_MC50.c: 172:         {;sm_Main_MC50.c: 175:             aux_in_auto_close = NO;
  2575  0026E2  0E00               	movlw	0
  2576  0026E4  0101               	movlb	1	; () banked
  2577  0026E6  6F8B               	movwf	_aux_in_auto_close& (0+255),b
  2578                           
  2579                           ; BSR set to: 1
  2580                           ;sm_Main_MC50.c: 176:             if ( controlGate_stateMachine.current_state == st_Open
      +                          ed )
  2581  0026E8  0E04               	movlw	4
  2582  0026EA  19E2               	xorwf	_controlGate_stateMachine& (0+255),w,b
  2583  0026EC  11E3               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
  2584  0026EE  A4D8               	btfss	status,2,c
  2585  0026F0  D013               	goto	l3083
  2586                           
  2587                           ; BSR set to: 1
  2588                           ;sm_Main_MC50.c: 177:             {;sm_Main_MC50.c: 179:                 if ( var_sys_NV
      +                          M.operationMode == ModoPassoPasso && var_sys.passoAPassoAutoClose == YES )
  2589  0026F2  0100               	movlb	0	; () banked
  2590  0026F4  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
  2591  0026F6  A4D8               	btfss	status,2,c
  2592  0026F8  D007               	goto	l22925
  2593                           
  2594                           ; BSR set to: 0
  2595  0026FA  0101               	movlb	1	; () banked
  2596  0026FC  0550               	decf	(_var_sys+80)& (0+255),w,b	;volatile
  2597  0026FE  A4D8               	btfss	status,2,c
  2598  002700  D003               	goto	l22925
  2599  002702                     u28090:
  2600                           
  2601                           ; BSR set to: 1
  2602                           ;sm_Main_MC50.c: 180:                 {;sm_Main_MC50.c: 181:                     aux_in_
      +                          auto_close = YES;
  2603  002702  0E01               	movlw	1
  2604  002704  6F8B               	movwf	_aux_in_auto_close& (0+255),b
  2605                           
  2606                           ;sm_Main_MC50.c: 182:                 }
  2607  002706  D008               	goto	l3083
  2608  002708                     l22925:
  2609  002708  0100               	movlb	0	; () banked
  2610  00270A  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
  2611  00270C  B4D8               	btfsc	status,2,c
  2612  00270E  D004               	goto	l3083
  2613                           
  2614                           ; BSR set to: 0
  2615  002710  0101               	movlb	1	; () banked
  2616  002712  5123               	movf	(_var_sys+35)& (0+255),w,b	;volatile
  2617  002714  A4D8               	btfss	status,2,c
  2618  002716  D7F5               	goto	u28090
  2619  002718                     l3083:
  2620                           
  2621                           ;sm_Main_MC50.c: 193:             if(var_sys.StateMotor==Stopped && ( (controlGate_state
      +                          Machine.current_state==st_Opened && aux_in_auto_close==NO) || controlGate_stateMachine.c
      +                          urrent_state==st_Closed || controlGate_stateMachine.current_state==st_Idle ) )
  2622  002718  0101               	movlb	1	; () banked
  2623  00271A  5100               	movf	_var_sys& (0+255),w,b	;volatile
  2624  00271C  A4D8               	btfss	status,2,c
  2625  00271E  D069               	goto	l3097
  2626                           
  2627                           ; BSR set to: 1
  2628  002720  0E04               	movlw	4
  2629  002722  19E2               	xorwf	_controlGate_stateMachine& (0+255),w,b
  2630  002724  11E3               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
  2631  002726  A4D8               	btfss	status,2,c
  2632  002728  D003               	goto	u28140
  2633                           
  2634                           ; BSR set to: 1
  2635  00272A  518B               	movf	_aux_in_auto_close& (0+255),w,b
  2636  00272C  B4D8               	btfsc	status,2,c
  2637  00272E  D008               	goto	u28160
  2638  002730                     u28140:
  2639                           
  2640                           ; BSR set to: 1
  2641  002730  05E2               	decf	_controlGate_stateMachine& (0+255),w,b
  2642  002732  11E3               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
  2643  002734  B4D8               	btfsc	status,2,c
  2644  002736  D004               	goto	u28160
  2645                           
  2646                           ; BSR set to: 1
  2647  002738  51E2               	movf	_controlGate_stateMachine& (0+255),w,b
  2648  00273A  11E3               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
  2649  00273C  A4D8               	btfss	status,2,c
  2650  00273E  D059               	goto	l3097
  2651  002740                     u28160:
  2652                           
  2653                           ; BSR set to: 1
  2654                           ;sm_Main_MC50.c: 194:             {;sm_Main_MC50.c: 195:                 if (button_stru
      +                          ct.current==0 && button_struct.timer>((1000/50)*5))
  2655  002740  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  2656  002742  A4D8               	btfss	status,2,c
  2657  002744  D015               	goto	l22953
  2658                           
  2659                           ; BSR set to: 1
  2660  002746  0E64               	movlw	100
  2661  002748  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2662  00274A  D012               	goto	l22953
  2663                           
  2664                           ; BSR set to: 1
  2665                           ;sm_Main_MC50.c: 196:                 {;sm_Main_MC50.c: 197:                     load_Ne
      +                          w_Menu(E_Menu);
  2666  00274C  0E01               	movlw	1
  2667  00274E  EC7D  F01E         	call	_load_New_Menu
  2668  002752                     l22947:
  2669                           
  2670                           ;sm_Main_MC50.c: 198:                     sm_send_event(&main_stateMachine, ev_goto_Menu
      +                          Config);
  2671  002752  0EED               	movlw	low _main_stateMachine
  2672  002754  6E12               	movwf	sm_send_event@psm^0,c
  2673  002756  0E01               	movlw	high _main_stateMachine
  2674  002758  6E13               	movwf	(sm_send_event@psm+1)^0,c
  2675  00275A  0E00               	movlw	0
  2676  00275C  6E15               	movwf	(sm_send_event@event+1)^0,c
  2677  00275E  0E06               	movlw	6
  2678  002760  6E14               	movwf	sm_send_event@event^0,c
  2679  002762  EC25  F041         	call	_sm_send_event	;wreg free
  2680                           
  2681                           ;sm_Main_MC50.c: 199:                     button_struct.processed=1;
  2682  002766  0E01               	movlw	1
  2683  002768  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  2684                           
  2685                           ;sm_Main_MC50.c: 200:                     temp=0;
  2686  00276A  0E00               	movlw	0
  2687  00276C  0100               	movlb	0	; () banked
  2688  00276E  D037               	goto	L4
  2689  002770                     l22953:
  2690                           
  2691                           ; BSR set to: 1
  2692  002770  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  2693  002772  A4D8               	btfss	status,2,c
  2694  002774  D00A               	goto	l22961
  2695                           
  2696                           ; BSR set to: 1
  2697  002776  0E14               	movlw	20
  2698  002778  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2699  00277A  D007               	goto	l22961
  2700                           
  2701                           ; BSR set to: 1
  2702                           ;sm_Main_MC50.c: 203:                 {;sm_Main_MC50.c: 205:                     SetSegm
      +                          entValueMain(dP,d0);
  2703  00277C  0E00               	movlw	0
  2704  00277E  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  2705  002780  0E10               	movlw	16
  2706  002782  ECDD  F047         	call	_SetSegmentValueMain
  2707                           
  2708                           ; BSR set to: 0
  2709                           ;sm_Main_MC50.c: 206:                     temp=1;
  2710  002786  0E01               	movlw	1
  2711  002788  D02A               	goto	L4
  2712  00278A                     l22961:
  2713                           
  2714                           ; BSR set to: 1
  2715  00278A  0100               	movlb	0	; () banked
  2716  00278C  0580               	decf	_temp& (0+255),w,b
  2717  00278E  A4D8               	btfss	status,2,c
  2718  002790  D00E               	goto	l22975
  2719                           
  2720                           ; BSR set to: 0
  2721                           ;sm_Main_MC50.c: 209:                 {;sm_Main_MC50.c: 210:                     load_Ne
      +                          w_Menu(P_Menu);
  2722  002792  0E00               	movlw	0
  2723  002794  EC7D  F01E         	call	_load_New_Menu
  2724                           
  2725                           ;sm_Main_MC50.c: 212:                     button_struct.processed=1;
  2726  002798  0E01               	movlw	1
  2727  00279A  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  2728                           
  2729                           ;sm_Main_MC50.c: 213:                     temp=0;
  2730  00279C  0E00               	movlw	0
  2731  00279E  0100               	movlb	0	; () banked
  2732  0027A0  6F80               	movwf	_temp& (0+255),b
  2733                           
  2734                           ; BSR set to: 0
  2735                           ;sm_Main_MC50.c: 214:                     main_stateMachine.current_state = st_MenuConfi
      +                          guration;
  2736  0027A2  0E00               	movlw	0
  2737  0027A4  0101               	movlb	1	; () banked
  2738  0027A6  6FEE               	movwf	(_main_stateMachine+1)& (0+255),b
  2739  0027A8  0E01               	movlw	1
  2740  0027AA  6FED               	movwf	_main_stateMachine& (0+255),b
  2741  0027AC  0012               	return	
  2742  0027AE                     l22975:
  2743                           
  2744                           ; BSR set to: 0
  2745  0027AE  0E27               	movlw	39
  2746  0027B0  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  2747  0027B2  A4D8               	btfss	status,2,c
  2748  0027B4  D007               	goto	l22987
  2749                           
  2750                           ; BSR set to: 0
  2751  0027B6  0E78               	movlw	120
  2752  0027B8  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2753  0027BA  D004               	goto	l22987
  2754                           
  2755                           ; BSR set to: 0
  2756                           ;sm_Main_MC50.c: 218:             {;sm_Main_MC50.c: 220:                 load_New_Menu(D
      +                          el_Menu);
  2757  0027BC  0E0D               	movlw	13
  2758  0027BE  EC7D  F01E         	call	_load_New_Menu
  2759  0027C2  D7C7               	goto	l22947
  2760  0027C4                     l22987:
  2761                           
  2762                           ; BSR set to: 0
  2763  0027C4  0E27               	movlw	39
  2764  0027C6  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  2765  0027C8  A4D8               	btfss	status,2,c
  2766  0027CA  D00B               	goto	l22995
  2767                           
  2768                           ; BSR set to: 0
  2769  0027CC  0E14               	movlw	20
  2770  0027CE  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2771  0027D0  D008               	goto	l22995
  2772                           
  2773                           ; BSR set to: 0
  2774                           ;sm_Main_MC50.c: 226:             {;sm_Main_MC50.c: 228:                 SetSegmentValue
      +                          Main(d5,dU);
  2775  0027D2  0E13               	movlw	19
  2776  0027D4  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  2777  0027D6  0E05               	movlw	5
  2778  0027D8  ECDD  F047         	call	_SetSegmentValueMain
  2779                           
  2780                           ; BSR set to: 0
  2781                           ;sm_Main_MC50.c: 229:                 temp=2;
  2782  0027DC  0E02               	movlw	2
  2783  0027DE                     L4:
  2784  0027DE  6F80               	movwf	_temp& (0+255),b
  2785                           
  2786                           ;sm_Main_MC50.c: 230:             }
  2787  0027E0  D008               	goto	l3097
  2788  0027E2                     l22995:
  2789                           
  2790                           ; BSR set to: 0
  2791  0027E2  0E02               	movlw	2
  2792  0027E4  1980               	xorwf	_temp& (0+255),w,b
  2793  0027E6  A4D8               	btfss	status,2,c
  2794  0027E8  D004               	goto	l3097
  2795                           
  2796                           ; BSR set to: 0
  2797                           ;sm_Main_MC50.c: 232:             {;sm_Main_MC50.c: 233:                 load_New_Menu(S
      +                          _Menu);
  2798  0027EA  0E0C               	movlw	12
  2799  0027EC  EC7D  F01E         	call	_load_New_Menu
  2800  0027F0  D6D5               	goto	l22821
  2801  0027F2                     l3097:
  2802                           
  2803                           ;sm_Main_MC50.c: 243:             if( ts_system.timeSinalizationDigit<=0 && (button_stru
      +                          ct.current!=0 && button_struct.current!=0x27) )
  2804                           
  2805                           ; BSR set to: 0
  2806  0027F2  0101               	movlb	1	; () banked
  2807  0027F4  BFA7               	btfsc	(_ts_system+13)& (0+255),7,b	;volatile
  2808  0027F6  D005               	goto	u28270
  2809  0027F8  51A7               	movf	(_ts_system+13)& (0+255),w,b	;volatile
  2810  0027FA  E102               	bnz	u28271
  2811  0027FC  05A6               	decf	(_ts_system+12)& (0+255),w,b	;volatile
  2812  0027FE  B0D8               	btfsc	status,0,c
  2813  002800                     u28271:
  2814  002800  0012               	return	
  2815  002802                     u28270:
  2816                           
  2817                           ; BSR set to: 1
  2818  002802  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  2819  002804  B4D8               	btfsc	status,2,c
  2820  002806  0012               	return	
  2821                           
  2822                           ; BSR set to: 1
  2823  002808  0E27               	movlw	39
  2824  00280A  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  2825  00280C  B4D8               	btfsc	status,2,c
  2826  00280E  0012               	return	
  2827                           
  2828                           ; BSR set to: 1
  2829                           ;sm_Main_MC50.c: 244:             {;sm_Main_MC50.c: 245:                 if(var_sys.Stat
      +                          eMotor==InClose )
  2830  002810  0E03               	movlw	3
  2831  002812  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
  2832  002814  A4D8               	btfss	status,2,c
  2833  002816  D011               	goto	l23021
  2834                           
  2835                           ; BSR set to: 1
  2836                           ;sm_Main_MC50.c: 246:                 {;sm_Main_MC50.c: 248:                    SetSegme
      +                          ntValueIntermitentMain(dC,dL,( 500/50));
  2837  002818  0E12               	movlw	18
  2838  00281A  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  2839  00281C  0E00               	movlw	0
  2840  00281E  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  2841  002820  0E0A               	movlw	10
  2842  002822  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  2843  002824  0E0C               	movlw	12
  2844  002826  EC79  F048         	call	_SetSegmentValueIntermitentMain
  2845  00282A                     l23017:
  2846                           
  2847                           ;sm_Main_MC50.c: 249:                    ts_system.timeSinalizationDigit=( 200/50);
  2848  00282A  0E00               	movlw	0
  2849  00282C  0101               	movlb	1	; () banked
  2850  00282E  6FA7               	movwf	(_ts_system+13)& (0+255),b	;volatile
  2851  002830  0E04               	movlw	4
  2852  002832  6FA6               	movwf	(_ts_system+12)& (0+255),b	;volatile
  2853                           
  2854                           ; BSR set to: 1
  2855                           ;sm_Main_MC50.c: 251:                     var_sys.showAP = NO;
  2856  002834  0E00               	movlw	0
  2857  002836  6F4F               	movwf	(_var_sys+79)& (0+255),b	;volatile
  2858                           
  2859                           ;sm_Main_MC50.c: 252:                 }
  2860  002838  0012               	return	
  2861  00283A                     l23021:
  2862                           
  2863                           ; BSR set to: 1
  2864  00283A  0E02               	movlw	2
  2865  00283C  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
  2866  00283E  B4D8               	btfsc	status,2,c
  2867  002840  D003               	goto	u28320
  2868                           
  2869                           ; BSR set to: 1
  2870  002842  0500               	decf	_var_sys& (0+255),w,b	;volatile
  2871  002844  A4D8               	btfss	status,2,c
  2872  002846  D00A               	goto	l23031
  2873  002848                     u28320:
  2874                           
  2875                           ; BSR set to: 1
  2876                           ;sm_Main_MC50.c: 254:                 {;sm_Main_MC50.c: 256:                     SetSegm
      +                          entValueIntermitentMain(d0,dP,( 500/50));
  2877  002848  0E10               	movlw	16
  2878  00284A  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  2879  00284C  0E00               	movlw	0
  2880  00284E  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  2881  002850  0E0A               	movlw	10
  2882  002852  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  2883  002854  0E00               	movlw	0
  2884  002856  EC79  F048         	call	_SetSegmentValueIntermitentMain
  2885  00285A  D7E7               	goto	l23017
  2886  00285C                     l23031:
  2887                           
  2888                           ; BSR set to: 1
  2889  00285C  5100               	movf	_var_sys& (0+255),w,b	;volatile
  2890  00285E  A4D8               	btfss	status,2,c
  2891  002860  D00F               	goto	l23037
  2892                           
  2893                           ; BSR set to: 1
  2894  002862  05E2               	decf	_controlGate_stateMachine& (0+255),w,b
  2895  002864  11E3               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
  2896  002866  A4D8               	btfss	status,2,c
  2897  002868  D00B               	goto	l23037
  2898                           
  2899                           ; BSR set to: 1
  2900                           ;sm_Main_MC50.c: 262:                 {;sm_Main_MC50.c: 263:                     sm_send
      +                          _event(&main_stateMachine, ev_goto_StandBy);
  2901  00286A  0EED               	movlw	low _main_stateMachine
  2902  00286C  6E12               	movwf	sm_send_event@psm^0,c
  2903  00286E  0E01               	movlw	high _main_stateMachine
  2904  002870  6E13               	movwf	(sm_send_event@psm+1)^0,c
  2905  002872  0E00               	movlw	0
  2906  002874  6E15               	movwf	(sm_send_event@event+1)^0,c
  2907  002876  0E07               	movlw	7
  2908  002878  6E14               	movwf	sm_send_event@event^0,c
  2909  00287A  EC25  F041         	call	_sm_send_event	;wreg free
  2910                           
  2911                           ;sm_Main_MC50.c: 264:                 }
  2912  00287E  0012               	return	
  2913  002880                     l23037:
  2914                           
  2915                           ; BSR set to: 1
  2916  002880  5100               	movf	_var_sys& (0+255),w,b	;volatile
  2917  002882  A4D8               	btfss	status,2,c
  2918  002884  D074               	goto	l23087
  2919                           
  2920                           ; BSR set to: 1
  2921  002886  0E04               	movlw	4
  2922  002888  19E2               	xorwf	_controlGate_stateMachine& (0+255),w,b
  2923  00288A  11E3               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
  2924  00288C  A4D8               	btfss	status,2,c
  2925  00288E  D06F               	goto	l23087
  2926                           
  2927                           ; BSR set to: 1
  2928                           ;sm_Main_MC50.c: 266:                 {;sm_Main_MC50.c: 268:                     if
  2929  002890  0100               	movlb	0	; () banked
  2930  002892  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
  2931  002894  B4D8               	btfsc	status,2,c
  2932  002896  D00B               	goto	u28400
  2933                           
  2934                           ; BSR set to: 0
  2935  002898  0101               	movlb	1	; () banked
  2936  00289A  5123               	movf	(_var_sys+35)& (0+255),w,b	;volatile
  2937  00289C  B4D8               	btfsc	status,2,c
  2938  00289E  D007               	goto	u28400
  2939                           
  2940                           ; BSR set to: 1
  2941  0028A0  050B               	decf	(_var_sys+11)& (0+255),w,b	;volatile
  2942  0028A2  B4D8               	btfsc	status,2,c
  2943  0028A4  D013               	goto	u28440
  2944                           
  2945                           ; BSR set to: 1
  2946  0028A6  0E03               	movlw	3
  2947  0028A8  190B               	xorwf	(_var_sys+11)& (0+255),w,b	;volatile
  2948  0028AA  B4D8               	btfsc	status,2,c
  2949  0028AC  D00F               	goto	u28440
  2950  0028AE                     u28400:
  2951  0028AE  0100               	movlb	0	; () banked
  2952  0028B0  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
  2953  0028B2  A4D8               	btfss	status,2,c
  2954  0028B4  D026               	goto	l23065
  2955                           
  2956                           ; BSR set to: 0
  2957  0028B6  0101               	movlb	1	; () banked
  2958  0028B8  0550               	decf	(_var_sys+80)& (0+255),w,b	;volatile
  2959  0028BA  A4D8               	btfss	status,2,c
  2960  0028BC  D022               	goto	l23065
  2961                           
  2962                           ; BSR set to: 1
  2963  0028BE  0E02               	movlw	2
  2964  0028C0  190B               	xorwf	(_var_sys+11)& (0+255),w,b	;volatile
  2965  0028C2  B4D8               	btfsc	status,2,c
  2966  0028C4  D01E               	goto	l23065
  2967                           
  2968                           ; BSR set to: 1
  2969  0028C6  5123               	movf	(_var_sys+35)& (0+255),w,b	;volatile
  2970  0028C8  B4D8               	btfsc	status,2,c
  2971  0028CA  D01B               	goto	l23065
  2972  0028CC                     u28440:
  2973                           
  2974                           ; BSR set to: 1
  2975                           ;sm_Main_MC50.c: 273:                     {;sm_Main_MC50.c: 274:                        
      +                           ts_system.timeSinalizationDigit=( 500/50);
  2976  0028CC  0E00               	movlw	0
  2977  0028CE  6FA7               	movwf	(_ts_system+13)& (0+255),b	;volatile
  2978  0028D0  0E0A               	movlw	10
  2979  0028D2  6FA6               	movwf	(_ts_system+12)& (0+255),b	;volatile
  2980                           
  2981                           ; BSR set to: 1
  2982                           ;sm_Main_MC50.c: 279:                         if ( var_sys.showAP == YES )
  2983  0028D4  054F               	decf	(_var_sys+79)& (0+255),w,b	;volatile
  2984  0028D6  A4D8               	btfss	status,2,c
  2985  0028D8  D00A               	goto	l23063
  2986                           
  2987                           ; BSR set to: 1
  2988                           ;sm_Main_MC50.c: 280:                         {;sm_Main_MC50.c: 281:                    
      +                                   SetSegmentValueIntermitentMain(dA,dP,( 500/50));
  2989  0028DA  0E10               	movlw	16
  2990  0028DC  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  2991  0028DE  0E00               	movlw	0
  2992  0028E0  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  2993  0028E2  0E0A               	movlw	10
  2994  0028E4  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  2995  0028E6  0E0A               	movlw	10
  2996  0028E8  EC79  F048         	call	_SetSegmentValueIntermitentMain
  2997                           
  2998                           ;sm_Main_MC50.c: 282:                         }
  2999  0028EC  0012               	return	
  3000  0028EE                     l23063:
  3001                           
  3002                           ; BSR set to: 1
  3003                           ;sm_Main_MC50.c: 284:                         {;sm_Main_MC50.c: 285:                    
      +                                   SetSegmentValueIntermitentMain(dA,dF,( 500/50));
  3004  0028EE  0E0F               	movlw	15
  3005  0028F0  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  3006  0028F2  0E00               	movlw	0
  3007  0028F4  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  3008  0028F6  0E0A               	movlw	10
  3009  0028F8  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  3010  0028FA  0E0A               	movlw	10
  3011  0028FC  EC79  F048         	call	_SetSegmentValueIntermitentMain
  3012  002900  0012               	return	
  3013  002902                     l23065:
  3014  002902  0100               	movlb	0	; () banked
  3015  002904  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
  3016  002906  B4D8               	btfsc	status,2,c
  3017  002908  D008               	goto	u28480
  3018                           
  3019                           ; BSR set to: 0
  3020  00290A  0101               	movlb	1	; () banked
  3021  00290C  5123               	movf	(_var_sys+35)& (0+255),w,b	;volatile
  3022  00290E  B4D8               	btfsc	status,2,c
  3023  002910  D004               	goto	u28480
  3024                           
  3025                           ; BSR set to: 1
  3026  002912  0E02               	movlw	2
  3027  002914  190B               	xorwf	(_var_sys+11)& (0+255),w,b	;volatile
  3028  002916  B4D8               	btfsc	status,2,c
  3029  002918  D00C               	goto	u28510
  3030  00291A                     u28480:
  3031  00291A  0100               	movlb	0	; () banked
  3032  00291C  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
  3033  00291E  A4D8               	btfss	status,2,c
  3034  002920  D016               	goto	l23081
  3035                           
  3036                           ; BSR set to: 0
  3037  002922  0101               	movlb	1	; () banked
  3038  002924  0550               	decf	(_var_sys+80)& (0+255),w,b	;volatile
  3039  002926  A4D8               	btfss	status,2,c
  3040  002928  D012               	goto	l23081
  3041                           
  3042                           ; BSR set to: 1
  3043  00292A  0E02               	movlw	2
  3044  00292C  190B               	xorwf	(_var_sys+11)& (0+255),w,b	;volatile
  3045  00292E  A4D8               	btfss	status,2,c
  3046  002930  D00E               	goto	l23081
  3047  002932                     u28510:
  3048                           
  3049                           ; BSR set to: 1
  3050                           ;sm_Main_MC50.c: 294:                     {;sm_Main_MC50.c: 295:                        
      +                           ts_system.timeSinalizationDigit=( 500/50);
  3051  002932  0E00               	movlw	0
  3052  002934  6FA7               	movwf	(_ts_system+13)& (0+255),b	;volatile
  3053  002936  0E0A               	movlw	10
  3054  002938  6FA6               	movwf	(_ts_system+12)& (0+255),b	;volatile
  3055                           
  3056                           ; BSR set to: 1
  3057                           ;sm_Main_MC50.c: 297:                         SetSegmentValueIntermitentMain(dA,dP,( 500
      +                          /50));
  3058  00293A  0E10               	movlw	16
  3059  00293C  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  3060  00293E  0E00               	movlw	0
  3061  002940  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  3062  002942  0E0A               	movlw	10
  3063  002944  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  3064  002946  0E0A               	movlw	10
  3065  002948  EC79  F048         	call	_SetSegmentValueIntermitentMain
  3066                           
  3067                           ;sm_Main_MC50.c: 298:                     }
  3068  00294C  0012               	return	
  3069  00294E                     l23081:
  3070  00294E  0101               	movlb	1	; () banked
  3071  002950  0504               	decf	(_var_sys+4)& (0+255),w,b	;volatile
  3072  002952  A4D8               	btfss	status,2,c
  3073  002954  D006               	goto	l23085
  3074                           
  3075                           ; BSR set to: 1
  3076                           ;sm_Main_MC50.c: 301:                     {;sm_Main_MC50.c: 303:                        
      +                           SetSegmentValueMain(dF,d0);
  3077  002956  0E00               	movlw	0
  3078  002958  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3079  00295A  0E0F               	movlw	15
  3080  00295C  ECDD  F047         	call	_SetSegmentValueMain
  3081                           
  3082                           ;sm_Main_MC50.c: 304:                     }
  3083  002960  0012               	return	
  3084  002962                     l23085:
  3085                           
  3086                           ; BSR set to: 1
  3087                           ;sm_Main_MC50.c: 306:                     {;sm_Main_MC50.c: 307:                       S
      +                          etSegmentValueMain(dMinus,dMinus);
  3088  002962  0E18               	movlw	24
  3089  002964  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3090  002966  0E18               	movlw	24
  3091  002968  ECDD  F047         	call	_SetSegmentValueMain
  3092  00296C  0012               	return	
  3093  00296E                     l23087:
  3094                           
  3095                           ; BSR set to: 1
  3096                           ;sm_Main_MC50.c: 311:                 {;sm_Main_MC50.c: 313:                     SetSegm
      +                          entValueMain(dMinus,dMinus);
  3097  00296E  0E18               	movlw	24
  3098  002970  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3099  002972  0E18               	movlw	24
  3100  002974  ECDD  F047         	call	_SetSegmentValueMain
  3101  002978  0012               	return	
  3102  00297A                     l23091:
  3103  00297A  C0ED  FFD9         	movff	sm_execute_main@psm,fsr2l
  3104  00297E  C0EE  FFDA         	movff	sm_execute_main@psm+1,fsr2h
  3105  002982  50DF               	movf	indf2,w,c
  3106  002984  0100               	movlb	0	; () banked
  3107  002986  6FEF               	movwf	??_sm_execute_main& (0+255),b
  3108  002988  6BF0               	clrf	(??_sm_execute_main+1)& (0+255),b
  3109                           
  3110                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3111                           ; Switch size 1, requested type "simple"
  3112                           ; Number of cases is 1, Range of values is 0 to 0
  3113                           ; switch strategies available:
  3114                           ; Name         Instructions Cycles
  3115                           ; simple_byte            4     3 (average)
  3116                           ;	Chosen strategy is simple_byte
  3117  00298A  51F0               	movf	(??_sm_execute_main+1)& (0+255),w,b
  3118  00298C  0A00               	xorlw	0	; case 0
  3119  00298E  A4D8               	btfss	status,2,c
  3120  002990  0012               	return	
  3121                           
  3122                           ; BSR set to: 0
  3123                           ; Switch size 1, requested type "simple"
  3124                           ; Number of cases is 3, Range of values is 0 to 2
  3125                           ; switch strategies available:
  3126                           ; Name         Instructions Cycles
  3127                           ; simple_byte           10     6 (average)
  3128                           ;	Chosen strategy is simple_byte
  3129  002992  51EF               	movf	??_sm_execute_main& (0+255),w,b
  3130  002994  0A00               	xorlw	0	; case 0
  3131  002996  B4D8               	btfsc	status,2,c
  3132  002998  D5F8               	goto	l22815
  3133  00299A  0A01               	xorlw	1	; case 1
  3134  00299C  B4D8               	btfsc	status,2,c
  3135  00299E  D69A               	goto	l22913
  3136  0029A0  0A03               	xorlw	3	; case 2
  3137  0029A2  A4D8               	btfss	status,2,c
  3138  0029A4  0012               	return	
  3139  0029A6  D69D               	goto	l22915
  3140  0029A8                     __end_of_sm_execute_main:
  3141                           	callstack 0
  3142                           
  3143 ;; *************** function _sm_execute_menuConfiguration *****************
  3144 ;; Defined at:
  3145 ;;		line 33 in file "sm_MenuConfiguration_MC50.c"
  3146 ;; Parameters:    Size  Location     Type
  3147 ;;  psm             2   17[BANK0 ] PTR struct .
  3148 ;;		 -> menuConfiguration_stateMachine(11), 
  3149 ;; Auto vars:     Size  Location     Type
  3150 ;;		None
  3151 ;; Return value:  Size  Location     Type
  3152 ;;                  1    wreg      void 
  3153 ;; Registers used:
  3154 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3155 ;; Tracked objects:
  3156 ;;		On entry : 3F/0
  3157 ;;		On exit  : 0/0
  3158 ;;		Unchanged: 0/0
  3159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3160 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3161 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3162 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3163 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3164 ;;Total ram usage:        4 bytes
  3165 ;; Hardware stack levels used: 1
  3166 ;; Hardware stack levels required when called: 15
  3167 ;; This function calls:
  3168 ;;		_ClearFlag_rfCMD
  3169 ;;		_ResetDefaultMemory
  3170 ;;		_SaveNVM_VarSystem
  3171 ;;		_SetSegmentValueIntermitentMain
  3172 ;;		_SetSegmentValueMain
  3173 ;;		___lbdiv
  3174 ;;		___lldiv
  3175 ;;		___lmul
  3176 ;;		___lwdiv
  3177 ;;		_controlLearnDigit
  3178 ;;		_controlSaveRemote
  3179 ;;		_controlSelectRemote
  3180 ;;		_load_New_Menu
  3181 ;;		_setValueToEdit
  3182 ;;		_sm_send_event
  3183 ;; This function is called by:
  3184 ;;		_sm_execute_main
  3185 ;; This function uses a non-reentrant model
  3186 ;;
  3187                           
  3188                           	psect	text2
  3189  000F22                     __ptext2:
  3190                           	callstack 0
  3191  000F22                     _sm_execute_menuConfiguration:
  3192                           	callstack 14
  3193                           
  3194                           ; BSR set to: 0
  3195                           ;sm_MenuConfiguration_MC50.c: 36:     switch((sm_state_Menu_t) psm->current_state)
  3196                           
  3197                           ;incstack = 0
  3198  000F22  D0A2               	goto	l22239
  3199  000F24                     l22181:
  3200                           
  3201                           ; BSR set to: 0
  3202                           ;sm_MenuConfiguration_MC50.c: 39:         {;sm_MenuConfiguration_MC50.c: 40:            
      +                           if(psm->last_event==ev_ParameterIsSelected)
  3203  000F24  EE20 F004          	lfsr	2,4
  3204  000F28  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3205  000F2A  26D9               	addwf	fsr2l,f,c
  3206  000F2C  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3207  000F2E  22DA               	addwfc	fsr2h,f,c
  3208  000F30  04DE               	decf	postinc2,w,c
  3209  000F32  10DE               	iorwf	postinc2,w,c
  3210  000F34  A4D8               	btfss	status,2,c
  3211  000F36  D006               	goto	l22185
  3212                           
  3213                           ; BSR set to: 0
  3214                           ;sm_MenuConfiguration_MC50.c: 41:             {;sm_MenuConfiguration_MC50.c: 42:        
      +                                   psm->current_state = st_EditParameter;
  3215  000F38  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3216  000F3C  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3217  000F40  0E01               	movlw	1
  3218  000F42  D04C               	goto	L9
  3219  000F44                     l22185:
  3220                           
  3221                           ; BSR set to: 0
  3222  000F44  EE20 F004          	lfsr	2,4
  3223  000F48  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3224  000F4A  26D9               	addwf	fsr2l,f,c
  3225  000F4C  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3226  000F4E  22DA               	addwfc	fsr2h,f,c
  3227  000F50  0E05               	movlw	5
  3228  000F52  18DE               	xorwf	postinc2,w,c
  3229  000F54  10DE               	iorwf	postinc2,w,c
  3230  000F56  A4D8               	btfss	status,2,c
  3231  000F58  D006               	goto	l22189
  3232                           
  3233                           ; BSR set to: 0
  3234                           ;sm_MenuConfiguration_MC50.c: 45:             {;sm_MenuConfiguration_MC50.c: 46:        
      +                                   psm->current_state = st_Counter;
  3235  000F5A  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3236  000F5E  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3237  000F62  0E03               	movlw	3
  3238  000F64  D03B               	goto	L9
  3239  000F66                     l22189:
  3240                           
  3241                           ; BSR set to: 0
  3242  000F66  EE20 F004          	lfsr	2,4
  3243  000F6A  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3244  000F6C  26D9               	addwf	fsr2l,f,c
  3245  000F6E  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3246  000F70  22DA               	addwfc	fsr2h,f,c
  3247  000F72  0E08               	movlw	8
  3248  000F74  18DE               	xorwf	postinc2,w,c
  3249  000F76  10DE               	iorwf	postinc2,w,c
  3250  000F78  A4D8               	btfss	status,2,c
  3251  000F7A  D006               	goto	l22193
  3252                           
  3253                           ; BSR set to: 0
  3254                           ;sm_MenuConfiguration_MC50.c: 49:             {;sm_MenuConfiguration_MC50.c: 50:        
      +                                   psm->current_state = st_SelectRemote;
  3255  000F7C  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3256  000F80  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3257  000F84  0E04               	movlw	4
  3258  000F86  D02A               	goto	L9
  3259  000F88                     l22193:
  3260                           
  3261                           ; BSR set to: 0
  3262  000F88  EE20 F004          	lfsr	2,4
  3263  000F8C  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3264  000F8E  26D9               	addwf	fsr2l,f,c
  3265  000F90  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3266  000F92  22DA               	addwfc	fsr2h,f,c
  3267  000F94  0E14               	movlw	20
  3268  000F96  18DE               	xorwf	postinc2,w,c
  3269  000F98  10DE               	iorwf	postinc2,w,c
  3270  000F9A  A4D8               	btfss	status,2,c
  3271  000F9C  D087               	goto	l22241
  3272                           
  3273                           ; BSR set to: 0
  3274                           ;sm_MenuConfiguration_MC50.c: 53:             {;sm_MenuConfiguration_MC50.c: 55:        
      +                                   psm->current_state = st_LearningMode;
  3275  000F9E  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3276  000FA2  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3277  000FA6  0E06               	movlw	6
  3278  000FA8  D019               	goto	L9
  3279  000FAA                     l22197:
  3280                           
  3281                           ; BSR set to: 0
  3282                           ;sm_MenuConfiguration_MC50.c: 65:         {;sm_MenuConfiguration_MC50.c: 66:            
      +                           if(psm->last_event==ev_ParameterIsEdited)
  3283  000FAA  EE20 F004          	lfsr	2,4
  3284  000FAE  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3285  000FB0  26D9               	addwf	fsr2l,f,c
  3286  000FB2  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3287  000FB4  22DA               	addwfc	fsr2h,f,c
  3288  000FB6  0E02               	movlw	2
  3289  000FB8  18DE               	xorwf	postinc2,w,c
  3290  000FBA  10DE               	iorwf	postinc2,w,c
  3291  000FBC  A4D8               	btfss	status,2,c
  3292  000FBE  D006               	goto	l22201
  3293                           
  3294                           ; BSR set to: 0
  3295                           ;sm_MenuConfiguration_MC50.c: 67:             {;sm_MenuConfiguration_MC50.c: 68:        
      +                                   psm->current_state = st_SaveParameter;
  3296  000FC0  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3297  000FC4  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3298  000FC8  0E02               	movlw	2
  3299  000FCA  D008               	goto	L9
  3300  000FCC                     l22201:
  3301                           
  3302                           ; BSR set to: 0
  3303  000FCC  EE20 F004          	lfsr	2,4
  3304  000FD0  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3305  000FD2  26D9               	addwf	fsr2l,f,c
  3306  000FD4  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3307  000FD6  22DA               	addwfc	fsr2h,f,c
  3308  000FD8  0E03               	movlw	3
  3309  000FDA  D03B               	goto	L123
  3310  000FDC                     L9:
  3311  000FDC  6EDE               	movwf	postinc2,c
  3312  000FDE  0E00               	movlw	0
  3313  000FE0  6EDD               	movwf	postdec2,c
  3314  000FE2  D064               	goto	l22241
  3315  000FE4                     l22209:
  3316                           
  3317                           ; BSR set to: 0
  3318                           ;sm_MenuConfiguration_MC50.c: 85:         {;sm_MenuConfiguration_MC50.c: 86:            
      +                           if(psm->last_event==ev_ParameterIsSaved)
  3319  000FE4  EE20 F004          	lfsr	2,4
  3320  000FE8  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3321  000FEA  26D9               	addwf	fsr2l,f,c
  3322  000FEC  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3323  000FEE  22DA               	addwfc	fsr2h,f,c
  3324  000FF0  0E04               	movlw	4
  3325  000FF2  18DE               	xorwf	postinc2,w,c
  3326  000FF4  10DE               	iorwf	postinc2,w,c
  3327  000FF6  A4D8               	btfss	status,2,c
  3328  000FF8  D7E9               	goto	l22201
  3329  000FFA  D02F               	goto	u26760
  3330  000FFC                     l22217:
  3331                           
  3332                           ; BSR set to: 0
  3333                           ;sm_MenuConfiguration_MC50.c: 97:         {;sm_MenuConfiguration_MC50.c: 98:            
      +                           if(psm->last_event==ev_addRemotes)
  3334  000FFC  EE20 F004          	lfsr	2,4
  3335  001000  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3336  001002  26D9               	addwf	fsr2l,f,c
  3337  001004  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3338  001006  22DA               	addwfc	fsr2h,f,c
  3339  001008  0E08               	movlw	8
  3340  00100A  18DE               	xorwf	postinc2,w,c
  3341  00100C  10DE               	iorwf	postinc2,w,c
  3342  00100E  A4D8               	btfss	status,2,c
  3343  001010  D7DD               	goto	l22201
  3344                           
  3345                           ; BSR set to: 0
  3346                           ;sm_MenuConfiguration_MC50.c: 99:             {;sm_MenuConfiguration_MC50.c: 100:       
      +                                    psm->current_state = st_SaveRemotes;
  3347  001012  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3348  001016  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3349  00101A  0E05               	movlw	5
  3350  00101C  D7DF               	goto	L9
  3351  00101E                     l22225:
  3352                           
  3353                           ; BSR set to: 0
  3354                           ;sm_MenuConfiguration_MC50.c: 109:         {;sm_MenuConfiguration_MC50.c: 110:          
      +                             if(psm->last_event==ev_NextRemote)
  3355  00101E  EE20 F004          	lfsr	2,4
  3356  001022  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3357  001024  26D9               	addwf	fsr2l,f,c
  3358  001026  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3359  001028  22DA               	addwfc	fsr2h,f,c
  3360  00102A  0E09               	movlw	9
  3361  00102C  18DE               	xorwf	postinc2,w,c
  3362  00102E  10DE               	iorwf	postinc2,w,c
  3363  001030  A4D8               	btfss	status,2,c
  3364  001032  D008               	goto	l22233
  3365                           
  3366                           ; BSR set to: 0
  3367                           ;sm_MenuConfiguration_MC50.c: 111:             {;sm_MenuConfiguration_MC50.c: 112:      
      +                                     psm->current_state = st_SelectRemote;
  3368  001034  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3369  001038  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3370  00103C  0E04               	movlw	4
  3371  00103E  6EDE               	movwf	postinc2,c
  3372  001040  0E00               	movlw	0
  3373  001042  6EDD               	movwf	postdec2,c
  3374  001044                     l22233:
  3375                           
  3376                           ; BSR set to: 0
  3377                           ;sm_MenuConfiguration_MC50.c: 121:         {;sm_MenuConfiguration_MC50.c: 122:          
      +                             if(psm->last_event==ev_ParameterIsSaved)
  3378  001044  EE20 F004          	lfsr	2,4
  3379  001048  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3380  00104A  26D9               	addwf	fsr2l,f,c
  3381  00104C  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3382  00104E  22DA               	addwfc	fsr2h,f,c
  3383  001050  0E04               	movlw	4
  3384  001052                     L123:
  3385  001052  18DE               	xorwf	postinc2,w,c
  3386  001054  10DE               	iorwf	postinc2,w,c
  3387  001056  A4D8               	btfss	status,2,c
  3388  001058  D029               	goto	l22241
  3389  00105A                     u26760:
  3390                           
  3391                           ; BSR set to: 0
  3392                           ;sm_MenuConfiguration_MC50.c: 123:             {;sm_MenuConfiguration_MC50.c: 124:      
      +                                     psm->current_state = st_MainMenu;
  3393  00105A  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3394  00105E  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3395  001062  0E00               	movlw	0
  3396  001064  D7BB               	goto	L9
  3397  001066                     l3228:
  3398                           
  3399                           ; BSR set to: 0
  3400  001066  D7FF               	goto	l3228
  3401  001068                     l22239:
  3402                           
  3403                           ; BSR set to: 0
  3404  001068  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3405  00106C  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3406  001070  50DF               	movf	indf2,w,c
  3407  001072  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  3408  001074  6BEC               	clrf	(??_sm_execute_menuConfiguration+1)& (0+255),b
  3409                           
  3410                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3411                           ; Switch size 1, requested type "simple"
  3412                           ; Number of cases is 1, Range of values is 0 to 0
  3413                           ; switch strategies available:
  3414                           ; Name         Instructions Cycles
  3415                           ; simple_byte            4     3 (average)
  3416                           ;	Chosen strategy is simple_byte
  3417  001076  51EC               	movf	(??_sm_execute_menuConfiguration+1)& (0+255),w,b
  3418  001078  0A00               	xorlw	0	; case 0
  3419  00107A  A4D8               	btfss	status,2,c
  3420  00107C  D7F4               	goto	l3228
  3421                           
  3422                           ; BSR set to: 0
  3423                           ; Switch size 1, requested type "simple"
  3424                           ; Number of cases is 7, Range of values is 0 to 6
  3425                           ; switch strategies available:
  3426                           ; Name         Instructions Cycles
  3427                           ; simple_byte           22    12 (average)
  3428                           ;	Chosen strategy is simple_byte
  3429  00107E  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  3430  001080  0A00               	xorlw	0	; case 0
  3431  001082  B4D8               	btfsc	status,2,c
  3432  001084  D74F               	goto	l22181
  3433  001086  0A01               	xorlw	1	; case 1
  3434  001088  B4D8               	btfsc	status,2,c
  3435  00108A  D78F               	goto	l22197
  3436  00108C  0A03               	xorlw	3	; case 2
  3437  00108E  B4D8               	btfsc	status,2,c
  3438  001090  D7D9               	goto	l22233
  3439  001092  0A01               	xorlw	1	; case 3
  3440  001094  B4D8               	btfsc	status,2,c
  3441  001096  D7A6               	goto	l22209
  3442  001098  0A07               	xorlw	7	; case 4
  3443  00109A  B4D8               	btfsc	status,2,c
  3444  00109C  D7AF               	goto	l22217
  3445  00109E  0A01               	xorlw	1	; case 5
  3446  0010A0  B4D8               	btfsc	status,2,c
  3447  0010A2  D7BD               	goto	l22225
  3448  0010A4  0A03               	xorlw	3	; case 6
  3449  0010A6  B4D8               	btfsc	status,2,c
  3450  0010A8  D7CD               	goto	l22233
  3451  0010AA  D7DD               	goto	l3228
  3452  0010AC                     l22241:
  3453                           
  3454                           ; BSR set to: 0
  3455                           ;sm_MenuConfiguration_MC50.c: 137:     sm_send_event(&menuConfiguration_stateMachine, ev
      +                          _NULL);
  3456  0010AC  0EBD               	movlw	low _menuConfiguration_stateMachine
  3457  0010AE  6E12               	movwf	sm_send_event@psm^0,c
  3458  0010B0  0E02               	movlw	high _menuConfiguration_stateMachine
  3459  0010B2  6E13               	movwf	(sm_send_event@psm+1)^0,c
  3460  0010B4  0E00               	movlw	0
  3461  0010B6  6E15               	movwf	(sm_send_event@event+1)^0,c
  3462  0010B8  0E00               	movlw	0
  3463  0010BA  6E14               	movwf	sm_send_event@event^0,c
  3464  0010BC  EC25  F041         	call	_sm_send_event	;wreg free
  3465                           
  3466                           ;sm_MenuConfiguration_MC50.c: 142:     switch((sm_state_Menu_t) psm->current_state)
  3467  0010C0  D3BF               	goto	l22553
  3468  0010C2                     l22243:
  3469                           
  3470                           ; BSR set to: 0
  3471                           ;sm_MenuConfiguration_MC50.c: 145:         {;sm_MenuConfiguration_MC50.c: 146:          
      +                             if(var_sys.ProgrammingDistanceIs==TypeProgrammingModeFull)
  3472  0010C2  0E06               	movlw	6
  3473  0010C4  0101               	movlb	1	; () banked
  3474  0010C6  193B               	xorwf	(_var_sys+59)& (0+255),w,b	;volatile
  3475  0010C8  A4D8               	btfss	status,2,c
  3476  0010CA  D02F               	goto	l22253
  3477                           
  3478                           ; BSR set to: 1
  3479                           ;sm_MenuConfiguration_MC50.c: 147:             {;sm_MenuConfiguration_MC50.c: 148:      
      +                                     ts_system.timeoutMenu=10*(1000/50);
  3480  0010CC  0E00               	movlw	0
  3481  0010CE  6FA9               	movwf	(_ts_system+15)& (0+255),b	;volatile
  3482  0010D0  0EC8               	movlw	200
  3483  0010D2  6FA8               	movwf	(_ts_system+14)& (0+255),b	;volatile
  3484                           
  3485                           ;sm_MenuConfiguration_MC50.c: 149:                 var_sys.DistanceProgrammingActive=YES
      +                          ;
  3486  0010D4  0E01               	movlw	1
  3487  0010D6  6F40               	movwf	(_var_sys+64)& (0+255),b	;volatile
  3488                           
  3489                           ;sm_MenuConfiguration_MC50.c: 150:                 menu_st.parameterSelected=0;
  3490  0010D8  0E00               	movlw	0
  3491  0010DA  6F68               	movwf	(_menu_st+23)& (0+255),b
  3492                           
  3493                           ; BSR set to: 1
  3494                           ;sm_MenuConfiguration_MC50.c: 151:                 if (setValueToEdit(menu_st.actualMenu
      +                          ,menu_st.parameterSelected)) {
  3495  0010DC  C168  F03A         	movff	_menu_st+23,setValueToEdit@ParameterSelected
  3496  0010E0  5166               	movf	(_menu_st+21)& (0+255),w,b
  3497  0010E2  ECCA  F00F         	call	_setValueToEdit
  3498  0010E6  0900               	iorlw	0
  3499  0010E8  B4D8               	btfsc	status,2,c
  3500  0010EA  0012               	return	
  3501                           
  3502                           ; BSR set to: 0
  3503                           ;sm_MenuConfiguration_MC50.c: 153:                      sm_send_event(&menuConfiguration
      +                          _stateMachine, ev_addRemotes);
  3504  0010EC  0EBD               	movlw	low _menuConfiguration_stateMachine
  3505  0010EE  6E12               	movwf	sm_send_event@psm^0,c
  3506  0010F0  0E02               	movlw	high _menuConfiguration_stateMachine
  3507  0010F2  6E13               	movwf	(sm_send_event@psm+1)^0,c
  3508  0010F4  0E00               	movlw	0
  3509  0010F6  6E15               	movwf	(sm_send_event@event+1)^0,c
  3510  0010F8  0E08               	movlw	8
  3511  0010FA  6E14               	movwf	sm_send_event@event^0,c
  3512  0010FC  EC25  F041         	call	_sm_send_event	;wreg free
  3513                           
  3514                           ;sm_MenuConfiguration_MC50.c: 154:                      SetSegmentValueIntermitentMain(e
      +                          dit_Param.tempValue/10, edit_Param.tempValue-((edit_Param.tempValue/10)*10),(1000/50));
  3515  001100  0E0A               	movlw	10
  3516  001102  6E10               	movwf	___lbdiv@divisor^0,c
  3517  001104  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3518  001106  ECE9  F044         	call	___lbdiv
  3519  00110A  0DF6               	mullw	246
  3520  00110C  50F3               	movf	243,w,c
  3521  00110E  2449               	addwf	(_edit_Param+3)^0,w,c	;volatile
  3522  001110  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  3523  001112  0E00               	movlw	0
  3524  001114  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  3525  001116  0E14               	movlw	20
  3526  001118  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  3527  00111A  0E0A               	movlw	10
  3528  00111C  6E10               	movwf	___lbdiv@divisor^0,c
  3529  00111E  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3530  001120  ECE9  F044         	call	___lbdiv
  3531  001124  EC79  F048         	call	_SetSegmentValueIntermitentMain
  3532  001128  0012               	return	
  3533  00112A                     l22253:
  3534                           
  3535                           ; BSR set to: 1
  3536  00112A  0E05               	movlw	5
  3537  00112C  193B               	xorwf	(_var_sys+59)& (0+255),w,b	;volatile
  3538  00112E  A4D8               	btfss	status,2,c
  3539  001130  D02F               	goto	l22263
  3540                           
  3541                           ; BSR set to: 1
  3542                           ;sm_MenuConfiguration_MC50.c: 158:             {;sm_MenuConfiguration_MC50.c: 159:      
      +                                     ts_system.timeoutMenu=10*(1000/50);
  3543  001132  0E00               	movlw	0
  3544  001134  6FA9               	movwf	(_ts_system+15)& (0+255),b	;volatile
  3545  001136  0EC8               	movlw	200
  3546  001138  6FA8               	movwf	(_ts_system+14)& (0+255),b	;volatile
  3547                           
  3548                           ;sm_MenuConfiguration_MC50.c: 160:                 var_sys.DistanceProgrammingActive=YES
      +                          ;
  3549  00113A  0E01               	movlw	1
  3550  00113C  6F40               	movwf	(_var_sys+64)& (0+255),b	;volatile
  3551                           
  3552                           ;sm_MenuConfiguration_MC50.c: 161:                 menu_st.parameterSelected=1;
  3553  00113E  0E01               	movlw	1
  3554  001140  6F68               	movwf	(_menu_st+23)& (0+255),b
  3555                           
  3556                           ; BSR set to: 1
  3557                           ;sm_MenuConfiguration_MC50.c: 162:                 if (setValueToEdit(menu_st.actualMenu
      +                          ,menu_st.parameterSelected)) {
  3558  001142  C168  F03A         	movff	_menu_st+23,setValueToEdit@ParameterSelected
  3559  001146  5166               	movf	(_menu_st+21)& (0+255),w,b
  3560  001148  ECCA  F00F         	call	_setValueToEdit
  3561  00114C  0900               	iorlw	0
  3562  00114E  B4D8               	btfsc	status,2,c
  3563  001150  0012               	return	
  3564                           
  3565                           ; BSR set to: 0
  3566                           ;sm_MenuConfiguration_MC50.c: 164:                      sm_send_event(&menuConfiguration
      +                          _stateMachine, ev_addRemotes);
  3567  001152  0EBD               	movlw	low _menuConfiguration_stateMachine
  3568  001154  6E12               	movwf	sm_send_event@psm^0,c
  3569  001156  0E02               	movlw	high _menuConfiguration_stateMachine
  3570  001158  6E13               	movwf	(sm_send_event@psm+1)^0,c
  3571  00115A  0E00               	movlw	0
  3572  00115C  6E15               	movwf	(sm_send_event@event+1)^0,c
  3573  00115E  0E08               	movlw	8
  3574  001160  6E14               	movwf	sm_send_event@event^0,c
  3575  001162  EC25  F041         	call	_sm_send_event	;wreg free
  3576                           
  3577                           ;sm_MenuConfiguration_MC50.c: 165:                      SetSegmentValueIntermitentMain(e
      +                          dit_Param.tempValue/10, edit_Param.tempValue-((edit_Param.tempValue/10)*10),(1000/50));
  3578  001166  0E0A               	movlw	10
  3579  001168  6E10               	movwf	___lbdiv@divisor^0,c
  3580  00116A  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3581  00116C  ECE9  F044         	call	___lbdiv
  3582  001170  0DF6               	mullw	246
  3583  001172  50F3               	movf	243,w,c
  3584  001174  2449               	addwf	(_edit_Param+3)^0,w,c	;volatile
  3585  001176  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  3586  001178  0E00               	movlw	0
  3587  00117A  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  3588  00117C  0E14               	movlw	20
  3589  00117E  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  3590  001180  0E0A               	movlw	10
  3591  001182  6E10               	movwf	___lbdiv@divisor^0,c
  3592  001184  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3593  001186  ECE9  F044         	call	___lbdiv
  3594  00118A  EC79  F048         	call	_SetSegmentValueIntermitentMain
  3595                           
  3596                           ; BSR set to: 1
  3597                           ;sm_MenuConfiguration_MC50.c: 167:             }
  3598                           
  3599                           ;sm_MenuConfiguration_MC50.c: 166:                 }
  3600  00118E  0012               	return	
  3601  001190                     l22263:
  3602                           
  3603                           ; BSR set to: 1
  3604  001190  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  3605  001192  A4D8               	btfss	status,2,c
  3606  001194  D023               	goto	l22275
  3607                           
  3608                           ; BSR set to: 1
  3609                           ;sm_MenuConfiguration_MC50.c: 169:             {;sm_MenuConfiguration_MC50.c: 170:      
      +                                     ts_system.timeoutMenu= ((1000/50)*5) ;
  3610  001196  0E00               	movlw	0
  3611  001198  6FA9               	movwf	(_ts_system+15)& (0+255),b	;volatile
  3612  00119A  0E64               	movlw	100
  3613  00119C  6FA8               	movwf	(_ts_system+14)& (0+255),b	;volatile
  3614                           
  3615                           ;sm_MenuConfiguration_MC50.c: 171:                 if(menu_st.parameterSelected==0)
  3616  00119E  5168               	movf	(_menu_st+23)& (0+255),w,b
  3617  0011A0  A4D8               	btfss	status,2,c
  3618  0011A2  D003               	goto	l22269
  3619                           
  3620                           ; BSR set to: 1
  3621                           ;sm_MenuConfiguration_MC50.c: 172:                 {;sm_MenuConfiguration_MC50.c: 173:  
      +                                             menu_st.parameterSelected=menu_st.menuSize-1;
  3622  0011A4  0567               	decf	(_menu_st+22)& (0+255),w,b
  3623  0011A6  6F68               	movwf	(_menu_st+23)& (0+255),b
  3624                           
  3625                           ;sm_MenuConfiguration_MC50.c: 174:                 }
  3626  0011A8  D001               	goto	l22271
  3627  0011AA                     l22269:
  3628                           
  3629                           ; BSR set to: 1
  3630                           ;sm_MenuConfiguration_MC50.c: 176:                 {;sm_MenuConfiguration_MC50.c: 177:  
      +                                             menu_st.parameterSelected--;
  3631  0011AA  0768               	decf	(_menu_st+23)& (0+255),f,b
  3632  0011AC                     l22271:
  3633                           
  3634                           ; BSR set to: 1
  3635                           ;sm_MenuConfiguration_MC50.c: 179:                 SetSegmentValueMain(menu_st.menuList[
      +                          menu_st.parameterSelected].value_display1, menu_st.menuList[menu_st.parameterSelected].v
      +                          alue_display2);
  3636  0011AC  5168               	movf	(_menu_st+23)& (0+255),w,b
  3637  0011AE  0D02               	mullw	2
  3638  0011B0  0E52               	movlw	low (_menu_st+1)
  3639  0011B2  24F3               	addwf	243,w,c
  3640  0011B4  6ED9               	movwf	fsr2l,c
  3641  0011B6  0E01               	movlw	high (_menu_st+1)
  3642  0011B8  20F4               	addwfc	prodh,w,c
  3643  0011BA  6EDA               	movwf	fsr2h,c
  3644  0011BC  50DF               	movf	indf2,w,c
  3645  0011BE  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3646  0011C0  5168               	movf	(_menu_st+23)& (0+255),w,b
  3647  0011C2  0D02               	mullw	2
  3648  0011C4  0E51               	movlw	low _menu_st
  3649  0011C6  24F3               	addwf	243,w,c
  3650  0011C8  6ED9               	movwf	fsr2l,c
  3651  0011CA  0E01               	movlw	high _menu_st
  3652  0011CC  20F4               	addwfc	prodh,w,c
  3653  0011CE  6EDA               	movwf	fsr2h,c
  3654  0011D0  50DF               	movf	indf2,w,c
  3655  0011D2  ECDD  F047         	call	_SetSegmentValueMain
  3656  0011D6                     l22273:
  3657                           
  3658                           ;sm_MenuConfiguration_MC50.c: 180:                 button_struct.processed=1;
  3659  0011D6  0E01               	movlw	1
  3660  0011D8  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  3661                           
  3662                           ;sm_MenuConfiguration_MC50.c: 181:             }
  3663  0011DA  0012               	return	
  3664  0011DC                     l22275:
  3665                           
  3666                           ; BSR set to: 1
  3667  0011DC  0E17               	movlw	23
  3668  0011DE  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  3669  0011E0  A4D8               	btfss	status,2,c
  3670  0011E2  D021               	goto	l22289
  3671                           
  3672                           ; BSR set to: 1
  3673                           ;sm_MenuConfiguration_MC50.c: 183:             {;sm_MenuConfiguration_MC50.c: 184:      
      +                                     ts_system.timeoutMenu=((1000/50)*5) ;
  3674  0011E4  0E00               	movlw	0
  3675  0011E6  6FA9               	movwf	(_ts_system+15)& (0+255),b	;volatile
  3676  0011E8  0E64               	movlw	100
  3677  0011EA  6FA8               	movwf	(_ts_system+14)& (0+255),b	;volatile
  3678                           
  3679                           ; BSR set to: 1
  3680                           ;sm_MenuConfiguration_MC50.c: 185:                 menu_st.parameterSelected++;
  3681  0011EC  2B68               	incf	(_menu_st+23)& (0+255),f,b
  3682                           
  3683                           ; BSR set to: 1
  3684                           ;sm_MenuConfiguration_MC50.c: 186:                 if(menu_st.parameterSelected>=menu_st
      +                          .menuSize)
  3685  0011EE  5167               	movf	(_menu_st+22)& (0+255),w,b
  3686  0011F0  5D68               	subwf	(_menu_st+23)& (0+255),w,b
  3687  0011F2  A0D8               	btfss	status,0,c
  3688  0011F4  D002               	goto	l22285
  3689                           
  3690                           ; BSR set to: 1
  3691                           ;sm_MenuConfiguration_MC50.c: 187:                 {;sm_MenuConfiguration_MC50.c: 188:  
      +                                             menu_st.parameterSelected=0;
  3692  0011F6  0E00               	movlw	0
  3693  0011F8  6F68               	movwf	(_menu_st+23)& (0+255),b
  3694  0011FA                     l22285:
  3695                           
  3696                           ; BSR set to: 1
  3697                           ;sm_MenuConfiguration_MC50.c: 190:                 SetSegmentValueMain(menu_st.menuList[
      +                          menu_st.parameterSelected].value_display1, menu_st.menuList[menu_st.parameterSelected].v
      +                          alue_display2);
  3698  0011FA  5168               	movf	(_menu_st+23)& (0+255),w,b
  3699  0011FC  0D02               	mullw	2
  3700  0011FE  0E52               	movlw	low (_menu_st+1)
  3701  001200  24F3               	addwf	243,w,c
  3702  001202  6ED9               	movwf	fsr2l,c
  3703  001204  0E01               	movlw	high (_menu_st+1)
  3704  001206  20F4               	addwfc	prodh,w,c
  3705  001208  6EDA               	movwf	fsr2h,c
  3706  00120A  50DF               	movf	indf2,w,c
  3707  00120C  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3708  00120E  5168               	movf	(_menu_st+23)& (0+255),w,b
  3709  001210  0D02               	mullw	2
  3710  001212  0E51               	movlw	low _menu_st
  3711  001214  24F3               	addwf	243,w,c
  3712  001216  6ED9               	movwf	fsr2l,c
  3713  001218  0E01               	movlw	high _menu_st
  3714  00121A  20F4               	addwfc	prodh,w,c
  3715  00121C  6EDA               	movwf	fsr2h,c
  3716  00121E  50DF               	movf	indf2,w,c
  3717  001220  ECDD  F047         	call	_SetSegmentValueMain
  3718  001224  D7D8               	goto	l22273
  3719  001226                     l22289:
  3720                           
  3721                           ; BSR set to: 1
  3722  001226  0E0C               	movlw	12
  3723  001228  6166               	cpfslt	(_menu_st+21)& (0+255),b
  3724  00122A  D09A               	goto	l22345
  3725                           
  3726                           ; BSR set to: 1
  3727                           ;sm_MenuConfiguration_MC50.c: 194:             {;sm_MenuConfiguration_MC50.c: 195:      
      +                                     if (button_struct.current==0 && button_struct.timer>(( 500/50)) )
  3728  00122C  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  3729  00122E  A4D8               	btfss	status,2,c
  3730  001230  D053               	goto	l22311
  3731                           
  3732                           ; BSR set to: 1
  3733  001232  0E0A               	movlw	10
  3734  001234  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  3735  001236  D050               	goto	l22311
  3736                           
  3737                           ; BSR set to: 1
  3738                           ;sm_MenuConfiguration_MC50.c: 196:                 {;sm_MenuConfiguration_MC50.c: 197:  
      +                                             ts_system.timeoutMenu=((1000/50)*5) ;
  3739  001238  0E00               	movlw	0
  3740  00123A  6FA9               	movwf	(_ts_system+15)& (0+255),b	;volatile
  3741  00123C  0E64               	movlw	100
  3742  00123E  6FA8               	movwf	(_ts_system+14)& (0+255),b	;volatile
  3743                           
  3744                           ; BSR set to: 1
  3745                           ;sm_MenuConfiguration_MC50.c: 199:                     if (setValueToEdit(menu_st.actual
      +                          Menu,menu_st.parameterSelected))
  3746  001240  C168  F03A         	movff	_menu_st+23,setValueToEdit@ParameterSelected
  3747  001244  5166               	movf	(_menu_st+21)& (0+255),w,b
  3748  001246  ECCA  F00F         	call	_setValueToEdit
  3749  00124A  0900               	iorlw	0
  3750  00124C  B4D8               	btfsc	status,2,c
  3751  00124E  D7C3               	goto	l22273
  3752                           
  3753                           ; BSR set to: 0
  3754                           ;sm_MenuConfiguration_MC50.c: 200:                     {;sm_MenuConfiguration_MC50.c: 20
      +                          2:                          sm_send_event(&menuConfiguration_stateMachine, ev_ParameterI
      +                          sSelected);
  3755  001250  0EBD               	movlw	low _menuConfiguration_stateMachine
  3756  001252  6E12               	movwf	sm_send_event@psm^0,c
  3757  001254  0E02               	movlw	high _menuConfiguration_stateMachine
  3758  001256  6E13               	movwf	(sm_send_event@psm+1)^0,c
  3759  001258  0E00               	movlw	0
  3760  00125A  6E15               	movwf	(sm_send_event@event+1)^0,c
  3761  00125C  0E01               	movlw	1
  3762  00125E  6E14               	movwf	sm_send_event@event^0,c
  3763  001260  EC25  F041         	call	_sm_send_event	;wreg free
  3764                           
  3765                           ;sm_MenuConfiguration_MC50.c: 203:                          if((edit_Param.Value==(unsig
      +                          ned char*)&var_sys_NVM.TypeofMotor)||(edit_Param.Value==(unsigned char*)&var_sys_NVM.Dir
      +                          ection_motor)){
  3766  001264  0E98               	movlw	_var_sys_NVM& (0+255)
  3767  001266  0F1C               	addlw	28
  3768  001268  0100               	movlb	0	; () banked
  3769  00126A  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  3770  00126C  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  3771  00126E  1847               	xorwf	(_edit_Param+1)^0,w,c	;volatile
  3772  001270  E101               	bnz	u26895
  3773  001272  5248               	movf	(_edit_Param+2)^0,f,c	;volatile
  3774  001274                     u26895:
  3775  001274  B4D8               	btfsc	status,2,c
  3776  001276  D009               	goto	u26900
  3777                           
  3778                           ; BSR set to: 0
  3779  001278  0E98               	movlw	_var_sys_NVM& (0+255)
  3780  00127A  0F1B               	addlw	27
  3781  00127C  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  3782  00127E  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  3783  001280  1847               	xorwf	(_edit_Param+1)^0,w,c	;volatile
  3784  001282  E101               	bnz	u26905
  3785  001284  5248               	movf	(_edit_Param+2)^0,f,c	;volatile
  3786  001286                     u26905:
  3787  001286  A4D8               	btfss	status,2,c
  3788  001288  D016               	goto	l22307
  3789  00128A                     u26900:
  3790                           
  3791                           ; BSR set to: 0
  3792                           ;sm_MenuConfiguration_MC50.c: 204:                            SetSegmentValueMain(menu_s
      +                          t.menuList[edit_Param.tempValue].value_display1, menu_st.menuList[edit_Param.tempValue].
      +                          value_display2);
  3793  00128A  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3794  00128C  0D02               	mullw	2
  3795  00128E  0E52               	movlw	low (_menu_st+1)
  3796  001290  24F3               	addwf	243,w,c
  3797  001292  6ED9               	movwf	fsr2l,c
  3798  001294  0E01               	movlw	high (_menu_st+1)
  3799  001296  20F4               	addwfc	prodh,w,c
  3800  001298  6EDA               	movwf	fsr2h,c
  3801  00129A  50DF               	movf	indf2,w,c
  3802  00129C  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3803  00129E  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3804  0012A0  0D02               	mullw	2
  3805  0012A2  0E51               	movlw	low _menu_st
  3806  0012A4  24F3               	addwf	243,w,c
  3807  0012A6  6ED9               	movwf	fsr2l,c
  3808  0012A8  0E01               	movlw	high _menu_st
  3809  0012AA  20F4               	addwfc	prodh,w,c
  3810  0012AC  6EDA               	movwf	fsr2h,c
  3811  0012AE  50DF               	movf	indf2,w,c
  3812  0012B0  ECDD  F047         	call	_SetSegmentValueMain
  3813                           
  3814                           ;sm_MenuConfiguration_MC50.c: 206:                          }
  3815  0012B4  D790               	goto	l22273
  3816  0012B6                     l22307:
  3817                           
  3818                           ; BSR set to: 0
  3819                           ;sm_MenuConfiguration_MC50.c: 208:                          SetSegmentValueMain(edit_Par
      +                          am.tempValue/10, edit_Param.tempValue-((edit_Param.tempValue/10)*10));
  3820  0012B6  0E0A               	movlw	10
  3821  0012B8  6E10               	movwf	___lbdiv@divisor^0,c
  3822  0012BA  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3823  0012BC  ECE9  F044         	call	___lbdiv
  3824  0012C0  0DF6               	mullw	246
  3825  0012C2  50F3               	movf	243,w,c
  3826  0012C4  2449               	addwf	(_edit_Param+3)^0,w,c	;volatile
  3827  0012C6  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3828  0012C8  0E0A               	movlw	10
  3829  0012CA  6E10               	movwf	___lbdiv@divisor^0,c
  3830  0012CC  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3831  0012CE  ECE9  F044         	call	___lbdiv
  3832  0012D2  ECDD  F047         	call	_SetSegmentValueMain
  3833  0012D6  D77F               	goto	l22273
  3834  0012D8                     l22311:
  3835                           
  3836                           ; BSR set to: 1
  3837  0012D8  BFA9               	btfsc	(_ts_system+15)& (0+255),7,b	;volatile
  3838  0012DA  D008               	goto	u26920
  3839  0012DC  51A9               	movf	(_ts_system+15)& (0+255),w,b	;volatile
  3840  0012DE  E103               	bnz	u26910
  3841  0012E0  05A8               	decf	(_ts_system+14)& (0+255),w,b	;volatile
  3842  0012E2  A0D8               	btfss	status,0,c
  3843  0012E4  D003               	goto	u26920
  3844  0012E6                     u26910:
  3845                           
  3846                           ; BSR set to: 1
  3847  0012E6  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  3848  0012E8  A4D8               	btfss	status,2,c
  3849  0012EA  D01E               	goto	l22329
  3850  0012EC                     u26920:
  3851                           
  3852                           ; BSR set to: 1
  3853  0012EC  0E02               	movlw	2
  3854  0012EE  6166               	cpfslt	(_menu_st+21)& (0+255),b
  3855  0012F0  D01B               	goto	l22329
  3856                           
  3857                           ; BSR set to: 1
  3858                           ;sm_MenuConfiguration_MC50.c: 216:                 {;sm_MenuConfiguration_MC50.c: 217:  
      +                                             ts_system.timeoutMenu=0;
  3859  0012F2  0E00               	movlw	0
  3860  0012F4  6FA9               	movwf	(_ts_system+15)& (0+255),b	;volatile
  3861  0012F6  0E00               	movlw	0
  3862  0012F8  6FA8               	movwf	(_ts_system+14)& (0+255),b	;volatile
  3863                           
  3864                           ; BSR set to: 1
  3865                           ;sm_MenuConfiguration_MC50.c: 218:                     sm_send_event(&main_stateMachine,
      +                           ev_goto_StandBy);
  3866  0012FA  0EED               	movlw	low _main_stateMachine
  3867  0012FC  6E12               	movwf	sm_send_event@psm^0,c
  3868  0012FE  0E01               	movlw	high _main_stateMachine
  3869  001300  6E13               	movwf	(sm_send_event@psm+1)^0,c
  3870  001302  0E00               	movlw	0
  3871  001304  6E15               	movwf	(sm_send_event@event+1)^0,c
  3872  001306  0E07               	movlw	7
  3873  001308  6E14               	movwf	sm_send_event@event^0,c
  3874  00130A  EC25  F041         	call	_sm_send_event	;wreg free
  3875                           
  3876                           ;sm_MenuConfiguration_MC50.c: 219:                     SetSegmentValueMain(dMinus,dMinus
      +                          );
  3877  00130E  0E18               	movlw	24
  3878  001310  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3879  001312  0E18               	movlw	24
  3880  001314  ECDD  F047         	call	_SetSegmentValueMain
  3881                           
  3882                           ; BSR set to: 0
  3883                           ;sm_MenuConfiguration_MC50.c: 220:                     menu_st.lastMainParameterSelected
      +                           = 0;
  3884  001318  0E00               	movlw	0
  3885  00131A  0101               	movlb	1	; () banked
  3886  00131C  6F69               	movwf	(_menu_st+24)& (0+255),b
  3887                           
  3888                           ; BSR set to: 1
  3889                           ;sm_MenuConfiguration_MC50.c: 221:                     button_struct.processed=1;
  3890  00131E  0E01               	movlw	1
  3891  001320  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  3892                           
  3893                           ; BSR set to: 1
  3894                           ;sm_MenuConfiguration_MC50.c: 222:                     ClearFlag_rfCMD();
  3895  001322  EC2E  F049         	call	_ClearFlag_rfCMD	;wreg free
  3896                           
  3897                           ;sm_MenuConfiguration_MC50.c: 224:                 }
  3898  001326  0012               	return	
  3899  001328                     l22329:
  3900                           
  3901                           ; BSR set to: 1
  3902  001328  BFA9               	btfsc	(_ts_system+15)& (0+255),7,b	;volatile
  3903  00132A  D008               	goto	u26950
  3904  00132C  51A9               	movf	(_ts_system+15)& (0+255),w,b	;volatile
  3905  00132E  E103               	bnz	u26940
  3906  001330  05A8               	decf	(_ts_system+14)& (0+255),w,b	;volatile
  3907  001332  A0D8               	btfss	status,0,c
  3908  001334  D003               	goto	u26950
  3909  001336                     u26940:
  3910                           
  3911                           ; BSR set to: 1
  3912  001336  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  3913  001338  A4D8               	btfss	status,2,c
  3914  00133A  D004               	goto	l22337
  3915  00133C                     u26950:
  3916                           
  3917                           ; BSR set to: 1
  3918                           ;sm_MenuConfiguration_MC50.c: 226:                 {;sm_MenuConfiguration_MC50.c: 228:  
      +                                             load_New_Menu(menu_st.lastMenu);
  3919  00133C  5165               	movf	(_menu_st+20)& (0+255),w,b
  3920  00133E  EC7D  F01E         	call	_load_New_Menu
  3921  001342  D749               	goto	l22273
  3922  001344                     l22337:
  3923                           
  3924                           ; BSR set to: 1
  3925  001344  BFA9               	btfsc	(_ts_system+15)& (0+255),7,b	;volatile
  3926  001346  D005               	goto	u26960
  3927  001348  51A9               	movf	(_ts_system+15)& (0+255),w,b	;volatile
  3928  00134A  E102               	bnz	u26961
  3929  00134C  05A8               	decf	(_ts_system+14)& (0+255),w,b	;volatile
  3930  00134E  B0D8               	btfsc	status,0,c
  3931  001350                     u26961:
  3932  001350  0012               	return	
  3933  001352                     u26960:
  3934                           
  3935                           ; BSR set to: 1
  3936  001352  0E01               	movlw	1
  3937  001354  6566               	cpfsgt	(_menu_st+21)& (0+255),b
  3938  001356  0012               	return	
  3939                           
  3940                           ; BSR set to: 1
  3941                           ;sm_MenuConfiguration_MC50.c: 232:                 {;sm_MenuConfiguration_MC50.c: 234:  
      +                                             load_New_Menu(menu_st.lastMenu);
  3942  001358  5165               	movf	(_menu_st+20)& (0+255),w,b
  3943  00135A  EC7D  F01E         	call	_load_New_Menu
  3944  00135E  D73B               	goto	l22273
  3945  001360                     l22345:
  3946                           
  3947                           ; BSR set to: 1
  3948  001360  0E27               	movlw	39
  3949  001362  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  3950  001364  A4D8               	btfss	status,2,c
  3951  001366  D032               	goto	l22361
  3952                           
  3953                           ; BSR set to: 1
  3954  001368  0E0A               	movlw	10
  3955  00136A  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  3956  00136C  D02F               	goto	l22361
  3957                           
  3958                           ; BSR set to: 1
  3959  00136E  0E0D               	movlw	13
  3960  001370  1966               	xorwf	(_menu_st+21)& (0+255),w,b
  3961  001372  B4D8               	btfsc	status,2,c
  3962  001374  D02B               	goto	l22361
  3963                           
  3964                           ; BSR set to: 1
  3965                           ;sm_MenuConfiguration_MC50.c: 239:             {;sm_MenuConfiguration_MC50.c: 240:      
      +                                         ts_system.timeoutMenu=((1000/50)*5);
  3966  001376  0E00               	movlw	0
  3967  001378  6FA9               	movwf	(_ts_system+15)& (0+255),b	;volatile
  3968  00137A  0E64               	movlw	100
  3969  00137C  6FA8               	movwf	(_ts_system+14)& (0+255),b	;volatile
  3970                           
  3971                           ; BSR set to: 1
  3972                           ;sm_MenuConfiguration_MC50.c: 241:                     if (setValueToEdit(menu_st.actual
      +                          Menu,menu_st.parameterSelected))
  3973  00137E  C168  F03A         	movff	_menu_st+23,setValueToEdit@ParameterSelected
  3974  001382  5166               	movf	(_menu_st+21)& (0+255),w,b
  3975  001384  ECCA  F00F         	call	_setValueToEdit
  3976  001388  0900               	iorlw	0
  3977  00138A  B4D8               	btfsc	status,2,c
  3978  00138C  D724               	goto	l22273
  3979                           
  3980                           ; BSR set to: 0
  3981                           ;sm_MenuConfiguration_MC50.c: 243:                     {;sm_MenuConfiguration_MC50.c: 24
      +                          4:                         sm_send_event(&menuConfiguration_stateMachine, ev_addRemotes)
      +                          ;
  3982  00138E  0EBD               	movlw	low _menuConfiguration_stateMachine
  3983  001390  6E12               	movwf	sm_send_event@psm^0,c
  3984  001392  0E02               	movlw	high _menuConfiguration_stateMachine
  3985  001394  6E13               	movwf	(sm_send_event@psm+1)^0,c
  3986  001396  0E00               	movlw	0
  3987  001398  6E15               	movwf	(sm_send_event@event+1)^0,c
  3988  00139A  0E08               	movlw	8
  3989  00139C  6E14               	movwf	sm_send_event@event^0,c
  3990  00139E  EC25  F041         	call	_sm_send_event	;wreg free
  3991                           
  3992                           ;sm_MenuConfiguration_MC50.c: 245:                         SetSegmentValueIntermitentMai
      +                          n(edit_Param.tempValue/10, edit_Param.tempValue-((edit_Param.tempValue/10)*10),(1000/50)
      +                          );
  3993  0013A2  0E0A               	movlw	10
  3994  0013A4  6E10               	movwf	___lbdiv@divisor^0,c
  3995  0013A6  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3996  0013A8  ECE9  F044         	call	___lbdiv
  3997  0013AC  0DF6               	mullw	246
  3998  0013AE  50F3               	movf	243,w,c
  3999  0013B0  2449               	addwf	(_edit_Param+3)^0,w,c	;volatile
  4000  0013B2  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  4001  0013B4  0E00               	movlw	0
  4002  0013B6  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  4003  0013B8  0E14               	movlw	20
  4004  0013BA  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  4005  0013BC  0E0A               	movlw	10
  4006  0013BE  6E10               	movwf	___lbdiv@divisor^0,c
  4007  0013C0  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4008  0013C2  ECE9  F044         	call	___lbdiv
  4009  0013C6  EC79  F048         	call	_SetSegmentValueIntermitentMain
  4010  0013CA  D705               	goto	l22273
  4011  0013CC                     l22361:
  4012                           
  4013                           ; BSR set to: 1
  4014  0013CC  0E0D               	movlw	13
  4015  0013CE  1966               	xorwf	(_menu_st+21)& (0+255),w,b
  4016  0013D0  A4D8               	btfss	status,2,c
  4017  0013D2  D027               	goto	l22379
  4018                           
  4019                           ; BSR set to: 1
  4020  0013D4  51A6               	movf	(_ts_system+12)& (0+255),w,b	;volatile
  4021  0013D6  11A7               	iorwf	(_ts_system+13)& (0+255),w,b	;volatile
  4022  0013D8  A4D8               	btfss	status,2,c
  4023  0013DA  D023               	goto	l22379
  4024                           
  4025                           ; BSR set to: 1
  4026                           ;sm_MenuConfiguration_MC50.c: 250:             {;sm_MenuConfiguration_MC50.c: 251:      
      +                                     var_sys_NVM.positionRemotesFull=0;
  4027  0013DC  0E00               	movlw	0
  4028  0013DE  0100               	movlb	0	; () banked
  4029  0013E0  6FB8               	movwf	(_var_sys_NVM+32)& (0+255),b	;volatile
  4030                           
  4031                           ;sm_MenuConfiguration_MC50.c: 252:                 var_sys_NVM.positionRemotesWalk=0;
  4032  0013E2  0E00               	movlw	0
  4033  0013E4  6FB9               	movwf	(_var_sys_NVM+33)& (0+255),b	;volatile
  4034                           
  4035                           ;sm_MenuConfiguration_MC50.c: 253:                 var_sys_NVM.OnlyRollingCode=NO;
  4036  0013E6  0E00               	movlw	0
  4037  0013E8  6FBE               	movwf	(_var_sys_NVM+38)& (0+255),b	;volatile
  4038                           
  4039                           ; BSR set to: 0
  4040                           ;sm_MenuConfiguration_MC50.c: 254:                 SaveNVM_VarSystem(pageMemoryCounters)
      +                          ;
  4041  0013EA  0E02               	movlw	2
  4042  0013EC  EC06  F045         	call	_SaveNVM_VarSystem
  4043                           
  4044                           ;sm_MenuConfiguration_MC50.c: 255:                 sm_send_event(&main_stateMachine, ev_
      +                          goto_StandBy);
  4045  0013F0  0EED               	movlw	low _main_stateMachine
  4046  0013F2  6E12               	movwf	sm_send_event@psm^0,c
  4047  0013F4  0E01               	movlw	high _main_stateMachine
  4048  0013F6  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4049  0013F8  0E00               	movlw	0
  4050  0013FA  6E15               	movwf	(sm_send_event@event+1)^0,c
  4051  0013FC  0E07               	movlw	7
  4052  0013FE  6E14               	movwf	sm_send_event@event^0,c
  4053  001400  EC25  F041         	call	_sm_send_event	;wreg free
  4054                           
  4055                           ;sm_MenuConfiguration_MC50.c: 256:                 SetSegmentValueMain(dMinus,dMinus);
  4056  001404  0E18               	movlw	24
  4057  001406  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4058  001408  0E18               	movlw	24
  4059  00140A  ECDD  F047         	call	_SetSegmentValueMain
  4060                           
  4061                           ; BSR set to: 0
  4062                           ;sm_MenuConfiguration_MC50.c: 257:                 button_struct.processed=1;
  4063  00140E  0E01               	movlw	1
  4064  001410  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  4065  001412                     l22375:
  4066                           
  4067                           ;sm_MenuConfiguration_MC50.c: 258:                 ClearFlag_rfCMD();
  4068  001412  EC2E  F049         	call	_ClearFlag_rfCMD	;wreg free
  4069  001416                     l22377:
  4070                           
  4071                           ;sm_MenuConfiguration_MC50.c: 259:                  ts_system.timeoutMenu=0;
  4072  001416  0E00               	movlw	0
  4073  001418  0101               	movlb	1	; () banked
  4074  00141A  6FA9               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4075  00141C  0E00               	movlw	0
  4076  00141E  6FA8               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4077                           
  4078                           ;sm_MenuConfiguration_MC50.c: 260:             }
  4079  001420  0012               	return	
  4080  001422                     l22379:
  4081                           
  4082                           ; BSR set to: 1
  4083  001422  BFA9               	btfsc	(_ts_system+15)& (0+255),7,b	;volatile
  4084  001424  D008               	goto	u27050
  4085  001426  51A9               	movf	(_ts_system+15)& (0+255),w,b	;volatile
  4086  001428  E103               	bnz	u27040
  4087  00142A  05A8               	decf	(_ts_system+14)& (0+255),w,b	;volatile
  4088  00142C  A0D8               	btfss	status,0,c
  4089  00142E  D003               	goto	u27050
  4090  001430                     u27040:
  4091                           
  4092                           ; BSR set to: 1
  4093  001430  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  4094  001432  A4D8               	btfss	status,2,c
  4095  001434  0012               	return	
  4096  001436                     u27050:
  4097                           
  4098                           ; BSR set to: 1
  4099                           ;sm_MenuConfiguration_MC50.c: 262:             {;sm_MenuConfiguration_MC50.c: 263:      
      +                                      sm_send_event(&main_stateMachine, ev_goto_StandBy);
  4100  001436  0EED               	movlw	low _main_stateMachine
  4101  001438  6E12               	movwf	sm_send_event@psm^0,c
  4102  00143A  0E01               	movlw	high _main_stateMachine
  4103  00143C  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4104  00143E  0E00               	movlw	0
  4105  001440  6E15               	movwf	(sm_send_event@event+1)^0,c
  4106  001442  0E07               	movlw	7
  4107  001444  6E14               	movwf	sm_send_event@event^0,c
  4108  001446  EC25  F041         	call	_sm_send_event	;wreg free
  4109                           
  4110                           ;sm_MenuConfiguration_MC50.c: 264:                  SetSegmentValueMain(dMinus,dMinus);
  4111  00144A  0E18               	movlw	24
  4112  00144C  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4113  00144E  0E18               	movlw	24
  4114  001450  ECDD  F047         	call	_SetSegmentValueMain
  4115                           
  4116                           ; BSR set to: 0
  4117                           ;sm_MenuConfiguration_MC50.c: 265:                  ClearFlag_rfCMD();
  4118  001454  EC2E  F049         	call	_ClearFlag_rfCMD	;wreg free
  4119                           
  4120                           ;sm_MenuConfiguration_MC50.c: 266:                  button_struct.processed=1;
  4121  001458  0E01               	movlw	1
  4122  00145A  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  4123  00145C  D7DC               	goto	l22377
  4124  00145E                     l22393:
  4125                           
  4126                           ; BSR set to: 0
  4127                           ;sm_MenuConfiguration_MC50.c: 272:         {;sm_MenuConfiguration_MC50.c: 273:          
      +                             if (button_struct.current==0x00)
  4128  00145E  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  4129  001460  A4D8               	btfss	status,2,c
  4130  001462  D047               	goto	l22413
  4131                           
  4132                           ; BSR set to: 0
  4133                           ;sm_MenuConfiguration_MC50.c: 274:             {;sm_MenuConfiguration_MC50.c: 275:      
      +                                     ts_system.timeoutMenu=((1000/50)*5);
  4134  001464  0E00               	movlw	0
  4135  001466  0101               	movlb	1	; () banked
  4136  001468  6FA9               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4137  00146A  0E64               	movlw	100
  4138  00146C  6FA8               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4139                           
  4140                           ; BSR set to: 1
  4141                           ;sm_MenuConfiguration_MC50.c: 276:                 if(edit_Param.tempValue<=edit_Param.M
      +                          in)
  4142  00146E  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4143  001470  5C4B               	subwf	(_edit_Param+5)^0,w,c	;volatile
  4144  001472  A0D8               	btfss	status,0,c
  4145  001474  D003               	goto	l22401
  4146                           
  4147                           ; BSR set to: 1
  4148                           ;sm_MenuConfiguration_MC50.c: 277:                 {;sm_MenuConfiguration_MC50.c: 278:  
      +                                             edit_Param.tempValue=edit_Param.Max;
  4149  001476  C04A  F049         	movff	_edit_Param+4,_edit_Param+3	;volatile
  4150                           
  4151                           ;sm_MenuConfiguration_MC50.c: 279:                 }
  4152  00147A  D001               	goto	l22403
  4153  00147C                     l22401:
  4154                           
  4155                           ; BSR set to: 1
  4156                           ;sm_MenuConfiguration_MC50.c: 281:                 {;sm_MenuConfiguration_MC50.c: 282:  
      +                                             edit_Param.tempValue--;
  4157  00147C  0649               	decf	(_edit_Param+3)^0,f,c	;volatile
  4158  00147E                     l22403:
  4159                           
  4160                           ; BSR set to: 1
  4161                           ;sm_MenuConfiguration_MC50.c: 284:                 if ((edit_Param.Value==(unsigned char
      +                          *)&var_sys_NVM.TypeofMotor)||(edit_Param.Value==(unsigned char*)&var_sys_NVM.Direction_m
      +                          otor)){
  4162  00147E  0E98               	movlw	_var_sys_NVM& (0+255)
  4163  001480  0F1C               	addlw	28
  4164  001482  0100               	movlb	0	; () banked
  4165  001484  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  4166  001486  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  4167  001488  1847               	xorwf	(_edit_Param+1)^0,w,c	;volatile
  4168  00148A  E101               	bnz	u27085
  4169  00148C  5248               	movf	(_edit_Param+2)^0,f,c	;volatile
  4170  00148E                     u27085:
  4171  00148E  B4D8               	btfsc	status,2,c
  4172  001490  D009               	goto	u27090
  4173                           
  4174                           ; BSR set to: 0
  4175  001492  0E98               	movlw	_var_sys_NVM& (0+255)
  4176  001494  0F1B               	addlw	27
  4177  001496  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  4178  001498  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  4179  00149A  1847               	xorwf	(_edit_Param+1)^0,w,c	;volatile
  4180  00149C  E101               	bnz	u27095
  4181  00149E  5248               	movf	(_edit_Param+2)^0,f,c	;volatile
  4182  0014A0                     u27095:
  4183  0014A0  A4D8               	btfss	status,2,c
  4184  0014A2  D016               	goto	l22409
  4185  0014A4                     u27090:
  4186                           
  4187                           ; BSR set to: 0
  4188                           ;sm_MenuConfiguration_MC50.c: 285:                 SetSegmentValueMain(menu_st.menuList[
      +                          edit_Param.tempValue].value_display1, menu_st.menuList[edit_Param.tempValue].value_displ
      +                          ay2);
  4189  0014A4  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4190  0014A6  0D02               	mullw	2
  4191  0014A8  0E52               	movlw	low (_menu_st+1)
  4192  0014AA  24F3               	addwf	243,w,c
  4193  0014AC  6ED9               	movwf	fsr2l,c
  4194  0014AE  0E01               	movlw	high (_menu_st+1)
  4195  0014B0  20F4               	addwfc	prodh,w,c
  4196  0014B2  6EDA               	movwf	fsr2h,c
  4197  0014B4  50DF               	movf	indf2,w,c
  4198  0014B6  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4199  0014B8  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4200  0014BA  0D02               	mullw	2
  4201  0014BC  0E51               	movlw	low _menu_st
  4202  0014BE  24F3               	addwf	243,w,c
  4203  0014C0  6ED9               	movwf	fsr2l,c
  4204  0014C2  0E01               	movlw	high _menu_st
  4205  0014C4  20F4               	addwfc	prodh,w,c
  4206  0014C6  6EDA               	movwf	fsr2h,c
  4207  0014C8  50DF               	movf	indf2,w,c
  4208  0014CA  ECDD  F047         	call	_SetSegmentValueMain
  4209                           
  4210                           ;sm_MenuConfiguration_MC50.c: 286:                 }
  4211  0014CE  D683               	goto	l22273
  4212  0014D0                     l22409:
  4213                           
  4214                           ; BSR set to: 0
  4215                           ;sm_MenuConfiguration_MC50.c: 289:                 SetSegmentValueMain(edit_Param.tempVa
      +                          lue/10, edit_Param.tempValue-((edit_Param.tempValue/10)*10));
  4216  0014D0  0E0A               	movlw	10
  4217  0014D2  6E10               	movwf	___lbdiv@divisor^0,c
  4218  0014D4  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4219  0014D6  ECE9  F044         	call	___lbdiv
  4220  0014DA  0DF6               	mullw	246
  4221  0014DC  50F3               	movf	243,w,c
  4222  0014DE  2449               	addwf	(_edit_Param+3)^0,w,c	;volatile
  4223  0014E0  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4224  0014E2  0E0A               	movlw	10
  4225  0014E4  6E10               	movwf	___lbdiv@divisor^0,c
  4226  0014E6  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4227  0014E8  ECE9  F044         	call	___lbdiv
  4228  0014EC  ECDD  F047         	call	_SetSegmentValueMain
  4229  0014F0  D672               	goto	l22273
  4230  0014F2                     l22413:
  4231                           
  4232                           ; BSR set to: 0
  4233  0014F2  0E17               	movlw	23
  4234  0014F4  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  4235  0014F6  A4D8               	btfss	status,2,c
  4236  0014F8  D045               	goto	l22433
  4237                           
  4238                           ; BSR set to: 0
  4239                           ;sm_MenuConfiguration_MC50.c: 294:             {;sm_MenuConfiguration_MC50.c: 295:      
      +                                     ts_system.timeoutMenu=((1000/50)*5) ;
  4240  0014FA  0E00               	movlw	0
  4241  0014FC  0101               	movlb	1	; () banked
  4242  0014FE  6FA9               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4243  001500  0E64               	movlw	100
  4244  001502  6FA8               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4245                           
  4246                           ; BSR set to: 1
  4247                           ;sm_MenuConfiguration_MC50.c: 296:                 edit_Param.tempValue++;
  4248  001504  2A49               	incf	(_edit_Param+3)^0,f,c	;volatile
  4249                           
  4250                           ; BSR set to: 1
  4251                           ;sm_MenuConfiguration_MC50.c: 297:                 if(edit_Param.tempValue>edit_Param.Ma
      +                          x)
  4252  001506  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4253  001508  5C4A               	subwf	(_edit_Param+4)^0,w,c	;volatile
  4254  00150A  A0D8               	btfss	status,0,c
  4255                           
  4256                           ; BSR set to: 1
  4257                           ;sm_MenuConfiguration_MC50.c: 298:                 {;sm_MenuConfiguration_MC50.c: 299:  
      +                                              edit_Param.tempValue=edit_Param.Min;
  4258  00150C  C04B  F049         	movff	_edit_Param+5,_edit_Param+3	;volatile
  4259                           
  4260                           ; BSR set to: 1
  4261                           ;sm_MenuConfiguration_MC50.c: 301:                 if ((edit_Param.Value==(unsigned char
      +                          *)&var_sys_NVM.TypeofMotor)||(edit_Param.Value==(unsigned char*)&var_sys_NVM.Direction_m
      +                          otor)){
  4262  001510  0E98               	movlw	_var_sys_NVM& (0+255)
  4263  001512  0F1C               	addlw	28
  4264  001514  0100               	movlb	0	; () banked
  4265  001516  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  4266  001518  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  4267  00151A  1847               	xorwf	(_edit_Param+1)^0,w,c	;volatile
  4268  00151C  E101               	bnz	u27125
  4269  00151E  5248               	movf	(_edit_Param+2)^0,f,c	;volatile
  4270  001520                     u27125:
  4271  001520  B4D8               	btfsc	status,2,c
  4272  001522  D009               	goto	u27130
  4273                           
  4274                           ; BSR set to: 0
  4275  001524  0E98               	movlw	_var_sys_NVM& (0+255)
  4276  001526  0F1B               	addlw	27
  4277  001528  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  4278  00152A  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  4279  00152C  1847               	xorwf	(_edit_Param+1)^0,w,c	;volatile
  4280  00152E  E101               	bnz	u27135
  4281  001530  5248               	movf	(_edit_Param+2)^0,f,c	;volatile
  4282  001532                     u27135:
  4283  001532  A4D8               	btfss	status,2,c
  4284  001534  D016               	goto	l22429
  4285  001536                     u27130:
  4286                           
  4287                           ; BSR set to: 0
  4288                           ;sm_MenuConfiguration_MC50.c: 302:                     SetSegmentValueMain(menu_st.menuL
      +                          ist[edit_Param.tempValue].value_display1, menu_st.menuList[edit_Param.tempValue].value_d
      +                          isplay2);
  4289  001536  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4290  001538  0D02               	mullw	2
  4291  00153A  0E52               	movlw	low (_menu_st+1)
  4292  00153C  24F3               	addwf	243,w,c
  4293  00153E  6ED9               	movwf	fsr2l,c
  4294  001540  0E01               	movlw	high (_menu_st+1)
  4295  001542  20F4               	addwfc	prodh,w,c
  4296  001544  6EDA               	movwf	fsr2h,c
  4297  001546  50DF               	movf	indf2,w,c
  4298  001548  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4299  00154A  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4300  00154C  0D02               	mullw	2
  4301  00154E  0E51               	movlw	low _menu_st
  4302  001550  24F3               	addwf	243,w,c
  4303  001552  6ED9               	movwf	fsr2l,c
  4304  001554  0E01               	movlw	high _menu_st
  4305  001556  20F4               	addwfc	prodh,w,c
  4306  001558  6EDA               	movwf	fsr2h,c
  4307  00155A  50DF               	movf	indf2,w,c
  4308  00155C  ECDD  F047         	call	_SetSegmentValueMain
  4309                           
  4310                           ;sm_MenuConfiguration_MC50.c: 303:                 }
  4311  001560  D63A               	goto	l22273
  4312  001562                     l22429:
  4313                           
  4314                           ; BSR set to: 0
  4315                           ;sm_MenuConfiguration_MC50.c: 306:                 SetSegmentValueMain(edit_Param.tempVa
      +                          lue/10, edit_Param.tempValue-((edit_Param.tempValue/10)*10));
  4316  001562  0E0A               	movlw	10
  4317  001564  6E10               	movwf	___lbdiv@divisor^0,c
  4318  001566  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4319  001568  ECE9  F044         	call	___lbdiv
  4320  00156C  0DF6               	mullw	246
  4321  00156E  50F3               	movf	243,w,c
  4322  001570  2449               	addwf	(_edit_Param+3)^0,w,c	;volatile
  4323  001572  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4324  001574  0E0A               	movlw	10
  4325  001576  6E10               	movwf	___lbdiv@divisor^0,c
  4326  001578  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4327  00157A  ECE9  F044         	call	___lbdiv
  4328  00157E  ECDD  F047         	call	_SetSegmentValueMain
  4329  001582  D629               	goto	l22273
  4330  001584                     l22433:
  4331                           
  4332                           ; BSR set to: 0
  4333  001584  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  4334  001586  A4D8               	btfss	status,2,c
  4335  001588  D023               	goto	l22449
  4336                           
  4337                           ; BSR set to: 0
  4338  00158A  0E09               	movlw	9
  4339  00158C  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  4340  00158E  D020               	goto	l22449
  4341                           
  4342                           ; BSR set to: 0
  4343                           ;sm_MenuConfiguration_MC50.c: 312:             {;sm_MenuConfiguration_MC50.c: 313:      
      +                                     ts_system.timeoutMenu=((1000/50)*5) ;
  4344  001590  0E00               	movlw	0
  4345  001592  0101               	movlb	1	; () banked
  4346  001594  6FA9               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4347  001596  0E64               	movlw	100
  4348  001598  6FA8               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4349                           
  4350                           ; BSR set to: 1
  4351                           ;sm_MenuConfiguration_MC50.c: 315:                 edit_Param.Value[0]=edit_Param.tempVa
      +                          lue;
  4352  00159A  C047  FFD9         	movff	_edit_Param+1,fsr2l	;volatile
  4353  00159E  C048  FFDA         	movff	_edit_Param+2,fsr2h	;volatile
  4354  0015A2  C049  FFDF         	movff	_edit_Param+3,indf2	;volatile
  4355                           
  4356                           ; BSR set to: 1
  4357                           ;sm_MenuConfiguration_MC50.c: 316:                 sm_send_event(&menuConfiguration_stat
      +                          eMachine, ev_ParameterIsEdited);
  4358  0015A6  0EBD               	movlw	low _menuConfiguration_stateMachine
  4359  0015A8  6E12               	movwf	sm_send_event@psm^0,c
  4360  0015AA  0E02               	movlw	high _menuConfiguration_stateMachine
  4361  0015AC  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4362  0015AE  0E00               	movlw	0
  4363  0015B0  6E15               	movwf	(sm_send_event@event+1)^0,c
  4364  0015B2  0E02               	movlw	2
  4365  0015B4  6E14               	movwf	sm_send_event@event^0,c
  4366  0015B6  EC25  F041         	call	_sm_send_event	;wreg free
  4367                           
  4368                           ;sm_MenuConfiguration_MC50.c: 317:                 SetSegmentValueMain(dBar,d1);
  4369  0015BA  0E01               	movlw	1
  4370  0015BC  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4371  0015BE  0E19               	movlw	25
  4372  0015C0  ECDD  F047         	call	_SetSegmentValueMain
  4373                           
  4374                           ; BSR set to: 0
  4375                           ;sm_MenuConfiguration_MC50.c: 318:                 ts_system.timeSinalizationDigit=((100
      +                          0/50)*2);
  4376  0015C4  0E00               	movlw	0
  4377  0015C6  0101               	movlb	1	; () banked
  4378  0015C8  6FA7               	movwf	(_ts_system+13)& (0+255),b	;volatile
  4379  0015CA  0E28               	movlw	40
  4380  0015CC  6FA6               	movwf	(_ts_system+12)& (0+255),b	;volatile
  4381  0015CE  D603               	goto	l22273
  4382  0015D0                     l22449:
  4383                           
  4384                           ; BSR set to: 0
  4385  0015D0  0101               	movlb	1	; () banked
  4386  0015D2  BFA9               	btfsc	(_ts_system+15)& (0+255),7,b	;volatile
  4387  0015D4  D008               	goto	u27170
  4388  0015D6  51A9               	movf	(_ts_system+15)& (0+255),w,b	;volatile
  4389  0015D8  E103               	bnz	u27160
  4390  0015DA  05A8               	decf	(_ts_system+14)& (0+255),w,b	;volatile
  4391  0015DC  A0D8               	btfss	status,0,c
  4392  0015DE  D003               	goto	u27170
  4393  0015E0                     u27160:
  4394                           
  4395                           ; BSR set to: 1
  4396  0015E0  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  4397  0015E2  A4D8               	btfss	status,2,c
  4398  0015E4  0012               	return	
  4399  0015E6                     u27170:
  4400                           
  4401                           ; BSR set to: 1
  4402                           ;sm_MenuConfiguration_MC50.c: 323:             {;sm_MenuConfiguration_MC50.c: 324:      
      +                                     ts_system.timeoutMenu=((1000/50)*5) ;
  4403  0015E6  0E00               	movlw	0
  4404  0015E8  6FA9               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4405  0015EA  0E64               	movlw	100
  4406  0015EC  6FA8               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4407                           
  4408                           ; BSR set to: 1
  4409                           ;sm_MenuConfiguration_MC50.c: 325:                 load_New_Menu(menu_st.actualMenu);
  4410  0015EE  5166               	movf	(_menu_st+21)& (0+255),w,b
  4411  0015F0  EC7D  F01E         	call	_load_New_Menu
  4412                           
  4413                           ;sm_MenuConfiguration_MC50.c: 326:                 sm_send_event(&menuConfiguration_stat
      +                          eMachine, ev_CancelEdition);
  4414  0015F4  0EBD               	movlw	low _menuConfiguration_stateMachine
  4415  0015F6  6E12               	movwf	sm_send_event@psm^0,c
  4416  0015F8  0E02               	movlw	high _menuConfiguration_stateMachine
  4417  0015FA  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4418  0015FC  0E00               	movlw	0
  4419  0015FE  6E15               	movwf	(sm_send_event@event+1)^0,c
  4420  001600  0E03               	movlw	3
  4421  001602  6E14               	movwf	sm_send_event@event^0,c
  4422  001604  EC25  F041         	call	_sm_send_event	;wreg free
  4423  001608  D5E6               	goto	l22273
  4424  00160A                     l22461:
  4425                           
  4426                           ; BSR set to: 0
  4427                           ;sm_MenuConfiguration_MC50.c: 332:         {;sm_MenuConfiguration_MC50.c: 333:          
      +                             if (ts_system.timeSinalizationDigit<=0)
  4428  00160A  0101               	movlb	1	; () banked
  4429  00160C  BFA7               	btfsc	(_ts_system+13)& (0+255),7,b	;volatile
  4430  00160E  D005               	goto	u27180
  4431  001610  51A7               	movf	(_ts_system+13)& (0+255),w,b	;volatile
  4432  001612  E102               	bnz	u27181
  4433  001614  05A6               	decf	(_ts_system+12)& (0+255),w,b	;volatile
  4434  001616  B0D8               	btfsc	status,0,c
  4435  001618                     u27181:
  4436  001618  0012               	return	
  4437  00161A                     u27180:
  4438                           
  4439                           ; BSR set to: 1
  4440                           ;sm_MenuConfiguration_MC50.c: 334:             {;sm_MenuConfiguration_MC50.c: 335:      
      +                                     ts_system.timeoutMenu=((1000/50)*5) ;
  4441  00161A  0E00               	movlw	0
  4442  00161C  6FA9               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4443  00161E  0E64               	movlw	100
  4444  001620  6FA8               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4445                           
  4446                           ; BSR set to: 1
  4447                           ;sm_MenuConfiguration_MC50.c: 337:                 if((menu_st.actualMenu==E_Menu && men
      +                          u_st.parameterSelected==8)||(edit_Param.Value==(unsigned char*)&var_sys_NVM.TypeofMotor)
      +                          )
  4448  001622  0566               	decf	(_menu_st+21)& (0+255),w,b
  4449  001624  A4D8               	btfss	status,2,c
  4450  001626  D004               	goto	u27200
  4451                           
  4452                           ; BSR set to: 1
  4453  001628  0E08               	movlw	8
  4454  00162A  1968               	xorwf	(_menu_st+23)& (0+255),w,b
  4455  00162C  B4D8               	btfsc	status,2,c
  4456  00162E  D00A               	goto	u27210
  4457  001630                     u27200:
  4458                           
  4459                           ; BSR set to: 1
  4460  001630  0E98               	movlw	_var_sys_NVM& (0+255)
  4461  001632  0F1C               	addlw	28
  4462  001634  0100               	movlb	0	; () banked
  4463  001636  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  4464  001638  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  4465  00163A  1847               	xorwf	(_edit_Param+1)^0,w,c	;volatile
  4466  00163C  E101               	bnz	u27215
  4467  00163E  5248               	movf	(_edit_Param+2)^0,f,c	;volatile
  4468  001640                     u27215:
  4469  001640  A4D8               	btfss	status,2,c
  4470  001642  D005               	goto	l22473
  4471  001644                     u27210:
  4472                           
  4473                           ;sm_MenuConfiguration_MC50.c: 338:                 {;sm_MenuConfiguration_MC50.c: 341:  
      +                                             ResetDefaultMemory(var_sys_NVM.TypeofMotor);
  4474  001644  0100               	movlb	0	; () banked
  4475  001646  51B4               	movf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
  4476  001648  ECAF  F02D         	call	_ResetDefaultMemory
  4477                           
  4478                           ;sm_MenuConfiguration_MC50.c: 343:                 }
  4479  00164C  D023               	goto	l22491
  4480  00164E                     l22473:
  4481                           
  4482                           ; BSR set to: 0
  4483  00164E  0101               	movlb	1	; () banked
  4484  001650  0566               	decf	(_menu_st+21)& (0+255),w,b
  4485  001652  B4D8               	btfsc	status,2,c
  4486  001654  D004               	goto	u27230
  4487                           
  4488                           ; BSR set to: 1
  4489  001656  0E0A               	movlw	10
  4490  001658  1966               	xorwf	(_menu_st+21)& (0+255),w,b
  4491  00165A  A4D8               	btfss	status,2,c
  4492  00165C  D004               	goto	l22479
  4493  00165E                     u27230:
  4494                           
  4495                           ; BSR set to: 1
  4496                           ;sm_MenuConfiguration_MC50.c: 345:                 {;sm_MenuConfiguration_MC50.c: 346:  
      +                                             SaveNVM_VarSystem(pageMemoryE);
  4497  00165E  0E01               	movlw	1
  4498  001660  EC06  F045         	call	_SaveNVM_VarSystem
  4499                           
  4500                           ;sm_MenuConfiguration_MC50.c: 347:                 }
  4501  001664  D017               	goto	l22491
  4502  001666                     l22479:
  4503                           
  4504                           ; BSR set to: 1
  4505                           ;sm_MenuConfiguration_MC50.c: 349:                 {;sm_MenuConfiguration_MC50.c: 350:  
      +                                             if (menu_st.parameterSelected == 1 && edit_Param.Value[0] >=1 && menu
      +                          _st.actualMenu == P2_SMenu )
  4506  001666  0568               	decf	(_menu_st+23)& (0+255),w,b
  4507  001668  A4D8               	btfss	status,2,c
  4508  00166A  D00E               	goto	l22487
  4509                           
  4510                           ; BSR set to: 1
  4511  00166C  C047  FFD9         	movff	_edit_Param+1,fsr2l	;volatile
  4512  001670  C048  FFDA         	movff	_edit_Param+2,fsr2h	;volatile
  4513  001674  50DF               	movf	indf2,w,c
  4514  001676  B4D8               	btfsc	status,2,c
  4515  001678  D007               	goto	l22487
  4516                           
  4517                           ; BSR set to: 1
  4518  00167A  0E06               	movlw	6
  4519  00167C  1966               	xorwf	(_menu_st+21)& (0+255),w,b
  4520  00167E  A4D8               	btfss	status,2,c
  4521  001680  D003               	goto	l22487
  4522                           
  4523                           ; BSR set to: 1
  4524                           ;sm_MenuConfiguration_MC50.c: 351:                     {;sm_MenuConfiguration_MC50.c: 35
      +                          2:                       var_sys_NVM.motorPower = 9;
  4525  001682  0E09               	movlw	9
  4526  001684  0100               	movlb	0	; () banked
  4527  001686  6F9A               	movwf	(_var_sys_NVM+2)& (0+255),b	;volatile
  4528  001688                     l22487:
  4529                           
  4530                           ;sm_MenuConfiguration_MC50.c: 355:                       SaveNVM_VarSystem(pageMemoryE);
  4531  001688  0E01               	movlw	1
  4532  00168A  EC06  F045         	call	_SaveNVM_VarSystem
  4533                           
  4534                           ;sm_MenuConfiguration_MC50.c: 356:                       SaveNVM_VarSystem(pageMemoryP);
  4535  00168E  0E00               	movlw	0
  4536  001690  EC06  F045         	call	_SaveNVM_VarSystem
  4537  001694                     l22491:
  4538                           
  4539                           ;sm_MenuConfiguration_MC50.c: 360:                 sm_send_event(&menuConfiguration_stat
      +                          eMachine, ev_ParameterIsSaved);
  4540  001694  0EBD               	movlw	low _menuConfiguration_stateMachine
  4541  001696  6E12               	movwf	sm_send_event@psm^0,c
  4542  001698  0E02               	movlw	high _menuConfiguration_stateMachine
  4543  00169A  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4544  00169C  0E00               	movlw	0
  4545  00169E  6E15               	movwf	(sm_send_event@event+1)^0,c
  4546  0016A0  0E04               	movlw	4
  4547  0016A2  6E14               	movwf	sm_send_event@event^0,c
  4548  0016A4  EC25  F041         	call	_sm_send_event	;wreg free
  4549                           
  4550                           ;sm_MenuConfiguration_MC50.c: 363:                 menu_st.parameterSelected++;
  4551  0016A8  0101               	movlb	1	; () banked
  4552  0016AA  2B68               	incf	(_menu_st+23)& (0+255),f,b
  4553                           
  4554                           ; BSR set to: 1
  4555                           ;sm_MenuConfiguration_MC50.c: 364:                 if(menu_st.actualMenu<=E_Menu)
  4556  0016AC  0E02               	movlw	2
  4557  0016AE  6166               	cpfslt	(_menu_st+21)& (0+255),b
  4558  0016B0  D005               	goto	l22501
  4559                           
  4560                           ; BSR set to: 1
  4561                           ;sm_MenuConfiguration_MC50.c: 365:                 {;sm_MenuConfiguration_MC50.c: 366:  
      +                                             menu_st.lastMainParameterSelected++;
  4562  0016B2  2B69               	incf	(_menu_st+24)& (0+255),f,b
  4563                           
  4564                           ; BSR set to: 1
  4565                           ;sm_MenuConfiguration_MC50.c: 367:                     load_New_Menu(menu_st.actualMenu)
      +                          ;
  4566  0016B4  5166               	movf	(_menu_st+21)& (0+255),w,b
  4567  0016B6  EC7D  F01E         	call	_load_New_Menu
  4568                           
  4569                           ;sm_MenuConfiguration_MC50.c: 368:                 }
  4570  0016BA  0012               	return	
  4571  0016BC                     l22501:
  4572                           
  4573                           ; BSR set to: 1
  4574  0016BC  5167               	movf	(_menu_st+22)& (0+255),w,b
  4575  0016BE  5D68               	subwf	(_menu_st+23)& (0+255),w,b
  4576  0016C0  A0D8               	btfss	status,0,c
  4577  0016C2  D005               	goto	l22507
  4578                           
  4579                           ; BSR set to: 1
  4580                           ;sm_MenuConfiguration_MC50.c: 370:                 {;sm_MenuConfiguration_MC50.c: 371:  
      +                                             menu_st.lastMainParameterSelected++;
  4581  0016C4  2B69               	incf	(_menu_st+24)& (0+255),f,b
  4582                           
  4583                           ; BSR set to: 1
  4584                           ;sm_MenuConfiguration_MC50.c: 372:                     load_New_Menu(menu_st.lastMenu);
  4585  0016C6  5165               	movf	(_menu_st+20)& (0+255),w,b
  4586  0016C8  EC7D  F01E         	call	_load_New_Menu
  4587                           
  4588                           ;sm_MenuConfiguration_MC50.c: 373:                 }
  4589  0016CC  0012               	return	
  4590  0016CE                     l22507:
  4591                           
  4592                           ; BSR set to: 1
  4593                           ;sm_MenuConfiguration_MC50.c: 375:                 {;sm_MenuConfiguration_MC50.c: 376:  
      +                                             load_New_Menu(menu_st.actualMenu);
  4594  0016CE  5166               	movf	(_menu_st+21)& (0+255),w,b
  4595  0016D0  EC7D  F01E         	call	_load_New_Menu
  4596  0016D4  0012               	return	
  4597  0016D6                     l22509:
  4598                           
  4599                           ; BSR set to: 0
  4600                           ;sm_MenuConfiguration_MC50.c: 382:         {;sm_MenuConfiguration_MC50.c: 383:          
      +                             if(ts_system.timeoutMenu<=0)
  4601  0016D6  0101               	movlb	1	; () banked
  4602  0016D8  BFA9               	btfsc	(_ts_system+15)& (0+255),7,b	;volatile
  4603  0016DA  D005               	goto	u27290
  4604  0016DC  51A9               	movf	(_ts_system+15)& (0+255),w,b	;volatile
  4605  0016DE  E102               	bnz	u27291
  4606  0016E0  05A8               	decf	(_ts_system+14)& (0+255),w,b	;volatile
  4607  0016E2  B0D8               	btfsc	status,0,c
  4608  0016E4                     u27291:
  4609  0016E4  0012               	return	
  4610  0016E6                     u27290:
  4611                           
  4612                           ; BSR set to: 1
  4613                           ;sm_MenuConfiguration_MC50.c: 384:             {;sm_MenuConfiguration_MC50.c: 386:      
      +                                     if(auxCounter<=0){
  4614  0016E6  0100               	movlb	0	; () banked
  4615  0016E8  51F8               	movf	_auxCounter& (0+255),w,b
  4616  0016EA  11F9               	iorwf	(_auxCounter+1)& (0+255),w,b
  4617  0016EC  A4D8               	btfss	status,2,c
  4618  0016EE  D010               	goto	l22519
  4619                           
  4620                           ; BSR set to: 0
  4621                           ;sm_MenuConfiguration_MC50.c: 387:                     menu_st.lastMainParameterSelected
      +                          ++;
  4622  0016F0  0101               	movlb	1	; () banked
  4623  0016F2  2B69               	incf	(_menu_st+24)& (0+255),f,b
  4624                           
  4625                           ; BSR set to: 1
  4626                           ;sm_MenuConfiguration_MC50.c: 388:                     load_New_Menu(menu_st.actualMenu)
      +                          ;
  4627  0016F4  5166               	movf	(_menu_st+21)& (0+255),w,b
  4628  0016F6  EC7D  F01E         	call	_load_New_Menu
  4629                           
  4630                           ;sm_MenuConfiguration_MC50.c: 389:                     sm_send_event(&menuConfiguration_
      +                          stateMachine, ev_ParameterIsSaved);
  4631  0016FA  0EBD               	movlw	low _menuConfiguration_stateMachine
  4632  0016FC  6E12               	movwf	sm_send_event@psm^0,c
  4633  0016FE  0E02               	movlw	high _menuConfiguration_stateMachine
  4634  001700  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4635  001702  0E00               	movlw	0
  4636  001704  6E15               	movwf	(sm_send_event@event+1)^0,c
  4637  001706  0E04               	movlw	4
  4638  001708  6E14               	movwf	sm_send_event@event^0,c
  4639  00170A  EC25  F041         	call	_sm_send_event	;wreg free
  4640                           
  4641                           ;sm_MenuConfiguration_MC50.c: 390:                 }
  4642  00170E  0012               	return	
  4643  001710                     l22519:
  4644                           
  4645                           ; BSR set to: 0
  4646                           ;sm_MenuConfiguration_MC50.c: 392:                 {;sm_MenuConfiguration_MC50.c: 393:  
      +                                             ts_system.timeoutMenu=(1000/50)*3;
  4647  001710  0E00               	movlw	0
  4648  001712  0101               	movlb	1	; () banked
  4649  001714  6FA9               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4650  001716  0E3C               	movlw	60
  4651  001718  6FA8               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4652                           
  4653                           ; BSR set to: 1
  4654                           ;sm_MenuConfiguration_MC50.c: 394:                     edit_Param.tempValue=(unsigned ch
      +                          ar)(tempCounter/auxCounter);
  4655  00171A  C1F9  F010         	movff	_tempCounter,___lldiv@dividend
  4656  00171E  C1FA  F011         	movff	_tempCounter+1,___lldiv@dividend+1
  4657  001722  C1FB  F012         	movff	_tempCounter+2,___lldiv@dividend+2
  4658  001726  C1FC  F013         	movff	_tempCounter+3,___lldiv@dividend+3
  4659  00172A  C0F8  F014         	movff	_auxCounter,___lldiv@divisor
  4660  00172E  C0F9  F015         	movff	_auxCounter+1,___lldiv@divisor+1
  4661  001732  6A16               	clrf	(___lldiv@divisor+2)^0,c
  4662  001734  6A17               	clrf	(___lldiv@divisor+3)^0,c
  4663  001736  EC22  F03D         	call	___lldiv	;wreg free
  4664  00173A  5010               	movf	?___lldiv^0,w,c
  4665  00173C  6E49               	movwf	(_edit_Param+3)^0,c	;volatile
  4666                           
  4667                           ;sm_MenuConfiguration_MC50.c: 395:                     tempCounter=tempCounter-(tempCoun
      +                          ter/auxCounter*auxCounter);
  4668  00173E  C0F8  F014         	movff	_auxCounter,___lldiv@divisor
  4669  001742  C0F9  F015         	movff	_auxCounter+1,___lldiv@divisor+1
  4670  001746  6A16               	clrf	(___lldiv@divisor+2)^0,c
  4671  001748  6A17               	clrf	(___lldiv@divisor+3)^0,c
  4672  00174A  C1F9  F010         	movff	_tempCounter,___lldiv@dividend
  4673  00174E  C1FA  F011         	movff	_tempCounter+1,___lldiv@dividend+1
  4674  001752  C1FB  F012         	movff	_tempCounter+2,___lldiv@dividend+2
  4675  001756  C1FC  F013         	movff	_tempCounter+3,___lldiv@dividend+3
  4676  00175A  EC22  F03D         	call	___lldiv	;wreg free
  4677  00175E  C010  F01D         	movff	?___lldiv,___lmul@multiplier
  4678  001762  C011  F01E         	movff	?___lldiv+1,___lmul@multiplier+1
  4679  001766  C012  F01F         	movff	?___lldiv+2,___lmul@multiplier+2
  4680  00176A  C013  F020         	movff	?___lldiv+3,___lmul@multiplier+3
  4681  00176E  C0F8  F021         	movff	_auxCounter,___lmul@multiplicand
  4682  001772  C0F9  F022         	movff	_auxCounter+1,___lmul@multiplicand+1
  4683  001776  6A23               	clrf	(___lmul@multiplicand+2)^0,c
  4684  001778  6A24               	clrf	(___lmul@multiplicand+3)^0,c
  4685  00177A  EC33  F042         	call	___lmul	;wreg free
  4686  00177E  501D               	movf	?___lmul^0,w,c
  4687  001780  0101               	movlb	1	; () banked
  4688  001782  5DF9               	subwf	_tempCounter& (0+255),w,b
  4689  001784  6FF9               	movwf	_tempCounter& (0+255),b
  4690  001786  501E               	movf	(?___lmul+1)^0,w,c
  4691  001788  59FA               	subwfb	(_tempCounter+1)& (0+255),w,b
  4692  00178A  6FFA               	movwf	(_tempCounter+1)& (0+255),b
  4693  00178C  501F               	movf	(?___lmul+2)^0,w,c
  4694  00178E  59FB               	subwfb	(_tempCounter+2)& (0+255),w,b
  4695  001790  6FFB               	movwf	(_tempCounter+2)& (0+255),b
  4696  001792  5020               	movf	(?___lmul+3)^0,w,c
  4697  001794  59FC               	subwfb	(_tempCounter+3)& (0+255),w,b
  4698  001796  6FFC               	movwf	(_tempCounter+3)& (0+255),b
  4699                           
  4700                           ; BSR set to: 1
  4701                           ;sm_MenuConfiguration_MC50.c: 396:                     auxCounter=auxCounter/100;
  4702  001798  C0F8  F010         	movff	_auxCounter,___lwdiv@dividend
  4703  00179C  C0F9  F011         	movff	_auxCounter+1,___lwdiv@dividend+1
  4704  0017A0  0E00               	movlw	0
  4705  0017A2  6E13               	movwf	(___lwdiv@divisor+1)^0,c
  4706  0017A4  0E64               	movlw	100
  4707  0017A6  6E12               	movwf	___lwdiv@divisor^0,c
  4708  0017A8  ECB3  F042         	call	___lwdiv	;wreg free
  4709  0017AC  C010  F0F8         	movff	?___lwdiv,_auxCounter
  4710  0017B0  C011  F0F9         	movff	?___lwdiv+1,_auxCounter+1
  4711                           
  4712                           ;sm_MenuConfiguration_MC50.c: 397:                     SetSegmentValueIntermitentMain(ed
      +                          it_Param.tempValue/10, edit_Param.tempValue-((edit_Param.tempValue/10)*10),( 500/50));
  4713  0017B4  0E0A               	movlw	10
  4714  0017B6  6E10               	movwf	___lbdiv@divisor^0,c
  4715  0017B8  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4716  0017BA  ECE9  F044         	call	___lbdiv
  4717  0017BE  0DF6               	mullw	246
  4718  0017C0  50F3               	movf	243,w,c
  4719  0017C2  2449               	addwf	(_edit_Param+3)^0,w,c	;volatile
  4720  0017C4  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  4721  0017C6  0E00               	movlw	0
  4722  0017C8  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  4723  0017CA  0E0A               	movlw	10
  4724  0017CC  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  4725  0017CE  0E0A               	movlw	10
  4726  0017D0  6E10               	movwf	___lbdiv@divisor^0,c
  4727  0017D2  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4728  0017D4  ECE9  F044         	call	___lbdiv
  4729  0017D8  EC79  F048         	call	_SetSegmentValueIntermitentMain
  4730  0017DC  0012               	return	
  4731  0017DE                     l22529:
  4732                           
  4733                           ; BSR set to: 0
  4734                           ;sm_MenuConfiguration_MC50.c: 403:         {;sm_MenuConfiguration_MC50.c: 404:          
      +                             if(firstselectflag==1){
  4735  0017DE  0101               	movlb	1	; () banked
  4736  0017E0  05FD               	decf	_firstselectflag& (0+255),w,b
  4737  0017E2  A4D8               	btfss	status,2,c
  4738  0017E4  D004               	goto	l22533
  4739                           
  4740                           ; BSR set to: 1
  4741                           ;sm_MenuConfiguration_MC50.c: 405:                 edit_Param.tempValue=0;
  4742  0017E6  0E00               	movlw	0
  4743  0017E8  6E49               	movwf	(_edit_Param+3)^0,c	;volatile
  4744                           
  4745                           ;sm_MenuConfiguration_MC50.c: 406:                 firstselectflag=0;
  4746  0017EA  0E00               	movlw	0
  4747  0017EC  6FFD               	movwf	_firstselectflag& (0+255),b
  4748  0017EE                     l22533:
  4749                           
  4750                           ; BSR set to: 1
  4751                           ;sm_MenuConfiguration_MC50.c: 408:             controlSelectRemote();
  4752  0017EE  EC6A  F019         	call	_controlSelectRemote	;wreg free
  4753                           
  4754                           ;sm_MenuConfiguration_MC50.c: 409:         };sm_MenuConfiguration_MC50.c: 410:         b
      +                          reak;
  4755  0017F2  0012               	return	
  4756  0017F4                     l22535:
  4757                           
  4758                           ; BSR set to: 0
  4759                           ;sm_MenuConfiguration_MC50.c: 412:         {;sm_MenuConfiguration_MC50.c: 413:          
      +                             controlSaveRemote();
  4760  0017F4  ECC5  F038         	call	_controlSaveRemote	;wreg free
  4761                           
  4762                           ;sm_MenuConfiguration_MC50.c: 414:         };sm_MenuConfiguration_MC50.c: 415:         b
      +                          reak;
  4763  0017F8  0012               	return	
  4764  0017FA                     l22537:
  4765                           
  4766                           ; BSR set to: 0
  4767                           ;sm_MenuConfiguration_MC50.c: 417:         {;sm_MenuConfiguration_MC50.c: 418:          
      +                             controlLearnDigit();
  4768  0017FA  EC6E  F045         	call	_controlLearnDigit	;wreg free
  4769                           
  4770                           ;sm_MenuConfiguration_MC50.c: 419:             if(var_sys.LearningIsEnabled==NO)
  4771  0017FE  0101               	movlb	1	; () banked
  4772  001800  5126               	movf	(_var_sys+38)& (0+255),w,b	;volatile
  4773  001802  A4D8               	btfss	status,2,c
  4774  001804  0012               	return	
  4775                           
  4776                           ; BSR set to: 1
  4777                           ;sm_MenuConfiguration_MC50.c: 420:             {;sm_MenuConfiguration_MC50.c: 421:      
      +                                     sm_send_event(&main_stateMachine, ev_goto_StandBy);
  4778  001806  0EED               	movlw	low _main_stateMachine
  4779  001808  6E12               	movwf	sm_send_event@psm^0,c
  4780  00180A  0E01               	movlw	high _main_stateMachine
  4781  00180C  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4782  00180E  0E00               	movlw	0
  4783  001810  6E15               	movwf	(sm_send_event@event+1)^0,c
  4784  001812  0E07               	movlw	7
  4785  001814  6E14               	movwf	sm_send_event@event^0,c
  4786  001816  EC25  F041         	call	_sm_send_event	;wreg free
  4787                           
  4788                           ;sm_MenuConfiguration_MC50.c: 422:                 sm_send_event(&menuConfiguration_stat
      +                          eMachine, ev_ParameterIsSaved);
  4789  00181A  0EBD               	movlw	low _menuConfiguration_stateMachine
  4790  00181C  6E12               	movwf	sm_send_event@psm^0,c
  4791  00181E  0E02               	movlw	high _menuConfiguration_stateMachine
  4792  001820  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4793  001822  0E00               	movlw	0
  4794  001824  6E15               	movwf	(sm_send_event@event+1)^0,c
  4795  001826  0E04               	movlw	4
  4796  001828  6E14               	movwf	sm_send_event@event^0,c
  4797  00182A  EC25  F041         	call	_sm_send_event	;wreg free
  4798                           
  4799                           ;sm_MenuConfiguration_MC50.c: 423:                 SetSegmentValueMain(dMinus,dMinus);
  4800  00182E  0E18               	movlw	24
  4801  001830  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4802  001832  0E18               	movlw	24
  4803  001834  ECDD  F047         	call	_SetSegmentValueMain
  4804                           
  4805                           ; BSR set to: 0
  4806                           ;sm_MenuConfiguration_MC50.c: 424:                 SaveNVM_VarSystem(pageMemoryCounters)
      +                          ;
  4807  001838  0E02               	movlw	2
  4808  00183A  EC06  F045         	call	_SaveNVM_VarSystem
  4809  00183E  D5E9               	goto	l22375
  4810  001840                     l22553:
  4811  001840  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  4812  001844  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  4813  001848  50DF               	movf	indf2,w,c
  4814  00184A  0100               	movlb	0	; () banked
  4815  00184C  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  4816  00184E  6BEC               	clrf	(??_sm_execute_menuConfiguration+1)& (0+255),b
  4817                           
  4818                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4819                           ; Switch size 1, requested type "simple"
  4820                           ; Number of cases is 1, Range of values is 0 to 0
  4821                           ; switch strategies available:
  4822                           ; Name         Instructions Cycles
  4823                           ; simple_byte            4     3 (average)
  4824                           ;	Chosen strategy is simple_byte
  4825  001850  51EC               	movf	(??_sm_execute_menuConfiguration+1)& (0+255),w,b
  4826  001852  0A00               	xorlw	0	; case 0
  4827  001854  A4D8               	btfss	status,2,c
  4828  001856  0012               	return	
  4829                           
  4830                           ; BSR set to: 0
  4831                           ; Switch size 1, requested type "simple"
  4832                           ; Number of cases is 7, Range of values is 0 to 6
  4833                           ; switch strategies available:
  4834                           ; Name         Instructions Cycles
  4835                           ; simple_byte           22    12 (average)
  4836                           ;	Chosen strategy is simple_byte
  4837  001858  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  4838  00185A  0A00               	xorlw	0	; case 0
  4839  00185C  B4D8               	btfsc	status,2,c
  4840  00185E  D431               	goto	l22243
  4841  001860  0A01               	xorlw	1	; case 1
  4842  001862  B4D8               	btfsc	status,2,c
  4843  001864  D5FC               	goto	l22393
  4844  001866  0A03               	xorlw	3	; case 2
  4845  001868  B4D8               	btfsc	status,2,c
  4846  00186A  D6CF               	goto	l22461
  4847  00186C  0A01               	xorlw	1	; case 3
  4848  00186E  B4D8               	btfsc	status,2,c
  4849  001870  D732               	goto	l22509
  4850  001872  0A07               	xorlw	7	; case 4
  4851  001874  B4D8               	btfsc	status,2,c
  4852  001876  D7B3               	goto	l22529
  4853  001878  0A01               	xorlw	1	; case 5
  4854  00187A  B4D8               	btfsc	status,2,c
  4855  00187C  D7BB               	goto	l22535
  4856  00187E  0A03               	xorlw	3	; case 6
  4857  001880  A4D8               	btfss	status,2,c
  4858  001882  0012               	return	
  4859  001884  D7BA               	goto	l22537
  4860  001886                     __end_of_sm_execute_menuConfiguration:
  4861                           	callstack 0
  4862                           
  4863 ;; *************** function _setValueToEdit *****************
  4864 ;; Defined at:
  4865 ;;		line 648 in file "sm_MenuConfiguration_MC50.c"
  4866 ;; Parameters:    Size  Location     Type
  4867 ;;  menuType        1    wreg     enum E10813
  4868 ;;  ParameterSel    1   57[COMRAM] unsigned char 
  4869 ;; Auto vars:     Size  Location     Type
  4870 ;;  menuType        1    6[BANK0 ] enum E10813
  4871 ;;  posindex        1    7[BANK0 ] unsigned char 
  4872 ;;  haveValueToE    1    8[BANK0 ] unsigned char 
  4873 ;; Return value:  Size  Location     Type
  4874 ;;                  1    wreg      unsigned char 
  4875 ;; Registers used:
  4876 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4877 ;; Tracked objects:
  4878 ;;		On entry : 3F/1
  4879 ;;		On exit  : 3F/0
  4880 ;;		Unchanged: 0/0
  4881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4882 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4883 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4884 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4885 ;;      Totals:         1       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4886 ;;Total ram usage:        6 bytes
  4887 ;; Hardware stack levels used: 1
  4888 ;; Hardware stack levels required when called: 14
  4889 ;; This function calls:
  4890 ;;		_InitReceiver
  4891 ;;		_SaveNVM_VarSystem
  4892 ;;		_cmdMemoryIsEmpty
  4893 ;;		_load_New_Menu
  4894 ;;		_sm_send_event
  4895 ;; This function is called by:
  4896 ;;		_sm_execute_menuConfiguration
  4897 ;; This function uses a non-reentrant model
  4898 ;;
  4899                           
  4900                           	psect	text3
  4901  001F94                     __ptext3:
  4902                           	callstack 0
  4903  001F94                     _setValueToEdit:
  4904                           	callstack 14
  4905                           
  4906                           ;incstack = 0
  4907                           ;setValueToEdit@menuType stored from wreg
  4908  001F94  0100               	movlb	0	; () banked
  4909  001F96  6FDE               	movwf	setValueToEdit@menuType& (0+255),b
  4910                           
  4911                           ;sm_MenuConfiguration_MC50.c: 649:     char haveValueToEdit=0;
  4912  001F98  0E00               	movlw	0
  4913  001F9A  0100               	movlb	0	; () banked
  4914  001F9C  6FE0               	movwf	setValueToEdit@haveValueToEdit& (0+255),b
  4915                           
  4916                           ;sm_MenuConfiguration_MC50.c: 652:     switch (menuType)
  4917  001F9E  D254               	goto	l20797
  4918  001FA0                     l3353:
  4919                           
  4920                           ; BSR set to: 0
  4921                           ;sm_MenuConfiguration_MC50.c: 655:         {;sm_MenuConfiguration_MC50.c: 656:          
      +                             menu_st.lastMainParameterSelected= menu_st.parameterSelected;
  4922  001FA0  C168  F169         	movff	_menu_st+23,_menu_st+24
  4923                           
  4924                           ; BSR set to: 0
  4925                           ;sm_MenuConfiguration_MC50.c: 657:             edit_Param.Min=0;
  4926  001FA4  0E00               	movlw	0
  4927  001FA6  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  4928                           
  4929                           ;sm_MenuConfiguration_MC50.c: 658:             switch (ParameterSelected)
  4930  001FA8  D034               	goto	l20553
  4931  001FAA                     l20507:
  4932                           
  4933                           ; BSR set to: 0
  4934                           ;sm_MenuConfiguration_MC50.c: 661:                 {;sm_MenuConfiguration_MC50.c: 662:  
      +                                             load_New_Menu(P0_SMenu);
  4935  001FAA  0E04               	movlw	4
  4936  001FAC  EC7D  F01E         	call	_load_New_Menu
  4937                           
  4938                           ;sm_MenuConfiguration_MC50.c: 664:                 };sm_MenuConfiguration_MC50.c: 665:  
      +                                         break;
  4939  001FB0  D274               	goto	l20799
  4940  001FB2                     l20509:
  4941                           
  4942                           ; BSR set to: 0
  4943                           ;sm_MenuConfiguration_MC50.c: 667:                 {;sm_MenuConfiguration_MC50.c: 668:  
      +                                             load_New_Menu(P1_SMenu);
  4944  001FB2  0E05               	movlw	5
  4945  001FB4  EC7D  F01E         	call	_load_New_Menu
  4946                           
  4947                           ;sm_MenuConfiguration_MC50.c: 669:                 };sm_MenuConfiguration_MC50.c: 670:  
      +                                         break;
  4948  001FB8  D270               	goto	l20799
  4949  001FBA                     l20511:
  4950                           
  4951                           ; BSR set to: 0
  4952                           ;sm_MenuConfiguration_MC50.c: 672:                 {;sm_MenuConfiguration_MC50.c: 673:  
      +                                             load_New_Menu(P2_SMenu);
  4953  001FBA  0E06               	movlw	6
  4954  001FBC  EC7D  F01E         	call	_load_New_Menu
  4955                           
  4956                           ;sm_MenuConfiguration_MC50.c: 674:                 };sm_MenuConfiguration_MC50.c: 675:  
      +                                         break;
  4957  001FC0  D26C               	goto	l20799
  4958  001FC2                     l20513:
  4959                           
  4960                           ; BSR set to: 0
  4961                           ;sm_MenuConfiguration_MC50.c: 677:                 {;sm_MenuConfiguration_MC50.c: 678:  
      +                                             edit_Param.Max=99;
  4962  001FC2  0E63               	movlw	99
  4963  001FC4  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  4964                           
  4965                           ; BSR set to: 0
  4966                           ;sm_MenuConfiguration_MC50.c: 680:                     edit_Param.tempValue=var_sys_NVM.
      +                          walkTime;
  4967  001FC6  C09C  F049         	movff	_var_sys_NVM+4,_edit_Param+3	;volatile
  4968                           
  4969                           ; BSR set to: 0
  4970                           ;sm_MenuConfiguration_MC50.c: 681:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.walkTime;
  4971  001FCA  0E9C               	movlw	low (_var_sys_NVM+4)
  4972  001FCC                     L13:
  4973  001FCC  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  4974  001FCE  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  4975                           
  4976                           ; BSR set to: 0
  4977                           ;sm_MenuConfiguration_MC50.c: 682:                     haveValueToEdit=1;
  4978  001FD0  0E01               	movlw	1
  4979  001FD2  6FE0               	movwf	setValueToEdit@haveValueToEdit& (0+255),b
  4980                           
  4981                           ;sm_MenuConfiguration_MC50.c: 683:                 };sm_MenuConfiguration_MC50.c: 684:  
      +                                         break;
  4982  001FD4  D262               	goto	l20799
  4983  001FD6                     l20521:
  4984                           
  4985                           ; BSR set to: 0
  4986                           ;sm_MenuConfiguration_MC50.c: 686:                 {;sm_MenuConfiguration_MC50.c: 687:  
      +                                             load_New_Menu(P4_SMenu);
  4987  001FD6  0E07               	movlw	7
  4988  001FD8  EC7D  F01E         	call	_load_New_Menu
  4989                           
  4990                           ;sm_MenuConfiguration_MC50.c: 688:                 };sm_MenuConfiguration_MC50.c: 689:  
      +                                         break;
  4991  001FDC  D25E               	goto	l20799
  4992  001FDE                     l20523:
  4993                           
  4994                           ; BSR set to: 0
  4995                           ;sm_MenuConfiguration_MC50.c: 691:                 {;sm_MenuConfiguration_MC50.c: 692:  
      +                                             load_New_Menu(P5_SMenu);
  4996  001FDE  0E08               	movlw	8
  4997  001FE0  EC7D  F01E         	call	_load_New_Menu
  4998                           
  4999                           ;sm_MenuConfiguration_MC50.c: 693:                 };sm_MenuConfiguration_MC50.c: 694:  
      +                                         break;
  5000  001FE4  D25A               	goto	l20799
  5001  001FE6                     l20525:
  5002                           
  5003                           ; BSR set to: 0
  5004                           ;sm_MenuConfiguration_MC50.c: 696:                 {;sm_MenuConfiguration_MC50.c: 697:  
      +                                             load_New_Menu(P6_SMenu);
  5005  001FE6  0E09               	movlw	9
  5006  001FE8  EC7D  F01E         	call	_load_New_Menu
  5007                           
  5008                           ;sm_MenuConfiguration_MC50.c: 698:                 };sm_MenuConfiguration_MC50.c: 699:  
      +                                         break;
  5009  001FEC  D256               	goto	l20799
  5010  001FEE                     l20527:
  5011                           
  5012                           ; BSR set to: 0
  5013                           ;sm_MenuConfiguration_MC50.c: 701:                 {;sm_MenuConfiguration_MC50.c: 702:  
      +                                             edit_Param.Max=2;
  5014  001FEE  0E02               	movlw	2
  5015  001FF0  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5016                           
  5017                           ; BSR set to: 0
  5018                           ;sm_MenuConfiguration_MC50.c: 704:                     edit_Param.tempValue=var_sys_NVM.
      +                          operationMode;
  5019  001FF2  C0A4  F049         	movff	_var_sys_NVM+12,_edit_Param+3	;volatile
  5020                           
  5021                           ; BSR set to: 0
  5022                           ;sm_MenuConfiguration_MC50.c: 705:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.operationMode;
  5023  001FF6  0EA4               	movlw	low (_var_sys_NVM+12)
  5024  001FF8  D7E9               	goto	L13
  5025  001FFA                     l20535:
  5026                           
  5027                           ; BSR set to: 0
  5028                           ;sm_MenuConfiguration_MC50.c: 710:                 {;sm_MenuConfiguration_MC50.c: 711:  
      +                                             edit_Param.Max=3;
  5029  001FFA  0E03               	movlw	3
  5030  001FFC  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5031                           
  5032                           ; BSR set to: 0
  5033                           ;sm_MenuConfiguration_MC50.c: 713:                     edit_Param.tempValue=var_sys_NVM.
      +                          flashLightMode;
  5034  001FFE  C0A5  F049         	movff	_var_sys_NVM+13,_edit_Param+3	;volatile
  5035                           
  5036                           ; BSR set to: 0
  5037                           ;sm_MenuConfiguration_MC50.c: 714:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.flashLightMode;
  5038  002002  0EA5               	movlw	low (_var_sys_NVM+13)
  5039  002004  D7E3               	goto	L13
  5040  002006                     l20543:
  5041                           
  5042                           ; BSR set to: 0
  5043                           ;sm_MenuConfiguration_MC50.c: 719:                 {;sm_MenuConfiguration_MC50.c: 720:  
      +                                             edit_Param.Max=1;
  5044  002006  0E01               	movlw	1
  5045  002008  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5046                           
  5047                           ; BSR set to: 0
  5048                           ;sm_MenuConfiguration_MC50.c: 722:                     edit_Param.tempValue=var_sys_NVM.
      +                          programmingDistance;
  5049  00200A  C0A6  F049         	movff	_var_sys_NVM+14,_edit_Param+3	;volatile
  5050                           
  5051                           ; BSR set to: 0
  5052                           ;sm_MenuConfiguration_MC50.c: 723:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.programmingDistance;
  5053  00200E  0EA6               	movlw	low (_var_sys_NVM+14)
  5054  002010  D7DD               	goto	L13
  5055  002012                     l20553:
  5056                           
  5057                           ; BSR set to: 0
  5058  002012  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5059  002014  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5060  002016  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5061                           
  5062                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5063                           ; Switch size 1, requested type "simple"
  5064                           ; Number of cases is 1, Range of values is 0 to 0
  5065                           ; switch strategies available:
  5066                           ; Name         Instructions Cycles
  5067                           ; simple_byte            4     3 (average)
  5068                           ;	Chosen strategy is simple_byte
  5069  002018  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5070  00201A  0A00               	xorlw	0	; case 0
  5071  00201C  A4D8               	btfss	status,2,c
  5072  00201E  D23D               	goto	l20799
  5073                           
  5074                           ; BSR set to: 0
  5075                           ; Switch size 1, requested type "simple"
  5076                           ; Number of cases is 10, Range of values is 0 to 9
  5077                           ; switch strategies available:
  5078                           ; Name         Instructions Cycles
  5079                           ; simple_byte           31    16 (average)
  5080                           ;	Chosen strategy is simple_byte
  5081  002020  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5082  002022  0A00               	xorlw	0	; case 0
  5083  002024  B4D8               	btfsc	status,2,c
  5084  002026  D7C1               	goto	l20507
  5085  002028  0A01               	xorlw	1	; case 1
  5086  00202A  B4D8               	btfsc	status,2,c
  5087  00202C  D7C2               	goto	l20509
  5088  00202E  0A03               	xorlw	3	; case 2
  5089  002030  B4D8               	btfsc	status,2,c
  5090  002032  D7C3               	goto	l20511
  5091  002034  0A01               	xorlw	1	; case 3
  5092  002036  B4D8               	btfsc	status,2,c
  5093  002038  D7C4               	goto	l20513
  5094  00203A  0A07               	xorlw	7	; case 4
  5095  00203C  B4D8               	btfsc	status,2,c
  5096  00203E  D7CB               	goto	l20521
  5097  002040  0A01               	xorlw	1	; case 5
  5098  002042  B4D8               	btfsc	status,2,c
  5099  002044  D7CC               	goto	l20523
  5100  002046  0A03               	xorlw	3	; case 6
  5101  002048  B4D8               	btfsc	status,2,c
  5102  00204A  D7CD               	goto	l20525
  5103  00204C  0A01               	xorlw	1	; case 7
  5104  00204E  B4D8               	btfsc	status,2,c
  5105  002050  D7CE               	goto	l20527
  5106  002052  0A0F               	xorlw	15	; case 8
  5107  002054  B4D8               	btfsc	status,2,c
  5108  002056  D7D1               	goto	l20535
  5109  002058  0A01               	xorlw	1	; case 9
  5110  00205A  B4D8               	btfsc	status,2,c
  5111  00205C  D7D4               	goto	l20543
  5112  00205E  D21D               	goto	l20799
  5113  002060                     l3367:
  5114                           
  5115                           ; BSR set to: 0
  5116                           ;sm_MenuConfiguration_MC50.c: 733:         {;sm_MenuConfiguration_MC50.c: 734:          
      +                             menu_st.lastMainParameterSelected= menu_st.parameterSelected;
  5117  002060  C168  F169         	movff	_menu_st+23,_menu_st+24
  5118                           
  5119                           ; BSR set to: 0
  5120                           ;sm_MenuConfiguration_MC50.c: 735:             edit_Param.Max=1;
  5121  002064  0E01               	movlw	1
  5122  002066  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5123                           
  5124                           ;sm_MenuConfiguration_MC50.c: 736:             edit_Param.Min=0;
  5125  002068  0E00               	movlw	0
  5126  00206A  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5127                           
  5128                           ;sm_MenuConfiguration_MC50.c: 737:             switch (ParameterSelected)
  5129  00206C  D057               	goto	l20609
  5130  00206E                     l20557:
  5131                           
  5132                           ; BSR set to: 0
  5133                           ;sm_MenuConfiguration_MC50.c: 740:                 {;sm_MenuConfiguration_MC50.c: 741:  
      +                                             load_New_Menu(E0_SMenu);
  5134  00206E  0E0A               	movlw	10
  5135  002070  EC7D  F01E         	call	_load_New_Menu
  5136                           
  5137                           ;sm_MenuConfiguration_MC50.c: 742:                 };sm_MenuConfiguration_MC50.c: 743:  
      +                                         break;
  5138  002074  D212               	goto	l20799
  5139  002076                     l20559:
  5140                           
  5141                           ; BSR set to: 0
  5142                           ;sm_MenuConfiguration_MC50.c: 745:                 {;sm_MenuConfiguration_MC50.c: 748:  
      +                                             load_New_Menu(E1_SMenu);
  5143  002076  0E0B               	movlw	11
  5144  002078  EC7D  F01E         	call	_load_New_Menu
  5145                           
  5146                           ;sm_MenuConfiguration_MC50.c: 750:                 };sm_MenuConfiguration_MC50.c: 751:  
      +                                         break;
  5147  00207C  D20E               	goto	l20799
  5148  00207E                     l20561:
  5149                           
  5150                           ; BSR set to: 0
  5151                           ;sm_MenuConfiguration_MC50.c: 753:                 {;sm_MenuConfiguration_MC50.c: 754:  
      +                                             edit_Param.Max=99;
  5152  00207E  0E63               	movlw	99
  5153  002080  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5154                           
  5155                           ; BSR set to: 0
  5156                           ;sm_MenuConfiguration_MC50.c: 756:                     edit_Param.tempValue=var_sys_NVM.
      +                          ligthTime;
  5157  002082  C0AC  F049         	movff	_var_sys_NVM+20,_edit_Param+3	;volatile
  5158                           
  5159                           ; BSR set to: 0
  5160                           ;sm_MenuConfiguration_MC50.c: 757:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.ligthTime;
  5161  002086  0EAC               	movlw	low (_var_sys_NVM+20)
  5162  002088  D7A1               	goto	L13
  5163  00208A                     l20569:
  5164                           
  5165                           ; BSR set to: 0
  5166                           ;sm_MenuConfiguration_MC50.c: 762:                 {;sm_MenuConfiguration_MC50.c: 763:  
      +                                            edit_Param.Max=9;
  5167  00208A  0E09               	movlw	9
  5168  00208C  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5169                           
  5170                           ;sm_MenuConfiguration_MC50.c: 764:                    edit_Param.Min=1;
  5171  00208E  0E01               	movlw	1
  5172  002090  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5173                           
  5174                           ; BSR set to: 0
  5175                           ;sm_MenuConfiguration_MC50.c: 765:                    edit_Param.tempValue=var_sys_NVM.f
      +                          olow_me;
  5176  002092  C0AD  F049         	movff	_var_sys_NVM+21,_edit_Param+3	;volatile
  5177                           
  5178                           ; BSR set to: 0
  5179                           ;sm_MenuConfiguration_MC50.c: 766:                    edit_Param.Value=(unsigned char*)&
      +                          var_sys_NVM.folow_me;
  5180  002096  0EAD               	movlw	low (_var_sys_NVM+21)
  5181  002098  D799               	goto	L13
  5182  00209A                     l3375:
  5183                           
  5184                           ; BSR set to: 0
  5185                           ;sm_MenuConfiguration_MC50.c: 778:                 {;sm_MenuConfiguration_MC50.c: 779:  
      +                                            edit_Param.tempValue=var_sys_NVM.electricBrake;
  5186  00209A  C0AF  F049         	movff	_var_sys_NVM+23,_edit_Param+3	;volatile
  5187                           
  5188                           ; BSR set to: 0
  5189                           ;sm_MenuConfiguration_MC50.c: 780:                    edit_Param.Value=(unsigned char*)&
      +                          var_sys_NVM.electricBrake;
  5190  00209E  0EAF               	movlw	low (_var_sys_NVM+23)
  5191  0020A0  D795               	goto	L13
  5192  0020A2                     l20581:
  5193                           
  5194                           ; BSR set to: 0
  5195                           ;sm_MenuConfiguration_MC50.c: 785:                 {;sm_MenuConfiguration_MC50.c: 786:  
      +                                             edit_Param.Max=9;
  5196  0020A2  0E09               	movlw	9
  5197  0020A4  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5198                           
  5199                           ;sm_MenuConfiguration_MC50.c: 787:                     edit_Param.Min=1;
  5200  0020A6  0E01               	movlw	1
  5201  0020A8  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5202                           
  5203                           ; BSR set to: 0
  5204                           ;sm_MenuConfiguration_MC50.c: 788:                     edit_Param.tempValue=var_sys_NVM.
      +                          velocityDecelaration;
  5205  0020AA  C0B0  F049         	movff	_var_sys_NVM+24,_edit_Param+3	;volatile
  5206                           
  5207                           ; BSR set to: 0
  5208                           ;sm_MenuConfiguration_MC50.c: 789:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.velocityDecelaration;
  5209  0020AE  0EB0               	movlw	low (_var_sys_NVM+24)
  5210  0020B0  D78D               	goto	L13
  5211  0020B2                     l20589:
  5212                           
  5213                           ; BSR set to: 0
  5214                           ;sm_MenuConfiguration_MC50.c: 794:                 {;sm_MenuConfiguration_MC50.c: 795:  
      +                                             edit_Param.tempValue=0;
  5215  0020B2  0E00               	movlw	0
  5216  0020B4  6E49               	movwf	(_edit_Param+3)^0,c	;volatile
  5217                           
  5218                           ;sm_MenuConfiguration_MC50.c: 796:                     ts_system.timeoutMenu=0;
  5219  0020B6  0E00               	movlw	0
  5220  0020B8  0101               	movlb	1	; () banked
  5221  0020BA  6FA9               	movwf	(_ts_system+15)& (0+255),b	;volatile
  5222  0020BC  0E00               	movlw	0
  5223  0020BE  6FA8               	movwf	(_ts_system+14)& (0+255),b	;volatile
  5224                           
  5225                           ;sm_MenuConfiguration_MC50.c: 798:                     auxCounter=10000;
  5226  0020C0  0E27               	movlw	39
  5227  0020C2  0100               	movlb	0	; () banked
  5228  0020C4  6FF9               	movwf	(_auxCounter+1)& (0+255),b
  5229  0020C6  0E10               	movlw	16
  5230  0020C8  6FF8               	movwf	_auxCounter& (0+255),b
  5231                           
  5232                           ;sm_MenuConfiguration_MC50.c: 799:                     ts_system.timeBetweenSaveCounters
      +                          =0;
  5233  0020CA  0E00               	movlw	0
  5234  0020CC  0101               	movlb	1	; () banked
  5235  0020CE  6FC1               	movwf	(_ts_system+39)& (0+255),b	;volatile
  5236  0020D0  0E00               	movlw	0
  5237  0020D2  6FC0               	movwf	(_ts_system+38)& (0+255),b	;volatile
  5238                           
  5239                           ; BSR set to: 1
  5240                           ;sm_MenuConfiguration_MC50.c: 800:                     tempCounter=var_sys.actualCounter
      +                          Moves;
  5241  0020D4  C13C  F1F9         	movff	_var_sys+60,_tempCounter	;volatile
  5242  0020D8  C13D  F1FA         	movff	_var_sys+61,_tempCounter+1	;volatile
  5243  0020DC  C13E  F1FB         	movff	_var_sys+62,_tempCounter+2	;volatile
  5244  0020E0  C13F  F1FC         	movff	_var_sys+63,_tempCounter+3	;volatile
  5245                           
  5246                           ; BSR set to: 1
  5247                           ;sm_MenuConfiguration_MC50.c: 801:                     sm_send_event(&menuConfiguration_
      +                          stateMachine, ev_showCounter);
  5248  0020E4  0EBD               	movlw	low _menuConfiguration_stateMachine
  5249  0020E6  6E12               	movwf	sm_send_event@psm^0,c
  5250  0020E8  0E02               	movlw	high _menuConfiguration_stateMachine
  5251  0020EA  6E13               	movwf	(sm_send_event@psm+1)^0,c
  5252  0020EC  0E00               	movlw	0
  5253  0020EE  6E15               	movwf	(sm_send_event@event+1)^0,c
  5254  0020F0  0E05               	movlw	5
  5255  0020F2  6E14               	movwf	sm_send_event@event^0,c
  5256  0020F4  EC25  F041         	call	_sm_send_event	;wreg free
  5257                           
  5258                           ;sm_MenuConfiguration_MC50.c: 802:                 };sm_MenuConfiguration_MC50.c: 803:  
      +                                         break;
  5259  0020F8  D1D0               	goto	l20799
  5260  0020FA                     l20595:
  5261                           
  5262                           ; BSR set to: 0
  5263                           ;sm_MenuConfiguration_MC50.c: 805:                 {;sm_MenuConfiguration_MC50.c: 806:  
      +                                             edit_Param.tempValue=0;
  5264  0020FA  0E00               	movlw	0
  5265  0020FC  6E49               	movwf	(_edit_Param+3)^0,c	;volatile
  5266                           
  5267                           ;sm_MenuConfiguration_MC50.c: 807:                     haveValueToEdit=1;
  5268  0020FE  0E01               	movlw	1
  5269  002100  6FE0               	movwf	setValueToEdit@haveValueToEdit& (0+255),b
  5270                           
  5271                           ; BSR set to: 0
  5272                           ;sm_MenuConfiguration_MC50.c: 808:                     edit_Param.Value = 0;
  5273  002102  0E00               	movlw	0
  5274  002104  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5275  002106  0E00               	movlw	0
  5276  002108  6E48               	movwf	(_edit_Param+2)^0,c	;volatile
  5277                           
  5278                           ;sm_MenuConfiguration_MC50.c: 809:                 };sm_MenuConfiguration_MC50.c: 810:  
      +                                         break;
  5279  00210A  D1C7               	goto	l20799
  5280  00210C                     l20599:
  5281                           
  5282                           ; BSR set to: 0
  5283                           ;sm_MenuConfiguration_MC50.c: 812:                 {;sm_MenuConfiguration_MC50.c: 813:  
      +                                             edit_Param.Max=3;
  5284  00210C  0E03               	movlw	3
  5285  00210E  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5286                           
  5287                           ;sm_MenuConfiguration_MC50.c: 814:                     edit_Param.Min=0;
  5288  002110  0E00               	movlw	0
  5289  002112  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5290                           
  5291                           ; BSR set to: 0
  5292                           ;sm_MenuConfiguration_MC50.c: 815:                     edit_Param.tempValue=var_sys_NVM.
      +                          flashRGBMode;
  5293  002114  C0B1  F049         	movff	_var_sys_NVM+25,_edit_Param+3	;volatile
  5294                           
  5295                           ; BSR set to: 0
  5296                           ;sm_MenuConfiguration_MC50.c: 816:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.flashRGBMode;
  5297  002118  0EB1               	movlw	low (_var_sys_NVM+25)
  5298  00211A  D758               	goto	L13
  5299  00211C                     l20609:
  5300                           
  5301                           ; BSR set to: 0
  5302  00211C  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5303  00211E  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5304  002120  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5305                           
  5306                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5307                           ; Switch size 1, requested type "simple"
  5308                           ; Number of cases is 1, Range of values is 0 to 0
  5309                           ; switch strategies available:
  5310                           ; Name         Instructions Cycles
  5311                           ; simple_byte            4     3 (average)
  5312                           ;	Chosen strategy is simple_byte
  5313  002122  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5314  002124  0A00               	xorlw	0	; case 0
  5315  002126  A4D8               	btfss	status,2,c
  5316  002128  D1B8               	goto	l20799
  5317                           
  5318                           ; BSR set to: 0
  5319                           ; Switch size 1, requested type "simple"
  5320                           ; Number of cases is 10, Range of values is 0 to 9
  5321                           ; switch strategies available:
  5322                           ; Name         Instructions Cycles
  5323                           ; simple_byte           31    16 (average)
  5324                           ;	Chosen strategy is simple_byte
  5325  00212A  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5326  00212C  0A00               	xorlw	0	; case 0
  5327  00212E  B4D8               	btfsc	status,2,c
  5328  002130  D79E               	goto	l20557
  5329  002132  0A01               	xorlw	1	; case 1
  5330  002134  B4D8               	btfsc	status,2,c
  5331  002136  D79F               	goto	l20559
  5332  002138  0A03               	xorlw	3	; case 2
  5333  00213A  B4D8               	btfsc	status,2,c
  5334  00213C  D7A0               	goto	l20561
  5335  00213E  0A01               	xorlw	1	; case 3
  5336  002140  B4D8               	btfsc	status,2,c
  5337  002142  D7A3               	goto	l20569
  5338  002144  0A07               	xorlw	7	; case 4
  5339  002146  B4D8               	btfsc	status,2,c
  5340  002148  D1A8               	goto	l20799
  5341  00214A  0A01               	xorlw	1	; case 5
  5342  00214C  B4D8               	btfsc	status,2,c
  5343  00214E  D7A5               	goto	l3375
  5344  002150  0A03               	xorlw	3	; case 6
  5345  002152  B4D8               	btfsc	status,2,c
  5346  002154  D7A6               	goto	l20581
  5347  002156  0A01               	xorlw	1	; case 7
  5348  002158  B4D8               	btfsc	status,2,c
  5349  00215A  D7AB               	goto	l20589
  5350  00215C  0A0F               	xorlw	15	; case 8
  5351  00215E  B4D8               	btfsc	status,2,c
  5352  002160  D7CC               	goto	l20595
  5353  002162  0A01               	xorlw	1	; case 9
  5354  002164  B4D8               	btfsc	status,2,c
  5355  002166  D7D2               	goto	l20599
  5356  002168  D198               	goto	l20799
  5357  00216A                     l20611:
  5358                           
  5359                           ; BSR set to: 0
  5360                           ;sm_MenuConfiguration_MC50.c: 829:                 {;sm_MenuConfiguration_MC50.c: 830:  
      +                                          sm_send_event(&menuConfiguration_stateMachine, ev_SartLearning);
  5361  00216A  0EBD               	movlw	low _menuConfiguration_stateMachine
  5362  00216C  6E12               	movwf	sm_send_event@psm^0,c
  5363  00216E  0E02               	movlw	high _menuConfiguration_stateMachine
  5364  002170  6E13               	movwf	(sm_send_event@psm+1)^0,c
  5365  002172  0E00               	movlw	0
  5366  002174  6E15               	movwf	(sm_send_event@event+1)^0,c
  5367  002176  0E14               	movlw	20
  5368  002178  6E14               	movwf	sm_send_event@event^0,c
  5369  00217A  EC25  F041         	call	_sm_send_event	;wreg free
  5370                           
  5371                           ;sm_MenuConfiguration_MC50.c: 831:                  sm_send_event(&controlGate_stateMach
      +                          ine,ev_SartLearning );
  5372  00217E  0EE2               	movlw	low _controlGate_stateMachine
  5373  002180  6E12               	movwf	sm_send_event@psm^0,c
  5374  002182  0E01               	movlw	high _controlGate_stateMachine
  5375  002184  6E13               	movwf	(sm_send_event@psm+1)^0,c
  5376  002186  0E00               	movlw	0
  5377  002188  6E15               	movwf	(sm_send_event@event+1)^0,c
  5378  00218A  0E14               	movlw	20
  5379  00218C  6E14               	movwf	sm_send_event@event^0,c
  5380  00218E  EC25  F041         	call	_sm_send_event	;wreg free
  5381                           
  5382                           ;sm_MenuConfiguration_MC50.c: 832:                  var_sys.LearningIsEnabled=YES;
  5383  002192  0E01               	movlw	1
  5384  002194  0101               	movlb	1	; () banked
  5385  002196  6F26               	movwf	(_var_sys+38)& (0+255),b	;volatile
  5386                           
  5387                           ; BSR set to: 1
  5388                           ;sm_MenuConfiguration_MC50.c: 833:                  var_sys.programinAutomatic = Automat
      +                          ic;
  5389  002198  0E00               	movlw	0
  5390  00219A  6F2A               	movwf	(_var_sys+42)& (0+255),b	;volatile
  5391                           
  5392                           ; BSR set to: 1
  5393                           ;sm_MenuConfiguration_MC50.c: 834:                  SaveNVM_VarSystem(pageMemoryE);
  5394  00219C  0E01               	movlw	1
  5395  00219E  EC06  F045         	call	_SaveNVM_VarSystem
  5396                           
  5397                           ;sm_MenuConfiguration_MC50.c: 837:                 };sm_MenuConfiguration_MC50.c: 838:  
      +                                         break;
  5398  0021A2  D17B               	goto	l20799
  5399  0021A4                     l20619:
  5400                           
  5401                           ; BSR set to: 0
  5402                           ;sm_MenuConfiguration_MC50.c: 840:                 {;sm_MenuConfiguration_MC50.c: 841:  
      +                                          sm_send_event(&menuConfiguration_stateMachine, ev_SartLearning);
  5403  0021A4  0EBD               	movlw	low _menuConfiguration_stateMachine
  5404  0021A6  6E12               	movwf	sm_send_event@psm^0,c
  5405  0021A8  0E02               	movlw	high _menuConfiguration_stateMachine
  5406  0021AA  6E13               	movwf	(sm_send_event@psm+1)^0,c
  5407  0021AC  0E00               	movlw	0
  5408  0021AE  6E15               	movwf	(sm_send_event@event+1)^0,c
  5409  0021B0  0E14               	movlw	20
  5410  0021B2  6E14               	movwf	sm_send_event@event^0,c
  5411  0021B4  EC25  F041         	call	_sm_send_event	;wreg free
  5412                           
  5413                           ;sm_MenuConfiguration_MC50.c: 842:                  sm_send_event(&controlGate_stateMach
      +                          ine, ev_SartLearning);
  5414  0021B8  0EE2               	movlw	low _controlGate_stateMachine
  5415  0021BA  6E12               	movwf	sm_send_event@psm^0,c
  5416  0021BC  0E01               	movlw	high _controlGate_stateMachine
  5417  0021BE  6E13               	movwf	(sm_send_event@psm+1)^0,c
  5418  0021C0  0E00               	movlw	0
  5419  0021C2  6E15               	movwf	(sm_send_event@event+1)^0,c
  5420  0021C4  0E14               	movlw	20
  5421  0021C6  6E14               	movwf	sm_send_event@event^0,c
  5422  0021C8  EC25  F041         	call	_sm_send_event	;wreg free
  5423                           
  5424                           ;sm_MenuConfiguration_MC50.c: 843:                  var_sys.LearningIsEnabled=YES;
  5425  0021CC  0E01               	movlw	1
  5426  0021CE  0101               	movlb	1	; () banked
  5427  0021D0  6F26               	movwf	(_var_sys+38)& (0+255),b	;volatile
  5428                           
  5429                           ; BSR set to: 1
  5430                           ;sm_MenuConfiguration_MC50.c: 844:                  var_sys.programinAutomatic = Manual;
  5431  0021D2  0E01               	movlw	1
  5432  0021D4  6F2A               	movwf	(_var_sys+42)& (0+255),b	;volatile
  5433                           
  5434                           ; BSR set to: 1
  5435                           ;sm_MenuConfiguration_MC50.c: 845:                  SaveNVM_VarSystem(pageMemoryE);
  5436  0021D6  0E01               	movlw	1
  5437  0021D8  EC06  F045         	call	_SaveNVM_VarSystem
  5438                           
  5439                           ;sm_MenuConfiguration_MC50.c: 848:                 };sm_MenuConfiguration_MC50.c: 849:  
      +                                         break;
  5440  0021DC  D15E               	goto	l20799
  5441  0021DE                     l3385:
  5442                           
  5443                           ; BSR set to: 0
  5444                           ;sm_MenuConfiguration_MC50.c: 851:                 {;sm_MenuConfiguration_MC50.c: 852:  
      +                                          edit_Param.tempValue=var_sys_NVM.TypeofMotor;
  5445  0021DE  C0B4  F049         	movff	_var_sys_NVM+28,_edit_Param+3	;volatile
  5446                           
  5447                           ; BSR set to: 0
  5448                           ;sm_MenuConfiguration_MC50.c: 853:                  load_New_Menu(TypeMotor_Menu);
  5449  0021E2  0E03               	movlw	3
  5450  0021E4  EC7D  F01E         	call	_load_New_Menu
  5451                           
  5452                           ;sm_MenuConfiguration_MC50.c: 854:                  edit_Param.Value=(unsigned char*)&va
      +                          r_sys_NVM.TypeofMotor;
  5453  0021E8  0EB4               	movlw	low (_var_sys_NVM+28)
  5454  0021EA  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5455  0021EC  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5456                           
  5457                           ;sm_MenuConfiguration_MC50.c: 855:                  haveValueToEdit=1;
  5458  0021EE  0E01               	movlw	1
  5459  0021F0  0100               	movlb	0	; () banked
  5460  0021F2  6FE0               	movwf	setValueToEdit@haveValueToEdit& (0+255),b
  5461                           
  5462                           ; BSR set to: 0
  5463                           ;sm_MenuConfiguration_MC50.c: 856:                  edit_Param.Max=2;
  5464  0021F4  0E02               	movlw	2
  5465  0021F6  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5466                           
  5467                           ; BSR set to: 0
  5468                           ;sm_MenuConfiguration_MC50.c: 857:                  edit_Param.Min=0;
  5469  0021F8  0E00               	movlw	0
  5470  0021FA  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5471                           
  5472                           ;sm_MenuConfiguration_MC50.c: 859:                 };sm_MenuConfiguration_MC50.c: 860:  
      +                                         break;
  5473  0021FC  D14E               	goto	l20799
  5474  0021FE                     l3386:
  5475                           
  5476                           ; BSR set to: 0
  5477                           ;sm_MenuConfiguration_MC50.c: 862:                 {;sm_MenuConfiguration_MC50.c: 863:  
      +                                          edit_Param.tempValue=var_sys_NVM.Direction_motor;
  5478  0021FE  C0B3  F049         	movff	_var_sys_NVM+27,_edit_Param+3	;volatile
  5479                           
  5480                           ; BSR set to: 0
  5481                           ;sm_MenuConfiguration_MC50.c: 864:                  load_New_Menu(Direction_Menu);
  5482  002202  0E02               	movlw	2
  5483  002204  EC7D  F01E         	call	_load_New_Menu
  5484                           
  5485                           ;sm_MenuConfiguration_MC50.c: 865:                  edit_Param.Value=(unsigned char*)&va
      +                          r_sys_NVM.Direction_motor;
  5486  002208  0EB3               	movlw	low (_var_sys_NVM+27)
  5487  00220A  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5488  00220C  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5489                           
  5490                           ;sm_MenuConfiguration_MC50.c: 866:                  haveValueToEdit=1;
  5491  00220E  0E01               	movlw	1
  5492  002210  0100               	movlb	0	; () banked
  5493  002212  6FE0               	movwf	setValueToEdit@haveValueToEdit& (0+255),b
  5494                           
  5495                           ; BSR set to: 0
  5496                           ;sm_MenuConfiguration_MC50.c: 867:                  edit_Param.Max=1;
  5497  002214  0E01               	movlw	1
  5498  002216  D7EF               	goto	L14
  5499  002218                     l20649:
  5500                           
  5501                           ; BSR set to: 0
  5502  002218  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5503  00221A  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5504  00221C  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5505                           
  5506                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5507                           ; Switch size 1, requested type "simple"
  5508                           ; Number of cases is 1, Range of values is 0 to 0
  5509                           ; switch strategies available:
  5510                           ; Name         Instructions Cycles
  5511                           ; simple_byte            4     3 (average)
  5512                           ;	Chosen strategy is simple_byte
  5513  00221E  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5514  002220  0A00               	xorlw	0	; case 0
  5515  002222  A4D8               	btfss	status,2,c
  5516  002224  D13A               	goto	l20799
  5517                           
  5518                           ; BSR set to: 0
  5519                           ; Switch size 1, requested type "simple"
  5520                           ; Number of cases is 4, Range of values is 0 to 3
  5521                           ; switch strategies available:
  5522                           ; Name         Instructions Cycles
  5523                           ; simple_byte           13     7 (average)
  5524                           ;	Chosen strategy is simple_byte
  5525  002226  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5526  002228  0A00               	xorlw	0	; case 0
  5527  00222A  B4D8               	btfsc	status,2,c
  5528  00222C  D79E               	goto	l20611
  5529  00222E  0A01               	xorlw	1	; case 1
  5530  002230  B4D8               	btfsc	status,2,c
  5531  002232  D7B8               	goto	l20619
  5532  002234  0A03               	xorlw	3	; case 2
  5533  002236  B4D8               	btfsc	status,2,c
  5534  002238  D7D2               	goto	l3385
  5535  00223A  0A01               	xorlw	1	; case 3
  5536  00223C  B4D8               	btfsc	status,2,c
  5537  00223E  D7DF               	goto	l3386
  5538  002240  D12C               	goto	l20799
  5539  002242                     l20651:
  5540                           
  5541                           ; BSR set to: 0
  5542                           ;sm_MenuConfiguration_MC50.c: 883:                 {;sm_MenuConfiguration_MC50.c: 884:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.decelarationOpen;
  5543  002242  0E98               	movlw	low _var_sys_NVM
  5544  002244  D001               	goto	L15
  5545  002246                     l20653:
  5546                           
  5547                           ; BSR set to: 0
  5548                           ;sm_MenuConfiguration_MC50.c: 888:                 {;sm_MenuConfiguration_MC50.c: 889:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.decelarationClose;
  5549  002246  0E99               	movlw	low (_var_sys_NVM+1)
  5550  002248                     L15:
  5551  002248  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5552  00224A  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5553                           
  5554                           ;sm_MenuConfiguration_MC50.c: 890:                 };sm_MenuConfiguration_MC50.c: 891:  
      +                                         break;
  5555  00224C  D00E               	goto	l20659
  5556  00224E                     l20657:
  5557                           
  5558                           ; BSR set to: 0
  5559  00224E  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5560  002250  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5561  002252  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5562                           
  5563                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5564                           ; Switch size 1, requested type "simple"
  5565                           ; Number of cases is 1, Range of values is 0 to 0
  5566                           ; switch strategies available:
  5567                           ; Name         Instructions Cycles
  5568                           ; simple_byte            4     3 (average)
  5569                           ;	Chosen strategy is simple_byte
  5570  002254  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5571  002256  0A00               	xorlw	0	; case 0
  5572  002258  A4D8               	btfss	status,2,c
  5573  00225A  D007               	goto	l20659
  5574                           
  5575                           ; BSR set to: 0
  5576                           ; Switch size 1, requested type "simple"
  5577                           ; Number of cases is 2, Range of values is 0 to 1
  5578                           ; switch strategies available:
  5579                           ; Name         Instructions Cycles
  5580                           ; simple_byte            7     4 (average)
  5581                           ;	Chosen strategy is simple_byte
  5582  00225C  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5583  00225E  0A00               	xorlw	0	; case 0
  5584  002260  B4D8               	btfsc	status,2,c
  5585  002262  D7EF               	goto	l20651
  5586  002264  0A01               	xorlw	1	; case 1
  5587  002266  B4D8               	btfsc	status,2,c
  5588  002268  D7EE               	goto	l20653
  5589  00226A                     l20659:
  5590                           
  5591                           ; BSR set to: 0
  5592                           ;sm_MenuConfiguration_MC50.c: 895:                 edit_Param.Max=45;
  5593  00226A  0E2D               	movlw	45
  5594  00226C                     L29:
  5595  00226C  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5596                           
  5597                           ;sm_MenuConfiguration_MC50.c: 896:                 edit_Param.Min=0;
  5598  00226E  0E00               	movlw	0
  5599  002270  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5600  002272                     L19:
  5601                           
  5602                           ;sm_MenuConfiguration_MC50.c: 899:             haveValueToEdit=1;
  5603  002272  0E01               	movlw	1
  5604  002274  6FE0               	movwf	setValueToEdit@haveValueToEdit& (0+255),b
  5605                           
  5606                           ; BSR set to: 0
  5607                           ;sm_MenuConfiguration_MC50.c: 900:             edit_Param.tempValue= edit_Param.Value[0]
      +                          ;
  5608  002276  C047  FFD9         	movff	_edit_Param+1,fsr2l	;volatile
  5609  00227A  C048  FFDA         	movff	_edit_Param+2,fsr2h	;volatile
  5610  00227E  50DF               	movf	indf2,w,c
  5611  002280  6E49               	movwf	(_edit_Param+3)^0,c	;volatile
  5612                           
  5613                           ;sm_MenuConfiguration_MC50.c: 901:         };sm_MenuConfiguration_MC50.c: 902:         b
      +                          reak;
  5614  002282  D10B               	goto	l20799
  5615  002284                     l20663:
  5616                           
  5617                           ; BSR set to: 0
  5618                           ;sm_MenuConfiguration_MC50.c: 904:         {;sm_MenuConfiguration_MC50.c: 905:          
      +                             edit_Param.Max=9;
  5619  002284  0E09               	movlw	9
  5620  002286  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5621                           
  5622                           ;sm_MenuConfiguration_MC50.c: 906:             edit_Param.Min=0;
  5623  002288  0E00               	movlw	0
  5624  00228A  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5625                           
  5626                           ;sm_MenuConfiguration_MC50.c: 907:             switch (ParameterSelected)
  5627  00228C  D00F               	goto	l20679
  5628  00228E                     l20665:
  5629                           
  5630                           ; BSR set to: 0
  5631                           ;sm_MenuConfiguration_MC50.c: 910:                 {;sm_MenuConfiguration_MC50.c: 911:  
      +                                               if (var_sys_NVM.motorSensitivity <2)
  5632  00228E  0E02               	movlw	2
  5633  002290  619B               	cpfslt	(_var_sys_NVM+3)& (0+255),b	;volatile
  5634  002292  D002               	goto	l20669
  5635                           
  5636                           ; BSR set to: 0
  5637                           ;sm_MenuConfiguration_MC50.c: 912:                       {;sm_MenuConfiguration_MC50.c: 
      +                          913:                         edit_Param.Min=0;
  5638  002294  0E00               	movlw	0
  5639  002296  D001               	goto	L16
  5640  002298                     l20669:
  5641                           
  5642                           ; BSR set to: 0
  5643                           ;sm_MenuConfiguration_MC50.c: 916:                       {;sm_MenuConfiguration_MC50.c: 
      +                          917:                         edit_Param.Min=9;
  5644  002298  0E09               	movlw	9
  5645  00229A                     L16:
  5646  00229A  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5647                           
  5648                           ; BSR set to: 0
  5649                           ;sm_MenuConfiguration_MC50.c: 919:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.motorPower;
  5650  00229C  0E9A               	movlw	low (_var_sys_NVM+2)
  5651  00229E  D003               	goto	L18
  5652  0022A0                     l20673:
  5653                           
  5654                           ; BSR set to: 0
  5655                           ;sm_MenuConfiguration_MC50.c: 923:                 {;sm_MenuConfiguration_MC50.c: 924:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.motorSensitivity;
  5656  0022A0  0E9B               	movlw	low (_var_sys_NVM+3)
  5657  0022A2  D001               	goto	L18
  5658  0022A4                     l20675:
  5659                           
  5660                           ; BSR set to: 0
  5661                           ;sm_MenuConfiguration_MC50.c: 928:                 {;sm_MenuConfiguration_MC50.c: 929:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.decelarationSensivity;
  5662  0022A4  0EA7               	movlw	low (_var_sys_NVM+15)
  5663  0022A6                     L18:
  5664  0022A6  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5665  0022A8  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5666                           
  5667                           ;sm_MenuConfiguration_MC50.c: 930:                 };sm_MenuConfiguration_MC50.c: 931:  
      +                                         break;
  5668  0022AA  D7E3               	goto	L19
  5669  0022AC                     l20679:
  5670                           
  5671                           ; BSR set to: 0
  5672  0022AC  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5673  0022AE  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5674  0022B0  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5675                           
  5676                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5677                           ; Switch size 1, requested type "simple"
  5678                           ; Number of cases is 1, Range of values is 0 to 0
  5679                           ; switch strategies available:
  5680                           ; Name         Instructions Cycles
  5681                           ; simple_byte            4     3 (average)
  5682                           ;	Chosen strategy is simple_byte
  5683  0022B2  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5684  0022B4  0A00               	xorlw	0	; case 0
  5685  0022B6  A4D8               	btfss	status,2,c
  5686  0022B8  D7DC               	goto	L19
  5687                           
  5688                           ; BSR set to: 0
  5689                           ; Switch size 1, requested type "simple"
  5690                           ; Number of cases is 3, Range of values is 0 to 2
  5691                           ; switch strategies available:
  5692                           ; Name         Instructions Cycles
  5693                           ; simple_byte           10     6 (average)
  5694                           ;	Chosen strategy is simple_byte
  5695  0022BA  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5696  0022BC  0A00               	xorlw	0	; case 0
  5697  0022BE  B4D8               	btfsc	status,2,c
  5698  0022C0  D7E6               	goto	l20665
  5699  0022C2  0A01               	xorlw	1	; case 1
  5700  0022C4  B4D8               	btfsc	status,2,c
  5701  0022C6  D7EC               	goto	l20673
  5702  0022C8  0A03               	xorlw	3	; case 2
  5703  0022CA  B4D8               	btfsc	status,2,c
  5704  0022CC  D7EB               	goto	l20675
  5705  0022CE  D7D1               	goto	L19
  5706  0022D0                     l20685:
  5707                           
  5708                           ; BSR set to: 0
  5709                           ;sm_MenuConfiguration_MC50.c: 942:                 {;sm_MenuConfiguration_MC50.c: 943:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.autoTimeFullClose;
  5710  0022D0  0E9D               	movlw	low (_var_sys_NVM+5)
  5711  0022D2  D001               	goto	L20
  5712  0022D4                     l20687:
  5713                           
  5714                           ; BSR set to: 0
  5715                           ;sm_MenuConfiguration_MC50.c: 947:                 {;sm_MenuConfiguration_MC50.c: 948:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.autoTimeWalkClose;
  5716  0022D4  0E9E               	movlw	low (_var_sys_NVM+6)
  5717  0022D6                     L20:
  5718  0022D6  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5719  0022D8  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5720                           
  5721                           ;sm_MenuConfiguration_MC50.c: 949:                 };sm_MenuConfiguration_MC50.c: 950:  
      +                                         break;
  5722  0022DA  D00E               	goto	l20693
  5723  0022DC                     l20691:
  5724                           
  5725                           ; BSR set to: 0
  5726  0022DC  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5727  0022DE  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5728  0022E0  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5729                           
  5730                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5731                           ; Switch size 1, requested type "simple"
  5732                           ; Number of cases is 1, Range of values is 0 to 0
  5733                           ; switch strategies available:
  5734                           ; Name         Instructions Cycles
  5735                           ; simple_byte            4     3 (average)
  5736                           ;	Chosen strategy is simple_byte
  5737  0022E2  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5738  0022E4  0A00               	xorlw	0	; case 0
  5739  0022E6  A4D8               	btfss	status,2,c
  5740  0022E8  D007               	goto	l20693
  5741                           
  5742                           ; BSR set to: 0
  5743                           ; Switch size 1, requested type "simple"
  5744                           ; Number of cases is 2, Range of values is 0 to 1
  5745                           ; switch strategies available:
  5746                           ; Name         Instructions Cycles
  5747                           ; simple_byte            7     4 (average)
  5748                           ;	Chosen strategy is simple_byte
  5749  0022EA  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5750  0022EC  0A00               	xorlw	0	; case 0
  5751  0022EE  B4D8               	btfsc	status,2,c
  5752  0022F0  D7EF               	goto	l20685
  5753  0022F2  0A01               	xorlw	1	; case 1
  5754  0022F4  B4D8               	btfsc	status,2,c
  5755  0022F6  D7EE               	goto	l20687
  5756  0022F8                     l20693:
  5757                           
  5758                           ; BSR set to: 0
  5759                           ;sm_MenuConfiguration_MC50.c: 952:             edit_Param.Max=99;
  5760  0022F8  0E63               	movlw	99
  5761  0022FA  D7B8               	goto	L29
  5762  0022FC                     l20697:
  5763                           
  5764                           ; BSR set to: 0
  5765                           ;sm_MenuConfiguration_MC50.c: 963:                 {;sm_MenuConfiguration_MC50.c: 964:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.photoCellIsON;
  5766  0022FC  0E9F               	movlw	low (_var_sys_NVM+7)
  5767  0022FE  D034               	goto	L125
  5768  002300                     l20699:
  5769                           
  5770                           ; BSR set to: 0
  5771                           ;sm_MenuConfiguration_MC50.c: 968:                 {;sm_MenuConfiguration_MC50.c: 969:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.photoCellInOpen;
  5772  002300  0EA0               	movlw	low (_var_sys_NVM+8)
  5773  002302  D032               	goto	L125
  5774  002304                     l20703:
  5775                           
  5776                           ; BSR set to: 0
  5777  002304  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5778  002306  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5779  002308  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5780                           
  5781                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5782                           ; Switch size 1, requested type "simple"
  5783                           ; Number of cases is 1, Range of values is 0 to 0
  5784                           ; switch strategies available:
  5785                           ; Name         Instructions Cycles
  5786                           ; simple_byte            4     3 (average)
  5787                           ;	Chosen strategy is simple_byte
  5788  00230A  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5789  00230C  0A00               	xorlw	0	; case 0
  5790  00230E  A4D8               	btfss	status,2,c
  5791  002310  D02D               	goto	L124
  5792                           
  5793                           ; BSR set to: 0
  5794                           ; Switch size 1, requested type "simple"
  5795                           ; Number of cases is 2, Range of values is 0 to 1
  5796                           ; switch strategies available:
  5797                           ; Name         Instructions Cycles
  5798                           ; simple_byte            7     4 (average)
  5799                           ;	Chosen strategy is simple_byte
  5800  002312  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5801  002314  0A00               	xorlw	0	; case 0
  5802  002316  B4D8               	btfsc	status,2,c
  5803  002318  D7F1               	goto	l20697
  5804  00231A  0A01               	xorlw	1	; case 1
  5805  00231C  B4D8               	btfsc	status,2,c
  5806  00231E  D7F0               	goto	l20699
  5807  002320  D025               	goto	L124
  5808  002322                     l20709:
  5809                           
  5810                           ; BSR set to: 0
  5811                           ;sm_MenuConfiguration_MC50.c: 984:                 {;sm_MenuConfiguration_MC50.c: 985:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.securityBandIsON;
  5812  002322  0EA1               	movlw	low (_var_sys_NVM+9)
  5813  002324  D021               	goto	L125
  5814  002326                     l20711:
  5815                           
  5816                           ; BSR set to: 0
  5817                           ;sm_MenuConfiguration_MC50.c: 989:                 {;sm_MenuConfiguration_MC50.c: 990:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.securityBandType;
  5818  002326  0EA2               	movlw	low (_var_sys_NVM+10)
  5819  002328  D01F               	goto	L125
  5820  00232A                     l20713:
  5821                           
  5822                           ; BSR set to: 0
  5823                           ;sm_MenuConfiguration_MC50.c: 994:                 {;sm_MenuConfiguration_MC50.c: 995:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.securityBandInOpen;
  5824  00232A  0EA3               	movlw	low (_var_sys_NVM+11)
  5825  00232C  D01D               	goto	L125
  5826  00232E                     l20715:
  5827                           
  5828                           ; BSR set to: 0
  5829                           ;sm_MenuConfiguration_MC50.c: 999:                 {;sm_MenuConfiguration_MC50.c: 1000: 
      +                                              edit_Param.Value=(unsigned char*)&var_sys_NVM.Stopboton;
  5830  00232E  0EAE               	movlw	low (_var_sys_NVM+22)
  5831  002330  D01B               	goto	L125
  5832  002332                     l20719:
  5833                           
  5834                           ; BSR set to: 0
  5835  002332  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5836  002334  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5837  002336  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5838                           
  5839                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5840                           ; Switch size 1, requested type "simple"
  5841                           ; Number of cases is 1, Range of values is 0 to 0
  5842                           ; switch strategies available:
  5843                           ; Name         Instructions Cycles
  5844                           ; simple_byte            4     3 (average)
  5845                           ;	Chosen strategy is simple_byte
  5846  002338  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5847  00233A  0A00               	xorlw	0	; case 0
  5848  00233C  A4D8               	btfss	status,2,c
  5849  00233E  D016               	goto	L124
  5850                           
  5851                           ; BSR set to: 0
  5852                           ; Switch size 1, requested type "simple"
  5853                           ; Number of cases is 4, Range of values is 0 to 3
  5854                           ; switch strategies available:
  5855                           ; Name         Instructions Cycles
  5856                           ; simple_byte           13     7 (average)
  5857                           ;	Chosen strategy is simple_byte
  5858  002340  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5859  002342  0A00               	xorlw	0	; case 0
  5860  002344  B4D8               	btfsc	status,2,c
  5861  002346  D7ED               	goto	l20709
  5862  002348  0A01               	xorlw	1	; case 1
  5863  00234A  B4D8               	btfsc	status,2,c
  5864  00234C  D7EC               	goto	l20711
  5865  00234E  0A03               	xorlw	3	; case 2
  5866  002350  B4D8               	btfsc	status,2,c
  5867  002352  D7EB               	goto	l20713
  5868  002354  0A01               	xorlw	1	; case 3
  5869  002356  B4D8               	btfsc	status,2,c
  5870  002358  D7EA               	goto	l20715
  5871  00235A  D008               	goto	L124
  5872  00235C                     l20725:
  5873                           
  5874                           ; BSR set to: 0
  5875                           ;sm_MenuConfiguration_MC50.c: 1018:                 {;sm_MenuConfiguration_MC50.c: 1019:
      +                                               edit_Param.Value=(unsigned char*)&var_sys_NVM.homemPresente;
  5876  00235C  0EA8               	movlw	low (_var_sys_NVM+16)
  5877  00235E  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5878  002360  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5879                           
  5880                           ; BSR set to: 0
  5881                           ;sm_MenuConfiguration_MC50.c: 1020:                       edit_Param.Max=2;
  5882  002362  0E02               	movlw	2
  5883  002364  D783               	goto	L29
  5884  002366                     l20731:
  5885                           
  5886                           ; BSR set to: 0
  5887                           ;sm_MenuConfiguration_MC50.c: 1025:                 {;sm_MenuConfiguration_MC50.c: 1026:
      +                                               edit_Param.Value=(unsigned char*)&var_sys_NVM.logicDigital;
  5888  002366  0EA9               	movlw	low (_var_sys_NVM+17)
  5889  002368                     L125:
  5890  002368  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5891  00236A  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5892  00236C                     L124:
  5893                           
  5894                           ; BSR set to: 0
  5895                           ;sm_MenuConfiguration_MC50.c: 1027:                     edit_Param.Max=1;
  5896  00236C  0E01               	movlw	1
  5897  00236E  D77E               	goto	L29
  5898  002370                     l20739:
  5899                           
  5900                           ; BSR set to: 0
  5901  002370  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5902  002372  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5903  002374  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5904                           
  5905                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5906                           ; Switch size 1, requested type "simple"
  5907                           ; Number of cases is 1, Range of values is 0 to 0
  5908                           ; switch strategies available:
  5909                           ; Name         Instructions Cycles
  5910                           ; simple_byte            4     3 (average)
  5911                           ;	Chosen strategy is simple_byte
  5912  002376  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5913  002378  0A00               	xorlw	0	; case 0
  5914  00237A  A4D8               	btfss	status,2,c
  5915  00237C  D77A               	goto	L19
  5916                           
  5917                           ; BSR set to: 0
  5918                           ; Switch size 1, requested type "simple"
  5919                           ; Number of cases is 2, Range of values is 0 to 1
  5920                           ; switch strategies available:
  5921                           ; Name         Instructions Cycles
  5922                           ; simple_byte            7     4 (average)
  5923                           ;	Chosen strategy is simple_byte
  5924  00237E  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5925  002380  0A00               	xorlw	0	; case 0
  5926  002382  B4D8               	btfsc	status,2,c
  5927  002384  D7EB               	goto	l20725
  5928  002386  0A01               	xorlw	1	; case 1
  5929  002388  B4D8               	btfsc	status,2,c
  5930  00238A  D7ED               	goto	l20731
  5931  00238C  D772               	goto	L19
  5932  00238E                     l20745:
  5933                           
  5934                           ; BSR set to: 0
  5935                           ;sm_MenuConfiguration_MC50.c: 1042:                 {;sm_MenuConfiguration_MC50.c: 1043:
      +                                               edit_Param.Value=(unsigned char*)&var_sys_NVM.softStart;
  5936  00238E  0EAA               	movlw	low (_var_sys_NVM+18)
  5937  002390  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5938  002392  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5939                           
  5940                           ; BSR set to: 0
  5941                           ;sm_MenuConfiguration_MC50.c: 1044:                      edit_Param.Max=9;
  5942  002394  0E09               	movlw	9
  5943  002396  D76A               	goto	L29
  5944  002398                     l20751:
  5945                           
  5946                           ; BSR set to: 0
  5947                           ;sm_MenuConfiguration_MC50.c: 1049:                 {;sm_MenuConfiguration_MC50.c: 1050:
      +                                               edit_Param.Value=(unsigned char*)&var_sys_NVM.softstop;
  5948  002398  0EAB               	movlw	low (_var_sys_NVM+19)
  5949  00239A  D7FA               	goto	L27
  5950  00239C                     l20759:
  5951                           
  5952                           ; BSR set to: 0
  5953  00239C  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5954  00239E  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5955  0023A0  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5956                           
  5957                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5958                           ; Switch size 1, requested type "simple"
  5959                           ; Number of cases is 1, Range of values is 0 to 0
  5960                           ; switch strategies available:
  5961                           ; Name         Instructions Cycles
  5962                           ; simple_byte            4     3 (average)
  5963                           ;	Chosen strategy is simple_byte
  5964  0023A2  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5965  0023A4  0A00               	xorlw	0	; case 0
  5966  0023A6  A4D8               	btfss	status,2,c
  5967  0023A8  D764               	goto	L19
  5968                           
  5969                           ; BSR set to: 0
  5970                           ; Switch size 1, requested type "simple"
  5971                           ; Number of cases is 2, Range of values is 0 to 1
  5972                           ; switch strategies available:
  5973                           ; Name         Instructions Cycles
  5974                           ; simple_byte            7     4 (average)
  5975                           ;	Chosen strategy is simple_byte
  5976  0023AA  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5977  0023AC  0A00               	xorlw	0	; case 0
  5978  0023AE  B4D8               	btfsc	status,2,c
  5979  0023B0  D7EE               	goto	l20745
  5980  0023B2  0A01               	xorlw	1	; case 1
  5981  0023B4  B4D8               	btfsc	status,2,c
  5982  0023B6  D7F0               	goto	l20751
  5983  0023B8  D75C               	goto	L19
  5984  0023BA                     l20765:
  5985                           
  5986                           ; BSR set to: 0
  5987                           ;sm_MenuConfiguration_MC50.c: 1068:                 {;sm_MenuConfiguration_MC50.c: 1069:
      +                                 edit_Param.Value=&value;
  5988  0023BA  0EF8               	movlw	low setValueToEdit@value
  5989  0023BC  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5990  0023BE  0E01               	movlw	high setValueToEdit@value
  5991  0023C0  6E48               	movwf	(_edit_Param+2)^0,c	;volatile
  5992                           
  5993                           ; BSR set to: 0
  5994                           ;sm_MenuConfiguration_MC50.c: 1070:                     for(unsigned char posindex=0; po
      +                          sindex <= *(unsigned char*)&var_sys_NVM.positionRemotesFull; posindex++)
  5995  0023C2  0E00               	movlw	0
  5996  0023C4  6FDF               	movwf	setValueToEdit@posindex& (0+255),b
  5997  0023C6  D00D               	goto	l20775
  5998  0023C8                     l3433:
  5999                           
  6000                           ; BSR set to: 0
  6001                           ;sm_MenuConfiguration_MC50.c: 1071:                     {;sm_MenuConfiguration_MC50.c: 1
      +                          072:                         value=posindex;
  6002  0023C8  C0DF  F1F8         	movff	setValueToEdit@posindex,setValueToEdit@value
  6003                           
  6004                           ; BSR set to: 0
  6005                           ;sm_MenuConfiguration_MC50.c: 1073:                         if(cmdMemoryIsEmpty(menu_st.
      +                          parameterSelected, posindex))
  6006  0023CC  C0DF  F02E         	movff	setValueToEdit@posindex,cmdMemoryIsEmpty@position
  6007  0023D0  0101               	movlb	1	; () banked
  6008  0023D2  5168               	movf	(_menu_st+23)& (0+255),w,b
  6009  0023D4  ECB3  F03A         	call	_cmdMemoryIsEmpty
  6010  0023D8  0900               	iorlw	0
  6011  0023DA  A4D8               	btfss	status,2,c
  6012  0023DC  D008               	goto	u23880
  6013                           
  6014                           ;sm_MenuConfiguration_MC50.c: 1075:                     }
  6015  0023DE  0100               	movlb	0	; () banked
  6016  0023E0  2BDF               	incf	setValueToEdit@posindex& (0+255),f,b
  6017  0023E2                     l20775:
  6018                           
  6019                           ; BSR set to: 0
  6020  0023E2  EE20  F0B8         	lfsr	2,_var_sys_NVM+32
  6021  0023E6  51DF               	movf	setValueToEdit@posindex& (0+255),w,b
  6022  0023E8  5CDE               	subwf	postinc2,w,c
  6023  0023EA  B0D8               	btfsc	status,0,c
  6024  0023EC  D7ED               	goto	l3433
  6025  0023EE                     u23880:
  6026                           
  6027                           ;sm_MenuConfiguration_MC50.c: 1076:                     edit_Param.Max=*(unsigned char*)
      +                          &var_sys_NVM.positionRemotesFull;
  6028  0023EE  EE20  F0B8         	lfsr	2,_var_sys_NVM+32
  6029  0023F2  D005               	goto	L28
  6030  0023F4                     l20779:
  6031                           
  6032                           ; BSR set to: 0
  6033                           ;sm_MenuConfiguration_MC50.c: 1080:                 {;sm_MenuConfiguration_MC50.c: 1081:
      +                                               edit_Param.Value=(unsigned char*)&var_sys_NVM.positionRemotesWalk;
  6034  0023F4  0EB9               	movlw	low (_var_sys_NVM+33)
  6035  0023F6  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  6036  0023F8  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  6037                           
  6038                           ; BSR set to: 0
  6039                           ;sm_MenuConfiguration_MC50.c: 1082:                     edit_Param.Max=*(unsigned char*)
      +                          &var_sys_NVM.positionRemotesWalk;
  6040  0023FA  EE20  F0B9         	lfsr	2,_var_sys_NVM+33
  6041  0023FE                     L28:
  6042  0023FE  50DF               	movf	indf2,w,c
  6043  002400  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  6044                           
  6045                           ;sm_MenuConfiguration_MC50.c: 1083:                 };sm_MenuConfiguration_MC50.c: 1084:
      +                                           break;
  6046  002402  D00E               	goto	l20787
  6047  002404                     l20785:
  6048                           
  6049                           ; BSR set to: 0
  6050  002404  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  6051  002406  6FDC               	movwf	??_setValueToEdit& (0+255),b
  6052  002408  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  6053                           
  6054                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6055                           ; Switch size 1, requested type "simple"
  6056                           ; Number of cases is 1, Range of values is 0 to 0
  6057                           ; switch strategies available:
  6058                           ; Name         Instructions Cycles
  6059                           ; simple_byte            4     3 (average)
  6060                           ;	Chosen strategy is simple_byte
  6061  00240A  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  6062  00240C  0A00               	xorlw	0	; case 0
  6063  00240E  A4D8               	btfss	status,2,c
  6064  002410  D007               	goto	l20787
  6065                           
  6066                           ; BSR set to: 0
  6067                           ; Switch size 1, requested type "simple"
  6068                           ; Number of cases is 2, Range of values is 0 to 1
  6069                           ; switch strategies available:
  6070                           ; Name         Instructions Cycles
  6071                           ; simple_byte            7     4 (average)
  6072                           ;	Chosen strategy is simple_byte
  6073  002412  51DC               	movf	??_setValueToEdit& (0+255),w,b
  6074  002414  0A00               	xorlw	0	; case 0
  6075  002416  B4D8               	btfsc	status,2,c
  6076  002418  D7D0               	goto	l20765
  6077  00241A  0A01               	xorlw	1	; case 1
  6078  00241C  B4D8               	btfsc	status,2,c
  6079  00241E  D7EA               	goto	l20779
  6080  002420                     l20787:
  6081                           
  6082                           ;sm_MenuConfiguration_MC50.c: 1086:             edit_Param.position=*edit_Param.Value;
  6083  002420  C047  FFD9         	movff	_edit_Param+1,fsr2l	;volatile
  6084  002424  C048  FFDA         	movff	_edit_Param+2,fsr2h	;volatile
  6085  002428  50DF               	movf	indf2,w,c
  6086  00242A  6E46               	movwf	_edit_Param^0,c	;volatile
  6087                           
  6088                           ;sm_MenuConfiguration_MC50.c: 1087:             edit_Param.Min=0;
  6089  00242C  0E00               	movlw	0
  6090  00242E  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  6091                           
  6092                           ;sm_MenuConfiguration_MC50.c: 1088:             haveValueToEdit=1;
  6093  002430  0E01               	movlw	1
  6094  002432  0100               	movlb	0	; () banked
  6095  002434  6FE0               	movwf	setValueToEdit@haveValueToEdit& (0+255),b
  6096                           
  6097                           ;sm_MenuConfiguration_MC50.c: 1089:             edit_Param.tempValue=*edit_Param.Value;
  6098  002436  C047  FFD9         	movff	_edit_Param+1,fsr2l	;volatile
  6099  00243A  C048  FFDA         	movff	_edit_Param+2,fsr2h	;volatile
  6100  00243E  50DF               	movf	indf2,w,c
  6101  002440  6E49               	movwf	(_edit_Param+3)^0,c	;volatile
  6102                           
  6103                           ; BSR set to: 0
  6104                           ;sm_MenuConfiguration_MC50.c: 1090:             InitReceiver();
  6105  002442  ECD0  F047         	call	_InitReceiver	;wreg free
  6106                           
  6107                           ;sm_MenuConfiguration_MC50.c: 1091:         };sm_MenuConfiguration_MC50.c: 1092:        
      +                           break;
  6108  002446  D029               	goto	l20799
  6109  002448                     l20797:
  6110                           
  6111                           ; BSR set to: 0
  6112  002448  51DE               	movf	setValueToEdit@menuType& (0+255),w,b
  6113  00244A  6FDC               	movwf	??_setValueToEdit& (0+255),b
  6114  00244C  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  6115                           
  6116                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6117                           ; Switch size 1, requested type "simple"
  6118                           ; Number of cases is 1, Range of values is 0 to 0
  6119                           ; switch strategies available:
  6120                           ; Name         Instructions Cycles
  6121                           ; simple_byte            4     3 (average)
  6122                           ;	Chosen strategy is simple_byte
  6123  00244E  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  6124  002450  0A00               	xorlw	0	; case 0
  6125  002452  A4D8               	btfss	status,2,c
  6126  002454  D022               	goto	l20799
  6127                           
  6128                           ; BSR set to: 0
  6129                           ; Switch size 1, requested type "simple"
  6130                           ; Number of cases is 11, Range of values is 0 to 12
  6131                           ; switch strategies available:
  6132                           ; Name         Instructions Cycles
  6133                           ; simple_byte           34    18 (average)
  6134                           ;	Chosen strategy is simple_byte
  6135  002456  51DC               	movf	??_setValueToEdit& (0+255),w,b
  6136  002458  0A00               	xorlw	0	; case 0
  6137  00245A  B4D8               	btfsc	status,2,c
  6138  00245C  D5A1               	goto	l3353
  6139  00245E  0A01               	xorlw	1	; case 1
  6140  002460  B4D8               	btfsc	status,2,c
  6141  002462  D5FE               	goto	l3367
  6142  002464  0A05               	xorlw	5	; case 4
  6143  002466  B4D8               	btfsc	status,2,c
  6144  002468  D6D7               	goto	l20649
  6145  00246A  0A01               	xorlw	1	; case 5
  6146  00246C  B4D8               	btfsc	status,2,c
  6147  00246E  D6EF               	goto	l20657
  6148  002470  0A03               	xorlw	3	; case 6
  6149  002472  B4D8               	btfsc	status,2,c
  6150  002474  D707               	goto	l20663
  6151  002476  0A01               	xorlw	1	; case 7
  6152  002478  B4D8               	btfsc	status,2,c
  6153  00247A  D730               	goto	l20691
  6154  00247C  0A0F               	xorlw	15	; case 8
  6155  00247E  B4D8               	btfsc	status,2,c
  6156  002480  D741               	goto	l20703
  6157  002482  0A01               	xorlw	1	; case 9
  6158  002484  B4D8               	btfsc	status,2,c
  6159  002486  D755               	goto	l20719
  6160  002488  0A03               	xorlw	3	; case 10
  6161  00248A  B4D8               	btfsc	status,2,c
  6162  00248C  D771               	goto	l20739
  6163  00248E  0A01               	xorlw	1	; case 11
  6164  002490  B4D8               	btfsc	status,2,c
  6165  002492  D784               	goto	l20759
  6166  002494  0A07               	xorlw	7	; case 12
  6167  002496  B4D8               	btfsc	status,2,c
  6168  002498  D7B5               	goto	l20785
  6169  00249A                     l20799:
  6170                           
  6171                           ;sm_MenuConfiguration_MC50.c: 1095:     return haveValueToEdit;
  6172  00249A  0100               	movlb	0	; () banked
  6173  00249C  51E0               	movf	setValueToEdit@haveValueToEdit& (0+255),w,b
  6174                           
  6175                           ; BSR set to: 0
  6176  00249E  0012               	return		;funcret
  6177  0024A0                     __end_of_setValueToEdit:
  6178                           	callstack 0
  6179                           
  6180 ;; *************** function _load_New_Menu *****************
  6181 ;; Defined at:
  6182 ;;		line 434 in file "sm_MenuConfiguration_MC50.c"
  6183 ;; Parameters:    Size  Location     Type
  6184 ;;  Menu            1    wreg     enum E10813
  6185 ;; Auto vars:     Size  Location     Type
  6186 ;;  Menu            1   33[COMRAM] enum E10813
  6187 ;;  i               1   34[COMRAM] unsigned char 
  6188 ;; Return value:  Size  Location     Type
  6189 ;;                  1    wreg      void 
  6190 ;; Registers used:
  6191 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6192 ;; Tracked objects:
  6193 ;;		On entry : 0/0
  6194 ;;		On exit  : 0/0
  6195 ;;		Unchanged: 0/0
  6196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6197 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6198 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6199 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6200 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6201 ;;Total ram usage:        4 bytes
  6202 ;; Hardware stack levels used: 1
  6203 ;; Hardware stack levels required when called: 5
  6204 ;; This function calls:
  6205 ;;		_SetSegmentValueIntermitentMain
  6206 ;;		_SetSegmentValueMain
  6207 ;; This function is called by:
  6208 ;;		_sm_execute_main
  6209 ;;		_sm_execute_menuConfiguration
  6210 ;;		_setValueToEdit
  6211 ;; This function uses a non-reentrant model
  6212 ;;
  6213                           
  6214                           	psect	text4
  6215  003CFA                     __ptext4:
  6216                           	callstack 0
  6217  003CFA                     _load_New_Menu:
  6218                           	callstack 22
  6219                           
  6220                           ; BSR set to: 0
  6221                           ;incstack = 0
  6222                           ;load_New_Menu@Menu stored from wreg
  6223  003CFA  6E22               	movwf	load_New_Menu@Menu^0,c
  6224                           
  6225                           ;sm_MenuConfiguration_MC50.c: 435:     ts_system.timeoutMenu=((1000/50)*5) ;
  6226  003CFC  0E00               	movlw	0
  6227  003CFE  0101               	movlb	1	; () banked
  6228  003D00  6FA9               	movwf	(_ts_system+15)& (0+255),b	;volatile
  6229  003D02  0E64               	movlw	100
  6230  003D04  6FA8               	movwf	(_ts_system+14)& (0+255),b	;volatile
  6231                           
  6232                           ; BSR set to: 1
  6233                           ;sm_MenuConfiguration_MC50.c: 439:     if(menu_st.actualMenu!=Menu && Menu>E_Menu)
  6234  003D06  5022               	movf	load_New_Menu@Menu^0,w,c
  6235  003D08  1966               	xorwf	(_menu_st+21)& (0+255),w,b
  6236  003D0A  B4D8               	btfsc	status,2,c
  6237  003D0C  D006               	goto	l19807
  6238                           
  6239                           ; BSR set to: 1
  6240  003D0E  0E01               	movlw	1
  6241  003D10  6422               	cpfsgt	load_New_Menu@Menu^0,c
  6242  003D12  D003               	goto	l19807
  6243                           
  6244                           ; BSR set to: 1
  6245                           ;sm_MenuConfiguration_MC50.c: 440:     {;sm_MenuConfiguration_MC50.c: 441:         menu_
      +                          st.parameterSelected=0;
  6246  003D14  0E00               	movlw	0
  6247  003D16  6F68               	movwf	(_menu_st+23)& (0+255),b
  6248                           
  6249                           ;sm_MenuConfiguration_MC50.c: 442:     }
  6250  003D18  D005               	goto	l19811
  6251  003D1A                     l19807:
  6252                           
  6253                           ; BSR set to: 1
  6254  003D1A  0E02               	movlw	2
  6255  003D1C  6022               	cpfslt	load_New_Menu@Menu^0,c
  6256  003D1E  D002               	goto	l19811
  6257                           
  6258                           ; BSR set to: 1
  6259                           ;sm_MenuConfiguration_MC50.c: 444:     {;sm_MenuConfiguration_MC50.c: 445:        menu_s
      +                          t.parameterSelected = menu_st.lastMainParameterSelected;
  6260  003D20  C169  F168         	movff	_menu_st+24,_menu_st+23
  6261  003D24                     l19811:
  6262                           
  6263                           ; BSR set to: 1
  6264                           ;sm_MenuConfiguration_MC50.c: 449:     menu_st.lastMenu=((void*)0);
  6265  003D24  0E00               	movlw	0
  6266  003D26  6F65               	movwf	(_menu_st+20)& (0+255),b
  6267                           
  6268                           ;sm_MenuConfiguration_MC50.c: 450:     switch (Menu)
  6269  003D28  D0F6               	goto	l19863
  6270  003D2A                     l19813:
  6271                           
  6272                           ; BSR set to: 1
  6273                           ;sm_MenuConfiguration_MC50.c: 453:         {;sm_MenuConfiguration_MC50.c: 455:          
      +                             menu_st.actualMenu=P_Menu;
  6274  003D2A  0E00               	movlw	0
  6275  003D2C  6F66               	movwf	(_menu_st+21)& (0+255),b
  6276                           
  6277                           ;sm_MenuConfiguration_MC50.c: 456:             menu_st.menuSize=10;
  6278  003D2E  0E0A               	movlw	10
  6279  003D30  6F67               	movwf	(_menu_st+22)& (0+255),b
  6280                           
  6281                           ;sm_MenuConfiguration_MC50.c: 457:             menu_st.lastMainParameterSelected=0;
  6282  003D32  0E00               	movlw	0
  6283  003D34  6F69               	movwf	(_menu_st+24)& (0+255),b
  6284                           
  6285                           ;sm_MenuConfiguration_MC50.c: 458:             for (i=0;i<(10);i++)
  6286  003D36  0E00               	movlw	0
  6287  003D38  6E23               	movwf	load_New_Menu@i^0,c
  6288  003D3A                     l19819:
  6289                           
  6290                           ;sm_MenuConfiguration_MC50.c: 459:             {;sm_MenuConfiguration_MC50.c: 460:      
      +                                    menu_st.menuList[i].value_display1=dP;
  6291  003D3A  5023               	movf	load_New_Menu@i^0,w,c
  6292  003D3C  0D02               	mullw	2
  6293  003D3E  0E51               	movlw	low _menu_st
  6294  003D40  24F3               	addwf	243,w,c
  6295  003D42  6ED9               	movwf	fsr2l,c
  6296  003D44  0E01               	movlw	high _menu_st
  6297  003D46  20F4               	addwfc	prodh,w,c
  6298  003D48  6EDA               	movwf	fsr2h,c
  6299  003D4A  0E10               	movlw	16
  6300  003D4C  6EDF               	movwf	indf2,c
  6301                           
  6302                           ;sm_MenuConfiguration_MC50.c: 461:                menu_st.menuList[i].value_display2=i;
  6303  003D4E  5023               	movf	load_New_Menu@i^0,w,c
  6304  003D50  0D02               	mullw	2
  6305  003D52  0E52               	movlw	low (_menu_st+1)
  6306  003D54  24F3               	addwf	243,w,c
  6307  003D56  6ED9               	movwf	fsr2l,c
  6308  003D58  0E01               	movlw	high (_menu_st+1)
  6309  003D5A  20F4               	addwfc	prodh,w,c
  6310  003D5C  6EDA               	movwf	fsr2h,c
  6311  003D5E  C023  FFDF         	movff	load_New_Menu@i,indf2
  6312                           
  6313                           ;sm_MenuConfiguration_MC50.c: 462:             }
  6314  003D62  2A23               	incf	load_New_Menu@i^0,f,c
  6315  003D64  0E09               	movlw	9
  6316  003D66  6423               	cpfsgt	load_New_Menu@i^0,c
  6317  003D68  D7E8               	goto	l19819
  6318  003D6A  D107               	goto	l19865
  6319  003D6C                     l19825:
  6320                           
  6321                           ; BSR set to: 1
  6322                           ;sm_MenuConfiguration_MC50.c: 466:         {;sm_MenuConfiguration_MC50.c: 468:          
      +                             menu_st.actualMenu=E_Menu;
  6323  003D6C  0E01               	movlw	1
  6324  003D6E  6F66               	movwf	(_menu_st+21)& (0+255),b
  6325                           
  6326                           ;sm_MenuConfiguration_MC50.c: 469:             menu_st.menuSize=10;
  6327  003D70  0E0A               	movlw	10
  6328  003D72  6F67               	movwf	(_menu_st+22)& (0+255),b
  6329                           
  6330                           ;sm_MenuConfiguration_MC50.c: 470:             menu_st.lastMainParameterSelected=0;
  6331  003D74  0E00               	movlw	0
  6332  003D76  6F69               	movwf	(_menu_st+24)& (0+255),b
  6333                           
  6334                           ;sm_MenuConfiguration_MC50.c: 471:             for (i=0;i<(10);i++)
  6335  003D78  0E00               	movlw	0
  6336  003D7A  6E23               	movwf	load_New_Menu@i^0,c
  6337  003D7C                     l19831:
  6338                           
  6339                           ;sm_MenuConfiguration_MC50.c: 472:             {;sm_MenuConfiguration_MC50.c: 473:      
      +                                    menu_st.menuList[i].value_display1=dE;
  6340  003D7C  5023               	movf	load_New_Menu@i^0,w,c
  6341  003D7E  0D02               	mullw	2
  6342  003D80  0E51               	movlw	low _menu_st
  6343  003D82  24F3               	addwf	243,w,c
  6344  003D84  6ED9               	movwf	fsr2l,c
  6345  003D86  0E01               	movlw	high _menu_st
  6346  003D88  20F4               	addwfc	prodh,w,c
  6347  003D8A  6EDA               	movwf	fsr2h,c
  6348  003D8C  0E0E               	movlw	14
  6349  003D8E  6EDF               	movwf	indf2,c
  6350                           
  6351                           ;sm_MenuConfiguration_MC50.c: 474:                menu_st.menuList[i].value_display2=i;
  6352  003D90  5023               	movf	load_New_Menu@i^0,w,c
  6353  003D92  0D02               	mullw	2
  6354  003D94  0E52               	movlw	low (_menu_st+1)
  6355  003D96  24F3               	addwf	243,w,c
  6356  003D98  6ED9               	movwf	fsr2l,c
  6357  003D9A  0E01               	movlw	high (_menu_st+1)
  6358  003D9C  20F4               	addwfc	prodh,w,c
  6359  003D9E  6EDA               	movwf	fsr2h,c
  6360  003DA0  C023  FFDF         	movff	load_New_Menu@i,indf2
  6361                           
  6362                           ;sm_MenuConfiguration_MC50.c: 475:             }
  6363  003DA4  2A23               	incf	load_New_Menu@i^0,f,c
  6364  003DA6  0E09               	movlw	9
  6365  003DA8  6423               	cpfsgt	load_New_Menu@i^0,c
  6366  003DAA  D7E8               	goto	l19831
  6367  003DAC  D0E6               	goto	l19865
  6368  003DAE                     l19837:
  6369                           
  6370                           ; BSR set to: 1
  6371                           ;sm_MenuConfiguration_MC50.c: 479:         {;sm_MenuConfiguration_MC50.c: 480:          
      +                             menu_st.lastMenu=P_Menu;
  6372  003DAE  0E00               	movlw	0
  6373  003DB0  6F65               	movwf	(_menu_st+20)& (0+255),b
  6374                           
  6375                           ;sm_MenuConfiguration_MC50.c: 481:             menu_st.actualMenu=P0_SMenu;
  6376  003DB2  0E04               	movlw	4
  6377  003DB4  6F66               	movwf	(_menu_st+21)& (0+255),b
  6378                           
  6379                           ;sm_MenuConfiguration_MC50.c: 482:             menu_st.menuSize=4;
  6380  003DB6  0E04               	movlw	4
  6381  003DB8  6F67               	movwf	(_menu_st+22)& (0+255),b
  6382                           
  6383                           ;sm_MenuConfiguration_MC50.c: 483:             menu_st.menuList[0].value_display1=dA;
  6384  003DBA  0E0A               	movlw	10
  6385  003DBC  6F51               	movwf	_menu_st& (0+255),b
  6386                           
  6387                           ;sm_MenuConfiguration_MC50.c: 484:             menu_st.menuList[0].value_display2=dU;
  6388  003DBE  0E13               	movlw	19
  6389  003DC0  6F52               	movwf	(_menu_st+1)& (0+255),b
  6390                           
  6391                           ;sm_MenuConfiguration_MC50.c: 485:             menu_st.menuList[1].value_display1=dM;
  6392  003DC2  0E17               	movlw	23
  6393  003DC4  6F53               	movwf	(_menu_st+2)& (0+255),b
  6394                           
  6395                           ;sm_MenuConfiguration_MC50.c: 486:             menu_st.menuList[1].value_display2=dA;
  6396  003DC6  0E0A               	movlw	10
  6397  003DC8  6F54               	movwf	(_menu_st+3)& (0+255),b
  6398                           
  6399                           ;sm_MenuConfiguration_MC50.c: 487:             menu_st.menuList[2].value_display1=d5;
  6400  003DCA  0E05               	movlw	5
  6401  003DCC  6F55               	movwf	(_menu_st+4)& (0+255),b
  6402                           
  6403                           ;sm_MenuConfiguration_MC50.c: 488:             menu_st.menuList[2].value_display2=dy;
  6404  003DCE  0E21               	movlw	33
  6405  003DD0  6F56               	movwf	(_menu_st+5)& (0+255),b
  6406                           
  6407                           ;sm_MenuConfiguration_MC50.c: 489:             menu_st.menuList[3].value_display1=dd;
  6408  003DD2  0E0D               	movlw	13
  6409  003DD4  6F57               	movwf	(_menu_st+6)& (0+255),b
  6410                           
  6411                           ;sm_MenuConfiguration_MC50.c: 490:             menu_st.menuList[3].value_display2=d1;
  6412  003DD6  0E01               	movlw	1
  6413  003DD8  D051               	goto	L31
  6414  003DDA                     l19839:
  6415                           
  6416                           ; BSR set to: 1
  6417                           ;sm_MenuConfiguration_MC50.c: 494:         {;sm_MenuConfiguration_MC50.c: 495:          
      +                             menu_st.lastMenu=P_Menu;
  6418  003DDA  0E00               	movlw	0
  6419  003DDC  6F65               	movwf	(_menu_st+20)& (0+255),b
  6420                           
  6421                           ;sm_MenuConfiguration_MC50.c: 496:             menu_st.actualMenu=P1_SMenu;
  6422  003DDE  0E05               	movlw	5
  6423  003DE0  6F66               	movwf	(_menu_st+21)& (0+255),b
  6424                           
  6425                           ;sm_MenuConfiguration_MC50.c: 497:             menu_st.menuSize=2;
  6426  003DE2  0E02               	movlw	2
  6427  003DE4  6F67               	movwf	(_menu_st+22)& (0+255),b
  6428                           
  6429                           ;sm_MenuConfiguration_MC50.c: 498:             menu_st.menuList[0].value_display1=dd;
  6430  003DE6  0E0D               	movlw	13
  6431  003DE8  6F51               	movwf	_menu_st& (0+255),b
  6432                           
  6433                           ;sm_MenuConfiguration_MC50.c: 499:             menu_st.menuList[0].value_display2=dA;
  6434  003DEA  0E0A               	movlw	10
  6435  003DEC  6F52               	movwf	(_menu_st+1)& (0+255),b
  6436                           
  6437                           ;sm_MenuConfiguration_MC50.c: 500:             menu_st.menuList[1].value_display1=dd;
  6438  003DEE  0E0D               	movlw	13
  6439  003DF0  6F53               	movwf	(_menu_st+2)& (0+255),b
  6440                           
  6441                           ;sm_MenuConfiguration_MC50.c: 501:             menu_st.menuList[1].value_display2=dF;
  6442  003DF2  0E0F               	movlw	15
  6443  003DF4  D08E               	goto	L38
  6444  003DF6                     l19841:
  6445                           
  6446                           ; BSR set to: 1
  6447                           ;sm_MenuConfiguration_MC50.c: 508:         {;sm_MenuConfiguration_MC50.c: 509:          
      +                             menu_st.lastMenu=P_Menu;
  6448  003DF6  0E00               	movlw	0
  6449  003DF8  6F65               	movwf	(_menu_st+20)& (0+255),b
  6450                           
  6451                           ;sm_MenuConfiguration_MC50.c: 510:             menu_st.actualMenu=P2_SMenu;
  6452  003DFA  0E06               	movlw	6
  6453  003DFC  6F66               	movwf	(_menu_st+21)& (0+255),b
  6454                           
  6455                           ;sm_MenuConfiguration_MC50.c: 511:             menu_st.menuSize=3;
  6456  003DFE  0E03               	movlw	3
  6457  003E00  6F67               	movwf	(_menu_st+22)& (0+255),b
  6458                           
  6459                           ;sm_MenuConfiguration_MC50.c: 512:             menu_st.menuList[0].value_display1=dF;
  6460  003E02  0E0F               	movlw	15
  6461  003E04  6F51               	movwf	_menu_st& (0+255),b
  6462                           
  6463                           ;sm_MenuConfiguration_MC50.c: 513:             menu_st.menuList[0].value_display2=d0;
  6464  003E06  0E00               	movlw	0
  6465  003E08  6F52               	movwf	(_menu_st+1)& (0+255),b
  6466                           
  6467                           ;sm_MenuConfiguration_MC50.c: 514:             menu_st.menuList[1].value_display1=dF;
  6468  003E0A  0E0F               	movlw	15
  6469  003E0C  6F53               	movwf	(_menu_st+2)& (0+255),b
  6470                           
  6471                           ;sm_MenuConfiguration_MC50.c: 515:             menu_st.menuList[1].value_display2=d5;
  6472  003E0E  0E05               	movlw	5
  6473  003E10  6F54               	movwf	(_menu_st+3)& (0+255),b
  6474                           
  6475                           ;sm_MenuConfiguration_MC50.c: 516:             menu_st.menuList[2].value_display1=dF;
  6476  003E12  0E0F               	movlw	15
  6477  003E14  6F55               	movwf	(_menu_st+4)& (0+255),b
  6478                           
  6479                           ;sm_MenuConfiguration_MC50.c: 517:             menu_st.menuList[2].value_display2=dd;
  6480  003E16  0E0D               	movlw	13
  6481  003E18  D073               	goto	L33
  6482  003E1A                     l19843:
  6483                           
  6484                           ; BSR set to: 1
  6485                           ;sm_MenuConfiguration_MC50.c: 521:         {;sm_MenuConfiguration_MC50.c: 522:          
      +                             menu_st.lastMenu=P_Menu;
  6486  003E1A  0E00               	movlw	0
  6487  003E1C  6F65               	movwf	(_menu_st+20)& (0+255),b
  6488                           
  6489                           ;sm_MenuConfiguration_MC50.c: 523:             menu_st.actualMenu=P4_SMenu;
  6490  003E1E  0E07               	movlw	7
  6491  003E20  6F66               	movwf	(_menu_st+21)& (0+255),b
  6492                           
  6493                           ;sm_MenuConfiguration_MC50.c: 524:             menu_st.menuSize=2;
  6494  003E22  0E02               	movlw	2
  6495  003E24  6F67               	movwf	(_menu_st+22)& (0+255),b
  6496                           
  6497                           ;sm_MenuConfiguration_MC50.c: 525:             menu_st.menuList[0].value_display1=dA;
  6498  003E26  0E0A               	movlw	10
  6499  003E28  6F51               	movwf	_menu_st& (0+255),b
  6500                           
  6501                           ;sm_MenuConfiguration_MC50.c: 526:             menu_st.menuList[0].value_display2=dF;
  6502  003E2A  0E0F               	movlw	15
  6503  003E2C  6F52               	movwf	(_menu_st+1)& (0+255),b
  6504                           
  6505                           ;sm_MenuConfiguration_MC50.c: 527:             menu_st.menuList[1].value_display1=dA;
  6506  003E2E  0E0A               	movlw	10
  6507  003E30  6F53               	movwf	(_menu_st+2)& (0+255),b
  6508                           
  6509                           ;sm_MenuConfiguration_MC50.c: 528:             menu_st.menuList[1].value_display2=dP;
  6510  003E32  0E10               	movlw	16
  6511  003E34  D06E               	goto	L38
  6512  003E36                     l19845:
  6513                           
  6514                           ; BSR set to: 1
  6515                           ;sm_MenuConfiguration_MC50.c: 532:         {;sm_MenuConfiguration_MC50.c: 533:          
      +                             menu_st.lastMenu=P_Menu;
  6516  003E36  0E00               	movlw	0
  6517  003E38  6F65               	movwf	(_menu_st+20)& (0+255),b
  6518                           
  6519                           ;sm_MenuConfiguration_MC50.c: 534:             menu_st.actualMenu=P5_SMenu;
  6520  003E3A  0E08               	movlw	8
  6521  003E3C  6F66               	movwf	(_menu_st+21)& (0+255),b
  6522                           
  6523                           ;sm_MenuConfiguration_MC50.c: 535:             menu_st.menuSize=2;
  6524  003E3E  0E02               	movlw	2
  6525  003E40  6F67               	movwf	(_menu_st+22)& (0+255),b
  6526                           
  6527                           ;sm_MenuConfiguration_MC50.c: 536:             menu_st.menuList[0].value_display1=dL;
  6528  003E42  0E12               	movlw	18
  6529  003E44  6F51               	movwf	_menu_st& (0+255),b
  6530                           
  6531                           ;sm_MenuConfiguration_MC50.c: 537:             menu_st.menuList[0].value_display2=dE;
  6532  003E46  0E0E               	movlw	14
  6533  003E48  6F52               	movwf	(_menu_st+1)& (0+255),b
  6534                           
  6535                           ;sm_MenuConfiguration_MC50.c: 538:             menu_st.menuList[1].value_display1=dH;
  6536  003E4A  0E11               	movlw	17
  6537  003E4C  6F53               	movwf	(_menu_st+2)& (0+255),b
  6538                           
  6539                           ;sm_MenuConfiguration_MC50.c: 539:             menu_st.menuList[1].value_display2=dC;
  6540  003E4E  0E0C               	movlw	12
  6541  003E50  D060               	goto	L38
  6542  003E52                     l19847:
  6543                           
  6544                           ; BSR set to: 1
  6545                           ;sm_MenuConfiguration_MC50.c: 543:         {;sm_MenuConfiguration_MC50.c: 544:          
      +                             menu_st.lastMenu=P_Menu;
  6546  003E52  0E00               	movlw	0
  6547  003E54  6F65               	movwf	(_menu_st+20)& (0+255),b
  6548                           
  6549                           ;sm_MenuConfiguration_MC50.c: 545:             menu_st.actualMenu=P6_SMenu;
  6550  003E56  0E09               	movlw	9
  6551  003E58  6F66               	movwf	(_menu_st+21)& (0+255),b
  6552                           
  6553                           ;sm_MenuConfiguration_MC50.c: 546:             menu_st.menuSize=4;
  6554  003E5A  0E04               	movlw	4
  6555  003E5C  6F67               	movwf	(_menu_st+22)& (0+255),b
  6556                           
  6557                           ;sm_MenuConfiguration_MC50.c: 547:             menu_st.menuList[0].value_display1=dL;
  6558  003E5E  0E12               	movlw	18
  6559  003E60  6F51               	movwf	_menu_st& (0+255),b
  6560                           
  6561                           ;sm_MenuConfiguration_MC50.c: 548:             menu_st.menuList[0].value_display2=dA;
  6562  003E62  0E0A               	movlw	10
  6563  003E64  6F52               	movwf	(_menu_st+1)& (0+255),b
  6564                           
  6565                           ;sm_MenuConfiguration_MC50.c: 549:             menu_st.menuList[1].value_display1=dH;
  6566  003E66  0E11               	movlw	17
  6567  003E68  6F53               	movwf	(_menu_st+2)& (0+255),b
  6568                           
  6569                           ;sm_MenuConfiguration_MC50.c: 550:             menu_st.menuList[1].value_display2=dA;
  6570  003E6A  0E0A               	movlw	10
  6571  003E6C  6F54               	movwf	(_menu_st+3)& (0+255),b
  6572                           
  6573                           ;sm_MenuConfiguration_MC50.c: 551:             menu_st.menuList[2].value_display1=dH;
  6574  003E6E  0E11               	movlw	17
  6575  003E70  6F55               	movwf	(_menu_st+4)& (0+255),b
  6576                           
  6577                           ;sm_MenuConfiguration_MC50.c: 552:             menu_st.menuList[2].value_display2=dL;
  6578  003E72  0E12               	movlw	18
  6579  003E74  6F56               	movwf	(_menu_st+5)& (0+255),b
  6580                           
  6581                           ;sm_MenuConfiguration_MC50.c: 553:             menu_st.menuList[3].value_display1=d5;
  6582  003E76  0E05               	movlw	5
  6583  003E78  6F57               	movwf	(_menu_st+6)& (0+255),b
  6584                           
  6585                           ;sm_MenuConfiguration_MC50.c: 554:             menu_st.menuList[3].value_display2=dt;
  6586  003E7A  0E15               	movlw	21
  6587  003E7C                     L31:
  6588  003E7C  6F58               	movwf	(_menu_st+7)& (0+255),b
  6589                           
  6590                           ;sm_MenuConfiguration_MC50.c: 556:         };sm_MenuConfiguration_MC50.c: 557:         b
      +                          reak;
  6591  003E7E  D07D               	goto	l19865
  6592  003E80                     l19849:
  6593                           
  6594                           ; BSR set to: 1
  6595                           ;sm_MenuConfiguration_MC50.c: 559:         {;sm_MenuConfiguration_MC50.c: 560:          
      +                             menu_st.lastMenu=E_Menu;
  6596  003E80  0E01               	movlw	1
  6597  003E82  6F65               	movwf	(_menu_st+20)& (0+255),b
  6598                           
  6599                           ;sm_MenuConfiguration_MC50.c: 561:             menu_st.actualMenu=E0_SMenu;
  6600  003E84  0E0A               	movlw	10
  6601  003E86  6F66               	movwf	(_menu_st+21)& (0+255),b
  6602                           
  6603                           ;sm_MenuConfiguration_MC50.c: 562:             menu_st.menuSize=2;
  6604  003E88  0E02               	movlw	2
  6605  003E8A  6F67               	movwf	(_menu_st+22)& (0+255),b
  6606                           
  6607                           ;sm_MenuConfiguration_MC50.c: 563:             menu_st.menuList[0].value_display1=dH;
  6608  003E8C  0E11               	movlw	17
  6609  003E8E  6F51               	movwf	_menu_st& (0+255),b
  6610                           
  6611                           ;sm_MenuConfiguration_MC50.c: 564:             menu_st.menuList[0].value_display2=dP;
  6612  003E90  0E10               	movlw	16
  6613  003E92  6F52               	movwf	(_menu_st+1)& (0+255),b
  6614                           
  6615                           ;sm_MenuConfiguration_MC50.c: 565:             menu_st.menuList[1].value_display1=dP;
  6616  003E94  0E10               	movlw	16
  6617  003E96  6F53               	movwf	(_menu_st+2)& (0+255),b
  6618                           
  6619                           ;sm_MenuConfiguration_MC50.c: 566:             menu_st.menuList[1].value_display2=dL;
  6620  003E98  0E12               	movlw	18
  6621  003E9A  D03B               	goto	L38
  6622  003E9C                     l19851:
  6623                           
  6624                           ; BSR set to: 1
  6625                           ;sm_MenuConfiguration_MC50.c: 570:         {;sm_MenuConfiguration_MC50.c: 571:          
      +                             menu_st.lastMenu=E_Menu;
  6626  003E9C  0E01               	movlw	1
  6627  003E9E  6F65               	movwf	(_menu_st+20)& (0+255),b
  6628                           
  6629                           ;sm_MenuConfiguration_MC50.c: 572:             menu_st.actualMenu=E1_SMenu;
  6630  003EA0  0E0B               	movlw	11
  6631  003EA2  6F66               	movwf	(_menu_st+21)& (0+255),b
  6632                           
  6633                           ;sm_MenuConfiguration_MC50.c: 573:             menu_st.menuSize=2;
  6634  003EA4  0E02               	movlw	2
  6635  003EA6  6F67               	movwf	(_menu_st+22)& (0+255),b
  6636                           
  6637                           ;sm_MenuConfiguration_MC50.c: 574:             menu_st.menuList[0].value_display1=dr;
  6638  003EA8  0E14               	movlw	20
  6639  003EAA  6F51               	movwf	_menu_st& (0+255),b
  6640                           
  6641                           ;sm_MenuConfiguration_MC50.c: 575:             menu_st.menuList[0].value_display2=dq;
  6642  003EAC  0E24               	movlw	36
  6643  003EAE  6F52               	movwf	(_menu_st+1)& (0+255),b
  6644                           
  6645                           ;sm_MenuConfiguration_MC50.c: 576:             menu_st.menuList[1].value_display1=dr;
  6646  003EB0  0E14               	movlw	20
  6647  003EB2  6F53               	movwf	(_menu_st+2)& (0+255),b
  6648                           
  6649                           ;sm_MenuConfiguration_MC50.c: 577:             menu_st.menuList[1].value_display2=dc;
  6650  003EB4  0E23               	movlw	35
  6651  003EB6  D02D               	goto	L38
  6652  003EB8                     l19853:
  6653                           
  6654                           ; BSR set to: 1
  6655                           ;sm_MenuConfiguration_MC50.c: 581:         {;sm_MenuConfiguration_MC50.c: 583:          
      +                             menu_st.actualMenu=S_Menu;
  6656  003EB8  0E0C               	movlw	12
  6657  003EBA  6F66               	movwf	(_menu_st+21)& (0+255),b
  6658                           
  6659                           ;sm_MenuConfiguration_MC50.c: 584:             menu_st.parameterSelected=0;
  6660  003EBC  0E00               	movlw	0
  6661  003EBE  6F68               	movwf	(_menu_st+23)& (0+255),b
  6662                           
  6663                           ;sm_MenuConfiguration_MC50.c: 585:             menu_st.menuSize=2;
  6664  003EC0  0E02               	movlw	2
  6665  003EC2  6F67               	movwf	(_menu_st+22)& (0+255),b
  6666                           
  6667                           ;sm_MenuConfiguration_MC50.c: 586:             menu_st.menuList[0].value_display1=d5;
  6668  003EC4  0E05               	movlw	5
  6669  003EC6  6F51               	movwf	_menu_st& (0+255),b
  6670                           
  6671                           ;sm_MenuConfiguration_MC50.c: 587:             menu_st.menuList[0].value_display2=dU;
  6672  003EC8  0E13               	movlw	19
  6673  003ECA  6F52               	movwf	(_menu_st+1)& (0+255),b
  6674                           
  6675                           ;sm_MenuConfiguration_MC50.c: 588:             menu_st.menuList[1].value_display1=d5;
  6676  003ECC  0E05               	movlw	5
  6677  003ECE  D7B0               	goto	L39
  6678  003ED0                     l19855:
  6679                           
  6680                           ; BSR set to: 1
  6681                           ;sm_MenuConfiguration_MC50.c: 593:         {;sm_MenuConfiguration_MC50.c: 595:          
      +                             menu_st.actualMenu=Del_Menu;
  6682  003ED0  0E0D               	movlw	13
  6683  003ED2  6F66               	movwf	(_menu_st+21)& (0+255),b
  6684                           
  6685                           ;sm_MenuConfiguration_MC50.c: 596:             menu_st.menuSize=1;
  6686  003ED4  0E01               	movlw	1
  6687  003ED6  6F67               	movwf	(_menu_st+22)& (0+255),b
  6688                           
  6689                           ;sm_MenuConfiguration_MC50.c: 597:             menu_st.menuList[0].value_display1=dd;
  6690  003ED8  0E0D               	movlw	13
  6691  003EDA  6F51               	movwf	_menu_st& (0+255),b
  6692                           
  6693                           ;sm_MenuConfiguration_MC50.c: 598:             menu_st.menuList[0].value_display2=dL;
  6694  003EDC  0E12               	movlw	18
  6695  003EDE  6F52               	movwf	(_menu_st+1)& (0+255),b
  6696                           
  6697                           ;sm_MenuConfiguration_MC50.c: 599:             ts_system.timeSinalizationDigit=(1000/50)
      +                          *3;
  6698  003EE0  0E00               	movlw	0
  6699  003EE2  6FA7               	movwf	(_ts_system+13)& (0+255),b	;volatile
  6700  003EE4  0E3C               	movlw	60
  6701  003EE6  6FA6               	movwf	(_ts_system+12)& (0+255),b	;volatile
  6702                           
  6703                           ;sm_MenuConfiguration_MC50.c: 600:         };sm_MenuConfiguration_MC50.c: 601:         b
      +                          reak;
  6704  003EE8  D048               	goto	l19865
  6705  003EEA                     l19857:
  6706                           
  6707                           ; BSR set to: 1
  6708                           ;sm_MenuConfiguration_MC50.c: 604:         {;sm_MenuConfiguration_MC50.c: 608:          
      +                             menu_st.menuList[0].value_display1=d5;
  6709  003EEA  0E05               	movlw	5
  6710  003EEC  6F51               	movwf	_menu_st& (0+255),b
  6711                           
  6712                           ;sm_MenuConfiguration_MC50.c: 609:             menu_st.menuList[0].value_display2=dC;
  6713  003EEE  0E0C               	movlw	12
  6714  003EF0  6F52               	movwf	(_menu_st+1)& (0+255),b
  6715                           
  6716                           ;sm_MenuConfiguration_MC50.c: 610:             menu_st.menuList[1].value_display1=d5;
  6717  003EF2  0E05               	movlw	5
  6718  003EF4  6F53               	movwf	(_menu_st+2)& (0+255),b
  6719                           
  6720                           ;sm_MenuConfiguration_MC50.c: 611:             menu_st.menuList[1].value_display2=dE;
  6721  003EF6  0E0E               	movlw	14
  6722  003EF8  6F54               	movwf	(_menu_st+3)& (0+255),b
  6723                           
  6724                           ;sm_MenuConfiguration_MC50.c: 612:             menu_st.menuList[2].value_display1=db;
  6725  003EFA  0E22               	movlw	34
  6726  003EFC  6F55               	movwf	(_menu_st+4)& (0+255),b
  6727                           
  6728                           ;sm_MenuConfiguration_MC50.c: 613:             menu_st.menuList[2].value_display2=dr;
  6729  003EFE  0E14               	movlw	20
  6730  003F00                     L33:
  6731  003F00  6F56               	movwf	(_menu_st+5)& (0+255),b
  6732                           
  6733                           ;sm_MenuConfiguration_MC50.c: 614:         };sm_MenuConfiguration_MC50.c: 615:         b
      +                          reak;
  6734  003F02  D03B               	goto	l19865
  6735  003F04                     l19859:
  6736                           
  6737                           ; BSR set to: 1
  6738                           ;sm_MenuConfiguration_MC50.c: 617:         {;sm_MenuConfiguration_MC50.c: 621:          
      +                             menu_st.menuList[0].value_display1=dL;
  6739  003F04  0E12               	movlw	18
  6740  003F06  6F51               	movwf	_menu_st& (0+255),b
  6741                           
  6742                           ;sm_MenuConfiguration_MC50.c: 622:             menu_st.menuList[0].value_display2=dE;
  6743  003F08  0E0E               	movlw	14
  6744  003F0A  6F52               	movwf	(_menu_st+1)& (0+255),b
  6745                           
  6746                           ;sm_MenuConfiguration_MC50.c: 623:             menu_st.menuList[1].value_display1=dr;
  6747  003F0C  0E14               	movlw	20
  6748  003F0E  6F53               	movwf	(_menu_st+2)& (0+255),b
  6749                           
  6750                           ;sm_MenuConfiguration_MC50.c: 624:             menu_st.menuList[1].value_display2=dt;
  6751  003F10  0E15               	movlw	21
  6752  003F12                     L38:
  6753  003F12  6F54               	movwf	(_menu_st+3)& (0+255),b
  6754                           
  6755                           ;sm_MenuConfiguration_MC50.c: 626:         };sm_MenuConfiguration_MC50.c: 627:         b
      +                          reak;
  6756  003F14  D032               	goto	l19865
  6757  003F16                     l19863:
  6758                           
  6759                           ; BSR set to: 1
  6760  003F16  5022               	movf	load_New_Menu@Menu^0,w,c
  6761  003F18  6E20               	movwf	??_load_New_Menu^0,c
  6762  003F1A  6A21               	clrf	(??_load_New_Menu+1)^0,c
  6763                           
  6764                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6765                           ; Switch size 1, requested type "simple"
  6766                           ; Number of cases is 1, Range of values is 0 to 0
  6767                           ; switch strategies available:
  6768                           ; Name         Instructions Cycles
  6769                           ; simple_byte            4     3 (average)
  6770                           ;	Chosen strategy is simple_byte
  6771  003F1C  5021               	movf	(??_load_New_Menu+1)^0,w,c
  6772  003F1E  0A00               	xorlw	0	; case 0
  6773  003F20  A4D8               	btfss	status,2,c
  6774  003F22  D02B               	goto	l19865
  6775                           
  6776                           ; BSR set to: 1
  6777                           ; Switch size 1, requested type "simple"
  6778                           ; Number of cases is 14, Range of values is 0 to 13
  6779                           ; switch strategies available:
  6780                           ; Name         Instructions Cycles
  6781                           ; simple_byte           43    22 (average)
  6782                           ;	Chosen strategy is simple_byte
  6783  003F24  5020               	movf	??_load_New_Menu^0,w,c
  6784  003F26  0A00               	xorlw	0	; case 0
  6785  003F28  B4D8               	btfsc	status,2,c
  6786  003F2A  D6FF               	goto	l19813
  6787  003F2C  0A01               	xorlw	1	; case 1
  6788  003F2E  B4D8               	btfsc	status,2,c
  6789  003F30  D71D               	goto	l19825
  6790  003F32  0A03               	xorlw	3	; case 2
  6791  003F34  B4D8               	btfsc	status,2,c
  6792  003F36  D7E6               	goto	l19859
  6793  003F38  0A01               	xorlw	1	; case 3
  6794  003F3A  B4D8               	btfsc	status,2,c
  6795  003F3C  D7D6               	goto	l19857
  6796  003F3E  0A07               	xorlw	7	; case 4
  6797  003F40  B4D8               	btfsc	status,2,c
  6798  003F42  D735               	goto	l19837
  6799  003F44  0A01               	xorlw	1	; case 5
  6800  003F46  B4D8               	btfsc	status,2,c
  6801  003F48  D748               	goto	l19839
  6802  003F4A  0A03               	xorlw	3	; case 6
  6803  003F4C  B4D8               	btfsc	status,2,c
  6804  003F4E  D753               	goto	l19841
  6805  003F50  0A01               	xorlw	1	; case 7
  6806  003F52  B4D8               	btfsc	status,2,c
  6807  003F54  D762               	goto	l19843
  6808  003F56  0A0F               	xorlw	15	; case 8
  6809  003F58  B4D8               	btfsc	status,2,c
  6810  003F5A  D76D               	goto	l19845
  6811  003F5C  0A01               	xorlw	1	; case 9
  6812  003F5E  B4D8               	btfsc	status,2,c
  6813  003F60  D778               	goto	l19847
  6814  003F62  0A03               	xorlw	3	; case 10
  6815  003F64  B4D8               	btfsc	status,2,c
  6816  003F66  D78C               	goto	l19849
  6817  003F68  0A01               	xorlw	1	; case 11
  6818  003F6A  B4D8               	btfsc	status,2,c
  6819  003F6C  D797               	goto	l19851
  6820  003F6E  0A07               	xorlw	7	; case 12
  6821  003F70  B4D8               	btfsc	status,2,c
  6822  003F72  D7A2               	goto	l19853
  6823  003F74  0A01               	xorlw	1	; case 13
  6824  003F76  B4D8               	btfsc	status,2,c
  6825  003F78  D7AB               	goto	l19855
  6826  003F7A                     l19865:
  6827                           
  6828                           ;sm_MenuConfiguration_MC50.c: 632:     if(menu_st.parameterSelected>=menu_st.menuSize)
  6829  003F7A  0101               	movlb	1	; () banked
  6830  003F7C  5167               	movf	(_menu_st+22)& (0+255),w,b
  6831  003F7E  5D68               	subwf	(_menu_st+23)& (0+255),w,b
  6832  003F80  A0D8               	btfss	status,0,c
  6833  003F82  D002               	goto	l19869
  6834                           
  6835                           ; BSR set to: 1
  6836                           ;sm_MenuConfiguration_MC50.c: 633:     {;sm_MenuConfiguration_MC50.c: 634:         menu_
      +                          st.parameterSelected=0;
  6837  003F84  0E00               	movlw	0
  6838  003F86  6F68               	movwf	(_menu_st+23)& (0+255),b
  6839  003F88                     l19869:
  6840                           
  6841                           ; BSR set to: 1
  6842                           ;sm_MenuConfiguration_MC50.c: 637:     if(Menu==Del_Menu)
  6843  003F88  0E0D               	movlw	13
  6844  003F8A  1822               	xorwf	load_New_Menu@Menu^0,w,c
  6845  003F8C  A4D8               	btfss	status,2,c
  6846  003F8E  D01A               	goto	l19873
  6847                           
  6848                           ; BSR set to: 1
  6849                           ;sm_MenuConfiguration_MC50.c: 638:     {;sm_MenuConfiguration_MC50.c: 639:         SetSe
      +                          gmentValueIntermitentMain(menu_st.menuList[ menu_st.parameterSelected].value_display1, m
      +                          enu_st.menuList[ menu_st.parameterSelected].value_display2,( 500/50));
  6850  003F90  5168               	movf	(_menu_st+23)& (0+255),w,b
  6851  003F92  0D02               	mullw	2
  6852  003F94  0E52               	movlw	low (_menu_st+1)
  6853  003F96  24F3               	addwf	243,w,c
  6854  003F98  6ED9               	movwf	fsr2l,c
  6855  003F9A  0E01               	movlw	high (_menu_st+1)
  6856  003F9C  20F4               	addwfc	prodh,w,c
  6857  003F9E  6EDA               	movwf	fsr2h,c
  6858  003FA0  50DF               	movf	indf2,w,c
  6859  003FA2  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  6860  003FA4  0E00               	movlw	0
  6861  003FA6  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  6862  003FA8  0E0A               	movlw	10
  6863  003FAA  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  6864  003FAC  5168               	movf	(_menu_st+23)& (0+255),w,b
  6865  003FAE  0D02               	mullw	2
  6866  003FB0  0E51               	movlw	low _menu_st
  6867  003FB2  24F3               	addwf	243,w,c
  6868  003FB4  6ED9               	movwf	fsr2l,c
  6869  003FB6  0E01               	movlw	high _menu_st
  6870  003FB8  20F4               	addwfc	prodh,w,c
  6871  003FBA  6EDA               	movwf	fsr2h,c
  6872  003FBC  50DF               	movf	indf2,w,c
  6873  003FBE  EC79  F048         	call	_SetSegmentValueIntermitentMain
  6874                           
  6875                           ;sm_MenuConfiguration_MC50.c: 640:     }
  6876  003FC2  0012               	return	
  6877  003FC4                     l19873:
  6878                           
  6879                           ; BSR set to: 1
  6880                           ;sm_MenuConfiguration_MC50.c: 642:     {;sm_MenuConfiguration_MC50.c: 643:         SetSe
      +                          gmentValueMain(menu_st.menuList[ menu_st.parameterSelected].value_display1, menu_st.menu
      +                          List[ menu_st.parameterSelected].value_display2);
  6881  003FC4  5168               	movf	(_menu_st+23)& (0+255),w,b
  6882  003FC6  0D02               	mullw	2
  6883  003FC8  0E52               	movlw	low (_menu_st+1)
  6884  003FCA  24F3               	addwf	243,w,c
  6885  003FCC  6ED9               	movwf	fsr2l,c
  6886  003FCE  0E01               	movlw	high (_menu_st+1)
  6887  003FD0  20F4               	addwfc	prodh,w,c
  6888  003FD2  6EDA               	movwf	fsr2h,c
  6889  003FD4  50DF               	movf	indf2,w,c
  6890  003FD6  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  6891  003FD8  5168               	movf	(_menu_st+23)& (0+255),w,b
  6892  003FDA  0D02               	mullw	2
  6893  003FDC  0E51               	movlw	low _menu_st
  6894  003FDE  24F3               	addwf	243,w,c
  6895  003FE0  6ED9               	movwf	fsr2l,c
  6896  003FE2  0E01               	movlw	high _menu_st
  6897  003FE4  20F4               	addwfc	prodh,w,c
  6898  003FE6  6EDA               	movwf	fsr2h,c
  6899  003FE8  50DF               	movf	indf2,w,c
  6900  003FEA  ECDD  F047         	call	_SetSegmentValueMain
  6901  003FEE  0012               	return		;funcret
  6902  003FF0                     __end_of_load_New_Menu:
  6903                           	callstack 0
  6904                           
  6905 ;; *************** function _InitReceiver *****************
  6906 ;; Defined at:
  6907 ;;		line 207 in file "inputs_MC50.c"
  6908 ;; Parameters:    Size  Location     Type
  6909 ;;		None
  6910 ;; Auto vars:     Size  Location     Type
  6911 ;;		None
  6912 ;; Return value:  Size  Location     Type
  6913 ;;                  1    wreg      void 
  6914 ;; Registers used:
  6915 ;;		wreg, status,2
  6916 ;; Tracked objects:
  6917 ;;		On entry : 30/F
  6918 ;;		On exit  : 3F/0
  6919 ;;		Unchanged: 0/0
  6920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6922 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6924 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6925 ;;Total ram usage:        0 bytes
  6926 ;; Hardware stack levels used: 1
  6927 ;; Hardware stack levels required when called: 4
  6928 ;; This function calls:
  6929 ;;		Nothing
  6930 ;; This function is called by:
  6931 ;;		_main
  6932 ;;		_setValueToEdit
  6933 ;; This function uses a non-reentrant model
  6934 ;;
  6935                           
  6936                           	psect	text5
  6937  008FA0                     __ptext5:
  6938                           	callstack 0
  6939  008FA0                     _InitReceiver:
  6940                           	callstack 23
  6941                           
  6942                           ;inputs_MC50.c: 208:     TMR0IF = 0;
  6943                           
  6944                           ;incstack = 0
  6945  008FA0  010E               	movlb	14	; () banked
  6946  008FA2  9BCA               	bcf	202,5,b	;volatile
  6947                           
  6948                           ;inputs_MC50.c: 209:     TMR0IE = 1;
  6949  008FA4  8BC2               	bsf	194,5,b	;volatile
  6950                           
  6951                           ;inputs_MC50.c: 210:     GIE = 1;
  6952  008FA6  8EF2               	bsf	4082,7,c	;volatile
  6953                           
  6954                           ; BSR set to: 14
  6955                           ;inputs_MC50.c: 211:     RFstate = 0;
  6956  008FA8  0E00               	movlw	0
  6957  008FAA  0101               	movlb	1	; () banked
  6958  008FAC  6F98               	movwf	_RFstate& (0+255),b
  6959                           
  6960                           ;inputs_MC50.c: 212:     RFFull_12BIT=0;
  6961  008FAE  0E00               	movlw	0
  6962  008FB0  0100               	movlb	0	; () banked
  6963  008FB2  6F8A               	movwf	_RFFull_12BIT& (0+255),b	;volatile
  6964                           
  6965                           ;inputs_MC50.c: 213:     RFFull = 0;
  6966  008FB4  0E00               	movlw	0
  6967  008FB6  6F8B               	movwf	_RFFull& (0+255),b	;volatile
  6968                           
  6969                           ; BSR set to: 0
  6970  008FB8  0012               	return		;funcret
  6971  008FBA                     __end_of_InitReceiver:
  6972                           	callstack 0
  6973                           
  6974 ;; *************** function _controlSelectRemote *****************
  6975 ;; Defined at:
  6976 ;;		line 1098 in file "sm_MenuConfiguration_MC50.c"
  6977 ;; Parameters:    Size  Location     Type
  6978 ;;		None
  6979 ;; Auto vars:     Size  Location     Type
  6980 ;;  typeRemote      1   11[BANK0 ] enum E10392
  6981 ;;  pos             1   10[BANK0 ] unsigned char 
  6982 ;;  tempSerial      4   12[BANK0 ] unsigned long 
  6983 ;;  temp            1   16[BANK0 ] unsigned char 
  6984 ;;  validSerial     1    9[BANK0 ] unsigned char 
  6985 ;; Return value:  Size  Location     Type
  6986 ;;                  1    wreg      void 
  6987 ;; Registers used:
  6988 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6989 ;; Tracked objects:
  6990 ;;		On entry : 3F/1
  6991 ;;		On exit  : 0/0
  6992 ;;		Unchanged: 0/0
  6993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6995 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6996 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6997 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6998 ;;Total ram usage:        9 bytes
  6999 ;; Hardware stack levels used: 1
  7000 ;; Hardware stack levels required when called: 14
  7001 ;; This function calls:
  7002 ;;		_ClearFlag_rfCMD
  7003 ;;		_RemoveSerial
  7004 ;;		_SaveNVM_VarSystem
  7005 ;;		_SetSegmentValue
  7006 ;;		_SetSegmentValueIntermitentMain
  7007 ;;		_SetSegmentValueMain
  7008 ;;		___awdiv
  7009 ;;		___lbmod
  7010 ;;		_cmdMemoryIsEmpty
  7011 ;;		_getSerialCmd
  7012 ;;		_getTypeRemote
  7013 ;;		_saveNewSerial
  7014 ;;		_sm_send_event
  7015 ;;		_validateRemoteSerialNumber
  7016 ;; This function is called by:
  7017 ;;		_sm_execute_menuConfiguration
  7018 ;; This function uses a non-reentrant model
  7019 ;;
  7020                           
  7021                           	psect	text6
  7022  0032D4                     __ptext6:
  7023                           	callstack 0
  7024  0032D4                     _controlSelectRemote:
  7025                           	callstack 14
  7026                           
  7027                           ; BSR set to: 1
  7028                           ;sm_MenuConfiguration_MC50.c: 1099:     unsigned long tempSerial;;sm_MenuConfiguration_M
      +                          C50.c: 1100:     char temp=getSerialCmd(&tempSerial);
  7029                           
  7030                           ; BSR set to: 0
  7031                           ;incstack = 0
  7032  0032D4  0EE4               	movlw	low controlSelectRemote@tempSerial
  7033  0032D6  6E1B               	movwf	getSerialCmd@serial^0,c
  7034  0032D8  EC2C  F043         	call	_getSerialCmd	;wreg free
  7035  0032DC  0100               	movlb	0	; () banked
  7036  0032DE  6FE8               	movwf	controlSelectRemote@temp& (0+255),b
  7037                           
  7038                           ; BSR set to: 0
  7039                           ;sm_MenuConfiguration_MC50.c: 1101:     char validSerial;;sm_MenuConfiguration_MC50.c: 1
      +                          102:     if(ts_system.timeoutMenu<=0 || button_struct.current==0x00)
  7040  0032E0  0101               	movlb	1	; () banked
  7041  0032E2  BFA9               	btfsc	(_ts_system+15)& (0+255),7,b	;volatile
  7042  0032E4  D008               	goto	u23900
  7043  0032E6  51A9               	movf	(_ts_system+15)& (0+255),w,b	;volatile
  7044  0032E8  E103               	bnz	u23890
  7045  0032EA  05A8               	decf	(_ts_system+14)& (0+255),w,b	;volatile
  7046  0032EC  A0D8               	btfss	status,0,c
  7047  0032EE  D003               	goto	u23900
  7048  0032F0                     u23890:
  7049                           
  7050                           ; BSR set to: 1
  7051  0032F0  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  7052  0032F2  A4D8               	btfss	status,2,c
  7053  0032F4  D028               	goto	l20943
  7054  0032F6                     u23900:
  7055                           
  7056                           ; BSR set to: 1
  7057                           ;sm_MenuConfiguration_MC50.c: 1103:     {;sm_MenuConfiguration_MC50.c: 1104:         sm_
      +                          send_event(&main_stateMachine, ev_goto_StandBy);
  7058  0032F6  0EED               	movlw	low _main_stateMachine
  7059  0032F8  6E12               	movwf	sm_send_event@psm^0,c
  7060  0032FA  0E01               	movlw	high _main_stateMachine
  7061  0032FC  6E13               	movwf	(sm_send_event@psm+1)^0,c
  7062  0032FE  0E00               	movlw	0
  7063  003300  6E15               	movwf	(sm_send_event@event+1)^0,c
  7064  003302  0E07               	movlw	7
  7065  003304  6E14               	movwf	sm_send_event@event^0,c
  7066  003306  EC25  F041         	call	_sm_send_event	;wreg free
  7067                           
  7068                           ;sm_MenuConfiguration_MC50.c: 1105:         sm_send_event(&menuConfiguration_stateMachin
      +                          e, ev_CancelEdition);
  7069  00330A  0EBD               	movlw	low _menuConfiguration_stateMachine
  7070  00330C  6E12               	movwf	sm_send_event@psm^0,c
  7071  00330E  0E02               	movlw	high _menuConfiguration_stateMachine
  7072  003310  6E13               	movwf	(sm_send_event@psm+1)^0,c
  7073  003312  0E00               	movlw	0
  7074  003314  6E15               	movwf	(sm_send_event@event+1)^0,c
  7075  003316  0E03               	movlw	3
  7076  003318  6E14               	movwf	sm_send_event@event^0,c
  7077  00331A  EC25  F041         	call	_sm_send_event	;wreg free
  7078                           
  7079                           ;sm_MenuConfiguration_MC50.c: 1106:         var_sys.DistanceProgrammingActive=NO;
  7080  00331E  0E00               	movlw	0
  7081  003320  0101               	movlb	1	; () banked
  7082  003322  6F40               	movwf	(_var_sys+64)& (0+255),b	;volatile
  7083                           
  7084                           ; BSR set to: 1
  7085                           ;sm_MenuConfiguration_MC50.c: 1107:         var_sys.ProgrammingDistanceIs=NoCMD;
  7086  003324  0E00               	movlw	0
  7087  003326  6F3B               	movwf	(_var_sys+59)& (0+255),b	;volatile
  7088                           
  7089                           ; BSR set to: 1
  7090                           ;sm_MenuConfiguration_MC50.c: 1108:         SetSegmentValueMain(dMinus,dMinus);
  7091  003328  0E18               	movlw	24
  7092  00332A  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  7093  00332C  0E18               	movlw	24
  7094  00332E  ECDD  F047         	call	_SetSegmentValueMain
  7095                           
  7096                           ; BSR set to: 0
  7097                           ;sm_MenuConfiguration_MC50.c: 1109:         ClearFlag_rfCMD();
  7098  003332  EC2E  F049         	call	_ClearFlag_rfCMD	;wreg free
  7099                           
  7100                           ;sm_MenuConfiguration_MC50.c: 1110:         button_struct.processed=1;
  7101  003336  0E01               	movlw	1
  7102  003338  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  7103                           
  7104                           ;sm_MenuConfiguration_MC50.c: 1111:         ts_system.timeoutMenu = 0;
  7105  00333A  0E00               	movlw	0
  7106  00333C  0101               	movlb	1	; () banked
  7107  00333E  6FA9               	movwf	(_ts_system+15)& (0+255),b	;volatile
  7108  003340  0E00               	movlw	0
  7109  003342  6FA8               	movwf	(_ts_system+14)& (0+255),b	;volatile
  7110                           
  7111                           ;sm_MenuConfiguration_MC50.c: 1113:     }
  7112  003344  0012               	return	
  7113  003346                     l20943:
  7114                           
  7115                           ; BSR set to: 1
  7116  003346  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  7117  003348  A4D8               	btfss	status,2,c
  7118  00334A  D05B               	goto	l20965
  7119                           
  7120                           ; BSR set to: 1
  7121  00334C  504A               	movf	(_edit_Param+4)^0,w,c	;volatile
  7122  00334E  B4D8               	btfsc	status,2,c
  7123  003350  D058               	goto	l20965
  7124                           
  7125                           ; BSR set to: 1
  7126                           ;sm_MenuConfiguration_MC50.c: 1115:     {;sm_MenuConfiguration_MC50.c: 1116:         ts_
      +                          system.timeoutMenu=((1000/50)*5) ;
  7127  003352  0E00               	movlw	0
  7128  003354  6FA9               	movwf	(_ts_system+15)& (0+255),b	;volatile
  7129  003356  0E64               	movlw	100
  7130  003358  6FA8               	movwf	(_ts_system+14)& (0+255),b	;volatile
  7131                           
  7132                           ; BSR set to: 1
  7133                           ;sm_MenuConfiguration_MC50.c: 1117:         if(edit_Param.tempValue<=edit_Param.Min)
  7134  00335A  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7135  00335C  5C4B               	subwf	(_edit_Param+5)^0,w,c	;volatile
  7136  00335E  A0D8               	btfss	status,0,c
  7137  003360  D003               	goto	l20953
  7138                           
  7139                           ; BSR set to: 1
  7140                           ;sm_MenuConfiguration_MC50.c: 1118:         {;sm_MenuConfiguration_MC50.c: 1119:        
      +                               edit_Param.tempValue=edit_Param.Max;
  7141  003362  C04A  F049         	movff	_edit_Param+4,_edit_Param+3	;volatile
  7142                           
  7143                           ;sm_MenuConfiguration_MC50.c: 1120:         }
  7144  003366  D001               	goto	l20955
  7145  003368                     l20953:
  7146                           
  7147                           ; BSR set to: 1
  7148                           ;sm_MenuConfiguration_MC50.c: 1122:         {;sm_MenuConfiguration_MC50.c: 1123:        
      +                               edit_Param.tempValue--;
  7149  003368  0649               	decf	(_edit_Param+3)^0,f,c	;volatile
  7150  00336A                     l20955:
  7151                           
  7152                           ; BSR set to: 1
  7153                           ;sm_MenuConfiguration_MC50.c: 1125:         if(cmdMemoryIsEmpty(menu_st.parameterSelecte
      +                          d,edit_Param.tempValue)==1 || edit_Param.tempValue==edit_Param.Max)
  7154  00336A  C049  F02E         	movff	_edit_Param+3,cmdMemoryIsEmpty@position	;volatile
  7155  00336E  5168               	movf	(_menu_st+23)& (0+255),w,b
  7156  003370  ECB3  F03A         	call	_cmdMemoryIsEmpty
  7157  003374  06E8               	decf	wreg,f,c
  7158  003376  B4D8               	btfsc	status,2,c
  7159  003378  D004               	goto	u23950
  7160  00337A  504A               	movf	(_edit_Param+4)^0,w,c	;volatile
  7161  00337C  1849               	xorwf	(_edit_Param+3)^0,w,c	;volatile
  7162  00337E  A4D8               	btfss	status,2,c
  7163  003380  D021               	goto	l20961
  7164  003382                     u23950:
  7165                           
  7166                           ;sm_MenuConfiguration_MC50.c: 1126:         {;sm_MenuConfiguration_MC50.c: 1127:        
      +                               SetSegmentValueIntermitentMain((edit_Param.tempValue-edit_Param.tempValue%10)/10, e
      +                          dit_Param.tempValue%10,(1000/50));
  7167  003382  0E0A               	movlw	10
  7168  003384  6E10               	movwf	___lbmod@divisor^0,c
  7169  003386  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7170  003388  ECA5  F046         	call	___lbmod
  7171  00338C  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  7172  00338E  0E00               	movlw	0
  7173  003390  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  7174  003392  0E14               	movlw	20
  7175  003394  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  7176  003396  0E0A               	movlw	10
  7177  003398  6E10               	movwf	___lbmod@divisor^0,c
  7178  00339A  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7179  00339C  ECA5  F046         	call	___lbmod
  7180  0033A0  0100               	movlb	0	; () banked
  7181  0033A2  6FE0               	movwf	??_controlSelectRemote& (0+255),b
  7182  0033A4  51E0               	movf	??_controlSelectRemote& (0+255),w,b
  7183  0033A6  5C49               	subwf	(_edit_Param+3)^0,w,c	;volatile
  7184  0033A8  6E14               	movwf	___awdiv@dividend^0,c
  7185  0033AA  6A15               	clrf	(___awdiv@dividend+1)^0,c
  7186  0033AC  A0D8               	btfss	status,0,c
  7187  0033AE  0615               	decf	(___awdiv@dividend+1)^0,f,c
  7188  0033B0  0E00               	movlw	0
  7189  0033B2  6E17               	movwf	(___awdiv@divisor+1)^0,c
  7190  0033B4  0E0A               	movlw	10
  7191  0033B6  6E16               	movwf	___awdiv@divisor^0,c
  7192  0033B8  EC9E  F03C         	call	___awdiv	;wreg free
  7193  0033BC  5014               	movf	?___awdiv^0,w,c
  7194  0033BE  EC79  F048         	call	_SetSegmentValueIntermitentMain
  7195                           
  7196                           ;sm_MenuConfiguration_MC50.c: 1128:         }
  7197  0033C2  D01C               	goto	l20963
  7198  0033C4                     l20961:
  7199                           
  7200                           ;sm_MenuConfiguration_MC50.c: 1130:         {;sm_MenuConfiguration_MC50.c: 1131:        
      +                               SetSegmentValueMain((edit_Param.tempValue-edit_Param.tempValue%10)/10, edit_Param.t
      +                          empValue%10);
  7201  0033C4  0E0A               	movlw	10
  7202  0033C6  6E10               	movwf	___lbmod@divisor^0,c
  7203  0033C8  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7204  0033CA  ECA5  F046         	call	___lbmod
  7205  0033CE  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  7206  0033D0  0E0A               	movlw	10
  7207  0033D2  6E10               	movwf	___lbmod@divisor^0,c
  7208  0033D4  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7209  0033D6  ECA5  F046         	call	___lbmod
  7210  0033DA  0100               	movlb	0	; () banked
  7211  0033DC  6FE0               	movwf	??_controlSelectRemote& (0+255),b
  7212  0033DE  51E0               	movf	??_controlSelectRemote& (0+255),w,b
  7213  0033E0  5C49               	subwf	(_edit_Param+3)^0,w,c	;volatile
  7214  0033E2  6E14               	movwf	___awdiv@dividend^0,c
  7215  0033E4  6A15               	clrf	(___awdiv@dividend+1)^0,c
  7216  0033E6  A0D8               	btfss	status,0,c
  7217  0033E8  0615               	decf	(___awdiv@dividend+1)^0,f,c
  7218  0033EA  0E00               	movlw	0
  7219  0033EC  6E17               	movwf	(___awdiv@divisor+1)^0,c
  7220  0033EE  0E0A               	movlw	10
  7221  0033F0  6E16               	movwf	___awdiv@divisor^0,c
  7222  0033F2  EC9E  F03C         	call	___awdiv	;wreg free
  7223  0033F6  5014               	movf	?___awdiv^0,w,c
  7224  0033F8  ECDD  F047         	call	_SetSegmentValueMain
  7225  0033FC                     l20963:
  7226                           
  7227                           ;sm_MenuConfiguration_MC50.c: 1133:         button_struct.processed=1;
  7228  0033FC  0E01               	movlw	1
  7229  0033FE  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  7230                           
  7231                           ;sm_MenuConfiguration_MC50.c: 1134:     }
  7232  003400  0012               	return	
  7233  003402                     l20965:
  7234                           
  7235                           ; BSR set to: 1
  7236  003402  0E17               	movlw	23
  7237  003404  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  7238  003406  A4D8               	btfss	status,2,c
  7239  003408  D057               	goto	l20987
  7240                           
  7241                           ; BSR set to: 1
  7242  00340A  504A               	movf	(_edit_Param+4)^0,w,c	;volatile
  7243  00340C  B4D8               	btfsc	status,2,c
  7244  00340E  D054               	goto	l20987
  7245                           
  7246                           ; BSR set to: 1
  7247                           ;sm_MenuConfiguration_MC50.c: 1136:     {;sm_MenuConfiguration_MC50.c: 1137:         ts_
      +                          system.timeoutMenu=((1000/50)*5) ;
  7248  003410  0E00               	movlw	0
  7249  003412  6FA9               	movwf	(_ts_system+15)& (0+255),b	;volatile
  7250  003414  0E64               	movlw	100
  7251  003416  6FA8               	movwf	(_ts_system+14)& (0+255),b	;volatile
  7252                           
  7253                           ; BSR set to: 1
  7254                           ;sm_MenuConfiguration_MC50.c: 1138:         edit_Param.tempValue++;
  7255  003418  2A49               	incf	(_edit_Param+3)^0,f,c	;volatile
  7256                           
  7257                           ; BSR set to: 1
  7258                           ;sm_MenuConfiguration_MC50.c: 1139:         if(edit_Param.tempValue>edit_Param.Max)
  7259  00341A  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7260  00341C  5C4A               	subwf	(_edit_Param+4)^0,w,c	;volatile
  7261  00341E  A0D8               	btfss	status,0,c
  7262                           
  7263                           ; BSR set to: 1
  7264                           ;sm_MenuConfiguration_MC50.c: 1140:         {;sm_MenuConfiguration_MC50.c: 1141:        
      +                                edit_Param.tempValue=edit_Param.Min;
  7265  003420  C04B  F049         	movff	_edit_Param+5,_edit_Param+3	;volatile
  7266                           
  7267                           ; BSR set to: 1
  7268                           ;sm_MenuConfiguration_MC50.c: 1143:         if(cmdMemoryIsEmpty(menu_st.parameterSelecte
      +                          d,edit_Param.tempValue)==1|| edit_Param.tempValue==edit_Param.Max)
  7269  003424  C049  F02E         	movff	_edit_Param+3,cmdMemoryIsEmpty@position	;volatile
  7270  003428  5168               	movf	(_menu_st+23)& (0+255),w,b
  7271  00342A  ECB3  F03A         	call	_cmdMemoryIsEmpty
  7272  00342E  06E8               	decf	wreg,f,c
  7273  003430  B4D8               	btfsc	status,2,c
  7274  003432  D004               	goto	u24000
  7275  003434  504A               	movf	(_edit_Param+4)^0,w,c	;volatile
  7276  003436  1849               	xorwf	(_edit_Param+3)^0,w,c	;volatile
  7277  003438  A4D8               	btfss	status,2,c
  7278  00343A  D021               	goto	l20983
  7279  00343C                     u24000:
  7280                           
  7281                           ;sm_MenuConfiguration_MC50.c: 1144:         {;sm_MenuConfiguration_MC50.c: 1145:        
      +                               SetSegmentValueIntermitentMain((edit_Param.tempValue-edit_Param.tempValue%10)/10, e
      +                          dit_Param.tempValue%10,(1000/50));
  7282  00343C  0E0A               	movlw	10
  7283  00343E  6E10               	movwf	___lbmod@divisor^0,c
  7284  003440  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7285  003442  ECA5  F046         	call	___lbmod
  7286  003446  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  7287  003448  0E00               	movlw	0
  7288  00344A  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  7289  00344C  0E14               	movlw	20
  7290  00344E  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  7291  003450  0E0A               	movlw	10
  7292  003452  6E10               	movwf	___lbmod@divisor^0,c
  7293  003454  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7294  003456  ECA5  F046         	call	___lbmod
  7295  00345A  0100               	movlb	0	; () banked
  7296  00345C  6FE0               	movwf	??_controlSelectRemote& (0+255),b
  7297  00345E  51E0               	movf	??_controlSelectRemote& (0+255),w,b
  7298  003460  5C49               	subwf	(_edit_Param+3)^0,w,c	;volatile
  7299  003462  6E14               	movwf	___awdiv@dividend^0,c
  7300  003464  6A15               	clrf	(___awdiv@dividend+1)^0,c
  7301  003466  A0D8               	btfss	status,0,c
  7302  003468  0615               	decf	(___awdiv@dividend+1)^0,f,c
  7303  00346A  0E00               	movlw	0
  7304  00346C  6E17               	movwf	(___awdiv@divisor+1)^0,c
  7305  00346E  0E0A               	movlw	10
  7306  003470  6E16               	movwf	___awdiv@divisor^0,c
  7307  003472  EC9E  F03C         	call	___awdiv	;wreg free
  7308  003476  5014               	movf	?___awdiv^0,w,c
  7309  003478  EC79  F048         	call	_SetSegmentValueIntermitentMain
  7310                           
  7311                           ;sm_MenuConfiguration_MC50.c: 1146:         }
  7312  00347C  D7BF               	goto	l20963
  7313  00347E                     l20983:
  7314                           
  7315                           ;sm_MenuConfiguration_MC50.c: 1148:         {;sm_MenuConfiguration_MC50.c: 1149:        
      +                               SetSegmentValue((edit_Param.tempValue-edit_Param.tempValue%10)/10, edit_Param.tempV
      +                          alue%10);
  7316  00347E  0E0A               	movlw	10
  7317  003480  6E10               	movwf	___lbmod@divisor^0,c
  7318  003482  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7319  003484  ECA5  F046         	call	___lbmod
  7320  003488  6E1C               	movwf	SetSegmentValue@d2^0,c
  7321  00348A  0E0A               	movlw	10
  7322  00348C  6E10               	movwf	___lbmod@divisor^0,c
  7323  00348E  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7324  003490  ECA5  F046         	call	___lbmod
  7325  003494  0100               	movlb	0	; () banked
  7326  003496  6FE0               	movwf	??_controlSelectRemote& (0+255),b
  7327  003498  51E0               	movf	??_controlSelectRemote& (0+255),w,b
  7328  00349A  5C49               	subwf	(_edit_Param+3)^0,w,c	;volatile
  7329  00349C  6E14               	movwf	___awdiv@dividend^0,c
  7330  00349E  6A15               	clrf	(___awdiv@dividend+1)^0,c
  7331  0034A0  A0D8               	btfss	status,0,c
  7332  0034A2  0615               	decf	(___awdiv@dividend+1)^0,f,c
  7333  0034A4  0E00               	movlw	0
  7334  0034A6  6E17               	movwf	(___awdiv@divisor+1)^0,c
  7335  0034A8  0E0A               	movlw	10
  7336  0034AA  6E16               	movwf	___awdiv@divisor^0,c
  7337  0034AC  EC9E  F03C         	call	___awdiv	;wreg free
  7338  0034B0  5014               	movf	?___awdiv^0,w,c
  7339  0034B2  ECF7  F047         	call	_SetSegmentValue
  7340  0034B6  D7A2               	goto	l20963
  7341  0034B8                     l20987:
  7342                           
  7343                           ; BSR set to: 1
  7344  0034B8  0E63               	movlw	99
  7345  0034BA  644A               	cpfsgt	(_edit_Param+4)^0,c	;volatile
  7346  0034BC  D01A               	goto	l20997
  7347                           
  7348                           ; BSR set to: 1
  7349  0034BE  0E63               	movlw	99
  7350  0034C0  6449               	cpfsgt	(_edit_Param+3)^0,c	;volatile
  7351  0034C2  D017               	goto	l20997
  7352                           
  7353                           ; BSR set to: 1
  7354                           ;sm_MenuConfiguration_MC50.c: 1154:     {;sm_MenuConfiguration_MC50.c: 1155:         if(
      +                          menu_st.parameterSelected==0)
  7355  0034C4  5168               	movf	(_menu_st+23)& (0+255),w,b
  7356  0034C6  A4D8               	btfss	status,2,c
  7357  0034C8  D00A               	goto	l20995
  7358                           
  7359                           ; BSR set to: 1
  7360                           ;sm_MenuConfiguration_MC50.c: 1156:         {;sm_MenuConfiguration_MC50.c: 1157:        
      +                               SetSegmentValueIntermitentMain(dL, dU,( 500/50));
  7361  0034CA  0E13               	movlw	19
  7362  0034CC  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  7363  0034CE  0E00               	movlw	0
  7364  0034D0  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  7365  0034D2  0E0A               	movlw	10
  7366  0034D4  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  7367  0034D6  0E12               	movlw	18
  7368  0034D8  EC79  F048         	call	_SetSegmentValueIntermitentMain
  7369                           
  7370                           ;sm_MenuConfiguration_MC50.c: 1158:         }
  7371  0034DC  0012               	return	
  7372  0034DE                     l20995:
  7373                           
  7374                           ; BSR set to: 1
  7375                           ;sm_MenuConfiguration_MC50.c: 1160:         {;sm_MenuConfiguration_MC50.c: 1161:        
      +                               SetSegmentValueIntermitentMain(dL, dP,( 500/50));
  7376  0034DE  0E10               	movlw	16
  7377  0034E0  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  7378  0034E2  0E00               	movlw	0
  7379  0034E4  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  7380  0034E6  0E0A               	movlw	10
  7381  0034E8  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  7382  0034EA  0E12               	movlw	18
  7383  0034EC  EC79  F048         	call	_SetSegmentValueIntermitentMain
  7384  0034F0  0012               	return	
  7385  0034F2                     l20997:
  7386                           
  7387                           ; BSR set to: 1
  7388  0034F2  0100               	movlb	0	; () banked
  7389  0034F4  29E8               	incf	controlSelectRemote@temp& (0+255),w,b
  7390  0034F6  B4D8               	btfsc	status,2,c
  7391  0034F8  D093               	goto	l21053
  7392                           
  7393                           ; BSR set to: 0
  7394  0034FA  51E8               	movf	controlSelectRemote@temp& (0+255),w,b
  7395  0034FC  B4D8               	btfsc	status,2,c
  7396  0034FE  D00F               	goto	u24090
  7397                           
  7398                           ; BSR set to: 0
  7399  003500  05E8               	decf	controlSelectRemote@temp& (0+255),w,b
  7400  003502  B4D8               	btfsc	status,2,c
  7401  003504  D00C               	goto	u24090
  7402                           
  7403                           ; BSR set to: 0
  7404  003506  0E02               	movlw	2
  7405  003508  19E8               	xorwf	controlSelectRemote@temp& (0+255),w,b
  7406  00350A  B4D8               	btfsc	status,2,c
  7407  00350C  D008               	goto	u24090
  7408                           
  7409                           ; BSR set to: 0
  7410  00350E  0E04               	movlw	4
  7411  003510  19E8               	xorwf	controlSelectRemote@temp& (0+255),w,b
  7412  003512  B4D8               	btfsc	status,2,c
  7413  003514  D004               	goto	u24090
  7414                           
  7415                           ; BSR set to: 0
  7416  003516  0E08               	movlw	8
  7417  003518  19E8               	xorwf	controlSelectRemote@temp& (0+255),w,b
  7418  00351A  A4D8               	btfss	status,2,c
  7419  00351C  D081               	goto	l21053
  7420  00351E                     u24090:
  7421                           
  7422                           ; BSR set to: 0
  7423                           ;sm_MenuConfiguration_MC50.c: 1165:     {;sm_MenuConfiguration_MC50.c: 1166:         cha
      +                          r pos;;sm_MenuConfiguration_MC50.c: 1167:         validSerial=validateRemoteSerialNumber
      +                          (tempSerial,NO,&pos);
  7424  00351E  C0E4  F02E         	movff	controlSelectRemote@tempSerial,validateRemoteSerialNumber@serial
  7425  003522  C0E5  F02F         	movff	controlSelectRemote@tempSerial+1,validateRemoteSerialNumber@serial+1
  7426  003526  C0E6  F030         	movff	controlSelectRemote@tempSerial+2,validateRemoteSerialNumber@serial+2
  7427  00352A  C0E7  F031         	movff	controlSelectRemote@tempSerial+3,validateRemoteSerialNumber@serial+3
  7428  00352E  0E00               	movlw	0
  7429  003530  6E32               	movwf	validateRemoteSerialNumber@VerifyOnlySerial^0,c
  7430  003532  0EE2               	movlw	low controlSelectRemote@pos
  7431  003534  6E33               	movwf	validateRemoteSerialNumber@position^0,c
  7432  003536  6A34               	clrf	(validateRemoteSerialNumber@position+1)^0,c
  7433  003538  EC7C  F02A         	call	_validateRemoteSerialNumber	;wreg free
  7434  00353C  6FE1               	movwf	controlSelectRemote@validSerial& (0+255),b
  7435                           
  7436                           ; BSR set to: 0
  7437                           ;sm_MenuConfiguration_MC50.c: 1169:         TypeRemote_st typeRemote = getTypeRemote();
  7438  00353E  EC2B  F049         	call	_getTypeRemote	;wreg free
  7439  003542  0100               	movlb	0	; () banked
  7440  003544  6FE3               	movwf	controlSelectRemote@typeRemote& (0+255),b
  7441                           
  7442                           ; BSR set to: 0
  7443                           ;sm_MenuConfiguration_MC50.c: 1170:         if(validSerial==0&&(typeRemote==Keeloq_Rolli
      +                          ngCode || (var_sys_NVM.OnlyRollingCode==NO)))
  7444  003546  51E1               	movf	controlSelectRemote@validSerial& (0+255),w,b
  7445  003548  A4D8               	btfss	status,2,c
  7446  00354A  0012               	return	
  7447                           
  7448                           ; BSR set to: 0
  7449  00354C  51E3               	movf	controlSelectRemote@typeRemote& (0+255),w,b
  7450  00354E  B4D8               	btfsc	status,2,c
  7451  003550  D003               	goto	u24120
  7452                           
  7453                           ; BSR set to: 0
  7454  003552  51BE               	movf	(_var_sys_NVM+38)& (0+255),w,b	;volatile
  7455  003554  A4D8               	btfss	status,2,c
  7456  003556  0012               	return	
  7457  003558                     u24120:
  7458                           
  7459                           ; BSR set to: 0
  7460                           ;sm_MenuConfiguration_MC50.c: 1171:         {;sm_MenuConfiguration_MC50.c: 1172:        
      +                               saveNewSerial(menu_st.parameterSelected,tempSerial,edit_Param.tempValue);
  7461  003558  C0E4  F0D8         	movff	controlSelectRemote@tempSerial,saveNewSerial@tempSerial
  7462  00355C  C0E5  F0D9         	movff	controlSelectRemote@tempSerial+1,saveNewSerial@tempSerial+1
  7463  003560  C0E6  F0DA         	movff	controlSelectRemote@tempSerial+2,saveNewSerial@tempSerial+2
  7464  003564  C0E7  F0DB         	movff	controlSelectRemote@tempSerial+3,saveNewSerial@tempSerial+3
  7465  003568  C049  F0DC         	movff	_edit_Param+3,saveNewSerial@position	;volatile
  7466  00356C  0101               	movlb	1	; () banked
  7467  00356E  5168               	movf	(_menu_st+23)& (0+255),w,b
  7468  003570  EC4A  F03F         	call	_saveNewSerial
  7469                           
  7470                           ;sm_MenuConfiguration_MC50.c: 1173:             if(edit_Param.tempValue==var_sys_NVM.pos
      +                          itionRemotesFull)
  7471  003574  0100               	movlb	0	; () banked
  7472  003576  51B8               	movf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
  7473  003578  1849               	xorwf	(_edit_Param+3)^0,w,c	;volatile
  7474  00357A  B4D8               	btfsc	status,2,c
  7475                           
  7476                           ; BSR set to: 0
  7477                           ;sm_MenuConfiguration_MC50.c: 1174:                 var_sys_NVM.positionRemotesFull++;
  7478  00357C  2BB8               	incf	(_var_sys_NVM+32)& (0+255),f,b	;volatile
  7479                           
  7480                           ; BSR set to: 0
  7481                           ;sm_MenuConfiguration_MC50.c: 1175:             sm_send_event(&menuConfiguration_stateMa
      +                          chine, ev_addRemotes);
  7482  00357E  0EBD               	movlw	low _menuConfiguration_stateMachine
  7483  003580  6E12               	movwf	sm_send_event@psm^0,c
  7484  003582  0E02               	movlw	high _menuConfiguration_stateMachine
  7485  003584  6E13               	movwf	(sm_send_event@psm+1)^0,c
  7486  003586  0E00               	movlw	0
  7487  003588  6E15               	movwf	(sm_send_event@event+1)^0,c
  7488  00358A  0E08               	movlw	8
  7489  00358C  6E14               	movwf	sm_send_event@event^0,c
  7490  00358E  EC25  F041         	call	_sm_send_event	;wreg free
  7491                           
  7492                           ;sm_MenuConfiguration_MC50.c: 1176:             var_sys.DistanceProgrammingActive=NO;
  7493  003592  0E00               	movlw	0
  7494  003594  0101               	movlb	1	; () banked
  7495  003596  6F40               	movwf	(_var_sys+64)& (0+255),b	;volatile
  7496                           
  7497                           ; BSR set to: 1
  7498                           ;sm_MenuConfiguration_MC50.c: 1177:             var_sys.ProgrammingDistanceIs=NoCMD;
  7499  003598  0E00               	movlw	0
  7500  00359A  6F3B               	movwf	(_var_sys+59)& (0+255),b	;volatile
  7501                           
  7502                           ; BSR set to: 1
  7503                           ;sm_MenuConfiguration_MC50.c: 1178:             ts_system.timeSinalizationDigit=(1000/50
      +                          )*2;
  7504  00359C  0E00               	movlw	0
  7505  00359E  6FA7               	movwf	(_ts_system+13)& (0+255),b	;volatile
  7506  0035A0  0E28               	movlw	40
  7507  0035A2  6FA6               	movwf	(_ts_system+12)& (0+255),b	;volatile
  7508                           
  7509                           ; BSR set to: 1
  7510                           ;sm_MenuConfiguration_MC50.c: 1179:             SetSegmentValueIntermitentMain((edit_Par
      +                          am.tempValue-edit_Param.tempValue%10)/10, edit_Param.tempValue%10,( 200/50));
  7511  0035A4  0E0A               	movlw	10
  7512  0035A6  6E10               	movwf	___lbmod@divisor^0,c
  7513  0035A8  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7514  0035AA  ECA5  F046         	call	___lbmod
  7515  0035AE  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  7516  0035B0  0E00               	movlw	0
  7517  0035B2  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  7518  0035B4  0E04               	movlw	4
  7519  0035B6  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  7520  0035B8  0E0A               	movlw	10
  7521  0035BA  6E10               	movwf	___lbmod@divisor^0,c
  7522  0035BC  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7523  0035BE  ECA5  F046         	call	___lbmod
  7524  0035C2  0100               	movlb	0	; () banked
  7525  0035C4  6FE0               	movwf	??_controlSelectRemote& (0+255),b
  7526  0035C6  51E0               	movf	??_controlSelectRemote& (0+255),w,b
  7527  0035C8  5C49               	subwf	(_edit_Param+3)^0,w,c	;volatile
  7528  0035CA  6E14               	movwf	___awdiv@dividend^0,c
  7529  0035CC  6A15               	clrf	(___awdiv@dividend+1)^0,c
  7530  0035CE  A0D8               	btfss	status,0,c
  7531  0035D0  0615               	decf	(___awdiv@dividend+1)^0,f,c
  7532  0035D2  0E00               	movlw	0
  7533  0035D4  6E17               	movwf	(___awdiv@divisor+1)^0,c
  7534  0035D6  0E0A               	movlw	10
  7535  0035D8  6E16               	movwf	___awdiv@divisor^0,c
  7536  0035DA  EC9E  F03C         	call	___awdiv	;wreg free
  7537  0035DE  5014               	movf	?___awdiv^0,w,c
  7538  0035E0  EC79  F048         	call	_SetSegmentValueIntermitentMain
  7539                           
  7540                           ;sm_MenuConfiguration_MC50.c: 1180:             if(edit_Param.Max==edit_Param.tempValue 
      +                          || edit_Param.Max==0 )
  7541  0035E4  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7542  0035E6  184A               	xorwf	(_edit_Param+4)^0,w,c	;volatile
  7543  0035E8  B4D8               	btfsc	status,2,c
  7544  0035EA  D003               	goto	u24150
  7545  0035EC  504A               	movf	(_edit_Param+4)^0,w,c	;volatile
  7546  0035EE  A4D8               	btfss	status,2,c
  7547  0035F0  0012               	return	
  7548  0035F2                     u24150:
  7549                           
  7550                           ;sm_MenuConfiguration_MC50.c: 1181:             {;sm_MenuConfiguration_MC50.c: 1185:    
      +                                       if(var_sys_NVM.positionRemotesFull==0 && var_sys_NVM.positionRemotesFull==0
      +                           && typeRemote==Keeloq_RollingCode)
  7551  0035F2  0100               	movlb	0	; () banked
  7552  0035F4  51B8               	movf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
  7553  0035F6  A4D8               	btfss	status,2,c
  7554  0035F8  D008               	goto	l21047
  7555                           
  7556                           ; BSR set to: 0
  7557  0035FA  51B8               	movf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
  7558  0035FC  A4D8               	btfss	status,2,c
  7559  0035FE  D005               	goto	l21047
  7560                           
  7561                           ; BSR set to: 0
  7562  003600  51E3               	movf	controlSelectRemote@typeRemote& (0+255),w,b
  7563  003602  A4D8               	btfss	status,2,c
  7564  003604  D002               	goto	l21047
  7565                           
  7566                           ; BSR set to: 0
  7567                           ;sm_MenuConfiguration_MC50.c: 1186:                 {;sm_MenuConfiguration_MC50.c: 1188:
      +                                               var_sys_NVM.OnlyRollingCode=YES;
  7568  003606  0E01               	movlw	1
  7569  003608  6FBE               	movwf	(_var_sys_NVM+38)& (0+255),b	;volatile
  7570  00360A                     l21047:
  7571                           
  7572                           ; BSR set to: 0
  7573                           ;sm_MenuConfiguration_MC50.c: 1192:                 edit_Param.tempValue++;
  7574  00360A  2A49               	incf	(_edit_Param+3)^0,f,c	;volatile
  7575                           
  7576                           ; BSR set to: 0
  7577                           ;sm_MenuConfiguration_MC50.c: 1193:                 edit_Param.Value[0]=edit_Param.tempV
      +                          alue;
  7578  00360C  C047  FFD9         	movff	_edit_Param+1,fsr2l	;volatile
  7579  003610  C048  FFDA         	movff	_edit_Param+2,fsr2h	;volatile
  7580  003614  C049  FFDF         	movff	_edit_Param+3,indf2	;volatile
  7581                           
  7582                           ; BSR set to: 0
  7583                           ;sm_MenuConfiguration_MC50.c: 1194:                 SaveNVM_VarSystem(pageMemoryCounters
      +                          );
  7584  003618  0E02               	movlw	2
  7585  00361A  EC06  F045         	call	_SaveNVM_VarSystem
  7586  00361E  0012               	return	
  7587  003620                     l21053:
  7588                           
  7589                           ; BSR set to: 0
  7590  003620  504A               	movf	(_edit_Param+4)^0,w,c	;volatile
  7591  003622  1849               	xorwf	(_edit_Param+3)^0,w,c	;volatile
  7592  003624  B4D8               	btfsc	status,2,c
  7593  003626  0012               	return	
  7594                           
  7595                           ; BSR set to: 0
  7596  003628  0E27               	movlw	39
  7597  00362A  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  7598  00362C  A4D8               	btfss	status,2,c
  7599  00362E  0012               	return	
  7600                           
  7601                           ; BSR set to: 0
  7602  003630  0E27               	movlw	39
  7603  003632  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  7604  003634  0012               	return	
  7605                           
  7606                           ; BSR set to: 0
  7607                           ;sm_MenuConfiguration_MC50.c: 1201:     {;sm_MenuConfiguration_MC50.c: 1202:         ts_
      +                          system.timeoutMenu=((1000/50)*5) ;
  7608  003636  0E00               	movlw	0
  7609  003638  0101               	movlb	1	; () banked
  7610  00363A  6FA9               	movwf	(_ts_system+15)& (0+255),b	;volatile
  7611  00363C  0E64               	movlw	100
  7612  00363E  6FA8               	movwf	(_ts_system+14)& (0+255),b	;volatile
  7613                           
  7614                           ; BSR set to: 1
  7615                           ;sm_MenuConfiguration_MC50.c: 1203:         RemoveSerial(menu_st.parameterSelected,edit_
      +                          Param.tempValue);
  7616  003640  C049  F03A         	movff	_edit_Param+3,RemoveSerial@position	;volatile
  7617  003644  5168               	movf	(_menu_st+23)& (0+255),w,b
  7618  003646  EC63  F03D         	call	_RemoveSerial
  7619                           
  7620                           ;sm_MenuConfiguration_MC50.c: 1204:         SetSegmentValueIntermitentMain((edit_Param.t
      +                          empValue-edit_Param.tempValue%10)/10, edit_Param.tempValue%10,(1000/50));
  7621  00364A  0E0A               	movlw	10
  7622  00364C  6E10               	movwf	___lbmod@divisor^0,c
  7623  00364E  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7624  003650  ECA5  F046         	call	___lbmod
  7625  003654  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  7626  003656  0E00               	movlw	0
  7627  003658  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  7628  00365A  0E14               	movlw	20
  7629  00365C  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  7630  00365E  0E0A               	movlw	10
  7631  003660  6E10               	movwf	___lbmod@divisor^0,c
  7632  003662  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7633  003664  ECA5  F046         	call	___lbmod
  7634  003668  0100               	movlb	0	; () banked
  7635  00366A  6FE0               	movwf	??_controlSelectRemote& (0+255),b
  7636  00366C  51E0               	movf	??_controlSelectRemote& (0+255),w,b
  7637  00366E  5C49               	subwf	(_edit_Param+3)^0,w,c	;volatile
  7638  003670  6E14               	movwf	___awdiv@dividend^0,c
  7639  003672  6A15               	clrf	(___awdiv@dividend+1)^0,c
  7640  003674  A0D8               	btfss	status,0,c
  7641  003676  0615               	decf	(___awdiv@dividend+1)^0,f,c
  7642  003678  0E00               	movlw	0
  7643  00367A  6E17               	movwf	(___awdiv@divisor+1)^0,c
  7644  00367C  0E0A               	movlw	10
  7645  00367E  6E16               	movwf	___awdiv@divisor^0,c
  7646  003680  EC9E  F03C         	call	___awdiv	;wreg free
  7647  003684  5014               	movf	?___awdiv^0,w,c
  7648  003686  EC79  F048         	call	_SetSegmentValueIntermitentMain
  7649  00368A  0012               	return	
  7650  00368C                     __end_of_controlSelectRemote:
  7651                           	callstack 0
  7652                           
  7653 ;; *************** function _saveNewSerial *****************
  7654 ;; Defined at:
  7655 ;;		line 81 in file "controlMemory_MC50.c"
  7656 ;; Parameters:    Size  Location     Type
  7657 ;;  cmdType         1    wreg     unsigned char 
  7658 ;;  tempSerial      4    0[BANK0 ] unsigned long 
  7659 ;;  position        1    4[BANK0 ] unsigned char 
  7660 ;; Auto vars:     Size  Location     Type
  7661 ;;  cmdType         1   57[COMRAM] unsigned char 
  7662 ;; Return value:  Size  Location     Type
  7663 ;;                  1    wreg      void 
  7664 ;; Registers used:
  7665 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7666 ;; Tracked objects:
  7667 ;;		On entry : 3F/1
  7668 ;;		On exit  : 0/0
  7669 ;;		Unchanged: 0/0
  7670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7671 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7672 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7673 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7674 ;;      Totals:         1       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7675 ;;Total ram usage:        8 bytes
  7676 ;; Hardware stack levels used: 1
  7677 ;; Hardware stack levels required when called: 13
  7678 ;; This function calls:
  7679 ;;		_i2c_writeNBytes
  7680 ;; This function is called by:
  7681 ;;		_controlSelectRemote
  7682 ;; This function uses a non-reentrant model
  7683 ;;
  7684                           
  7685                           	psect	text7
  7686  007E94                     __ptext7:
  7687                           	callstack 0
  7688  007E94                     _saveNewSerial:
  7689                           	callstack 14
  7690                           
  7691                           ;incstack = 0
  7692                           ;saveNewSerial@cmdType stored from wreg
  7693  007E94  6E3A               	movwf	saveNewSerial@cmdType^0,c
  7694                           
  7695                           ;controlMemory_MC50.c: 81: void saveNewSerial(char cmdType,unsigned long tempSerial, cha
      +                          r position);controlMemory_MC50.c: 82: {;controlMemory_MC50.c: 83:     if(cmdType==0)
  7696  007E96  503A               	movf	saveNewSerial@cmdType^0,w,c
  7697  007E98  A4D8               	btfss	status,2,c
  7698  007E9A  D01A               	goto	l19593
  7699                           
  7700                           ;controlMemory_MC50.c: 84:     {;controlMemory_MC50.c: 86:         i2c_writeNBytes(0x50,
      +                           (uint16_t)(0x0200 + (position * 4)), (char*)&tempSerial, 4);
  7701  007E9C  0100               	movlb	0	; () banked
  7702  007E9E  51DC               	movf	saveNewSerial@position& (0+255),w,b
  7703  007EA0  6FDD               	movwf	??_saveNewSerial& (0+255),b
  7704  007EA2  6BDE               	clrf	(??_saveNewSerial+1)& (0+255),b
  7705  007EA4  90D8               	bcf	status,0,c
  7706  007EA6  37DD               	rlcf	??_saveNewSerial& (0+255),f,b
  7707  007EA8  37DE               	rlcf	(??_saveNewSerial+1)& (0+255),f,b
  7708  007EAA  90D8               	bcf	status,0,c
  7709  007EAC  37DD               	rlcf	??_saveNewSerial& (0+255),f,b
  7710  007EAE  37DE               	rlcf	(??_saveNewSerial+1)& (0+255),f,b
  7711  007EB0  0E00               	movlw	0
  7712  007EB2  25DD               	addwf	??_saveNewSerial& (0+255),w,b
  7713  007EB4  6E22               	movwf	i2c_writeNBytes@reg^0,c
  7714  007EB6  0E02               	movlw	2
  7715  007EB8  21DE               	addwfc	(??_saveNewSerial+1)& (0+255),w,b
  7716  007EBA  6E23               	movwf	(i2c_writeNBytes@reg+1)^0,c
  7717  007EBC  0ED8               	movlw	low saveNewSerial@tempSerial
  7718  007EBE  6E24               	movwf	i2c_writeNBytes@data^0,c
  7719  007EC0  0E00               	movlw	0
  7720  007EC2  6E26               	movwf	(i2c_writeNBytes@len+1)^0,c
  7721  007EC4  0E04               	movlw	4
  7722  007EC6  6E25               	movwf	i2c_writeNBytes@len^0,c
  7723  007EC8  0E50               	movlw	80
  7724  007ECA  EC10  F03F         	call	_i2c_writeNBytes
  7725                           
  7726                           ;controlMemory_MC50.c: 87:     }
  7727  007ECE  0012               	return	
  7728  007ED0                     l19593:
  7729                           
  7730                           ;controlMemory_MC50.c: 89:     {;controlMemory_MC50.c: 91:         i2c_writeNBytes(0x50,
      +                           (uint16_t)(0x0500 + (position * 4)), (char*)&tempSerial, 4);
  7731  007ED0  0100               	movlb	0	; () banked
  7732  007ED2  51DC               	movf	saveNewSerial@position& (0+255),w,b
  7733  007ED4  6FDD               	movwf	??_saveNewSerial& (0+255),b
  7734  007ED6  6BDE               	clrf	(??_saveNewSerial+1)& (0+255),b
  7735  007ED8  90D8               	bcf	status,0,c
  7736  007EDA  37DD               	rlcf	??_saveNewSerial& (0+255),f,b
  7737  007EDC  37DE               	rlcf	(??_saveNewSerial+1)& (0+255),f,b
  7738  007EDE  90D8               	bcf	status,0,c
  7739  007EE0  37DD               	rlcf	??_saveNewSerial& (0+255),f,b
  7740  007EE2  37DE               	rlcf	(??_saveNewSerial+1)& (0+255),f,b
  7741  007EE4  0E00               	movlw	0
  7742  007EE6  25DD               	addwf	??_saveNewSerial& (0+255),w,b
  7743  007EE8  6E22               	movwf	i2c_writeNBytes@reg^0,c
  7744  007EEA  0E05               	movlw	5
  7745  007EEC  21DE               	addwfc	(??_saveNewSerial+1)& (0+255),w,b
  7746  007EEE  6E23               	movwf	(i2c_writeNBytes@reg+1)^0,c
  7747  007EF0  0ED8               	movlw	low saveNewSerial@tempSerial
  7748  007EF2  6E24               	movwf	i2c_writeNBytes@data^0,c
  7749  007EF4  0E00               	movlw	0
  7750  007EF6  6E26               	movwf	(i2c_writeNBytes@len+1)^0,c
  7751  007EF8  0E04               	movlw	4
  7752  007EFA  6E25               	movwf	i2c_writeNBytes@len^0,c
  7753  007EFC  0E50               	movlw	80
  7754  007EFE  EC10  F03F         	call	_i2c_writeNBytes
  7755  007F02  0012               	return		;funcret
  7756  007F04                     __end_of_saveNewSerial:
  7757                           	callstack 0
  7758                           
  7759 ;; *************** function _getTypeRemote *****************
  7760 ;; Defined at:
  7761 ;;		line 459 in file "inputs_MC50.c"
  7762 ;; Parameters:    Size  Location     Type
  7763 ;;		None
  7764 ;; Auto vars:     Size  Location     Type
  7765 ;;		None
  7766 ;; Return value:  Size  Location     Type
  7767 ;;                  1    wreg      enum E10559
  7768 ;; Registers used:
  7769 ;;		wreg, status,2
  7770 ;; Tracked objects:
  7771 ;;		On entry : 3F/0
  7772 ;;		On exit  : 3F/2
  7773 ;;		Unchanged: 0/0
  7774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7775 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7776 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7777 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7778 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7779 ;;Total ram usage:        0 bytes
  7780 ;; Hardware stack levels used: 1
  7781 ;; Hardware stack levels required when called: 4
  7782 ;; This function calls:
  7783 ;;		Nothing
  7784 ;; This function is called by:
  7785 ;;		_controlSelectRemote
  7786 ;; This function uses a non-reentrant model
  7787 ;;
  7788                           
  7789                           	psect	text8
  7790  009256                     __ptext8:
  7791                           	callstack 0
  7792  009256                     _getTypeRemote:
  7793                           	callstack 23
  7794                           
  7795                           ; BSR set to: 0
  7796                           ;inputs_MC50.c: 460:     return classic_data.type;
  7797                           
  7798                           ;incstack = 0
  7799  009256  0102               	movlb	2	; () banked
  7800  009258  51A0               	movf	(_classic_data+14)& (0+255),w,b
  7801                           
  7802                           ; BSR set to: 2
  7803  00925A  0012               	return		;funcret
  7804  00925C                     __end_of_getTypeRemote:
  7805                           	callstack 0
  7806                           
  7807 ;; *************** function _getSerialCmd *****************
  7808 ;; Defined at:
  7809 ;;		line 442 in file "inputs_MC50.c"
  7810 ;; Parameters:    Size  Location     Type
  7811 ;;  serial          1   26[COMRAM] PTR unsigned long 
  7812 ;;		 -> controlSelectRemote@tempSerial(4), 
  7813 ;; Auto vars:     Size  Location     Type
  7814 ;;  temp            1   27[COMRAM] char 
  7815 ;; Return value:  Size  Location     Type
  7816 ;;                  1    wreg      char 
  7817 ;; Registers used:
  7818 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7819 ;; Tracked objects:
  7820 ;;		On entry : 3F/1
  7821 ;;		On exit  : 0/0
  7822 ;;		Unchanged: 0/0
  7823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7824 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7825 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7827 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7828 ;;Total ram usage:        2 bytes
  7829 ;; Hardware stack levels used: 1
  7830 ;; Hardware stack levels required when called: 5
  7831 ;; This function calls:
  7832 ;;		_memcpy
  7833 ;; This function is called by:
  7834 ;;		_controlSelectRemote
  7835 ;; This function uses a non-reentrant model
  7836 ;;
  7837                           
  7838                           	psect	text9
  7839  008658                     __ptext9:
  7840                           	callstack 0
  7841  008658                     _getSerialCmd:
  7842                           	callstack 22
  7843                           
  7844                           ; BSR set to: 1
  7845                           ;inputs_MC50.c: 443:     signed char temp=-1;
  7846                           
  7847                           ; BSR set to: 2
  7848                           ;incstack = 0
  7849  008658  681C               	setf	getSerialCmd@temp^0,c
  7850                           
  7851                           ; BSR set to: 1
  7852                           ;inputs_MC50.c: 444:     if(RFFull)
  7853  00865A  0100               	movlb	0	; () banked
  7854  00865C  518B               	movf	_RFFull& (0+255),w,b	;volatile
  7855  00865E  B4D8               	btfsc	status,2,c
  7856  008660  D020               	goto	l19643
  7857                           
  7858                           ; BSR set to: 0
  7859                           ;inputs_MC50.c: 445:     {;inputs_MC50.c: 446:         if(RFFull_12BIT)
  7860  008662  518A               	movf	_RFFull_12BIT& (0+255),w,b	;volatile
  7861  008664  B4D8               	btfsc	status,2,c
  7862  008666  D00E               	goto	l19639
  7863                           
  7864                           ; BSR set to: 0
  7865                           ;inputs_MC50.c: 447:         {;inputs_MC50.c: 448:             memcpy((char*)serial,&cla
      +                          ssic_data.serialnumber,4);
  7866  008668  C01B  F010         	movff	getSerialCmd@serial,memcpy@d1
  7867  00866C  6A11               	clrf	(memcpy@d1+1)^0,c
  7868  00866E  0E96               	movlw	low (_classic_data+4)
  7869  008670  6E12               	movwf	memcpy@s1^0,c
  7870  008672  0E02               	movlw	high (_classic_data+4)
  7871  008674  6E13               	movwf	(memcpy@s1+1)^0,c
  7872  008676  0E00               	movlw	0
  7873  008678  6E15               	movwf	(memcpy@n+1)^0,c
  7874  00867A  0E04               	movlw	4
  7875  00867C  6E14               	movwf	memcpy@n^0,c
  7876  00867E  EC08  F044         	call	_memcpy	;wreg free
  7877                           
  7878                           ;inputs_MC50.c: 449:         }
  7879  008682  D00D               	goto	l19641
  7880  008684                     l19639:
  7881                           
  7882                           ; BSR set to: 0
  7883                           ;inputs_MC50.c: 451:         {;inputs_MC50.c: 452:             memcpy((char*)serial,(cha
      +                          r*)BufferRF+4,4);
  7884  008684  C01B  F010         	movff	getSerialCmd@serial,memcpy@d1
  7885  008688  6A11               	clrf	(memcpy@d1+1)^0,c
  7886  00868A  0ECC               	movlw	low (_BufferRF+4)
  7887  00868C  6E12               	movwf	memcpy@s1^0,c
  7888  00868E  0E02               	movlw	high (_BufferRF+4)
  7889  008690  6E13               	movwf	(memcpy@s1+1)^0,c
  7890  008692  0E00               	movlw	0
  7891  008694  6E15               	movwf	(memcpy@n+1)^0,c
  7892  008696  0E04               	movlw	4
  7893  008698  6E14               	movwf	memcpy@n^0,c
  7894  00869A  EC08  F044         	call	_memcpy	;wreg free
  7895  00869E                     l19641:
  7896                           
  7897                           ;inputs_MC50.c: 454:         temp=classic_data.fcode1;
  7898  00869E  C29E  F01C         	movff	_classic_data+12,getSerialCmd@temp
  7899  0086A2                     l19643:
  7900                           
  7901                           ;inputs_MC50.c: 456:     return temp;
  7902  0086A2  501C               	movf	getSerialCmd@temp^0,w,c
  7903  0086A4  0012               	return		;funcret
  7904  0086A6                     __end_of_getSerialCmd:
  7905                           	callstack 0
  7906                           
  7907 ;; *************** function _cmdMemoryIsEmpty *****************
  7908 ;; Defined at:
  7909 ;;		line 110 in file "controlMemory_MC50.c"
  7910 ;; Parameters:    Size  Location     Type
  7911 ;;  cmdType         1    wreg     unsigned char 
  7912 ;;  position        1   45[COMRAM] unsigned char 
  7913 ;; Auto vars:     Size  Location     Type
  7914 ;;  cmdType         1   48[COMRAM] unsigned char 
  7915 ;;  tempSerial      4   49[COMRAM] unsigned long 
  7916 ;; Return value:  Size  Location     Type
  7917 ;;                  1    wreg      unsigned char 
  7918 ;; Registers used:
  7919 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7920 ;; Tracked objects:
  7921 ;;		On entry : 3F/1
  7922 ;;		On exit  : 0/0
  7923 ;;		Unchanged: 0/0
  7924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7925 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7926 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7927 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7928 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7929 ;;Total ram usage:        8 bytes
  7930 ;; Hardware stack levels used: 1
  7931 ;; Hardware stack levels required when called: 13
  7932 ;; This function calls:
  7933 ;;		_i2c_readDataBlock
  7934 ;; This function is called by:
  7935 ;;		_setValueToEdit
  7936 ;;		_controlSelectRemote
  7937 ;; This function uses a non-reentrant model
  7938 ;;
  7939                           
  7940                           	psect	text10
  7941  007566                     __ptext10:
  7942                           	callstack 0
  7943  007566                     _cmdMemoryIsEmpty:
  7944                           	callstack 14
  7945                           
  7946                           ;incstack = 0
  7947                           ;cmdMemoryIsEmpty@cmdType stored from wreg
  7948  007566  6E31               	movwf	cmdMemoryIsEmpty@cmdType^0,c
  7949                           
  7950                           ;controlMemory_MC50.c: 110: char cmdMemoryIsEmpty(char cmdType, char position);controlMe
      +                          mory_MC50.c: 111: {;controlMemory_MC50.c: 112:     unsigned long tempSerial=0;
  7951  007568  0E00               	movlw	0
  7952  00756A  6E32               	movwf	cmdMemoryIsEmpty@tempSerial^0,c
  7953  00756C  0E00               	movlw	0
  7954  00756E  6E33               	movwf	(cmdMemoryIsEmpty@tempSerial+1)^0,c
  7955  007570  0E00               	movlw	0
  7956  007572  6E34               	movwf	(cmdMemoryIsEmpty@tempSerial+2)^0,c
  7957  007574  0E00               	movlw	0
  7958  007576  6E35               	movwf	(cmdMemoryIsEmpty@tempSerial+3)^0,c
  7959                           
  7960                           ;controlMemory_MC50.c: 115:      if(cmdType==0)
  7961  007578  5031               	movf	cmdMemoryIsEmpty@cmdType^0,w,c
  7962  00757A  A4D8               	btfss	status,2,c
  7963  00757C  D01A               	goto	l19609
  7964                           
  7965                           ;controlMemory_MC50.c: 116:     {;controlMemory_MC50.c: 117:          i2c_readDataBlock(
      +                          0x50, (uint16_t)(0x0200 + (position * 4)),(char*)&tempSerial, 4);
  7966  00757E  502E               	movf	cmdMemoryIsEmpty@position^0,w,c
  7967  007580  6E2F               	movwf	??_cmdMemoryIsEmpty^0,c
  7968  007582  6A30               	clrf	(??_cmdMemoryIsEmpty+1)^0,c
  7969  007584  90D8               	bcf	status,0,c
  7970  007586  362F               	rlcf	??_cmdMemoryIsEmpty^0,f,c
  7971  007588  3630               	rlcf	(??_cmdMemoryIsEmpty+1)^0,f,c
  7972  00758A  90D8               	bcf	status,0,c
  7973  00758C  362F               	rlcf	??_cmdMemoryIsEmpty^0,f,c
  7974  00758E  3630               	rlcf	(??_cmdMemoryIsEmpty+1)^0,f,c
  7975  007590  0E00               	movlw	0
  7976  007592  242F               	addwf	??_cmdMemoryIsEmpty^0,w,c
  7977  007594  6E22               	movwf	i2c_readDataBlock@reg^0,c
  7978  007596  0E02               	movlw	2
  7979  007598  2030               	addwfc	(??_cmdMemoryIsEmpty+1)^0,w,c
  7980  00759A  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
  7981  00759C  0E32               	movlw	low cmdMemoryIsEmpty@tempSerial
  7982  00759E  6E24               	movwf	i2c_readDataBlock@data^0,c
  7983  0075A0  6A25               	clrf	(i2c_readDataBlock@data+1)^0,c
  7984  0075A2  0E00               	movlw	0
  7985  0075A4  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
  7986  0075A6  0E04               	movlw	4
  7987  0075A8  6E26               	movwf	i2c_readDataBlock@len^0,c
  7988  0075AA  0E50               	movlw	80
  7989  0075AC  ECD5  F03E         	call	_i2c_readDataBlock
  7990                           
  7991                           ;controlMemory_MC50.c: 118:     }
  7992  0075B0  D019               	goto	l19611
  7993  0075B2                     l19609:
  7994                           
  7995                           ;controlMemory_MC50.c: 120:     {;controlMemory_MC50.c: 121:          i2c_readDataBlock(
      +                          0x50, (uint16_t)(0x0500 + (position * 4)),(char*)&tempSerial, 4);
  7996  0075B2  502E               	movf	cmdMemoryIsEmpty@position^0,w,c
  7997  0075B4  6E2F               	movwf	??_cmdMemoryIsEmpty^0,c
  7998  0075B6  6A30               	clrf	(??_cmdMemoryIsEmpty+1)^0,c
  7999  0075B8  90D8               	bcf	status,0,c
  8000  0075BA  362F               	rlcf	??_cmdMemoryIsEmpty^0,f,c
  8001  0075BC  3630               	rlcf	(??_cmdMemoryIsEmpty+1)^0,f,c
  8002  0075BE  90D8               	bcf	status,0,c
  8003  0075C0  362F               	rlcf	??_cmdMemoryIsEmpty^0,f,c
  8004  0075C2  3630               	rlcf	(??_cmdMemoryIsEmpty+1)^0,f,c
  8005  0075C4  0E00               	movlw	0
  8006  0075C6  242F               	addwf	??_cmdMemoryIsEmpty^0,w,c
  8007  0075C8  6E22               	movwf	i2c_readDataBlock@reg^0,c
  8008  0075CA  0E05               	movlw	5
  8009  0075CC  2030               	addwfc	(??_cmdMemoryIsEmpty+1)^0,w,c
  8010  0075CE  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
  8011  0075D0  0E32               	movlw	low cmdMemoryIsEmpty@tempSerial
  8012  0075D2  6E24               	movwf	i2c_readDataBlock@data^0,c
  8013  0075D4  6A25               	clrf	(i2c_readDataBlock@data+1)^0,c
  8014  0075D6  0E00               	movlw	0
  8015  0075D8  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
  8016  0075DA  0E04               	movlw	4
  8017  0075DC  6E26               	movwf	i2c_readDataBlock@len^0,c
  8018  0075DE  0E50               	movlw	80
  8019  0075E0  ECD5  F03E         	call	_i2c_readDataBlock
  8020  0075E4                     l19611:
  8021                           
  8022                           ;controlMemory_MC50.c: 124:      if( tempSerial==0)
  8023  0075E4  5032               	movf	cmdMemoryIsEmpty@tempSerial^0,w,c
  8024  0075E6  1033               	iorwf	(cmdMemoryIsEmpty@tempSerial+1)^0,w,c
  8025  0075E8  1034               	iorwf	(cmdMemoryIsEmpty@tempSerial+2)^0,w,c
  8026  0075EA  1035               	iorwf	(cmdMemoryIsEmpty@tempSerial+3)^0,w,c
  8027  0075EC  A4D8               	btfss	status,2,c
  8028  0075EE  D002               	goto	l19619
  8029                           
  8030                           ;controlMemory_MC50.c: 125:      {;controlMemory_MC50.c: 126:          return 1;
  8031  0075F0  0E01               	movlw	1
  8032  0075F2  0012               	return	
  8033  0075F4                     l19619:
  8034                           
  8035                           ;controlMemory_MC50.c: 129:      {;controlMemory_MC50.c: 130:          return 0;
  8036  0075F4  0E00               	movlw	0
  8037  0075F6  0012               	return		;funcret
  8038  0075F8                     __end_of_cmdMemoryIsEmpty:
  8039                           	callstack 0
  8040                           
  8041 ;; *************** function _RemoveSerial *****************
  8042 ;; Defined at:
  8043 ;;		line 95 in file "controlMemory_MC50.c"
  8044 ;; Parameters:    Size  Location     Type
  8045 ;;  cmdType         1    wreg     unsigned char 
  8046 ;;  position        1   57[COMRAM] unsigned char 
  8047 ;; Auto vars:     Size  Location     Type
  8048 ;;  cmdType         1    2[BANK0 ] unsigned char 
  8049 ;;  tempSerial      4    3[BANK0 ] unsigned long 
  8050 ;; Return value:  Size  Location     Type
  8051 ;;                  1    wreg      void 
  8052 ;; Registers used:
  8053 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8054 ;; Tracked objects:
  8055 ;;		On entry : 3F/1
  8056 ;;		On exit  : 0/0
  8057 ;;		Unchanged: 0/0
  8058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8059 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8060 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8061 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8062 ;;      Totals:         1       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8063 ;;Total ram usage:        8 bytes
  8064 ;; Hardware stack levels used: 1
  8065 ;; Hardware stack levels required when called: 13
  8066 ;; This function calls:
  8067 ;;		_i2c_writeNBytes
  8068 ;; This function is called by:
  8069 ;;		_controlSelectRemote
  8070 ;; This function uses a non-reentrant model
  8071 ;;
  8072                           
  8073                           	psect	text11
  8074  007AC6                     __ptext11:
  8075                           	callstack 0
  8076  007AC6                     _RemoveSerial:
  8077                           	callstack 14
  8078                           
  8079                           ;incstack = 0
  8080                           ;RemoveSerial@cmdType stored from wreg
  8081  007AC6  0100               	movlb	0	; () banked
  8082  007AC8  6FDA               	movwf	RemoveSerial@cmdType& (0+255),b
  8083                           
  8084                           ;controlMemory_MC50.c: 95: void RemoveSerial(char cmdType, char position);controlMemory_
      +                          MC50.c: 96: {;controlMemory_MC50.c: 97:     unsigned long tempSerial=0;
  8085  007ACA  0E00               	movlw	0
  8086  007ACC  0100               	movlb	0	; () banked
  8087  007ACE  6FDB               	movwf	RemoveSerial@tempSerial& (0+255),b
  8088  007AD0  0E00               	movlw	0
  8089  007AD2  6FDC               	movwf	(RemoveSerial@tempSerial+1)& (0+255),b
  8090  007AD4  0E00               	movlw	0
  8091  007AD6  6FDD               	movwf	(RemoveSerial@tempSerial+2)& (0+255),b
  8092  007AD8  0E00               	movlw	0
  8093  007ADA  6FDE               	movwf	(RemoveSerial@tempSerial+3)& (0+255),b
  8094                           
  8095                           ; BSR set to: 0
  8096                           ;controlMemory_MC50.c: 100:     if(cmdType==0)
  8097  007ADC  51DA               	movf	RemoveSerial@cmdType& (0+255),w,b
  8098  007ADE  A4D8               	btfss	status,2,c
  8099  007AE0  D019               	goto	l19601
  8100                           
  8101                           ; BSR set to: 0
  8102                           ;controlMemory_MC50.c: 101:     {;controlMemory_MC50.c: 102:        i2c_writeNBytes(0x50
      +                          , (uint16_t)(0x0200 + (position * 4)), (char*)&tempSerial, 4);
  8103  007AE2  503A               	movf	RemoveSerial@position^0,w,c
  8104  007AE4  6FD8               	movwf	??_RemoveSerial& (0+255),b
  8105  007AE6  6BD9               	clrf	(??_RemoveSerial+1)& (0+255),b
  8106  007AE8  90D8               	bcf	status,0,c
  8107  007AEA  37D8               	rlcf	??_RemoveSerial& (0+255),f,b
  8108  007AEC  37D9               	rlcf	(??_RemoveSerial+1)& (0+255),f,b
  8109  007AEE  90D8               	bcf	status,0,c
  8110  007AF0  37D8               	rlcf	??_RemoveSerial& (0+255),f,b
  8111  007AF2  37D9               	rlcf	(??_RemoveSerial+1)& (0+255),f,b
  8112  007AF4  0E00               	movlw	0
  8113  007AF6  25D8               	addwf	??_RemoveSerial& (0+255),w,b
  8114  007AF8  6E22               	movwf	i2c_writeNBytes@reg^0,c
  8115  007AFA  0E02               	movlw	2
  8116  007AFC  21D9               	addwfc	(??_RemoveSerial+1)& (0+255),w,b
  8117  007AFE  6E23               	movwf	(i2c_writeNBytes@reg+1)^0,c
  8118  007B00  0EDB               	movlw	low RemoveSerial@tempSerial
  8119  007B02  6E24               	movwf	i2c_writeNBytes@data^0,c
  8120  007B04  0E00               	movlw	0
  8121  007B06  6E26               	movwf	(i2c_writeNBytes@len+1)^0,c
  8122  007B08  0E04               	movlw	4
  8123  007B0A  6E25               	movwf	i2c_writeNBytes@len^0,c
  8124  007B0C  0E50               	movlw	80
  8125  007B0E  EC10  F03F         	call	_i2c_writeNBytes
  8126                           
  8127                           ;controlMemory_MC50.c: 103:     }
  8128  007B12  0012               	return	
  8129  007B14                     l19601:
  8130                           
  8131                           ; BSR set to: 0
  8132                           ;controlMemory_MC50.c: 105:     {;controlMemory_MC50.c: 106:        i2c_writeNBytes(0x50
      +                          , (uint16_t)(0x0500 + (position * 4)), (char*)&tempSerial, 4);
  8133  007B14  503A               	movf	RemoveSerial@position^0,w,c
  8134  007B16  6FD8               	movwf	??_RemoveSerial& (0+255),b
  8135  007B18  6BD9               	clrf	(??_RemoveSerial+1)& (0+255),b
  8136  007B1A  90D8               	bcf	status,0,c
  8137  007B1C  37D8               	rlcf	??_RemoveSerial& (0+255),f,b
  8138  007B1E  37D9               	rlcf	(??_RemoveSerial+1)& (0+255),f,b
  8139  007B20  90D8               	bcf	status,0,c
  8140  007B22  37D8               	rlcf	??_RemoveSerial& (0+255),f,b
  8141  007B24  37D9               	rlcf	(??_RemoveSerial+1)& (0+255),f,b
  8142  007B26  0E00               	movlw	0
  8143  007B28  25D8               	addwf	??_RemoveSerial& (0+255),w,b
  8144  007B2A  6E22               	movwf	i2c_writeNBytes@reg^0,c
  8145  007B2C  0E05               	movlw	5
  8146  007B2E  21D9               	addwfc	(??_RemoveSerial+1)& (0+255),w,b
  8147  007B30  6E23               	movwf	(i2c_writeNBytes@reg+1)^0,c
  8148  007B32  0EDB               	movlw	low RemoveSerial@tempSerial
  8149  007B34  6E24               	movwf	i2c_writeNBytes@data^0,c
  8150  007B36  0E00               	movlw	0
  8151  007B38  6E26               	movwf	(i2c_writeNBytes@len+1)^0,c
  8152  007B3A  0E04               	movlw	4
  8153  007B3C  6E25               	movwf	i2c_writeNBytes@len^0,c
  8154  007B3E  0E50               	movlw	80
  8155  007B40  EC10  F03F         	call	_i2c_writeNBytes
  8156  007B44  0012               	return		;funcret
  8157  007B46                     __end_of_RemoveSerial:
  8158                           	callstack 0
  8159                           
  8160 ;; *************** function _controlSaveRemote *****************
  8161 ;; Defined at:
  8162 ;;		line 1209 in file "sm_MenuConfiguration_MC50.c"
  8163 ;; Parameters:    Size  Location     Type
  8164 ;;		None
  8165 ;; Auto vars:     Size  Location     Type
  8166 ;;		None
  8167 ;; Return value:  Size  Location     Type
  8168 ;;                  1    wreg      void 
  8169 ;; Registers used:
  8170 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8171 ;; Tracked objects:
  8172 ;;		On entry : 3F/0
  8173 ;;		On exit  : 0/0
  8174 ;;		Unchanged: 0/0
  8175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8176 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8178 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8179 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8180 ;;Total ram usage:        1 bytes
  8181 ;; Hardware stack levels used: 1
  8182 ;; Hardware stack levels required when called: 6
  8183 ;; This function calls:
  8184 ;;		_ClearFlag_rfCMD
  8185 ;;		_SetSegmentValueIntermitentMain
  8186 ;;		_SetSegmentValueMain
  8187 ;;		___awdiv
  8188 ;;		___lbmod
  8189 ;;		_sm_send_event
  8190 ;; This function is called by:
  8191 ;;		_sm_execute_menuConfiguration
  8192 ;; This function uses a non-reentrant model
  8193 ;;
  8194                           
  8195                           	psect	text12
  8196  00718A                     __ptext12:
  8197                           	callstack 0
  8198  00718A                     _controlSaveRemote:
  8199                           	callstack 22
  8200                           
  8201                           ; BSR set to: 0
  8202                           ;sm_MenuConfiguration_MC50.c: 1210:      if (ts_system.timeSinalizationDigit<=0)
  8203                           
  8204                           ;incstack = 0
  8205  00718A  0101               	movlb	1	; () banked
  8206  00718C  BFA7               	btfsc	(_ts_system+13)& (0+255),7,b	;volatile
  8207  00718E  D005               	goto	u24220
  8208  007190  51A7               	movf	(_ts_system+13)& (0+255),w,b	;volatile
  8209  007192  E154               	bnz	l3483
  8210  007194  05A6               	decf	(_ts_system+12)& (0+255),w,b	;volatile
  8211  007196  B0D8               	btfsc	status,0,c
  8212  007198  0012               	return	
  8213  00719A                     u24220:
  8214                           
  8215                           ; BSR set to: 1
  8216                           ;sm_MenuConfiguration_MC50.c: 1211:      {;sm_MenuConfiguration_MC50.c: 1212:          i
      +                          f(edit_Param.Max==0)
  8217  00719A  504A               	movf	(_edit_Param+4)^0,w,c	;volatile
  8218  00719C  A4D8               	btfss	status,2,c
  8219  00719E  D02E               	goto	l21075
  8220                           
  8221                           ; BSR set to: 1
  8222                           ;sm_MenuConfiguration_MC50.c: 1213:          {;sm_MenuConfiguration_MC50.c: 1214:       
      +                                 ts_system.timeoutMenu=10*(1000/50);
  8223  0071A0  0E00               	movlw	0
  8224  0071A2  6FA9               	movwf	(_ts_system+15)& (0+255),b	;volatile
  8225  0071A4  0EC8               	movlw	200
  8226  0071A6  6FA8               	movwf	(_ts_system+14)& (0+255),b	;volatile
  8227                           
  8228                           ; BSR set to: 1
  8229                           ;sm_MenuConfiguration_MC50.c: 1215:              sm_send_event(&menuConfiguration_stateM
      +                          achine, ev_NextRemote);
  8230  0071A8  0EBD               	movlw	low _menuConfiguration_stateMachine
  8231  0071AA  6E12               	movwf	sm_send_event@psm^0,c
  8232  0071AC  0E02               	movlw	high _menuConfiguration_stateMachine
  8233  0071AE  6E13               	movwf	(sm_send_event@psm+1)^0,c
  8234  0071B0  0E00               	movlw	0
  8235  0071B2  6E15               	movwf	(sm_send_event@event+1)^0,c
  8236  0071B4  0E09               	movlw	9
  8237  0071B6  6E14               	movwf	sm_send_event@event^0,c
  8238  0071B8  EC25  F041         	call	_sm_send_event	;wreg free
  8239                           
  8240                           ;sm_MenuConfiguration_MC50.c: 1216:              SetSegmentValueIntermitentMain((edit_Pa
      +                          ram.tempValue-edit_Param.tempValue%10)/10, edit_Param.tempValue%10,(1000/50));
  8241  0071BC  0E0A               	movlw	10
  8242  0071BE  6E10               	movwf	___lbmod@divisor^0,c
  8243  0071C0  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  8244  0071C2  ECA5  F046         	call	___lbmod
  8245  0071C6  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  8246  0071C8  0E00               	movlw	0
  8247  0071CA  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  8248  0071CC  0E14               	movlw	20
  8249  0071CE  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  8250  0071D0  0E0A               	movlw	10
  8251  0071D2  6E10               	movwf	___lbmod@divisor^0,c
  8252  0071D4  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  8253  0071D6  ECA5  F046         	call	___lbmod
  8254  0071DA  6E20               	movwf	??_controlSaveRemote^0,c
  8255  0071DC  5020               	movf	??_controlSaveRemote^0,w,c
  8256  0071DE  5C49               	subwf	(_edit_Param+3)^0,w,c	;volatile
  8257  0071E0  6E14               	movwf	___awdiv@dividend^0,c
  8258  0071E2  6A15               	clrf	(___awdiv@dividend+1)^0,c
  8259  0071E4  A0D8               	btfss	status,0,c
  8260  0071E6  0615               	decf	(___awdiv@dividend+1)^0,f,c
  8261  0071E8  0E00               	movlw	0
  8262  0071EA  6E17               	movwf	(___awdiv@divisor+1)^0,c
  8263  0071EC  0E0A               	movlw	10
  8264  0071EE  6E16               	movwf	___awdiv@divisor^0,c
  8265  0071F0  EC9E  F03C         	call	___awdiv	;wreg free
  8266  0071F4  5014               	movf	?___awdiv^0,w,c
  8267  0071F6  EC79  F048         	call	_SetSegmentValueIntermitentMain
  8268                           
  8269                           ;sm_MenuConfiguration_MC50.c: 1217:          }
  8270  0071FA  0012               	return	
  8271  0071FC                     l21075:
  8272                           
  8273                           ; BSR set to: 1
  8274                           ;sm_MenuConfiguration_MC50.c: 1219:          {;sm_MenuConfiguration_MC50.c: 1220:       
      +                                sm_send_event(&main_stateMachine, ev_goto_StandBy);
  8275  0071FC  0EED               	movlw	low _main_stateMachine
  8276  0071FE  6E12               	movwf	sm_send_event@psm^0,c
  8277  007200  0E01               	movlw	high _main_stateMachine
  8278  007202  6E13               	movwf	(sm_send_event@psm+1)^0,c
  8279  007204  0E00               	movlw	0
  8280  007206  6E15               	movwf	(sm_send_event@event+1)^0,c
  8281  007208  0E07               	movlw	7
  8282  00720A  6E14               	movwf	sm_send_event@event^0,c
  8283  00720C  EC25  F041         	call	_sm_send_event	;wreg free
  8284                           
  8285                           ;sm_MenuConfiguration_MC50.c: 1221:             sm_send_event(&menuConfiguration_stateMa
      +                          chine, ev_ParameterIsSaved);
  8286  007210  0EBD               	movlw	low _menuConfiguration_stateMachine
  8287  007212  6E12               	movwf	sm_send_event@psm^0,c
  8288  007214  0E02               	movlw	high _menuConfiguration_stateMachine
  8289  007216  6E13               	movwf	(sm_send_event@psm+1)^0,c
  8290  007218  0E00               	movlw	0
  8291  00721A  6E15               	movwf	(sm_send_event@event+1)^0,c
  8292  00721C  0E04               	movlw	4
  8293  00721E  6E14               	movwf	sm_send_event@event^0,c
  8294  007220  EC25  F041         	call	_sm_send_event	;wreg free
  8295                           
  8296                           ;sm_MenuConfiguration_MC50.c: 1222:             SetSegmentValueMain(dMinus,dMinus);
  8297  007224  0E18               	movlw	24
  8298  007226  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  8299  007228  0E18               	movlw	24
  8300  00722A  ECDD  F047         	call	_SetSegmentValueMain
  8301                           
  8302                           ; BSR set to: 0
  8303                           ;sm_MenuConfiguration_MC50.c: 1223:             ClearFlag_rfCMD();
  8304  00722E  EC2E  F049         	call	_ClearFlag_rfCMD	;wreg free
  8305                           
  8306                           ;sm_MenuConfiguration_MC50.c: 1224:             ts_system.timeoutMenu = 0;
  8307  007232  0E00               	movlw	0
  8308  007234  0101               	movlb	1	; () banked
  8309  007236  6FA9               	movwf	(_ts_system+15)& (0+255),b	;volatile
  8310  007238  0E00               	movlw	0
  8311  00723A  6FA8               	movwf	(_ts_system+14)& (0+255),b	;volatile
  8312  00723C                     l3483:
  8313  00723C  0012               	return		;funcret
  8314  00723E                     __end_of_controlSaveRemote:
  8315                           	callstack 0
  8316                           
  8317 ;; *************** function ___lbmod *****************
  8318 ;; Defined at:
  8319 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\lbmod.c"
  8320 ;; Parameters:    Size  Location     Type
  8321 ;;  dividend        1    wreg     unsigned char 
  8322 ;;  divisor         1   15[COMRAM] unsigned char 
  8323 ;; Auto vars:     Size  Location     Type
  8324 ;;  dividend        1   16[COMRAM] unsigned char 
  8325 ;;  rem             1   18[COMRAM] unsigned char 
  8326 ;;  counter         1   17[COMRAM] unsigned char 
  8327 ;; Return value:  Size  Location     Type
  8328 ;;                  1    wreg      unsigned char 
  8329 ;; Registers used:
  8330 ;;		wreg, status,2, status,0
  8331 ;; Tracked objects:
  8332 ;;		On entry : 0/1
  8333 ;;		On exit  : 0/0
  8334 ;;		Unchanged: 0/0
  8335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8336 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8337 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8339 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8340 ;;Total ram usage:        4 bytes
  8341 ;; Hardware stack levels used: 1
  8342 ;; Hardware stack levels required when called: 4
  8343 ;; This function calls:
  8344 ;;		Nothing
  8345 ;; This function is called by:
  8346 ;;		_controlSelectRemote
  8347 ;;		_controlSaveRemote
  8348 ;; This function uses a non-reentrant model
  8349 ;;
  8350                           
  8351                           	psect	text13
  8352  008D4A                     __ptext13:
  8353                           	callstack 0
  8354  008D4A                     ___lbmod:
  8355                           	callstack 23
  8356                           
  8357                           ;incstack = 0
  8358                           ;___lbmod@dividend stored from wreg
  8359  008D4A  6E11               	movwf	___lbmod@dividend^0,c
  8360  008D4C  0E08               	movlw	8
  8361  008D4E  6E12               	movwf	___lbmod@counter^0,c
  8362  008D50  0E00               	movlw	0
  8363  008D52  6E13               	movwf	___lbmod@rem^0,c
  8364  008D54                     l12519:
  8365  008D54  90D8               	bcf	status,0,c
  8366  008D56  3411               	rlcf	___lbmod@dividend^0,w,c
  8367  008D58  3413               	rlcf	___lbmod@rem^0,w,c
  8368  008D5A  6E13               	movwf	___lbmod@rem^0,c
  8369  008D5C  90D8               	bcf	status,0,c
  8370  008D5E  3611               	rlcf	___lbmod@dividend^0,f,c
  8371  008D60  5010               	movf	___lbmod@divisor^0,w,c
  8372  008D62  5C13               	subwf	___lbmod@rem^0,w,c
  8373  008D64  A0D8               	btfss	status,0,c
  8374  008D66  D002               	goto	l12527
  8375  008D68  5010               	movf	___lbmod@divisor^0,w,c
  8376  008D6A  5E13               	subwf	___lbmod@rem^0,f,c
  8377  008D6C                     l12527:
  8378  008D6C  2E12               	decfsz	___lbmod@counter^0,f,c
  8379  008D6E  D7F2               	goto	l12519
  8380  008D70  5013               	movf	___lbmod@rem^0,w,c
  8381  008D72  0012               	return		;funcret
  8382  008D74                     __end_of___lbmod:
  8383                           	callstack 0
  8384                           
  8385 ;; *************** function ___awdiv *****************
  8386 ;; Defined at:
  8387 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awdiv.c"
  8388 ;; Parameters:    Size  Location     Type
  8389 ;;  dividend        2   19[COMRAM] int 
  8390 ;;  divisor         2   21[COMRAM] int 
  8391 ;; Auto vars:     Size  Location     Type
  8392 ;;  quotient        2   25[COMRAM] int 
  8393 ;;  sign            1   24[COMRAM] unsigned char 
  8394 ;;  counter         1   23[COMRAM] unsigned char 
  8395 ;; Return value:  Size  Location     Type
  8396 ;;                  2   19[COMRAM] int 
  8397 ;; Registers used:
  8398 ;;		wreg, status,2, status,0
  8399 ;; Tracked objects:
  8400 ;;		On entry : 0/0
  8401 ;;		On exit  : 0/0
  8402 ;;		Unchanged: 0/0
  8403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8404 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8405 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8407 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8408 ;;Total ram usage:        8 bytes
  8409 ;; Hardware stack levels used: 1
  8410 ;; Hardware stack levels required when called: 4
  8411 ;; This function calls:
  8412 ;;		Nothing
  8413 ;; This function is called by:
  8414 ;;		_controlSelectRemote
  8415 ;;		_controlSaveRemote
  8416 ;; This function uses a non-reentrant model
  8417 ;;
  8418                           
  8419                           	psect	text14
  8420  00793C                     __ptext14:
  8421                           	callstack 0
  8422  00793C                     ___awdiv:
  8423                           	callstack 23
  8424                           
  8425                           ;incstack = 0
  8426  00793C  0E00               	movlw	0
  8427  00793E  6E19               	movwf	___awdiv@sign^0,c
  8428  007940  AE17               	btfss	(___awdiv@divisor+1)^0,7,c
  8429  007942  D006               	goto	l12455
  8430  007944  6C16               	negf	___awdiv@divisor^0,c
  8431  007946  1E17               	comf	(___awdiv@divisor+1)^0,f,c
  8432  007948  B0D8               	btfsc	status,0,c
  8433  00794A  2A17               	incf	(___awdiv@divisor+1)^0,f,c
  8434  00794C  0E01               	movlw	1
  8435  00794E  6E19               	movwf	___awdiv@sign^0,c
  8436  007950                     l12455:
  8437  007950  AE15               	btfss	(___awdiv@dividend+1)^0,7,c
  8438  007952  D006               	goto	l12461
  8439  007954  6C14               	negf	___awdiv@dividend^0,c
  8440  007956  1E15               	comf	(___awdiv@dividend+1)^0,f,c
  8441  007958  B0D8               	btfsc	status,0,c
  8442  00795A  2A15               	incf	(___awdiv@dividend+1)^0,f,c
  8443  00795C  0E01               	movlw	1
  8444  00795E  1A19               	xorwf	___awdiv@sign^0,f,c
  8445  007960                     l12461:
  8446  007960  0E00               	movlw	0
  8447  007962  6E1B               	movwf	(___awdiv@quotient+1)^0,c
  8448  007964  0E00               	movlw	0
  8449  007966  6E1A               	movwf	___awdiv@quotient^0,c
  8450  007968  5016               	movf	___awdiv@divisor^0,w,c
  8451  00796A  1017               	iorwf	(___awdiv@divisor+1)^0,w,c
  8452  00796C  B4D8               	btfsc	status,2,c
  8453  00796E  D01C               	goto	l12483
  8454  007970  0E01               	movlw	1
  8455  007972  6E18               	movwf	___awdiv@counter^0,c
  8456  007974  D004               	goto	l12469
  8457  007976                     l12467:
  8458  007976  90D8               	bcf	status,0,c
  8459  007978  3616               	rlcf	___awdiv@divisor^0,f,c
  8460  00797A  3617               	rlcf	(___awdiv@divisor+1)^0,f,c
  8461  00797C  2A18               	incf	___awdiv@counter^0,f,c
  8462  00797E                     l12469:
  8463  00797E  AE17               	btfss	(___awdiv@divisor+1)^0,7,c
  8464  007980  D7FA               	goto	l12467
  8465  007982                     u12090:
  8466  007982  90D8               	bcf	status,0,c
  8467  007984  361A               	rlcf	___awdiv@quotient^0,f,c
  8468  007986  361B               	rlcf	(___awdiv@quotient+1)^0,f,c
  8469  007988  5016               	movf	___awdiv@divisor^0,w,c
  8470  00798A  5C14               	subwf	___awdiv@dividend^0,w,c
  8471  00798C  5017               	movf	(___awdiv@divisor+1)^0,w,c
  8472  00798E  5815               	subwfb	(___awdiv@dividend+1)^0,w,c
  8473  007990  A0D8               	btfss	status,0,c
  8474  007992  D005               	goto	l12479
  8475  007994  5016               	movf	___awdiv@divisor^0,w,c
  8476  007996  5E14               	subwf	___awdiv@dividend^0,f,c
  8477  007998  5017               	movf	(___awdiv@divisor+1)^0,w,c
  8478  00799A  5A15               	subwfb	(___awdiv@dividend+1)^0,f,c
  8479  00799C  801A               	bsf	___awdiv@quotient^0,0,c
  8480  00799E                     l12479:
  8481  00799E  90D8               	bcf	status,0,c
  8482  0079A0  3217               	rrcf	(___awdiv@divisor+1)^0,f,c
  8483  0079A2  3216               	rrcf	___awdiv@divisor^0,f,c
  8484  0079A4  2E18               	decfsz	___awdiv@counter^0,f,c
  8485  0079A6  D7ED               	goto	u12090
  8486  0079A8                     l12483:
  8487  0079A8  5019               	movf	___awdiv@sign^0,w,c
  8488  0079AA  B4D8               	btfsc	status,2,c
  8489  0079AC  D004               	goto	l12487
  8490  0079AE  6C1A               	negf	___awdiv@quotient^0,c
  8491  0079B0  1E1B               	comf	(___awdiv@quotient+1)^0,f,c
  8492  0079B2  B0D8               	btfsc	status,0,c
  8493  0079B4  2A1B               	incf	(___awdiv@quotient+1)^0,f,c
  8494  0079B6                     l12487:
  8495  0079B6  C01A  F014         	movff	___awdiv@quotient,?___awdiv
  8496  0079BA  C01B  F015         	movff	___awdiv@quotient+1,?___awdiv+1
  8497  0079BE  0012               	return		;funcret
  8498  0079C0                     __end_of___awdiv:
  8499                           	callstack 0
  8500                           
  8501 ;; *************** function _SetSegmentValueMain *****************
  8502 ;; Defined at:
  8503 ;;		line 104 in file "outputs_MC50.c"
  8504 ;; Parameters:    Size  Location     Type
  8505 ;;  d1              1    wreg     unsigned char 
  8506 ;;  d2              1   27[COMRAM] unsigned char 
  8507 ;; Auto vars:     Size  Location     Type
  8508 ;;  d1              1   28[COMRAM] unsigned char 
  8509 ;; Return value:  Size  Location     Type
  8510 ;;                  1    wreg      void 
  8511 ;; Registers used:
  8512 ;;		wreg, status,2
  8513 ;; Tracked objects:
  8514 ;;		On entry : 0/0
  8515 ;;		On exit  : 3F/0
  8516 ;;		Unchanged: 0/0
  8517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8518 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8519 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8520 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8521 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8522 ;;Total ram usage:        2 bytes
  8523 ;; Hardware stack levels used: 1
  8524 ;; Hardware stack levels required when called: 4
  8525 ;; This function calls:
  8526 ;;		Nothing
  8527 ;; This function is called by:
  8528 ;;		_sm_execute_main
  8529 ;;		_sm_execute_menuConfiguration
  8530 ;;		_load_New_Menu
  8531 ;;		_controlSelectRemote
  8532 ;;		_controlSaveRemote
  8533 ;; This function uses a non-reentrant model
  8534 ;;
  8535                           
  8536                           	psect	text15
  8537  008FBA                     __ptext15:
  8538                           	callstack 0
  8539  008FBA                     _SetSegmentValueMain:
  8540                           	callstack 22
  8541                           
  8542                           ;incstack = 0
  8543                           ;SetSegmentValueMain@d1 stored from wreg
  8544  008FBA  6E1D               	movwf	SetSegmentValueMain@d1^0,c
  8545                           
  8546                           ;outputs_MC50.c: 104: void SetSegmentValueMain(char d1, char d2);outputs_MC50.c: 105: {;
      +                          outputs_MC50.c: 106:     dispStruct.display_grp.value_display1=d1;
  8547  008FBC  C01D  F072         	movff	SetSegmentValueMain@d1,_dispStruct	;volatile
  8548                           
  8549                           ;outputs_MC50.c: 107:     dispStruct.display_grp.value_display2=d2;
  8550  008FC0  C01C  F073         	movff	SetSegmentValueMain@d2,_dispStruct+1	;volatile
  8551                           
  8552                           ;outputs_MC50.c: 108:     dispStruct.intermitentFreq=0;
  8553  008FC4  0E00               	movlw	0
  8554  008FC6  0100               	movlb	0	; () banked
  8555  008FC8  6F76               	movwf	(_dispStruct+4)& (0+255),b	;volatile
  8556  008FCA  0E00               	movlw	0
  8557  008FCC  6F75               	movwf	(_dispStruct+3)& (0+255),b	;volatile
  8558                           
  8559                           ; BSR set to: 0
  8560                           ;outputs_MC50.c: 109:     dispStruct.upFase=0;
  8561  008FCE  0E00               	movlw	0
  8562  008FD0  6F77               	movwf	(_dispStruct+5)& (0+255),b	;volatile
  8563                           
  8564                           ; BSR set to: 0
  8565  008FD2  0012               	return		;funcret
  8566  008FD4                     __end_of_SetSegmentValueMain:
  8567                           	callstack 0
  8568                           
  8569 ;; *************** function _ClearFlag_rfCMD *****************
  8570 ;; Defined at:
  8571 ;;		line 463 in file "inputs_MC50.c"
  8572 ;; Parameters:    Size  Location     Type
  8573 ;;		None
  8574 ;; Auto vars:     Size  Location     Type
  8575 ;;		None
  8576 ;; Return value:  Size  Location     Type
  8577 ;;                  1    wreg      void 
  8578 ;; Registers used:
  8579 ;;		wreg, status,2
  8580 ;; Tracked objects:
  8581 ;;		On entry : 0/1
  8582 ;;		On exit  : 0/0
  8583 ;;		Unchanged: 0/0
  8584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8585 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8586 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8588 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8589 ;;Total ram usage:        0 bytes
  8590 ;; Hardware stack levels used: 1
  8591 ;; Hardware stack levels required when called: 4
  8592 ;; This function calls:
  8593 ;;		Nothing
  8594 ;; This function is called by:
  8595 ;;		_sm_execute_menuConfiguration
  8596 ;;		_controlSelectRemote
  8597 ;;		_controlSaveRemote
  8598 ;; This function uses a non-reentrant model
  8599 ;;
  8600                           
  8601                           	psect	text16
  8602  00925C                     __ptext16:
  8603                           	callstack 0
  8604  00925C                     _ClearFlag_rfCMD:
  8605                           	callstack 23
  8606                           
  8607                           ;inputs_MC50.c: 464:     rfCMD.processed=1;
  8608                           
  8609                           ; BSR set to: 0
  8610                           ;incstack = 0
  8611  00925C  0E01               	movlw	1
  8612  00925E  6E45               	movwf	(_rfCMD+10)^0,c	;volatile
  8613  009260  0012               	return		;funcret
  8614  009262                     __end_of_ClearFlag_rfCMD:
  8615                           	callstack 0
  8616                           
  8617 ;; *************** function _controlLearnDigit *****************
  8618 ;; Defined at:
  8619 ;;		line 1230 in file "sm_MenuConfiguration_MC50.c"
  8620 ;; Parameters:    Size  Location     Type
  8621 ;;		None
  8622 ;; Auto vars:     Size  Location     Type
  8623 ;;		None
  8624 ;; Return value:  Size  Location     Type
  8625 ;;                  1    wreg      void 
  8626 ;; Registers used:
  8627 ;;		wreg, status,2, status,0, cstack
  8628 ;; Tracked objects:
  8629 ;;		On entry : 3F/0
  8630 ;;		On exit  : 3E/0
  8631 ;;		Unchanged: 0/0
  8632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8633 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8636 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8637 ;;Total ram usage:        0 bytes
  8638 ;; Hardware stack levels used: 1
  8639 ;; Hardware stack levels required when called: 5
  8640 ;; This function calls:
  8641 ;;		_SetSegmentValueLearn
  8642 ;; This function is called by:
  8643 ;;		_sm_execute_menuConfiguration
  8644 ;; This function uses a non-reentrant model
  8645 ;;
  8646                           
  8647                           	psect	text17
  8648  008ADC                     __ptext17:
  8649                           	callstack 0
  8650  008ADC                     _controlLearnDigit:
  8651                           	callstack 23
  8652                           
  8653                           ; BSR set to: 0
  8654                           ;sm_MenuConfiguration_MC50.c: 1232:     if(ts_system.timeSinalizationDigit<=0 )
  8655                           
  8656                           ;incstack = 0
  8657  008ADC  0101               	movlb	1	; () banked
  8658  008ADE  BFA7               	btfsc	(_ts_system+13)& (0+255),7,b	;volatile
  8659  008AE0  D005               	goto	u13640
  8660  008AE2  51A7               	movf	(_ts_system+13)& (0+255),w,b	;volatile
  8661  008AE4  E112               	bnz	l3489
  8662  008AE6  05A6               	decf	(_ts_system+12)& (0+255),w,b	;volatile
  8663  008AE8  B0D8               	btfsc	status,0,c
  8664  008AEA  0012               	return	
  8665  008AEC                     u13640:
  8666                           
  8667                           ; BSR set to: 1
  8668                           ;sm_MenuConfiguration_MC50.c: 1233:     {;sm_MenuConfiguration_MC50.c: 1234:         ts_
      +                          system.timeSinalizationDigit=( 100/50);
  8669  008AEC  0E00               	movlw	0
  8670  008AEE  6FA7               	movwf	(_ts_system+13)& (0+255),b	;volatile
  8671  008AF0  0E02               	movlw	2
  8672  008AF2  6FA6               	movwf	(_ts_system+12)& (0+255),b	;volatile
  8673                           
  8674                           ; BSR set to: 1
  8675                           ;sm_MenuConfiguration_MC50.c: 1235:         if(var_sys.StateMotor==InClose)
  8676  008AF4  0E03               	movlw	3
  8677  008AF6  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
  8678  008AF8  A4D8               	btfss	status,2,c
  8679  008AFA  D004               	goto	l13839
  8680                           
  8681                           ; BSR set to: 1
  8682                           ;sm_MenuConfiguration_MC50.c: 1236:         {;sm_MenuConfiguration_MC50.c: 1237:        
      +                               SetSegmentValueLearn(Left);
  8683  008AFC  0E00               	movlw	0
  8684  008AFE  ECFC  F034         	call	_SetSegmentValueLearn
  8685                           
  8686                           ;sm_MenuConfiguration_MC50.c: 1238:         }
  8687  008B02  0012               	return	
  8688  008B04                     l13839:
  8689                           
  8690                           ; BSR set to: 1
  8691                           ;sm_MenuConfiguration_MC50.c: 1240:         {;sm_MenuConfiguration_MC50.c: 1241:        
      +                               SetSegmentValueLearn(Rigth);
  8692  008B04  0E01               	movlw	1
  8693  008B06  ECFC  F034         	call	_SetSegmentValueLearn
  8694  008B0A                     l3489:
  8695  008B0A  0012               	return		;funcret
  8696  008B0C                     __end_of_controlLearnDigit:
  8697                           	callstack 0
  8698                           
  8699 ;; *************** function _SetSegmentValueLearn *****************
  8700 ;; Defined at:
  8701 ;;		line 124 in file "outputs_MC50.c"
  8702 ;; Parameters:    Size  Location     Type
  8703 ;;  direction       1    wreg     enum E10602
  8704 ;; Auto vars:     Size  Location     Type
  8705 ;;  direction       1   17[COMRAM] enum E10602
  8706 ;; Return value:  Size  Location     Type
  8707 ;;                  1    wreg      void 
  8708 ;; Registers used:
  8709 ;;		wreg, status,2, status,0
  8710 ;; Tracked objects:
  8711 ;;		On entry : 3F/1
  8712 ;;		On exit  : 3F/0
  8713 ;;		Unchanged: 0/0
  8714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8716 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8717 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8718 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8719 ;;Total ram usage:        3 bytes
  8720 ;; Hardware stack levels used: 1
  8721 ;; Hardware stack levels required when called: 4
  8722 ;; This function calls:
  8723 ;;		Nothing
  8724 ;; This function is called by:
  8725 ;;		_controlLearnDigit
  8726 ;; This function uses a non-reentrant model
  8727 ;;
  8728                           
  8729                           	psect	text18
  8730  0069F8                     __ptext18:
  8731                           	callstack 0
  8732  0069F8                     _SetSegmentValueLearn:
  8733                           	callstack 23
  8734                           
  8735                           ;incstack = 0
  8736                           ;SetSegmentValueLearn@direction stored from wreg
  8737  0069F8  6E12               	movwf	SetSegmentValueLearn@direction^0,c
  8738                           
  8739                           ;outputs_MC50.c: 124: void SetSegmentValueLearn(Direction_en direction);outputs_MC50.c: 
      +                          125: {;outputs_MC50.c: 126:     dispStruct.intermitentFreq=0;
  8740  0069FA  0E00               	movlw	0
  8741  0069FC  0100               	movlb	0	; () banked
  8742  0069FE  6F76               	movwf	(_dispStruct+4)& (0+255),b	;volatile
  8743  006A00  0E00               	movlw	0
  8744  006A02  6F75               	movwf	(_dispStruct+3)& (0+255),b	;volatile
  8745                           
  8746                           ;outputs_MC50.c: 127:     dispStruct.upFase=0;
  8747  006A04  0E00               	movlw	0
  8748  006A06  6F77               	movwf	(_dispStruct+5)& (0+255),b	;volatile
  8749                           
  8750                           ;outputs_MC50.c: 128:     switch (direction)
  8751  006A08  D066               	goto	l12293
  8752  006A0A                     l12239:
  8753                           
  8754                           ; BSR set to: 0
  8755                           ;outputs_MC50.c: 131:             if(dispStruct.display_grp.value_display1==sA && dispSt
      +                          ruct.display_grp.value_display2==dBlank)
  8756  006A0A  0E1A               	movlw	26
  8757  006A0C  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8758  006A0E  A4D8               	btfss	status,2,c
  8759  006A10  D009               	goto	l12245
  8760                           
  8761                           ; BSR set to: 0
  8762  006A12  0E20               	movlw	32
  8763  006A14  1973               	xorwf	(_dispStruct+1)& (0+255),w,b	;volatile
  8764  006A16  A4D8               	btfss	status,2,c
  8765  006A18  D005               	goto	l12245
  8766                           
  8767                           ; BSR set to: 0
  8768                           ;outputs_MC50.c: 132:             {;outputs_MC50.c: 133:                dispStruct.displ
      +                          ay_grp.value_display1=dBlank;
  8769  006A1A  0E20               	movlw	32
  8770  006A1C  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8771                           
  8772                           ;outputs_MC50.c: 134:                dispStruct.display_grp.value_display2=sA;
  8773  006A1E  0E1A               	movlw	26
  8774  006A20  6F73               	movwf	(_dispStruct+1)& (0+255),b	;volatile
  8775                           
  8776                           ;outputs_MC50.c: 135:             }
  8777  006A22  0012               	return	
  8778  006A24                     l12245:
  8779                           
  8780                           ; BSR set to: 0
  8781  006A24  0E20               	movlw	32
  8782  006A26  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8783  006A28  A4D8               	btfss	status,2,c
  8784  006A2A  D009               	goto	l12251
  8785                           
  8786                           ; BSR set to: 0
  8787  006A2C  0E1D               	movlw	29
  8788  006A2E  1973               	xorwf	(_dispStruct+1)& (0+255),w,b	;volatile
  8789  006A30  A4D8               	btfss	status,2,c
  8790  006A32  D005               	goto	l12251
  8791                           
  8792                           ; BSR set to: 0
  8793                           ;outputs_MC50.c: 137:             {;outputs_MC50.c: 138:                dispStruct.displ
      +                          ay_grp.value_display1=sD;
  8794  006A34  0E1D               	movlw	29
  8795  006A36  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8796                           
  8797                           ;outputs_MC50.c: 139:                dispStruct.display_grp.value_display2=dBlank;
  8798  006A38  0E20               	movlw	32
  8799  006A3A  6F73               	movwf	(_dispStruct+1)& (0+255),b	;volatile
  8800                           
  8801                           ;outputs_MC50.c: 140:             }
  8802  006A3C  0012               	return	
  8803  006A3E                     l12251:
  8804                           
  8805                           ; BSR set to: 0
  8806  006A3E  0E1F               	movlw	31
  8807  006A40  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8808  006A42  A4D8               	btfss	status,2,c
  8809  006A44  D005               	goto	l12255
  8810                           
  8811                           ; BSR set to: 0
  8812                           ;outputs_MC50.c: 142:             {;outputs_MC50.c: 143:                dispStruct.displ
      +                          ay_grp.value_display1=sA;
  8813  006A46  0E1A               	movlw	26
  8814  006A48  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8815                           
  8816                           ;outputs_MC50.c: 144:                dispStruct.display_grp.value_display2=dBlank;
  8817  006A4A  0E20               	movlw	32
  8818  006A4C  6F73               	movwf	(_dispStruct+1)& (0+255),b	;volatile
  8819                           
  8820                           ;outputs_MC50.c: 145:             }
  8821  006A4E  0012               	return	
  8822  006A50                     l12255:
  8823                           
  8824                           ; BSR set to: 0
  8825  006A50  0E20               	movlw	32
  8826  006A52  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8827  006A54  A4D8               	btfss	status,2,c
  8828  006A56  D002               	goto	l12259
  8829                           
  8830                           ; BSR set to: 0
  8831                           ;outputs_MC50.c: 147:             {;outputs_MC50.c: 148:                dispStruct.displ
      +                          ay_grp.value_display2++;
  8832  006A58  2B73               	incf	(_dispStruct+1)& (0+255),f,b	;volatile
  8833                           
  8834                           ;outputs_MC50.c: 149:             }
  8835  006A5A  0012               	return	
  8836  006A5C                     l12259:
  8837                           
  8838                           ; BSR set to: 0
  8839  006A5C  0E20               	movlw	32
  8840  006A5E  1973               	xorwf	(_dispStruct+1)& (0+255),w,b	;volatile
  8841  006A60  A4D8               	btfss	status,2,c
  8842  006A62  D002               	goto	l12263
  8843                           
  8844                           ; BSR set to: 0
  8845                           ;outputs_MC50.c: 151:             {;outputs_MC50.c: 152:                dispStruct.displ
      +                          ay_grp.value_display1++;
  8846  006A64  2B72               	incf	_dispStruct& (0+255),f,b	;volatile
  8847                           
  8848                           ;outputs_MC50.c: 153:             }
  8849  006A66  0012               	return	
  8850  006A68                     l12263:
  8851                           
  8852                           ; BSR set to: 0
  8853                           ;outputs_MC50.c: 155:             {;outputs_MC50.c: 156:                dispStruct.displ
      +                          ay_grp.value_display1=sA;
  8854  006A68  0E1A               	movlw	26
  8855  006A6A  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8856                           
  8857                           ;outputs_MC50.c: 157:                dispStruct.display_grp.value_display2=dBlank;
  8858  006A6C  0E20               	movlw	32
  8859  006A6E  6F73               	movwf	(_dispStruct+1)& (0+255),b	;volatile
  8860  006A70  0012               	return	
  8861  006A72                     l12265:
  8862                           
  8863                           ; BSR set to: 0
  8864                           ;outputs_MC50.c: 161:             if(dispStruct.display_grp.value_display2==sA && dispSt
      +                          ruct.display_grp.value_display1==dBlank)
  8865  006A72  0E1A               	movlw	26
  8866  006A74  1973               	xorwf	(_dispStruct+1)& (0+255),w,b	;volatile
  8867  006A76  A4D8               	btfss	status,2,c
  8868  006A78  D009               	goto	l12271
  8869                           
  8870                           ; BSR set to: 0
  8871  006A7A  0E20               	movlw	32
  8872  006A7C  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8873  006A7E  A4D8               	btfss	status,2,c
  8874  006A80  D005               	goto	l12271
  8875                           
  8876                           ; BSR set to: 0
  8877                           ;outputs_MC50.c: 162:             {;outputs_MC50.c: 163:                dispStruct.displ
      +                          ay_grp.value_display1=sA;
  8878  006A82  0E1A               	movlw	26
  8879  006A84  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8880                           
  8881                           ;outputs_MC50.c: 164:                dispStruct.display_grp.value_display2=dBlank;
  8882  006A86  0E20               	movlw	32
  8883  006A88  6F73               	movwf	(_dispStruct+1)& (0+255),b	;volatile
  8884                           
  8885                           ;outputs_MC50.c: 165:             }
  8886  006A8A  0012               	return	
  8887  006A8C                     l12271:
  8888                           
  8889                           ; BSR set to: 0
  8890  006A8C  0E20               	movlw	32
  8891  006A8E  1973               	xorwf	(_dispStruct+1)& (0+255),w,b	;volatile
  8892  006A90  A4D8               	btfss	status,2,c
  8893  006A92  D009               	goto	l12277
  8894                           
  8895                           ; BSR set to: 0
  8896  006A94  0E1D               	movlw	29
  8897  006A96  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8898  006A98  A4D8               	btfss	status,2,c
  8899  006A9A  D005               	goto	l12277
  8900                           
  8901                           ; BSR set to: 0
  8902                           ;outputs_MC50.c: 167:             {;outputs_MC50.c: 168:                dispStruct.displ
      +                          ay_grp.value_display1=dBlank;
  8903  006A9C  0E20               	movlw	32
  8904  006A9E  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8905                           
  8906                           ;outputs_MC50.c: 169:                dispStruct.display_grp.value_display2=sD;
  8907  006AA0  0E1D               	movlw	29
  8908  006AA2  6F73               	movwf	(_dispStruct+1)& (0+255),b	;volatile
  8909                           
  8910                           ;outputs_MC50.c: 170:             }
  8911  006AA4  0012               	return	
  8912  006AA6                     l12277:
  8913                           
  8914                           ; BSR set to: 0
  8915  006AA6  0E1A               	movlw	26
  8916  006AA8  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8917  006AAA  A4D8               	btfss	status,2,c
  8918  006AAC  D003               	goto	l12281
  8919                           
  8920                           ; BSR set to: 0
  8921                           ;outputs_MC50.c: 172:             {;outputs_MC50.c: 173:                dispStruct.displ
      +                          ay_grp.value_display1=sF;
  8922  006AAE  0E1F               	movlw	31
  8923  006AB0  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8924                           
  8925                           ;outputs_MC50.c: 174:             }
  8926  006AB2  0012               	return	
  8927  006AB4                     l12281:
  8928                           
  8929                           ; BSR set to: 0
  8930  006AB4  0E20               	movlw	32
  8931  006AB6  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8932  006AB8  A4D8               	btfss	status,2,c
  8933  006ABA  D002               	goto	l12285
  8934                           
  8935                           ; BSR set to: 0
  8936                           ;outputs_MC50.c: 176:             {;outputs_MC50.c: 177:                dispStruct.displ
      +                          ay_grp.value_display2--;
  8937  006ABC  0773               	decf	(_dispStruct+1)& (0+255),f,b	;volatile
  8938                           
  8939                           ;outputs_MC50.c: 178:             }
  8940  006ABE  0012               	return	
  8941  006AC0                     l12285:
  8942                           
  8943                           ; BSR set to: 0
  8944  006AC0  0E20               	movlw	32
  8945  006AC2  1973               	xorwf	(_dispStruct+1)& (0+255),w,b	;volatile
  8946  006AC4  A4D8               	btfss	status,2,c
  8947  006AC6  D002               	goto	l12289
  8948                           
  8949                           ; BSR set to: 0
  8950                           ;outputs_MC50.c: 180:             {;outputs_MC50.c: 181:                dispStruct.displ
      +                          ay_grp.value_display1--;
  8951  006AC8  0772               	decf	_dispStruct& (0+255),f,b	;volatile
  8952                           
  8953                           ;outputs_MC50.c: 182:             }
  8954  006ACA  0012               	return	
  8955  006ACC                     l12289:
  8956                           
  8957                           ; BSR set to: 0
  8958                           ;outputs_MC50.c: 184:             {;outputs_MC50.c: 185:                dispStruct.displ
      +                          ay_grp.value_display1=sA;
  8959  006ACC  0E1A               	movlw	26
  8960  006ACE  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8961                           
  8962                           ;outputs_MC50.c: 186:                dispStruct.display_grp.value_display2=dBlank;
  8963  006AD0  0E20               	movlw	32
  8964  006AD2  6F73               	movwf	(_dispStruct+1)& (0+255),b	;volatile
  8965  006AD4  0012               	return	
  8966  006AD6                     l12293:
  8967                           
  8968                           ; BSR set to: 0
  8969  006AD6  5012               	movf	SetSegmentValueLearn@direction^0,w,c
  8970  006AD8  6E10               	movwf	??_SetSegmentValueLearn^0,c
  8971  006ADA  6A11               	clrf	(??_SetSegmentValueLearn+1)^0,c
  8972                           
  8973                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8974                           ; Switch size 1, requested type "simple"
  8975                           ; Number of cases is 1, Range of values is 0 to 0
  8976                           ; switch strategies available:
  8977                           ; Name         Instructions Cycles
  8978                           ; simple_byte            4     3 (average)
  8979                           ;	Chosen strategy is simple_byte
  8980  006ADC  5011               	movf	(??_SetSegmentValueLearn+1)^0,w,c
  8981  006ADE  0A00               	xorlw	0	; case 0
  8982  006AE0  A4D8               	btfss	status,2,c
  8983  006AE2  0012               	return	
  8984                           
  8985                           ; BSR set to: 0
  8986                           ; Switch size 1, requested type "simple"
  8987                           ; Number of cases is 2, Range of values is 0 to 1
  8988                           ; switch strategies available:
  8989                           ; Name         Instructions Cycles
  8990                           ; simple_byte            7     4 (average)
  8991                           ;	Chosen strategy is simple_byte
  8992  006AE4  5010               	movf	??_SetSegmentValueLearn^0,w,c
  8993  006AE6  0A00               	xorlw	0	; case 0
  8994  006AE8  B4D8               	btfsc	status,2,c
  8995  006AEA  D7C3               	goto	l12265
  8996  006AEC  0A01               	xorlw	1	; case 1
  8997  006AEE  A4D8               	btfss	status,2,c
  8998  006AF0  0012               	return	
  8999  006AF2  D78B               	goto	l12239
  9000  006AF4                     __end_of_SetSegmentValueLearn:
  9001                           	callstack 0
  9002                           
  9003 ;; *************** function ___lldiv *****************
  9004 ;; Defined at:
  9005 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\__lldiv.c"
  9006 ;; Parameters:    Size  Location     Type
  9007 ;;  dividend        4   15[COMRAM] unsigned long 
  9008 ;;  divisor         4   19[COMRAM] unsigned long 
  9009 ;; Auto vars:     Size  Location     Type
  9010 ;;  quotient        4   23[COMRAM] unsigned long 
  9011 ;;  counter         1   27[COMRAM] unsigned char 
  9012 ;; Return value:  Size  Location     Type
  9013 ;;                  4   15[COMRAM] unsigned long 
  9014 ;; Registers used:
  9015 ;;		wreg, status,2, status,0
  9016 ;; Tracked objects:
  9017 ;;		On entry : 0/1
  9018 ;;		On exit  : 0/0
  9019 ;;		Unchanged: 0/0
  9020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9021 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9022 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9024 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9025 ;;Total ram usage:       13 bytes
  9026 ;; Hardware stack levels used: 1
  9027 ;; Hardware stack levels required when called: 4
  9028 ;; This function calls:
  9029 ;;		Nothing
  9030 ;; This function is called by:
  9031 ;;		_sm_execute_menuConfiguration
  9032 ;; This function uses a non-reentrant model
  9033 ;;
  9034                           
  9035                           	psect	text19
  9036  007A44                     __ptext19:
  9037                           	callstack 0
  9038  007A44                     ___lldiv:
  9039                           	callstack 24
  9040                           
  9041                           ; BSR set to: 0
  9042                           ;incstack = 0
  9043  007A44  0E00               	movlw	0
  9044  007A46  6E18               	movwf	___lldiv@quotient^0,c
  9045  007A48  0E00               	movlw	0
  9046  007A4A  6E19               	movwf	(___lldiv@quotient+1)^0,c
  9047  007A4C  0E00               	movlw	0
  9048  007A4E  6E1A               	movwf	(___lldiv@quotient+2)^0,c
  9049  007A50  0E00               	movlw	0
  9050  007A52  6E1B               	movwf	(___lldiv@quotient+3)^0,c
  9051  007A54  5014               	movf	___lldiv@divisor^0,w,c
  9052  007A56  1015               	iorwf	(___lldiv@divisor+1)^0,w,c
  9053  007A58  1016               	iorwf	(___lldiv@divisor+2)^0,w,c
  9054  007A5A  1017               	iorwf	(___lldiv@divisor+3)^0,w,c
  9055  007A5C  B4D8               	btfsc	status,2,c
  9056  007A5E  D02A               	goto	l3675
  9057  007A60  0E01               	movlw	1
  9058  007A62  6E1C               	movwf	___lldiv@counter^0,c
  9059  007A64  D006               	goto	l13857
  9060  007A66                     l13855:
  9061  007A66  90D8               	bcf	status,0,c
  9062  007A68  3614               	rlcf	___lldiv@divisor^0,f,c
  9063  007A6A  3615               	rlcf	(___lldiv@divisor+1)^0,f,c
  9064  007A6C  3616               	rlcf	(___lldiv@divisor+2)^0,f,c
  9065  007A6E  3617               	rlcf	(___lldiv@divisor+3)^0,f,c
  9066  007A70  2A1C               	incf	___lldiv@counter^0,f,c
  9067  007A72                     l13857:
  9068  007A72  AE17               	btfss	(___lldiv@divisor+3)^0,7,c
  9069  007A74  D7F8               	goto	l13855
  9070  007A76                     u13680:
  9071  007A76  90D8               	bcf	status,0,c
  9072  007A78  3618               	rlcf	___lldiv@quotient^0,f,c
  9073  007A7A  3619               	rlcf	(___lldiv@quotient+1)^0,f,c
  9074  007A7C  361A               	rlcf	(___lldiv@quotient+2)^0,f,c
  9075  007A7E  361B               	rlcf	(___lldiv@quotient+3)^0,f,c
  9076  007A80  5014               	movf	___lldiv@divisor^0,w,c
  9077  007A82  5C10               	subwf	___lldiv@dividend^0,w,c
  9078  007A84  5015               	movf	(___lldiv@divisor+1)^0,w,c
  9079  007A86  5811               	subwfb	(___lldiv@dividend+1)^0,w,c
  9080  007A88  5016               	movf	(___lldiv@divisor+2)^0,w,c
  9081  007A8A  5812               	subwfb	(___lldiv@dividend+2)^0,w,c
  9082  007A8C  5017               	movf	(___lldiv@divisor+3)^0,w,c
  9083  007A8E  5813               	subwfb	(___lldiv@dividend+3)^0,w,c
  9084  007A90  A0D8               	btfss	status,0,c
  9085  007A92  D009               	goto	l13867
  9086  007A94  5014               	movf	___lldiv@divisor^0,w,c
  9087  007A96  5E10               	subwf	___lldiv@dividend^0,f,c
  9088  007A98  5015               	movf	(___lldiv@divisor+1)^0,w,c
  9089  007A9A  5A11               	subwfb	(___lldiv@dividend+1)^0,f,c
  9090  007A9C  5016               	movf	(___lldiv@divisor+2)^0,w,c
  9091  007A9E  5A12               	subwfb	(___lldiv@dividend+2)^0,f,c
  9092  007AA0  5017               	movf	(___lldiv@divisor+3)^0,w,c
  9093  007AA2  5A13               	subwfb	(___lldiv@dividend+3)^0,f,c
  9094  007AA4  8018               	bsf	___lldiv@quotient^0,0,c
  9095  007AA6                     l13867:
  9096  007AA6  90D8               	bcf	status,0,c
  9097  007AA8  3217               	rrcf	(___lldiv@divisor+3)^0,f,c
  9098  007AAA  3216               	rrcf	(___lldiv@divisor+2)^0,f,c
  9099  007AAC  3215               	rrcf	(___lldiv@divisor+1)^0,f,c
  9100  007AAE  3214               	rrcf	___lldiv@divisor^0,f,c
  9101  007AB0  2E1C               	decfsz	___lldiv@counter^0,f,c
  9102  007AB2  D7E1               	goto	u13680
  9103  007AB4                     l3675:
  9104  007AB4  C018  F010         	movff	___lldiv@quotient,?___lldiv
  9105  007AB8  C019  F011         	movff	___lldiv@quotient+1,?___lldiv+1
  9106  007ABC  C01A  F012         	movff	___lldiv@quotient+2,?___lldiv+2
  9107  007AC0  C01B  F013         	movff	___lldiv@quotient+3,?___lldiv+3
  9108  007AC4  0012               	return		;funcret
  9109  007AC6                     __end_of___lldiv:
  9110                           	callstack 0
  9111                           
  9112 ;; *************** function _sm_execute_ControlGate *****************
  9113 ;; Defined at:
  9114 ;;		line 128 in file "sm_ControlGate_MC50.c"
  9115 ;; Parameters:    Size  Location     Type
  9116 ;;  psm             2   15[BANK0 ] PTR struct .
  9117 ;;		 -> controlGate_stateMachine(11), 
  9118 ;; Auto vars:     Size  Location     Type
  9119 ;;  typeOpenOrde    1   19[BANK0 ] enum E10372
  9120 ;; Return value:  Size  Location     Type
  9121 ;;                  1    wreg      void 
  9122 ;; Registers used:
  9123 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  9124 ;; Tracked objects:
  9125 ;;		On entry : 3F/0
  9126 ;;		On exit  : 0/0
  9127 ;;		Unchanged: 0/0
  9128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9129 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9130 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9131 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9132 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9133 ;;Total ram usage:        5 bytes
  9134 ;; Hardware stack levels used: 1
  9135 ;; Hardware stack levels required when called: 15
  9136 ;; This function calls:
  9137 ;;		_GetOpenOrder
  9138 ;;		_SetSegmentValueIntermitent
  9139 ;;		_WaitPreFlash
  9140 ;;		_actionZone_Closed
  9141 ;;		_actionZone_Closing
  9142 ;;		_actionZone_Opened
  9143 ;;		_actionZone_Opening
  9144 ;;		_sm_execute_ControlLearning
  9145 ;;		_sm_send_event
  9146 ;; This function is called by:
  9147 ;;		_main
  9148 ;; This function uses a non-reentrant model
  9149 ;;
  9150                           
  9151                           	psect	text20
  9152  00368C                     __ptext20:
  9153                           	callstack 0
  9154  00368C                     _sm_execute_ControlGate:
  9155                           	callstack 15
  9156                           
  9157                           ; BSR set to: 0
  9158                           ;sm_ControlGate_MC50.c: 129:     TypeCMD typeOpenOrder;;sm_ControlGate_MC50.c: 133:     
      +                          if ( (main_stateMachine.current_state == st_MenuConfiguration) && (menuConfiguration_sta
      +                          teMachine.current_state != st_LearningMode) )
  9159                           
  9160                           ;incstack = 0
  9161  00368C  0101               	movlb	1	; () banked
  9162  00368E  05ED               	decf	_main_stateMachine& (0+255),w,b
  9163  003690  11EE               	iorwf	(_main_stateMachine+1)& (0+255),w,b
  9164  003692  A4D8               	btfss	status,2,c
  9165  003694  D006               	goto	l23107
  9166                           
  9167                           ; BSR set to: 1
  9168  003696  0E06               	movlw	6
  9169  003698  0102               	movlb	2	; () banked
  9170  00369A  19BD               	xorwf	_menuConfiguration_stateMachine& (0+255),w,b
  9171  00369C  11BE               	iorwf	(_menuConfiguration_stateMachine+1)& (0+255),w,b
  9172  00369E  A4D8               	btfss	status,2,c
  9173  0036A0  0012               	return	
  9174  0036A2                     l23107:
  9175                           
  9176                           ;sm_ControlGate_MC50.c: 137:         if (var_sys.preflashingcontrol == YES){
  9177  0036A2  0101               	movlb	1	; () banked
  9178  0036A4  051D               	decf	(_var_sys+29)& (0+255),w,b	;volatile
  9179  0036A6  A4D8               	btfss	status,2,c
  9180  0036A8  D0CE               	goto	l23181
  9181                           
  9182                           ; BSR set to: 1
  9183                           ;sm_ControlGate_MC50.c: 139:         WaitPreFlash();
  9184  0036AA  EC82  F03F         	call	_WaitPreFlash	;wreg free
  9185  0036AE  D0CB               	goto	l23181
  9186  0036B0                     l23111:
  9187                           
  9188                           ; BSR set to: 0
  9189                           ;sm_ControlGate_MC50.c: 145:         {;sm_ControlGate_MC50.c: 148:             if (psm->
      +                          last_event == ev_GateClosed) {
  9190  0036B0  EE20 F004          	lfsr	2,4
  9191  0036B4  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9192  0036B6  26D9               	addwf	fsr2l,f,c
  9193  0036B8  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9194  0036BA  22DA               	addwfc	fsr2h,f,c
  9195  0036BC  0E0A               	movlw	10
  9196  0036BE  18DE               	xorwf	postinc2,w,c
  9197  0036C0  10DE               	iorwf	postinc2,w,c
  9198  0036C2  A4D8               	btfss	status,2,c
  9199  0036C4  D006               	goto	l23115
  9200  0036C6                     u28560:
  9201                           
  9202                           ; BSR set to: 0
  9203                           ;sm_ControlGate_MC50.c: 149:                 psm->current_state = st_Closed;
  9204  0036C6  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  9205  0036CA  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  9206  0036CE  0E01               	movlw	1
  9207  0036D0  D0B5               	goto	L55
  9208  0036D2                     l23115:
  9209                           
  9210                           ; BSR set to: 0
  9211  0036D2  EE20 F004          	lfsr	2,4
  9212  0036D6  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9213  0036D8  26D9               	addwf	fsr2l,f,c
  9214  0036DA  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9215  0036DC  22DA               	addwfc	fsr2h,f,c
  9216  0036DE  0E0B               	movlw	11
  9217  0036E0  18DE               	xorwf	postinc2,w,c
  9218  0036E2  10DE               	iorwf	postinc2,w,c
  9219  0036E4  A4D8               	btfss	status,2,c
  9220  0036E6  D0CF               	goto	l23183
  9221  0036E8  D038               	goto	u28630
  9222  0036EA                     l23119:
  9223                           
  9224                           ; BSR set to: 0
  9225                           ;sm_ControlGate_MC50.c: 160:         {;sm_ControlGate_MC50.c: 161:             if (psm->
      +                          last_event == ev_OpenGate) {
  9226  0036EA  EE20 F004          	lfsr	2,4
  9227  0036EE  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9228  0036F0  26D9               	addwf	fsr2l,f,c
  9229  0036F2  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9230  0036F4  22DA               	addwfc	fsr2h,f,c
  9231  0036F6  0E0C               	movlw	12
  9232  0036F8  18DE               	xorwf	postinc2,w,c
  9233  0036FA  10DE               	iorwf	postinc2,w,c
  9234  0036FC  A4D8               	btfss	status,2,c
  9235  0036FE  D072               	goto	l23167
  9236  003700                     u28580:
  9237                           
  9238                           ; BSR set to: 0
  9239                           ;sm_ControlGate_MC50.c: 162:                 psm->current_state = st_Opening;
  9240  003700  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  9241  003704  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  9242  003708  0E02               	movlw	2
  9243  00370A  D098               	goto	L55
  9244  00370C                     l23127:
  9245                           
  9246                           ; BSR set to: 0
  9247                           ;sm_ControlGate_MC50.c: 169:         {;sm_ControlGate_MC50.c: 170:             if (psm->
      +                          last_event == ev_StopGate) {
  9248  00370C  EE20 F004          	lfsr	2,4
  9249  003710  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9250  003712  26D9               	addwf	fsr2l,f,c
  9251  003714  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9252  003716  22DA               	addwfc	fsr2h,f,c
  9253  003718  0E0D               	movlw	13
  9254  00371A  18DE               	xorwf	postinc2,w,c
  9255  00371C  10DE               	iorwf	postinc2,w,c
  9256  00371E  B4D8               	btfsc	status,2,c
  9257  003720  D01C               	goto	u28630
  9258                           
  9259                           ; BSR set to: 0
  9260                           
  9261                           ;sm_ControlGate_MC50.c: 172:             } else if (psm->last_event == ev_CloseGate) {
  9262                           
  9263                           ; BSR set to: 0
  9264                           ;sm_ControlGate_MC50.c: 171:                 psm->current_state = st_Opened;
  9265  003722  EE20 F004          	lfsr	2,4
  9266  003726  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9267  003728  26D9               	addwf	fsr2l,f,c
  9268  00372A  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9269  00372C  22DA               	addwfc	fsr2h,f,c
  9270  00372E  0E0E               	movlw	14
  9271  003730  18DE               	xorwf	postinc2,w,c
  9272  003732  10DE               	iorwf	postinc2,w,c
  9273  003734  A4D8               	btfss	status,2,c
  9274  003736  D02D               	goto	L129
  9275  003738                     u28610:
  9276                           
  9277                           ; BSR set to: 0
  9278                           ;sm_ControlGate_MC50.c: 173:                 psm->current_state = st_Closing;
  9279  003738  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  9280  00373C  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  9281  003740  0E03               	movlw	3
  9282  003742  D07C               	goto	L55
  9283  003744                     l23139:
  9284                           
  9285                           ; BSR set to: 0
  9286                           ;sm_ControlGate_MC50.c: 180:         {;sm_ControlGate_MC50.c: 181:             if (psm->
      +                          last_event == ev_StopGate) {
  9287  003744  EE20 F004          	lfsr	2,4
  9288  003748  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9289  00374A  26D9               	addwf	fsr2l,f,c
  9290  00374C  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9291  00374E  22DA               	addwfc	fsr2h,f,c
  9292  003750  0E0D               	movlw	13
  9293  003752  18DE               	xorwf	postinc2,w,c
  9294  003754  10DE               	iorwf	postinc2,w,c
  9295  003756  A4D8               	btfss	status,2,c
  9296  003758  D006               	goto	l23143
  9297  00375A                     u28630:
  9298                           
  9299                           ; BSR set to: 0
  9300                           ;sm_ControlGate_MC50.c: 182:                 psm->current_state = st_Opened;
  9301  00375A  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  9302  00375E  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  9303  003762  0E04               	movlw	4
  9304  003764  D06B               	goto	L55
  9305  003766                     l23143:
  9306                           
  9307                           ; BSR set to: 0
  9308  003766  EE20 F004          	lfsr	2,4
  9309  00376A  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9310  00376C  26D9               	addwf	fsr2l,f,c
  9311  00376E  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9312  003770  22DA               	addwfc	fsr2h,f,c
  9313  003772  0E0F               	movlw	15
  9314  003774  18DE               	xorwf	postinc2,w,c
  9315  003776  10DE               	iorwf	postinc2,w,c
  9316  003778  B4D8               	btfsc	status,2,c
  9317  00377A  D7A5               	goto	u28560
  9318                           
  9319                           ; BSR set to: 0
  9320                           
  9321                           ;sm_ControlGate_MC50.c: 185:             } else if (psm->last_event == ev_OpenGate) {
  9322                           
  9323                           ; BSR set to: 0
  9324                           ;sm_ControlGate_MC50.c: 184:                 psm->current_state = st_Closed;
  9325  00377C  EE20 F004          	lfsr	2,4
  9326  003780  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9327  003782  26D9               	addwf	fsr2l,f,c
  9328  003784  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9329  003786  22DA               	addwfc	fsr2h,f,c
  9330  003788  0E0C               	movlw	12
  9331  00378A  18DE               	xorwf	postinc2,w,c
  9332  00378C  10DE               	iorwf	postinc2,w,c
  9333  00378E  B4D8               	btfsc	status,2,c
  9334  003790  D7B7               	goto	u28580
  9335  003792                     L129:
  9336                           
  9337                           ; BSR set to: 0
  9338                           
  9339                           ;sm_ControlGate_MC50.c: 187:             } else if (psm->last_event == ev_ErrorGate) {
  9340                           
  9341                           ; BSR set to: 0
  9342                           ;sm_ControlGate_MC50.c: 186:                 psm->current_state = st_Opening;
  9343  003792  EE20 F004          	lfsr	2,4
  9344  003796  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9345  003798  26D9               	addwf	fsr2l,f,c
  9346  00379A  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9347  00379C  22DA               	addwfc	fsr2h,f,c
  9348  00379E  0E10               	movlw	16
  9349  0037A0  D044               	goto	L126
  9350  0037A2                     l23155:
  9351                           
  9352                           ; BSR set to: 0
  9353                           ;sm_ControlGate_MC50.c: 193:         {;sm_ControlGate_MC50.c: 194:             if (psm->
      +                          last_event == ev_CloseGate) {
  9354  0037A2  EE20 F004          	lfsr	2,4
  9355  0037A6  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9356  0037A8  26D9               	addwf	fsr2l,f,c
  9357  0037AA  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9358  0037AC  22DA               	addwfc	fsr2h,f,c
  9359  0037AE  0E0E               	movlw	14
  9360  0037B0  18DE               	xorwf	postinc2,w,c
  9361  0037B2  10DE               	iorwf	postinc2,w,c
  9362  0037B4  B4D8               	btfsc	status,2,c
  9363  0037B6  D7C0               	goto	u28610
  9364                           
  9365                           ; BSR set to: 0
  9366                           
  9367                           ;sm_ControlGate_MC50.c: 196:             } else if (psm->last_event == ev_OpenGate) {
  9368                           
  9369                           ; BSR set to: 0
  9370                           ;sm_ControlGate_MC50.c: 195:                 psm->current_state = st_Closing;
  9371  0037B8  EE20 F004          	lfsr	2,4
  9372  0037BC  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9373  0037BE  26D9               	addwf	fsr2l,f,c
  9374  0037C0  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9375  0037C2  22DA               	addwfc	fsr2h,f,c
  9376  0037C4  0E0C               	movlw	12
  9377  0037C6  18DE               	xorwf	postinc2,w,c
  9378  0037C8  10DE               	iorwf	postinc2,w,c
  9379  0037CA  B4D8               	btfsc	status,2,c
  9380  0037CC  D799               	goto	u28580
  9381                           
  9382                           ; BSR set to: 0
  9383                           
  9384                           ;sm_ControlGate_MC50.c: 198:             } else if (psm->last_event == ev_ErrorGate) {
  9385                           
  9386                           ; BSR set to: 0
  9387                           ;sm_ControlGate_MC50.c: 197:                 psm->current_state = st_Opening;
  9388  0037CE  EE20 F004          	lfsr	2,4
  9389  0037D2  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9390  0037D4  26D9               	addwf	fsr2l,f,c
  9391  0037D6  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9392  0037D8  22DA               	addwfc	fsr2h,f,c
  9393  0037DA  0E10               	movlw	16
  9394  0037DC  18DE               	xorwf	postinc2,w,c
  9395  0037DE  10DE               	iorwf	postinc2,w,c
  9396  0037E0  B4D8               	btfsc	status,2,c
  9397  0037E2  D027               	goto	L127
  9398  0037E4                     l23167:
  9399                           
  9400                           ; BSR set to: 0
  9401  0037E4  EE20 F004          	lfsr	2,4
  9402  0037E8  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9403  0037EA  26D9               	addwf	fsr2l,f,c
  9404  0037EC  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9405  0037EE  22DA               	addwfc	fsr2h,f,c
  9406  0037F0  0E14               	movlw	20
  9407  0037F2  18DE               	xorwf	postinc2,w,c
  9408  0037F4  10DE               	iorwf	postinc2,w,c
  9409  0037F6  A4D8               	btfss	status,2,c
  9410  0037F8  D046               	goto	l23183
  9411                           
  9412                           ; BSR set to: 0
  9413                           ;sm_ControlGate_MC50.c: 205:                 psm->current_state = st_Learning;
  9414  0037FA  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  9415  0037FE  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  9416  003802  0E05               	movlw	5
  9417  003804  D01B               	goto	L55
  9418  003806                     l23171:
  9419                           
  9420                           ; BSR set to: 0
  9421                           ;sm_ControlGate_MC50.c: 217:         {;sm_ControlGate_MC50.c: 218:             if (psm->
      +                          last_event == ev_LearningComplete) {
  9422  003806  EE20 F004          	lfsr	2,4
  9423  00380A  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9424  00380C  26D9               	addwf	fsr2l,f,c
  9425  00380E  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9426  003810  22DA               	addwfc	fsr2h,f,c
  9427  003812  0E13               	movlw	19
  9428  003814  18DE               	xorwf	postinc2,w,c
  9429  003816  10DE               	iorwf	postinc2,w,c
  9430  003818  B4D8               	btfsc	status,2,c
  9431  00381A  D755               	goto	u28560
  9432                           
  9433                           ; BSR set to: 0
  9434                           
  9435                           ;sm_ControlGate_MC50.c: 220:             } else if (psm->last_event == ev_ErrorLearning)
      +                           {
  9436                           
  9437                           ; BSR set to: 0
  9438                           ;sm_ControlGate_MC50.c: 219:                 psm->current_state = st_Closed;
  9439  00381C  EE20 F004          	lfsr	2,4
  9440  003820  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9441  003822  26D9               	addwf	fsr2l,f,c
  9442  003824  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9443  003826  22DA               	addwfc	fsr2h,f,c
  9444  003828  0E12               	movlw	18
  9445  00382A                     L126:
  9446  00382A  18DE               	xorwf	postinc2,w,c
  9447  00382C  10DE               	iorwf	postinc2,w,c
  9448  00382E  A4D8               	btfss	status,2,c
  9449  003830  D02A               	goto	l23183
  9450  003832                     L127:
  9451                           
  9452                           ; BSR set to: 0
  9453                           ;sm_ControlGate_MC50.c: 221:                 psm->current_state = st_Idle;
  9454  003832  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  9455  003836  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  9456  00383A  0E00               	movlw	0
  9457  00383C                     L55:
  9458  00383C  6EDE               	movwf	postinc2,c
  9459  00383E  0E00               	movlw	0
  9460  003840  6EDD               	movwf	postdec2,c
  9461  003842  D021               	goto	l23183
  9462  003844                     l2648:
  9463                           
  9464                           ; BSR set to: 0
  9465  003844  D7FF               	goto	l2648
  9466  003846                     l23181:
  9467                           
  9468                           ; BSR set to: 1
  9469  003846  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  9470  00384A  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  9471  00384E  50DF               	movf	indf2,w,c
  9472  003850  0100               	movlb	0	; () banked
  9473  003852  6FE9               	movwf	??_sm_execute_ControlGate& (0+255),b
  9474  003854  6BEA               	clrf	(??_sm_execute_ControlGate+1)& (0+255),b
  9475                           
  9476                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9477                           ; Switch size 1, requested type "simple"
  9478                           ; Number of cases is 1, Range of values is 0 to 0
  9479                           ; switch strategies available:
  9480                           ; Name         Instructions Cycles
  9481                           ; simple_byte            4     3 (average)
  9482                           ;	Chosen strategy is simple_byte
  9483  003856  51EA               	movf	(??_sm_execute_ControlGate+1)& (0+255),w,b
  9484  003858  0A00               	xorlw	0	; case 0
  9485  00385A  A4D8               	btfss	status,2,c
  9486  00385C  D7F3               	goto	l2648
  9487                           
  9488                           ; BSR set to: 0
  9489                           ; Switch size 1, requested type "simple"
  9490                           ; Number of cases is 6, Range of values is 0 to 5
  9491                           ; switch strategies available:
  9492                           ; Name         Instructions Cycles
  9493                           ; simple_byte           19    10 (average)
  9494                           ;	Chosen strategy is simple_byte
  9495  00385E  51E9               	movf	??_sm_execute_ControlGate& (0+255),w,b
  9496  003860  0A00               	xorlw	0	; case 0
  9497  003862  B4D8               	btfsc	status,2,c
  9498  003864  D725               	goto	l23111
  9499  003866  0A01               	xorlw	1	; case 1
  9500  003868  B4D8               	btfsc	status,2,c
  9501  00386A  D73F               	goto	l23119
  9502  00386C  0A03               	xorlw	3	; case 2
  9503  00386E  B4D8               	btfsc	status,2,c
  9504  003870  D74D               	goto	l23127
  9505  003872  0A01               	xorlw	1	; case 3
  9506  003874  B4D8               	btfsc	status,2,c
  9507  003876  D766               	goto	l23139
  9508  003878  0A07               	xorlw	7	; case 4
  9509  00387A  B4D8               	btfsc	status,2,c
  9510  00387C  D792               	goto	l23155
  9511  00387E  0A01               	xorlw	1	; case 5
  9512  003880  B4D8               	btfsc	status,2,c
  9513  003882  D7C1               	goto	l23171
  9514  003884  D7DF               	goto	l2648
  9515  003886                     l23183:
  9516                           
  9517                           ; BSR set to: 0
  9518                           ;sm_ControlGate_MC50.c: 234:     sm_send_event(&controlGate_stateMachine, ev_NULL);
  9519  003886  0EE2               	movlw	low _controlGate_stateMachine
  9520  003888  6E12               	movwf	sm_send_event@psm^0,c
  9521  00388A  0E01               	movlw	high _controlGate_stateMachine
  9522  00388C  6E13               	movwf	(sm_send_event@psm+1)^0,c
  9523  00388E  0E00               	movlw	0
  9524  003890  6E15               	movwf	(sm_send_event@event+1)^0,c
  9525  003892  0E00               	movlw	0
  9526  003894  6E14               	movwf	sm_send_event@event^0,c
  9527  003896  EC25  F041         	call	_sm_send_event	;wreg free
  9528                           
  9529                           ;sm_ControlGate_MC50.c: 239:     switch ((sm_state_ControlGate_t) psm->current_state) {
  9530  00389A  D07D               	goto	l23247
  9531  00389C                     l23185:
  9532                           
  9533                           ; BSR set to: 0
  9534                           ;sm_ControlGate_MC50.c: 241:         {;sm_ControlGate_MC50.c: 244:             ts_system
      +                          .TimeStopADCZeroOffsetCalc = (5 * (1000/50));
  9535  00389C  0E00               	movlw	0
  9536  00389E  0101               	movlb	1	; () banked
  9537  0038A0  6FD9               	movwf	(_ts_system+63)& (0+255),b	;volatile
  9538  0038A2  0E64               	movlw	100
  9539  0038A4  6FD8               	movwf	(_ts_system+62)& (0+255),b	;volatile
  9540                           
  9541                           ;sm_ControlGate_MC50.c: 247:             var_sys.PositionIsLost = YES;
  9542  0038A6  0E01               	movlw	1
  9543  0038A8  6F48               	movwf	(_var_sys+72)& (0+255),b	;volatile
  9544                           
  9545                           ; BSR set to: 1
  9546                           ;sm_ControlGate_MC50.c: 248:             if (var_sys.WorkTimeMaxAlarmState == EmAlarme |
      +                          | var_sys.NumberOffErrors > 3)
  9547  0038AA  0E02               	movlw	2
  9548  0038AC  1942               	xorwf	(_var_sys+66)& (0+255),w,b	;volatile
  9549  0038AE  B4D8               	btfsc	status,2,c
  9550  0038B0  D003               	goto	u28740
  9551                           
  9552                           ; BSR set to: 1
  9553  0038B2  0E03               	movlw	3
  9554  0038B4  6543               	cpfsgt	(_var_sys+67)& (0+255),b	;volatile
  9555  0038B6  D027               	goto	l23207
  9556  0038B8                     u28740:
  9557                           
  9558                           ; BSR set to: 1
  9559                           ;sm_ControlGate_MC50.c: 249:             {;sm_ControlGate_MC50.c: 252:                 t
      +                          ypeOpenOrder = GetOpenOrder();
  9560  0038B8  ECC8  F028         	call	_GetOpenOrder	;wreg free
  9561  0038BC  0100               	movlb	0	; () banked
  9562  0038BE  6FEB               	movwf	sm_execute_ControlGate@typeOpenOrder& (0+255),b
  9563                           
  9564                           ; BSR set to: 0
  9565                           ;sm_ControlGate_MC50.c: 253:                 SetSegmentValueIntermitent(dE,dr, (1000/50)
      +                          );
  9566  0038C0  0E14               	movlw	20
  9567  0038C2  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
  9568  0038C4  0E00               	movlw	0
  9569  0038C6  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
  9570  0038C8  0E14               	movlw	20
  9571  0038CA  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
  9572  0038CC  0E0E               	movlw	14
  9573  0038CE  EC9D  F045         	call	_SetSegmentValueIntermitent
  9574                           
  9575                           ; BSR set to: 1
  9576                           ;sm_ControlGate_MC50.c: 254:                 ts_system.timeSinalizationDigit = ( 500/50)
      +                          ;
  9577  0038D2  0E00               	movlw	0
  9578  0038D4  6FA7               	movwf	(_ts_system+13)& (0+255),b	;volatile
  9579  0038D6  0E0A               	movlw	10
  9580  0038D8  6FA6               	movwf	(_ts_system+12)& (0+255),b	;volatile
  9581                           
  9582                           ; BSR set to: 1
  9583                           ;sm_ControlGate_MC50.c: 255:                 if ((typeOpenOrder != NoCMD) ||(button_stru
      +                          ct.current==0 || button_struct.current==0x00 ||button_struct.current==0x17 ))
  9584  0038DA  0100               	movlb	0	; () banked
  9585  0038DC  51EB               	movf	sm_execute_ControlGate@typeOpenOrder& (0+255),w,b
  9586  0038DE  A4D8               	btfss	status,2,c
  9587  0038E0  D00A               	goto	u28780
  9588                           
  9589                           ; BSR set to: 0
  9590  0038E2  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  9591  0038E4  B4D8               	btfsc	status,2,c
  9592  0038E6  D007               	goto	u28780
  9593                           
  9594                           ; BSR set to: 0
  9595  0038E8  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  9596  0038EA  B4D8               	btfsc	status,2,c
  9597  0038EC  D004               	goto	u28780
  9598                           
  9599                           ; BSR set to: 0
  9600  0038EE  0E17               	movlw	23
  9601  0038F0  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  9602  0038F2  A4D8               	btfss	status,2,c
  9603  0038F4  0012               	return	
  9604  0038F6                     u28780:
  9605                           
  9606                           ; BSR set to: 0
  9607                           ;sm_ControlGate_MC50.c: 256:                 {;sm_ControlGate_MC50.c: 257:              
      +                                 var_sys.WorkTimeMaxAlarmState = Clear;
  9608  0038F6  0E00               	movlw	0
  9609  0038F8  0101               	movlb	1	; () banked
  9610  0038FA  6F42               	movwf	(_var_sys+66)& (0+255),b	;volatile
  9611                           
  9612                           ;sm_ControlGate_MC50.c: 258:                     var_sys.NumberOffErrors = 0;
  9613  0038FC  0E00               	movlw	0
  9614  0038FE  6F43               	movwf	(_var_sys+67)& (0+255),b	;volatile
  9615                           
  9616                           ;sm_ControlGate_MC50.c: 259:                     button_struct.processed=1;
  9617  003900  0E01               	movlw	1
  9618  003902  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  9619  003904  0012               	return	
  9620  003906                     l23207:
  9621                           
  9622                           ; BSR set to: 1
  9623                           ;sm_ControlGate_MC50.c: 264:             {;sm_ControlGate_MC50.c: 267:                  
      +                             var_sys.Statedoorcontrol = st_Closed;
  9624  003906  0E01               	movlw	1
  9625  003908  6F1C               	movwf	(_var_sys+28)& (0+255),b	;volatile
  9626                           
  9627                           ; BSR set to: 1
  9628                           ;sm_ControlGate_MC50.c: 268:                     var_sys.actualCounterMoves++;
  9629  00390A  0E01               	movlw	1
  9630  00390C  273C               	addwf	(_var_sys+60)& (0+255),f,b	;volatile
  9631  00390E  0E00               	movlw	0
  9632  003910  233D               	addwfc	(_var_sys+61)& (0+255),f,b	;volatile
  9633  003912  233E               	addwfc	(_var_sys+62)& (0+255),f,b	;volatile
  9634  003914  233F               	addwfc	(_var_sys+63)& (0+255),f,b	;volatile
  9635                           
  9636                           ; BSR set to: 1
  9637                           ;sm_ControlGate_MC50.c: 269:                     var_sys.Timewalkisactived = 0;
  9638  003916  0E00               	movlw	0
  9639  003918  6F4A               	movwf	(_var_sys+74)& (0+255),b	;volatile
  9640                           
  9641                           ; BSR set to: 1
  9642                           ;sm_ControlGate_MC50.c: 270:                     var_sys.PositionActual = 0;
  9643  00391A  0E00               	movlw	0
  9644  00391C  6F1E               	movwf	(_var_sys+30)& (0+255),b	;volatile
  9645  00391E  0E00               	movlw	0
  9646  003920  6F1F               	movwf	(_var_sys+31)& (0+255),b	;volatile
  9647  003922  0E00               	movlw	0
  9648  003924  6F20               	movwf	(_var_sys+32)& (0+255),b	;volatile
  9649  003926  0E00               	movlw	0
  9650  003928  6F21               	movwf	(_var_sys+33)& (0+255),b	;volatile
  9651                           
  9652                           ; BSR set to: 1
  9653                           ;sm_ControlGate_MC50.c: 272:                     var_sys.PositionIsLost = NO;
  9654  00392A  0E00               	movlw	0
  9655  00392C  6F48               	movwf	(_var_sys+72)& (0+255),b	;volatile
  9656                           
  9657                           ; BSR set to: 1
  9658                           ;sm_ControlGate_MC50.c: 273:                     var_sys.NumberOffErrors = 0;
  9659  00392E  0E00               	movlw	0
  9660  003930  6F43               	movwf	(_var_sys+67)& (0+255),b	;volatile
  9661                           
  9662                           ; BSR set to: 1
  9663                           ;sm_ControlGate_MC50.c: 274:                     var_sys.StateMotor = Stopped;
  9664  003932  0E00               	movlw	0
  9665  003934  6F00               	movwf	_var_sys& (0+255),b	;volatile
  9666                           
  9667                           ; BSR set to: 1
  9668                           ;sm_ControlGate_MC50.c: 276:                     ts_system.timeSinalizationDigit = (1000
      +                          /50) * 2;
  9669  003936  0E00               	movlw	0
  9670  003938  6FA7               	movwf	(_ts_system+13)& (0+255),b	;volatile
  9671  00393A  0E28               	movlw	40
  9672  00393C  6FA6               	movwf	(_ts_system+12)& (0+255),b	;volatile
  9673                           
  9674                           ; BSR set to: 1
  9675                           ;sm_ControlGate_MC50.c: 277:                     SetSegmentValueIntermitent(dF, dC, ( 20
      +                          0/50));
  9676  00393E  0E0C               	movlw	12
  9677  003940  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
  9678  003942  0E00               	movlw	0
  9679  003944  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
  9680  003946  0E04               	movlw	4
  9681  003948  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
  9682  00394A  0E0F               	movlw	15
  9683  00394C  EC9D  F045         	call	_SetSegmentValueIntermitent
  9684                           
  9685                           ; BSR set to: 1
  9686                           ;sm_ControlGate_MC50.c: 278:                     sm_send_event(&controlGate_stateMachine
      +                          , ev_GateClosed);
  9687  003950  0EE2               	movlw	low _controlGate_stateMachine
  9688  003952  6E12               	movwf	sm_send_event@psm^0,c
  9689  003954  0E01               	movlw	high _controlGate_stateMachine
  9690  003956  6E13               	movwf	(sm_send_event@psm+1)^0,c
  9691  003958  0E00               	movlw	0
  9692  00395A  6E15               	movwf	(sm_send_event@event+1)^0,c
  9693  00395C  0E0A               	movlw	10
  9694  00395E  6E14               	movwf	sm_send_event@event^0,c
  9695  003960  EC25  F041         	call	_sm_send_event	;wreg free
  9696  003964  0012               	return	
  9697  003966                     l23227:
  9698                           
  9699                           ; BSR set to: 0
  9700                           ;sm_ControlGate_MC50.c: 285:         {;sm_ControlGate_MC50.c: 287:             actionZon
      +                          e_Closed();
  9701  003966  EC1F  F039         	call	_actionZone_Closed	;wreg free
  9702                           
  9703                           ;sm_ControlGate_MC50.c: 288:         };sm_ControlGate_MC50.c: 289:             break;
  9704  00396A  0012               	return	
  9705  00396C                     l23229:
  9706                           
  9707                           ; BSR set to: 0
  9708                           ;sm_ControlGate_MC50.c: 291:         {;sm_ControlGate_MC50.c: 293:             actionZon
      +                          e_Opening();
  9709  00396C  EC79  F022         	call	_actionZone_Opening	;wreg free
  9710  003970                     l23231:
  9711                           
  9712                           ;sm_ControlGate_MC50.c: 295:             ts_system.TimeStopADCZeroOffsetCalc = (5 * (100
      +                          0/50));
  9713  003970  0E00               	movlw	0
  9714  003972  0101               	movlb	1	; () banked
  9715  003974  6FD9               	movwf	(_ts_system+63)& (0+255),b	;volatile
  9716  003976  0E64               	movlw	100
  9717  003978  6FD8               	movwf	(_ts_system+62)& (0+255),b	;volatile
  9718                           
  9719                           ;sm_ControlGate_MC50.c: 296:         };sm_ControlGate_MC50.c: 297:             break;
  9720  00397A  0012               	return	
  9721  00397C                     l23233:
  9722                           
  9723                           ; BSR set to: 0
  9724                           ;sm_ControlGate_MC50.c: 299:         {;sm_ControlGate_MC50.c: 301:             actionZon
      +                          e_Opened();
  9725  00397C  ECE8  F026         	call	_actionZone_Opened	;wreg free
  9726  003980  D7F7               	goto	l23231
  9727  003982                     l23237:
  9728                           
  9729                           ; BSR set to: 0
  9730                           ;sm_ControlGate_MC50.c: 307:         {;sm_ControlGate_MC50.c: 309:             actionZon
      +                          e_Closing();
  9731  003982  ECF8  F01F         	call	_actionZone_Closing	;wreg free
  9732  003986  D7F4               	goto	l23231
  9733  003988                     l23241:
  9734                           
  9735                           ; BSR set to: 0
  9736                           ;sm_ControlGate_MC50.c: 315:         {;sm_ControlGate_MC50.c: 316:             sm_execut
      +                          e_ControlLearning(&controlLearning_stateMachine);
  9737  003988  0EB2               	movlw	low _controlLearning_stateMachine
  9738  00398A  6FDC               	movwf	sm_execute_ControlLearning@psm& (0+255),b
  9739  00398C  0E02               	movlw	high _controlLearning_stateMachine
  9740  00398E  6FDD               	movwf	(sm_execute_ControlLearning@psm+1)& (0+255),b
  9741  003990  EC43  F00C         	call	_sm_execute_ControlLearning	;wreg free
  9742  003994  D7ED               	goto	l23231
  9743  003996                     l23247:
  9744  003996  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  9745  00399A  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  9746  00399E  50DF               	movf	indf2,w,c
  9747  0039A0  0100               	movlb	0	; () banked
  9748  0039A2  6FE9               	movwf	??_sm_execute_ControlGate& (0+255),b
  9749  0039A4  6BEA               	clrf	(??_sm_execute_ControlGate+1)& (0+255),b
  9750                           
  9751                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9752                           ; Switch size 1, requested type "simple"
  9753                           ; Number of cases is 1, Range of values is 0 to 0
  9754                           ; switch strategies available:
  9755                           ; Name         Instructions Cycles
  9756                           ; simple_byte            4     3 (average)
  9757                           ;	Chosen strategy is simple_byte
  9758  0039A6  51EA               	movf	(??_sm_execute_ControlGate+1)& (0+255),w,b
  9759  0039A8  0A00               	xorlw	0	; case 0
  9760  0039AA  A4D8               	btfss	status,2,c
  9761  0039AC  0012               	return	
  9762                           
  9763                           ; BSR set to: 0
  9764                           ; Switch size 1, requested type "simple"
  9765                           ; Number of cases is 6, Range of values is 0 to 5
  9766                           ; switch strategies available:
  9767                           ; Name         Instructions Cycles
  9768                           ; simple_byte           19    10 (average)
  9769                           ;	Chosen strategy is simple_byte
  9770  0039AE  51E9               	movf	??_sm_execute_ControlGate& (0+255),w,b
  9771  0039B0  0A00               	xorlw	0	; case 0
  9772  0039B2  B4D8               	btfsc	status,2,c
  9773  0039B4  D773               	goto	l23185
  9774  0039B6  0A01               	xorlw	1	; case 1
  9775  0039B8  B4D8               	btfsc	status,2,c
  9776  0039BA  D7D5               	goto	l23227
  9777  0039BC  0A03               	xorlw	3	; case 2
  9778  0039BE  B4D8               	btfsc	status,2,c
  9779  0039C0  D7D5               	goto	l23229
  9780  0039C2  0A01               	xorlw	1	; case 3
  9781  0039C4  B4D8               	btfsc	status,2,c
  9782  0039C6  D7DD               	goto	l23237
  9783  0039C8  0A07               	xorlw	7	; case 4
  9784  0039CA  B4D8               	btfsc	status,2,c
  9785  0039CC  D7D7               	goto	l23233
  9786  0039CE  0A01               	xorlw	1	; case 5
  9787  0039D0  A4D8               	btfss	status,2,c
  9788  0039D2  0012               	return	
  9789  0039D4  D7D9               	goto	l23241
  9790  0039D6                     __end_of_sm_execute_ControlGate:
  9791                           	callstack 0
  9792                           
  9793 ;; *************** function _sm_execute_ControlLearning *****************
  9794 ;; Defined at:
  9795 ;;		line 29 in file "sm_ControlLearning_MC50.c"
  9796 ;; Parameters:    Size  Location     Type
  9797 ;;  psm             2    4[BANK0 ] PTR struct .
  9798 ;;		 -> controlLearning_stateMachine(11), 
  9799 ;; Auto vars:     Size  Location     Type
  9800 ;;  typeOpenOrde    1   57[COMRAM] enum E10372
  9801 ;; Return value:  Size  Location     Type
  9802 ;;                  1    wreg      void 
  9803 ;; Registers used:
  9804 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  9805 ;; Tracked objects:
  9806 ;;		On entry : 3F/0
  9807 ;;		On exit  : 0/0
  9808 ;;		Unchanged: 0/0
  9809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9810 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9811 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9812 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9813 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9814 ;;Total ram usage:        5 bytes
  9815 ;; Hardware stack levels used: 1
  9816 ;; Hardware stack levels required when called: 14
  9817 ;; This function calls:
  9818 ;;		_GetOpenOrder
  9819 ;;		_SaveNVM_VarSystem
  9820 ;;		_calculateMean
  9821 ;;		_clearLearningValue
  9822 ;;		_generateErrorLearnig
  9823 ;;		_sm_send_event
  9824 ;; This function is called by:
  9825 ;;		_sm_execute_ControlGate
  9826 ;; This function uses a non-reentrant model
  9827 ;;
  9828                           
  9829                           	psect	text21
  9830  001886                     __ptext21:
  9831                           	callstack 0
  9832  001886                     _sm_execute_ControlLearning:
  9833                           	callstack 15
  9834                           
  9835                           ; BSR set to: 0
  9836                           ;sm_ControlLearning_MC50.c: 31:    TypeCMD typeOpenOrder = GetOpenOrder();
  9837                           
  9838                           ;incstack = 0
  9839  001886  ECC8  F028         	call	_GetOpenOrder	;wreg free
  9840  00188A  6E3A               	movwf	sm_execute_ControlLearning@typeOpenOrder^0,c
  9841                           
  9842                           ;sm_ControlLearning_MC50.c: 33:     switch((sm_state_ControlLearning_t) psm->current_sta
      +                          te)
  9843  00188C  D0B8               	goto	l21907
  9844  00188E                     l21833:
  9845                           
  9846                           ; BSR set to: 0
  9847                           ;sm_ControlLearning_MC50.c: 36:         {;sm_ControlLearning_MC50.c: 37:              if
      +                          ((psm->last_event==ev_GateClosed)&&(var_sys_NVM.decelarationSensivity != 0)&& (var_sys.p
      +                          rograminAutomatic == 0))
  9848  00188E  EE20 F004          	lfsr	2,4
  9849  001892  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9850  001894  26D9               	addwf	fsr2l,f,c
  9851  001896  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9852  001898  22DA               	addwfc	fsr2h,f,c
  9853  00189A  0E0A               	movlw	10
  9854  00189C  18DE               	xorwf	postinc2,w,c
  9855  00189E  10DE               	iorwf	postinc2,w,c
  9856  0018A0  A4D8               	btfss	status,2,c
  9857  0018A2  D00D               	goto	l21841
  9858                           
  9859                           ; BSR set to: 0
  9860  0018A4  51A7               	movf	(_var_sys_NVM+15)& (0+255),w,b	;volatile
  9861  0018A6  B4D8               	btfsc	status,2,c
  9862  0018A8  D00A               	goto	l21841
  9863                           
  9864                           ; BSR set to: 0
  9865  0018AA  0101               	movlb	1	; () banked
  9866  0018AC  512A               	movf	(_var_sys+42)& (0+255),w,b	;volatile
  9867  0018AE  A4D8               	btfss	status,2,c
  9868  0018B0  D006               	goto	l21841
  9869  0018B2                     u25880:
  9870                           
  9871                           ; BSR set to: 1
  9872                           ;sm_ControlLearning_MC50.c: 38:             {;sm_ControlLearning_MC50.c: 39:            
      +                               psm->current_state = st_WaitLearnigOpen;
  9873  0018B2  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
  9874  0018B6  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
  9875  0018BA  0E02               	movlw	2
  9876  0018BC  D08A               	goto	L66
  9877  0018BE                     l21841:
  9878  0018BE  0100               	movlb	0	; () banked
  9879  0018C0  EE20 F004          	lfsr	2,4
  9880  0018C4  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9881  0018C6  26D9               	addwf	fsr2l,f,c
  9882  0018C8  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9883  0018CA  22DA               	addwfc	fsr2h,f,c
  9884  0018CC  0E0A               	movlw	10
  9885  0018CE  18DE               	xorwf	postinc2,w,c
  9886  0018D0  10DE               	iorwf	postinc2,w,c
  9887  0018D2  A4D8               	btfss	status,2,c
  9888  0018D4  D00D               	goto	l21849
  9889                           
  9890                           ; BSR set to: 0
  9891  0018D6  51A7               	movf	(_var_sys_NVM+15)& (0+255),w,b	;volatile
  9892  0018D8  B4D8               	btfsc	status,2,c
  9893  0018DA  D004               	goto	u25910
  9894                           
  9895                           ; BSR set to: 0
  9896  0018DC  0101               	movlb	1	; () banked
  9897  0018DE  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
  9898  0018E0  A4D8               	btfss	status,2,c
  9899  0018E2  D006               	goto	l21849
  9900  0018E4                     u25910:
  9901                           
  9902                           ;sm_ControlLearning_MC50.c: 43:             {;sm_ControlLearning_MC50.c: 44:            
      +                               psm->current_state = st_WaitForOpened;
  9903  0018E4  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
  9904  0018E8  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
  9905  0018EC  0E04               	movlw	4
  9906  0018EE  D071               	goto	L66
  9907  0018F0                     l21849:
  9908  0018F0  0100               	movlb	0	; () banked
  9909  0018F2  EE20 F004          	lfsr	2,4
  9910  0018F6  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9911  0018F8  26D9               	addwf	fsr2l,f,c
  9912  0018FA  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9913  0018FC  22DA               	addwfc	fsr2h,f,c
  9914  0018FE  0E0B               	movlw	11
  9915  001900  18DE               	xorwf	postinc2,w,c
  9916  001902  10DE               	iorwf	postinc2,w,c
  9917  001904  A4D8               	btfss	status,2,c
  9918  001906  D09B               	goto	l21909
  9919                           
  9920                           ; BSR set to: 0
  9921                           ;sm_ControlLearning_MC50.c: 47:             {;sm_ControlLearning_MC50.c: 48:            
      +                               psm->current_state = st_WaitForClosed;
  9922  001908  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
  9923  00190C  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
  9924  001910  0E01               	movlw	1
  9925  001912  D05F               	goto	L66
  9926  001914                     l21853:
  9927                           
  9928                           ; BSR set to: 0
  9929                           ;sm_ControlLearning_MC50.c: 53:         {;sm_ControlLearning_MC50.c: 54:             if(
      +                          (psm->last_event==ev_GateClosed)&&(var_sys_NVM.decelarationSensivity != 0) && (var_sys.p
      +                          rograminAutomatic == 0))
  9930  001914  EE20 F004          	lfsr	2,4
  9931  001918  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9932  00191A  26D9               	addwf	fsr2l,f,c
  9933  00191C  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9934  00191E  22DA               	addwfc	fsr2h,f,c
  9935  001920  0E0A               	movlw	10
  9936  001922  18DE               	xorwf	postinc2,w,c
  9937  001924  10DE               	iorwf	postinc2,w,c
  9938  001926  A4D8               	btfss	status,2,c
  9939  001928  D007               	goto	l21861
  9940                           
  9941                           ; BSR set to: 0
  9942  00192A  51A7               	movf	(_var_sys_NVM+15)& (0+255),w,b	;volatile
  9943  00192C  B4D8               	btfsc	status,2,c
  9944  00192E  D004               	goto	l21861
  9945                           
  9946                           ; BSR set to: 0
  9947  001930  0101               	movlb	1	; () banked
  9948  001932  512A               	movf	(_var_sys+42)& (0+255),w,b	;volatile
  9949  001934  B4D8               	btfsc	status,2,c
  9950  001936  D7BD               	goto	u25880
  9951  001938                     l21861:
  9952  001938  0100               	movlb	0	; () banked
  9953  00193A  EE20 F004          	lfsr	2,4
  9954  00193E  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9955  001940  26D9               	addwf	fsr2l,f,c
  9956  001942  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9957  001944  22DA               	addwfc	fsr2h,f,c
  9958  001946  0E0A               	movlw	10
  9959  001948  18DE               	xorwf	postinc2,w,c
  9960  00194A  10DE               	iorwf	postinc2,w,c
  9961  00194C  A4D8               	btfss	status,2,c
  9962  00194E  D007               	goto	l21869
  9963                           
  9964                           ; BSR set to: 0
  9965  001950  51A7               	movf	(_var_sys_NVM+15)& (0+255),w,b	;volatile
  9966  001952  B4D8               	btfsc	status,2,c
  9967  001954  D7C7               	goto	u25910
  9968                           
  9969                           ; BSR set to: 0
  9970  001956  0101               	movlb	1	; () banked
  9971  001958  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
  9972  00195A  B4D8               	btfsc	status,2,c
  9973  00195C  D7C3               	goto	u25910
  9974  00195E                     l21869:
  9975  00195E  0100               	movlb	0	; () banked
  9976  001960                     L68:
  9977  001960  EE20 F004          	lfsr	2,4
  9978  001964  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9979  001966  26D9               	addwf	fsr2l,f,c
  9980  001968  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9981  00196A  22DA               	addwfc	fsr2h,f,c
  9982  00196C  0E10               	movlw	16
  9983  00196E  18DE               	xorwf	postinc2,w,c
  9984  001970  10DE               	iorwf	postinc2,w,c
  9985  001972  A4D8               	btfss	status,2,c
  9986  001974  D064               	goto	l21909
  9987  001976  D03C               	goto	L128
  9988  001978                     l21873:
  9989                           
  9990                           ; BSR set to: 0
  9991                           ;sm_ControlLearning_MC50.c: 70:         {;sm_ControlLearning_MC50.c: 71:             if(
      +                          psm->last_event==ev_GateOpened)
  9992  001978  EE20 F004          	lfsr	2,4
  9993  00197C  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9994  00197E  26D9               	addwf	fsr2l,f,c
  9995  001980  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9996  001982  22DA               	addwfc	fsr2h,f,c
  9997  001984  0E0B               	movlw	11
  9998  001986  18DE               	xorwf	postinc2,w,c
  9999  001988  10DE               	iorwf	postinc2,w,c
 10000  00198A  A4D8               	btfss	status,2,c
 10001  00198C  D7E9               	goto	L68
 10002                           
 10003                           ; BSR set to: 0
 10004                           ;sm_ControlLearning_MC50.c: 72:             {;sm_ControlLearning_MC50.c: 73:            
      +                               psm->current_state = st_WaitLearnigClose;
 10005  00198E  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
 10006  001992  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
 10007  001996  0E03               	movlw	3
 10008  001998  D01C               	goto	L66
 10009  00199A                     l21881:
 10010                           
 10011                           ; BSR set to: 0
 10012                           ;sm_ControlLearning_MC50.c: 82:         {;sm_ControlLearning_MC50.c: 83:             if(
      +                          psm->last_event==ev_GateClosed)
 10013  00199A  EE20 F004          	lfsr	2,4
 10014  00199E  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
 10015  0019A0  26D9               	addwf	fsr2l,f,c
 10016  0019A2  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
 10017  0019A4  22DA               	addwfc	fsr2h,f,c
 10018  0019A6  0E0A               	movlw	10
 10019  0019A8  18DE               	xorwf	postinc2,w,c
 10020  0019AA  10DE               	iorwf	postinc2,w,c
 10021  0019AC  A4D8               	btfss	status,2,c
 10022  0019AE  D7D8               	goto	L68
 10023  0019B0  D799               	goto	u25910
 10024  0019B2                     l21889:
 10025                           
 10026                           ; BSR set to: 0
 10027                           ;sm_ControlLearning_MC50.c: 94:         {;sm_ControlLearning_MC50.c: 95:             if(
      +                          psm->last_event==ev_GateOpened)
 10028  0019B2  EE20 F004          	lfsr	2,4
 10029  0019B6  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
 10030  0019B8  26D9               	addwf	fsr2l,f,c
 10031  0019BA  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
 10032  0019BC  22DA               	addwfc	fsr2h,f,c
 10033  0019BE  0E0B               	movlw	11
 10034  0019C0  18DE               	xorwf	postinc2,w,c
 10035  0019C2  10DE               	iorwf	postinc2,w,c
 10036  0019C4  A4D8               	btfss	status,2,c
 10037  0019C6  D7CC               	goto	L68
 10038                           
 10039                           ; BSR set to: 0
 10040                           ;sm_ControlLearning_MC50.c: 96:             {;sm_ControlLearning_MC50.c: 97:            
      +                               psm->current_state = st_WaitForEndLearn;
 10041  0019C8  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
 10042  0019CC  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
 10043  0019D0  0E05               	movlw	5
 10044  0019D2                     L66:
 10045  0019D2  6EDE               	movwf	postinc2,c
 10046  0019D4  0E00               	movlw	0
 10047  0019D6  6EDD               	movwf	postdec2,c
 10048  0019D8  D032               	goto	l21909
 10049  0019DA                     l21897:
 10050                           
 10051                           ; BSR set to: 0
 10052                           ;sm_ControlLearning_MC50.c: 106:         {;sm_ControlLearning_MC50.c: 107:             i
      +                          f(psm->last_event==ev_GateClosed)
 10053  0019DA  EE20 F004          	lfsr	2,4
 10054  0019DE  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
 10055  0019E0  26D9               	addwf	fsr2l,f,c
 10056  0019E2  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
 10057  0019E4  22DA               	addwfc	fsr2h,f,c
 10058  0019E6  0E0A               	movlw	10
 10059  0019E8  18DE               	xorwf	postinc2,w,c
 10060  0019EA  10DE               	iorwf	postinc2,w,c
 10061  0019EC  A4D8               	btfss	status,2,c
 10062  0019EE  D7B8               	goto	L68
 10063  0019F0                     L128:
 10064                           
 10065                           ; BSR set to: 0
 10066                           ;sm_ControlLearning_MC50.c: 112:             {;sm_ControlLearning_MC50.c: 113:          
      +                                 psm->current_state = st_InitLearning;
 10067  0019F0  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
 10068  0019F4  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
 10069  0019F8  0E00               	movlw	0
 10070  0019FA  D7EB               	goto	L66
 10071  0019FC                     l2907:
 10072                           
 10073                           ; BSR set to: 0
 10074  0019FC  D7FF               	goto	l2907
 10075  0019FE                     l21907:
 10076  0019FE  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
 10077  001A02  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
 10078  001A06  50DF               	movf	indf2,w,c
 10079  001A08  0100               	movlb	0	; () banked
 10080  001A0A  6FDE               	movwf	??_sm_execute_ControlLearning& (0+255),b
 10081  001A0C  6BDF               	clrf	(??_sm_execute_ControlLearning+1)& (0+255),b
 10082                           
 10083                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10084                           ; Switch size 1, requested type "simple"
 10085                           ; Number of cases is 1, Range of values is 0 to 0
 10086                           ; switch strategies available:
 10087                           ; Name         Instructions Cycles
 10088                           ; simple_byte            4     3 (average)
 10089                           ;	Chosen strategy is simple_byte
 10090  001A0E  51DF               	movf	(??_sm_execute_ControlLearning+1)& (0+255),w,b
 10091  001A10  0A00               	xorlw	0	; case 0
 10092  001A12  A4D8               	btfss	status,2,c
 10093  001A14  D7F3               	goto	l2907
 10094                           
 10095                           ; BSR set to: 0
 10096                           ; Switch size 1, requested type "simple"
 10097                           ; Number of cases is 6, Range of values is 0 to 5
 10098                           ; switch strategies available:
 10099                           ; Name         Instructions Cycles
 10100                           ; simple_byte           19    10 (average)
 10101                           ;	Chosen strategy is simple_byte
 10102  001A16  51DE               	movf	??_sm_execute_ControlLearning& (0+255),w,b
 10103  001A18  0A00               	xorlw	0	; case 0
 10104  001A1A  B4D8               	btfsc	status,2,c
 10105  001A1C  D738               	goto	l21833
 10106  001A1E  0A01               	xorlw	1	; case 1
 10107  001A20  B4D8               	btfsc	status,2,c
 10108  001A22  D778               	goto	l21853
 10109  001A24  0A03               	xorlw	3	; case 2
 10110  001A26  B4D8               	btfsc	status,2,c
 10111  001A28  D7A7               	goto	l21873
 10112  001A2A  0A01               	xorlw	1	; case 3
 10113  001A2C  B4D8               	btfsc	status,2,c
 10114  001A2E  D7B5               	goto	l21881
 10115  001A30  0A07               	xorlw	7	; case 4
 10116  001A32  B4D8               	btfsc	status,2,c
 10117  001A34  D7BE               	goto	l21889
 10118  001A36  0A01               	xorlw	1	; case 5
 10119  001A38  B4D8               	btfsc	status,2,c
 10120  001A3A  D7CF               	goto	l21897
 10121  001A3C  D7DF               	goto	l2907
 10122  001A3E                     l21909:
 10123                           
 10124                           ;sm_ControlLearning_MC50.c: 126:     sm_send_event(&controlLearning_stateMachine, ev_NUL
      +                          L);
 10125  001A3E  0EB2               	movlw	low _controlLearning_stateMachine
 10126  001A40  6E12               	movwf	sm_send_event@psm^0,c
 10127  001A42  0E02               	movlw	high _controlLearning_stateMachine
 10128  001A44  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10129  001A46  0E00               	movlw	0
 10130  001A48  6E15               	movwf	(sm_send_event@event+1)^0,c
 10131  001A4A  0E00               	movlw	0
 10132  001A4C  6E14               	movwf	sm_send_event@event^0,c
 10133  001A4E  EC25  F041         	call	_sm_send_event	;wreg free
 10134                           
 10135                           ;sm_ControlLearning_MC50.c: 131:     switch((sm_state_ControlGate_t) psm->current_state)
 10136  001A52  D280               	goto	l22165
 10137  001A54                     l21911:
 10138                           
 10139                           ; BSR set to: 0
 10140                           ;sm_ControlLearning_MC50.c: 134:         {;sm_ControlLearning_MC50.c: 135:             i
      +                          f(var_sys.FimCurso_CloseIsEnabled==YES)
 10141  001A54  0101               	movlb	1	; () banked
 10142  001A56  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
 10143  001A58  A4D8               	btfss	status,2,c
 10144  001A5A  D03A               	goto	l21929
 10145                           
 10146                           ; BSR set to: 1
 10147                           ;sm_ControlLearning_MC50.c: 136:             {;sm_ControlLearning_MC50.c: 137:          
      +                                 control_limit_switch = 1;
 10148  001A5C  0E01               	movlw	1
 10149  001A5E  0100               	movlb	0	; () banked
 10150  001A60  6F81               	movwf	_control_limit_switch& (0+255),b
 10151                           
 10152                           ; BSR set to: 0
 10153                           ;sm_ControlLearning_MC50.c: 138:                 sm_send_event(&controlLearning_stateMac
      +                          hine, ev_GateClosed);
 10154  001A62  0EB2               	movlw	low _controlLearning_stateMachine
 10155  001A64  6E12               	movwf	sm_send_event@psm^0,c
 10156  001A66  0E02               	movlw	high _controlLearning_stateMachine
 10157  001A68  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10158  001A6A  0E00               	movlw	0
 10159  001A6C  6E15               	movwf	(sm_send_event@event+1)^0,c
 10160  001A6E  0E0A               	movlw	10
 10161  001A70  6E14               	movwf	sm_send_event@event^0,c
 10162  001A72  EC25  F041         	call	_sm_send_event	;wreg free
 10163                           
 10164                           ;sm_ControlLearning_MC50.c: 139:                 var_sys.StateMotor=InOpenFull;
 10165  001A76  0E01               	movlw	1
 10166  001A78  0101               	movlb	1	; () banked
 10167  001A7A  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10168                           
 10169                           ; BSR set to: 1
 10170                           ;sm_ControlLearning_MC50.c: 140:                 clearLearningValue();
 10171  001A7C  ECE2  F03D         	call	_clearLearningValue	;wreg free
 10172                           
 10173                           ; BSR set to: 0
 10174                           ;sm_ControlLearning_MC50.c: 141:                  if ((var_sys_NVM.decelarationSensivity
      +                           != 0) && (var_sys.programinAutomatic == 0))
 10175  001A80  51A7               	movf	(_var_sys_NVM+15)& (0+255),w,b	;volatile
 10176  001A82  B4D8               	btfsc	status,2,c
 10177  001A84  D016               	goto	l21927
 10178                           
 10179                           ; BSR set to: 0
 10180  001A86  0101               	movlb	1	; () banked
 10181  001A88  512A               	movf	(_var_sys+42)& (0+255),w,b	;volatile
 10182  001A8A  A4D8               	btfss	status,2,c
 10183  001A8C  D012               	goto	l21927
 10184  001A8E                     u26100:
 10185                           
 10186                           ; BSR set to: 1
 10187                           ;sm_ControlLearning_MC50.c: 142:                          {;sm_ControlLearning_MC50.c: 1
      +                          43:                 ts_system.TimeLearningDecelaration=(1000/50)*15;
 10188  001A8E  0E01               	movlw	1
 10189  001A90  6FD1               	movwf	(_ts_system+55)& (0+255),b	;volatile
 10190  001A92  0E2C               	movlw	44
 10191  001A94  6FD0               	movwf	(_ts_system+54)& (0+255),b	;volatile
 10192                           
 10193                           ;sm_ControlLearning_MC50.c: 144:                 ts_system.TimeWaitToGetCurrent=(1000/50
      +                          )*6;
 10194  001A96  0E00               	movlw	0
 10195  001A98  6FCF               	movwf	(_ts_system+53)& (0+255),b	;volatile
 10196  001A9A  0E78               	movlw	120
 10197  001A9C  6FCE               	movwf	(_ts_system+52)& (0+255),b	;volatile
 10198                           
 10199                           ;sm_ControlLearning_MC50.c: 145:                 ts_system.TimeWaitReleCapacitor = (1000
      +                          /50);
 10200  001A9E  0E00               	movlw	0
 10201  001AA0  6FDF               	movwf	(_ts_system+69)& (0+255),b	;volatile
 10202  001AA2  0E14               	movlw	20
 10203  001AA4  6FDE               	movwf	(_ts_system+68)& (0+255),b	;volatile
 10204                           
 10205                           ;sm_ControlLearning_MC50.c: 146:                 var_sys.LearningDecelaration=YES;
 10206  001AA6  0E01               	movlw	1
 10207  001AA8  6F47               	movwf	(_var_sys+71)& (0+255),b	;volatile
 10208                           
 10209                           ;sm_ControlLearning_MC50.c: 147:                 control_limit_switch = 0;
 10210  001AAA  0E00               	movlw	0
 10211  001AAC  0100               	movlb	0	; () banked
 10212  001AAE  6F81               	movwf	_control_limit_switch& (0+255),b
 10213                           
 10214                           ;sm_ControlLearning_MC50.c: 148:                  }
 10215  001AB0  0012               	return	
 10216  001AB2                     l21927:
 10217                           
 10218                           ;sm_ControlLearning_MC50.c: 150:                 {;sm_ControlLearning_MC50.c: 151:      
      +                                     var_sys.LearningDecelaration=NO;
 10219  001AB2  0E00               	movlw	0
 10220  001AB4  0101               	movlb	1	; () banked
 10221  001AB6  6F47               	movwf	(_var_sys+71)& (0+255),b	;volatile
 10222                           
 10223                           ;sm_ControlLearning_MC50.c: 152:                 ts_system.TimeWaitToGetCurrent=(1000/50
      +                          )*4;
 10224  001AB8  0E00               	movlw	0
 10225  001ABA  6FCF               	movwf	(_ts_system+53)& (0+255),b	;volatile
 10226  001ABC  0E50               	movlw	80
 10227  001ABE  6FCE               	movwf	(_ts_system+52)& (0+255),b	;volatile
 10228                           
 10229                           ;sm_ControlLearning_MC50.c: 153:                 ts_system.TimeWaitReleCapacitor = (1000
      +                          /50);
 10230  001AC0  0E00               	movlw	0
 10231  001AC2  6FDF               	movwf	(_ts_system+69)& (0+255),b	;volatile
 10232  001AC4  0E14               	movlw	20
 10233  001AC6  6FDE               	movwf	(_ts_system+68)& (0+255),b	;volatile
 10234                           
 10235                           ;sm_ControlLearning_MC50.c: 154:                 control_limit_switch = 0;
 10236  001AC8  0E00               	movlw	0
 10237  001ACA  0100               	movlb	0	; () banked
 10238  001ACC  6F81               	movwf	_control_limit_switch& (0+255),b
 10239  001ACE  0012               	return	
 10240  001AD0                     l21929:
 10241                           
 10242                           ; BSR set to: 1
 10243                           ;sm_ControlLearning_MC50.c: 159:             {;sm_ControlLearning_MC50.c: 160:          
      +                                 sm_send_event(&controlLearning_stateMachine, ev_GateOpened);
 10244  001AD0  0EB2               	movlw	low _controlLearning_stateMachine
 10245  001AD2  6E12               	movwf	sm_send_event@psm^0,c
 10246  001AD4  0E02               	movlw	high _controlLearning_stateMachine
 10247  001AD6  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10248  001AD8  0E00               	movlw	0
 10249  001ADA  6E15               	movwf	(sm_send_event@event+1)^0,c
 10250  001ADC  0E0B               	movlw	11
 10251  001ADE  6E14               	movwf	sm_send_event@event^0,c
 10252  001AE0  EC25  F041         	call	_sm_send_event	;wreg free
 10253                           
 10254                           ;sm_ControlLearning_MC50.c: 161:                 var_sys.StateMotor = InClose;
 10255  001AE4  0E03               	movlw	3
 10256  001AE6  0101               	movlb	1	; () banked
 10257  001AE8  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10258                           
 10259                           ; BSR set to: 1
 10260                           ;sm_ControlLearning_MC50.c: 162:                 var_sys.LearningDecelaration= YES;
 10261  001AEA  0E01               	movlw	1
 10262  001AEC  6F47               	movwf	(_var_sys+71)& (0+255),b	;volatile
 10263                           
 10264                           ; BSR set to: 1
 10265                           ;sm_ControlLearning_MC50.c: 164:         };sm_ControlLearning_MC50.c: 165:         break
      +                          ;
 10266                           
 10267                           ;sm_ControlLearning_MC50.c: 163:             }
 10268  001AEE  0012               	return	
 10269  001AF0                     l21935:
 10270                           
 10271                           ; BSR set to: 0
 10272                           ;sm_ControlLearning_MC50.c: 167:         {;sm_ControlLearning_MC50.c: 168:             i
      +                          f(((var_sys.FimCurso_CloseIsEnabled==YES)||(control_limit_switch == 1)) || ((button_stru
      +                          ct.current == 0 ||typeOpenOrder == TypeFull) && var_sys.programinAutomatic == 1))
 10273  001AF0  0101               	movlb	1	; () banked
 10274  001AF2  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
 10275  001AF4  B4D8               	btfsc	status,2,c
 10276  001AF6  D00E               	goto	u26150
 10277                           
 10278                           ; BSR set to: 1
 10279  001AF8  0100               	movlb	0	; () banked
 10280  001AFA  0581               	decf	_control_limit_switch& (0+255),w,b
 10281  001AFC  B4D8               	btfsc	status,2,c
 10282  001AFE  D00A               	goto	u26150
 10283                           
 10284                           ; BSR set to: 0
 10285  001B00  504D               	movf	(_button_struct+1)^0,w,c	;volatile
 10286  001B02  B4D8               	btfsc	status,2,c
 10287  001B04  D003               	goto	u26140
 10288                           
 10289                           ; BSR set to: 0
 10290  001B06  043A               	decf	sm_execute_ControlLearning@typeOpenOrder^0,w,c
 10291  001B08  A4D8               	btfss	status,2,c
 10292  001B0A  D028               	goto	l21963
 10293  001B0C                     u26140:
 10294                           
 10295                           ; BSR set to: 0
 10296  001B0C  0101               	movlb	1	; () banked
 10297  001B0E  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
 10298  001B10  A4D8               	btfss	status,2,c
 10299  001B12  D024               	goto	l21963
 10300  001B14                     u26150:
 10301                           
 10302                           ;sm_ControlLearning_MC50.c: 169:             {;sm_ControlLearning_MC50.c: 171:          
      +                                 control_limit_switch = 1;
 10303  001B14  0E01               	movlw	1
 10304  001B16  0100               	movlb	0	; () banked
 10305  001B18  6F81               	movwf	_control_limit_switch& (0+255),b
 10306                           
 10307                           ;sm_ControlLearning_MC50.c: 172:                 var_sys.StateMotor=Stopped;
 10308  001B1A  0E00               	movlw	0
 10309  001B1C  0101               	movlb	1	; () banked
 10310  001B1E  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10311                           
 10312                           ; BSR set to: 1
 10313                           ;sm_ControlLearning_MC50.c: 173:                 if(ts_system.TimeWaitToNextState<=0)
 10314  001B20  BFBF               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 10315  001B22  D005               	goto	u26160
 10316  001B24  51BF               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 10317  001B26  E102               	bnz	u26161
 10318  001B28  05BE               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 10319  001B2A  B0D8               	btfsc	status,0,c
 10320  001B2C                     u26161:
 10321  001B2C  0012               	return	
 10322  001B2E                     u26160:
 10323                           
 10324                           ; BSR set to: 1
 10325                           ;sm_ControlLearning_MC50.c: 174:                 {;sm_ControlLearning_MC50.c: 175:      
      +                                         sm_send_event(&controlLearning_stateMachine, ev_GateClosed);
 10326  001B2E  0EB2               	movlw	low _controlLearning_stateMachine
 10327  001B30  6E12               	movwf	sm_send_event@psm^0,c
 10328  001B32  0E02               	movlw	high _controlLearning_stateMachine
 10329  001B34  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10330  001B36  0E00               	movlw	0
 10331  001B38  6E15               	movwf	(sm_send_event@event+1)^0,c
 10332  001B3A  0E0A               	movlw	10
 10333  001B3C  6E14               	movwf	sm_send_event@event^0,c
 10334  001B3E  EC25  F041         	call	_sm_send_event	;wreg free
 10335                           
 10336                           ;sm_ControlLearning_MC50.c: 176:                     var_sys.StateMotor=InOpenFull;
 10337  001B42  0E01               	movlw	1
 10338  001B44  0101               	movlb	1	; () banked
 10339  001B46  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10340                           
 10341                           ; BSR set to: 1
 10342                           ;sm_ControlLearning_MC50.c: 177:                     clearLearningValue();
 10343  001B48  ECE2  F03D         	call	_clearLearningValue	;wreg free
 10344                           
 10345                           ; BSR set to: 0
 10346                           ;sm_ControlLearning_MC50.c: 178:                         if ((var_sys_NVM.decelarationSe
      +                          nsivity != 0) && (var_sys.programinAutomatic == 0))
 10347  001B4C  51A7               	movf	(_var_sys_NVM+15)& (0+255),w,b	;volatile
 10348  001B4E  B4D8               	btfsc	status,2,c
 10349  001B50  D7B0               	goto	l21927
 10350                           
 10351                           ; BSR set to: 0
 10352  001B52  0101               	movlb	1	; () banked
 10353  001B54  512A               	movf	(_var_sys+42)& (0+255),w,b	;volatile
 10354  001B56  B4D8               	btfsc	status,2,c
 10355  001B58  D79A               	goto	u26100
 10356  001B5A  D7AB               	goto	l21927
 10357  001B5C                     l21963:
 10358  001B5C  0101               	movlb	1	; () banked
 10359  001B5E  5100               	movf	_var_sys& (0+255),w,b	;volatile
 10360  001B60  A4D8               	btfss	status,2,c
 10361  001B62  D003               	goto	l21967
 10362  001B64                     u26190:
 10363                           
 10364                           ; BSR set to: 1
 10365                           ;sm_ControlLearning_MC50.c: 196:             {;sm_ControlLearning_MC50.c: 197:          
      +                                 generateErrorLearnig();
 10366  001B64  EC5E  F040         	call	_generateErrorLearnig	;wreg free
 10367                           
 10368                           ;sm_ControlLearning_MC50.c: 198:             }
 10369  001B68  0012               	return	
 10370  001B6A                     l21967:
 10371                           
 10372                           ; BSR set to: 1
 10373                           ;sm_ControlLearning_MC50.c: 200:             {;sm_ControlLearning_MC50.c: 201:          
      +                                 ts_system.TimeWaitToNextState=(2*(1000/50));
 10374  001B6A  0E00               	movlw	0
 10375  001B6C  6FBF               	movwf	(_ts_system+37)& (0+255),b	;volatile
 10376  001B6E  0E28               	movlw	40
 10377  001B70  6FBE               	movwf	(_ts_system+36)& (0+255),b	;volatile
 10378  001B72  0012               	return	
 10379  001B74                     l21969:
 10380                           
 10381                           ; BSR set to: 0
 10382                           ;sm_ControlLearning_MC50.c: 206:         {;sm_ControlLearning_MC50.c: 207:             i
      +                          f((var_sys.FimCurso_OpenIsEnabled==YES) || (ts_system.TimeLearningDecelaration<=0)||(con
      +                          trol_limit_switch == 1))
 10383  001B74  0101               	movlb	1	; () banked
 10384  001B76  0504               	decf	(_var_sys+4)& (0+255),w,b	;volatile
 10385  001B78  A4D8               	btfss	status,2,c
 10386                           
 10387                           ; BSR set to: 1
 10388  001B7A  BFD1               	btfsc	(_ts_system+55)& (0+255),7,b	;volatile
 10389  001B7C  D009               	goto	u26220
 10390  001B7E  51D1               	movf	(_ts_system+55)& (0+255),w,b	;volatile
 10391  001B80  E103               	bnz	u26210
 10392  001B82  05D0               	decf	(_ts_system+54)& (0+255),w,b	;volatile
 10393  001B84  A0D8               	btfss	status,0,c
 10394  001B86  D004               	goto	u26220
 10395  001B88                     u26210:
 10396                           
 10397                           ; BSR set to: 1
 10398  001B88  0100               	movlb	0	; () banked
 10399  001B8A  0581               	decf	_control_limit_switch& (0+255),w,b
 10400  001B8C  A4D8               	btfss	status,2,c
 10401  001B8E  D02A               	goto	l21991
 10402  001B90                     u26220:
 10403                           
 10404                           ;sm_ControlLearning_MC50.c: 209:             {;sm_ControlLearning_MC50.c: 210:          
      +                                  control_limit_switch = 1;
 10405  001B90  0E01               	movlw	1
 10406  001B92  0100               	movlb	0	; () banked
 10407  001B94  6F81               	movwf	_control_limit_switch& (0+255),b
 10408                           
 10409                           ;sm_ControlLearning_MC50.c: 211:                 var_sys.StateMotor=Stopped;
 10410  001B96  0E00               	movlw	0
 10411  001B98  0101               	movlb	1	; () banked
 10412  001B9A  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10413                           
 10414                           ; BSR set to: 1
 10415                           ;sm_ControlLearning_MC50.c: 212:             if(ts_system.TimeWaitToNextState<=0)
 10416  001B9C  BFBF               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 10417  001B9E  D005               	goto	u26230
 10418  001BA0  51BF               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 10419  001BA2  E102               	bnz	u26231
 10420  001BA4  05BE               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 10421  001BA6  B0D8               	btfsc	status,0,c
 10422  001BA8                     u26231:
 10423  001BA8  0012               	return	
 10424  001BAA                     u26230:
 10425                           
 10426                           ; BSR set to: 1
 10427                           ;sm_ControlLearning_MC50.c: 213:             {;sm_ControlLearning_MC50.c: 215:          
      +                                 sm_send_event(&controlLearning_stateMachine, ev_GateOpened);
 10428  001BAA  0EB2               	movlw	low _controlLearning_stateMachine
 10429  001BAC  6E12               	movwf	sm_send_event@psm^0,c
 10430  001BAE  0E02               	movlw	high _controlLearning_stateMachine
 10431  001BB0  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10432  001BB2  0E00               	movlw	0
 10433  001BB4  6E15               	movwf	(sm_send_event@event+1)^0,c
 10434  001BB6  0E0B               	movlw	11
 10435  001BB8  6E14               	movwf	sm_send_event@event^0,c
 10436  001BBA  EC25  F041         	call	_sm_send_event	;wreg free
 10437                           
 10438                           ;sm_ControlLearning_MC50.c: 216:                 var_sys.StateMotor=InClose;
 10439  001BBE  0E03               	movlw	3
 10440  001BC0  0101               	movlb	1	; () banked
 10441  001BC2  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10442                           
 10443                           ; BSR set to: 1
 10444                           ;sm_ControlLearning_MC50.c: 217:                 ts_system.TimeLearningDecelaration=(100
      +                          0/50)*5;
 10445  001BC4  0E00               	movlw	0
 10446  001BC6  6FD1               	movwf	(_ts_system+55)& (0+255),b	;volatile
 10447  001BC8  0E64               	movlw	100
 10448  001BCA  6FD0               	movwf	(_ts_system+54)& (0+255),b	;volatile
 10449                           
 10450                           ; BSR set to: 1
 10451                           ;sm_ControlLearning_MC50.c: 218:                 ts_system.TimeWaitToGetCurrent=(1000/50
      +                          )*5;
 10452  001BCC  0E00               	movlw	0
 10453  001BCE  6FCF               	movwf	(_ts_system+53)& (0+255),b	;volatile
 10454  001BD0  0E64               	movlw	100
 10455  001BD2                     L67:
 10456  001BD2  6FCE               	movwf	(_ts_system+52)& (0+255),b	;volatile
 10457                           
 10458                           ; BSR set to: 1
 10459                           ;sm_ControlLearning_MC50.c: 219:                 ts_system.TimeWaitReleCapacitor = (1000
      +                          /50);
 10460  001BD4  0E00               	movlw	0
 10461  001BD6  6FDF               	movwf	(_ts_system+69)& (0+255),b	;volatile
 10462  001BD8  0E14               	movlw	20
 10463  001BDA  6FDE               	movwf	(_ts_system+68)& (0+255),b	;volatile
 10464                           
 10465                           ; BSR set to: 1
 10466                           ;sm_ControlLearning_MC50.c: 220:                 control_limit_switch = 0;
 10467  001BDC  0E00               	movlw	0
 10468  001BDE  0100               	movlb	0	; () banked
 10469  001BE0  6F81               	movwf	_control_limit_switch& (0+255),b
 10470  001BE2  0012               	return	
 10471  001BE4                     l21991:
 10472                           
 10473                           ; BSR set to: 0
 10474  001BE4  0101               	movlb	1	; () banked
 10475  001BE6  5100               	movf	_var_sys& (0+255),w,b	;volatile
 10476  001BE8  B4D8               	btfsc	status,2,c
 10477  001BEA  D7BC               	goto	u26190
 10478                           
 10479                           ; BSR set to: 1
 10480                           ;sm_ControlLearning_MC50.c: 230:             {;sm_ControlLearning_MC50.c: 231:          
      +                                 ts_system.TimeWaitToNextState=(2*(1000/50));
 10481  001BEC  0E00               	movlw	0
 10482  001BEE  6FBF               	movwf	(_ts_system+37)& (0+255),b	;volatile
 10483  001BF0  0E28               	movlw	40
 10484  001BF2  6FBE               	movwf	(_ts_system+36)& (0+255),b	;volatile
 10485                           
 10486                           ; BSR set to: 1
 10487                           ;sm_ControlLearning_MC50.c: 232:                 if (ts_system.TimeWaitReleCapacitor <=0
      +                          )
 10488  001BF4  BFDF               	btfsc	(_ts_system+69)& (0+255),7,b	;volatile
 10489  001BF6  D005               	goto	u26250
 10490  001BF8  51DF               	movf	(_ts_system+69)& (0+255),w,b	;volatile
 10491  001BFA  E102               	bnz	u26251
 10492  001BFC  05DE               	decf	(_ts_system+68)& (0+255),w,b	;volatile
 10493  001BFE  B0D8               	btfsc	status,0,c
 10494  001C00                     u26251:
 10495  001C00  0012               	return	
 10496  001C02                     u26250:
 10497                           
 10498                           ; BSR set to: 1
 10499                           ;sm_ControlLearning_MC50.c: 233:                 {;sm_ControlLearning_MC50.c: 234:      
      +                                     if(ts_system.TimeWaitToGetCurrent>0)
 10500  001C02  BFCF               	btfsc	(_ts_system+53)& (0+255),7,b	;volatile
 10501  001C04  0012               	return	
 10502  001C06  51CF               	movf	(_ts_system+53)& (0+255),w,b	;volatile
 10503  001C08  E103               	bnz	u26260
 10504  001C0A  05CE               	decf	(_ts_system+52)& (0+255),w,b	;volatile
 10505  001C0C  A0D8               	btfss	status,0,c
 10506  001C0E  0012               	return	
 10507  001C10                     u26260:
 10508                           
 10509                           ; BSR set to: 1
 10510                           ;sm_ControlLearning_MC50.c: 235:                 {;sm_ControlLearning_MC50.c: 236:      
      +                                         learn_st.openHistCurrent=calculateMean(learn_st.openHistCurrent,var_sys.A
      +                          ctualHistCurrent);
 10511  001C10  C06E  F010         	movff	_learn_st+14,calculateMean@meanValue	;volatile
 10512  001C14  C06F  F011         	movff	_learn_st+15,calculateMean@meanValue+1	;volatile
 10513  001C18  6A12               	clrf	(calculateMean@meanValue+2)^0,c
 10514  001C1A  6A13               	clrf	(calculateMean@meanValue+3)^0,c
 10515  001C1C  C130  F014         	movff	_var_sys+48,calculateMean@newValue	;volatile
 10516  001C20  C131  F015         	movff	_var_sys+49,calculateMean@newValue+1	;volatile
 10517  001C24  C132  F016         	movff	_var_sys+50,calculateMean@newValue+2	;volatile
 10518  001C28  C133  F017         	movff	_var_sys+51,calculateMean@newValue+3	;volatile
 10519  001C2C  ECC5  F040         	call	_calculateMean	;wreg free
 10520  001C30  C010  F06E         	movff	?_calculateMean,_learn_st+14	;volatile
 10521  001C34  C011  F06F         	movff	?_calculateMean+1,_learn_st+15	;volatile
 10522  001C38  0012               	return	
 10523  001C3A                     l22003:
 10524                           
 10525                           ; BSR set to: 0
 10526                           ;sm_ControlLearning_MC50.c: 243:         {;sm_ControlLearning_MC50.c: 244:             i
      +                          f((var_sys.FimCurso_CloseIsEnabled==YES)||(control_limit_switch == 1))
 10527  001C3A  0101               	movlb	1	; () banked
 10528  001C3C  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
 10529  001C3E  B4D8               	btfsc	status,2,c
 10530  001C40  D004               	goto	u26280
 10531                           
 10532                           ; BSR set to: 1
 10533  001C42  0100               	movlb	0	; () banked
 10534  001C44  0581               	decf	_control_limit_switch& (0+255),w,b
 10535  001C46  A4D8               	btfss	status,2,c
 10536  001C48  D020               	goto	l22023
 10537  001C4A                     u26280:
 10538                           
 10539                           ;sm_ControlLearning_MC50.c: 245:             {;sm_ControlLearning_MC50.c: 246:          
      +                                 control_limit_switch = 1;
 10540  001C4A  0E01               	movlw	1
 10541  001C4C  0100               	movlb	0	; () banked
 10542  001C4E  6F81               	movwf	_control_limit_switch& (0+255),b
 10543                           
 10544                           ;sm_ControlLearning_MC50.c: 247:                 var_sys.StateMotor=Stopped;
 10545  001C50  0E00               	movlw	0
 10546  001C52  0101               	movlb	1	; () banked
 10547  001C54  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10548                           
 10549                           ; BSR set to: 1
 10550                           ;sm_ControlLearning_MC50.c: 248:                 if(ts_system.TimeWaitToNextState<=0)
 10551  001C56  BFBF               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 10552  001C58  D005               	goto	u26290
 10553  001C5A  51BF               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 10554  001C5C  E102               	bnz	u26291
 10555  001C5E  05BE               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 10556  001C60  B0D8               	btfsc	status,0,c
 10557  001C62                     u26291:
 10558  001C62  0012               	return	
 10559  001C64                     u26290:
 10560                           
 10561                           ; BSR set to: 1
 10562                           ;sm_ControlLearning_MC50.c: 249:                 {;sm_ControlLearning_MC50.c: 250:      
      +                                         sm_send_event(&controlLearning_stateMachine, ev_GateClosed);
 10563  001C64  0EB2               	movlw	low _controlLearning_stateMachine
 10564  001C66  6E12               	movwf	sm_send_event@psm^0,c
 10565  001C68  0E02               	movlw	high _controlLearning_stateMachine
 10566  001C6A  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10567  001C6C  0E00               	movlw	0
 10568  001C6E  6E15               	movwf	(sm_send_event@event+1)^0,c
 10569  001C70  0E0A               	movlw	10
 10570  001C72  6E14               	movwf	sm_send_event@event^0,c
 10571  001C74  EC25  F041         	call	_sm_send_event	;wreg free
 10572                           
 10573                           ;sm_ControlLearning_MC50.c: 251:                     var_sys.StateMotor=InOpenFull;
 10574  001C78  0E01               	movlw	1
 10575  001C7A  0101               	movlb	1	; () banked
 10576  001C7C  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10577                           
 10578                           ; BSR set to: 1
 10579                           ;sm_ControlLearning_MC50.c: 252:                     var_sys.LearningDecelaration=NO;
 10580  001C7E  0E00               	movlw	0
 10581  001C80  6F47               	movwf	(_var_sys+71)& (0+255),b	;volatile
 10582                           
 10583                           ; BSR set to: 1
 10584                           ;sm_ControlLearning_MC50.c: 253:                     ts_system.TimeWaitToGetCurrent=(100
      +                          0/50)*3;
 10585  001C82  0E00               	movlw	0
 10586  001C84  6FCF               	movwf	(_ts_system+53)& (0+255),b	;volatile
 10587  001C86  0E3C               	movlw	60
 10588  001C88  D7A4               	goto	L67
 10589  001C8A                     l22023:
 10590                           
 10591                           ; BSR set to: 0
 10592  001C8A  0101               	movlb	1	; () banked
 10593  001C8C  5100               	movf	_var_sys& (0+255),w,b	;volatile
 10594  001C8E  B4D8               	btfsc	status,2,c
 10595  001C90  D769               	goto	u26190
 10596                           
 10597                           ; BSR set to: 1
 10598                           ;sm_ControlLearning_MC50.c: 265:             {;sm_ControlLearning_MC50.c: 266:          
      +                                 ts_system.TimeWaitToNextState=(2*(1000/50));
 10599  001C92  0E00               	movlw	0
 10600  001C94  6FBF               	movwf	(_ts_system+37)& (0+255),b	;volatile
 10601  001C96  0E28               	movlw	40
 10602  001C98  6FBE               	movwf	(_ts_system+36)& (0+255),b	;volatile
 10603                           
 10604                           ; BSR set to: 1
 10605                           ;sm_ControlLearning_MC50.c: 267:                 if (ts_system.TimeWaitReleCapacitor <=0
      +                          )
 10606  001C9A  BFDF               	btfsc	(_ts_system+69)& (0+255),7,b	;volatile
 10607  001C9C  D005               	goto	u26310
 10608  001C9E  51DF               	movf	(_ts_system+69)& (0+255),w,b	;volatile
 10609  001CA0  E102               	bnz	u26311
 10610  001CA2  05DE               	decf	(_ts_system+68)& (0+255),w,b	;volatile
 10611  001CA4  B0D8               	btfsc	status,0,c
 10612  001CA6                     u26311:
 10613  001CA6  0012               	return	
 10614  001CA8                     u26310:
 10615                           
 10616                           ; BSR set to: 1
 10617                           ;sm_ControlLearning_MC50.c: 268:                 {;sm_ControlLearning_MC50.c: 269:      
      +                                     if(ts_system.TimeWaitToGetCurrent>0)
 10618  001CA8  BFCF               	btfsc	(_ts_system+53)& (0+255),7,b	;volatile
 10619  001CAA  0012               	return	
 10620  001CAC  51CF               	movf	(_ts_system+53)& (0+255),w,b	;volatile
 10621  001CAE  E103               	bnz	u26320
 10622  001CB0  05CE               	decf	(_ts_system+52)& (0+255),w,b	;volatile
 10623  001CB2  A0D8               	btfss	status,0,c
 10624  001CB4  0012               	return	
 10625  001CB6                     u26320:
 10626                           
 10627                           ; BSR set to: 1
 10628                           ;sm_ControlLearning_MC50.c: 270:                 {;sm_ControlLearning_MC50.c: 271:      
      +                                         learn_st.closeHistCurrent=calculateMean(learn_st.closeHistCurrent,var_sys
      +                          .ActualHistCurrent);
 10629  001CB6  C070  F010         	movff	_learn_st+16,calculateMean@meanValue	;volatile
 10630  001CBA  C071  F011         	movff	_learn_st+17,calculateMean@meanValue+1	;volatile
 10631  001CBE  6A12               	clrf	(calculateMean@meanValue+2)^0,c
 10632  001CC0  6A13               	clrf	(calculateMean@meanValue+3)^0,c
 10633  001CC2  C130  F014         	movff	_var_sys+48,calculateMean@newValue	;volatile
 10634  001CC6  C131  F015         	movff	_var_sys+49,calculateMean@newValue+1	;volatile
 10635  001CCA  C132  F016         	movff	_var_sys+50,calculateMean@newValue+2	;volatile
 10636  001CCE  C133  F017         	movff	_var_sys+51,calculateMean@newValue+3	;volatile
 10637  001CD2  ECC5  F040         	call	_calculateMean	;wreg free
 10638  001CD6  C010  F070         	movff	?_calculateMean,_learn_st+16	;volatile
 10639  001CDA  C011  F071         	movff	?_calculateMean+1,_learn_st+17	;volatile
 10640  001CDE  0012               	return	
 10641  001CE0                     l22035:
 10642                           
 10643                           ; BSR set to: 0
 10644                           ;sm_ControlLearning_MC50.c: 278:         {;sm_ControlLearning_MC50.c: 279:             i
      +                          f(((var_sys.FimCurso_OpenIsEnabled==YES)||control_limit_switch == 1)||(var_sys.LearningD
      +                          ecelaration==YES && (button_struct.current == 0 ||typeOpenOrder == TypeFull) && var_sys.
      +                          programinAutomatic == 1))
 10645  001CE0  0101               	movlb	1	; () banked
 10646  001CE2  0504               	decf	(_var_sys+4)& (0+255),w,b	;volatile
 10647  001CE4  B4D8               	btfsc	status,2,c
 10648  001CE6  D011               	goto	u26380
 10649                           
 10650                           ; BSR set to: 1
 10651  001CE8  0100               	movlb	0	; () banked
 10652  001CEA  0581               	decf	_control_limit_switch& (0+255),w,b
 10653  001CEC  B4D8               	btfsc	status,2,c
 10654  001CEE  D00D               	goto	u26380
 10655                           
 10656                           ; BSR set to: 0
 10657  001CF0  0101               	movlb	1	; () banked
 10658  001CF2  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 10659  001CF4  A4D8               	btfss	status,2,c
 10660  001CF6  D02C               	goto	l22061
 10661                           
 10662                           ; BSR set to: 1
 10663  001CF8  504D               	movf	(_button_struct+1)^0,w,c	;volatile
 10664  001CFA  B4D8               	btfsc	status,2,c
 10665  001CFC  D003               	goto	u26370
 10666                           
 10667                           ; BSR set to: 1
 10668  001CFE  043A               	decf	sm_execute_ControlLearning@typeOpenOrder^0,w,c
 10669  001D00  A4D8               	btfss	status,2,c
 10670  001D02  D026               	goto	l22061
 10671  001D04                     u26370:
 10672                           
 10673                           ; BSR set to: 1
 10674  001D04  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
 10675  001D06  A4D8               	btfss	status,2,c
 10676  001D08  D023               	goto	l22061
 10677  001D0A                     u26380:
 10678                           
 10679                           ;sm_ControlLearning_MC50.c: 280:             {;sm_ControlLearning_MC50.c: 282:          
      +                                 var_sys.Counter_Learning = 0;
 10680  001D0A  0E00               	movlw	0
 10681  001D0C  0101               	movlb	1	; () banked
 10682  001D0E  6F17               	movwf	(_var_sys+23)& (0+255),b	;volatile
 10683                           
 10684                           ;sm_ControlLearning_MC50.c: 283:                 var_sys.LearningDecelaration = NO;
 10685  001D10  0E00               	movlw	0
 10686  001D12  6F47               	movwf	(_var_sys+71)& (0+255),b	;volatile
 10687                           
 10688                           ;sm_ControlLearning_MC50.c: 284:                 control_limit_switch = 1;
 10689  001D14  0E01               	movlw	1
 10690  001D16  0100               	movlb	0	; () banked
 10691  001D18  6F81               	movwf	_control_limit_switch& (0+255),b
 10692                           
 10693                           ;sm_ControlLearning_MC50.c: 285:                 var_sys.StateMotor=Stopped;
 10694  001D1A  0E00               	movlw	0
 10695  001D1C  0101               	movlb	1	; () banked
 10696  001D1E  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10697                           
 10698                           ; BSR set to: 1
 10699                           ;sm_ControlLearning_MC50.c: 286:                 if(ts_system.TimeWaitToNextState<=0)
 10700  001D20  BFBF               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 10701  001D22  D005               	goto	u26390
 10702  001D24  51BF               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 10703  001D26  E102               	bnz	u26391
 10704  001D28  05BE               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 10705  001D2A  B0D8               	btfsc	status,0,c
 10706  001D2C                     u26391:
 10707  001D2C  0012               	return	
 10708  001D2E                     u26390:
 10709                           
 10710                           ; BSR set to: 1
 10711                           ;sm_ControlLearning_MC50.c: 287:                 {;sm_ControlLearning_MC50.c: 288:      
      +                                         sm_send_event(&controlLearning_stateMachine, ev_GateOpened);
 10712  001D2E  0EB2               	movlw	low _controlLearning_stateMachine
 10713  001D30  6E12               	movwf	sm_send_event@psm^0,c
 10714  001D32  0E02               	movlw	high _controlLearning_stateMachine
 10715  001D34  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10716  001D36  0E00               	movlw	0
 10717  001D38  6E15               	movwf	(sm_send_event@event+1)^0,c
 10718  001D3A  0E0B               	movlw	11
 10719  001D3C  6E14               	movwf	sm_send_event@event^0,c
 10720  001D3E  EC25  F041         	call	_sm_send_event	;wreg free
 10721                           
 10722                           ;sm_ControlLearning_MC50.c: 289:                     var_sys.StateMotor=InClose;
 10723  001D42  0E03               	movlw	3
 10724  001D44  0101               	movlb	1	; () banked
 10725  001D46  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10726                           
 10727                           ; BSR set to: 1
 10728                           ;sm_ControlLearning_MC50.c: 290:                     ts_system.TimeWaitToGetCurrent=(100
      +                          0/50)*4;
 10729  001D48  0E00               	movlw	0
 10730  001D4A  6FCF               	movwf	(_ts_system+53)& (0+255),b	;volatile
 10731  001D4C  0E50               	movlw	80
 10732  001D4E  D741               	goto	L67
 10733  001D50                     l22061:
 10734                           
 10735                           ; BSR set to: 1
 10736  001D50  5100               	movf	_var_sys& (0+255),w,b	;volatile
 10737  001D52  B4D8               	btfsc	status,2,c
 10738  001D54  D707               	goto	u26190
 10739                           
 10740                           ; BSR set to: 1
 10741  001D56  504D               	movf	(_button_struct+1)^0,w,c	;volatile
 10742  001D58  B4D8               	btfsc	status,2,c
 10743  001D5A  D003               	goto	u26420
 10744                           
 10745                           ; BSR set to: 1
 10746  001D5C  043A               	decf	sm_execute_ControlLearning@typeOpenOrder^0,w,c
 10747  001D5E  A4D8               	btfss	status,2,c
 10748  001D60  D00F               	goto	l22075
 10749  001D62                     u26420:
 10750                           
 10751                           ; BSR set to: 1
 10752  001D62  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
 10753  001D64  A4D8               	btfss	status,2,c
 10754  001D66  D00C               	goto	l22075
 10755                           
 10756                           ; BSR set to: 1
 10757  001D68  5147               	movf	(_var_sys+71)& (0+255),w,b	;volatile
 10758  001D6A  A4D8               	btfss	status,2,c
 10759  001D6C  D009               	goto	l22075
 10760  001D6E                     u26440:
 10761                           
 10762                           ; BSR set to: 1
 10763                           ;sm_ControlLearning_MC50.c: 303:                 var_sys.LearningDecelaration=YES;
 10764  001D6E  0E01               	movlw	1
 10765  001D70  6F47               	movwf	(_var_sys+71)& (0+255),b	;volatile
 10766                           
 10767                           ;sm_ControlLearning_MC50.c: 306:                 button_struct.processed = 1;
 10768  001D72  0E01               	movlw	1
 10769  001D74  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
 10770                           
 10771                           ;sm_ControlLearning_MC50.c: 307:                 ts_system.TimeWaitToGetCurrent=(1000/50
      +                          )*4;
 10772  001D76  0E00               	movlw	0
 10773  001D78  6FCF               	movwf	(_ts_system+53)& (0+255),b	;volatile
 10774  001D7A  0E50               	movlw	80
 10775  001D7C  6FCE               	movwf	(_ts_system+52)& (0+255),b	;volatile
 10776                           
 10777                           ;sm_ControlLearning_MC50.c: 309:             }
 10778  001D7E  0012               	return	
 10779  001D80                     l22075:
 10780                           
 10781                           ; BSR set to: 1
 10782  001D80  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 10783  001D82  A4D8               	btfss	status,2,c
 10784  001D84  D00C               	goto	l22083
 10785                           
 10786                           ; BSR set to: 1
 10787                           ;sm_ControlLearning_MC50.c: 313:                 ts_system.TimeWaitToNextState=(2*(1000/
      +                          50));
 10788  001D86  0E00               	movlw	0
 10789  001D88  6FBF               	movwf	(_ts_system+37)& (0+255),b	;volatile
 10790  001D8A  0E28               	movlw	40
 10791  001D8C  6FBE               	movwf	(_ts_system+36)& (0+255),b	;volatile
 10792                           
 10793                           ; BSR set to: 1
 10794                           ;sm_ControlLearning_MC50.c: 315:                 if(ts_system.TimeWaitToGetCurrent>0)
 10795  001D8E  BFCF               	btfsc	(_ts_system+53)& (0+255),7,b	;volatile
 10796  001D90  0012               	return	
 10797  001D92  51CF               	movf	(_ts_system+53)& (0+255),w,b	;volatile
 10798  001D94  E103               	bnz	u26460
 10799  001D96  05CE               	decf	(_ts_system+52)& (0+255),w,b	;volatile
 10800  001D98  A0D8               	btfss	status,0,c
 10801  001D9A  0012               	return	
 10802  001D9C                     u26460:
 10803  001D9C  D739               	goto	u26260
 10804  001D9E                     l22083:
 10805                           
 10806                           ; BSR set to: 1
 10807                           ;sm_ControlLearning_MC50.c: 322:             {;sm_ControlLearning_MC50.c: 323:          
      +                                 var_sys.Counter_Learning = 1;
 10808  001D9E  0E01               	movlw	1
 10809  001DA0  6F17               	movwf	(_var_sys+23)& (0+255),b	;volatile
 10810                           
 10811                           ;sm_ControlLearning_MC50.c: 324:                 ts_system.TimeWaitToNextState=(2*(1000/
      +                          50));
 10812  001DA2  0E00               	movlw	0
 10813  001DA4  6FBF               	movwf	(_ts_system+37)& (0+255),b	;volatile
 10814  001DA6  0E28               	movlw	40
 10815  001DA8  6FBE               	movwf	(_ts_system+36)& (0+255),b	;volatile
 10816                           
 10817                           ; BSR set to: 1
 10818                           ;sm_ControlLearning_MC50.c: 326:                 if (ts_system.TimeWaitReleCapacitor <=0
      +                          )
 10819  001DAA  BFDF               	btfsc	(_ts_system+69)& (0+255),7,b	;volatile
 10820  001DAC  D005               	goto	u26470
 10821  001DAE  51DF               	movf	(_ts_system+69)& (0+255),w,b	;volatile
 10822  001DB0  E102               	bnz	u26471
 10823  001DB2  05DE               	decf	(_ts_system+68)& (0+255),w,b	;volatile
 10824  001DB4  B0D8               	btfsc	status,0,c
 10825  001DB6                     u26471:
 10826  001DB6  0012               	return	
 10827  001DB8                     u26470:
 10828                           
 10829                           ; BSR set to: 1
 10830                           ;sm_ControlLearning_MC50.c: 327:                 {;sm_ControlLearning_MC50.c: 328:      
      +                                     if(ts_system.TimeWaitToGetCurrent>0)
 10831  001DB8  BFCF               	btfsc	(_ts_system+53)& (0+255),7,b	;volatile
 10832  001DBA  0012               	return	
 10833  001DBC  51CF               	movf	(_ts_system+53)& (0+255),w,b	;volatile
 10834  001DBE  E103               	bnz	u26480
 10835  001DC0  05CE               	decf	(_ts_system+52)& (0+255),w,b	;volatile
 10836  001DC2  A0D8               	btfss	status,0,c
 10837  001DC4  0012               	return	
 10838  001DC6                     u26480:
 10839                           
 10840                           ; BSR set to: 1
 10841                           ;sm_ControlLearning_MC50.c: 329:                 {;sm_ControlLearning_MC50.c: 330:      
      +                                         learn_st.openCurrent=calculateMean(learn_st.openCurrent,var_sys.ActualCur
      +                          rent);
 10842  001DC6  C06A  F010         	movff	_learn_st+10,calculateMean@meanValue	;volatile
 10843  001DCA  C06B  F011         	movff	_learn_st+11,calculateMean@meanValue+1	;volatile
 10844  001DCE  6A12               	clrf	(calculateMean@meanValue+2)^0,c
 10845  001DD0  6A13               	clrf	(calculateMean@meanValue+3)^0,c
 10846  001DD2  C12E  F014         	movff	_var_sys+46,calculateMean@newValue	;volatile
 10847  001DD6  C12F  F015         	movff	_var_sys+47,calculateMean@newValue+1	;volatile
 10848  001DDA  6A16               	clrf	(calculateMean@newValue+2)^0,c
 10849  001DDC  6A17               	clrf	(calculateMean@newValue+3)^0,c
 10850  001DDE  ECC5  F040         	call	_calculateMean	;wreg free
 10851  001DE2  C010  F06A         	movff	?_calculateMean,_learn_st+10	;volatile
 10852  001DE6  C011  F06B         	movff	?_calculateMean+1,_learn_st+11	;volatile
 10853  001DEA  0012               	return	
 10854  001DEC                     l22091:
 10855                           
 10856                           ; BSR set to: 0
 10857                           ;sm_ControlLearning_MC50.c: 337:         {;sm_ControlLearning_MC50.c: 338:             i
      +                          f((var_sys.FimCurso_CloseIsEnabled==YES)||( var_sys.LearningDecelaration==YES && (button
      +                          _struct.current == 0 || typeOpenOrder == TypeFull) && var_sys.programinAutomatic == 1))
 10858  001DEC  0101               	movlb	1	; () banked
 10859  001DEE  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
 10860  001DF0  B4D8               	btfsc	status,2,c
 10861  001DF2  D00C               	goto	u26530
 10862                           
 10863                           ; BSR set to: 1
 10864  001DF4  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 10865  001DF6  A4D8               	btfss	status,2,c
 10866  001DF8  D06F               	goto	l22137
 10867                           
 10868                           ; BSR set to: 1
 10869  001DFA  504D               	movf	(_button_struct+1)^0,w,c	;volatile
 10870  001DFC  B4D8               	btfsc	status,2,c
 10871  001DFE  D003               	goto	u26520
 10872                           
 10873                           ; BSR set to: 1
 10874  001E00  043A               	decf	sm_execute_ControlLearning@typeOpenOrder^0,w,c
 10875  001E02  A4D8               	btfss	status,2,c
 10876  001E04  D069               	goto	l22137
 10877  001E06                     u26520:
 10878                           
 10879                           ; BSR set to: 1
 10880  001E06  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
 10881  001E08  A4D8               	btfss	status,2,c
 10882  001E0A  D066               	goto	l22137
 10883  001E0C                     u26530:
 10884                           
 10885                           ; BSR set to: 1
 10886                           ;sm_ControlLearning_MC50.c: 339:             {;sm_ControlLearning_MC50.c: 342:          
      +                                 var_sys.Statedoorcontrol = st_Closed;
 10887  001E0C  0E01               	movlw	1
 10888  001E0E  6F1C               	movwf	(_var_sys+28)& (0+255),b	;volatile
 10889                           
 10890                           ;sm_ControlLearning_MC50.c: 343:                 var_sys.Counter_Learning = 0;
 10891  001E10  0E00               	movlw	0
 10892  001E12  6F17               	movwf	(_var_sys+23)& (0+255),b	;volatile
 10893                           
 10894                           ;sm_ControlLearning_MC50.c: 344:                 var_sys.LearningDecelaration = NO;
 10895  001E14  0E00               	movlw	0
 10896  001E16  6F47               	movwf	(_var_sys+71)& (0+255),b	;volatile
 10897                           
 10898                           ;sm_ControlLearning_MC50.c: 345:                 var_sys.StateMotor=Stopped;
 10899  001E18  0E00               	movlw	0
 10900  001E1A  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10901                           
 10902                           ; BSR set to: 1
 10903                           ;sm_ControlLearning_MC50.c: 346:                 sm_send_event(&controlLearning_stateMac
      +                          hine, ev_GateClosed);
 10904  001E1C  0EB2               	movlw	low _controlLearning_stateMachine
 10905  001E1E  6E12               	movwf	sm_send_event@psm^0,c
 10906  001E20  0E02               	movlw	high _controlLearning_stateMachine
 10907  001E22  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10908  001E24  0E00               	movlw	0
 10909  001E26  6E15               	movwf	(sm_send_event@event+1)^0,c
 10910  001E28  0E0A               	movlw	10
 10911  001E2A  6E14               	movwf	sm_send_event@event^0,c
 10912  001E2C  EC25  F041         	call	_sm_send_event	;wreg free
 10913                           
 10914                           ;sm_ControlLearning_MC50.c: 347:                 sm_send_event(&controlGate_stateMachine
      +                          , ev_LearningComplete);
 10915  001E30  0EE2               	movlw	low _controlGate_stateMachine
 10916  001E32  6E12               	movwf	sm_send_event@psm^0,c
 10917  001E34  0E01               	movlw	high _controlGate_stateMachine
 10918  001E36  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10919  001E38  0E00               	movlw	0
 10920  001E3A  6E15               	movwf	(sm_send_event@event+1)^0,c
 10921  001E3C  0E13               	movlw	19
 10922  001E3E  6E14               	movwf	sm_send_event@event^0,c
 10923  001E40  EC25  F041         	call	_sm_send_event	;wreg free
 10924                           
 10925                           ;sm_ControlLearning_MC50.c: 348:                 var_sys_NVM.learningTimeToClose=learn_s
      +                          t.timeClose;
 10926  001E44  C060  F0D0         	movff	_learn_st,_var_sys_NVM+56	;volatile
 10927  001E48  C061  F0D1         	movff	_learn_st+1,_var_sys_NVM+57	;volatile
 10928  001E4C  C062  F0D2         	movff	_learn_st+2,_var_sys_NVM+58	;volatile
 10929  001E50  C063  F0D3         	movff	_learn_st+3,_var_sys_NVM+59	;volatile
 10930                           
 10931                           ;sm_ControlLearning_MC50.c: 349:                 var_sys_NVM.learningTimeToOpen=learn_st
      +                          .timeOpen;
 10932  001E54  C064  F0CC         	movff	_learn_st+4,_var_sys_NVM+52	;volatile
 10933  001E58  C065  F0CD         	movff	_learn_st+5,_var_sys_NVM+53	;volatile
 10934  001E5C  C066  F0CE         	movff	_learn_st+6,_var_sys_NVM+54	;volatile
 10935  001E60  C067  F0CF         	movff	_learn_st+7,_var_sys_NVM+55	;volatile
 10936                           
 10937                           ;sm_ControlLearning_MC50.c: 350:                 if (var_sys.programinAutomatic == 1){
 10938  001E64  0101               	movlb	1	; () banked
 10939  001E66  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
 10940  001E68  A4D8               	btfss	status,2,c
 10941  001E6A  D005               	goto	l22115
 10942                           
 10943                           ; BSR set to: 1
 10944                           ;sm_ControlLearning_MC50.c: 351:                     var_sys_NVM.decelarationClose=learn
      +                          _st.timeDecelerationClose ;
 10945  001E6C  C068  F099         	movff	_learn_st+8,_var_sys_NVM+1	;volatile
 10946                           
 10947                           ;sm_ControlLearning_MC50.c: 352:                     var_sys_NVM.decelarationOpen=learn_
      +                          st.timeDecelerationOpen ;
 10948  001E70  C069  F098         	movff	_learn_st+9,_var_sys_NVM	;volatile
 10949                           
 10950                           ;sm_ControlLearning_MC50.c: 353:                                 }
 10951  001E74  D005               	goto	l22117
 10952  001E76                     l22115:
 10953                           
 10954                           ; BSR set to: 1
 10955                           ;sm_ControlLearning_MC50.c: 355:                     var_sys_NVM.decelarationClose=4 ;
 10956  001E76  0E04               	movlw	4
 10957  001E78  0100               	movlb	0	; () banked
 10958  001E7A  6F99               	movwf	(_var_sys_NVM+1)& (0+255),b	;volatile
 10959                           
 10960                           ;sm_ControlLearning_MC50.c: 356:                     var_sys_NVM.decelarationOpen=4 ;
 10961  001E7C  0E04               	movlw	4
 10962  001E7E  6F98               	movwf	_var_sys_NVM& (0+255),b	;volatile
 10963  001E80                     l22117:
 10964                           
 10965                           ;sm_ControlLearning_MC50.c: 358:                 var_sys_NVM.learningCurrentNormalClose=
      +                          learn_st.closeCurrent;
 10966  001E80  C06C  F0C8         	movff	_learn_st+12,_var_sys_NVM+48	;volatile
 10967  001E84  C06D  F0C9         	movff	_learn_st+13,_var_sys_NVM+49	;volatile
 10968                           
 10969                           ;sm_ControlLearning_MC50.c: 359:                 var_sys_NVM.learningCurrentNormalOpen=l
      +                          earn_st.openCurrent;
 10970  001E88  C06A  F0CA         	movff	_learn_st+10,_var_sys_NVM+50	;volatile
 10971  001E8C  C06B  F0CB         	movff	_learn_st+11,_var_sys_NVM+51	;volatile
 10972                           
 10973                           ;sm_ControlLearning_MC50.c: 360:                 var_sys_NVM.learningCurrentDecelaration
      +                          Open=learn_st.openHistCurrent;
 10974  001E90  C06E  F0C4         	movff	_learn_st+14,_var_sys_NVM+44	;volatile
 10975  001E94  C06F  F0C5         	movff	_learn_st+15,_var_sys_NVM+45	;volatile
 10976  001E98  0100               	movlb	0	; () banked
 10977  001E9A  6BC6               	clrf	(_var_sys_NVM+46)& (0+255),b	;volatile
 10978  001E9C  6BC7               	clrf	(_var_sys_NVM+47)& (0+255),b	;volatile
 10979                           
 10980                           ; BSR set to: 0
 10981                           ;sm_ControlLearning_MC50.c: 361:                 var_sys_NVM.learningCurrentDecelaration
      +                          Close=learn_st.closeHistCurrent;
 10982  001E9E  C070  F0C0         	movff	_learn_st+16,_var_sys_NVM+40	;volatile
 10983  001EA2  C071  F0C1         	movff	_learn_st+17,_var_sys_NVM+41	;volatile
 10984  001EA6  6BC2               	clrf	(_var_sys_NVM+42)& (0+255),b	;volatile
 10985  001EA8  6BC3               	clrf	(_var_sys_NVM+43)& (0+255),b	;volatile
 10986                           
 10987                           ; BSR set to: 0
 10988                           ;sm_ControlLearning_MC50.c: 362:                 SaveNVM_VarSystem(pageMemoryP);
 10989  001EAA  0E00               	movlw	0
 10990  001EAC  EC06  F045         	call	_SaveNVM_VarSystem
 10991                           
 10992                           ;sm_ControlLearning_MC50.c: 363:                 SaveNVM_VarSystem(pageMemoryLearningVar
      +                          s);
 10993  001EB0  0E03               	movlw	3
 10994  001EB2  EC06  F045         	call	_SaveNVM_VarSystem
 10995                           
 10996                           ;sm_ControlLearning_MC50.c: 364:                 SaveNVM_VarSystem(pageMemoryCounters);
 10997  001EB6  0E02               	movlw	2
 10998  001EB8  EC06  F045         	call	_SaveNVM_VarSystem
 10999                           
 11000                           ;sm_ControlLearning_MC50.c: 365:                 var_sys.LearningIsEnabled=NO;
 11001  001EBC  0E00               	movlw	0
 11002  001EBE  0101               	movlb	1	; () banked
 11003  001EC0  6F26               	movwf	(_var_sys+38)& (0+255),b	;volatile
 11004                           
 11005                           ; BSR set to: 1
 11006                           ;sm_ControlLearning_MC50.c: 366:                 var_sys.PositionActual=0;
 11007  001EC2  0E00               	movlw	0
 11008  001EC4  6F1E               	movwf	(_var_sys+30)& (0+255),b	;volatile
 11009  001EC6  0E00               	movlw	0
 11010  001EC8  6F1F               	movwf	(_var_sys+31)& (0+255),b	;volatile
 11011  001ECA  0E00               	movlw	0
 11012  001ECC  6F20               	movwf	(_var_sys+32)& (0+255),b	;volatile
 11013  001ECE  0E00               	movlw	0
 11014  001ED0  6F21               	movwf	(_var_sys+33)& (0+255),b	;volatile
 11015                           
 11016                           ; BSR set to: 1
 11017                           ;sm_ControlLearning_MC50.c: 367:                 var_sys.PositionIsLost = NO;
 11018  001ED2  0E00               	movlw	0
 11019  001ED4  6F48               	movwf	(_var_sys+72)& (0+255),b	;volatile
 11020                           
 11021                           ;sm_ControlLearning_MC50.c: 369:             }
 11022  001ED6  0012               	return	
 11023  001ED8                     l22137:
 11024                           
 11025                           ; BSR set to: 1
 11026  001ED8  5100               	movf	_var_sys& (0+255),w,b	;volatile
 11027  001EDA  B4D8               	btfsc	status,2,c
 11028  001EDC  D643               	goto	u26190
 11029                           
 11030                           ; BSR set to: 1
 11031  001EDE  504D               	movf	(_button_struct+1)^0,w,c	;volatile
 11032  001EE0  B4D8               	btfsc	status,2,c
 11033  001EE2  D003               	goto	u26570
 11034                           
 11035                           ; BSR set to: 1
 11036  001EE4  043A               	decf	sm_execute_ControlLearning@typeOpenOrder^0,w,c
 11037  001EE6  A4D8               	btfss	status,2,c
 11038  001EE8  D003               	goto	l22149
 11039  001EEA                     u26570:
 11040                           
 11041                           ; BSR set to: 1
 11042  001EEA  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
 11043  001EEC  B4D8               	btfsc	status,2,c
 11044  001EEE  D73F               	goto	u26440
 11045  001EF0                     l22149:
 11046                           
 11047                           ; BSR set to: 1
 11048  001EF0  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 11049  001EF2  A4D8               	btfss	status,2,c
 11050  001EF4  D008               	goto	l22155
 11051                           
 11052                           ; BSR set to: 1
 11053                           ;sm_ControlLearning_MC50.c: 384:                  if(ts_system.TimeWaitToGetCurrent>0)
 11054  001EF6  BFCF               	btfsc	(_ts_system+53)& (0+255),7,b	;volatile
 11055  001EF8  0012               	return	
 11056  001EFA  51CF               	movf	(_ts_system+53)& (0+255),w,b	;volatile
 11057  001EFC  E103               	bnz	u26600
 11058  001EFE  05CE               	decf	(_ts_system+52)& (0+255),w,b	;volatile
 11059  001F00  A0D8               	btfss	status,0,c
 11060  001F02  0012               	return	
 11061  001F04                     u26600:
 11062  001F04  D6D8               	goto	u26320
 11063  001F06                     l22155:
 11064                           
 11065                           ; BSR set to: 1
 11066                           ;sm_ControlLearning_MC50.c: 390:             {;sm_ControlLearning_MC50.c: 391:          
      +                                 var_sys.Counter_Learning = 1;
 11067  001F06  0E01               	movlw	1
 11068  001F08  6F17               	movwf	(_var_sys+23)& (0+255),b	;volatile
 11069                           
 11070                           ;sm_ControlLearning_MC50.c: 392:                 ts_system.TimeWaitToNextState=(2*(1000/
      +                          50));
 11071  001F0A  0E00               	movlw	0
 11072  001F0C  6FBF               	movwf	(_ts_system+37)& (0+255),b	;volatile
 11073  001F0E  0E28               	movlw	40
 11074  001F10  6FBE               	movwf	(_ts_system+36)& (0+255),b	;volatile
 11075                           
 11076                           ; BSR set to: 1
 11077                           ;sm_ControlLearning_MC50.c: 395:                 if (ts_system.TimeWaitReleCapacitor <=0
      +                          )
 11078  001F12  BFDF               	btfsc	(_ts_system+69)& (0+255),7,b	;volatile
 11079  001F14  D005               	goto	u26610
 11080  001F16  51DF               	movf	(_ts_system+69)& (0+255),w,b	;volatile
 11081  001F18  E102               	bnz	u26611
 11082  001F1A  05DE               	decf	(_ts_system+68)& (0+255),w,b	;volatile
 11083  001F1C  B0D8               	btfsc	status,0,c
 11084  001F1E                     u26611:
 11085  001F1E  0012               	return	
 11086  001F20                     u26610:
 11087                           
 11088                           ; BSR set to: 1
 11089                           ;sm_ControlLearning_MC50.c: 396:                 {;sm_ControlLearning_MC50.c: 397:      
      +                                     if(ts_system.TimeWaitToGetCurrent>0)
 11090  001F20  BFCF               	btfsc	(_ts_system+53)& (0+255),7,b	;volatile
 11091  001F22  0012               	return	
 11092  001F24  51CF               	movf	(_ts_system+53)& (0+255),w,b	;volatile
 11093  001F26  E103               	bnz	u26620
 11094  001F28  05CE               	decf	(_ts_system+52)& (0+255),w,b	;volatile
 11095  001F2A  A0D8               	btfss	status,0,c
 11096  001F2C  0012               	return	
 11097  001F2E                     u26620:
 11098                           
 11099                           ; BSR set to: 1
 11100                           ;sm_ControlLearning_MC50.c: 398:                 {;sm_ControlLearning_MC50.c: 399:      
      +                                         learn_st.closeCurrent=calculateMean(learn_st.closeCurrent,var_sys.ActualC
      +                          urrent);
 11101  001F2E  C06C  F010         	movff	_learn_st+12,calculateMean@meanValue	;volatile
 11102  001F32  C06D  F011         	movff	_learn_st+13,calculateMean@meanValue+1	;volatile
 11103  001F36  6A12               	clrf	(calculateMean@meanValue+2)^0,c
 11104  001F38  6A13               	clrf	(calculateMean@meanValue+3)^0,c
 11105  001F3A  C12E  F014         	movff	_var_sys+46,calculateMean@newValue	;volatile
 11106  001F3E  C12F  F015         	movff	_var_sys+47,calculateMean@newValue+1	;volatile
 11107  001F42  6A16               	clrf	(calculateMean@newValue+2)^0,c
 11108  001F44  6A17               	clrf	(calculateMean@newValue+3)^0,c
 11109  001F46  ECC5  F040         	call	_calculateMean	;wreg free
 11110  001F4A  C010  F06C         	movff	?_calculateMean,_learn_st+12	;volatile
 11111  001F4E  C011  F06D         	movff	?_calculateMean+1,_learn_st+13	;volatile
 11112  001F52  0012               	return	
 11113  001F54                     l22165:
 11114  001F54  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
 11115  001F58  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
 11116  001F5C  50DF               	movf	indf2,w,c
 11117  001F5E  0100               	movlb	0	; () banked
 11118  001F60  6FDE               	movwf	??_sm_execute_ControlLearning& (0+255),b
 11119  001F62  6BDF               	clrf	(??_sm_execute_ControlLearning+1)& (0+255),b
 11120                           
 11121                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11122                           ; Switch size 1, requested type "simple"
 11123                           ; Number of cases is 1, Range of values is 0 to 0
 11124                           ; switch strategies available:
 11125                           ; Name         Instructions Cycles
 11126                           ; simple_byte            4     3 (average)
 11127                           ;	Chosen strategy is simple_byte
 11128  001F64  51DF               	movf	(??_sm_execute_ControlLearning+1)& (0+255),w,b
 11129  001F66  0A00               	xorlw	0	; case 0
 11130  001F68  A4D8               	btfss	status,2,c
 11131  001F6A  0012               	return	
 11132                           
 11133                           ; BSR set to: 0
 11134                           ; Switch size 1, requested type "simple"
 11135                           ; Number of cases is 6, Range of values is 0 to 5
 11136                           ; switch strategies available:
 11137                           ; Name         Instructions Cycles
 11138                           ; simple_byte           19    10 (average)
 11139                           ;	Chosen strategy is simple_byte
 11140  001F6C  51DE               	movf	??_sm_execute_ControlLearning& (0+255),w,b
 11141  001F6E  0A00               	xorlw	0	; case 0
 11142  001F70  B4D8               	btfsc	status,2,c
 11143  001F72  D570               	goto	l21911
 11144  001F74  0A01               	xorlw	1	; case 1
 11145  001F76  B4D8               	btfsc	status,2,c
 11146  001F78  D5BB               	goto	l21935
 11147  001F7A  0A03               	xorlw	3	; case 2
 11148  001F7C  B4D8               	btfsc	status,2,c
 11149  001F7E  D5FA               	goto	l21969
 11150  001F80  0A01               	xorlw	1	; case 3
 11151  001F82  B4D8               	btfsc	status,2,c
 11152  001F84  D65A               	goto	l22003
 11153  001F86  0A07               	xorlw	7	; case 4
 11154  001F88  B4D8               	btfsc	status,2,c
 11155  001F8A  D6AA               	goto	l22035
 11156  001F8C  0A01               	xorlw	1	; case 5
 11157  001F8E  A4D8               	btfss	status,2,c
 11158  001F90  0012               	return	
 11159  001F92  D72C               	goto	l22091
 11160  001F94                     __end_of_sm_execute_ControlLearning:
 11161                           	callstack 0
 11162                           
 11163 ;; *************** function _generateErrorLearnig *****************
 11164 ;; Defined at:
 11165 ;;		line 424 in file "sm_ControlLearning_MC50.c"
 11166 ;; Parameters:    Size  Location     Type
 11167 ;;		None
 11168 ;; Auto vars:     Size  Location     Type
 11169 ;;		None
 11170 ;; Return value:  Size  Location     Type
 11171 ;;                  1    wreg      void 
 11172 ;; Registers used:
 11173 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11174 ;; Tracked objects:
 11175 ;;		On entry : 3E/1
 11176 ;;		On exit  : 0/0
 11177 ;;		Unchanged: 0/0
 11178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11179 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11180 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11182 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11183 ;;Total ram usage:        0 bytes
 11184 ;; Hardware stack levels used: 1
 11185 ;; Hardware stack levels required when called: 6
 11186 ;; This function calls:
 11187 ;;		_sm_init
 11188 ;; This function is called by:
 11189 ;;		_sm_execute_ControlLearning
 11190 ;; This function uses a non-reentrant model
 11191 ;;
 11192                           
 11193                           	psect	text22
 11194  0080BC                     __ptext22:
 11195                           	callstack 0
 11196  0080BC                     _generateErrorLearnig:
 11197                           	callstack 22
 11198                           
 11199                           ;sm_ControlLearning_MC50.c: 428:     var_sys.LearningIsEnabled=NO;
 11200                           
 11201                           ;incstack = 0
 11202  0080BC  0E00               	movlw	0
 11203  0080BE  0101               	movlb	1	; () banked
 11204  0080C0  6F26               	movwf	(_var_sys+38)& (0+255),b	;volatile
 11205                           
 11206                           ; BSR set to: 1
 11207                           ;sm_ControlLearning_MC50.c: 430:     sm_init(&menuConfiguration_stateMachine,st_MainMenu
      +                          ,HIST_NONE);
 11208  0080C2  0EBD               	movlw	low _menuConfiguration_stateMachine
 11209  0080C4  6E12               	movwf	sm_init@psm^0,c
 11210  0080C6  0E02               	movlw	high _menuConfiguration_stateMachine
 11211  0080C8  6E13               	movwf	(sm_init@psm+1)^0,c
 11212  0080CA  0E00               	movlw	0
 11213  0080CC  6E15               	movwf	(sm_init@initial_state+1)^0,c
 11214  0080CE  0E00               	movlw	0
 11215  0080D0  6E14               	movwf	sm_init@initial_state^0,c
 11216  0080D2  0E00               	movlw	0
 11217  0080D4  6E16               	movwf	sm_init@hist_mode^0,c
 11218  0080D6  EC08  F042         	call	_sm_init	;wreg free
 11219                           
 11220                           ;sm_ControlLearning_MC50.c: 431:     sm_init(&main_stateMachine,st_standBy,HIST_NONE);
 11221  0080DA  0EED               	movlw	low _main_stateMachine
 11222  0080DC  6E12               	movwf	sm_init@psm^0,c
 11223  0080DE  0E01               	movlw	high _main_stateMachine
 11224  0080E0  6E13               	movwf	(sm_init@psm+1)^0,c
 11225  0080E2  0E00               	movlw	0
 11226  0080E4  6E15               	movwf	(sm_init@initial_state+1)^0,c
 11227  0080E6  0E00               	movlw	0
 11228  0080E8  6E14               	movwf	sm_init@initial_state^0,c
 11229  0080EA  0E00               	movlw	0
 11230  0080EC  6E16               	movwf	sm_init@hist_mode^0,c
 11231  0080EE  EC08  F042         	call	_sm_init	;wreg free
 11232                           
 11233                           ;sm_ControlLearning_MC50.c: 432:     sm_init(&controlGate_stateMachine,st_Idle,HIST_NONE
      +                          );
 11234  0080F2  0EE2               	movlw	low _controlGate_stateMachine
 11235  0080F4  6E12               	movwf	sm_init@psm^0,c
 11236  0080F6  0E01               	movlw	high _controlGate_stateMachine
 11237  0080F8  6E13               	movwf	(sm_init@psm+1)^0,c
 11238  0080FA  0E00               	movlw	0
 11239  0080FC  6E15               	movwf	(sm_init@initial_state+1)^0,c
 11240  0080FE  0E00               	movlw	0
 11241  008100  6E14               	movwf	sm_init@initial_state^0,c
 11242  008102  0E00               	movlw	0
 11243  008104  6E16               	movwf	sm_init@hist_mode^0,c
 11244  008106  EC08  F042         	call	_sm_init	;wreg free
 11245                           
 11246                           ;sm_ControlLearning_MC50.c: 433:     sm_init(&controlLearning_stateMachine,st_InitLearni
      +                          ng,HIST_NONE);
 11247  00810A  0EB2               	movlw	low _controlLearning_stateMachine
 11248  00810C  6E12               	movwf	sm_init@psm^0,c
 11249  00810E  0E02               	movlw	high _controlLearning_stateMachine
 11250  008110  6E13               	movwf	(sm_init@psm+1)^0,c
 11251  008112  0E00               	movlw	0
 11252  008114  6E15               	movwf	(sm_init@initial_state+1)^0,c
 11253  008116  0E00               	movlw	0
 11254  008118  6E14               	movwf	sm_init@initial_state^0,c
 11255  00811A  0E00               	movlw	0
 11256  00811C  6E16               	movwf	sm_init@hist_mode^0,c
 11257  00811E  EC08  F042         	call	_sm_init	;wreg free
 11258  008122  0012               	return		;funcret
 11259  008124                     __end_of_generateErrorLearnig:
 11260                           	callstack 0
 11261                           
 11262 ;; *************** function _sm_init *****************
 11263 ;; Defined at:
 11264 ;;		line 12 in file "sm_common_MC50.c"
 11265 ;; Parameters:    Size  Location     Type
 11266 ;;  psm             2   17[COMRAM] PTR struct .
 11267 ;;		 -> controlLearning_stateMachine(11), controlGate_stateMachine(11), main_stateMachine(11), menuConfiguration_stateMa
      +chine(11), 
 11268 ;;  initial_stat    2   19[COMRAM] int 
 11269 ;;  hist_mode       1   21[COMRAM] enum E348
 11270 ;; Auto vars:     Size  Location     Type
 11271 ;;		None
 11272 ;; Return value:  Size  Location     Type
 11273 ;;                  1    wreg      void 
 11274 ;; Registers used:
 11275 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11276 ;; Tracked objects:
 11277 ;;		On entry : 0/1
 11278 ;;		On exit  : 0/0
 11279 ;;		Unchanged: 0/0
 11280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11281 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11282 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11283 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11284 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11285 ;;Total ram usage:        5 bytes
 11286 ;; Hardware stack levels used: 1
 11287 ;; Hardware stack levels required when called: 5
 11288 ;; This function calls:
 11289 ;;		_sm_restart
 11290 ;; This function is called by:
 11291 ;;		_main
 11292 ;;		_generateErrorLearnig
 11293 ;; This function uses a non-reentrant model
 11294 ;;
 11295                           
 11296                           	psect	text23
 11297  008410                     __ptext23:
 11298                           	callstack 0
 11299  008410                     _sm_init:
 11300                           	callstack 25
 11301                           
 11302                           ;sm_common_MC50.c: 12: void sm_init(sm_t *psm, int initial_state, sm_history_t hist_mode
      +                          );sm_common_MC50.c: 13: {;sm_common_MC50.c: 14:  psm->initial_state = initial_state;
 11303                           
 11304                           ;incstack = 0
 11305  008410  EE20 F002          	lfsr	2,2
 11306  008414  5012               	movf	sm_init@psm^0,w,c
 11307  008416  26D9               	addwf	fsr2l,f,c
 11308  008418  5013               	movf	(sm_init@psm+1)^0,w,c
 11309  00841A  22DA               	addwfc	fsr2h,f,c
 11310  00841C  C014  FFDE         	movff	sm_init@initial_state,postinc2
 11311  008420  C015  FFDD         	movff	sm_init@initial_state+1,postdec2
 11312                           
 11313                           ;sm_common_MC50.c: 15:  psm->history = hist_mode;
 11314  008424  EE20 F006          	lfsr	2,6
 11315  008428  5012               	movf	sm_init@psm^0,w,c
 11316  00842A  26D9               	addwf	fsr2l,f,c
 11317  00842C  5013               	movf	(sm_init@psm+1)^0,w,c
 11318  00842E  22DA               	addwfc	fsr2h,f,c
 11319  008430  C016  FFDF         	movff	sm_init@hist_mode,indf2
 11320                           
 11321                           ;sm_common_MC50.c: 16:  psm->current_state = initial_state;
 11322  008434  C012  FFD9         	movff	sm_init@psm,fsr2l
 11323  008438  C013  FFDA         	movff	sm_init@psm+1,fsr2h
 11324  00843C  C014  FFDE         	movff	sm_init@initial_state,postinc2
 11325  008440  C015  FFDD         	movff	sm_init@initial_state+1,postdec2
 11326                           
 11327                           ;sm_common_MC50.c: 19:  psm->parent_machine = ((void*)0);
 11328  008444  EE20 F007          	lfsr	2,7
 11329  008448  5012               	movf	sm_init@psm^0,w,c
 11330  00844A  26D9               	addwf	fsr2l,f,c
 11331  00844C  5013               	movf	(sm_init@psm+1)^0,w,c
 11332  00844E  22DA               	addwfc	fsr2h,f,c
 11333  008450  0E00               	movlw	0
 11334  008452  6EDE               	movwf	postinc2,c
 11335  008454  0E00               	movlw	0
 11336  008456  6EDD               	movwf	postdec2,c
 11337                           
 11338                           ;sm_common_MC50.c: 20:  sm_restart(psm);
 11339  008458  C012  F010         	movff	sm_init@psm,sm_restart@psm
 11340  00845C  C013  F011         	movff	sm_init@psm+1,sm_restart@psm+1
 11341  008460  ECE6  F043         	call	_sm_restart	;wreg free
 11342  008464  0012               	return		;funcret
 11343  008466                     __end_of_sm_init:
 11344                           	callstack 0
 11345                           
 11346 ;; *************** function _sm_restart *****************
 11347 ;; Defined at:
 11348 ;;		line 23 in file "sm_common_MC50.c"
 11349 ;; Parameters:    Size  Location     Type
 11350 ;;  psm             2   15[COMRAM] PTR struct .
 11351 ;;		 -> controlLearning_stateMachine(11), controlGate_stateMachine(11), main_stateMachine(11), menuConfiguration_stateMa
      +chine(11), 
 11352 ;; Auto vars:     Size  Location     Type
 11353 ;;		None
 11354 ;; Return value:  Size  Location     Type
 11355 ;;                  1    wreg      void 
 11356 ;; Registers used:
 11357 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 11358 ;; Tracked objects:
 11359 ;;		On entry : 0/1
 11360 ;;		On exit  : 0/0
 11361 ;;		Unchanged: 0/0
 11362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11363 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11364 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11366 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11367 ;;Total ram usage:        2 bytes
 11368 ;; Hardware stack levels used: 1
 11369 ;; Hardware stack levels required when called: 4
 11370 ;; This function calls:
 11371 ;;		Nothing
 11372 ;; This function is called by:
 11373 ;;		_sm_init
 11374 ;; This function uses a non-reentrant model
 11375 ;;
 11376                           
 11377                           	psect	text24
 11378  0087CC                     __ptext24:
 11379                           	callstack 0
 11380  0087CC                     _sm_restart:
 11381                           	callstack 25
 11382                           
 11383                           ;sm_common_MC50.c: 24:  if(psm->history == HIST_NONE){
 11384                           
 11385                           ;incstack = 0
 11386  0087CC  EE20 F006          	lfsr	2,6
 11387  0087D0  5010               	movf	sm_restart@psm^0,w,c
 11388  0087D2  26D9               	addwf	fsr2l,f,c
 11389  0087D4  5011               	movf	(sm_restart@psm+1)^0,w,c
 11390  0087D6  22DA               	addwfc	fsr2h,f,c
 11391  0087D8  50DF               	movf	indf2,w,c
 11392  0087DA  A4D8               	btfss	status,2,c
 11393  0087DC  D00E               	goto	l19537
 11394                           
 11395                           ;sm_common_MC50.c: 25:   psm->current_state = psm->initial_state;
 11396  0087DE  EE20 F002          	lfsr	2,2
 11397  0087E2  5010               	movf	sm_restart@psm^0,w,c
 11398  0087E4  26D9               	addwf	fsr2l,f,c
 11399  0087E6  5011               	movf	(sm_restart@psm+1)^0,w,c
 11400  0087E8  22DA               	addwfc	fsr2h,f,c
 11401  0087EA  C010  FFE1         	movff	sm_restart@psm,fsr1l
 11402  0087EE  C011  FFE2         	movff	sm_restart@psm+1,fsr1h
 11403  0087F2  CFDE FFE6          	movff	postinc2,postinc1
 11404  0087F6  CFDD FFE5          	movff	postdec2,postdec1
 11405  0087FA                     l19537:
 11406                           
 11407                           ;sm_common_MC50.c: 27:  psm->last_event = 0;
 11408  0087FA  EE20 F004          	lfsr	2,4
 11409  0087FE  5010               	movf	sm_restart@psm^0,w,c
 11410  008800  26D9               	addwf	fsr2l,f,c
 11411  008802  5011               	movf	(sm_restart@psm+1)^0,w,c
 11412  008804  22DA               	addwfc	fsr2h,f,c
 11413  008806  0E00               	movlw	0
 11414  008808  6EDE               	movwf	postinc2,c
 11415  00880A  0E00               	movlw	0
 11416  00880C  6EDD               	movwf	postdec2,c
 11417  00880E  0012               	return		;funcret
 11418  008810                     __end_of_sm_restart:
 11419                           	callstack 0
 11420                           
 11421 ;; *************** function _clearLearningValue *****************
 11422 ;; Defined at:
 11423 ;;		line 436 in file "sm_ControlLearning_MC50.c"
 11424 ;; Parameters:    Size  Location     Type
 11425 ;;		None
 11426 ;; Auto vars:     Size  Location     Type
 11427 ;;		None
 11428 ;; Return value:  Size  Location     Type
 11429 ;;                  1    wreg      void 
 11430 ;; Registers used:
 11431 ;;		wreg, status,2
 11432 ;; Tracked objects:
 11433 ;;		On entry : 3F/1
 11434 ;;		On exit  : 3F/0
 11435 ;;		Unchanged: 0/0
 11436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11438 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11440 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11441 ;;Total ram usage:        0 bytes
 11442 ;; Hardware stack levels used: 1
 11443 ;; Hardware stack levels required when called: 4
 11444 ;; This function calls:
 11445 ;;		Nothing
 11446 ;; This function is called by:
 11447 ;;		_sm_execute_ControlLearning
 11448 ;; This function uses a non-reentrant model
 11449 ;;
 11450                           
 11451                           	psect	text25
 11452  007BC4                     __ptext25:
 11453                           	callstack 0
 11454  007BC4                     _clearLearningValue:
 11455                           	callstack 24
 11456                           
 11457                           ; BSR set to: 1
 11458                           ;sm_ControlLearning_MC50.c: 438:     learn_st.timeOpen=0;
 11459                           
 11460                           ;incstack = 0
 11461  007BC4  0E00               	movlw	0
 11462  007BC6  0100               	movlb	0	; () banked
 11463  007BC8  6F64               	movwf	(_learn_st+4)& (0+255),b	;volatile
 11464  007BCA  0E00               	movlw	0
 11465  007BCC  6F65               	movwf	(_learn_st+5)& (0+255),b	;volatile
 11466  007BCE  0E00               	movlw	0
 11467  007BD0  6F66               	movwf	(_learn_st+6)& (0+255),b	;volatile
 11468  007BD2  0E00               	movlw	0
 11469  007BD4  6F67               	movwf	(_learn_st+7)& (0+255),b	;volatile
 11470                           
 11471                           ;sm_ControlLearning_MC50.c: 439:     learn_st.timeClose=0;
 11472  007BD6  0E00               	movlw	0
 11473  007BD8  6F60               	movwf	_learn_st& (0+255),b	;volatile
 11474  007BDA  0E00               	movlw	0
 11475  007BDC  6F61               	movwf	(_learn_st+1)& (0+255),b	;volatile
 11476  007BDE  0E00               	movlw	0
 11477  007BE0  6F62               	movwf	(_learn_st+2)& (0+255),b	;volatile
 11478  007BE2  0E00               	movlw	0
 11479  007BE4  6F63               	movwf	(_learn_st+3)& (0+255),b	;volatile
 11480                           
 11481                           ;sm_ControlLearning_MC50.c: 440:     learn_st.timeDecelerationOpen=0;
 11482  007BE6  0E00               	movlw	0
 11483  007BE8  6F69               	movwf	(_learn_st+9)& (0+255),b	;volatile
 11484                           
 11485                           ;sm_ControlLearning_MC50.c: 441:     learn_st.timeDecelerationClose=0;
 11486  007BEA  0E00               	movlw	0
 11487  007BEC  6F68               	movwf	(_learn_st+8)& (0+255),b	;volatile
 11488                           
 11489                           ;sm_ControlLearning_MC50.c: 442:     learn_st.openCurrent=0;
 11490  007BEE  0E00               	movlw	0
 11491  007BF0  6F6B               	movwf	(_learn_st+11)& (0+255),b	;volatile
 11492  007BF2  0E00               	movlw	0
 11493  007BF4  6F6A               	movwf	(_learn_st+10)& (0+255),b	;volatile
 11494                           
 11495                           ;sm_ControlLearning_MC50.c: 443:     learn_st.closeCurrent=0;
 11496  007BF6  0E00               	movlw	0
 11497  007BF8  6F6D               	movwf	(_learn_st+13)& (0+255),b	;volatile
 11498  007BFA  0E00               	movlw	0
 11499  007BFC  6F6C               	movwf	(_learn_st+12)& (0+255),b	;volatile
 11500                           
 11501                           ;sm_ControlLearning_MC50.c: 444:     learn_st.openHistCurrent=0;
 11502  007BFE  0E00               	movlw	0
 11503  007C00  6F6F               	movwf	(_learn_st+15)& (0+255),b	;volatile
 11504  007C02  0E00               	movlw	0
 11505  007C04  6F6E               	movwf	(_learn_st+14)& (0+255),b	;volatile
 11506                           
 11507                           ;sm_ControlLearning_MC50.c: 445:     learn_st.closeHistCurrent=0;
 11508  007C06  0E00               	movlw	0
 11509  007C08  6F71               	movwf	(_learn_st+17)& (0+255),b	;volatile
 11510  007C0A  0E00               	movlw	0
 11511  007C0C  6F70               	movwf	(_learn_st+16)& (0+255),b	;volatile
 11512                           
 11513                           ;sm_ControlLearning_MC50.c: 446:     var_sys_NVM.learningCurrentNormalClose=0;
 11514  007C0E  0E00               	movlw	0
 11515  007C10  6FC9               	movwf	(_var_sys_NVM+49)& (0+255),b	;volatile
 11516  007C12  0E00               	movlw	0
 11517  007C14  6FC8               	movwf	(_var_sys_NVM+48)& (0+255),b	;volatile
 11518                           
 11519                           ;sm_ControlLearning_MC50.c: 447:     var_sys_NVM.learningCurrentNormalOpen=0;
 11520  007C16  0E00               	movlw	0
 11521  007C18  6FCB               	movwf	(_var_sys_NVM+51)& (0+255),b	;volatile
 11522  007C1A  0E00               	movlw	0
 11523  007C1C  6FCA               	movwf	(_var_sys_NVM+50)& (0+255),b	;volatile
 11524                           
 11525                           ;sm_ControlLearning_MC50.c: 448:     var_sys_NVM.learningCurrentDecelarationClose=0;
 11526  007C1E  0E00               	movlw	0
 11527  007C20  6FC0               	movwf	(_var_sys_NVM+40)& (0+255),b	;volatile
 11528  007C22  0E00               	movlw	0
 11529  007C24  6FC1               	movwf	(_var_sys_NVM+41)& (0+255),b	;volatile
 11530  007C26  0E00               	movlw	0
 11531  007C28  6FC2               	movwf	(_var_sys_NVM+42)& (0+255),b	;volatile
 11532  007C2A  0E00               	movlw	0
 11533  007C2C  6FC3               	movwf	(_var_sys_NVM+43)& (0+255),b	;volatile
 11534                           
 11535                           ;sm_ControlLearning_MC50.c: 449:     var_sys_NVM.learningCurrentDecelarationOpen=0;
 11536  007C2E  0E00               	movlw	0
 11537  007C30  6FC4               	movwf	(_var_sys_NVM+44)& (0+255),b	;volatile
 11538  007C32  0E00               	movlw	0
 11539  007C34  6FC5               	movwf	(_var_sys_NVM+45)& (0+255),b	;volatile
 11540  007C36  0E00               	movlw	0
 11541  007C38  6FC6               	movwf	(_var_sys_NVM+46)& (0+255),b	;volatile
 11542  007C3A  0E00               	movlw	0
 11543  007C3C  6FC7               	movwf	(_var_sys_NVM+47)& (0+255),b	;volatile
 11544                           
 11545                           ; BSR set to: 0
 11546  007C3E  0012               	return		;funcret
 11547  007C40                     __end_of_clearLearningValue:
 11548                           	callstack 0
 11549                           
 11550 ;; *************** function _calculateMean *****************
 11551 ;; Defined at:
 11552 ;;		line 411 in file "sm_ControlLearning_MC50.c"
 11553 ;; Parameters:    Size  Location     Type
 11554 ;;  meanValue       4   15[COMRAM] unsigned long 
 11555 ;;  newValue        4   19[COMRAM] unsigned long 
 11556 ;; Auto vars:     Size  Location     Type
 11557 ;;		None
 11558 ;; Return value:  Size  Location     Type
 11559 ;;                  4   15[COMRAM] unsigned long 
 11560 ;; Registers used:
 11561 ;;		wreg, status,2, status,0
 11562 ;; Tracked objects:
 11563 ;;		On entry : 3E/1
 11564 ;;		On exit  : 3E/0
 11565 ;;		Unchanged: 3E/0
 11566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11567 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11568 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11569 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11570 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11571 ;;Total ram usage:       12 bytes
 11572 ;; Hardware stack levels used: 1
 11573 ;; Hardware stack levels required when called: 4
 11574 ;; This function calls:
 11575 ;;		Nothing
 11576 ;; This function is called by:
 11577 ;;		_sm_execute_ControlLearning
 11578 ;; This function uses a non-reentrant model
 11579 ;;
 11580                           
 11581                           	psect	text26
 11582  00818A                     __ptext26:
 11583                           	callstack 0
 11584  00818A                     _calculateMean:
 11585                           	callstack 24
 11586                           
 11587                           ;sm_ControlLearning_MC50.c: 411: unsigned long calculateMean(unsigned long meanValue,uns
      +                          igned long newValue);sm_ControlLearning_MC50.c: 412: {;sm_ControlLearning_MC50.c: 413:  
      +                             if(meanValue==0)
 11588                           
 11589                           ; BSR set to: 0
 11590                           ;incstack = 0
 11591  00818A  5010               	movf	calculateMean@meanValue^0,w,c
 11592  00818C  1011               	iorwf	(calculateMean@meanValue+1)^0,w,c
 11593  00818E  1012               	iorwf	(calculateMean@meanValue+2)^0,w,c
 11594  008190  1013               	iorwf	(calculateMean@meanValue+3)^0,w,c
 11595  008192  A4D8               	btfss	status,2,c
 11596  008194  D009               	goto	l20497
 11597                           
 11598                           ;sm_ControlLearning_MC50.c: 414:     {;sm_ControlLearning_MC50.c: 415:         meanValue
      +                          =newValue;
 11599  008196  C014  F010         	movff	calculateMean@newValue,calculateMean@meanValue
 11600  00819A  C015  F011         	movff	calculateMean@newValue+1,calculateMean@meanValue+1
 11601  00819E  C016  F012         	movff	calculateMean@newValue+2,calculateMean@meanValue+2
 11602  0081A2  C017  F013         	movff	calculateMean@newValue+3,calculateMean@meanValue+3
 11603                           
 11604                           ;sm_ControlLearning_MC50.c: 416:     }
 11605  0081A6  D019               	goto	l20499
 11606  0081A8                     l20497:
 11607                           
 11608                           ;sm_ControlLearning_MC50.c: 418:     {;sm_ControlLearning_MC50.c: 419:         meanValue
      +                          =(meanValue+newValue)/2;
 11609  0081A8  5014               	movf	calculateMean@newValue^0,w,c
 11610  0081AA  2410               	addwf	calculateMean@meanValue^0,w,c
 11611  0081AC  6E18               	movwf	??_calculateMean^0,c
 11612  0081AE  5015               	movf	(calculateMean@newValue+1)^0,w,c
 11613  0081B0  2011               	addwfc	(calculateMean@meanValue+1)^0,w,c
 11614  0081B2  6E19               	movwf	(??_calculateMean+1)^0,c
 11615  0081B4  5016               	movf	(calculateMean@newValue+2)^0,w,c
 11616  0081B6  2012               	addwfc	(calculateMean@meanValue+2)^0,w,c
 11617  0081B8  6E1A               	movwf	(??_calculateMean+2)^0,c
 11618  0081BA  5017               	movf	(calculateMean@newValue+3)^0,w,c
 11619  0081BC  2013               	addwfc	(calculateMean@meanValue+3)^0,w,c
 11620  0081BE  6E1B               	movwf	(??_calculateMean+3)^0,c
 11621  0081C0  90D8               	bcf	status,0,c
 11622  0081C2  321B               	rrcf	(??_calculateMean+3)^0,f,c
 11623  0081C4  321A               	rrcf	(??_calculateMean+2)^0,f,c
 11624  0081C6  3219               	rrcf	(??_calculateMean+1)^0,f,c
 11625  0081C8  3218               	rrcf	??_calculateMean^0,f,c
 11626  0081CA  C018  F010         	movff	??_calculateMean,calculateMean@meanValue
 11627  0081CE  C019  F011         	movff	??_calculateMean+1,calculateMean@meanValue+1
 11628  0081D2  C01A  F012         	movff	??_calculateMean+2,calculateMean@meanValue+2
 11629  0081D6  C01B  F013         	movff	??_calculateMean+3,calculateMean@meanValue+3
 11630  0081DA                     l20499:
 11631                           
 11632                           ;sm_ControlLearning_MC50.c: 421:     return meanValue;
 11633  0081DA  C010  F010         	movff	calculateMean@meanValue,?_calculateMean
 11634  0081DE  C011  F011         	movff	calculateMean@meanValue+1,?_calculateMean+1
 11635  0081E2  C012  F012         	movff	calculateMean@meanValue+2,?_calculateMean+2
 11636  0081E6  C013  F013         	movff	calculateMean@meanValue+3,?_calculateMean+3
 11637  0081EA  0012               	return		;funcret
 11638  0081EC                     __end_of_calculateMean:
 11639                           	callstack 0
 11640                           
 11641 ;; *************** function _actionZone_Opening *****************
 11642 ;; Defined at:
 11643 ;;		line 374 in file "sm_ControlGate_MC50.c"
 11644 ;; Parameters:    Size  Location     Type
 11645 ;;		None
 11646 ;; Auto vars:     Size  Location     Type
 11647 ;;  typeOpenOrde    1   14[BANK0 ] enum E10372
 11648 ;;  securityOpen    1   13[BANK0 ] enum E10397
 11649 ;;  securityClos    1   12[BANK0 ] enum E10397
 11650 ;; Return value:  Size  Location     Type
 11651 ;;                  1    wreg      void 
 11652 ;; Registers used:
 11653 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11654 ;; Tracked objects:
 11655 ;;		On entry : 3F/0
 11656 ;;		On exit  : 0/0
 11657 ;;		Unchanged: 0/0
 11658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11660 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11662 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11663 ;;Total ram usage:        3 bytes
 11664 ;; Hardware stack levels used: 1
 11665 ;; Hardware stack levels required when called: 8
 11666 ;; This function calls:
 11667 ;;		_CloseOrder
 11668 ;;		_GetOpenOrder
 11669 ;;		_GetSecurityStateInClosing
 11670 ;;		_GetSecurityStateInOpening
 11671 ;;		_InitFullAutoTime
 11672 ;;		_InitWalkAutoTime
 11673 ;;		_SetSegmentValueIntermitent
 11674 ;;		_StopOrder
 11675 ;;		_VerifyFollowMe
 11676 ;;		_controlVelocity
 11677 ;;		_setPositionInvertionInClosing
 11678 ;;		_setPositionInvertionInOpening
 11679 ;;		_sm_send_event
 11680 ;; This function is called by:
 11681 ;;		_sm_execute_ControlGate
 11682 ;; This function uses a non-reentrant model
 11683 ;;
 11684                           
 11685                           	psect	text27
 11686  0044F2                     __ptext27:
 11687                           	callstack 0
 11688  0044F2                     _actionZone_Opening:
 11689                           	callstack 21
 11690                           
 11691                           ; BSR set to: 0
 11692                           ;sm_ControlGate_MC50.c: 375:     StateEnum securityClosing = GetSecurityStateInClosing()
      +                          ;
 11693                           
 11694                           ;incstack = 0
 11695  0044F2  EC74  F039         	call	_GetSecurityStateInClosing	;wreg free
 11696  0044F6  0100               	movlb	0	; () banked
 11697  0044F8  6FE4               	movwf	actionZone_Opening@securityClosing& (0+255),b
 11698                           
 11699                           ;sm_ControlGate_MC50.c: 376:     StateEnum securityOpening = GetSecurityStateInOpening()
      +                          ;
 11700  0044FA  ECC7  F039         	call	_GetSecurityStateInOpening	;wreg free
 11701  0044FE  0100               	movlb	0	; () banked
 11702  004500  6FE5               	movwf	actionZone_Opening@securityOpening& (0+255),b
 11703                           
 11704                           ; BSR set to: 0
 11705                           ;sm_ControlGate_MC50.c: 377:     TypeCMD typeOpenOrder = GetOpenOrder();
 11706  004502  ECC8  F028         	call	_GetOpenOrder	;wreg free
 11707  004506  0100               	movlb	0	; () banked
 11708  004508  6FE6               	movwf	actionZone_Opening@typeOpenOrder& (0+255),b
 11709                           
 11710                           ; BSR set to: 0
 11711                           ;sm_ControlGate_MC50.c: 380:     controlVelocity();
 11712  00450A  ECD9  F025         	call	_controlVelocity	;wreg free
 11713                           
 11714                           ;sm_ControlGate_MC50.c: 381:     InitFullAutoTime();
 11715  00450E  ECEA  F047         	call	_InitFullAutoTime	;wreg free
 11716                           
 11717                           ; BSR set to: 0
 11718                           ;sm_ControlGate_MC50.c: 383:     var_sys.passoAPassoAutoClose = NO;
 11719  004512  0E00               	movlw	0
 11720  004514  0101               	movlb	1	; () banked
 11721  004516  6F50               	movwf	(_var_sys+80)& (0+255),b	;volatile
 11722                           
 11723                           ; BSR set to: 1
 11724                           ;sm_ControlGate_MC50.c: 385:     VerifyFollowMe(securityClosing);
 11725  004518  0100               	movlb	0	; () banked
 11726  00451A  51E4               	movf	actionZone_Opening@securityClosing& (0+255),w,b
 11727  00451C  EC42  F047         	call	_VerifyFollowMe
 11728                           
 11729                           ;sm_ControlGate_MC50.c: 386:     if (var_sys.NumberOffErrors > 3) {
 11730  004520  0E03               	movlw	3
 11731  004522  0101               	movlb	1	; () banked
 11732  004524  6543               	cpfsgt	(_var_sys+67)& (0+255),b	;volatile
 11733  004526  D00D               	goto	l21367
 11734                           
 11735                           ; BSR set to: 1
 11736                           ;sm_ControlGate_MC50.c: 388:         var_sys.StateMotor = Stopped;
 11737  004528  0E00               	movlw	0
 11738  00452A  6F00               	movwf	_var_sys& (0+255),b	;volatile
 11739  00452C                     l21365:
 11740                           
 11741                           ; BSR set to: 1
 11742                           ;sm_ControlGate_MC50.c: 389:         sm_send_event(&controlGate_stateMachine, ev_ErrorGa
      +                          te);
 11743  00452C  0EE2               	movlw	low _controlGate_stateMachine
 11744  00452E  6E12               	movwf	sm_send_event@psm^0,c
 11745  004530  0E01               	movlw	high _controlGate_stateMachine
 11746  004532  6E13               	movwf	(sm_send_event@psm+1)^0,c
 11747  004534  0E00               	movlw	0
 11748  004536  6E15               	movwf	(sm_send_event@event+1)^0,c
 11749  004538  0E10               	movlw	16
 11750  00453A  6E14               	movwf	sm_send_event@event^0,c
 11751  00453C  EC25  F041         	call	_sm_send_event	;wreg free
 11752                           
 11753                           ;sm_ControlGate_MC50.c: 390:     } else if (var_sys.StateMotor == InOpenWalk && ts_syste
      +                          m.timeOpenWalk <= 0)
 11754  004540  0012               	return	
 11755  004542                     l21367:
 11756                           
 11757                           ; BSR set to: 1
 11758  004542  0E02               	movlw	2
 11759  004544  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 11760  004546  A4D8               	btfss	status,2,c
 11761  004548  D013               	goto	l21381
 11762                           
 11763                           ; BSR set to: 1
 11764  00454A  BFAB               	btfsc	(_ts_system+17)& (0+255),7,b	;volatile
 11765  00454C  D005               	goto	u24810
 11766  00454E  51AB               	movf	(_ts_system+17)& (0+255),w,b	;volatile
 11767  004550  E10F               	bnz	l21381
 11768  004552  05AA               	decf	(_ts_system+16)& (0+255),w,b	;volatile
 11769  004554  B0D8               	btfsc	status,0,c
 11770  004556  D00C               	goto	l21381
 11771  004558                     u24810:
 11772                           
 11773                           ; BSR set to: 1
 11774                           ;sm_ControlGate_MC50.c: 391:     {;sm_ControlGate_MC50.c: 396:         setPositionInvert
      +                          ionInOpening();
 11775  004558  EC6B  F036         	call	_setPositionInvertionInOpening	;wreg free
 11776                           
 11777                           ; BSR set to: 1
 11778                           ;sm_ControlGate_MC50.c: 397:         StopOrder();
 11779  00455C  EC98  F047         	call	_StopOrder	;wreg free
 11780                           
 11781                           ;sm_ControlGate_MC50.c: 398:         InitWalkAutoTime();
 11782  004560  EC6F  F048         	call	_InitWalkAutoTime	;wreg free
 11783                           
 11784                           ; BSR set to: 0
 11785                           ;sm_ControlGate_MC50.c: 399:         var_sys.passoAPassoAutoClose = YES;
 11786  004564  0E01               	movlw	1
 11787  004566  0101               	movlb	1	; () banked
 11788  004568  6F50               	movwf	(_var_sys+80)& (0+255),b	;volatile
 11789                           
 11790                           ; BSR set to: 1
 11791                           ;sm_ControlGate_MC50.c: 400:         Abertura_pedonal = 1;
 11792  00456A  0E01               	movlw	1
 11793  00456C  6F8D               	movwf	_Abertura_pedonal& (0+255),b
 11794                           
 11795                           ;sm_ControlGate_MC50.c: 402:     } else if ((var_sys.FimCurso_OpenIsEnabled == YES)||(va
      +                          r_sys.TimeMaxMotorIsON<=0) && (var_sys.LearningIsEnabled==NO) && (var_sys.PositionIsLost
      +                          ==NO) && (var_sys.Statedoorcontrol == st_Opening))
 11796  00456E  0012               	return	
 11797  004570                     l21381:
 11798                           
 11799                           ; BSR set to: 1
 11800  004570  0504               	decf	(_var_sys+4)& (0+255),w,b	;volatile
 11801  004572  B4D8               	btfsc	status,2,c
 11802  004574  D010               	goto	u24860
 11803                           
 11804                           ; BSR set to: 1
 11805  004576  5118               	movf	(_var_sys+24)& (0+255),w,b	;volatile
 11806  004578  1119               	iorwf	(_var_sys+25)& (0+255),w,b	;volatile
 11807  00457A  111A               	iorwf	(_var_sys+26)& (0+255),w,b	;volatile
 11808  00457C  111B               	iorwf	(_var_sys+27)& (0+255),w,b	;volatile
 11809  00457E  A4D8               	btfss	status,2,c
 11810  004580  D02F               	goto	l21401
 11811                           
 11812                           ; BSR set to: 1
 11813  004582  5126               	movf	(_var_sys+38)& (0+255),w,b	;volatile
 11814  004584  A4D8               	btfss	status,2,c
 11815  004586  D02C               	goto	l21401
 11816                           
 11817                           ; BSR set to: 1
 11818  004588  5148               	movf	(_var_sys+72)& (0+255),w,b	;volatile
 11819  00458A  A4D8               	btfss	status,2,c
 11820  00458C  D029               	goto	l21401
 11821                           
 11822                           ; BSR set to: 1
 11823  00458E  0E02               	movlw	2
 11824  004590  191C               	xorwf	(_var_sys+28)& (0+255),w,b	;volatile
 11825  004592  A4D8               	btfss	status,2,c
 11826  004594  D025               	goto	l21401
 11827  004596                     u24860:
 11828                           
 11829                           ; BSR set to: 1
 11830                           ;sm_ControlGate_MC50.c: 403:     {;sm_ControlGate_MC50.c: 408:         var_sys.Statedoor
      +                          control = st_Opened;
 11831  004596  0E04               	movlw	4
 11832  004598  6F1C               	movwf	(_var_sys+28)& (0+255),b	;volatile
 11833                           
 11834                           ; BSR set to: 1
 11835                           ;sm_ControlGate_MC50.c: 409:         var_sys.PositionActual = var_sys_NVM.learningTimeTo
      +                          Close;
 11836  00459A  C0D0  F11E         	movff	_var_sys_NVM+56,_var_sys+30	;volatile
 11837  00459E  C0D1  F11F         	movff	_var_sys_NVM+57,_var_sys+31	;volatile
 11838  0045A2  C0D2  F120         	movff	_var_sys_NVM+58,_var_sys+32	;volatile
 11839  0045A6  C0D3  F121         	movff	_var_sys_NVM+59,_var_sys+33	;volatile
 11840                           
 11841                           ;sm_ControlGate_MC50.c: 410:         var_sys.AutoInversionActiveStop = NO;
 11842  0045AA  0E00               	movlw	0
 11843  0045AC  6F12               	movwf	(_var_sys+18)& (0+255),b	;volatile
 11844                           
 11845                           ;sm_ControlGate_MC50.c: 411:         var_sys.PositionIsLost = NO;
 11846  0045AE  0E00               	movlw	0
 11847  0045B0  6F48               	movwf	(_var_sys+72)& (0+255),b	;volatile
 11848                           
 11849                           ;sm_ControlGate_MC50.c: 412:         var_sys.DigitSinalizedTemp = 1;
 11850  0045B2  0E01               	movlw	1
 11851  0045B4  6F22               	movwf	(_var_sys+34)& (0+255),b	;volatile
 11852                           
 11853                           ;sm_ControlGate_MC50.c: 413:         var_sys.NumberOffErrors = 0;
 11854  0045B6  0E00               	movlw	0
 11855  0045B8  6F43               	movwf	(_var_sys+67)& (0+255),b	;volatile
 11856                           
 11857                           ;sm_ControlGate_MC50.c: 414:         ts_system.timeSinalizationDigit = (1000/50) * 2;
 11858  0045BA  0E00               	movlw	0
 11859  0045BC  6FA7               	movwf	(_ts_system+13)& (0+255),b	;volatile
 11860  0045BE  0E28               	movlw	40
 11861  0045C0  6FA6               	movwf	(_ts_system+12)& (0+255),b	;volatile
 11862                           
 11863                           ; BSR set to: 1
 11864                           ;sm_ControlGate_MC50.c: 415:         SetSegmentValueIntermitent(dF, d0, ( 200/50));
 11865  0045C2  0E00               	movlw	0
 11866  0045C4  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 11867  0045C6  0E00               	movlw	0
 11868  0045C8  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 11869  0045CA  0E04               	movlw	4
 11870  0045CC  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 11871  0045CE  0E0F               	movlw	15
 11872  0045D0  EC9D  F045         	call	_SetSegmentValueIntermitent
 11873                           
 11874                           ; BSR set to: 1
 11875                           ;sm_ControlGate_MC50.c: 416:         StopOrder();
 11876  0045D4  EC98  F047         	call	_StopOrder	;wreg free
 11877                           
 11878                           ;sm_ControlGate_MC50.c: 417:         var_sys.passoAPassoAutoClose = YES;
 11879  0045D8  0E01               	movlw	1
 11880  0045DA  0101               	movlb	1	; () banked
 11881  0045DC  6F50               	movwf	(_var_sys+80)& (0+255),b	;volatile
 11882                           
 11883                           ;sm_ControlGate_MC50.c: 419:     }
 11884  0045DE  0012               	return	
 11885  0045E0                     l21401:
 11886                           
 11887                           ; BSR set to: 1
 11888  0045E0  0100               	movlb	0	; () banked
 11889  0045E2  05E5               	decf	actionZone_Opening@securityOpening& (0+255),w,b
 11890  0045E4  B4D8               	btfsc	status,2,c
 11891  0045E6  D012               	goto	u24900
 11892                           
 11893                           ; BSR set to: 0
 11894  0045E8  0101               	movlb	1	; () banked
 11895  0045EA  BFC5               	btfsc	(_ts_system+43)& (0+255),7,b	;volatile
 11896  0045EC  D025               	goto	l21421
 11897  0045EE  51C5               	movf	(_ts_system+43)& (0+255),w,b	;volatile
 11898  0045F0  E103               	bnz	u24880
 11899  0045F2  05C4               	decf	(_ts_system+42)& (0+255),w,b	;volatile
 11900  0045F4  A0D8               	btfss	status,0,c
 11901  0045F6  D020               	goto	l21421
 11902  0045F8                     u24880:
 11903                           
 11904                           ; BSR set to: 1
 11905  0045F8  0541               	decf	(_var_sys+65)& (0+255),w,b	;volatile
 11906  0045FA  A4D8               	btfss	status,2,c
 11907  0045FC  D01D               	goto	l21421
 11908                           
 11909                           ; BSR set to: 1
 11910  0045FE  BFCB               	btfsc	(_ts_system+49)& (0+255),7,b	;volatile
 11911  004600  D005               	goto	u24900
 11912  004602  51CB               	movf	(_ts_system+49)& (0+255),w,b	;volatile
 11913  004604  E119               	bnz	l21421
 11914  004606  05CA               	decf	(_ts_system+48)& (0+255),w,b	;volatile
 11915  004608  B0D8               	btfsc	status,0,c
 11916  00460A  D016               	goto	l21421
 11917  00460C                     u24900:
 11918  00460C  0101               	movlb	1	; () banked
 11919  00460E  5127               	movf	(_var_sys+39)& (0+255),w,b	;volatile
 11920  004610  A4D8               	btfss	status,2,c
 11921  004612  D012               	goto	l21421
 11922                           
 11923                           ; BSR set to: 1
 11924                           ;sm_ControlGate_MC50.c: 422:         if (securityOpening != YES){
 11925  004614  0100               	movlb	0	; () banked
 11926  004616  05E5               	decf	actionZone_Opening@securityOpening& (0+255),w,b
 11927  004618  B4D8               	btfsc	status,2,c
 11928  00461A  D002               	goto	l21415
 11929                           
 11930                           ; BSR set to: 0
 11931                           ;sm_ControlGate_MC50.c: 423:              var_sys.NumberOffErrors++;
 11932  00461C  0101               	movlb	1	; () banked
 11933  00461E  2B43               	incf	(_var_sys+67)& (0+255),f,b	;volatile
 11934  004620                     l21415:
 11935                           
 11936                           ;sm_ControlGate_MC50.c: 426:         var_sys.AutoInversionActive = YES;
 11937  004620  0E01               	movlw	1
 11938  004622  0101               	movlb	1	; () banked
 11939  004624  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 11940                           
 11941                           ; BSR set to: 1
 11942                           ;sm_ControlGate_MC50.c: 427:         ts_system.TimeWaitToNextState = ( 500/50);
 11943  004626  0E00               	movlw	0
 11944  004628  6FBF               	movwf	(_ts_system+37)& (0+255),b	;volatile
 11945  00462A  0E0A               	movlw	10
 11946  00462C  6FBE               	movwf	(_ts_system+36)& (0+255),b	;volatile
 11947                           
 11948                           ; BSR set to: 1
 11949                           ;sm_ControlGate_MC50.c: 428:         ts_system.TimeStopElectricBrake = ((1000/50)+( 500/
      +                          50));
 11950  00462E  0E00               	movlw	0
 11951  004630  6FDB               	movwf	(_ts_system+65)& (0+255),b	;volatile
 11952  004632  0E1E               	movlw	30
 11953  004634  6FDA               	movwf	(_ts_system+64)& (0+255),b	;volatile
 11954                           
 11955                           ;sm_ControlGate_MC50.c: 430:     }
 11956  004636  0012               	return	
 11957  004638                     l21421:
 11958                           
 11959                           ; BSR set to: 1
 11960  004638  BFC5               	btfsc	(_ts_system+43)& (0+255),7,b	;volatile
 11961  00463A  D02D               	goto	l21451
 11962  00463C  51C5               	movf	(_ts_system+43)& (0+255),w,b	;volatile
 11963  00463E  E103               	bnz	u24930
 11964  004640  05C4               	decf	(_ts_system+42)& (0+255),w,b	;volatile
 11965  004642  A0D8               	btfss	status,0,c
 11966  004644  D028               	goto	l21451
 11967  004646                     u24930:
 11968                           
 11969                           ; BSR set to: 1
 11970  004646  0527               	decf	(_var_sys+39)& (0+255),w,b	;volatile
 11971  004648  A4D8               	btfss	status,2,c
 11972  00464A  D025               	goto	l21451
 11973                           
 11974                           ; BSR set to: 1
 11975                           ;sm_ControlGate_MC50.c: 432:         if (var_sys.InvertionCurrentClosing == YES) {
 11976  00464C  0544               	decf	(_var_sys+68)& (0+255),w,b	;volatile
 11977  00464E  A4D8               	btfss	status,2,c
 11978  004650  D005               	goto	l21433
 11979                           
 11980                           ; BSR set to: 1
 11981                           ;sm_ControlGate_MC50.c: 434:             var_sys.StateMotor = Stopped;
 11982  004652  0E00               	movlw	0
 11983  004654  6F00               	movwf	_var_sys& (0+255),b	;volatile
 11984                           
 11985                           ; BSR set to: 1
 11986                           ;sm_ControlGate_MC50.c: 435:             setPositionInvertionInClosing();
 11987  004656  ECC4  F031         	call	_setPositionInvertionInClosing	;wreg free
 11988  00465A  D768               	goto	l21365
 11989  00465C                     l21433:
 11990                           
 11991                           ; BSR set to: 1
 11992  00465C  BFBF               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 11993  00465E  D005               	goto	u24960
 11994  004660  51BF               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 11995  004662  E116               	bnz	l21449
 11996  004664  05BE               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 11997  004666  B0D8               	btfsc	status,0,c
 11998  004668  D013               	goto	l21449
 11999  00466A                     u24960:
 12000                           
 12001                           ; BSR set to: 1
 12002                           ;sm_ControlGate_MC50.c: 438:             CloseOrder();
 12003  00466A  ECE3  F046         	call	_CloseOrder	;wreg free
 12004                           
 12005                           ;sm_ControlGate_MC50.c: 440:             setPositionInvertionInOpening();
 12006  00466E  EC6B  F036         	call	_setPositionInvertionInOpening	;wreg free
 12007                           
 12008                           ; BSR set to: 1
 12009                           ;sm_ControlGate_MC50.c: 441:             var_sys.AutoInversionActive = NO;
 12010  004672  0E00               	movlw	0
 12011  004674  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 12012                           
 12013                           ; BSR set to: 1
 12014                           ;sm_ControlGate_MC50.c: 442:             var_sys.InvertionCurrentOpening = YES;
 12015  004676  0E01               	movlw	1
 12016  004678  6F45               	movwf	(_var_sys+69)& (0+255),b	;volatile
 12017                           
 12018                           ; BSR set to: 1
 12019                           ;sm_ControlGate_MC50.c: 443:             ts_system.TimeInversionStart = (1000/50);
 12020  00467A  0E00               	movlw	0
 12021  00467C  6FCB               	movwf	(_ts_system+49)& (0+255),b	;volatile
 12022  00467E  0E14               	movlw	20
 12023  004680  6FCA               	movwf	(_ts_system+48)& (0+255),b	;volatile
 12024                           
 12025                           ; BSR set to: 1
 12026                           ;sm_ControlGate_MC50.c: 444:             ts_system.InvertionTimeClosingFromOpen = (1000/
      +                          50) * 2;
 12027  004682  0E00               	movlw	0
 12028  004684  6FCD               	movwf	(_ts_system+51)& (0+255),b	;volatile
 12029  004686  0E28               	movlw	40
 12030  004688  6FCC               	movwf	(_ts_system+50)& (0+255),b	;volatile
 12031                           
 12032                           ; BSR set to: 1
 12033                           ;sm_ControlGate_MC50.c: 445:             var_sys.InvertionClosingFromOpen = YES;
 12034  00468A  0E01               	movlw	1
 12035  00468C  6F46               	movwf	(_var_sys+70)& (0+255),b	;volatile
 12036                           
 12037                           ;sm_ControlGate_MC50.c: 449:         } else
 12038  00468E  0012               	return	
 12039  004690                     l21449:
 12040                           
 12041                           ; BSR set to: 1
 12042                           ;sm_ControlGate_MC50.c: 450:         {;sm_ControlGate_MC50.c: 451:             var_sys.S
      +                          tateMotor = Stopped;
 12043  004690  0E00               	movlw	0
 12044  004692  6F00               	movwf	_var_sys& (0+255),b	;volatile
 12045  004694  0012               	return	
 12046  004696                     l21451:
 12047                           
 12048                           ; BSR set to: 1
 12049  004696  0527               	decf	(_var_sys+39)& (0+255),w,b	;volatile
 12050  004698  A4D8               	btfss	status,2,c
 12051  00469A  D00A               	goto	l21471
 12052                           
 12053                           ; BSR set to: 1
 12054                           ;sm_ControlGate_MC50.c: 457:                 var_sys.StateMotor = Stopped;
 12055  00469C  0E00               	movlw	0
 12056  00469E  6F00               	movwf	_var_sys& (0+255),b	;volatile
 12057                           
 12058                           ; BSR set to: 1
 12059                           ;sm_ControlGate_MC50.c: 460:         if (ts_system.TimeWaitToNextState <= 0) {
 12060  0046A0  BFBF               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 12061  0046A2  D7E3               	goto	u24960
 12062  0046A4  51BF               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 12063  0046A6  E14E               	bnz	l2718
 12064  0046A8  05BE               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 12065  0046AA  B0D8               	btfsc	status,0,c
 12066  0046AC  0012               	return	
 12067  0046AE  D7DD               	goto	u24960
 12068  0046B0                     l21471:
 12069                           
 12070                           ; BSR set to: 1
 12071  0046B0  5100               	movf	_var_sys& (0+255),w,b	;volatile
 12072  0046B2  A4D8               	btfss	status,2,c
 12073  0046B4  D018               	goto	l21489
 12074                           
 12075                           ; BSR set to: 1
 12076  0046B6  BFBF               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 12077  0046B8  D005               	goto	u25000
 12078  0046BA  51BF               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 12079  0046BC  E114               	bnz	l21489
 12080  0046BE  05BE               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 12081  0046C0  B0D8               	btfsc	status,0,c
 12082  0046C2  D011               	goto	l21489
 12083  0046C4                     u25000:
 12084                           
 12085                           ; BSR set to: 1
 12086                           ;sm_ControlGate_MC50.c: 479:       if(securityOpening != ST){
 12087  0046C4  0E02               	movlw	2
 12088  0046C6  0100               	movlb	0	; () banked
 12089  0046C8  19E5               	xorwf	actionZone_Opening@securityOpening& (0+255),w,b
 12090  0046CA  B4D8               	btfsc	status,2,c
 12091  0046CC  D007               	goto	l21485
 12092                           
 12093                           ; BSR set to: 0
 12094                           ;sm_ControlGate_MC50.c: 480:         var_sys.NumberOffErrors++;
 12095  0046CE  0101               	movlb	1	; () banked
 12096  0046D0  2B43               	incf	(_var_sys+67)& (0+255),f,b	;volatile
 12097                           
 12098                           ; BSR set to: 1
 12099                           ;sm_ControlGate_MC50.c: 482:         var_sys.StateMotor = Stopped;
 12100  0046D2  0E00               	movlw	0
 12101  0046D4  6F00               	movwf	_var_sys& (0+255),b	;volatile
 12102                           
 12103                           ; BSR set to: 1
 12104                           ;sm_ControlGate_MC50.c: 483:         setPositionInvertionInOpening();
 12105  0046D6  EC6B  F036         	call	_setPositionInvertionInOpening	;wreg free
 12106  0046DA  D728               	goto	l21365
 12107  0046DC                     l21485:
 12108                           
 12109                           ; BSR set to: 0
 12110                           ;sm_ControlGate_MC50.c: 486:           setPositionInvertionInOpening();
 12111  0046DC  EC6B  F036         	call	_setPositionInvertionInOpening	;wreg free
 12112  0046E0                     l21487:
 12113                           
 12114                           ;sm_ControlGate_MC50.c: 487:           StopOrder();
 12115  0046E0  EC98  F047         	call	_StopOrder	;wreg free
 12116  0046E4  0012               	return	
 12117  0046E6                     l21489:
 12118                           
 12119                           ; BSR set to: 1
 12120  0046E6  0100               	movlb	0	; () banked
 12121  0046E8  05A8               	decf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 12122  0046EA  A4D8               	btfss	status,2,c
 12123  0046EC  D005               	goto	l21495
 12124                           
 12125                           ; BSR set to: 0
 12126                           ;sm_ControlGate_MC50.c: 492:         if (typeOpenOrder != TypeFullOpen) {
 12127  0046EE  0E03               	movlw	3
 12128  0046F0  19E6               	xorwf	actionZone_Opening@typeOpenOrder& (0+255),w,b
 12129  0046F2  B4D8               	btfsc	status,2,c
 12130  0046F4  0012               	return	
 12131  0046F6  D7F4               	goto	l21487
 12132  0046F8                     l21495:
 12133                           
 12134                           ; BSR set to: 0
 12135  0046F8  0E02               	movlw	2
 12136  0046FA  19E6               	xorwf	actionZone_Opening@typeOpenOrder& (0+255),w,b
 12137  0046FC  A4D8               	btfss	status,2,c
 12138  0046FE  D011               	goto	l21507
 12139                           
 12140                           ; BSR set to: 0
 12141  004700  0E02               	movlw	2
 12142  004702  0101               	movlb	1	; () banked
 12143  004704  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 12144  004706  A4D8               	btfss	status,2,c
 12145  004708  D00C               	goto	l21507
 12146                           
 12147                           ; BSR set to: 1
 12148  00470A  0E02               	movlw	2
 12149  00470C  0100               	movlb	0	; () banked
 12150  00470E  19A4               	xorwf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 12151  004710  B4D8               	btfsc	status,2,c
 12152  004712  D007               	goto	l21507
 12153                           
 12154                           ; BSR set to: 0
 12155                           ;sm_ControlGate_MC50.c: 502:         setPositionInvertionInOpening();
 12156  004714  EC6B  F036         	call	_setPositionInvertionInOpening	;wreg free
 12157                           
 12158                           ; BSR set to: 1
 12159                           ;sm_ControlGate_MC50.c: 503:         StopOrder();
 12160  004718  EC98  F047         	call	_StopOrder	;wreg free
 12161                           
 12162                           ;sm_ControlGate_MC50.c: 504:         InitWalkAutoTime();
 12163  00471C  EC6F  F048         	call	_InitWalkAutoTime	;wreg free
 12164                           
 12165                           ;sm_ControlGate_MC50.c: 505:     } else if ((typeOpenOrder == TypeFull || typeOpenOrder 
      +                          == TypeFullOpen || typeOpenOrder == TypeFullClose) && var_sys_NVM.operationMode != ModoC
      +                          ondominio) {
 12166  004720  0012               	return	
 12167  004722                     l21507:
 12168  004722  0100               	movlb	0	; () banked
 12169  004724  05E6               	decf	actionZone_Opening@typeOpenOrder& (0+255),w,b
 12170  004726  B4D8               	btfsc	status,2,c
 12171  004728  D008               	goto	u25090
 12172                           
 12173                           ; BSR set to: 0
 12174  00472A  0E03               	movlw	3
 12175  00472C  19E6               	xorwf	actionZone_Opening@typeOpenOrder& (0+255),w,b
 12176  00472E  B4D8               	btfsc	status,2,c
 12177  004730  D004               	goto	u25090
 12178                           
 12179                           ; BSR set to: 0
 12180  004732  0E04               	movlw	4
 12181  004734  19E6               	xorwf	actionZone_Opening@typeOpenOrder& (0+255),w,b
 12182  004736  A4D8               	btfss	status,2,c
 12183  004738  0012               	return	
 12184  00473A                     u25090:
 12185                           
 12186                           ; BSR set to: 0
 12187  00473A  0E02               	movlw	2
 12188  00473C  19A4               	xorwf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 12189  00473E  B4D8               	btfsc	status,2,c
 12190  004740  0012               	return	
 12191  004742  D7CC               	goto	l21485
 12192  004744                     l2718:
 12193  004744  0012               	return		;funcret
 12194  004746                     __end_of_actionZone_Opening:
 12195                           	callstack 0
 12196                           
 12197 ;; *************** function _setPositionInvertionInOpening *****************
 12198 ;; Defined at:
 12199 ;;		line 894 in file "sm_ControlGate_MC50.c"
 12200 ;; Parameters:    Size  Location     Type
 12201 ;;		None
 12202 ;; Auto vars:     Size  Location     Type
 12203 ;;		None
 12204 ;; Return value:  Size  Location     Type
 12205 ;;                  1    wreg      void 
 12206 ;; Registers used:
 12207 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12208 ;; Tracked objects:
 12209 ;;		On entry : 3E/1
 12210 ;;		On exit  : 3F/1
 12211 ;;		Unchanged: 0/0
 12212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12213 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12214 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12215 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12216 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12217 ;;Total ram usage:        8 bytes
 12218 ;; Hardware stack levels used: 1
 12219 ;; Hardware stack levels required when called: 6
 12220 ;; This function calls:
 12221 ;;		_getTimeDecelaration
 12222 ;; This function is called by:
 12223 ;;		_actionZone_Opening
 12224 ;; This function uses a non-reentrant model
 12225 ;;
 12226                           
 12227                           	psect	text28
 12228  006CD6                     __ptext28:
 12229                           	callstack 0
 12230  006CD6                     _setPositionInvertionInOpening:
 12231                           	callstack 22
 12232                           
 12233                           ;sm_ControlGate_MC50.c: 896:     if(var_sys_NVM.TypeofMotor != 2){
 12234                           
 12235                           ;incstack = 0
 12236  006CD6  0E02               	movlw	2
 12237  006CD8  0100               	movlb	0	; () banked
 12238  006CDA  19B4               	xorwf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 12239  006CDC  B4D8               	btfsc	status,2,c
 12240  006CDE  D009               	goto	l20449
 12241                           
 12242                           ; BSR set to: 0
 12243                           ;sm_ControlGate_MC50.c: 897:        var_sys.PositionActual -= ( 100/50);
 12244  006CE0  0EFE               	movlw	254
 12245  006CE2  0101               	movlb	1	; () banked
 12246  006CE4  271E               	addwf	(_var_sys+30)& (0+255),f,b	;volatile
 12247  006CE6  0EFF               	movlw	255
 12248  006CE8  231F               	addwfc	(_var_sys+31)& (0+255),f,b	;volatile
 12249  006CEA  0EFF               	movlw	255
 12250  006CEC  2320               	addwfc	(_var_sys+32)& (0+255),f,b	;volatile
 12251  006CEE  0EFF               	movlw	255
 12252  006CF0  D006               	goto	L69
 12253  006CF2                     l20449:
 12254                           
 12255                           ; BSR set to: 0
 12256                           ;sm_ControlGate_MC50.c: 901:          var_sys.PositionActual += ( 50/50);
 12257  006CF2  0E01               	movlw	1
 12258  006CF4  0101               	movlb	1	; () banked
 12259  006CF6  271E               	addwf	(_var_sys+30)& (0+255),f,b	;volatile
 12260  006CF8  0E00               	movlw	0
 12261  006CFA  231F               	addwfc	(_var_sys+31)& (0+255),f,b	;volatile
 12262  006CFC  2320               	addwfc	(_var_sys+32)& (0+255),f,b	;volatile
 12263  006CFE                     L69:
 12264  006CFE  2321               	addwfc	(_var_sys+33)& (0+255),f,b	;volatile
 12265                           
 12266                           ; BSR set to: 1
 12267                           ;sm_ControlGate_MC50.c: 906:     if (var_sys.PositionActual < getTimeDecelaration(InClos
      +                          e)) {
 12268  006D00  0E03               	movlw	3
 12269  006D02  ECF7  F035         	call	_getTimeDecelaration
 12270  006D06  5029               	movf	?_getTimeDecelaration^0,w,c
 12271  006D08  0101               	movlb	1	; () banked
 12272  006D0A  5D1E               	subwf	(_var_sys+30)& (0+255),w,b	;volatile
 12273  006D0C  502A               	movf	(?_getTimeDecelaration+1)^0,w,c
 12274  006D0E  591F               	subwfb	(_var_sys+31)& (0+255),w,b	;volatile
 12275  006D10  502B               	movf	(?_getTimeDecelaration+2)^0,w,c
 12276  006D12  5920               	subwfb	(_var_sys+32)& (0+255),w,b	;volatile
 12277  006D14  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 12278  006D16  0A80               	xorlw	128
 12279  006D18  6E32               	movwf	??_setPositionInvertionInOpening^0,c
 12280  006D1A  502C               	movf	(?_getTimeDecelaration+3)^0,w,c
 12281  006D1C  0A80               	xorlw	128
 12282  006D1E  5832               	subwfb	??_setPositionInvertionInOpening^0,w,c
 12283  006D20  B0D8               	btfsc	status,0,c
 12284  006D22  D004               	goto	l20455
 12285                           
 12286                           ; BSR set to: 1
 12287                           ;sm_ControlGate_MC50.c: 907:         var_sys.PositionActual = getTimeDecelaration(InClos
      +                          e);
 12288  006D24  0E03               	movlw	3
 12289  006D26  ECF7  F035         	call	_getTimeDecelaration
 12290  006D2A  D015               	goto	L70
 12291  006D2C                     l20455:
 12292                           
 12293                           ; BSR set to: 1
 12294  006D2C  0E01               	movlw	1
 12295  006D2E  ECF7  F035         	call	_getTimeDecelaration
 12296  006D32  0101               	movlb	1	; () banked
 12297  006D34  511E               	movf	(_var_sys+30)& (0+255),w,b	;volatile
 12298  006D36  5C29               	subwf	?_getTimeDecelaration^0,w,c
 12299  006D38  511F               	movf	(_var_sys+31)& (0+255),w,b	;volatile
 12300  006D3A  582A               	subwfb	(?_getTimeDecelaration+1)^0,w,c
 12301  006D3C  5120               	movf	(_var_sys+32)& (0+255),w,b	;volatile
 12302  006D3E  582B               	subwfb	(?_getTimeDecelaration+2)^0,w,c
 12303  006D40  502C               	movf	(?_getTimeDecelaration+3)^0,w,c
 12304  006D42  0A80               	xorlw	128
 12305  006D44  6E32               	movwf	??_setPositionInvertionInOpening^0,c
 12306  006D46  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 12307  006D48  0A80               	xorlw	128
 12308  006D4A  5832               	subwfb	??_setPositionInvertionInOpening^0,w,c
 12309  006D4C  B0D8               	btfsc	status,0,c
 12310  006D4E  D00B               	goto	l20459
 12311                           
 12312                           ; BSR set to: 1
 12313                           ;sm_ControlGate_MC50.c: 909:         var_sys.PositionActual = getTimeDecelaration(InOpen
      +                          Full);
 12314  006D50  0E01               	movlw	1
 12315  006D52  ECF7  F035         	call	_getTimeDecelaration
 12316  006D56                     L70:
 12317  006D56  C029  F11E         	movff	?_getTimeDecelaration,_var_sys+30	;volatile
 12318  006D5A  C02A  F11F         	movff	?_getTimeDecelaration+1,_var_sys+31	;volatile
 12319  006D5E  C02B  F120         	movff	?_getTimeDecelaration+2,_var_sys+32	;volatile
 12320  006D62  C02C  F121         	movff	?_getTimeDecelaration+3,_var_sys+33	;volatile
 12321  006D66                     l20459:
 12322                           
 12323                           ;sm_ControlGate_MC50.c: 911:     var_sys.TimeMaxMotorIsON = var_sys.PositionActual + var
      +                          _sys_NVM.decelarationClose*( 500/50) + (1000/50)*10;
 12324  006D66  0100               	movlb	0	; () banked
 12325  006D68  5199               	movf	(_var_sys_NVM+1)& (0+255),w,b	;volatile
 12326  006D6A  0D0A               	mullw	10
 12327  006D6C  CFF3 F032          	movff	prodl,??_setPositionInvertionInOpening
 12328  006D70  CFF4 F033          	movff	prodh,??_setPositionInvertionInOpening+1
 12329  006D74  0E00               	movlw	0
 12330  006D76  BE33               	btfsc	(??_setPositionInvertionInOpening+1)^0,7,c
 12331  006D78  0EFF               	movlw	255
 12332  006D7A  6E34               	movwf	(??_setPositionInvertionInOpening+2)^0,c
 12333  006D7C  6E35               	movwf	(??_setPositionInvertionInOpening+3)^0,c
 12334  006D7E  0101               	movlb	1	; () banked
 12335  006D80  511E               	movf	(_var_sys+30)& (0+255),w,b	;volatile
 12336  006D82  2432               	addwf	??_setPositionInvertionInOpening^0,w,c
 12337  006D84  6E36               	movwf	(??_setPositionInvertionInOpening+4)^0,c
 12338  006D86  511F               	movf	(_var_sys+31)& (0+255),w,b	;volatile
 12339  006D88  2033               	addwfc	(??_setPositionInvertionInOpening+1)^0,w,c
 12340  006D8A  6E37               	movwf	(??_setPositionInvertionInOpening+5)^0,c
 12341  006D8C  5120               	movf	(_var_sys+32)& (0+255),w,b	;volatile
 12342  006D8E  2034               	addwfc	(??_setPositionInvertionInOpening+2)^0,w,c
 12343  006D90  6E38               	movwf	(??_setPositionInvertionInOpening+6)^0,c
 12344  006D92  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 12345  006D94  2035               	addwfc	(??_setPositionInvertionInOpening+3)^0,w,c
 12346  006D96  6E39               	movwf	(??_setPositionInvertionInOpening+7)^0,c
 12347  006D98  0EC8               	movlw	200
 12348  006D9A  2436               	addwf	(??_setPositionInvertionInOpening+4)^0,w,c
 12349  006D9C  6F18               	movwf	(_var_sys+24)& (0+255),b	;volatile
 12350  006D9E  0E00               	movlw	0
 12351  006DA0  2037               	addwfc	(??_setPositionInvertionInOpening+5)^0,w,c
 12352  006DA2  6F19               	movwf	(_var_sys+25)& (0+255),b	;volatile
 12353  006DA4  0E00               	movlw	0
 12354  006DA6  2038               	addwfc	(??_setPositionInvertionInOpening+6)^0,w,c
 12355  006DA8  6F1A               	movwf	(_var_sys+26)& (0+255),b	;volatile
 12356  006DAA  0E00               	movlw	0
 12357  006DAC  2039               	addwfc	(??_setPositionInvertionInOpening+7)^0,w,c
 12358  006DAE  6F1B               	movwf	(_var_sys+27)& (0+255),b	;volatile
 12359                           
 12360                           ; BSR set to: 1
 12361  006DB0  0012               	return		;funcret
 12362  006DB2                     __end_of_setPositionInvertionInOpening:
 12363                           	callstack 0
 12364                           
 12365 ;; *************** function _controlVelocity *****************
 12366 ;; Defined at:
 12367 ;;		line 527 in file "outputs_MC50.c"
 12368 ;; Parameters:    Size  Location     Type
 12369 ;;		None
 12370 ;; Auto vars:     Size  Location     Type
 12371 ;;		None
 12372 ;; Return value:  Size  Location     Type
 12373 ;;                  1    wreg      void 
 12374 ;; Registers used:
 12375 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12376 ;; Tracked objects:
 12377 ;;		On entry : 3E/1
 12378 ;;		On exit  : 3E/0
 12379 ;;		Unchanged: 0/0
 12380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12383 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12384 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12385 ;;Total ram usage:        1 bytes
 12386 ;; Hardware stack levels used: 1
 12387 ;; Hardware stack levels required when called: 7
 12388 ;; This function calls:
 12389 ;;		_ControlDecelarationFactor
 12390 ;;		_InitSoftStop
 12391 ;;		_getStateOpenPosition
 12392 ;;		_getTimeDecelaration
 12393 ;; This function is called by:
 12394 ;;		_main
 12395 ;;		_actionZone_Opening
 12396 ;; This function uses a non-reentrant model
 12397 ;;
 12398                           
 12399                           	psect	text29
 12400  004BB2                     __ptext29:
 12401                           	callstack 0
 12402  004BB2                     _controlVelocity:
 12403                           	callstack 21
 12404                           
 12405                           ;outputs_MC50.c: 531:     if(var_sys.LearningIsEnabled==YES && var_sys.LearningDecelarat
      +                          ion==YES)
 12406                           
 12407                           ; BSR set to: 1
 12408                           ;incstack = 0
 12409  004BB2  0101               	movlb	1	; () banked
 12410  004BB4  0526               	decf	(_var_sys+38)& (0+255),w,b	;volatile
 12411  004BB6  A4D8               	btfss	status,2,c
 12412  004BB8  D017               	goto	l20261
 12413                           
 12414                           ; BSR set to: 1
 12415  004BBA  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 12416  004BBC  A4D8               	btfss	status,2,c
 12417  004BBE  D014               	goto	l20261
 12418                           
 12419                           ; BSR set to: 1
 12420                           ;outputs_MC50.c: 532:     {;outputs_MC50.c: 533:         if(powerControl_st.decelaration
      +                          Active==NO)
 12421  004BC0  517B               	movf	_powerControl_st& (0+255),w,b
 12422  004BC2  A4D8               	btfss	status,2,c
 12423  004BC4  D008               	goto	l20255
 12424                           
 12425                           ; BSR set to: 1
 12426                           ;outputs_MC50.c: 534:         {;outputs_MC50.c: 535:             ts_system.TimeStopedBef
      +                          oreDecelaration=( 500/50);
 12427  004BC6  0E00               	movlw	0
 12428  004BC8  6FC7               	movwf	(_ts_system+45)& (0+255),b	;volatile
 12429  004BCA  0E0A               	movlw	10
 12430  004BCC  6FC6               	movwf	(_ts_system+44)& (0+255),b	;volatile
 12431                           
 12432                           ;outputs_MC50.c: 536:             ts_system.TimeCurrentWaitForAlarm=(1000/50);
 12433  004BCE  0E00               	movlw	0
 12434  004BD0  6FC9               	movwf	(_ts_system+47)& (0+255),b	;volatile
 12435  004BD2  0E14               	movlw	20
 12436  004BD4  6FC8               	movwf	(_ts_system+46)& (0+255),b	;volatile
 12437  004BD6                     l20255:
 12438                           
 12439                           ; BSR set to: 1
 12440                           ;outputs_MC50.c: 538:         ControlDecelarationFactor();
 12441  004BD6  EC11  F048         	call	_ControlDecelarationFactor	;wreg free
 12442                           
 12443                           ; BSR set to: 1
 12444                           ;outputs_MC50.c: 539:         powerControl_st.decelarationActive=YES;
 12445  004BDA  0E01               	movlw	1
 12446  004BDC  6F7B               	movwf	_powerControl_st& (0+255),b
 12447                           
 12448                           ; BSR set to: 1
 12449                           ;outputs_MC50.c: 540:         var_sys.velocityFactor=0;
 12450  004BDE  0E00               	movlw	0
 12451  004BE0  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 12452  004BE2  0E00               	movlw	0
 12453  004BE4  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 12454                           
 12455                           ;outputs_MC50.c: 541:     }
 12456  004BE6  0012               	return	
 12457  004BE8                     l20261:
 12458                           
 12459                           ; BSR set to: 1
 12460  004BE8  0526               	decf	(_var_sys+38)& (0+255),w,b	;volatile
 12461  004BEA  B4D8               	btfsc	status,2,c
 12462  004BEC  D003               	goto	u23360
 12463                           
 12464                           ; BSR set to: 1
 12465  004BEE  0509               	decf	(_var_sys+9)& (0+255),w,b	;volatile
 12466  004BF0  A4D8               	btfss	status,2,c
 12467  004BF2  D007               	goto	l20267
 12468  004BF4                     u23360:
 12469                           
 12470                           ; BSR set to: 1
 12471                           ;outputs_MC50.c: 544:     {;outputs_MC50.c: 545:         var_sys.velocityFactor=0;
 12472  004BF4  0E00               	movlw	0
 12473  004BF6  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 12474  004BF8  0E00               	movlw	0
 12475  004BFA  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 12476                           
 12477                           ;outputs_MC50.c: 546:         powerControl_st.decelarationActive=NO;
 12478  004BFC  0E00               	movlw	0
 12479  004BFE  6F7B               	movwf	_powerControl_st& (0+255),b
 12480                           
 12481                           ;outputs_MC50.c: 547:     }
 12482  004C00  0012               	return	
 12483  004C02                     l20267:
 12484                           
 12485                           ; BSR set to: 1
 12486  004C02  0E03               	movlw	3
 12487  004C04  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 12488  004C06  A4D8               	btfss	status,2,c
 12489  004C08  D068               	goto	l20315
 12490                           
 12491                           ; BSR set to: 1
 12492  004C0A  0E03               	movlw	3
 12493  004C0C  ECF7  F035         	call	_getTimeDecelaration
 12494  004C10  5029               	movf	?_getTimeDecelaration^0,w,c
 12495  004C12  0101               	movlb	1	; () banked
 12496  004C14  5D1E               	subwf	(_var_sys+30)& (0+255),w,b	;volatile
 12497  004C16  502A               	movf	(?_getTimeDecelaration+1)^0,w,c
 12498  004C18  591F               	subwfb	(_var_sys+31)& (0+255),w,b	;volatile
 12499  004C1A  502B               	movf	(?_getTimeDecelaration+2)^0,w,c
 12500  004C1C  5920               	subwfb	(_var_sys+32)& (0+255),w,b	;volatile
 12501  004C1E  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 12502  004C20  0A80               	xorlw	128
 12503  004C22  0100               	movlb	0	; () banked
 12504  004C24  6FDA               	movwf	??_controlVelocity& (0+255),b
 12505  004C26  502C               	movf	(?_getTimeDecelaration+3)^0,w,c
 12506  004C28  0A80               	xorlw	128
 12507  004C2A  59DA               	subwfb	??_controlVelocity& (0+255),w,b
 12508  004C2C  A0D8               	btfss	status,0,c
 12509  004C2E  D004               	goto	u23390
 12510                           
 12511                           ; BSR set to: 0
 12512  004C30  0101               	movlb	1	; () banked
 12513  004C32  0548               	decf	(_var_sys+72)& (0+255),w,b	;volatile
 12514  004C34  A4D8               	btfss	status,2,c
 12515  004C36  D051               	goto	l20315
 12516  004C38                     u23390:
 12517  004C38  0100               	movlb	0	; () banked
 12518  004C3A  5199               	movf	(_var_sys_NVM+1)& (0+255),w,b	;volatile
 12519  004C3C  B4D8               	btfsc	status,2,c
 12520  004C3E  D004               	goto	u23410
 12521                           
 12522                           ; BSR set to: 0
 12523  004C40  0101               	movlb	1	; () banked
 12524  004C42  5112               	movf	(_var_sys+18)& (0+255),w,b	;volatile
 12525  004C44  B4D8               	btfsc	status,2,c
 12526  004C46  D00C               	goto	u23430
 12527  004C48                     u23410:
 12528  004C48  0101               	movlb	1	; () banked
 12529  004C4A  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 12530  004C4C  D005               	goto	u23420
 12531  004C4E  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 12532  004C50  E144               	bnz	l20315
 12533  004C52  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 12534  004C54  B0D8               	btfsc	status,0,c
 12535  004C56  D041               	goto	l20315
 12536  004C58                     u23420:
 12537                           
 12538                           ; BSR set to: 1
 12539  004C58  0100               	movlb	0	; () banked
 12540  004C5A  51AB               	movf	(_var_sys_NVM+19)& (0+255),w,b	;volatile
 12541  004C5C  B4D8               	btfsc	status,2,c
 12542  004C5E  D03D               	goto	l20315
 12543  004C60                     u23430:
 12544                           
 12545                           ;outputs_MC50.c: 550:     {;outputs_MC50.c: 552:             if ((powerControl_st.decela
      +                          rationActive==NO) && (var_sys.AutoInversionActiveStop==NO ))
 12546  004C60  0101               	movlb	1	; () banked
 12547  004C62  517B               	movf	_powerControl_st& (0+255),w,b
 12548  004C64  A4D8               	btfss	status,2,c
 12549  004C66  D022               	goto	l20301
 12550                           
 12551                           ; BSR set to: 1
 12552  004C68  5112               	movf	(_var_sys+18)& (0+255),w,b	;volatile
 12553  004C6A  A4D8               	btfss	status,2,c
 12554  004C6C  D01F               	goto	l20301
 12555                           
 12556                           ; BSR set to: 1
 12557                           ;outputs_MC50.c: 553:                 {;outputs_MC50.c: 556:                     ts_syst
      +                          em.TimeCurrentWaitForAlarm=(1000/50);
 12558  004C6E  0E00               	movlw	0
 12559  004C70  6FC9               	movwf	(_ts_system+47)& (0+255),b	;volatile
 12560  004C72  0E14               	movlw	20
 12561  004C74  6FC8               	movwf	(_ts_system+46)& (0+255),b	;volatile
 12562                           
 12563                           ;outputs_MC50.c: 558:                     if (var_sys_NVM.softstop > 0){
 12564  004C76  0100               	movlb	0	; () banked
 12565  004C78  51AB               	movf	(_var_sys_NVM+19)& (0+255),w,b	;volatile
 12566  004C7A  B4D8               	btfsc	status,2,c
 12567  004C7C  D008               	goto	l20291
 12568                           
 12569                           ; BSR set to: 0
 12570                           ;outputs_MC50.c: 559:                         var_sys.AutoInversionActive = NO;
 12571  004C7E  0E00               	movlw	0
 12572  004C80  0101               	movlb	1	; () banked
 12573  004C82  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 12574                           
 12575                           ;outputs_MC50.c: 560:                         var_sys.AutoInversionActiveStop = YES;
 12576  004C84  0E01               	movlw	1
 12577  004C86  6F12               	movwf	(_var_sys+18)& (0+255),b	;volatile
 12578                           
 12579                           ; BSR set to: 1
 12580                           ;outputs_MC50.c: 561:                         InitSoftStop();
 12581  004C88  EC7A  F043         	call	_InitSoftStop	;wreg free
 12582                           
 12583                           ;outputs_MC50.c: 563:                     }
 12584  004C8C  D00F               	goto	l20301
 12585  004C8E                     l20291:
 12586                           
 12587                           ; BSR set to: 0
 12588                           ;outputs_MC50.c: 565:                     {;outputs_MC50.c: 566:                        
      +                           ts_system.TimeStopedBeforeDecelaration=( 500/50);
 12589  004C8E  0E00               	movlw	0
 12590  004C90  0101               	movlb	1	; () banked
 12591  004C92  6FC7               	movwf	(_ts_system+45)& (0+255),b	;volatile
 12592  004C94  0E0A               	movlw	10
 12593  004C96  6FC6               	movwf	(_ts_system+44)& (0+255),b	;volatile
 12594                           
 12595                           ; BSR set to: 1
 12596                           ;outputs_MC50.c: 567:                         ControlDecelarationFactor();
 12597  004C98  EC11  F048         	call	_ControlDecelarationFactor	;wreg free
 12598                           
 12599                           ; BSR set to: 1
 12600                           ;outputs_MC50.c: 568:                         powerControl_st.decelarationActive=YES;
 12601  004C9C  0E01               	movlw	1
 12602  004C9E  6F7B               	movwf	_powerControl_st& (0+255),b
 12603                           
 12604                           ; BSR set to: 1
 12605                           ;outputs_MC50.c: 569:                         var_sys.velocityFactor=0;
 12606  004CA0  0E00               	movlw	0
 12607  004CA2  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 12608  004CA4  0E00               	movlw	0
 12609  004CA6  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 12610                           
 12611                           ; BSR set to: 1
 12612                           ;outputs_MC50.c: 570:                          var_sys.AutoInversionActiveStop = NO;
 12613  004CA8  0E00               	movlw	0
 12614  004CAA  6F12               	movwf	(_var_sys+18)& (0+255),b	;volatile
 12615  004CAC                     l20301:
 12616                           
 12617                           ;outputs_MC50.c: 574:                 if ((var_sys.velocityFactorstop <= 0)&&(var_sys.Au
      +                          toInversionActiveStop == YES) && (var_sys_NVM.softstop > 0))
 12618  004CAC  0101               	movlb	1	; () banked
 12619  004CAE  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 12620  004CB0  D005               	goto	u23470
 12621  004CB2  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 12622  004CB4  E102               	bnz	u23471
 12623  004CB6  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 12624  004CB8  B0D8               	btfsc	status,0,c
 12625  004CBA                     u23471:
 12626  004CBA  0012               	return	
 12627  004CBC                     u23470:
 12628                           
 12629                           ; BSR set to: 1
 12630  004CBC  0512               	decf	(_var_sys+18)& (0+255),w,b	;volatile
 12631  004CBE  A4D8               	btfss	status,2,c
 12632  004CC0  0012               	return	
 12633                           
 12634                           ; BSR set to: 1
 12635  004CC2  0100               	movlb	0	; () banked
 12636  004CC4  51AB               	movf	(_var_sys_NVM+19)& (0+255),w,b	;volatile
 12637  004CC6  B4D8               	btfsc	status,2,c
 12638  004CC8  0012               	return	
 12639                           
 12640                           ; BSR set to: 0
 12641                           ;outputs_MC50.c: 575:                 {;outputs_MC50.c: 576:                 ts_system.T
      +                          imeStopedBeforeDecelaration=( 100/50);
 12642  004CCA  0E00               	movlw	0
 12643  004CCC  0101               	movlb	1	; () banked
 12644  004CCE  6FC7               	movwf	(_ts_system+45)& (0+255),b	;volatile
 12645  004CD0  0E02               	movlw	2
 12646  004CD2  6FC6               	movwf	(_ts_system+44)& (0+255),b	;volatile
 12647                           
 12648                           ;outputs_MC50.c: 577:                 var_sys.AutoInversionActiveStop = NO;
 12649  004CD4  0E00               	movlw	0
 12650  004CD6  6F12               	movwf	(_var_sys+18)& (0+255),b	;volatile
 12651  004CD8  D77E               	goto	l20255
 12652  004CDA                     l20315:
 12653  004CDA  0101               	movlb	1	; () banked
 12654  004CDC  5100               	movf	_var_sys& (0+255),w,b	;volatile
 12655  004CDE  ECEA  F032         	call	_getStateOpenPosition
 12656  004CE2  06E8               	decf	wreg,f,c
 12657  004CE4  A4D8               	btfss	status,2,c
 12658  004CE6  D042               	goto	l20357
 12659                           
 12660                           ; BSR set to: 0
 12661  004CE8  5198               	movf	_var_sys_NVM& (0+255),w,b	;volatile
 12662  004CEA  B4D8               	btfsc	status,2,c
 12663  004CEC  D004               	goto	u23520
 12664                           
 12665                           ; BSR set to: 0
 12666  004CEE  0101               	movlb	1	; () banked
 12667  004CF0  5112               	movf	(_var_sys+18)& (0+255),w,b	;volatile
 12668  004CF2  B4D8               	btfsc	status,2,c
 12669  004CF4  D00C               	goto	u23540
 12670  004CF6                     u23520:
 12671  004CF6  0101               	movlb	1	; () banked
 12672  004CF8  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 12673  004CFA  D005               	goto	u23530
 12674  004CFC  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 12675  004CFE  E136               	bnz	l20357
 12676  004D00  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 12677  004D02  B0D8               	btfsc	status,0,c
 12678  004D04  D033               	goto	l20357
 12679  004D06                     u23530:
 12680                           
 12681                           ; BSR set to: 1
 12682  004D06  0100               	movlb	0	; () banked
 12683  004D08  51AB               	movf	(_var_sys_NVM+19)& (0+255),w,b	;volatile
 12684  004D0A  B4D8               	btfsc	status,2,c
 12685  004D0C  D02F               	goto	l20357
 12686  004D0E                     u23540:
 12687                           
 12688                           ;outputs_MC50.c: 586:     {;outputs_MC50.c: 588:             if ((powerControl_st.decela
      +                          rationActive==NO) && (var_sys.AutoInversionActiveStop==NO ))
 12689  004D0E  0101               	movlb	1	; () banked
 12690  004D10  517B               	movf	_powerControl_st& (0+255),w,b
 12691  004D12  A4D8               	btfss	status,2,c
 12692  004D14  D022               	goto	l20343
 12693                           
 12694                           ; BSR set to: 1
 12695  004D16  5112               	movf	(_var_sys+18)& (0+255),w,b	;volatile
 12696  004D18  A4D8               	btfss	status,2,c
 12697  004D1A  D01F               	goto	l20343
 12698                           
 12699                           ; BSR set to: 1
 12700                           ;outputs_MC50.c: 589:         {;outputs_MC50.c: 592:             ts_system.TimeCurrentWa
      +                          itForAlarm=(1000/50);
 12701  004D1C  0E00               	movlw	0
 12702  004D1E  6FC9               	movwf	(_ts_system+47)& (0+255),b	;volatile
 12703  004D20  0E14               	movlw	20
 12704  004D22  6FC8               	movwf	(_ts_system+46)& (0+255),b	;volatile
 12705                           
 12706                           ;outputs_MC50.c: 594:             if (var_sys_NVM.softstop > 0){
 12707  004D24  0100               	movlb	0	; () banked
 12708  004D26  51AB               	movf	(_var_sys_NVM+19)& (0+255),w,b	;volatile
 12709  004D28  B4D8               	btfsc	status,2,c
 12710  004D2A  D008               	goto	l20335
 12711                           
 12712                           ; BSR set to: 0
 12713                           ;outputs_MC50.c: 595:                 var_sys.AutoInversionActive = NO;
 12714  004D2C  0E00               	movlw	0
 12715  004D2E  0101               	movlb	1	; () banked
 12716  004D30  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 12717                           
 12718                           ;outputs_MC50.c: 596:                 var_sys.AutoInversionActiveStop = YES;
 12719  004D32  0E01               	movlw	1
 12720  004D34  6F12               	movwf	(_var_sys+18)& (0+255),b	;volatile
 12721                           
 12722                           ; BSR set to: 1
 12723                           ;outputs_MC50.c: 597:                 InitSoftStop();
 12724  004D36  EC7A  F043         	call	_InitSoftStop	;wreg free
 12725                           
 12726                           ;outputs_MC50.c: 598:             }else{
 12727  004D3A  D00F               	goto	l20343
 12728  004D3C                     l20335:
 12729                           
 12730                           ; BSR set to: 0
 12731                           ;outputs_MC50.c: 599:                 ts_system.TimeStopedBeforeDecelaration=( 500/50);
 12732  004D3C  0E00               	movlw	0
 12733  004D3E  0101               	movlb	1	; () banked
 12734  004D40  6FC7               	movwf	(_ts_system+45)& (0+255),b	;volatile
 12735  004D42  0E0A               	movlw	10
 12736  004D44  6FC6               	movwf	(_ts_system+44)& (0+255),b	;volatile
 12737                           
 12738                           ;outputs_MC50.c: 600:                  var_sys.AutoInversionActiveStop = NO;
 12739  004D46  0E00               	movlw	0
 12740  004D48  6F12               	movwf	(_var_sys+18)& (0+255),b	;volatile
 12741                           
 12742                           ; BSR set to: 1
 12743                           ;outputs_MC50.c: 601:                 ControlDecelarationFactor();
 12744  004D4A  EC11  F048         	call	_ControlDecelarationFactor	;wreg free
 12745                           
 12746                           ; BSR set to: 1
 12747                           ;outputs_MC50.c: 602:                 powerControl_st.decelarationActive=YES;
 12748  004D4E  0E01               	movlw	1
 12749  004D50  6F7B               	movwf	_powerControl_st& (0+255),b
 12750                           
 12751                           ; BSR set to: 1
 12752                           ;outputs_MC50.c: 603:                 var_sys.velocityFactor=0;
 12753  004D52  0E00               	movlw	0
 12754  004D54  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 12755  004D56  0E00               	movlw	0
 12756  004D58  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 12757  004D5A                     l20343:
 12758                           
 12759                           ;outputs_MC50.c: 607:         if ((var_sys.velocityFactorstop <= 0)&&(var_sys.AutoInvers
      +                          ionActiveStop == YES) && (var_sys_NVM.softstop > 0))
 12760  004D5A  0101               	movlb	1	; () banked
 12761  004D5C  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 12762  004D5E  D7AE               	goto	u23470
 12763  004D60  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 12764  004D62  E135               	bnz	l2306
 12765  004D64  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 12766  004D66  B0D8               	btfsc	status,0,c
 12767  004D68  0012               	return	
 12768  004D6A  D7A8               	goto	u23470
 12769  004D6C                     l20357:
 12770  004D6C  0101               	movlb	1	; () banked
 12771  004D6E  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 12772  004D70  D012               	goto	l20365
 12773  004D72  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 12774  004D74  E103               	bnz	u23610
 12775  004D76  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 12776  004D78  A0D8               	btfss	status,0,c
 12777  004D7A  D00D               	goto	l20365
 12778  004D7C                     u23610:
 12779                           
 12780                           ; BSR set to: 1
 12781  004D7C  5100               	movf	_var_sys& (0+255),w,b	;volatile
 12782  004D7E  B4D8               	btfsc	status,2,c
 12783  004D80  D00A               	goto	l20365
 12784                           
 12785                           ; BSR set to: 1
 12786                           ;outputs_MC50.c: 618:     {;outputs_MC50.c: 619:         var_sys.velocityFactorstop=(var
      +                          _sys.velocityFactorstop)- var_sys.SoftStopDecrementControl;
 12787  004D82  5113               	movf	(_var_sys+19)& (0+255),w,b	;volatile
 12788  004D84  5D10               	subwf	(_var_sys+16)& (0+255),w,b	;volatile
 12789  004D86  6F10               	movwf	(_var_sys+16)& (0+255),b	;volatile
 12790  004D88  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 12791  004D8A  A0D8               	btfss	status,0,c
 12792  004D8C  0511               	decf	(_var_sys+17)& (0+255),w,b	;volatile
 12793  004D8E  6F11               	movwf	(_var_sys+17)& (0+255),b	;volatile
 12794  004D90                     l20363:
 12795                           
 12796                           ; BSR set to: 1
 12797                           ;outputs_MC50.c: 620:         powerControl_st.decelarationActive=NO;
 12798  004D90  0E00               	movlw	0
 12799  004D92  6F7B               	movwf	_powerControl_st& (0+255),b
 12800                           
 12801                           ;outputs_MC50.c: 623:     }
 12802  004D94  0012               	return	
 12803  004D96                     l20365:
 12804                           
 12805                           ; BSR set to: 1
 12806  004D96  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 12807  004D98  D010               	goto	l20373
 12808  004D9A  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 12809  004D9C  E103               	bnz	u23630
 12810  004D9E  050E               	decf	(_var_sys+14)& (0+255),w,b	;volatile
 12811  004DA0  A0D8               	btfss	status,0,c
 12812  004DA2  D00B               	goto	l20373
 12813  004DA4                     u23630:
 12814                           
 12815                           ; BSR set to: 1
 12816  004DA4  5100               	movf	_var_sys& (0+255),w,b	;volatile
 12817  004DA6  B4D8               	btfsc	status,2,c
 12818  004DA8  D008               	goto	l20373
 12819                           
 12820                           ; BSR set to: 1
 12821                           ;outputs_MC50.c: 626:     {;outputs_MC50.c: 627:         var_sys.velocityFactor=(var_sys
      +                          .velocityFactor)-var_sys.SoftStartDecrementControl;
 12822  004DAA  5114               	movf	(_var_sys+20)& (0+255),w,b	;volatile
 12823  004DAC  5D0E               	subwf	(_var_sys+14)& (0+255),w,b	;volatile
 12824  004DAE  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 12825  004DB0  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 12826  004DB2  A0D8               	btfss	status,0,c
 12827  004DB4  050F               	decf	(_var_sys+15)& (0+255),w,b	;volatile
 12828  004DB6  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 12829  004DB8  D7EB               	goto	l20363
 12830  004DBA                     l20373:
 12831                           
 12832                           ; BSR set to: 1
 12833                           ;outputs_MC50.c: 634:     {;outputs_MC50.c: 635:          var_sys.velocityFactorstop = 0
      +                          ;
 12834  004DBA  0E00               	movlw	0
 12835  004DBC  6F11               	movwf	(_var_sys+17)& (0+255),b	;volatile
 12836  004DBE  0E00               	movlw	0
 12837  004DC0  6F10               	movwf	(_var_sys+16)& (0+255),b	;volatile
 12838                           
 12839                           ;outputs_MC50.c: 636:          var_sys.velocityFactor=0;
 12840  004DC2  0E00               	movlw	0
 12841  004DC4  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 12842  004DC6  0E00               	movlw	0
 12843  004DC8  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 12844                           
 12845                           ;outputs_MC50.c: 637:          powerControl_st.decelarationActive=NO;
 12846  004DCA  0E00               	movlw	0
 12847  004DCC  6F7B               	movwf	_powerControl_st& (0+255),b
 12848  004DCE                     l2306:
 12849  004DCE  0012               	return		;funcret
 12850  004DD0                     __end_of_controlVelocity:
 12851                           	callstack 0
 12852                           
 12853 ;; *************** function _getStateOpenPosition *****************
 12854 ;; Defined at:
 12855 ;;		line 470 in file "outputs_MC50.c"
 12856 ;; Parameters:    Size  Location     Type
 12857 ;;  stateMotor      1    wreg     enum E10381
 12858 ;; Auto vars:     Size  Location     Type
 12859 ;;  stateMotor      1    1[BANK0 ] enum E10381
 12860 ;;  state           1    0[BANK0 ] _Bool 
 12861 ;; Return value:  Size  Location     Type
 12862 ;;                  1    wreg      _Bool 
 12863 ;; Registers used:
 12864 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12865 ;; Tracked objects:
 12866 ;;		On entry : 3F/1
 12867 ;;		On exit  : 3F/0
 12868 ;;		Unchanged: 0/0
 12869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12870 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12871 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12872 ;;      Temps:          9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12873 ;;      Totals:         9       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12874 ;;Total ram usage:       11 bytes
 12875 ;; Hardware stack levels used: 1
 12876 ;; Hardware stack levels required when called: 6
 12877 ;; This function calls:
 12878 ;;		___lmul
 12879 ;;		_getTimeDecelaration
 12880 ;; This function is called by:
 12881 ;;		_controlVelocity
 12882 ;; This function uses a non-reentrant model
 12883 ;;
 12884                           
 12885                           	psect	text30
 12886  0065D4                     __ptext30:
 12887                           	callstack 0
 12888  0065D4                     _getStateOpenPosition:
 12889                           	callstack 21
 12890                           
 12891                           ;incstack = 0
 12892                           ;getStateOpenPosition@stateMotor stored from wreg
 12893  0065D4  0100               	movlb	0	; () banked
 12894  0065D6  6FD9               	movwf	getStateOpenPosition@stateMotor& (0+255),b
 12895                           
 12896                           ;outputs_MC50.c: 470: _Bool getStateOpenPosition(stateMotor_enum stateMotor);outputs_MC5
      +                          0.c: 471: {;outputs_MC50.c: 472:     _Bool state=0;
 12897  0065D8  0E00               	movlw	0
 12898  0065DA  0100               	movlb	0	; () banked
 12899  0065DC  6FD8               	movwf	getStateOpenPosition@state& (0+255),b
 12900                           
 12901                           ; BSR set to: 0
 12902                           ;outputs_MC50.c: 473:     if(var_sys.PositionIsLost==YES)
 12903  0065DE  0101               	movlb	1	; () banked
 12904  0065E0  0548               	decf	(_var_sys+72)& (0+255),w,b	;volatile
 12905  0065E2  A4D8               	btfss	status,2,c
 12906  0065E4  D002               	goto	l19741
 12907  0065E6                     u22610:
 12908                           
 12909                           ;outputs_MC50.c: 474:     {;outputs_MC50.c: 475:         state=1;
 12910  0065E6  0E01               	movlw	1
 12911  0065E8  D046               	goto	L71
 12912  0065EA                     l19741:
 12913                           
 12914                           ; BSR set to: 1
 12915  0065EA  0100               	movlb	0	; () banked
 12916  0065EC  519C               	movf	(_var_sys_NVM+4)& (0+255),w,b	;volatile
 12917  0065EE  0D14               	mullw	20
 12918  0065F0  CFF3 F032          	movff	prodl,??_getStateOpenPosition
 12919  0065F4  CFF4 F033          	movff	prodh,??_getStateOpenPosition+1
 12920  0065F8  0E00               	movlw	0
 12921  0065FA  BE33               	btfsc	(??_getStateOpenPosition+1)^0,7,c
 12922  0065FC  0EFF               	movlw	255
 12923  0065FE  6E34               	movwf	(??_getStateOpenPosition+2)^0,c
 12924  006600  6E35               	movwf	(??_getStateOpenPosition+3)^0,c
 12925  006602  51CC               	movf	(_var_sys_NVM+52)& (0+255),w,b	;volatile
 12926  006604  5C32               	subwf	??_getStateOpenPosition^0,w,c
 12927  006606  51CD               	movf	(_var_sys_NVM+53)& (0+255),w,b	;volatile
 12928  006608  5833               	subwfb	(??_getStateOpenPosition+1)^0,w,c
 12929  00660A  51CE               	movf	(_var_sys_NVM+54)& (0+255),w,b	;volatile
 12930  00660C  5834               	subwfb	(??_getStateOpenPosition+2)^0,w,c
 12931  00660E  51CF               	movf	(_var_sys_NVM+55)& (0+255),w,b	;volatile
 12932  006610  5835               	subwfb	(??_getStateOpenPosition+3)^0,w,c
 12933  006612  B0D8               	btfsc	status,0,c
 12934  006614  D033               	goto	l19755
 12935                           
 12936                           ; BSR set to: 0
 12937  006616  0E02               	movlw	2
 12938  006618  19D9               	xorwf	getStateOpenPosition@stateMotor& (0+255),w,b
 12939  00661A  A4D8               	btfss	status,2,c
 12940  00661C  D02F               	goto	l19755
 12941                           
 12942                           ; BSR set to: 0
 12943                           ;outputs_MC50.c: 478:     {;outputs_MC50.c: 479:         if(var_sys_NVM.walkTime<(var_sy
      +                          s_NVM.decelarationOpen/2))
 12944  00661E  90D8               	bcf	status,0,c
 12945  006620  3198               	rrcf	_var_sys_NVM& (0+255),w,b	;volatile
 12946  006622  619C               	cpfslt	(_var_sys_NVM+4)& (0+255),b	;volatile
 12947  006624  D001               	goto	l19749
 12948  006626  D7DF               	goto	u22610
 12949  006628                     l19749:
 12950                           
 12951                           ; BSR set to: 0
 12952  006628  519C               	movf	(_var_sys_NVM+4)& (0+255),w,b	;volatile
 12953  00662A  0D14               	mullw	20
 12954  00662C  CFF3 F032          	movff	prodl,??_getStateOpenPosition
 12955  006630  CFF4 F033          	movff	prodh,??_getStateOpenPosition+1
 12956  006634  0E00               	movlw	0
 12957  006636  BE33               	btfsc	(??_getStateOpenPosition+1)^0,7,c
 12958  006638  0EFF               	movlw	255
 12959  00663A  6E34               	movwf	(??_getStateOpenPosition+2)^0,c
 12960  00663C  6E35               	movwf	(??_getStateOpenPosition+3)^0,c
 12961  00663E  0ED8               	movlw	216
 12962  006640  2432               	addwf	??_getStateOpenPosition^0,w,c
 12963  006642  6E36               	movwf	(??_getStateOpenPosition+4)^0,c
 12964  006644  0EFF               	movlw	255
 12965  006646  2033               	addwfc	(??_getStateOpenPosition+1)^0,w,c
 12966  006648  6E37               	movwf	(??_getStateOpenPosition+5)^0,c
 12967  00664A  0EFF               	movlw	255
 12968  00664C  2034               	addwfc	(??_getStateOpenPosition+2)^0,w,c
 12969  00664E  6E38               	movwf	(??_getStateOpenPosition+6)^0,c
 12970  006650  0EFF               	movlw	255
 12971  006652  2035               	addwfc	(??_getStateOpenPosition+3)^0,w,c
 12972  006654  6E39               	movwf	(??_getStateOpenPosition+7)^0,c
 12973  006656  0101               	movlb	1	; () banked
 12974  006658  511E               	movf	(_var_sys+30)& (0+255),w,b	;volatile
 12975  00665A  5C36               	subwf	(??_getStateOpenPosition+4)^0,w,c
 12976  00665C  511F               	movf	(_var_sys+31)& (0+255),w,b	;volatile
 12977  00665E  5837               	subwfb	(??_getStateOpenPosition+5)^0,w,c
 12978  006660  5120               	movf	(_var_sys+32)& (0+255),w,b	;volatile
 12979  006662  5838               	subwfb	(??_getStateOpenPosition+6)^0,w,c
 12980  006664  5039               	movf	(??_getStateOpenPosition+7)^0,w,c
 12981  006666  0A80               	xorlw	128
 12982  006668  6E3A               	movwf	(??_getStateOpenPosition+8)^0,c
 12983  00666A  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 12984  00666C  0A80               	xorlw	128
 12985  00666E  583A               	subwfb	(??_getStateOpenPosition+8)^0,w,c
 12986  006670  A0D8               	btfss	status,0,c
 12987  006672  D7B9               	goto	u22610
 12988                           
 12989                           ; BSR set to: 1
 12990                           ;outputs_MC50.c: 488:         {;outputs_MC50.c: 489:             state= 0;
 12991  006674  0E00               	movlw	0
 12992  006676                     L71:
 12993  006676  0100               	movlb	0	; () banked
 12994  006678  6FD8               	movwf	getStateOpenPosition@state& (0+255),b
 12995  00667A  D032               	goto	l2249
 12996  00667C                     l19755:
 12997                           
 12998                           ; BSR set to: 0
 12999  00667C  0E02               	movlw	2
 13000  00667E  19D9               	xorwf	getStateOpenPosition@stateMotor& (0+255),w,b
 13001  006680  B4D8               	btfsc	status,2,c
 13002  006682  D003               	goto	u22670
 13003                           
 13004                           ; BSR set to: 0
 13005  006684  05D9               	decf	getStateOpenPosition@stateMotor& (0+255),w,b
 13006  006686  A4D8               	btfss	status,2,c
 13007  006688  D02B               	goto	l2249
 13008  00668A                     u22670:
 13009                           
 13010                           ; BSR set to: 0
 13011                           ;outputs_MC50.c: 493:     {;outputs_MC50.c: 494:          if((var_sys_NVM.learningTimeTo
      +                          Open)<(((unsigned long)var_sys_NVM.decelarationOpen*( 500/50))))
 13012  00668A  5198               	movf	_var_sys_NVM& (0+255),w,b	;volatile
 13013  00668C  6E1D               	movwf	___lmul@multiplier^0,c
 13014  00668E  6A1E               	clrf	(___lmul@multiplier+1)^0,c
 13015  006690  6A1F               	clrf	(___lmul@multiplier+2)^0,c
 13016  006692  6A20               	clrf	(___lmul@multiplier+3)^0,c
 13017  006694  0E0A               	movlw	10
 13018  006696  6E21               	movwf	___lmul@multiplicand^0,c
 13019  006698  0E00               	movlw	0
 13020  00669A  6E22               	movwf	(___lmul@multiplicand+1)^0,c
 13021  00669C  0E00               	movlw	0
 13022  00669E  6E23               	movwf	(___lmul@multiplicand+2)^0,c
 13023  0066A0  0E00               	movlw	0
 13024  0066A2  6E24               	movwf	(___lmul@multiplicand+3)^0,c
 13025  0066A4  EC33  F042         	call	___lmul	;wreg free
 13026  0066A8  501D               	movf	?___lmul^0,w,c
 13027  0066AA  0100               	movlb	0	; () banked
 13028  0066AC  5DCC               	subwf	(_var_sys_NVM+52)& (0+255),w,b	;volatile
 13029  0066AE  501E               	movf	(?___lmul+1)^0,w,c
 13030  0066B0  59CD               	subwfb	(_var_sys_NVM+53)& (0+255),w,b	;volatile
 13031  0066B2  501F               	movf	(?___lmul+2)^0,w,c
 13032  0066B4  59CE               	subwfb	(_var_sys_NVM+54)& (0+255),w,b	;volatile
 13033  0066B6  5020               	movf	(?___lmul+3)^0,w,c
 13034  0066B8  59CF               	subwfb	(_var_sys_NVM+55)& (0+255),w,b	;volatile
 13035  0066BA  A0D8               	btfss	status,0,c
 13036  0066BC  D794               	goto	u22610
 13037                           
 13038                           ; BSR set to: 0
 13039  0066BE  51D9               	movf	getStateOpenPosition@stateMotor& (0+255),w,b
 13040  0066C0  ECF7  F035         	call	_getTimeDecelaration
 13041  0066C4  0101               	movlb	1	; () banked
 13042  0066C6  511E               	movf	(_var_sys+30)& (0+255),w,b	;volatile
 13043  0066C8  5C29               	subwf	?_getTimeDecelaration^0,w,c
 13044  0066CA  511F               	movf	(_var_sys+31)& (0+255),w,b	;volatile
 13045  0066CC  582A               	subwfb	(?_getTimeDecelaration+1)^0,w,c
 13046  0066CE  5120               	movf	(_var_sys+32)& (0+255),w,b	;volatile
 13047  0066D0  582B               	subwfb	(?_getTimeDecelaration+2)^0,w,c
 13048  0066D2  502C               	movf	(?_getTimeDecelaration+3)^0,w,c
 13049  0066D4  0A80               	xorlw	128
 13050  0066D6  6E32               	movwf	??_getStateOpenPosition^0,c
 13051  0066D8  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 13052  0066DA  0A80               	xorlw	128
 13053  0066DC  5832               	subwfb	??_getStateOpenPosition^0,w,c
 13054  0066DE  D7C8               	goto	L72
 13055  0066E0                     l2249:
 13056                           
 13057                           ; BSR set to: 0
 13058                           ;outputs_MC50.c: 507:     return state;
 13059  0066E0  51D8               	movf	getStateOpenPosition@state& (0+255),w,b
 13060                           
 13061                           ; BSR set to: 0
 13062  0066E2  0012               	return		;funcret
 13063  0066E4                     __end_of_getStateOpenPosition:
 13064                           	callstack 0
 13065                           
 13066 ;; *************** function _InitSoftStop *****************
 13067 ;; Defined at:
 13068 ;;		line 849 in file "sm_ControlGate_MC50.c"
 13069 ;; Parameters:    Size  Location     Type
 13070 ;;		None
 13071 ;; Auto vars:     Size  Location     Type
 13072 ;;		None
 13073 ;; Return value:  Size  Location     Type
 13074 ;;                  1    wreg      void 
 13075 ;; Registers used:
 13076 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 13077 ;; Tracked objects:
 13078 ;;		On entry : 3F/1
 13079 ;;		On exit  : 3E/0
 13080 ;;		Unchanged: 0/0
 13081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13084 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13085 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13086 ;;Total ram usage:        1 bytes
 13087 ;; Hardware stack levels used: 1
 13088 ;; Hardware stack levels required when called: 5
 13089 ;; This function calls:
 13090 ;;		_GetMotorPower
 13091 ;; This function is called by:
 13092 ;;		_controlVelocity
 13093 ;; This function uses a non-reentrant model
 13094 ;;
 13095                           
 13096                           	psect	text31
 13097  0086F4                     __ptext31:
 13098                           	callstack 0
 13099  0086F4                     _InitSoftStop:
 13100                           	callstack 22
 13101                           
 13102                           ; BSR set to: 1
 13103                           ;sm_ControlGate_MC50.c: 850:     if (((var_sys.AutoInversionActiveStop == YES)|| (var_sy
      +                          s.AutoInversionActive == YES))&&(var_sys_NVM.softstop >0)) {
 13104                           
 13105                           ; BSR set to: 0
 13106                           ;incstack = 0
 13107  0086F4  0512               	decf	(_var_sys+18)& (0+255),w,b	;volatile
 13108  0086F6  B4D8               	btfsc	status,2,c
 13109  0086F8  D003               	goto	u22710
 13110                           
 13111                           ; BSR set to: 1
 13112  0086FA  0527               	decf	(_var_sys+39)& (0+255),w,b	;volatile
 13113  0086FC  A4D8               	btfss	status,2,c
 13114  0086FE  0012               	return	
 13115  008700                     u22710:
 13116                           
 13117                           ; BSR set to: 1
 13118  008700  0100               	movlb	0	; () banked
 13119  008702  51AB               	movf	(_var_sys_NVM+19)& (0+255),w,b	;volatile
 13120  008704  B4D8               	btfsc	status,2,c
 13121  008706  0012               	return	
 13122                           
 13123                           ; BSR set to: 0
 13124                           ;sm_ControlGate_MC50.c: 853:         var_sys.velocityFactor = 0;
 13125  008708  0E00               	movlw	0
 13126  00870A  0101               	movlb	1	; () banked
 13127  00870C  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 13128  00870E  0E00               	movlw	0
 13129  008710  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 13130                           
 13131                           ;sm_ControlGate_MC50.c: 854:         var_sys.velocityFactorstop = 0;
 13132  008712  0E00               	movlw	0
 13133  008714  6F11               	movwf	(_var_sys+17)& (0+255),b	;volatile
 13134  008716  0E00               	movlw	0
 13135  008718  6F10               	movwf	(_var_sys+16)& (0+255),b	;volatile
 13136                           
 13137                           ; BSR set to: 1
 13138                           ;sm_ControlGate_MC50.c: 855:         var_sys.velocityFactorstop = GetMotorPower();
 13139  00871A  ECA4  F037         	call	_GetMotorPower	;wreg free
 13140  00871E  6E14               	movwf	??_InitSoftStop^0,c
 13141  008720  5014               	movf	??_InitSoftStop^0,w,c
 13142  008722  6F10               	movwf	(_var_sys+16)& (0+255),b	;volatile
 13143  008724  6B11               	clrf	(_var_sys+17)& (0+255),b	;volatile
 13144                           
 13145                           ; BSR set to: 1
 13146                           ;sm_ControlGate_MC50.c: 859:         ts_system.timeSoftStop = var_sys.velocityFactorstop
      +                           + 1;
 13147  008726  0E01               	movlw	1
 13148  008728  2510               	addwf	(_var_sys+16)& (0+255),w,b	;volatile
 13149  00872A  6FB2               	movwf	(_ts_system+24)& (0+255),b	;volatile
 13150  00872C  0E00               	movlw	0
 13151  00872E  2111               	addwfc	(_var_sys+17)& (0+255),w,b	;volatile
 13152  008730  6FB3               	movwf	(_ts_system+25)& (0+255),b	;volatile
 13153                           
 13154                           ; BSR set to: 1
 13155                           ;sm_ControlGate_MC50.c: 861:         var_sys.SoftStopDecrementControl = 10 - var_sys_NVM
      +                          .softstop;
 13156  008732  0100               	movlb	0	; () banked
 13157  008734  51AB               	movf	(_var_sys_NVM+19)& (0+255),w,b	;volatile
 13158  008736  080A               	sublw	10
 13159  008738  0101               	movlb	1	; () banked
 13160  00873A  6F13               	movwf	(_var_sys+19)& (0+255),b	;volatile
 13161  00873C  0012               	return		;funcret
 13162  00873E                     __end_of_InitSoftStop:
 13163                           	callstack 0
 13164                           
 13165 ;; *************** function _ControlDecelarationFactor *****************
 13166 ;; Defined at:
 13167 ;;		line 463 in file "outputs_MC50.c"
 13168 ;; Parameters:    Size  Location     Type
 13169 ;;		None
 13170 ;; Auto vars:     Size  Location     Type
 13171 ;;		None
 13172 ;; Return value:  Size  Location     Type
 13173 ;;                  1    wreg      void 
 13174 ;; Registers used:
 13175 ;;		wreg, status,2, status,0, prodl, prodh
 13176 ;; Tracked objects:
 13177 ;;		On entry : 3E/1
 13178 ;;		On exit  : 3F/1
 13179 ;;		Unchanged: 0/0
 13180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13182 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13184 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13185 ;;Total ram usage:        0 bytes
 13186 ;; Hardware stack levels used: 1
 13187 ;; Hardware stack levels required when called: 4
 13188 ;; This function calls:
 13189 ;;		Nothing
 13190 ;; This function is called by:
 13191 ;;		_controlVelocity
 13192 ;; This function uses a non-reentrant model
 13193 ;;
 13194                           
 13195                           	psect	text32
 13196  009022                     __ptext32:
 13197                           	callstack 0
 13198  009022                     _ControlDecelarationFactor:
 13199                           	callstack 23
 13200                           
 13201                           ;outputs_MC50.c: 465:     powerControl_st.decelarationCyclesOn=1;
 13202                           
 13203                           ;incstack = 0
 13204  009022  0E01               	movlw	1
 13205  009024  0101               	movlb	1	; () banked
 13206  009026  6F7C               	movwf	(_powerControl_st+1)& (0+255),b
 13207                           
 13208                           ;outputs_MC50.c: 466:     powerControl_st.decelarationCyclesOff=2;
 13209  009028  0E02               	movlw	2
 13210  00902A  6F7D               	movwf	(_powerControl_st+2)& (0+255),b
 13211                           
 13212                           ; BSR set to: 1
 13213                           ;outputs_MC50.c: 467:     powerControl_st.decelarationPower=var_sys_NVM.velocityDecelara
      +                          tion*var_sys.Torquerelanty;
 13214  00902C  0100               	movlb	0	; () banked
 13215  00902E  51B0               	movf	(_var_sys_NVM+24)& (0+255),w,b	;volatile
 13216  009030  0101               	movlb	1	; () banked
 13217  009032  0315               	mulwf	(_var_sys+21)& (0+255),b	;volatile
 13218  009034  CFF3 F17E          	movff	prodl,_powerControl_st+3
 13219                           
 13220                           ; BSR set to: 1
 13221  009038  0012               	return		;funcret
 13222  00903A                     __end_of_ControlDecelarationFactor:
 13223                           	callstack 0
 13224                           
 13225 ;; *************** function _actionZone_Opened *****************
 13226 ;; Defined at:
 13227 ;;		line 514 in file "sm_ControlGate_MC50.c"
 13228 ;; Parameters:    Size  Location     Type
 13229 ;;		None
 13230 ;; Auto vars:     Size  Location     Type
 13231 ;;  typeOpenOrde    1   32[COMRAM] enum E10372
 13232 ;;  securityClos    1   31[COMRAM] enum E10397
 13233 ;; Return value:  Size  Location     Type
 13234 ;;                  1    wreg      void 
 13235 ;; Registers used:
 13236 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13237 ;; Tracked objects:
 13238 ;;		On entry : 3F/0
 13239 ;;		On exit  : 3E/0
 13240 ;;		Unchanged: 0/0
 13241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13243 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13245 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13246 ;;Total ram usage:        2 bytes
 13247 ;; Hardware stack levels used: 1
 13248 ;; Hardware stack levels required when called: 7
 13249 ;; This function calls:
 13250 ;;		_CloseOrder
 13251 ;;		_GetOpenOrder
 13252 ;;		_GetSecurityStateInClosing
 13253 ;;		_InitFullAutoTime
 13254 ;;		_InitWalkAutoTime
 13255 ;;		_OpenFullOrder
 13256 ;;		_OpenWalkOrder
 13257 ;;		_VerifyFollowMe
 13258 ;; This function is called by:
 13259 ;;		_sm_execute_ControlGate
 13260 ;; This function uses a non-reentrant model
 13261 ;;
 13262                           
 13263                           	psect	text33
 13264  004DD0                     __ptext33:
 13265                           	callstack 0
 13266  004DD0                     _actionZone_Opened:
 13267                           	callstack 22
 13268                           
 13269                           ; BSR set to: 0
 13270                           ;sm_ControlGate_MC50.c: 515:     StateEnum securityClosing = GetSecurityStateInClosing()
      +                          ;
 13271                           
 13272                           ; BSR set to: 1
 13273                           ;incstack = 0
 13274  004DD0  EC74  F039         	call	_GetSecurityStateInClosing	;wreg free
 13275  004DD4  6E20               	movwf	actionZone_Opened@securityClosing^0,c
 13276                           
 13277                           ;sm_ControlGate_MC50.c: 517:     if ((securityClosing != NO) && (Abertura_pedonal == 0))
      +                           {
 13278  004DD6  5020               	movf	actionZone_Opened@securityClosing^0,w,c
 13279  004DD8  B4D8               	btfsc	status,2,c
 13280  004DDA  D007               	goto	l21527
 13281  004DDC  0101               	movlb	1	; () banked
 13282  004DDE  518D               	movf	_Abertura_pedonal& (0+255),w,b
 13283  004DE0  A4D8               	btfss	status,2,c
 13284  004DE2  D003               	goto	l21527
 13285                           
 13286                           ; BSR set to: 1
 13287                           ;sm_ControlGate_MC50.c: 518:         InitFullAutoTime();
 13288  004DE4  ECEA  F047         	call	_InitFullAutoTime	;wreg free
 13289                           
 13290                           ;sm_ControlGate_MC50.c: 519:     }
 13291  004DE8  D008               	goto	l2722
 13292  004DEA                     l21527:
 13293  004DEA  5020               	movf	actionZone_Opened@securityClosing^0,w,c
 13294  004DEC  B4D8               	btfsc	status,2,c
 13295  004DEE  D005               	goto	l2722
 13296  004DF0  0101               	movlb	1	; () banked
 13297  004DF2  058D               	decf	_Abertura_pedonal& (0+255),w,b
 13298  004DF4  B4D8               	btfsc	status,2,c
 13299                           
 13300                           ; BSR set to: 1
 13301                           ;sm_ControlGate_MC50.c: 521:          InitWalkAutoTime();
 13302  004DF6  EC6F  F048         	call	_InitWalkAutoTime	;wreg free
 13303  004DFA                     l2722:
 13304                           
 13305                           ;sm_ControlGate_MC50.c: 524:     TypeCMD typeOpenOrder = GetOpenOrder();
 13306  004DFA  ECC8  F028         	call	_GetOpenOrder	;wreg free
 13307  004DFE  6E21               	movwf	actionZone_Opened@typeOpenOrder^0,c
 13308                           
 13309                           ;sm_ControlGate_MC50.c: 526:     VerifyFollowMe(securityClosing);
 13310  004E00  5020               	movf	actionZone_Opened@securityClosing^0,w,c
 13311  004E02  EC42  F047         	call	_VerifyFollowMe
 13312                           
 13313                           ;sm_ControlGate_MC50.c: 530:     if ((PORTBbits.RB1==0) && (var_sys_NVM.autoTimeFullClos
      +                          e != 0)&&(var_sys.AutoCloseActive != 0) && (button_struct.current != 0x35)&& (var_sys_NV
      +                          M.operationMode == ModoCondominio)){
 13314  004E06  B28E               	btfsc	142,1,c	;volatile
 13315  004E08  D013               	goto	l2724
 13316  004E0A  0100               	movlb	0	; () banked
 13317  004E0C  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 13318  004E0E  B4D8               	btfsc	status,2,c
 13319  004E10  D00F               	goto	l2724
 13320                           
 13321                           ; BSR set to: 0
 13322  004E12  0101               	movlb	1	; () banked
 13323  004E14  5123               	movf	(_var_sys+35)& (0+255),w,b	;volatile
 13324  004E16  B4D8               	btfsc	status,2,c
 13325  004E18  D00B               	goto	l2724
 13326                           
 13327                           ; BSR set to: 1
 13328  004E1A  0E35               	movlw	53
 13329  004E1C  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 13330  004E1E  B4D8               	btfsc	status,2,c
 13331  004E20  D007               	goto	l2724
 13332                           
 13333                           ; BSR set to: 1
 13334  004E22  0E02               	movlw	2
 13335  004E24  0100               	movlb	0	; () banked
 13336  004E26  19A4               	xorwf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 13337  004E28  A4D8               	btfss	status,2,c
 13338  004E2A  D002               	goto	l2724
 13339                           
 13340                           ; BSR set to: 0
 13341                           ;sm_ControlGate_MC50.c: 531:       typeOpenOrder = NoCMD;
 13342  004E2C  0E00               	movlw	0
 13343  004E2E  6E21               	movwf	actionZone_Opened@typeOpenOrder^0,c
 13344  004E30                     l2724:
 13345                           
 13346                           ;sm_ControlGate_MC50.c: 535:      if (typeOpenOrder != NoCMD)
 13347  004E30  5021               	movf	actionZone_Opened@typeOpenOrder^0,w,c
 13348  004E32  B4D8               	btfsc	status,2,c
 13349  004E34  D05D               	goto	l2725
 13350                           
 13351                           ;sm_ControlGate_MC50.c: 536:      {;sm_ControlGate_MC50.c: 539:         ts_system.timeSi
      +                          nalizationDigit = (1000/50) * 3;
 13352  004E36  0E00               	movlw	0
 13353  004E38  0101               	movlb	1	; () banked
 13354  004E3A  6FA7               	movwf	(_ts_system+13)& (0+255),b	;volatile
 13355  004E3C  0E3C               	movlw	60
 13356  004E3E  6FA6               	movwf	(_ts_system+12)& (0+255),b	;volatile
 13357                           
 13358                           ; BSR set to: 1
 13359                           ;sm_ControlGate_MC50.c: 541:        if ( var_sys_NVM.operationMode == ModoCondominio && 
      +                          var_sys_NVM.autoTimeFullClose == 0 && (typeOpenOrder == TypeFull|| typeOpenOrder == Type
      +                          FullClose ))
 13360  004E40  0E02               	movlw	2
 13361  004E42  0100               	movlb	0	; () banked
 13362  004E44  19A4               	xorwf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 13363  004E46  A4D8               	btfss	status,2,c
 13364  004E48  D00D               	goto	l21559
 13365                           
 13366                           ; BSR set to: 0
 13367  004E4A  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 13368  004E4C  A4D8               	btfss	status,2,c
 13369  004E4E  D00A               	goto	l21559
 13370                           
 13371                           ; BSR set to: 0
 13372  004E50  0421               	decf	actionZone_Opened@typeOpenOrder^0,w,c
 13373  004E52  B4D8               	btfsc	status,2,c
 13374  004E54  D004               	goto	u25240
 13375                           
 13376                           ; BSR set to: 0
 13377  004E56  0E04               	movlw	4
 13378  004E58  1821               	xorwf	actionZone_Opened@typeOpenOrder^0,w,c
 13379  004E5A  A4D8               	btfss	status,2,c
 13380  004E5C  D003               	goto	l21559
 13381  004E5E                     u25240:
 13382                           
 13383                           ;sm_ControlGate_MC50.c: 542:         {;sm_ControlGate_MC50.c: 544:             CloseOrde
      +                          r();
 13384  004E5E  ECE3  F046         	call	_CloseOrder	;wreg free
 13385                           
 13386                           ;sm_ControlGate_MC50.c: 546:         }
 13387  004E62  0012               	return	
 13388  004E64                     l21559:
 13389                           
 13390                           ; BSR set to: 0
 13391  004E64  51A8               	movf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 13392  004E66  B4D8               	btfsc	status,2,c
 13393  004E68  D014               	goto	l21573
 13394                           
 13395                           ; BSR set to: 0
 13396                           ;sm_ControlGate_MC50.c: 553:             if (typeOpenOrder == TypeFullOpen && var_sys.Fi
      +                          mCurso_OpenIsEnabled == NO && var_sys.Statedoorcontrol != st_Opened) {
 13397  004E6A  0E03               	movlw	3
 13398  004E6C  1821               	xorwf	actionZone_Opened@typeOpenOrder^0,w,c
 13399  004E6E  A4D8               	btfss	status,2,c
 13400  004E70  D00B               	goto	l21569
 13401                           
 13402                           ; BSR set to: 0
 13403  004E72  0101               	movlb	1	; () banked
 13404  004E74  5104               	movf	(_var_sys+4)& (0+255),w,b	;volatile
 13405  004E76  A4D8               	btfss	status,2,c
 13406  004E78  D007               	goto	l21569
 13407                           
 13408                           ; BSR set to: 1
 13409  004E7A  0E04               	movlw	4
 13410  004E7C  191C               	xorwf	(_var_sys+28)& (0+255),w,b	;volatile
 13411  004E7E  B4D8               	btfsc	status,2,c
 13412  004E80  D003               	goto	l21569
 13413  004E82                     u25280:
 13414                           
 13415                           ; BSR set to: 1
 13416                           ;sm_ControlGate_MC50.c: 555:                 OpenFullOrder();
 13417  004E82  ECF6  F046         	call	_OpenFullOrder	;wreg free
 13418                           
 13419                           ;sm_ControlGate_MC50.c: 556:             } else if (typeOpenOrder == TypeFullClose) {
 13420  004E86  0012               	return	
 13421  004E88                     l21569:
 13422  004E88  0E04               	movlw	4
 13423  004E8A  1821               	xorwf	actionZone_Opened@typeOpenOrder^0,w,c
 13424  004E8C  A4D8               	btfss	status,2,c
 13425  004E8E  0012               	return	
 13426  004E90  D7E6               	goto	u25240
 13427  004E92                     l21573:
 13428                           
 13429                           ; BSR set to: 0
 13430  004E92  0E03               	movlw	3
 13431  004E94  0101               	movlb	1	; () banked
 13432  004E96  190B               	xorwf	(_var_sys+11)& (0+255),w,b	;volatile
 13433  004E98  A4D8               	btfss	status,2,c
 13434  004E9A  D009               	goto	l21581
 13435                           
 13436                           ; BSR set to: 1
 13437  004E9C  0421               	decf	actionZone_Opened@typeOpenOrder^0,w,c
 13438  004E9E  A4D8               	btfss	status,2,c
 13439  004EA0  D006               	goto	l21581
 13440  004EA2                     u25310:
 13441                           
 13442                           ; BSR set to: 1
 13443                           ;sm_ControlGate_MC50.c: 563:             OpenFullOrder();
 13444  004EA2  ECF6  F046         	call	_OpenFullOrder	;wreg free
 13445  004EA6                     l21579:
 13446                           
 13447                           ;sm_ControlGate_MC50.c: 565:             var_sys.AutoInversionActive = NO;
 13448  004EA6  0E00               	movlw	0
 13449  004EA8  0101               	movlb	1	; () banked
 13450  004EAA  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 13451                           
 13452                           ;sm_ControlGate_MC50.c: 567:         } else if (var_sys.LastState == InClose && typeOpen
      +                          Order == TypeWalk) {
 13453  004EAC  0012               	return	
 13454  004EAE                     l21581:
 13455                           
 13456                           ; BSR set to: 1
 13457  004EAE  0E03               	movlw	3
 13458  004EB0  190B               	xorwf	(_var_sys+11)& (0+255),w,b	;volatile
 13459  004EB2  A4D8               	btfss	status,2,c
 13460  004EB4  D007               	goto	l21589
 13461                           
 13462                           ; BSR set to: 1
 13463  004EB6  0E02               	movlw	2
 13464  004EB8  1821               	xorwf	actionZone_Opened@typeOpenOrder^0,w,c
 13465  004EBA  A4D8               	btfss	status,2,c
 13466  004EBC  D003               	goto	l21589
 13467                           
 13468                           ; BSR set to: 1
 13469                           ;sm_ControlGate_MC50.c: 569:             OpenWalkOrder();
 13470  004EBE  ECBA  F03F         	call	_OpenWalkOrder	;wreg free
 13471  004EC2  D7F1               	goto	l21579
 13472  004EC4                     l21589:
 13473                           
 13474                           ; BSR set to: 1
 13475  004EC4  0E03               	movlw	3
 13476  004EC6  1821               	xorwf	actionZone_Opened@typeOpenOrder^0,w,c
 13477  004EC8  A4D8               	btfss	status,2,c
 13478  004ECA  D005               	goto	l21599
 13479                           
 13480                           ; BSR set to: 1
 13481                           ;sm_ControlGate_MC50.c: 574:             if (var_sys.Statedoorcontrol == st_Opened){
 13482  004ECC  0E04               	movlw	4
 13483  004ECE  191C               	xorwf	(_var_sys+28)& (0+255),w,b	;volatile
 13484  004ED0  B4D8               	btfsc	status,2,c
 13485  004ED2  0012               	return	
 13486  004ED4  D7E6               	goto	u25310
 13487  004ED6                     l21599:
 13488                           
 13489                           ; BSR set to: 1
 13490  004ED6  0100               	movlb	0	; () banked
 13491  004ED8  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 13492  004EDA  B4D8               	btfsc	status,2,c
 13493  004EDC  D007               	goto	l21605
 13494                           
 13495                           ; BSR set to: 0
 13496  004EDE  0E02               	movlw	2
 13497  004EE0  19A4               	xorwf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 13498  004EE2  A4D8               	btfss	status,2,c
 13499  004EE4  D003               	goto	l21605
 13500                           
 13501                           ; BSR set to: 0
 13502                           ;sm_ControlGate_MC50.c: 582:         {;sm_ControlGate_MC50.c: 584:             InitFullA
      +                          utoTime();
 13503  004EE6  ECEA  F047         	call	_InitFullAutoTime	;wreg free
 13504                           
 13505                           ;sm_ControlGate_MC50.c: 586:         }
 13506  004EEA  0012               	return	
 13507  004EEC                     l21605:
 13508                           
 13509                           ; BSR set to: 0
 13510  004EEC  5020               	movf	actionZone_Opened@securityClosing^0,w,c
 13511  004EEE  D7CE               	goto	L73
 13512  004EF0                     l2725:
 13513  004EF0  B28E               	btfsc	142,1,c	;volatile
 13514  004EF2  D00B               	goto	l21613
 13515  004EF4  0100               	movlb	0	; () banked
 13516  004EF6  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 13517  004EF8  B4D8               	btfsc	status,2,c
 13518  004EFA  D007               	goto	l21613
 13519                           
 13520                           ; BSR set to: 0
 13521                           ;sm_ControlGate_MC50.c: 597:         ts_system.timeWaitToClose = ((int) var_sys_NVM.auto
      +                          TimeFullClose * (1000/50));
 13522  004EFC  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 13523  004EFE  0D14               	mullw	20
 13524  004F00  CFF3 F1AC          	movff	prodl,_ts_system+18	;volatile
 13525  004F04  CFF4 F1AD          	movff	prodh,_ts_system+19	;volatile
 13526                           
 13527                           ;sm_ControlGate_MC50.c: 599:     }
 13528  004F08  0012               	return	
 13529  004F0A                     l21613:
 13530  004F0A  0101               	movlb	1	; () banked
 13531  004F0C  053A               	decf	(_var_sys+58)& (0+255),w,b	;volatile
 13532  004F0E  A4D8               	btfss	status,2,c
 13533  004F10  D00F               	goto	l21623
 13534                           
 13535                           ; BSR set to: 1
 13536  004F12  5020               	movf	actionZone_Opened@securityClosing^0,w,c
 13537  004F14  A4D8               	btfss	status,2,c
 13538  004F16  D00C               	goto	l21623
 13539                           
 13540                           ; BSR set to: 1
 13541                           ;sm_ControlGate_MC50.c: 603:         var_sys.StateFollowIsOn = NO;
 13542  004F18  0E00               	movlw	0
 13543  004F1A  6F3A               	movwf	(_var_sys+58)& (0+255),b	;volatile
 13544                           
 13545                           ; BSR set to: 1
 13546                           ;sm_ControlGate_MC50.c: 610:         var_sys.AutoCloseActive = var_sys_NVM.folow_me;
 13547  004F1C  C0AD  F123         	movff	_var_sys_NVM+21,_var_sys+35	;volatile
 13548                           
 13549                           ; BSR set to: 1
 13550                           ;sm_ControlGate_MC50.c: 611:         ts_system.timeWaitToClose = var_sys_NVM.folow_me * 
      +                          (1000/50);
 13551  004F20  0100               	movlb	0	; () banked
 13552  004F22  51AD               	movf	(_var_sys_NVM+21)& (0+255),w,b	;volatile
 13553  004F24  0D14               	mullw	20
 13554  004F26  CFF3 F1AC          	movff	prodl,_ts_system+18	;volatile
 13555  004F2A  CFF4 F1AD          	movff	prodh,_ts_system+19	;volatile
 13556                           
 13557                           ;sm_ControlGate_MC50.c: 613:     }else if (ts_system.timeWaitToClose <= 0 && var_sys_NVM
      +                          .operationMode == ModoPassoPasso && var_sys.passoAPassoAutoClose == YES && var_sys.AutoC
      +                          loseActive != 0) {
 13558  004F2E  0012               	return	
 13559  004F30                     l21623:
 13560                           
 13561                           ; BSR set to: 1
 13562  004F30  BFAD               	btfsc	(_ts_system+19)& (0+255),7,b	;volatile
 13563  004F32  D005               	goto	u25430
 13564  004F34  51AD               	movf	(_ts_system+19)& (0+255),w,b	;volatile
 13565  004F36  E113               	bnz	l21635
 13566  004F38  05AC               	decf	(_ts_system+18)& (0+255),w,b	;volatile
 13567  004F3A  B0D8               	btfsc	status,0,c
 13568  004F3C  D010               	goto	l21635
 13569  004F3E                     u25430:
 13570                           
 13571                           ; BSR set to: 1
 13572  004F3E  0100               	movlb	0	; () banked
 13573  004F40  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 13574  004F42  A4D8               	btfss	status,2,c
 13575  004F44  D00C               	goto	l21635
 13576                           
 13577                           ; BSR set to: 0
 13578  004F46  0101               	movlb	1	; () banked
 13579  004F48  0550               	decf	(_var_sys+80)& (0+255),w,b	;volatile
 13580  004F4A  A4D8               	btfss	status,2,c
 13581  004F4C  D008               	goto	l21635
 13582                           
 13583                           ; BSR set to: 1
 13584  004F4E  5123               	movf	(_var_sys+35)& (0+255),w,b	;volatile
 13585  004F50  B4D8               	btfsc	status,2,c
 13586  004F52  D005               	goto	l21635
 13587                           
 13588                           ; BSR set to: 1
 13589                           ;sm_ControlGate_MC50.c: 615:         var_sys.AutoCloseActive = 0;
 13590  004F54  0E00               	movlw	0
 13591  004F56  6F23               	movwf	(_var_sys+35)& (0+255),b	;volatile
 13592                           
 13593                           ;sm_ControlGate_MC50.c: 617:         var_sys.passoAPassoAutoClose = NO;
 13594  004F58  0E00               	movlw	0
 13595  004F5A  6F50               	movwf	(_var_sys+80)& (0+255),b	;volatile
 13596  004F5C  D780               	goto	u25240
 13597  004F5E                     l21635:
 13598  004F5E  0101               	movlb	1	; () banked
 13599  004F60  BFAD               	btfsc	(_ts_system+19)& (0+255),7,b	;volatile
 13600  004F62  D005               	goto	u25470
 13601  004F64  51AD               	movf	(_ts_system+19)& (0+255),w,b	;volatile
 13602  004F66  E119               	bnz	l21653
 13603  004F68  05AC               	decf	(_ts_system+18)& (0+255),w,b	;volatile
 13604  004F6A  B0D8               	btfsc	status,0,c
 13605  004F6C  D016               	goto	l21653
 13606  004F6E                     u25470:
 13607                           
 13608                           ; BSR set to: 1
 13609  004F6E  0100               	movlb	0	; () banked
 13610  004F70  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 13611  004F72  B4D8               	btfsc	status,2,c
 13612  004F74  D012               	goto	l21653
 13613                           
 13614                           ; BSR set to: 0
 13615  004F76  0101               	movlb	1	; () banked
 13616  004F78  5123               	movf	(_var_sys+35)& (0+255),w,b	;volatile
 13617  004F7A  B4D8               	btfsc	status,2,c
 13618  004F7C  D00E               	goto	l21653
 13619                           
 13620                           ; BSR set to: 1
 13621                           ;sm_ControlGate_MC50.c: 621:         var_sys.AutoCloseActive = 0;
 13622  004F7E  0E00               	movlw	0
 13623  004F80  6F23               	movwf	(_var_sys+35)& (0+255),b	;volatile
 13624                           
 13625                           ; BSR set to: 1
 13626                           ;sm_ControlGate_MC50.c: 627:         if ( var_sys.AutoInversionActive == YES )
 13627  004F82  0527               	decf	(_var_sys+39)& (0+255),w,b	;volatile
 13628  004F84  A4D8               	btfss	status,2,c
 13629  004F86  D003               	goto	l21649
 13630                           
 13631                           ; BSR set to: 1
 13632                           ;sm_ControlGate_MC50.c: 628:         {;sm_ControlGate_MC50.c: 629:             var_sys.A
      +                          utoInversionActive = NO;
 13633  004F88  0E00               	movlw	0
 13634  004F8A  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 13635  004F8C  D77A               	goto	u25280
 13636  004F8E                     l21649:
 13637                           
 13638                           ; BSR set to: 1
 13639                           ;sm_ControlGate_MC50.c: 633:         {;sm_ControlGate_MC50.c: 634:             CloseOrde
      +                          r();
 13640  004F8E  ECE3  F046         	call	_CloseOrder	;wreg free
 13641                           
 13642                           ;sm_ControlGate_MC50.c: 635:             var_sys.PositionIsLost = 0;
 13643  004F92  0E00               	movlw	0
 13644  004F94  0101               	movlb	1	; () banked
 13645  004F96  6F48               	movwf	(_var_sys+72)& (0+255),b	;volatile
 13646  004F98  0012               	return	
 13647  004F9A                     l21653:
 13648  004F9A  0101               	movlb	1	; () banked
 13649  004F9C  0522               	decf	(_var_sys+34)& (0+255),w,b	;volatile
 13650  004F9E  A4D8               	btfss	status,2,c
 13651  004FA0  0012               	return	
 13652                           
 13653                           ; BSR set to: 1
 13654  004FA2  5020               	movf	actionZone_Opened@securityClosing^0,w,c
 13655  004FA4  A4D8               	btfss	status,2,c
 13656  004FA6  0012               	return	
 13657                           
 13658                           ; BSR set to: 1
 13659                           ;sm_ControlGate_MC50.c: 638:     {;sm_ControlGate_MC50.c: 639:         if (ts_system.tim
      +                          eSinalizationDigit <= 1) {
 13660  004FA8  BFA7               	btfsc	(_ts_system+13)& (0+255),7,b	;volatile
 13661  004FAA  D006               	goto	u25530
 13662  004FAC  51A7               	movf	(_ts_system+13)& (0+255),w,b	;volatile
 13663  004FAE  E103               	bnz	u25531
 13664  004FB0  0E02               	movlw	2
 13665  004FB2  5DA6               	subwf	(_ts_system+12)& (0+255),w,b	;volatile
 13666  004FB4  B0D8               	btfsc	status,0,c
 13667  004FB6                     u25531:
 13668  004FB6  0012               	return	
 13669  004FB8                     u25530:
 13670                           
 13671                           ; BSR set to: 1
 13672                           ;sm_ControlGate_MC50.c: 640:             var_sys.DigitSinalizedTemp = NO;
 13673  004FB8  0E00               	movlw	0
 13674  004FBA  6F22               	movwf	(_var_sys+34)& (0+255),b	;volatile
 13675  004FBC  0012               	return		;funcret
 13676  004FBE                     __end_of_actionZone_Opened:
 13677                           	callstack 0
 13678                           
 13679 ;; *************** function _VerifyFollowMe *****************
 13680 ;; Defined at:
 13681 ;;		line 117 in file "sm_ControlGate_MC50.c"
 13682 ;; Parameters:    Size  Location     Type
 13683 ;;  securityClos    1    wreg     enum E10397
 13684 ;; Auto vars:     Size  Location     Type
 13685 ;;  securityClos    1   15[COMRAM] enum E10397
 13686 ;; Return value:  Size  Location     Type
 13687 ;;                  1    wreg      void 
 13688 ;; Registers used:
 13689 ;;		wreg, status,2, status,0
 13690 ;; Tracked objects:
 13691 ;;		On entry : 0/0
 13692 ;;		On exit  : 3E/0
 13693 ;;		Unchanged: 0/0
 13694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13696 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13698 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13699 ;;Total ram usage:        1 bytes
 13700 ;; Hardware stack levels used: 1
 13701 ;; Hardware stack levels required when called: 4
 13702 ;; This function calls:
 13703 ;;		Nothing
 13704 ;; This function is called by:
 13705 ;;		_actionZone_Opening
 13706 ;;		_actionZone_Opened
 13707 ;; This function uses a non-reentrant model
 13708 ;;
 13709                           
 13710                           	psect	text34
 13711  008E84                     __ptext34:
 13712                           	callstack 0
 13713  008E84                     _VerifyFollowMe:
 13714                           	callstack 24
 13715                           
 13716                           ;incstack = 0
 13717                           ;VerifyFollowMe@securityClose stored from wreg
 13718  008E84  6E10               	movwf	VerifyFollowMe@securityClose^0,c
 13719                           
 13720                           ;sm_ControlGate_MC50.c: 120:     if (var_sys_NVM.folow_me != 0 && var_sys_NVM.photoCellI
      +                          nOpen == 0)
 13721  008E86  0100               	movlb	0	; () banked
 13722  008E88  51AD               	movf	(_var_sys_NVM+21)& (0+255),w,b	;volatile
 13723  008E8A  B4D8               	btfsc	status,2,c
 13724  008E8C  0012               	return	
 13725                           
 13726                           ; BSR set to: 0
 13727  008E8E  51A0               	movf	(_var_sys_NVM+8)& (0+255),w,b	;volatile
 13728  008E90  A4D8               	btfss	status,2,c
 13729  008E92  0012               	return	
 13730                           
 13731                           ; BSR set to: 0
 13732                           ;sm_ControlGate_MC50.c: 121:     {;sm_ControlGate_MC50.c: 122:         if (securityClose
      +                           == YES && var_sys.StateFollowIsOn == NO) {
 13733  008E94  0410               	decf	VerifyFollowMe@securityClose^0,w,c
 13734  008E96  A4D8               	btfss	status,2,c
 13735  008E98  0012               	return	
 13736                           
 13737                           ; BSR set to: 0
 13738  008E9A  0101               	movlb	1	; () banked
 13739  008E9C  513A               	movf	(_var_sys+58)& (0+255),w,b	;volatile
 13740  008E9E  A4D8               	btfss	status,2,c
 13741  008EA0  0012               	return	
 13742                           
 13743                           ; BSR set to: 1
 13744                           ;sm_ControlGate_MC50.c: 123:             var_sys.StateFollowIsOn = YES;
 13745  008EA2  0E01               	movlw	1
 13746  008EA4  6F3A               	movwf	(_var_sys+58)& (0+255),b	;volatile
 13747  008EA6  0012               	return		;funcret
 13748  008EA8                     __end_of_VerifyFollowMe:
 13749                           	callstack 0
 13750                           
 13751 ;; *************** function _CloseOrder *****************
 13752 ;; Defined at:
 13753 ;;		line 63 in file "sm_ControlGate_MC50.c"
 13754 ;; Parameters:    Size  Location     Type
 13755 ;;		None
 13756 ;; Auto vars:     Size  Location     Type
 13757 ;;		None
 13758 ;; Return value:  Size  Location     Type
 13759 ;;                  1    wreg      void 
 13760 ;; Registers used:
 13761 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13762 ;; Tracked objects:
 13763 ;;		On entry : 3E/1
 13764 ;;		On exit  : 3E/0
 13765 ;;		Unchanged: 0/0
 13766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13767 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13768 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13769 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13770 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13771 ;;Total ram usage:        0 bytes
 13772 ;; Hardware stack levels used: 1
 13773 ;; Hardware stack levels required when called: 6
 13774 ;; This function calls:
 13775 ;;		_InitSoftStart
 13776 ;;		_sm_send_event
 13777 ;; This function is called by:
 13778 ;;		_actionZone_Opening
 13779 ;;		_actionZone_Opened
 13780 ;; This function uses a non-reentrant model
 13781 ;;
 13782                           
 13783                           	psect	text35
 13784  008DC6                     __ptext35:
 13785                           	callstack 0
 13786  008DC6                     _CloseOrder:
 13787                           	callstack 22
 13788                           
 13789                           ;sm_ControlGate_MC50.c: 65:     var_sys.StateMotor = InClose;
 13790                           
 13791                           ;incstack = 0
 13792  008DC6  0E03               	movlw	3
 13793  008DC8  0101               	movlb	1	; () banked
 13794  008DCA  6F00               	movwf	_var_sys& (0+255),b	;volatile
 13795                           
 13796                           ; BSR set to: 1
 13797                           ;sm_ControlGate_MC50.c: 66:     sm_send_event(&controlGate_stateMachine, ev_CloseGate);
 13798  008DCC  0EE2               	movlw	low _controlGate_stateMachine
 13799  008DCE  6E12               	movwf	sm_send_event@psm^0,c
 13800  008DD0  0E01               	movlw	high _controlGate_stateMachine
 13801  008DD2  6E13               	movwf	(sm_send_event@psm+1)^0,c
 13802  008DD4  0E00               	movlw	0
 13803  008DD6  6E15               	movwf	(sm_send_event@event+1)^0,c
 13804  008DD8  0E0E               	movlw	14
 13805  008DDA  6E14               	movwf	sm_send_event@event^0,c
 13806  008DDC  EC25  F041         	call	_sm_send_event	;wreg free
 13807                           
 13808                           ;sm_ControlGate_MC50.c: 67:     var_sys.LastState = InClose;
 13809  008DE0  0E03               	movlw	3
 13810  008DE2  0101               	movlb	1	; () banked
 13811  008DE4  6F0B               	movwf	(_var_sys+11)& (0+255),b	;volatile
 13812                           
 13813                           ; BSR set to: 1
 13814                           ;sm_ControlGate_MC50.c: 68:     InitSoftStart();
 13815  008DE6  EC53  F041         	call	_InitSoftStart	;wreg free
 13816  008DEA  0012               	return		;funcret
 13817  008DEC                     __end_of_CloseOrder:
 13818                           	callstack 0
 13819                           
 13820 ;; *************** function _actionZone_Closing *****************
 13821 ;; Defined at:
 13822 ;;		line 649 in file "sm_ControlGate_MC50.c"
 13823 ;; Parameters:    Size  Location     Type
 13824 ;;		None
 13825 ;; Auto vars:     Size  Location     Type
 13826 ;;  typeOpenOrde    1   50[COMRAM] enum E10372
 13827 ;;  securityClos    1   49[COMRAM] enum E10397
 13828 ;; Return value:  Size  Location     Type
 13829 ;;                  1    wreg      void 
 13830 ;; Registers used:
 13831 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13832 ;; Tracked objects:
 13833 ;;		On entry : 3F/0
 13834 ;;		On exit  : 0/0
 13835 ;;		Unchanged: 0/0
 13836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13837 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13838 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13840 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13841 ;;Total ram usage:        2 bytes
 13842 ;; Hardware stack levels used: 1
 13843 ;; Hardware stack levels required when called: 7
 13844 ;; This function calls:
 13845 ;;		_GetOpenOrder
 13846 ;;		_GetSecurityStateInClosing
 13847 ;;		_InitFullAutoTime
 13848 ;;		_InitWalkAutoTime
 13849 ;;		_OpenFullOrder
 13850 ;;		_OpenWalkOrder
 13851 ;;		_SetSegmentValueIntermitent
 13852 ;;		_StopOrder
 13853 ;;		___lmul
 13854 ;;		_setPositionInvertionInClosing
 13855 ;;		_sm_send_event
 13856 ;; This function is called by:
 13857 ;;		_sm_execute_ControlGate
 13858 ;; This function uses a non-reentrant model
 13859 ;;
 13860                           
 13861                           	psect	text36
 13862  003FF0                     __ptext36:
 13863                           	callstack 0
 13864  003FF0                     _actionZone_Closing:
 13865                           	callstack 22
 13866                           
 13867                           ; BSR set to: 0
 13868                           ;sm_ControlGate_MC50.c: 651:     TypeCMD typeOpenOrder = GetOpenOrder();
 13869                           
 13870                           ;incstack = 0
 13871  003FF0  ECC8  F028         	call	_GetOpenOrder	;wreg free
 13872  003FF4  6E33               	movwf	actionZone_Closing@typeOpenOrder^0,c
 13873                           
 13874                           ;sm_ControlGate_MC50.c: 653:     StateEnum securityClosing = GetSecurityStateInClosing()
      +                          ;
 13875  003FF6  EC74  F039         	call	_GetSecurityStateInClosing	;wreg free
 13876  003FFA  6E32               	movwf	actionZone_Closing@securityClosing^0,c
 13877                           
 13878                           ;sm_ControlGate_MC50.c: 654:     Abertura_pedonal = 0;
 13879  003FFC  0E00               	movlw	0
 13880  003FFE  0101               	movlb	1	; () banked
 13881  004000  6F8D               	movwf	_Abertura_pedonal& (0+255),b
 13882                           
 13883                           ; BSR set to: 1
 13884                           ;sm_ControlGate_MC50.c: 656:     InitFullAutoTime();
 13885  004002  ECEA  F047         	call	_InitFullAutoTime	;wreg free
 13886                           
 13887                           ; BSR set to: 0
 13888                           ;sm_ControlGate_MC50.c: 658:     var_sys.passoAPassoAutoClose = NO;
 13889  004006  0E00               	movlw	0
 13890  004008  0101               	movlb	1	; () banked
 13891  00400A  6F50               	movwf	(_var_sys+80)& (0+255),b	;volatile
 13892                           
 13893                           ; BSR set to: 1
 13894                           ;sm_ControlGate_MC50.c: 660:     if (var_sys.NumberOffErrors > 3) {
 13895  00400C  0E03               	movlw	3
 13896  00400E  6543               	cpfsgt	(_var_sys+67)& (0+255),b	;volatile
 13897  004010  D00D               	goto	l21677
 13898                           
 13899                           ; BSR set to: 1
 13900                           ;sm_ControlGate_MC50.c: 662:         var_sys.StateMotor = Stopped;
 13901  004012  0E00               	movlw	0
 13902  004014  6F00               	movwf	_var_sys& (0+255),b	;volatile
 13903  004016                     l21675:
 13904                           
 13905                           ; BSR set to: 1
 13906                           ;sm_ControlGate_MC50.c: 663:         sm_send_event(&controlGate_stateMachine, ev_ErrorGa
      +                          te);
 13907  004016  0EE2               	movlw	low _controlGate_stateMachine
 13908  004018  6E12               	movwf	sm_send_event@psm^0,c
 13909  00401A  0E01               	movlw	high _controlGate_stateMachine
 13910  00401C  6E13               	movwf	(sm_send_event@psm+1)^0,c
 13911  00401E  0E00               	movlw	0
 13912  004020  6E15               	movwf	(sm_send_event@event+1)^0,c
 13913  004022  0E10               	movlw	16
 13914  004024  6E14               	movwf	sm_send_event@event^0,c
 13915  004026  EC25  F041         	call	_sm_send_event	;wreg free
 13916                           
 13917                           ;sm_ControlGate_MC50.c: 664:     } else if ((var_sys.FimCurso_CloseIsEnabled == YES)||(v
      +                          ar_sys.TimeMaxMotorIsON<=0) && (var_sys.LearningIsEnabled==NO) && (var_sys.PositionIsLos
      +                          t==NO)) {
 13918  00402A  0012               	return	
 13919  00402C                     l21677:
 13920                           
 13921                           ; BSR set to: 1
 13922  00402C  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
 13923  00402E  B4D8               	btfsc	status,2,c
 13924  004030  D00C               	goto	u25580
 13925                           
 13926                           ; BSR set to: 1
 13927  004032  5118               	movf	(_var_sys+24)& (0+255),w,b	;volatile
 13928  004034  1119               	iorwf	(_var_sys+25)& (0+255),w,b	;volatile
 13929  004036  111A               	iorwf	(_var_sys+26)& (0+255),w,b	;volatile
 13930  004038  111B               	iorwf	(_var_sys+27)& (0+255),w,b	;volatile
 13931  00403A  A4D8               	btfss	status,2,c
 13932  00403C  D05F               	goto	l21709
 13933                           
 13934                           ; BSR set to: 1
 13935  00403E  5126               	movf	(_var_sys+38)& (0+255),w,b	;volatile
 13936  004040  A4D8               	btfss	status,2,c
 13937  004042  D05C               	goto	l21709
 13938                           
 13939                           ; BSR set to: 1
 13940  004044  5148               	movf	(_var_sys+72)& (0+255),w,b	;volatile
 13941  004046  A4D8               	btfss	status,2,c
 13942  004048  D059               	goto	l21709
 13943  00404A                     u25580:
 13944                           
 13945                           ; BSR set to: 1
 13946                           ;sm_ControlGate_MC50.c: 666:         if (var_sys_NVM.flashLightMode == 2) {
 13947  00404A  0E02               	movlw	2
 13948  00404C  0100               	movlb	0	; () banked
 13949  00404E  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 13950  004050  A4D8               	btfss	status,2,c
 13951  004052  D018               	goto	l21689
 13952                           
 13953                           ; BSR set to: 0
 13954                           ;sm_ControlGate_MC50.c: 667:             ts_system.TimeOnFlashLigth = (long) ((long) var
      +                          _sys_NVM.ligthTime * ((1000/50)*60));
 13955  004054  51AC               	movf	(_var_sys_NVM+20)& (0+255),w,b	;volatile
 13956  004056  6E1D               	movwf	___lmul@multiplier^0,c
 13957  004058  6A1E               	clrf	(___lmul@multiplier+1)^0,c
 13958  00405A  6A1F               	clrf	(___lmul@multiplier+2)^0,c
 13959  00405C  6A20               	clrf	(___lmul@multiplier+3)^0,c
 13960  00405E  0EB0               	movlw	176
 13961  004060  6E21               	movwf	___lmul@multiplicand^0,c
 13962  004062  0E04               	movlw	4
 13963  004064  6E22               	movwf	(___lmul@multiplicand+1)^0,c
 13964  004066  0E00               	movlw	0
 13965  004068  6E23               	movwf	(___lmul@multiplicand+2)^0,c
 13966  00406A  0E00               	movlw	0
 13967  00406C  6E24               	movwf	(___lmul@multiplicand+3)^0,c
 13968  00406E  EC33  F042         	call	___lmul	;wreg free
 13969  004072  C01D  F1BA         	movff	?___lmul,_ts_system+32	;volatile
 13970  004076  C01E  F1BB         	movff	?___lmul+1,_ts_system+33	;volatile
 13971  00407A  C01F  F1BC         	movff	?___lmul+2,_ts_system+34	;volatile
 13972  00407E  C020  F1BD         	movff	?___lmul+3,_ts_system+35	;volatile
 13973                           
 13974                           ;sm_ControlGate_MC50.c: 668:         }
 13975  004082  D009               	goto	l2768
 13976  004084                     l21689:
 13977                           
 13978                           ; BSR set to: 0
 13979                           ;sm_ControlGate_MC50.c: 670:             ts_system.TimeOnFlashLigth = 0;
 13980  004084  0E00               	movlw	0
 13981  004086  0101               	movlb	1	; () banked
 13982  004088  6FBA               	movwf	(_ts_system+32)& (0+255),b	;volatile
 13983  00408A  0E00               	movlw	0
 13984  00408C  6FBB               	movwf	(_ts_system+33)& (0+255),b	;volatile
 13985  00408E  0E00               	movlw	0
 13986  004090  6FBC               	movwf	(_ts_system+34)& (0+255),b	;volatile
 13987  004092  0E00               	movlw	0
 13988  004094  6FBD               	movwf	(_ts_system+35)& (0+255),b	;volatile
 13989  004096                     l2768:
 13990                           
 13991                           ;sm_ControlGate_MC50.c: 672:         var_sys.AutoInversionActiveStop = NO;
 13992  004096  0E00               	movlw	0
 13993  004098  0101               	movlb	1	; () banked
 13994  00409A  6F12               	movwf	(_var_sys+18)& (0+255),b	;volatile
 13995                           
 13996                           ;sm_ControlGate_MC50.c: 674:         var_sys.Statedoorcontrol = st_Closed;
 13997  00409C  0E01               	movlw	1
 13998  00409E  6F1C               	movwf	(_var_sys+28)& (0+255),b	;volatile
 13999                           
 14000                           ; BSR set to: 1
 14001                           ;sm_ControlGate_MC50.c: 675:         var_sys.actualCounterMoves++;
 14002  0040A0  0E01               	movlw	1
 14003  0040A2  273C               	addwf	(_var_sys+60)& (0+255),f,b	;volatile
 14004  0040A4  0E00               	movlw	0
 14005  0040A6  233D               	addwfc	(_var_sys+61)& (0+255),f,b	;volatile
 14006  0040A8  233E               	addwfc	(_var_sys+62)& (0+255),f,b	;volatile
 14007  0040AA  233F               	addwfc	(_var_sys+63)& (0+255),f,b	;volatile
 14008                           
 14009                           ; BSR set to: 1
 14010                           ;sm_ControlGate_MC50.c: 676:         var_sys.Timewalkisactived = 0;
 14011  0040AC  0E00               	movlw	0
 14012  0040AE  6F4A               	movwf	(_var_sys+74)& (0+255),b	;volatile
 14013                           
 14014                           ; BSR set to: 1
 14015                           ;sm_ControlGate_MC50.c: 677:         var_sys.PositionActual = 0;
 14016  0040B0  0E00               	movlw	0
 14017  0040B2  6F1E               	movwf	(_var_sys+30)& (0+255),b	;volatile
 14018  0040B4  0E00               	movlw	0
 14019  0040B6  6F1F               	movwf	(_var_sys+31)& (0+255),b	;volatile
 14020  0040B8  0E00               	movlw	0
 14021  0040BA  6F20               	movwf	(_var_sys+32)& (0+255),b	;volatile
 14022  0040BC  0E00               	movlw	0
 14023  0040BE  6F21               	movwf	(_var_sys+33)& (0+255),b	;volatile
 14024                           
 14025                           ; BSR set to: 1
 14026                           ;sm_ControlGate_MC50.c: 679:         var_sys.PositionIsLost = NO;
 14027  0040C0  0E00               	movlw	0
 14028  0040C2  6F48               	movwf	(_var_sys+72)& (0+255),b	;volatile
 14029                           
 14030                           ; BSR set to: 1
 14031                           ;sm_ControlGate_MC50.c: 680:         var_sys.NumberOffErrors = 0;
 14032  0040C4  0E00               	movlw	0
 14033  0040C6  6F43               	movwf	(_var_sys+67)& (0+255),b	;volatile
 14034                           
 14035                           ; BSR set to: 1
 14036                           ;sm_ControlGate_MC50.c: 681:         var_sys.StateMotor = Stopped;
 14037  0040C8  0E00               	movlw	0
 14038  0040CA  6F00               	movwf	_var_sys& (0+255),b	;volatile
 14039                           
 14040                           ; BSR set to: 1
 14041                           ;sm_ControlGate_MC50.c: 683:         ts_system.timeSinalizationDigit = (1000/50) * 2;
 14042  0040CC  0E00               	movlw	0
 14043  0040CE  6FA7               	movwf	(_ts_system+13)& (0+255),b	;volatile
 14044  0040D0  0E28               	movlw	40
 14045  0040D2  6FA6               	movwf	(_ts_system+12)& (0+255),b	;volatile
 14046                           
 14047                           ; BSR set to: 1
 14048                           ;sm_ControlGate_MC50.c: 684:         SetSegmentValueIntermitent(dF, dC, ( 200/50));
 14049  0040D4  0E0C               	movlw	12
 14050  0040D6  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 14051  0040D8  0E00               	movlw	0
 14052  0040DA  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 14053  0040DC  0E04               	movlw	4
 14054  0040DE  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 14055  0040E0  0E0F               	movlw	15
 14056  0040E2  EC9D  F045         	call	_SetSegmentValueIntermitent
 14057                           
 14058                           ; BSR set to: 1
 14059                           ;sm_ControlGate_MC50.c: 687:          sm_send_event(&controlGate_stateMachine, ev_Closed
      +                          Gate);
 14060  0040E6  0EE2               	movlw	low _controlGate_stateMachine
 14061  0040E8  6E12               	movwf	sm_send_event@psm^0,c
 14062  0040EA  0E01               	movlw	high _controlGate_stateMachine
 14063  0040EC  6E13               	movwf	(sm_send_event@psm+1)^0,c
 14064  0040EE  0E00               	movlw	0
 14065  0040F0  6E15               	movwf	(sm_send_event@event+1)^0,c
 14066  0040F2  0E0F               	movlw	15
 14067  0040F4  6E14               	movwf	sm_send_event@event^0,c
 14068  0040F6  EC25  F041         	call	_sm_send_event	;wreg free
 14069                           
 14070                           ;sm_ControlGate_MC50.c: 691:     }
 14071  0040FA  0012               	return	
 14072  0040FC                     l21709:
 14073                           
 14074                           ; BSR set to: 1
 14075  0040FC  0432               	decf	actionZone_Closing@securityClosing^0,w,c
 14076  0040FE  B4D8               	btfsc	status,2,c
 14077  004100  D011               	goto	u25630
 14078                           
 14079                           ; BSR set to: 1
 14080  004102  BFC5               	btfsc	(_ts_system+43)& (0+255),7,b	;volatile
 14081  004104  D021               	goto	l21729
 14082  004106  51C5               	movf	(_ts_system+43)& (0+255),w,b	;volatile
 14083  004108  E103               	bnz	u25610
 14084  00410A  05C4               	decf	(_ts_system+42)& (0+255),w,b	;volatile
 14085  00410C  A0D8               	btfss	status,0,c
 14086  00410E  D01C               	goto	l21729
 14087  004110                     u25610:
 14088                           
 14089                           ; BSR set to: 1
 14090  004110  0541               	decf	(_var_sys+65)& (0+255),w,b	;volatile
 14091  004112  A4D8               	btfss	status,2,c
 14092  004114  D019               	goto	l21729
 14093                           
 14094                           ; BSR set to: 1
 14095  004116  BFCB               	btfsc	(_ts_system+49)& (0+255),7,b	;volatile
 14096  004118  D005               	goto	u25630
 14097  00411A  51CB               	movf	(_ts_system+49)& (0+255),w,b	;volatile
 14098  00411C  E115               	bnz	l21729
 14099  00411E  05CA               	decf	(_ts_system+48)& (0+255),w,b	;volatile
 14100  004120  B0D8               	btfsc	status,0,c
 14101  004122  D012               	goto	l21729
 14102  004124                     u25630:
 14103                           
 14104                           ; BSR set to: 1
 14105  004124  5127               	movf	(_var_sys+39)& (0+255),w,b	;volatile
 14106  004126  A4D8               	btfss	status,2,c
 14107  004128  D00F               	goto	l21729
 14108                           
 14109                           ; BSR set to: 1
 14110                           ;sm_ControlGate_MC50.c: 694:          if (securityClosing != YES){
 14111  00412A  0432               	decf	actionZone_Closing@securityClosing^0,w,c
 14112  00412C  A4D8               	btfss	status,2,c
 14113                           
 14114                           ; BSR set to: 1
 14115                           ;sm_ControlGate_MC50.c: 695:             var_sys.NumberOffErrors++;
 14116  00412E  2B43               	incf	(_var_sys+67)& (0+255),f,b	;volatile
 14117                           
 14118                           ; BSR set to: 1
 14119                           ;sm_ControlGate_MC50.c: 697:         var_sys.NumberOffErrors++;
 14120                           
 14121                           ;sm_ControlGate_MC50.c: 696:         }
 14122  004130  2B43               	incf	(_var_sys+67)& (0+255),f,b	;volatile
 14123                           
 14124                           ; BSR set to: 1
 14125                           ;sm_ControlGate_MC50.c: 698:         var_sys.AutoInversionActive = YES;
 14126  004132  0E01               	movlw	1
 14127  004134  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 14128                           
 14129                           ; BSR set to: 1
 14130                           ;sm_ControlGate_MC50.c: 699:         ts_system.TimeWaitToNextState = ( 500/50);
 14131  004136  0E00               	movlw	0
 14132  004138  6FBF               	movwf	(_ts_system+37)& (0+255),b	;volatile
 14133  00413A  0E0A               	movlw	10
 14134  00413C  6FBE               	movwf	(_ts_system+36)& (0+255),b	;volatile
 14135                           
 14136                           ; BSR set to: 1
 14137                           ;sm_ControlGate_MC50.c: 700:         ts_system.TimeStopElectricBrake = ((1000/50)+( 500/
      +                          50));
 14138  00413E  0E00               	movlw	0
 14139  004140  6FDB               	movwf	(_ts_system+65)& (0+255),b	;volatile
 14140  004142  0E1E               	movlw	30
 14141  004144  6FDA               	movwf	(_ts_system+64)& (0+255),b	;volatile
 14142                           
 14143                           ;sm_ControlGate_MC50.c: 702:     }
 14144  004146  0012               	return	
 14145  004148                     l21729:
 14146                           
 14147                           ; BSR set to: 1
 14148  004148  BFC5               	btfsc	(_ts_system+43)& (0+255),7,b	;volatile
 14149  00414A  D02E               	goto	l21759
 14150  00414C  51C5               	movf	(_ts_system+43)& (0+255),w,b	;volatile
 14151  00414E  E103               	bnz	u25660
 14152  004150  05C4               	decf	(_ts_system+42)& (0+255),w,b	;volatile
 14153  004152  A0D8               	btfss	status,0,c
 14154  004154  D029               	goto	l21759
 14155  004156                     u25660:
 14156                           
 14157                           ; BSR set to: 1
 14158  004156  0527               	decf	(_var_sys+39)& (0+255),w,b	;volatile
 14159  004158  A4D8               	btfss	status,2,c
 14160  00415A  D026               	goto	l21759
 14161                           
 14162                           ; BSR set to: 1
 14163                           ;sm_ControlGate_MC50.c: 704:         if (var_sys.InvertionCurrentOpening == YES) {
 14164  00415C  0545               	decf	(_var_sys+69)& (0+255),w,b	;volatile
 14165  00415E  A4D8               	btfss	status,2,c
 14166  004160  D005               	goto	l21741
 14167  004162                     u25680:
 14168                           
 14169                           ; BSR set to: 1
 14170                           ;sm_ControlGate_MC50.c: 706:             var_sys.StateMotor = Stopped;
 14171  004162  0E00               	movlw	0
 14172  004164  6F00               	movwf	_var_sys& (0+255),b	;volatile
 14173                           
 14174                           ; BSR set to: 1
 14175                           ;sm_ControlGate_MC50.c: 707:             setPositionInvertionInClosing();
 14176  004166  ECC4  F031         	call	_setPositionInvertionInClosing	;wreg free
 14177  00416A  D755               	goto	l21675
 14178  00416C                     l21741:
 14179                           
 14180                           ; BSR set to: 1
 14181  00416C  BFBF               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 14182  00416E  D005               	goto	u25690
 14183  004170  51BF               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 14184  004172  E117               	bnz	l21757
 14185  004174  05BE               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 14186  004176  B0D8               	btfsc	status,0,c
 14187  004178  D014               	goto	l21757
 14188  00417A                     u25690:
 14189                           
 14190                           ; BSR set to: 1
 14191                           ;sm_ControlGate_MC50.c: 710:          if(var_sys.Timewalkisactived == YES){
 14192  00417A  054A               	decf	(_var_sys+74)& (0+255),w,b	;volatile
 14193  00417C  A4D8               	btfss	status,2,c
 14194  00417E  D003               	goto	l21747
 14195                           
 14196                           ; BSR set to: 1
 14197                           ;sm_ControlGate_MC50.c: 711:                 OpenWalkOrder();
 14198  004180  ECBA  F03F         	call	_OpenWalkOrder	;wreg free
 14199                           
 14200                           ;sm_ControlGate_MC50.c: 713:             }
 14201  004184  D004               	goto	l21751
 14202  004186                     l21747:
 14203                           
 14204                           ; BSR set to: 1
 14205                           ;sm_ControlGate_MC50.c: 716:             OpenFullOrder();
 14206  004186  ECF6  F046         	call	_OpenFullOrder	;wreg free
 14207                           
 14208                           ;sm_ControlGate_MC50.c: 718:             setPositionInvertionInClosing();
 14209  00418A  ECC4  F031         	call	_setPositionInvertionInClosing	;wreg free
 14210  00418E                     l21751:
 14211                           
 14212                           ;sm_ControlGate_MC50.c: 720:             var_sys.AutoInversionActive = NO;
 14213  00418E  0E00               	movlw	0
 14214  004190  0101               	movlb	1	; () banked
 14215  004192  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 14216                           
 14217                           ; BSR set to: 1
 14218                           ;sm_ControlGate_MC50.c: 721:             var_sys.InvertionCurrentClosing = YES;
 14219  004194  0E01               	movlw	1
 14220  004196  6F44               	movwf	(_var_sys+68)& (0+255),b	;volatile
 14221                           
 14222                           ; BSR set to: 1
 14223                           ;sm_ControlGate_MC50.c: 722:             ts_system.TimeInversionStart = (1000/50);
 14224  004198  0E00               	movlw	0
 14225  00419A  6FCB               	movwf	(_ts_system+49)& (0+255),b	;volatile
 14226  00419C  0E14               	movlw	20
 14227  00419E  6FCA               	movwf	(_ts_system+48)& (0+255),b	;volatile
 14228                           
 14229                           ;sm_ControlGate_MC50.c: 726:         } else
 14230  0041A0  0012               	return	
 14231  0041A2                     l21757:
 14232                           
 14233                           ; BSR set to: 1
 14234                           ;sm_ControlGate_MC50.c: 727:         {;sm_ControlGate_MC50.c: 728:             var_sys.S
      +                          tateMotor = Stopped;
 14235  0041A2  0E00               	movlw	0
 14236  0041A4  6F00               	movwf	_var_sys& (0+255),b	;volatile
 14237  0041A6  0012               	return	
 14238  0041A8                     l21759:
 14239                           
 14240                           ; BSR set to: 1
 14241  0041A8  0527               	decf	(_var_sys+39)& (0+255),w,b	;volatile
 14242  0041AA  A4D8               	btfss	status,2,c
 14243  0041AC  D017               	goto	l21775
 14244                           
 14245                           ; BSR set to: 1
 14246                           ;sm_ControlGate_MC50.c: 732:                 var_sys.StateMotor = Stopped;
 14247  0041AE  0E00               	movlw	0
 14248  0041B0  6F00               	movwf	_var_sys& (0+255),b	;volatile
 14249                           
 14250                           ; BSR set to: 1
 14251                           ;sm_ControlGate_MC50.c: 737:         if (ts_system.TimeWaitToNextState <= 0) {
 14252  0041B2  BFBF               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 14253  0041B4  D005               	goto	u25720
 14254  0041B6  51BF               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 14255  0041B8  E160               	bnz	l2805
 14256  0041BA  05BE               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 14257  0041BC  B0D8               	btfsc	status,0,c
 14258  0041BE  0012               	return	
 14259  0041C0                     u25720:
 14260                           
 14261                           ; BSR set to: 1
 14262                           ;sm_ControlGate_MC50.c: 738:             if(var_sys.Timewalkisactived == YES){
 14263  0041C0  054A               	decf	(_var_sys+74)& (0+255),w,b	;volatile
 14264  0041C2  A4D8               	btfss	status,2,c
 14265  0041C4  D003               	goto	l21769
 14266                           
 14267                           ; BSR set to: 1
 14268                           ;sm_ControlGate_MC50.c: 739:                 OpenWalkOrder();
 14269  0041C6  ECBA  F03F         	call	_OpenWalkOrder	;wreg free
 14270                           
 14271                           ;sm_ControlGate_MC50.c: 741:             }
 14272  0041CA  D004               	goto	l21773
 14273  0041CC                     l21769:
 14274                           
 14275                           ; BSR set to: 1
 14276                           ;sm_ControlGate_MC50.c: 744:                  OpenFullOrder();
 14277  0041CC  ECF6  F046         	call	_OpenFullOrder	;wreg free
 14278                           
 14279                           ;sm_ControlGate_MC50.c: 746:             setPositionInvertionInClosing();
 14280  0041D0  ECC4  F031         	call	_setPositionInvertionInClosing	;wreg free
 14281  0041D4                     l21773:
 14282                           
 14283                           ;sm_ControlGate_MC50.c: 748:             var_sys.AutoInversionActive = NO;
 14284  0041D4  0E00               	movlw	0
 14285  0041D6  0101               	movlb	1	; () banked
 14286  0041D8  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 14287  0041DA  0012               	return	
 14288  0041DC                     l21775:
 14289                           
 14290                           ; BSR set to: 1
 14291  0041DC  5100               	movf	_var_sys& (0+255),w,b	;volatile
 14292  0041DE  A4D8               	btfss	status,2,c
 14293  0041E0  D00B               	goto	l21791
 14294                           
 14295                           ; BSR set to: 1
 14296                           ;sm_ControlGate_MC50.c: 755:         if(securityClosing != ST){
 14297  0041E2  0E02               	movlw	2
 14298  0041E4  1832               	xorwf	actionZone_Closing@securityClosing^0,w,c
 14299  0041E6  B4D8               	btfsc	status,2,c
 14300  0041E8  D002               	goto	l21787
 14301                           
 14302                           ; BSR set to: 1
 14303                           ;sm_ControlGate_MC50.c: 756:            var_sys.NumberOffErrors++;
 14304  0041EA  2B43               	incf	(_var_sys+67)& (0+255),f,b	;volatile
 14305  0041EC  D7BA               	goto	u25680
 14306  0041EE                     l21787:
 14307                           
 14308                           ; BSR set to: 1
 14309                           ;sm_ControlGate_MC50.c: 761:         {;sm_ControlGate_MC50.c: 762:             setPositi
      +                          onInvertionInClosing();
 14310  0041EE  ECC4  F031         	call	_setPositionInvertionInClosing	;wreg free
 14311  0041F2                     l21789:
 14312                           
 14313                           ;sm_ControlGate_MC50.c: 763:             StopOrder();
 14314  0041F2  EC98  F047         	call	_StopOrder	;wreg free
 14315  0041F6  0012               	return	
 14316  0041F8                     l21791:
 14317                           
 14318                           ; BSR set to: 1
 14319  0041F8  BFCD               	btfsc	(_ts_system+51)& (0+255),7,b	;volatile
 14320  0041FA  D005               	goto	u25760
 14321  0041FC  51CD               	movf	(_ts_system+51)& (0+255),w,b	;volatile
 14322  0041FE  E10B               	bnz	l21801
 14323  004200  05CC               	decf	(_ts_system+50)& (0+255),w,b	;volatile
 14324  004202  B0D8               	btfsc	status,0,c
 14325  004204  D008               	goto	l21801
 14326  004206                     u25760:
 14327                           
 14328                           ; BSR set to: 1
 14329  004206  0546               	decf	(_var_sys+70)& (0+255),w,b	;volatile
 14330  004208  A4D8               	btfss	status,2,c
 14331  00420A  D005               	goto	l21801
 14332                           
 14333                           ; BSR set to: 1
 14334                           ;sm_ControlGate_MC50.c: 768:         setPositionInvertionInClosing();
 14335  00420C  ECC4  F031         	call	_setPositionInvertionInClosing	;wreg free
 14336                           
 14337                           ; BSR set to: 1
 14338                           ;sm_ControlGate_MC50.c: 769:         var_sys.InvertionClosingFromOpen = NO;
 14339  004210  0E00               	movlw	0
 14340  004212  6F46               	movwf	(_var_sys+70)& (0+255),b	;volatile
 14341  004214  D7EE               	goto	l21789
 14342  004216                     l21801:
 14343                           
 14344                           ; BSR set to: 1
 14345  004216  0100               	movlb	0	; () banked
 14346  004218  05A8               	decf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 14347  00421A  B4D8               	btfsc	status,2,c
 14348  00421C  D004               	goto	u25790
 14349                           
 14350                           ; BSR set to: 0
 14351  00421E  0E02               	movlw	2
 14352  004220  19A8               	xorwf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 14353  004222  A4D8               	btfss	status,2,c
 14354  004224  D005               	goto	l21809
 14355  004226                     u25790:
 14356                           
 14357                           ; BSR set to: 0
 14358                           ;sm_ControlGate_MC50.c: 773:         if (typeOpenOrder != TypeFullClose) {
 14359  004226  0E04               	movlw	4
 14360  004228  1833               	xorwf	actionZone_Closing@typeOpenOrder^0,w,c
 14361  00422A  B4D8               	btfsc	status,2,c
 14362  00422C  0012               	return	
 14363  00422E  D7E1               	goto	l21789
 14364  004230                     l21809:
 14365                           
 14366                           ; BSR set to: 0
 14367  004230  5033               	movf	actionZone_Closing@typeOpenOrder^0,w,c
 14368  004232  B4D8               	btfsc	status,2,c
 14369  004234  0012               	return	
 14370                           
 14371                           ; BSR set to: 0
 14372                           ;sm_ControlGate_MC50.c: 788:         if ( var_sys_NVM.operationMode == ModoPassoPasso )
 14373  004236  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 14374  004238  A4D8               	btfss	status,2,c
 14375  00423A  D013               	goto	l21825
 14376                           
 14377                           ; BSR set to: 0
 14378                           ;sm_ControlGate_MC50.c: 789:         {;sm_ControlGate_MC50.c: 790:             setPositi
      +                          onInvertionInClosing();
 14379  00423C  ECC4  F031         	call	_setPositionInvertionInClosing	;wreg free
 14380                           
 14381                           ; BSR set to: 1
 14382                           ;sm_ControlGate_MC50.c: 791:             StopOrder();
 14383  004240  EC98  F047         	call	_StopOrder	;wreg free
 14384                           
 14385                           ;sm_ControlGate_MC50.c: 793:             if (typeOpenOrder == TypeWalk && var_sys_NVM.op
      +                          erationMode != ModoCondominio)
 14386  004244  0E02               	movlw	2
 14387  004246  1833               	xorwf	actionZone_Closing@typeOpenOrder^0,w,c
 14388  004248  A4D8               	btfss	status,2,c
 14389  00424A  0012               	return	
 14390  00424C  0E02               	movlw	2
 14391  00424E  0100               	movlb	0	; () banked
 14392  004250  19A4               	xorwf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 14393  004252  B4D8               	btfsc	status,2,c
 14394  004254  0012               	return	
 14395                           
 14396                           ; BSR set to: 0
 14397                           ;sm_ControlGate_MC50.c: 794:             {;sm_ControlGate_MC50.c: 795:                 I
      +                          nitWalkAutoTime();
 14398  004256  EC6F  F048         	call	_InitWalkAutoTime	;wreg free
 14399                           
 14400                           ; BSR set to: 0
 14401                           ;sm_ControlGate_MC50.c: 796:                 var_sys.showAP = YES;
 14402  00425A  0E01               	movlw	1
 14403  00425C  0101               	movlb	1	; () banked
 14404  00425E  6F4F               	movwf	(_var_sys+79)& (0+255),b	;volatile
 14405  004260  0012               	return	
 14406  004262                     l21825:
 14407                           
 14408                           ; BSR set to: 0
 14409                           ;sm_ControlGate_MC50.c: 801:         {;sm_ControlGate_MC50.c: 802:             if (typeO
      +                          penOrder != TypeFullClose){
 14410  004262  0E04               	movlw	4
 14411  004264  1833               	xorwf	actionZone_Closing@typeOpenOrder^0,w,c
 14412  004266  B4D8               	btfsc	status,2,c
 14413  004268  D7C4               	goto	l21789
 14414                           
 14415                           ; BSR set to: 0
 14416                           ;sm_ControlGate_MC50.c: 803:                 var_sys.AutoInversionActive = YES;
 14417  00426A  0E01               	movlw	1
 14418  00426C  0101               	movlb	1	; () banked
 14419  00426E  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 14420                           
 14421                           ;sm_ControlGate_MC50.c: 804:                 ts_system.TimeWaitToNextState = ( 500/50);
 14422  004270  0E00               	movlw	0
 14423  004272  6FBF               	movwf	(_ts_system+37)& (0+255),b	;volatile
 14424  004274  0E0A               	movlw	10
 14425  004276  6FBE               	movwf	(_ts_system+36)& (0+255),b	;volatile
 14426                           
 14427                           ;sm_ControlGate_MC50.c: 806:             }
 14428  004278  0012               	return	
 14429  00427A                     l2805:
 14430  00427A  0012               	return		;funcret
 14431  00427C                     __end_of_actionZone_Closing:
 14432                           	callstack 0
 14433                           
 14434 ;; *************** function _setPositionInvertionInClosing *****************
 14435 ;; Defined at:
 14436 ;;		line 867 in file "sm_ControlGate_MC50.c"
 14437 ;; Parameters:    Size  Location     Type
 14438 ;;		None
 14439 ;; Auto vars:     Size  Location     Type
 14440 ;;		None
 14441 ;; Return value:  Size  Location     Type
 14442 ;;                  1    wreg      void 
 14443 ;; Registers used:
 14444 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 14445 ;; Tracked objects:
 14446 ;;		On entry : 3E/1
 14447 ;;		On exit  : 3F/1
 14448 ;;		Unchanged: 0/0
 14449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14451 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14452 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14453 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14454 ;;Total ram usage:       12 bytes
 14455 ;; Hardware stack levels used: 1
 14456 ;; Hardware stack levels required when called: 6
 14457 ;; This function calls:
 14458 ;;		_getTimeDecelaration
 14459 ;; This function is called by:
 14460 ;;		_actionZone_Opening
 14461 ;;		_actionZone_Closing
 14462 ;; This function uses a non-reentrant model
 14463 ;;
 14464                           
 14465                           	psect	text37
 14466  006388                     __ptext37:
 14467                           	callstack 0
 14468  006388                     _setPositionInvertionInClosing:
 14469                           	callstack 22
 14470                           
 14471                           ;sm_ControlGate_MC50.c: 872:     if(var_sys_NVM.TypeofMotor != 2){
 14472                           
 14473                           ;incstack = 0
 14474  006388  0E02               	movlw	2
 14475  00638A  0100               	movlb	0	; () banked
 14476  00638C  19B4               	xorwf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 14477  00638E  B4D8               	btfsc	status,2,c
 14478  006390  D007               	goto	l20465
 14479                           
 14480                           ; BSR set to: 0
 14481                           ;sm_ControlGate_MC50.c: 874:        var_sys.PositionActual += ( 100/50);
 14482  006392  0E02               	movlw	2
 14483  006394  0101               	movlb	1	; () banked
 14484  006396  271E               	addwf	(_var_sys+30)& (0+255),f,b	;volatile
 14485  006398  0E00               	movlw	0
 14486  00639A  231F               	addwfc	(_var_sys+31)& (0+255),f,b	;volatile
 14487  00639C  2320               	addwfc	(_var_sys+32)& (0+255),f,b	;volatile
 14488  00639E  D008               	goto	L74
 14489  0063A0                     l20465:
 14490                           
 14491                           ; BSR set to: 0
 14492                           ;sm_ControlGate_MC50.c: 878:     {;sm_ControlGate_MC50.c: 879:        var_sys.PositionAc
      +                          tual -= ( 50/50);
 14493  0063A0  0EFF               	movlw	255
 14494  0063A2  0101               	movlb	1	; () banked
 14495  0063A4  271E               	addwf	(_var_sys+30)& (0+255),f,b	;volatile
 14496  0063A6  0EFF               	movlw	255
 14497  0063A8  231F               	addwfc	(_var_sys+31)& (0+255),f,b	;volatile
 14498  0063AA  0EFF               	movlw	255
 14499  0063AC  2320               	addwfc	(_var_sys+32)& (0+255),f,b	;volatile
 14500  0063AE  0EFF               	movlw	255
 14501  0063B0                     L74:
 14502  0063B0  2321               	addwfc	(_var_sys+33)& (0+255),f,b	;volatile
 14503                           
 14504                           ; BSR set to: 1
 14505                           ;sm_ControlGate_MC50.c: 882:     if (var_sys.PositionActual > getTimeDecelaration(InOpen
      +                          Full)&& var_sys_NVM.TypeofMotor != 2) {
 14506  0063B2  0E01               	movlw	1
 14507  0063B4  ECF7  F035         	call	_getTimeDecelaration
 14508  0063B8  0101               	movlb	1	; () banked
 14509  0063BA  511E               	movf	(_var_sys+30)& (0+255),w,b	;volatile
 14510  0063BC  5C29               	subwf	?_getTimeDecelaration^0,w,c
 14511  0063BE  511F               	movf	(_var_sys+31)& (0+255),w,b	;volatile
 14512  0063C0  582A               	subwfb	(?_getTimeDecelaration+1)^0,w,c
 14513  0063C2  5120               	movf	(_var_sys+32)& (0+255),w,b	;volatile
 14514  0063C4  582B               	subwfb	(?_getTimeDecelaration+2)^0,w,c
 14515  0063C6  502C               	movf	(?_getTimeDecelaration+3)^0,w,c
 14516  0063C8  0A80               	xorlw	128
 14517  0063CA  0100               	movlb	0	; () banked
 14518  0063CC  6FD8               	movwf	??_setPositionInvertionInClosing& (0+255),b
 14519  0063CE  0101               	movlb	1	; () banked
 14520  0063D0  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 14521  0063D2  0A80               	xorlw	128
 14522  0063D4  0100               	movlb	0	; () banked
 14523  0063D6  59D8               	subwfb	??_setPositionInvertionInClosing& (0+255),w,b
 14524  0063D8  B0D8               	btfsc	status,0,c
 14525  0063DA  D008               	goto	l20473
 14526                           
 14527                           ; BSR set to: 0
 14528  0063DC  0E02               	movlw	2
 14529  0063DE  19B4               	xorwf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 14530  0063E0  B4D8               	btfsc	status,2,c
 14531  0063E2  D004               	goto	l20473
 14532                           
 14533                           ; BSR set to: 0
 14534                           ;sm_ControlGate_MC50.c: 883:         var_sys.PositionActual = getTimeDecelaration(InOpen
      +                          Full);
 14535  0063E4  0E01               	movlw	1
 14536  0063E6  ECF7  F035         	call	_getTimeDecelaration
 14537  0063EA  D01A               	goto	L75
 14538  0063EC                     l20473:
 14539                           
 14540                           ; BSR set to: 0
 14541  0063EC  0E03               	movlw	3
 14542  0063EE  ECF7  F035         	call	_getTimeDecelaration
 14543  0063F2  5029               	movf	?_getTimeDecelaration^0,w,c
 14544  0063F4  0101               	movlb	1	; () banked
 14545  0063F6  5D1E               	subwf	(_var_sys+30)& (0+255),w,b	;volatile
 14546  0063F8  502A               	movf	(?_getTimeDecelaration+1)^0,w,c
 14547  0063FA  591F               	subwfb	(_var_sys+31)& (0+255),w,b	;volatile
 14548  0063FC  502B               	movf	(?_getTimeDecelaration+2)^0,w,c
 14549  0063FE  5920               	subwfb	(_var_sys+32)& (0+255),w,b	;volatile
 14550  006400  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 14551  006402  0A80               	xorlw	128
 14552  006404  0100               	movlb	0	; () banked
 14553  006406  6FD8               	movwf	??_setPositionInvertionInClosing& (0+255),b
 14554  006408  502C               	movf	(?_getTimeDecelaration+3)^0,w,c
 14555  00640A  0A80               	xorlw	128
 14556  00640C  59D8               	subwfb	??_setPositionInvertionInClosing& (0+255),w,b
 14557  00640E  B0D8               	btfsc	status,0,c
 14558  006410  D00F               	goto	l20479
 14559                           
 14560                           ; BSR set to: 0
 14561  006412  0E02               	movlw	2
 14562  006414  19B4               	xorwf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 14563  006416  B4D8               	btfsc	status,2,c
 14564  006418  D00B               	goto	l20479
 14565                           
 14566                           ; BSR set to: 0
 14567                           ;sm_ControlGate_MC50.c: 887:         var_sys.PositionActual = getTimeDecelaration(InClos
      +                          e);
 14568  00641A  0E03               	movlw	3
 14569  00641C  ECF7  F035         	call	_getTimeDecelaration
 14570  006420                     L75:
 14571  006420  C029  F11E         	movff	?_getTimeDecelaration,_var_sys+30	;volatile
 14572  006424  C02A  F11F         	movff	?_getTimeDecelaration+1,_var_sys+31	;volatile
 14573  006428  C02B  F120         	movff	?_getTimeDecelaration+2,_var_sys+32	;volatile
 14574  00642C  C02C  F121         	movff	?_getTimeDecelaration+3,_var_sys+33	;volatile
 14575  006430                     l20479:
 14576                           
 14577                           ;sm_ControlGate_MC50.c: 890:     var_sys.TimeMaxMotorIsON = ((signed long)var_sys_NVM.le
      +                          arningTimeToOpen - var_sys.PositionActual) + (var_sys_NVM.decelarationOpen*( 500/50))+ (
      +                          1000/50)*10;
 14578  006430  0100               	movlb	0	; () banked
 14579  006432  5198               	movf	_var_sys_NVM& (0+255),w,b	;volatile
 14580  006434  0D0A               	mullw	10
 14581  006436  CFF3 F0D8          	movff	prodl,??_setPositionInvertionInClosing
 14582  00643A  CFF4 F0D9          	movff	prodh,??_setPositionInvertionInClosing+1
 14583  00643E  0E00               	movlw	0
 14584  006440  BFD9               	btfsc	(??_setPositionInvertionInClosing+1)& (0+255),7,b
 14585  006442  0EFF               	movlw	255
 14586  006444  6FDA               	movwf	(??_setPositionInvertionInClosing+2)& (0+255),b
 14587  006446  6FDB               	movwf	(??_setPositionInvertionInClosing+3)& (0+255),b
 14588  006448  0101               	movlb	1	; () banked
 14589  00644A  511E               	movf	(_var_sys+30)& (0+255),w,b	;volatile
 14590  00644C  0100               	movlb	0	; () banked
 14591  00644E  5DD8               	subwf	??_setPositionInvertionInClosing& (0+255),w,b
 14592  006450  6FDC               	movwf	(??_setPositionInvertionInClosing+4)& (0+255),b
 14593  006452  0101               	movlb	1	; () banked
 14594  006454  511F               	movf	(_var_sys+31)& (0+255),w,b	;volatile
 14595  006456  0100               	movlb	0	; () banked
 14596  006458  59D9               	subwfb	(??_setPositionInvertionInClosing+1)& (0+255),w,b
 14597  00645A  6FDD               	movwf	(??_setPositionInvertionInClosing+5)& (0+255),b
 14598  00645C  0101               	movlb	1	; () banked
 14599  00645E  5120               	movf	(_var_sys+32)& (0+255),w,b	;volatile
 14600  006460  0100               	movlb	0	; () banked
 14601  006462  59DA               	subwfb	(??_setPositionInvertionInClosing+2)& (0+255),w,b
 14602  006464  6FDE               	movwf	(??_setPositionInvertionInClosing+6)& (0+255),b
 14603  006466  0101               	movlb	1	; () banked
 14604  006468  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 14605  00646A  0100               	movlb	0	; () banked
 14606  00646C  59DB               	subwfb	(??_setPositionInvertionInClosing+3)& (0+255),w,b
 14607  00646E  6FDF               	movwf	(??_setPositionInvertionInClosing+7)& (0+255),b
 14608  006470  51CC               	movf	(_var_sys_NVM+52)& (0+255),w,b	;volatile
 14609  006472  25DC               	addwf	(??_setPositionInvertionInClosing+4)& (0+255),w,b
 14610  006474  6FE0               	movwf	(??_setPositionInvertionInClosing+8)& (0+255),b
 14611  006476  51CD               	movf	(_var_sys_NVM+53)& (0+255),w,b	;volatile
 14612  006478  21DD               	addwfc	(??_setPositionInvertionInClosing+5)& (0+255),w,b
 14613  00647A  6FE1               	movwf	(??_setPositionInvertionInClosing+9)& (0+255),b
 14614  00647C  51CE               	movf	(_var_sys_NVM+54)& (0+255),w,b	;volatile
 14615  00647E  21DE               	addwfc	(??_setPositionInvertionInClosing+6)& (0+255),w,b
 14616  006480  6FE2               	movwf	(??_setPositionInvertionInClosing+10)& (0+255),b
 14617  006482  51CF               	movf	(_var_sys_NVM+55)& (0+255),w,b	;volatile
 14618  006484  21DF               	addwfc	(??_setPositionInvertionInClosing+7)& (0+255),w,b
 14619  006486  6FE3               	movwf	(??_setPositionInvertionInClosing+11)& (0+255),b
 14620  006488  0EC8               	movlw	200
 14621  00648A  25E0               	addwf	(??_setPositionInvertionInClosing+8)& (0+255),w,b
 14622  00648C  0101               	movlb	1	; () banked
 14623  00648E  6F18               	movwf	(_var_sys+24)& (0+255),b	;volatile
 14624  006490  0E00               	movlw	0
 14625  006492  0100               	movlb	0	; () banked
 14626  006494  21E1               	addwfc	(??_setPositionInvertionInClosing+9)& (0+255),w,b
 14627  006496  0101               	movlb	1	; () banked
 14628  006498  6F19               	movwf	(_var_sys+25)& (0+255),b	;volatile
 14629  00649A  0E00               	movlw	0
 14630  00649C  0100               	movlb	0	; () banked
 14631  00649E  21E2               	addwfc	(??_setPositionInvertionInClosing+10)& (0+255),w,b
 14632  0064A0  0101               	movlb	1	; () banked
 14633  0064A2  6F1A               	movwf	(_var_sys+26)& (0+255),b	;volatile
 14634  0064A4  0E00               	movlw	0
 14635  0064A6  0100               	movlb	0	; () banked
 14636  0064A8  21E3               	addwfc	(??_setPositionInvertionInClosing+11)& (0+255),w,b
 14637  0064AA  0101               	movlb	1	; () banked
 14638  0064AC  6F1B               	movwf	(_var_sys+27)& (0+255),b	;volatile
 14639                           
 14640                           ; BSR set to: 1
 14641  0064AE  0012               	return		;funcret
 14642  0064B0                     __end_of_setPositionInvertionInClosing:
 14643                           	callstack 0
 14644                           
 14645 ;; *************** function _getTimeDecelaration *****************
 14646 ;; Defined at:
 14647 ;;		line 641 in file "outputs_MC50.c"
 14648 ;; Parameters:    Size  Location     Type
 14649 ;;  state           1    wreg     enum E10381
 14650 ;; Auto vars:     Size  Location     Type
 14651 ;;  state           1   48[COMRAM] enum E10381
 14652 ;; Return value:  Size  Location     Type
 14653 ;;                  4   40[COMRAM] long 
 14654 ;; Registers used:
 14655 ;;		wreg, status,2, status,0, cstack
 14656 ;; Tracked objects:
 14657 ;;		On entry : 3E/1
 14658 ;;		On exit  : 0/0
 14659 ;;		Unchanged: 0/0
 14660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14661 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14662 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14663 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14664 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14665 ;;Total ram usage:        9 bytes
 14666 ;; Hardware stack levels used: 1
 14667 ;; Hardware stack levels required when called: 5
 14668 ;; This function calls:
 14669 ;;		___lmul
 14670 ;; This function is called by:
 14671 ;;		_getStateOpenPosition
 14672 ;;		_controlVelocity
 14673 ;;		_setPositionInvertionInClosing
 14674 ;;		_setPositionInvertionInOpening
 14675 ;; This function uses a non-reentrant model
 14676 ;;
 14677                           
 14678                           	psect	text38
 14679  006BEE                     __ptext38:
 14680                           	callstack 0
 14681  006BEE                     _getTimeDecelaration:
 14682                           	callstack 22
 14683                           
 14684                           ; BSR set to: 1
 14685                           ;incstack = 0
 14686                           ;getTimeDecelaration@state stored from wreg
 14687  006BEE  6E31               	movwf	getTimeDecelaration@state^0,c
 14688                           
 14689                           ;outputs_MC50.c: 641: signed long getTimeDecelaration(stateMotor_enum state);outputs_MC5
      +                          0.c: 642: {;outputs_MC50.c: 644:     if(state==InClose)
 14690  006BF0  0E03               	movlw	3
 14691  006BF2  1831               	xorwf	getTimeDecelaration@state^0,w,c
 14692  006BF4  A4D8               	btfss	status,2,c
 14693  006BF6  D033               	goto	l19501
 14694                           
 14695                           ;outputs_MC50.c: 645:     {;outputs_MC50.c: 646:         if (var_sys_NVM.TypeofMotor != 
      +                          2)
 14696  006BF8  0E02               	movlw	2
 14697  006BFA  0100               	movlb	0	; () banked
 14698  006BFC  19B4               	xorwf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 14699  006BFE  B4D8               	btfsc	status,2,c
 14700  006C00  D018               	goto	l19497
 14701                           
 14702                           ; BSR set to: 0
 14703                           ;outputs_MC50.c: 647:         {return (signed long)((signed long)var_sys_NVM.decelaratio
      +                          nClose*( 500/50));}
 14704  006C02  5199               	movf	(_var_sys_NVM+1)& (0+255),w,b	;volatile
 14705  006C04  6E1D               	movwf	___lmul@multiplier^0,c
 14706  006C06  6A1E               	clrf	(___lmul@multiplier+1)^0,c
 14707  006C08  6A1F               	clrf	(___lmul@multiplier+2)^0,c
 14708  006C0A  6A20               	clrf	(___lmul@multiplier+3)^0,c
 14709  006C0C  0E0A               	movlw	10
 14710  006C0E  6E21               	movwf	___lmul@multiplicand^0,c
 14711  006C10  0E00               	movlw	0
 14712  006C12  6E22               	movwf	(___lmul@multiplicand+1)^0,c
 14713  006C14  0E00               	movlw	0
 14714  006C16  6E23               	movwf	(___lmul@multiplicand+2)^0,c
 14715  006C18  0E00               	movlw	0
 14716  006C1A  6E24               	movwf	(___lmul@multiplicand+3)^0,c
 14717  006C1C  EC33  F042         	call	___lmul	;wreg free
 14718  006C20  C01D  F029         	movff	?___lmul,?_getTimeDecelaration
 14719  006C24  C01E  F02A         	movff	?___lmul+1,?_getTimeDecelaration+1
 14720  006C28  C01F  F02B         	movff	?___lmul+2,?_getTimeDecelaration+2
 14721  006C2C  C020  F02C         	movff	?___lmul+3,?_getTimeDecelaration+3
 14722  006C30  0012               	return	
 14723  006C32                     l19497:
 14724                           
 14725                           ; BSR set to: 0
 14726  006C32  C099  F02D         	movff	_var_sys_NVM+1,??_getTimeDecelaration	;volatile
 14727  006C36  6A2E               	clrf	(??_getTimeDecelaration+1)^0,c
 14728  006C38  6A2F               	clrf	(??_getTimeDecelaration+2)^0,c
 14729  006C3A  6A30               	clrf	(??_getTimeDecelaration+3)^0,c
 14730  006C3C  0E02               	movlw	2
 14731  006C3E                     u22325:
 14732  006C3E  90D8               	bcf	status,0,c
 14733  006C40  362D               	rlcf	??_getTimeDecelaration^0,f,c
 14734  006C42  362E               	rlcf	(??_getTimeDecelaration+1)^0,f,c
 14735  006C44  362F               	rlcf	(??_getTimeDecelaration+2)^0,f,c
 14736  006C46  3630               	rlcf	(??_getTimeDecelaration+3)^0,f,c
 14737  006C48  2EE8               	decfsz	wreg,f,c
 14738  006C4A  D7F9               	goto	u22325
 14739  006C4C  C02D  F029         	movff	??_getTimeDecelaration,?_getTimeDecelaration
 14740  006C50  C02E  F02A         	movff	??_getTimeDecelaration+1,?_getTimeDecelaration+1
 14741  006C54  C02F  F02B         	movff	??_getTimeDecelaration+2,?_getTimeDecelaration+2
 14742  006C58  C030  F02C         	movff	??_getTimeDecelaration+3,?_getTimeDecelaration+3
 14743  006C5C  0012               	return	
 14744  006C5E                     l19501:
 14745                           
 14746                           ;outputs_MC50.c: 651:     {;outputs_MC50.c: 652:         if (var_sys_NVM.TypeofMotor != 
      +                          2)
 14747  006C5E  0E02               	movlw	2
 14748  006C60  0100               	movlb	0	; () banked
 14749  006C62  19B4               	xorwf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 14750  006C64  B4D8               	btfsc	status,2,c
 14751  006C66  D01D               	goto	l19509
 14752                           
 14753                           ; BSR set to: 0
 14754                           ;outputs_MC50.c: 653:         {return (signed long)((signed long)var_sys_NVM.learningTim
      +                          eToOpen-(((signed long)var_sys_NVM.decelarationOpen*( 500/50))));}
 14755  006C68  5198               	movf	_var_sys_NVM& (0+255),w,b	;volatile
 14756  006C6A  6E1D               	movwf	___lmul@multiplier^0,c
 14757  006C6C  6A1E               	clrf	(___lmul@multiplier+1)^0,c
 14758  006C6E  6A1F               	clrf	(___lmul@multiplier+2)^0,c
 14759  006C70  6A20               	clrf	(___lmul@multiplier+3)^0,c
 14760  006C72  0EF6               	movlw	246
 14761  006C74  6E21               	movwf	___lmul@multiplicand^0,c
 14762  006C76  0EFF               	movlw	255
 14763  006C78  6E22               	movwf	(___lmul@multiplicand+1)^0,c
 14764  006C7A  0EFF               	movlw	255
 14765  006C7C  6E23               	movwf	(___lmul@multiplicand+2)^0,c
 14766  006C7E  0EFF               	movlw	255
 14767  006C80  6E24               	movwf	(___lmul@multiplicand+3)^0,c
 14768  006C82  EC33  F042         	call	___lmul	;wreg free
 14769  006C86  0100               	movlb	0	; () banked
 14770  006C88  51CC               	movf	(_var_sys_NVM+52)& (0+255),w,b	;volatile
 14771  006C8A  241D               	addwf	?___lmul^0,w,c
 14772  006C8C  6E29               	movwf	?_getTimeDecelaration^0,c
 14773  006C8E  51CD               	movf	(_var_sys_NVM+53)& (0+255),w,b	;volatile
 14774  006C90  201E               	addwfc	(?___lmul+1)^0,w,c
 14775  006C92  6E2A               	movwf	(?_getTimeDecelaration+1)^0,c
 14776  006C94  51CE               	movf	(_var_sys_NVM+54)& (0+255),w,b	;volatile
 14777  006C96  201F               	addwfc	(?___lmul+2)^0,w,c
 14778  006C98  6E2B               	movwf	(?_getTimeDecelaration+2)^0,c
 14779  006C9A  51CF               	movf	(_var_sys_NVM+55)& (0+255),w,b	;volatile
 14780  006C9C  2020               	addwfc	(?___lmul+3)^0,w,c
 14781  006C9E  6E2C               	movwf	(?_getTimeDecelaration+3)^0,c
 14782  006CA0  0012               	return	
 14783  006CA2                     l19509:
 14784                           
 14785                           ; BSR set to: 0
 14786  006CA2  C098  F02D         	movff	_var_sys_NVM,??_getTimeDecelaration	;volatile
 14787  006CA6  6A2E               	clrf	(??_getTimeDecelaration+1)^0,c
 14788  006CA8  6A2F               	clrf	(??_getTimeDecelaration+2)^0,c
 14789  006CAA  6A30               	clrf	(??_getTimeDecelaration+3)^0,c
 14790  006CAC  0E02               	movlw	2
 14791  006CAE                     u22345:
 14792  006CAE  90D8               	bcf	status,0,c
 14793  006CB0  362D               	rlcf	??_getTimeDecelaration^0,f,c
 14794  006CB2  362E               	rlcf	(??_getTimeDecelaration+1)^0,f,c
 14795  006CB4  362F               	rlcf	(??_getTimeDecelaration+2)^0,f,c
 14796  006CB6  3630               	rlcf	(??_getTimeDecelaration+3)^0,f,c
 14797  006CB8  2EE8               	decfsz	wreg,f,c
 14798  006CBA  D7F9               	goto	u22345
 14799  006CBC  502D               	movf	??_getTimeDecelaration^0,w,c
 14800  006CBE  5DCC               	subwf	(_var_sys_NVM+52)& (0+255),w,b	;volatile
 14801  006CC0  6E29               	movwf	?_getTimeDecelaration^0,c
 14802  006CC2  502E               	movf	(??_getTimeDecelaration+1)^0,w,c
 14803  006CC4  59CD               	subwfb	(_var_sys_NVM+53)& (0+255),w,b	;volatile
 14804  006CC6  6E2A               	movwf	(?_getTimeDecelaration+1)^0,c
 14805  006CC8  502F               	movf	(??_getTimeDecelaration+2)^0,w,c
 14806  006CCA  59CE               	subwfb	(_var_sys_NVM+54)& (0+255),w,b	;volatile
 14807  006CCC  6E2B               	movwf	(?_getTimeDecelaration+2)^0,c
 14808  006CCE  5030               	movf	(??_getTimeDecelaration+3)^0,w,c
 14809  006CD0  59CF               	subwfb	(_var_sys_NVM+55)& (0+255),w,b	;volatile
 14810  006CD2  6E2C               	movwf	(?_getTimeDecelaration+3)^0,c
 14811  006CD4  0012               	return		;funcret
 14812  006CD6                     __end_of_getTimeDecelaration:
 14813                           	callstack 0
 14814                           
 14815 ;; *************** function ___lmul *****************
 14816 ;; Defined at:
 14817 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\Umul32.c"
 14818 ;; Parameters:    Size  Location     Type
 14819 ;;  multiplier      4   28[COMRAM] unsigned long 
 14820 ;;  multiplicand    4   32[COMRAM] unsigned long 
 14821 ;; Auto vars:     Size  Location     Type
 14822 ;;  product         4   36[COMRAM] unsigned long 
 14823 ;; Return value:  Size  Location     Type
 14824 ;;                  4   28[COMRAM] unsigned long 
 14825 ;; Registers used:
 14826 ;;		wreg, status,2, status,0
 14827 ;; Tracked objects:
 14828 ;;		On entry : 0/1
 14829 ;;		On exit  : 0/0
 14830 ;;		Unchanged: 0/0
 14831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14832 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14833 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14835 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14836 ;;Total ram usage:       12 bytes
 14837 ;; Hardware stack levels used: 1
 14838 ;; Hardware stack levels required when called: 4
 14839 ;; This function calls:
 14840 ;;		Nothing
 14841 ;; This function is called by:
 14842 ;;		_getStateOpenPosition
 14843 ;;		_getTimeDecelaration
 14844 ;;		_actionZone_Closing
 14845 ;;		_sm_execute_menuConfiguration
 14846 ;; This function uses a non-reentrant model
 14847 ;;
 14848                           
 14849                           	psect	text39
 14850  008466                     __ptext39:
 14851                           	callstack 0
 14852  008466                     ___lmul:
 14853                           	callstack 24
 14854                           
 14855                           ;incstack = 0
 14856  008466  0E00               	movlw	0
 14857  008468  6E25               	movwf	___lmul@product^0,c
 14858  00846A  0E00               	movlw	0
 14859  00846C  6E26               	movwf	(___lmul@product+1)^0,c
 14860  00846E  0E00               	movlw	0
 14861  008470  6E27               	movwf	(___lmul@product+2)^0,c
 14862  008472  0E00               	movlw	0
 14863  008474  6E28               	movwf	(___lmul@product+3)^0,c
 14864  008476                     l19387:
 14865  008476  A01D               	btfss	___lmul@multiplier^0,0,c
 14866  008478  D008               	goto	l19391
 14867  00847A  5021               	movf	___lmul@multiplicand^0,w,c
 14868  00847C  2625               	addwf	___lmul@product^0,f,c
 14869  00847E  5022               	movf	(___lmul@multiplicand+1)^0,w,c
 14870  008480  2226               	addwfc	(___lmul@product+1)^0,f,c
 14871  008482  5023               	movf	(___lmul@multiplicand+2)^0,w,c
 14872  008484  2227               	addwfc	(___lmul@product+2)^0,f,c
 14873  008486  5024               	movf	(___lmul@multiplicand+3)^0,w,c
 14874  008488  2228               	addwfc	(___lmul@product+3)^0,f,c
 14875  00848A                     l19391:
 14876  00848A  90D8               	bcf	status,0,c
 14877  00848C  3621               	rlcf	___lmul@multiplicand^0,f,c
 14878  00848E  3622               	rlcf	(___lmul@multiplicand+1)^0,f,c
 14879  008490  3623               	rlcf	(___lmul@multiplicand+2)^0,f,c
 14880  008492  3624               	rlcf	(___lmul@multiplicand+3)^0,f,c
 14881  008494  90D8               	bcf	status,0,c
 14882  008496  3220               	rrcf	(___lmul@multiplier+3)^0,f,c
 14883  008498  321F               	rrcf	(___lmul@multiplier+2)^0,f,c
 14884  00849A  321E               	rrcf	(___lmul@multiplier+1)^0,f,c
 14885  00849C  321D               	rrcf	___lmul@multiplier^0,f,c
 14886  00849E  501D               	movf	___lmul@multiplier^0,w,c
 14887  0084A0  101E               	iorwf	(___lmul@multiplier+1)^0,w,c
 14888  0084A2  101F               	iorwf	(___lmul@multiplier+2)^0,w,c
 14889  0084A4  1020               	iorwf	(___lmul@multiplier+3)^0,w,c
 14890  0084A6  A4D8               	btfss	status,2,c
 14891  0084A8  D7E6               	goto	l19387
 14892  0084AA  C025  F01D         	movff	___lmul@product,?___lmul
 14893  0084AE  C026  F01E         	movff	___lmul@product+1,?___lmul+1
 14894  0084B2  C027  F01F         	movff	___lmul@product+2,?___lmul+2
 14895  0084B6  C028  F020         	movff	___lmul@product+3,?___lmul+3
 14896  0084BA  0012               	return		;funcret
 14897  0084BC                     __end_of___lmul:
 14898                           	callstack 0
 14899                           
 14900 ;; *************** function _StopOrder *****************
 14901 ;; Defined at:
 14902 ;;		line 96 in file "sm_ControlGate_MC50.c"
 14903 ;; Parameters:    Size  Location     Type
 14904 ;;		None
 14905 ;; Auto vars:     Size  Location     Type
 14906 ;;		None
 14907 ;; Return value:  Size  Location     Type
 14908 ;;                  1    wreg      void 
 14909 ;; Registers used:
 14910 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14911 ;; Tracked objects:
 14912 ;;		On entry : 3E/1
 14913 ;;		On exit  : 0/0
 14914 ;;		Unchanged: 0/0
 14915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14916 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14917 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14919 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14920 ;;Total ram usage:        0 bytes
 14921 ;; Hardware stack levels used: 1
 14922 ;; Hardware stack levels required when called: 6
 14923 ;; This function calls:
 14924 ;;		_sm_send_event
 14925 ;; This function is called by:
 14926 ;;		_actionZone_Opening
 14927 ;;		_actionZone_Closing
 14928 ;; This function uses a non-reentrant model
 14929 ;;
 14930                           
 14931                           	psect	text40
 14932  008F30                     __ptext40:
 14933                           	callstack 0
 14934  008F30                     _StopOrder:
 14935                           	callstack 22
 14936                           
 14937                           ;sm_ControlGate_MC50.c: 99:    var_sys.StateMotor = Stopped;
 14938                           
 14939                           ;incstack = 0
 14940  008F30  0E00               	movlw	0
 14941  008F32  0101               	movlb	1	; () banked
 14942  008F34  6F00               	movwf	_var_sys& (0+255),b	;volatile
 14943                           
 14944                           ; BSR set to: 1
 14945                           ;sm_ControlGate_MC50.c: 100:    sm_send_event(&controlGate_stateMachine, ev_StopGate);
 14946  008F36  0EE2               	movlw	low _controlGate_stateMachine
 14947  008F38  6E12               	movwf	sm_send_event@psm^0,c
 14948  008F3A  0E01               	movlw	high _controlGate_stateMachine
 14949  008F3C  6E13               	movwf	(sm_send_event@psm+1)^0,c
 14950  008F3E  0E00               	movlw	0
 14951  008F40  6E15               	movwf	(sm_send_event@event+1)^0,c
 14952  008F42  0E0D               	movlw	13
 14953  008F44  6E14               	movwf	sm_send_event@event^0,c
 14954  008F46  EC25  F041         	call	_sm_send_event	;wreg free
 14955  008F4A  0012               	return		;funcret
 14956  008F4C                     __end_of_StopOrder:
 14957                           	callstack 0
 14958                           
 14959 ;; *************** function _GetSecurityStateInClosing *****************
 14960 ;; Defined at:
 14961 ;;		line 776 in file "inputs_MC50.c"
 14962 ;; Parameters:    Size  Location     Type
 14963 ;;		None
 14964 ;; Auto vars:     Size  Location     Type
 14965 ;;		None
 14966 ;; Return value:  Size  Location     Type
 14967 ;;                  1    wreg      enum E10564
 14968 ;; Registers used:
 14969 ;;		wreg, status,2, status,0, cstack
 14970 ;; Tracked objects:
 14971 ;;		On entry : 0/0
 14972 ;;		On exit  : 3E/0
 14973 ;;		Unchanged: 0/0
 14974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14975 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14976 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14978 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14979 ;;Total ram usage:        0 bytes
 14980 ;; Hardware stack levels used: 1
 14981 ;; Hardware stack levels required when called: 5
 14982 ;; This function calls:
 14983 ;;		_SetSegmentValueIntermitent
 14984 ;; This function is called by:
 14985 ;;		_actionZone_Opening
 14986 ;;		_actionZone_Opened
 14987 ;;		_actionZone_Closing
 14988 ;; This function uses a non-reentrant model
 14989 ;;
 14990                           
 14991                           	psect	text41
 14992  0072E8                     __ptext41:
 14993                           	callstack 0
 14994  0072E8                     _GetSecurityStateInClosing:
 14995                           	callstack 23
 14996                           
 14997                           ;inputs_MC50.c: 786:      if((var_sys_NVM.securityBandIsON == 1) && (var_sys.SecurityBar
      +                          IsObstructed == YES)&&(var_sys_NVM.securityBandInOpen == 0)&& (var_sys_NVM.Stopboton == 
      +                          0))
 14998                           
 14999                           ;incstack = 0
 15000  0072E8  0100               	movlb	0	; () banked
 15001  0072EA  05A1               	decf	(_var_sys_NVM+9)& (0+255),w,b	;volatile
 15002  0072EC  A4D8               	btfss	status,2,c
 15003  0072EE  D01B               	goto	l20145
 15004                           
 15005                           ; BSR set to: 0
 15006  0072F0  0101               	movlb	1	; () banked
 15007  0072F2  0502               	decf	(_var_sys+2)& (0+255),w,b	;volatile
 15008  0072F4  A4D8               	btfss	status,2,c
 15009  0072F6  D017               	goto	l20145
 15010                           
 15011                           ; BSR set to: 1
 15012  0072F8  0100               	movlb	0	; () banked
 15013  0072FA  51A3               	movf	(_var_sys_NVM+11)& (0+255),w,b	;volatile
 15014  0072FC  A4D8               	btfss	status,2,c
 15015  0072FE  D013               	goto	l20145
 15016                           
 15017                           ; BSR set to: 0
 15018  007300  51AE               	movf	(_var_sys_NVM+22)& (0+255),w,b	;volatile
 15019  007302  A4D8               	btfss	status,2,c
 15020  007304  D010               	goto	l20145
 15021                           
 15022                           ; BSR set to: 0
 15023                           ;inputs_MC50.c: 787:     {;inputs_MC50.c: 790:         ts_system.timeSinalizationDigit=(
      +                           200/50);
 15024  007306  0E00               	movlw	0
 15025  007308  0101               	movlb	1	; () banked
 15026  00730A  6FA7               	movwf	(_ts_system+13)& (0+255),b	;volatile
 15027  00730C  0E04               	movlw	4
 15028  00730E  6FA6               	movwf	(_ts_system+12)& (0+255),b	;volatile
 15029                           
 15030                           ; BSR set to: 1
 15031                           ;inputs_MC50.c: 791:         SetSegmentValueIntermitent(dL,dA,(1000/50));
 15032  007310  0E0A               	movlw	10
 15033  007312  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 15034  007314  0E00               	movlw	0
 15035  007316  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 15036  007318  0E14               	movlw	20
 15037  00731A  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 15038  00731C  0E12               	movlw	18
 15039  00731E  EC9D  F045         	call	_SetSegmentValueIntermitent
 15040  007322                     l20139:
 15041                           
 15042                           ; BSR set to: 1
 15043                           ;inputs_MC50.c: 792:         return YES;
 15044  007322  0E01               	movlw	1
 15045  007324  0012               	return	
 15046  007326                     l20145:
 15047  007326  0100               	movlb	0	; () banked
 15048  007328  05AE               	decf	(_var_sys_NVM+22)& (0+255),w,b	;volatile
 15049  00732A  A4D8               	btfss	status,2,c
 15050  00732C  D013               	goto	l20159
 15051                           
 15052                           ; BSR set to: 0
 15053  00732E  0101               	movlb	1	; () banked
 15054  007330  0502               	decf	(_var_sys+2)& (0+255),w,b	;volatile
 15055  007332  A4D8               	btfss	status,2,c
 15056  007334  D00F               	goto	l20159
 15057                           
 15058                           ; BSR set to: 1
 15059                           ;inputs_MC50.c: 795:     {;inputs_MC50.c: 797:         ts_system.timeSinalizationDigit=(
      +                           200/50);
 15060  007336  0E00               	movlw	0
 15061  007338  6FA7               	movwf	(_ts_system+13)& (0+255),b	;volatile
 15062  00733A  0E04               	movlw	4
 15063  00733C  6FA6               	movwf	(_ts_system+12)& (0+255),b	;volatile
 15064                           
 15065                           ; BSR set to: 1
 15066                           ;inputs_MC50.c: 798:         SetSegmentValueIntermitent(d5,dt,(1000/50));
 15067  00733E  0E15               	movlw	21
 15068  007340  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 15069  007342  0E00               	movlw	0
 15070  007344  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 15071  007346  0E14               	movlw	20
 15072  007348  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 15073  00734A  0E05               	movlw	5
 15074  00734C  EC9D  F045         	call	_SetSegmentValueIntermitent
 15075                           
 15076                           ; BSR set to: 1
 15077                           ;inputs_MC50.c: 799:         return ST;
 15078  007350  0E02               	movlw	2
 15079  007352  0012               	return	
 15080  007354                     l20159:
 15081  007354  0100               	movlb	0	; () banked
 15082  007356  059F               	decf	(_var_sys_NVM+7)& (0+255),w,b	;volatile
 15083  007358  A4D8               	btfss	status,2,c
 15084  00735A  D017               	goto	l20175
 15085                           
 15086                           ; BSR set to: 0
 15087  00735C  0101               	movlb	1	; () banked
 15088  00735E  0501               	decf	(_var_sys+1)& (0+255),w,b	;volatile
 15089  007360  A4D8               	btfss	status,2,c
 15090  007362  D013               	goto	l20175
 15091                           
 15092                           ; BSR set to: 1
 15093  007364  0100               	movlb	0	; () banked
 15094  007366  51A0               	movf	(_var_sys_NVM+8)& (0+255),w,b	;volatile
 15095  007368  A4D8               	btfss	status,2,c
 15096  00736A  D00F               	goto	l20175
 15097                           
 15098                           ; BSR set to: 0
 15099                           ;inputs_MC50.c: 803:     {;inputs_MC50.c: 805:         ts_system.timeSinalizationDigit=(
      +                           200/50);
 15100  00736C  0E00               	movlw	0
 15101  00736E  0101               	movlb	1	; () banked
 15102  007370  6FA7               	movwf	(_ts_system+13)& (0+255),b	;volatile
 15103  007372  0E04               	movlw	4
 15104  007374  6FA6               	movwf	(_ts_system+12)& (0+255),b	;volatile
 15105                           
 15106                           ; BSR set to: 1
 15107                           ;inputs_MC50.c: 806:         SetSegmentValueIntermitent(dL,dE,(1000/50));
 15108  007376  0E0E               	movlw	14
 15109  007378  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 15110  00737A  0E00               	movlw	0
 15111  00737C  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 15112  00737E  0E14               	movlw	20
 15113  007380  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 15114  007382  0E12               	movlw	18
 15115  007384  EC9D  F045         	call	_SetSegmentValueIntermitent
 15116  007388  D7CC               	goto	l20139
 15117  00738A                     l20175:
 15118                           
 15119                           ;inputs_MC50.c: 811:     {;inputs_MC50.c: 812:         return NO;
 15120  00738A  0E00               	movlw	0
 15121  00738C  0012               	return		;funcret
 15122  00738E                     __end_of_GetSecurityStateInClosing:
 15123                           	callstack 0
 15124                           
 15125 ;; *************** function _actionZone_Closed *****************
 15126 ;; Defined at:
 15127 ;;		line 327 in file "sm_ControlGate_MC50.c"
 15128 ;; Parameters:    Size  Location     Type
 15129 ;;		None
 15130 ;; Auto vars:     Size  Location     Type
 15131 ;;  typeOpenOrde    1   32[COMRAM] enum E10372
 15132 ;;  securityOpen    1   31[COMRAM] enum E10397
 15133 ;; Return value:  Size  Location     Type
 15134 ;;                  1    wreg      void 
 15135 ;; Registers used:
 15136 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15137 ;; Tracked objects:
 15138 ;;		On entry : 3F/0
 15139 ;;		On exit  : 0/0
 15140 ;;		Unchanged: 0/0
 15141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15142 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15143 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15145 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15146 ;;Total ram usage:        2 bytes
 15147 ;; Hardware stack levels used: 1
 15148 ;; Hardware stack levels required when called: 8
 15149 ;; This function calls:
 15150 ;;		_GetOpenOrder
 15151 ;;		_GetSecurityStateInOpening
 15152 ;;		_InitFullAutoTime
 15153 ;;		_InitWalkAutoTime
 15154 ;;		_OpenFullOrder
 15155 ;;		_OpenWalkOrder
 15156 ;;		_WaitPreFlash
 15157 ;;		_sm_send_event
 15158 ;; This function is called by:
 15159 ;;		_sm_execute_ControlGate
 15160 ;; This function uses a non-reentrant model
 15161 ;;
 15162                           
 15163                           	psect	text42
 15164  00723E                     __ptext42:
 15165                           	callstack 0
 15166  00723E                     _actionZone_Closed:
 15167                           	callstack 21
 15168                           
 15169                           ; BSR set to: 0
 15170                           ;sm_ControlGate_MC50.c: 331:     if (main_stateMachine.current_state != st_MenuConfigura
      +                          tion) {
 15171                           
 15172                           ;incstack = 0
 15173  00723E  0101               	movlb	1	; () banked
 15174  007240  05ED               	decf	_main_stateMachine& (0+255),w,b
 15175  007242  11EE               	iorwf	(_main_stateMachine+1)& (0+255),w,b
 15176  007244  B4D8               	btfsc	status,2,c
 15177  007246  0012               	return	
 15178                           
 15179                           ; BSR set to: 1
 15180                           ;sm_ControlGate_MC50.c: 334:         TypeCMD typeOpenOrder = GetOpenOrder();
 15181  007248  ECC8  F028         	call	_GetOpenOrder	;wreg free
 15182  00724C  6E21               	movwf	actionZone_Closed@typeOpenOrder^0,c
 15183                           
 15184                           ;sm_ControlGate_MC50.c: 336:         StateEnum securityOpening = GetSecurityStateInOpeni
      +                          ng();
 15185  00724E  ECC7  F039         	call	_GetSecurityStateInOpening	;wreg free
 15186  007252  6E20               	movwf	actionZone_Closed@securityOpening^0,c
 15187                           
 15188                           ;sm_ControlGate_MC50.c: 338:         if (var_sys_NVM.homemPresente == 1) {
 15189  007254  0100               	movlb	0	; () banked
 15190  007256  05A8               	decf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 15191  007258  A4D8               	btfss	status,2,c
 15192  00725A  D018               	goto	l21317
 15193                           
 15194                           ; BSR set to: 0
 15195                           ;sm_ControlGate_MC50.c: 344:             if (typeOpenOrder == TypeFullOpen && var_sys.Fi
      +                          mCurso_OpenIsEnabled == NO && securityOpening == NO) {
 15196  00725C  0E03               	movlw	3
 15197  00725E  1821               	xorwf	actionZone_Closed@typeOpenOrder^0,w,c
 15198  007260  A4D8               	btfss	status,2,c
 15199  007262  0012               	return	
 15200                           
 15201                           ; BSR set to: 0
 15202  007264  0101               	movlb	1	; () banked
 15203  007266  5104               	movf	(_var_sys+4)& (0+255),w,b	;volatile
 15204  007268  A4D8               	btfss	status,2,c
 15205  00726A  0012               	return	
 15206                           
 15207                           ; BSR set to: 1
 15208  00726C  5020               	movf	actionZone_Closed@securityOpening^0,w,c
 15209  00726E  A4D8               	btfss	status,2,c
 15210  007270  0012               	return	
 15211                           
 15212                           ; BSR set to: 1
 15213                           ;sm_ControlGate_MC50.c: 346:                 OpenFullOrder();
 15214  007272  ECF6  F046         	call	_OpenFullOrder	;wreg free
 15215  007276                     l21315:
 15216                           
 15217                           ;sm_ControlGate_MC50.c: 347:                 sm_send_event(&main_stateMachine, ev_MotorI
      +                          sOpen);
 15218  007276  0EED               	movlw	low _main_stateMachine
 15219  007278  6E12               	movwf	sm_send_event@psm^0,c
 15220  00727A  0E01               	movlw	high _main_stateMachine
 15221  00727C  6E13               	movwf	(sm_send_event@psm+1)^0,c
 15222  00727E  0E00               	movlw	0
 15223  007280  6E15               	movwf	(sm_send_event@event+1)^0,c
 15224  007282  0E11               	movlw	17
 15225  007284  6E14               	movwf	sm_send_event@event^0,c
 15226  007286  EC25  F041         	call	_sm_send_event	;wreg free
 15227  00728A  0012               	return	
 15228  00728C                     l21317:
 15229                           
 15230                           ; BSR set to: 0
 15231  00728C  0421               	decf	actionZone_Closed@typeOpenOrder^0,w,c
 15232  00728E  B4D8               	btfsc	status,2,c
 15233  007290  D004               	goto	u24720
 15234                           
 15235                           ; BSR set to: 0
 15236  007292  0E03               	movlw	3
 15237  007294  1821               	xorwf	actionZone_Closed@typeOpenOrder^0,w,c
 15238  007296  A4D8               	btfss	status,2,c
 15239  007298  D017               	goto	l21337
 15240  00729A                     u24720:
 15241                           
 15242                           ; BSR set to: 0
 15243  00729A  5020               	movf	actionZone_Closed@securityOpening^0,w,c
 15244  00729C  A4D8               	btfss	status,2,c
 15245  00729E  D014               	goto	l21337
 15246                           
 15247                           ; BSR set to: 0
 15248  0072A0  0101               	movlb	1	; () banked
 15249  0072A2  511D               	movf	(_var_sys+29)& (0+255),w,b	;volatile
 15250  0072A4  A4D8               	btfss	status,2,c
 15251  0072A6  D010               	goto	l21337
 15252                           
 15253                           ; BSR set to: 1
 15254                           ;sm_ControlGate_MC50.c: 353:             if (var_sys_NVM.flashRGBMode == rgb_pre){
 15255  0072A8  0E02               	movlw	2
 15256  0072AA  0100               	movlb	0	; () banked
 15257  0072AC  19B1               	xorwf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 15258  0072AE  A4D8               	btfss	status,2,c
 15259  0072B0  D006               	goto	l21331
 15260                           
 15261                           ; BSR set to: 0
 15262                           ;sm_ControlGate_MC50.c: 354:                 var_sys.preflashingcontrol = YES;
 15263  0072B2  0E01               	movlw	1
 15264  0072B4  0101               	movlb	1	; () banked
 15265  0072B6  6F1D               	movwf	(_var_sys+29)& (0+255),b	;volatile
 15266                           
 15267                           ; BSR set to: 1
 15268                           ;sm_ControlGate_MC50.c: 355:                 WaitPreFlash();
 15269  0072B8  EC82  F03F         	call	_WaitPreFlash	;wreg free
 15270                           
 15271                           ;sm_ControlGate_MC50.c: 356:             }
 15272  0072BC  0012               	return	
 15273  0072BE                     l21331:
 15274                           
 15275                           ; BSR set to: 0
 15276                           ;sm_ControlGate_MC50.c: 358:                 OpenFullOrder();
 15277  0072BE  ECF6  F046         	call	_OpenFullOrder	;wreg free
 15278                           
 15279                           ;sm_ControlGate_MC50.c: 359:                InitFullAutoTime();
 15280  0072C2  ECEA  F047         	call	_InitFullAutoTime	;wreg free
 15281  0072C6  D7D7               	goto	l21315
 15282  0072C8                     l21337:
 15283  0072C8  0E02               	movlw	2
 15284  0072CA  1821               	xorwf	actionZone_Closed@typeOpenOrder^0,w,c
 15285  0072CC  A4D8               	btfss	status,2,c
 15286  0072CE  0012               	return	
 15287  0072D0  5020               	movf	actionZone_Closed@securityOpening^0,w,c
 15288  0072D2  A4D8               	btfss	status,2,c
 15289  0072D4  0012               	return	
 15290  0072D6  0100               	movlb	0	; () banked
 15291  0072D8  519C               	movf	(_var_sys_NVM+4)& (0+255),w,b	;volatile
 15292  0072DA  B4D8               	btfsc	status,2,c
 15293  0072DC  0012               	return	
 15294                           
 15295                           ; BSR set to: 0
 15296                           ;sm_ControlGate_MC50.c: 367:             OpenWalkOrder();
 15297  0072DE  ECBA  F03F         	call	_OpenWalkOrder	;wreg free
 15298                           
 15299                           ;sm_ControlGate_MC50.c: 368:             InitWalkAutoTime();
 15300  0072E2  EC6F  F048         	call	_InitWalkAutoTime	;wreg free
 15301  0072E6  D7C7               	goto	l21315
 15302  0072E8                     __end_of_actionZone_Closed:
 15303                           	callstack 0
 15304                           
 15305 ;; *************** function _WaitPreFlash *****************
 15306 ;; Defined at:
 15307 ;;		line 41 in file "sm_ControlGate_MC50.c"
 15308 ;; Parameters:    Size  Location     Type
 15309 ;;		None
 15310 ;; Auto vars:     Size  Location     Type
 15311 ;;		None
 15312 ;; Return value:  Size  Location     Type
 15313 ;;                  1    wreg      void 
 15314 ;; Registers used:
 15315 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15316 ;; Tracked objects:
 15317 ;;		On entry : 3F/1
 15318 ;;		On exit  : 3F/1
 15319 ;;		Unchanged: 0/0
 15320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15321 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15322 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15324 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15325 ;;Total ram usage:        0 bytes
 15326 ;; Hardware stack levels used: 1
 15327 ;; Hardware stack levels required when called: 7
 15328 ;; This function calls:
 15329 ;;		_InitFullAutoTime
 15330 ;;		_OpenFullOrder
 15331 ;;		_sm_send_event
 15332 ;; This function is called by:
 15333 ;;		_sm_execute_ControlGate
 15334 ;;		_actionZone_Closed
 15335 ;; This function uses a non-reentrant model
 15336 ;;
 15337                           
 15338                           	psect	text43
 15339  007F04                     __ptext43:
 15340                           	callstack 0
 15341  007F04                     _WaitPreFlash:
 15342                           	callstack 21
 15343                           
 15344                           ; BSR set to: 1
 15345                           ;sm_ControlGate_MC50.c: 44:     if ((var_sys_NVM.flashRGBMode == rgb_pre) && (var_sys.pr
      +                          eflashingcontrol == YES) && (ts_system.timewaitFlashRGB <=0) && (aux_i == 0))
 15346                           
 15347                           ;incstack = 0
 15348  007F04  0E02               	movlw	2
 15349  007F06  0100               	movlb	0	; () banked
 15350  007F08  19B1               	xorwf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 15351  007F0A  A4D8               	btfss	status,2,c
 15352  007F0C  D014               	goto	l20385
 15353                           
 15354                           ; BSR set to: 0
 15355  007F0E  0101               	movlb	1	; () banked
 15356  007F10  051D               	decf	(_var_sys+29)& (0+255),w,b	;volatile
 15357  007F12  A4D8               	btfss	status,2,c
 15358  007F14  D010               	goto	l20385
 15359                           
 15360                           ; BSR set to: 1
 15361  007F16  BFE1               	btfsc	(_ts_system+71)& (0+255),7,b	;volatile
 15362  007F18  D005               	goto	u23670
 15363  007F1A  51E1               	movf	(_ts_system+71)& (0+255),w,b	;volatile
 15364  007F1C  E10C               	bnz	l20385
 15365  007F1E  05E0               	decf	(_ts_system+70)& (0+255),w,b	;volatile
 15366  007F20  B0D8               	btfsc	status,0,c
 15367  007F22  D009               	goto	l20385
 15368  007F24                     u23670:
 15369                           
 15370                           ; BSR set to: 1
 15371  007F24  518C               	movf	_aux_i& (0+255),w,b
 15372  007F26  A4D8               	btfss	status,2,c
 15373  007F28  D006               	goto	l20385
 15374                           
 15375                           ; BSR set to: 1
 15376                           ;sm_ControlGate_MC50.c: 45:         {;sm_ControlGate_MC50.c: 46:             ts_system.t
      +                          imewaitFlashRGB = (1000/50) *3;
 15377  007F2A  0E00               	movlw	0
 15378  007F2C  6FE1               	movwf	(_ts_system+71)& (0+255),b	;volatile
 15379  007F2E  0E3C               	movlw	60
 15380  007F30  6FE0               	movwf	(_ts_system+70)& (0+255),b	;volatile
 15381                           
 15382                           ;sm_ControlGate_MC50.c: 47:             aux_i=1;
 15383  007F32  0E01               	movlw	1
 15384  007F34  6F8C               	movwf	_aux_i& (0+255),b
 15385  007F36                     l20385:
 15386                           
 15387                           ;sm_ControlGate_MC50.c: 50:     if ((ts_system.timewaitFlashRGB <= 0) && (aux_i==1 ))
 15388  007F36  0101               	movlb	1	; () banked
 15389  007F38  BFE1               	btfsc	(_ts_system+71)& (0+255),7,b	;volatile
 15390  007F3A  D005               	goto	u23690
 15391  007F3C  51E1               	movf	(_ts_system+71)& (0+255),w,b	;volatile
 15392  007F3E  E119               	bnz	l2580
 15393  007F40  05E0               	decf	(_ts_system+70)& (0+255),w,b	;volatile
 15394  007F42  B0D8               	btfsc	status,0,c
 15395  007F44  0012               	return	
 15396  007F46                     u23690:
 15397                           
 15398                           ; BSR set to: 1
 15399  007F46  058C               	decf	_aux_i& (0+255),w,b
 15400  007F48  A4D8               	btfss	status,2,c
 15401  007F4A  0012               	return	
 15402                           
 15403                           ; BSR set to: 1
 15404                           ;sm_ControlGate_MC50.c: 51:         {;sm_ControlGate_MC50.c: 54:                 var_sys
      +                          .preflashingcontrol = NO;
 15405  007F4C  0E00               	movlw	0
 15406  007F4E  6F1D               	movwf	(_var_sys+29)& (0+255),b	;volatile
 15407                           
 15408                           ; BSR set to: 1
 15409                           ;sm_ControlGate_MC50.c: 55:                 OpenFullOrder();
 15410  007F50  ECF6  F046         	call	_OpenFullOrder	;wreg free
 15411                           
 15412                           ;sm_ControlGate_MC50.c: 56:                 InitFullAutoTime();
 15413  007F54  ECEA  F047         	call	_InitFullAutoTime	;wreg free
 15414                           
 15415                           ; BSR set to: 0
 15416                           ;sm_ControlGate_MC50.c: 57:                 sm_send_event(&main_stateMachine, ev_MotorIs
      +                          Open);
 15417  007F58  0EED               	movlw	low _main_stateMachine
 15418  007F5A  6E12               	movwf	sm_send_event@psm^0,c
 15419  007F5C  0E01               	movlw	high _main_stateMachine
 15420  007F5E  6E13               	movwf	(sm_send_event@psm+1)^0,c
 15421  007F60  0E00               	movlw	0
 15422  007F62  6E15               	movwf	(sm_send_event@event+1)^0,c
 15423  007F64  0E11               	movlw	17
 15424  007F66  6E14               	movwf	sm_send_event@event^0,c
 15425  007F68  EC25  F041         	call	_sm_send_event	;wreg free
 15426                           
 15427                           ;sm_ControlGate_MC50.c: 58:                 aux_i=0;
 15428  007F6C  0E00               	movlw	0
 15429  007F6E  0101               	movlb	1	; () banked
 15430  007F70  6F8C               	movwf	_aux_i& (0+255),b
 15431  007F72                     l2580:
 15432                           
 15433                           ; BSR set to: 1
 15434  007F72  0012               	return		;funcret
 15435  007F74                     __end_of_WaitPreFlash:
 15436                           	callstack 0
 15437                           
 15438 ;; *************** function _OpenFullOrder *****************
 15439 ;; Defined at:
 15440 ;;		line 29 in file "sm_ControlGate_MC50.c"
 15441 ;; Parameters:    Size  Location     Type
 15442 ;;		None
 15443 ;; Auto vars:     Size  Location     Type
 15444 ;;		None
 15445 ;; Return value:  Size  Location     Type
 15446 ;;                  1    wreg      void 
 15447 ;; Registers used:
 15448 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15449 ;; Tracked objects:
 15450 ;;		On entry : 3E/1
 15451 ;;		On exit  : 3E/0
 15452 ;;		Unchanged: 0/0
 15453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15455 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15457 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15458 ;;Total ram usage:        0 bytes
 15459 ;; Hardware stack levels used: 1
 15460 ;; Hardware stack levels required when called: 6
 15461 ;; This function calls:
 15462 ;;		_InitSoftStart
 15463 ;;		_sm_send_event
 15464 ;; This function is called by:
 15465 ;;		_WaitPreFlash
 15466 ;;		_actionZone_Closed
 15467 ;;		_actionZone_Opened
 15468 ;;		_actionZone_Closing
 15469 ;; This function uses a non-reentrant model
 15470 ;;
 15471                           
 15472                           	psect	text44
 15473  008DEC                     __ptext44:
 15474                           	callstack 0
 15475  008DEC                     _OpenFullOrder:
 15476                           	callstack 22
 15477                           
 15478                           ;sm_ControlGate_MC50.c: 32:     var_sys.StateMotor = InOpenFull;
 15479                           
 15480                           ; BSR set to: 1
 15481                           ;incstack = 0
 15482  008DEC  0E01               	movlw	1
 15483  008DEE  0101               	movlb	1	; () banked
 15484  008DF0  6F00               	movwf	_var_sys& (0+255),b	;volatile
 15485                           
 15486                           ; BSR set to: 1
 15487                           ;sm_ControlGate_MC50.c: 33:     sm_send_event(&controlGate_stateMachine, ev_OpenGate);
 15488  008DF2  0EE2               	movlw	low _controlGate_stateMachine
 15489  008DF4  6E12               	movwf	sm_send_event@psm^0,c
 15490  008DF6  0E01               	movlw	high _controlGate_stateMachine
 15491  008DF8  6E13               	movwf	(sm_send_event@psm+1)^0,c
 15492  008DFA  0E00               	movlw	0
 15493  008DFC  6E15               	movwf	(sm_send_event@event+1)^0,c
 15494  008DFE  0E0C               	movlw	12
 15495  008E00  6E14               	movwf	sm_send_event@event^0,c
 15496  008E02  EC25  F041         	call	_sm_send_event	;wreg free
 15497                           
 15498                           ;sm_ControlGate_MC50.c: 34:     var_sys.LastState = InOpenFull;
 15499  008E06  0E01               	movlw	1
 15500  008E08  0101               	movlb	1	; () banked
 15501  008E0A  6F0B               	movwf	(_var_sys+11)& (0+255),b	;volatile
 15502                           
 15503                           ; BSR set to: 1
 15504                           ;sm_ControlGate_MC50.c: 35:     InitSoftStart();
 15505  008E0C  EC53  F041         	call	_InitSoftStart	;wreg free
 15506  008E10  0012               	return		;funcret
 15507  008E12                     __end_of_OpenFullOrder:
 15508                           	callstack 0
 15509                           
 15510 ;; *************** function _InitFullAutoTime *****************
 15511 ;; Defined at:
 15512 ;;		line 109 in file "sm_ControlGate_MC50.c"
 15513 ;; Parameters:    Size  Location     Type
 15514 ;;		None
 15515 ;; Auto vars:     Size  Location     Type
 15516 ;;		None
 15517 ;; Return value:  Size  Location     Type
 15518 ;;                  1    wreg      void 
 15519 ;; Registers used:
 15520 ;;		wreg, status,2, status,0, prodl, prodh
 15521 ;; Tracked objects:
 15522 ;;		On entry : 3E/0
 15523 ;;		On exit  : 3F/0
 15524 ;;		Unchanged: 0/0
 15525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15529 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15530 ;;Total ram usage:        0 bytes
 15531 ;; Hardware stack levels used: 1
 15532 ;; Hardware stack levels required when called: 4
 15533 ;; This function calls:
 15534 ;;		Nothing
 15535 ;; This function is called by:
 15536 ;;		_WaitPreFlash
 15537 ;;		_actionZone_Closed
 15538 ;;		_actionZone_Opening
 15539 ;;		_actionZone_Opened
 15540 ;;		_actionZone_Closing
 15541 ;; This function uses a non-reentrant model
 15542 ;;
 15543                           
 15544                           	psect	text45
 15545  008FD4                     __ptext45:
 15546                           	callstack 0
 15547  008FD4                     _InitFullAutoTime:
 15548                           	callstack 24
 15549                           
 15550                           ;sm_ControlGate_MC50.c: 111:     if (var_sys_NVM.homemPresente == 0) {
 15551                           
 15552                           ;incstack = 0
 15553  008FD4  0100               	movlb	0	; () banked
 15554  008FD6  51A8               	movf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 15555  008FD8  A4D8               	btfss	status,2,c
 15556  008FDA  0012               	return	
 15557                           
 15558                           ; BSR set to: 0
 15559                           ;sm_ControlGate_MC50.c: 112:         ts_system.timeWaitToClose = ((int) var_sys_NVM.auto
      +                          TimeFullClose * (1000/50));
 15560  008FDC  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 15561  008FDE  0D14               	mullw	20
 15562  008FE0  CFF3 F1AC          	movff	prodl,_ts_system+18	;volatile
 15563  008FE4  CFF4 F1AD          	movff	prodh,_ts_system+19	;volatile
 15564                           
 15565                           ; BSR set to: 0
 15566                           ;sm_ControlGate_MC50.c: 113:         var_sys.AutoCloseActive = var_sys_NVM.autoTimeFullC
      +                          lose;
 15567  008FE8  C09D  F123         	movff	_var_sys_NVM+5,_var_sys+35	;volatile
 15568                           
 15569                           ; BSR set to: 0
 15570  008FEC  0012               	return		;funcret
 15571  008FEE                     __end_of_InitFullAutoTime:
 15572                           	callstack 0
 15573                           
 15574 ;; *************** function _OpenWalkOrder *****************
 15575 ;; Defined at:
 15576 ;;		line 71 in file "sm_ControlGate_MC50.c"
 15577 ;; Parameters:    Size  Location     Type
 15578 ;;		None
 15579 ;; Auto vars:     Size  Location     Type
 15580 ;;  diffTime        2   25[COMRAM] int 
 15581 ;; Return value:  Size  Location     Type
 15582 ;;                  1    wreg      void 
 15583 ;; Registers used:
 15584 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15585 ;; Tracked objects:
 15586 ;;		On entry : 3E/1
 15587 ;;		On exit  : 3E/0
 15588 ;;		Unchanged: 0/0
 15589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15590 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15591 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15592 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15593 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15594 ;;Total ram usage:        4 bytes
 15595 ;; Hardware stack levels used: 1
 15596 ;; Hardware stack levels required when called: 6
 15597 ;; This function calls:
 15598 ;;		_InitSoftStart
 15599 ;;		_sm_send_event
 15600 ;; This function is called by:
 15601 ;;		_actionZone_Closed
 15602 ;;		_actionZone_Opened
 15603 ;;		_actionZone_Closing
 15604 ;; This function uses a non-reentrant model
 15605 ;;
 15606                           
 15607                           	psect	text46
 15608  007F74                     __ptext46:
 15609                           	callstack 0
 15610  007F74                     _OpenWalkOrder:
 15611                           	callstack 22
 15612                           
 15613                           ;sm_ControlGate_MC50.c: 72:     int diffTime = ((int) var_sys_NVM.walkTime * (1000/50)) 
      +                          - var_sys.PositionActual ;
 15614                           
 15615                           ; BSR set to: 0
 15616                           ;incstack = 0
 15617  007F74  0100               	movlb	0	; () banked
 15618  007F76  519C               	movf	(_var_sys_NVM+4)& (0+255),w,b	;volatile
 15619  007F78  0D14               	mullw	20
 15620  007F7A  CFF3 F018          	movff	prodl,??_OpenWalkOrder
 15621  007F7E  CFF4 F019          	movff	prodh,??_OpenWalkOrder+1
 15622  007F82  0101               	movlb	1	; () banked
 15623  007F84  511E               	movf	(_var_sys+30)& (0+255),w,b	;volatile
 15624  007F86  5C18               	subwf	??_OpenWalkOrder^0,w,c
 15625  007F88  6E1A               	movwf	OpenWalkOrder@diffTime^0,c
 15626  007F8A  511F               	movf	(_var_sys+31)& (0+255),w,b	;volatile
 15627  007F8C  5819               	subwfb	(??_OpenWalkOrder+1)^0,w,c
 15628  007F8E  6E1B               	movwf	(OpenWalkOrder@diffTime+1)^0,c
 15629                           
 15630                           ; BSR set to: 1
 15631                           ;sm_ControlGate_MC50.c: 74:     if (diffTime > 0) {
 15632  007F90  BE1B               	btfsc	(OpenWalkOrder@diffTime+1)^0,7,c
 15633  007F92  D022               	goto	l20423
 15634  007F94  501B               	movf	(OpenWalkOrder@diffTime+1)^0,w,c
 15635  007F96  E103               	bnz	u23710
 15636  007F98  041A               	decf	OpenWalkOrder@diffTime^0,w,c
 15637  007F9A  A0D8               	btfss	status,0,c
 15638  007F9C  D01D               	goto	l20423
 15639  007F9E                     u23710:
 15640                           
 15641                           ; BSR set to: 1
 15642                           ;sm_ControlGate_MC50.c: 76:         sm_send_event(&controlGate_stateMachine, ev_OpenGate
      +                          );
 15643  007F9E  0EE2               	movlw	low _controlGate_stateMachine
 15644  007FA0  6E12               	movwf	sm_send_event@psm^0,c
 15645  007FA2  0E01               	movlw	high _controlGate_stateMachine
 15646  007FA4  6E13               	movwf	(sm_send_event@psm+1)^0,c
 15647  007FA6  0E00               	movlw	0
 15648  007FA8  6E15               	movwf	(sm_send_event@event+1)^0,c
 15649  007FAA  0E0C               	movlw	12
 15650  007FAC  6E14               	movwf	sm_send_event@event^0,c
 15651  007FAE  EC25  F041         	call	_sm_send_event	;wreg free
 15652                           
 15653                           ;sm_ControlGate_MC50.c: 77:         if (var_sys.Statedoorcontrol == st_Closed){
 15654  007FB2  0101               	movlb	1	; () banked
 15655  007FB4  051C               	decf	(_var_sys+28)& (0+255),w,b	;volatile
 15656  007FB6  A4D8               	btfss	status,2,c
 15657  007FB8  D005               	goto	l20417
 15658                           
 15659                           ; BSR set to: 1
 15660                           ;sm_ControlGate_MC50.c: 78:            ts_system.timeOpenWalk = diffTime;
 15661  007FBA  C01A  F1AA         	movff	OpenWalkOrder@diffTime,_ts_system+16	;volatile
 15662  007FBE  C01B  F1AB         	movff	OpenWalkOrder@diffTime+1,_ts_system+17	;volatile
 15663                           
 15664                           ;sm_ControlGate_MC50.c: 79:         }
 15665  007FC2  D006               	goto	l20419
 15666  007FC4                     l20417:
 15667                           
 15668                           ; BSR set to: 1
 15669                           ;sm_ControlGate_MC50.c: 81:             ts_system.timeOpenWalk = diffTime + (1000/50);
 15670  007FC4  0E14               	movlw	20
 15671  007FC6  241A               	addwf	OpenWalkOrder@diffTime^0,w,c
 15672  007FC8  6FAA               	movwf	(_ts_system+16)& (0+255),b	;volatile
 15673  007FCA  0E00               	movlw	0
 15674  007FCC  201B               	addwfc	(OpenWalkOrder@diffTime+1)^0,w,c
 15675  007FCE  6FAB               	movwf	(_ts_system+17)& (0+255),b	;volatile
 15676  007FD0                     l20419:
 15677                           
 15678                           ; BSR set to: 1
 15679                           ;sm_ControlGate_MC50.c: 83:         var_sys.StateMotor = InOpenWalk;
 15680  007FD0  0E02               	movlw	2
 15681  007FD2  6F00               	movwf	_var_sys& (0+255),b	;volatile
 15682                           
 15683                           ; BSR set to: 1
 15684                           ;sm_ControlGate_MC50.c: 84:         var_sys.Timewalkisactived = YES;
 15685  007FD4  0E01               	movlw	1
 15686  007FD6  6F4A               	movwf	(_var_sys+74)& (0+255),b	;volatile
 15687  007FD8                     l20423:
 15688                           
 15689                           ; BSR set to: 1
 15690                           ;sm_ControlGate_MC50.c: 92:     var_sys.LastState = InOpenWalk;
 15691  007FD8  0E02               	movlw	2
 15692  007FDA  6F0B               	movwf	(_var_sys+11)& (0+255),b	;volatile
 15693                           
 15694                           ; BSR set to: 1
 15695                           ;sm_ControlGate_MC50.c: 93:     InitSoftStart();
 15696  007FDC  EC53  F041         	call	_InitSoftStart	;wreg free
 15697  007FE0  0012               	return		;funcret
 15698  007FE2                     __end_of_OpenWalkOrder:
 15699                           	callstack 0
 15700                           
 15701 ;; *************** function _sm_send_event *****************
 15702 ;; Defined at:
 15703 ;;		line 34 in file "sm_common_MC50.c"
 15704 ;; Parameters:    Size  Location     Type
 15705 ;;  psm             2   17[COMRAM] PTR struct .
 15706 ;;		 -> controlLearning_stateMachine(11), controlGate_stateMachine(11), main_stateMachine(11), menuConfiguration_stateMa
      +chine(11), 
 15707 ;;  event           2   19[COMRAM] int 
 15708 ;; Auto vars:     Size  Location     Type
 15709 ;;		None
 15710 ;; Return value:  Size  Location     Type
 15711 ;;                  1    wreg      void 
 15712 ;; Registers used:
 15713 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15714 ;; Tracked objects:
 15715 ;;		On entry : 0/0
 15716 ;;		On exit  : 0/0
 15717 ;;		Unchanged: 0/0
 15718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15719 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15720 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15721 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15722 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15723 ;;Total ram usage:        6 bytes
 15724 ;; Hardware stack levels used: 1
 15725 ;; Hardware stack levels required when called: 5
 15726 ;; This function calls:
 15727 ;;		_sm_get_current_state
 15728 ;; This function is called by:
 15729 ;;		_OpenFullOrder
 15730 ;;		_WaitPreFlash
 15731 ;;		_CloseOrder
 15732 ;;		_OpenWalkOrder
 15733 ;;		_StopOrder
 15734 ;;		_sm_execute_ControlGate
 15735 ;;		_actionZone_Closed
 15736 ;;		_actionZone_Opening
 15737 ;;		_actionZone_Closing
 15738 ;;		_sm_execute_ControlLearning
 15739 ;;		_sm_execute_main
 15740 ;;		_sm_execute_menuConfiguration
 15741 ;;		_setValueToEdit
 15742 ;;		_controlSelectRemote
 15743 ;;		_controlSaveRemote
 15744 ;; This function uses a non-reentrant model
 15745 ;;
 15746                           
 15747                           	psect	text47
 15748  00824A                     __ptext47:
 15749                           	callstack 0
 15750  00824A                     _sm_send_event:
 15751                           	callstack 24
 15752                           
 15753                           ;sm_common_MC50.c: 34: void sm_send_event(sm_t *psm, int event);sm_common_MC50.c: 35: {;
      +                          sm_common_MC50.c: 36:  if(( psm->parent_machine == ((void*)0)) || (sm_get_current_state(
      +                          psm->parent_machine)==psm->parent_state))
 15754                           
 15755                           ;incstack = 0
 15756  00824A  EE20 F007          	lfsr	2,7
 15757  00824E  5012               	movf	sm_send_event@psm^0,w,c
 15758  008250  26D9               	addwf	fsr2l,f,c
 15759  008252  5013               	movf	(sm_send_event@psm+1)^0,w,c
 15760  008254  22DA               	addwfc	fsr2h,f,c
 15761  008256  50DE               	movf	postinc2,w,c
 15762  008258  10DE               	iorwf	postinc2,w,c
 15763  00825A  B4D8               	btfsc	status,2,c
 15764  00825C  D019               	goto	u22360
 15765  00825E  EE20 F007          	lfsr	2,7
 15766  008262  5012               	movf	sm_send_event@psm^0,w,c
 15767  008264  26D9               	addwf	fsr2l,f,c
 15768  008266  5013               	movf	(sm_send_event@psm+1)^0,w,c
 15769  008268  22DA               	addwfc	fsr2h,f,c
 15770  00826A  CFDE F010          	movff	postinc2,sm_get_current_state@psm
 15771  00826E  CFDD F011          	movff	postdec2,sm_get_current_state@psm+1
 15772  008272  EC8D  F048         	call	_sm_get_current_state	;wreg free
 15773  008276  EE20 F009          	lfsr	2,9
 15774  00827A  5012               	movf	sm_send_event@psm^0,w,c
 15775  00827C  26D9               	addwf	fsr2l,f,c
 15776  00827E  5013               	movf	(sm_send_event@psm+1)^0,w,c
 15777  008280  22DA               	addwfc	fsr2h,f,c
 15778  008282  50DE               	movf	postinc2,w,c
 15779  008284  1810               	xorwf	?_sm_get_current_state^0,w,c
 15780  008286  E10E               	bnz	l3507
 15781  008288  50DE               	movf	postinc2,w,c
 15782  00828A  1811               	xorwf	(?_sm_get_current_state+1)^0,w,c
 15783  00828C  A4D8               	btfss	status,2,c
 15784  00828E  0012               	return	
 15785  008290                     u22360:
 15786                           
 15787                           ;sm_common_MC50.c: 38:  {;sm_common_MC50.c: 39:   psm->last_event = event;
 15788  008290  EE20 F004          	lfsr	2,4
 15789  008294  5012               	movf	sm_send_event@psm^0,w,c
 15790  008296  26D9               	addwf	fsr2l,f,c
 15791  008298  5013               	movf	(sm_send_event@psm+1)^0,w,c
 15792  00829A  22DA               	addwfc	fsr2h,f,c
 15793  00829C  C014  FFDE         	movff	sm_send_event@event,postinc2
 15794  0082A0  C015  FFDD         	movff	sm_send_event@event+1,postdec2
 15795  0082A4                     l3507:
 15796  0082A4  0012               	return		;funcret
 15797  0082A6                     __end_of_sm_send_event:
 15798                           	callstack 0
 15799                           
 15800 ;; *************** function _sm_get_current_state *****************
 15801 ;; Defined at:
 15802 ;;		line 30 in file "sm_common_MC50.c"
 15803 ;; Parameters:    Size  Location     Type
 15804 ;;  psm             2   15[COMRAM] PTR struct .
 15805 ;;		 -> NULL(0), 
 15806 ;; Auto vars:     Size  Location     Type
 15807 ;;		None
 15808 ;; Return value:  Size  Location     Type
 15809 ;;                  2   15[COMRAM] int 
 15810 ;; Registers used:
 15811 ;;		fsr2l, fsr2h
 15812 ;; Tracked objects:
 15813 ;;		On entry : 0/0
 15814 ;;		On exit  : 0/0
 15815 ;;		Unchanged: 0/0
 15816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15817 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15818 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15819 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15820 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15821 ;;Total ram usage:        2 bytes
 15822 ;; Hardware stack levels used: 1
 15823 ;; Hardware stack levels required when called: 4
 15824 ;; This function calls:
 15825 ;;		Nothing
 15826 ;; This function is called by:
 15827 ;;		_sm_send_event
 15828 ;; This function uses a non-reentrant model
 15829 ;;
 15830                           
 15831                           	psect	text48
 15832  00911A                     __ptext48:
 15833                           	callstack 0
 15834  00911A                     _sm_get_current_state:
 15835                           	callstack 24
 15836                           
 15837                           ;sm_common_MC50.c: 31:  return psm->current_state;
 15838                           
 15839                           ;incstack = 0
 15840  00911A  C010  FFD9         	movff	sm_get_current_state@psm,fsr2l
 15841  00911E  C011  FFDA         	movff	sm_get_current_state@psm+1,fsr2h
 15842  009122  CFDE F010          	movff	postinc2,?_sm_get_current_state
 15843  009126  CFDD F011          	movff	postdec2,?_sm_get_current_state+1
 15844  00912A  0012               	return		;funcret
 15845  00912C                     __end_of_sm_get_current_state:
 15846                           	callstack 0
 15847                           
 15848 ;; *************** function _InitSoftStart *****************
 15849 ;; Defined at:
 15850 ;;		line 816 in file "sm_ControlGate_MC50.c"
 15851 ;; Parameters:    Size  Location     Type
 15852 ;;		None
 15853 ;; Auto vars:     Size  Location     Type
 15854 ;;		None
 15855 ;; Return value:  Size  Location     Type
 15856 ;;                  1    wreg      void 
 15857 ;; Registers used:
 15858 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 15859 ;; Tracked objects:
 15860 ;;		On entry : 3F/1
 15861 ;;		On exit  : 3E/0
 15862 ;;		Unchanged: 0/0
 15863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15864 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15865 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15866 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15867 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15868 ;;Total ram usage:        1 bytes
 15869 ;; Hardware stack levels used: 1
 15870 ;; Hardware stack levels required when called: 5
 15871 ;; This function calls:
 15872 ;;		_GetMotorPower
 15873 ;; This function is called by:
 15874 ;;		_OpenFullOrder
 15875 ;;		_CloseOrder
 15876 ;;		_OpenWalkOrder
 15877 ;; This function uses a non-reentrant model
 15878 ;;
 15879                           
 15880                           	psect	text49
 15881  0082A6                     __ptext49:
 15882                           	callstack 0
 15883  0082A6                     _InitSoftStart:
 15884                           	callstack 22
 15885                           
 15886                           ; BSR set to: 1
 15887                           ;sm_ControlGate_MC50.c: 817:     if (var_sys_NVM.softStart != 0 && var_sys.AutoInversion
      +                          Active == NO) {
 15888                           
 15889                           ;incstack = 0
 15890  0082A6  0100               	movlb	0	; () banked
 15891  0082A8  51AA               	movf	(_var_sys_NVM+18)& (0+255),w,b	;volatile
 15892  0082AA  B4D8               	btfsc	status,2,c
 15893  0082AC  0012               	return	
 15894                           
 15895                           ; BSR set to: 0
 15896  0082AE  0101               	movlb	1	; () banked
 15897  0082B0  5127               	movf	(_var_sys+39)& (0+255),w,b	;volatile
 15898  0082B2  A4D8               	btfss	status,2,c
 15899  0082B4  0012               	return	
 15900                           
 15901                           ; BSR set to: 1
 15902                           ;sm_ControlGate_MC50.c: 824:         var_sys.velocityFactorstop = 0;
 15903  0082B6  0E00               	movlw	0
 15904  0082B8  6F11               	movwf	(_var_sys+17)& (0+255),b	;volatile
 15905  0082BA  0E00               	movlw	0
 15906  0082BC  6F10               	movwf	(_var_sys+16)& (0+255),b	;volatile
 15907                           
 15908                           ;sm_ControlGate_MC50.c: 825:         var_sys.velocityFactor = 0;
 15909  0082BE  0E00               	movlw	0
 15910  0082C0  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 15911  0082C2  0E00               	movlw	0
 15912  0082C4  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 15913                           
 15914                           ; BSR set to: 1
 15915                           ;sm_ControlGate_MC50.c: 826:         var_sys.velocityFactor = GetMotorPower();
 15916  0082C6  ECA4  F037         	call	_GetMotorPower	;wreg free
 15917  0082CA  6E14               	movwf	??_InitSoftStart^0,c
 15918  0082CC  5014               	movf	??_InitSoftStart^0,w,c
 15919  0082CE  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 15920  0082D0  6B0F               	clrf	(_var_sys+15)& (0+255),b	;volatile
 15921                           
 15922                           ; BSR set to: 1
 15923                           ;sm_ControlGate_MC50.c: 827:         if ( var_sys.velocityFactor > (81) )
 15924  0082D2  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 15925  0082D4  D00A               	goto	l19531
 15926  0082D6  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 15927  0082D8  E104               	bnz	u22390
 15928  0082DA  0E52               	movlw	82
 15929  0082DC  5D0E               	subwf	(_var_sys+14)& (0+255),w,b	;volatile
 15930  0082DE  A0D8               	btfss	status,0,c
 15931  0082E0  D004               	goto	l19531
 15932  0082E2                     u22390:
 15933                           
 15934                           ; BSR set to: 1
 15935                           ;sm_ControlGate_MC50.c: 828:         {;sm_ControlGate_MC50.c: 829:             var_sys.v
      +                          elocityFactor = (81);
 15936  0082E2  0E00               	movlw	0
 15937  0082E4  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 15938  0082E6  0E51               	movlw	81
 15939  0082E8  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 15940  0082EA                     l19531:
 15941                           
 15942                           ; BSR set to: 1
 15943                           ;sm_ControlGate_MC50.c: 840:         ts_system.timeSoftStart = var_sys.velocityFactor + 
      +                          1;
 15944  0082EA  0E01               	movlw	1
 15945  0082EC  250E               	addwf	(_var_sys+14)& (0+255),w,b	;volatile
 15946  0082EE  6FB0               	movwf	(_ts_system+22)& (0+255),b	;volatile
 15947  0082F0  0E00               	movlw	0
 15948  0082F2  210F               	addwfc	(_var_sys+15)& (0+255),w,b	;volatile
 15949  0082F4  6FB1               	movwf	(_ts_system+23)& (0+255),b	;volatile
 15950                           
 15951                           ;sm_ControlGate_MC50.c: 842:         var_sys.SoftStartDecrementControl = 10 - var_sys_NV
      +                          M.softStart;
 15952  0082F6  0100               	movlb	0	; () banked
 15953  0082F8  51AA               	movf	(_var_sys_NVM+18)& (0+255),w,b	;volatile
 15954  0082FA  080A               	sublw	10
 15955  0082FC  0101               	movlb	1	; () banked
 15956  0082FE  6F14               	movwf	(_var_sys+20)& (0+255),b	;volatile
 15957  008300  0012               	return		;funcret
 15958  008302                     __end_of_InitSoftStart:
 15959                           	callstack 0
 15960                           
 15961 ;; *************** function _InitWalkAutoTime *****************
 15962 ;; Defined at:
 15963 ;;		line 103 in file "sm_ControlGate_MC50.c"
 15964 ;; Parameters:    Size  Location     Type
 15965 ;;		None
 15966 ;; Auto vars:     Size  Location     Type
 15967 ;;		None
 15968 ;; Return value:  Size  Location     Type
 15969 ;;                  1    wreg      void 
 15970 ;; Registers used:
 15971 ;;		wreg, status,2, status,0, prodl, prodh
 15972 ;; Tracked objects:
 15973 ;;		On entry : 0/1
 15974 ;;		On exit  : 3F/0
 15975 ;;		Unchanged: 0/0
 15976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15977 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15978 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15980 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15981 ;;Total ram usage:        0 bytes
 15982 ;; Hardware stack levels used: 1
 15983 ;; Hardware stack levels required when called: 4
 15984 ;; This function calls:
 15985 ;;		Nothing
 15986 ;; This function is called by:
 15987 ;;		_actionZone_Closed
 15988 ;;		_actionZone_Opening
 15989 ;;		_actionZone_Opened
 15990 ;;		_actionZone_Closing
 15991 ;; This function uses a non-reentrant model
 15992 ;;
 15993                           
 15994                           	psect	text50
 15995  0090DE                     __ptext50:
 15996                           	callstack 0
 15997  0090DE                     _InitWalkAutoTime:
 15998                           	callstack 24
 15999                           
 16000                           ;sm_ControlGate_MC50.c: 105:     ts_system.timeWaitToClose = ((int) var_sys_NVM.autoTime
      +                          WalkClose * (1000/50));
 16001                           
 16002                           ;incstack = 0
 16003  0090DE  0100               	movlb	0	; () banked
 16004  0090E0  519E               	movf	(_var_sys_NVM+6)& (0+255),w,b	;volatile
 16005  0090E2  0D14               	mullw	20
 16006  0090E4  CFF3 F1AC          	movff	prodl,_ts_system+18	;volatile
 16007  0090E8  CFF4 F1AD          	movff	prodh,_ts_system+19	;volatile
 16008                           
 16009                           ; BSR set to: 0
 16010                           ;sm_ControlGate_MC50.c: 106:     var_sys.AutoCloseActive = var_sys_NVM.autoTimeWalkClose
      +                          ;
 16011  0090EC  C09E  F123         	movff	_var_sys_NVM+6,_var_sys+35	;volatile
 16012                           
 16013                           ; BSR set to: 0
 16014  0090F0  0012               	return		;funcret
 16015  0090F2                     __end_of_InitWalkAutoTime:
 16016                           	callstack 0
 16017                           
 16018 ;; *************** function _GetSecurityStateInOpening *****************
 16019 ;; Defined at:
 16020 ;;		line 738 in file "inputs_MC50.c"
 16021 ;; Parameters:    Size  Location     Type
 16022 ;;		None
 16023 ;; Auto vars:     Size  Location     Type
 16024 ;;		None
 16025 ;; Return value:  Size  Location     Type
 16026 ;;                  1    wreg      enum E10564
 16027 ;; Registers used:
 16028 ;;		wreg, status,2, status,0, cstack
 16029 ;; Tracked objects:
 16030 ;;		On entry : 0/0
 16031 ;;		On exit  : 3E/0
 16032 ;;		Unchanged: 0/0
 16033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16034 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16037 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16038 ;;Total ram usage:        0 bytes
 16039 ;; Hardware stack levels used: 1
 16040 ;; Hardware stack levels required when called: 5
 16041 ;; This function calls:
 16042 ;;		_SetSegmentValueIntermitent
 16043 ;; This function is called by:
 16044 ;;		_actionZone_Closed
 16045 ;;		_actionZone_Opening
 16046 ;; This function uses a non-reentrant model
 16047 ;;
 16048                           
 16049                           	psect	text51
 16050  00738E                     __ptext51:
 16051                           	callstack 0
 16052  00738E                     _GetSecurityStateInOpening:
 16053                           	callstack 23
 16054                           
 16055                           ;inputs_MC50.c: 747:     if((var_sys_NVM.securityBandIsON == 1) && (var_sys.SecurityBarI
      +                          sObstructed == YES)&&(var_sys_NVM.securityBandInOpen == 1)&& (var_sys_NVM.Stopboton == 0
      +                          ))
 16056                           
 16057                           ; BSR set to: 0
 16058                           ;incstack = 0
 16059  00738E  0100               	movlb	0	; () banked
 16060  007390  05A1               	decf	(_var_sys_NVM+9)& (0+255),w,b	;volatile
 16061  007392  A4D8               	btfss	status,2,c
 16062  007394  D01B               	goto	l20093
 16063                           
 16064                           ; BSR set to: 0
 16065  007396  0101               	movlb	1	; () banked
 16066  007398  0502               	decf	(_var_sys+2)& (0+255),w,b	;volatile
 16067  00739A  A4D8               	btfss	status,2,c
 16068  00739C  D017               	goto	l20093
 16069                           
 16070                           ; BSR set to: 1
 16071  00739E  0100               	movlb	0	; () banked
 16072  0073A0  05A3               	decf	(_var_sys_NVM+11)& (0+255),w,b	;volatile
 16073  0073A2  A4D8               	btfss	status,2,c
 16074  0073A4  D013               	goto	l20093
 16075                           
 16076                           ; BSR set to: 0
 16077  0073A6  51AE               	movf	(_var_sys_NVM+22)& (0+255),w,b	;volatile
 16078  0073A8  A4D8               	btfss	status,2,c
 16079  0073AA  D010               	goto	l20093
 16080                           
 16081                           ; BSR set to: 0
 16082                           ;inputs_MC50.c: 748:     {;inputs_MC50.c: 750:         ts_system.timeSinalizationDigit=(
      +                           200/50);
 16083  0073AC  0E00               	movlw	0
 16084  0073AE  0101               	movlb	1	; () banked
 16085  0073B0  6FA7               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16086  0073B2  0E04               	movlw	4
 16087  0073B4  6FA6               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16088                           
 16089                           ; BSR set to: 1
 16090                           ;inputs_MC50.c: 751:         SetSegmentValueIntermitent(dL,dA,(1000/50));
 16091  0073B6  0E0A               	movlw	10
 16092  0073B8  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 16093  0073BA  0E00               	movlw	0
 16094  0073BC  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 16095  0073BE  0E14               	movlw	20
 16096  0073C0  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 16097  0073C2  0E12               	movlw	18
 16098  0073C4  EC9D  F045         	call	_SetSegmentValueIntermitent
 16099  0073C8                     l20087:
 16100                           
 16101                           ; BSR set to: 1
 16102                           ;inputs_MC50.c: 752:         return YES;
 16103  0073C8  0E01               	movlw	1
 16104  0073CA  0012               	return	
 16105  0073CC                     l20093:
 16106  0073CC  0100               	movlb	0	; () banked
 16107  0073CE  05AE               	decf	(_var_sys_NVM+22)& (0+255),w,b	;volatile
 16108  0073D0  A4D8               	btfss	status,2,c
 16109  0073D2  D013               	goto	l20107
 16110                           
 16111                           ; BSR set to: 0
 16112  0073D4  0101               	movlb	1	; () banked
 16113  0073D6  0502               	decf	(_var_sys+2)& (0+255),w,b	;volatile
 16114  0073D8  A4D8               	btfss	status,2,c
 16115  0073DA  D00F               	goto	l20107
 16116                           
 16117                           ; BSR set to: 1
 16118                           ;inputs_MC50.c: 756:     {;inputs_MC50.c: 758:         ts_system.timeSinalizationDigit=(
      +                           200/50);
 16119  0073DC  0E00               	movlw	0
 16120  0073DE  6FA7               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16121  0073E0  0E04               	movlw	4
 16122  0073E2  6FA6               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16123                           
 16124                           ; BSR set to: 1
 16125                           ;inputs_MC50.c: 759:         SetSegmentValueIntermitent(d5,dt,(1000/50));
 16126  0073E4  0E15               	movlw	21
 16127  0073E6  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 16128  0073E8  0E00               	movlw	0
 16129  0073EA  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 16130  0073EC  0E14               	movlw	20
 16131  0073EE  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 16132  0073F0  0E05               	movlw	5
 16133  0073F2  EC9D  F045         	call	_SetSegmentValueIntermitent
 16134                           
 16135                           ; BSR set to: 1
 16136                           ;inputs_MC50.c: 760:         return ST;
 16137  0073F6  0E02               	movlw	2
 16138  0073F8  0012               	return	
 16139  0073FA                     l20107:
 16140  0073FA  0100               	movlb	0	; () banked
 16141  0073FC  059F               	decf	(_var_sys_NVM+7)& (0+255),w,b	;volatile
 16142  0073FE  A4D8               	btfss	status,2,c
 16143  007400  D017               	goto	l20123
 16144                           
 16145                           ; BSR set to: 0
 16146  007402  0101               	movlb	1	; () banked
 16147  007404  0501               	decf	(_var_sys+1)& (0+255),w,b	;volatile
 16148  007406  A4D8               	btfss	status,2,c
 16149  007408  D013               	goto	l20123
 16150                           
 16151                           ; BSR set to: 1
 16152  00740A  0100               	movlb	0	; () banked
 16153  00740C  05A0               	decf	(_var_sys_NVM+8)& (0+255),w,b	;volatile
 16154  00740E  A4D8               	btfss	status,2,c
 16155  007410  D00F               	goto	l20123
 16156                           
 16157                           ; BSR set to: 0
 16158                           ;inputs_MC50.c: 764:     {;inputs_MC50.c: 766:         ts_system.timeSinalizationDigit=(
      +                           200/50);
 16159  007412  0E00               	movlw	0
 16160  007414  0101               	movlb	1	; () banked
 16161  007416  6FA7               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16162  007418  0E04               	movlw	4
 16163  00741A  6FA6               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16164                           
 16165                           ; BSR set to: 1
 16166                           ;inputs_MC50.c: 767:         SetSegmentValueIntermitent(dL,dE,(1000/50));
 16167  00741C  0E0E               	movlw	14
 16168  00741E  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 16169  007420  0E00               	movlw	0
 16170  007422  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 16171  007424  0E14               	movlw	20
 16172  007426  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 16173  007428  0E12               	movlw	18
 16174  00742A  EC9D  F045         	call	_SetSegmentValueIntermitent
 16175  00742E  D7CC               	goto	l20087
 16176  007430                     l20123:
 16177                           
 16178                           ;inputs_MC50.c: 771:     {;inputs_MC50.c: 772:         return NO;
 16179  007430  0E00               	movlw	0
 16180  007432  0012               	return		;funcret
 16181  007434                     __end_of_GetSecurityStateInOpening:
 16182                           	callstack 0
 16183                           
 16184 ;; *************** function _SetSegmentValueIntermitent *****************
 16185 ;; Defined at:
 16186 ;;		line 201 in file "outputs_MC50.c"
 16187 ;; Parameters:    Size  Location     Type
 16188 ;;  d1              1    wreg     unsigned char 
 16189 ;;  d2              1   15[COMRAM] unsigned char 
 16190 ;;  time            2   16[COMRAM] int 
 16191 ;; Auto vars:     Size  Location     Type
 16192 ;;  d1              1   18[COMRAM] unsigned char 
 16193 ;; Return value:  Size  Location     Type
 16194 ;;                  1    wreg      void 
 16195 ;; Registers used:
 16196 ;;		wreg, status,2, status,0
 16197 ;; Tracked objects:
 16198 ;;		On entry : 3E/0
 16199 ;;		On exit  : 3F/1
 16200 ;;		Unchanged: 0/0
 16201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16202 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16203 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16204 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16205 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16206 ;;Total ram usage:        4 bytes
 16207 ;; Hardware stack levels used: 1
 16208 ;; Hardware stack levels required when called: 4
 16209 ;; This function calls:
 16210 ;;		Nothing
 16211 ;; This function is called by:
 16212 ;;		_GetSecurityStateInOpening
 16213 ;;		_GetSecurityStateInClosing
 16214 ;;		_sm_execute_ControlGate
 16215 ;;		_actionZone_Opening
 16216 ;;		_actionZone_Closing
 16217 ;; This function uses a non-reentrant model
 16218 ;;
 16219                           
 16220                           	psect	text52
 16221  008B3A                     __ptext52:
 16222                           	callstack 0
 16223  008B3A                     _SetSegmentValueIntermitent:
 16224                           	callstack 24
 16225                           
 16226                           ;incstack = 0
 16227                           ;SetSegmentValueIntermitent@d1 stored from wreg
 16228  008B3A  6E13               	movwf	SetSegmentValueIntermitent@d1^0,c
 16229                           
 16230                           ;outputs_MC50.c: 201: void SetSegmentValueIntermitent(char d1, char d2,int time);outputs
      +                          _MC50.c: 202: {;outputs_MC50.c: 204:     if ( main_stateMachine.current_state != st_Menu
      +                          Configuration && (ts_system.timeoutMenu == 0 && button_struct.timer < (1000/50)))
 16231  008B3C  0101               	movlb	1	; () banked
 16232  008B3E  05ED               	decf	_main_stateMachine& (0+255),w,b
 16233  008B40  11EE               	iorwf	(_main_stateMachine+1)& (0+255),w,b
 16234  008B42  B4D8               	btfsc	status,2,c
 16235  008B44  0012               	return	
 16236                           
 16237                           ; BSR set to: 1
 16238  008B46  51A8               	movf	(_ts_system+14)& (0+255),w,b	;volatile
 16239  008B48  11A9               	iorwf	(_ts_system+15)& (0+255),w,b	;volatile
 16240  008B4A  A4D8               	btfss	status,2,c
 16241  008B4C  0012               	return	
 16242                           
 16243                           ; BSR set to: 1
 16244  008B4E  0E14               	movlw	20
 16245  008B50  604E               	cpfslt	(_button_struct+2)^0,c	;volatile
 16246  008B52  0012               	return	
 16247                           
 16248                           ; BSR set to: 1
 16249                           ;outputs_MC50.c: 205:     {;outputs_MC50.c: 206:         dispStruct.display_grp.value_di
      +                          splay1=d1;
 16250  008B54  C013  F072         	movff	SetSegmentValueIntermitent@d1,_dispStruct	;volatile
 16251                           
 16252                           ;outputs_MC50.c: 207:         dispStruct.display_grp.value_display2=d2;
 16253  008B58  C010  F073         	movff	SetSegmentValueIntermitent@d2,_dispStruct+1	;volatile
 16254                           
 16255                           ;outputs_MC50.c: 208:         dispStruct.intermitentFreq=time;
 16256  008B5C  C011  F075         	movff	SetSegmentValueIntermitent@time,_dispStruct+3	;volatile
 16257  008B60  C012  F076         	movff	SetSegmentValueIntermitent@time+1,_dispStruct+4	;volatile
 16258                           
 16259                           ; BSR set to: 1
 16260  008B64  0012               	return		;funcret
 16261  008B66                     __end_of_SetSegmentValueIntermitent:
 16262                           	callstack 0
 16263                           
 16264 ;; *************** function _GetOpenOrder *****************
 16265 ;; Defined at:
 16266 ;;		line 330 in file "inputs_MC50.c"
 16267 ;; Parameters:    Size  Location     Type
 16268 ;;		None
 16269 ;; Auto vars:     Size  Location     Type
 16270 ;;		None
 16271 ;; Return value:  Size  Location     Type
 16272 ;;                  1    wreg      enum E10539
 16273 ;; Registers used:
 16274 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 16275 ;; Tracked objects:
 16276 ;;		On entry : 3E/1
 16277 ;;		On exit  : 0/0
 16278 ;;		Unchanged: 0/0
 16279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16280 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16281 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16283 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16284 ;;Total ram usage:        0 bytes
 16285 ;; Hardware stack levels used: 1
 16286 ;; Hardware stack levels required when called: 5
 16287 ;; This function calls:
 16288 ;;		_SetSegmentValueIntermitentMain
 16289 ;;		___lbdiv
 16290 ;; This function is called by:
 16291 ;;		_sm_execute_ControlGate
 16292 ;;		_actionZone_Closed
 16293 ;;		_actionZone_Opening
 16294 ;;		_actionZone_Opened
 16295 ;;		_actionZone_Closing
 16296 ;;		_sm_execute_ControlLearning
 16297 ;; This function uses a non-reentrant model
 16298 ;;
 16299                           
 16300                           	psect	text53
 16301  005190                     __ptext53:
 16302                           	callstack 0
 16303  005190                     _GetOpenOrder:
 16304                           	callstack 23
 16305                           
 16306                           ;inputs_MC50.c: 332:    if (var_sys.LearningIsEnabled == NO){
 16307                           
 16308                           ; BSR set to: 1
 16309                           ;incstack = 0
 16310  005190  0101               	movlb	1	; () banked
 16311  005192  5126               	movf	(_var_sys+38)& (0+255),w,b	;volatile
 16312  005194  A4D8               	btfss	status,2,c
 16313  005196  D0C0               	goto	l20063
 16314                           
 16315                           ; BSR set to: 1
 16316                           ;inputs_MC50.c: 334:        if(ts_system.TimeCurrentAlarm>0)
 16317  005198  BFC5               	btfsc	(_ts_system+43)& (0+255),7,b	;volatile
 16318  00519A  D019               	goto	l19955
 16319  00519C  51C5               	movf	(_ts_system+43)& (0+255),w,b	;volatile
 16320  00519E  E103               	bnz	u22920
 16321  0051A0  05C4               	decf	(_ts_system+42)& (0+255),w,b	;volatile
 16322  0051A2  A0D8               	btfss	status,0,c
 16323  0051A4  D014               	goto	l19955
 16324  0051A6                     u22920:
 16325                           
 16326                           ; BSR set to: 1
 16327                           ;inputs_MC50.c: 336:         {;inputs_MC50.c: 337:             SetSegmentValueIntermiten
      +                          tMain(dL,d1,(1000/50));
 16328  0051A6  0E01               	movlw	1
 16329  0051A8  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16330  0051AA  0E00               	movlw	0
 16331  0051AC  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16332  0051AE  0E14               	movlw	20
 16333  0051B0  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16334  0051B2  0E12               	movlw	18
 16335  0051B4  EC79  F048         	call	_SetSegmentValueIntermitentMain
 16336                           
 16337                           ;inputs_MC50.c: 338:             ts_system.timeSinalizationDigit=( 500/50);
 16338  0051B8  0E00               	movlw	0
 16339  0051BA  0101               	movlb	1	; () banked
 16340  0051BC  6FA7               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16341  0051BE  0E0A               	movlw	10
 16342  0051C0  6FA6               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16343                           
 16344                           ; BSR set to: 1
 16345                           ;inputs_MC50.c: 339:             rfCMD.processed=1;
 16346  0051C2  0E01               	movlw	1
 16347  0051C4  6E45               	movwf	(_rfCMD+10)^0,c	;volatile
 16348                           
 16349                           ; BSR set to: 1
 16350                           ;inputs_MC50.c: 340:             button_struct.processed=1;
 16351  0051C6  0E01               	movlw	1
 16352  0051C8  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
 16353  0051CA                     l19949:
 16354                           
 16355                           ;inputs_MC50.c: 341:             return NoCMD;
 16356  0051CA  0E00               	movlw	0
 16357  0051CC  0012               	return	
 16358  0051CE                     l19955:
 16359                           
 16360                           ; BSR set to: 1
 16361  0051CE  0100               	movlb	0	; () banked
 16362  0051D0  51A8               	movf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 16363  0051D2  B4D8               	btfsc	status,2,c
 16364  0051D4  D02F               	goto	l19989
 16365                           
 16366                           ; BSR set to: 0
 16367                           ;inputs_MC50.c: 344:         {;inputs_MC50.c: 345:             if(button_struct.current=
      +                          =0x35)
 16368  0051D6  0E35               	movlw	53
 16369  0051D8  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16370  0051DA  A4D8               	btfss	status,2,c
 16371  0051DC  D017               	goto	l19973
 16372                           
 16373                           ; BSR set to: 0
 16374                           ;inputs_MC50.c: 346:             {;inputs_MC50.c: 347:                 ts_system.timeSin
      +                          alizationDigit=( 500/50);
 16375  0051DE  0E00               	movlw	0
 16376  0051E0  0101               	movlb	1	; () banked
 16377  0051E2  6FA7               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16378  0051E4  0E0A               	movlw	10
 16379  0051E6  6FA6               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16380                           
 16381                           ; BSR set to: 1
 16382                           ;inputs_MC50.c: 348:                 SetSegmentValueIntermitentMain(dL,d0,( 200/50));
 16383  0051E8  0E00               	movlw	0
 16384  0051EA  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16385  0051EC  0E00               	movlw	0
 16386  0051EE  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16387  0051F0  0E04               	movlw	4
 16388  0051F2  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16389  0051F4  0E12               	movlw	18
 16390  0051F6  EC79  F048         	call	_SetSegmentValueIntermitentMain
 16391                           
 16392                           ;inputs_MC50.c: 349:                 if (var_sys_NVM.homemPresente == 2){
 16393  0051FA  0E02               	movlw	2
 16394  0051FC  0100               	movlb	0	; () banked
 16395  0051FE  19A8               	xorwf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 16396  005200  A4D8               	btfss	status,2,c
 16397  005202  D002               	goto	l19967
 16398  005204                     u22950:
 16399                           
 16400                           ; BSR set to: 0
 16401                           ;inputs_MC50.c: 350:                    button_struct.processed=1;
 16402  005204  0E01               	movlw	1
 16403  005206  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
 16404  005208                     l19967:
 16405                           
 16406                           ; BSR set to: 0
 16407                           ;inputs_MC50.c: 352:                 return TypeFullOpen;
 16408  005208  0E03               	movlw	3
 16409  00520A  0012               	return	
 16410  00520C                     l19973:
 16411                           
 16412                           ; BSR set to: 0
 16413  00520C  0E33               	movlw	51
 16414  00520E  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16415  005210  A4D8               	btfss	status,2,c
 16416  005212  D7DB               	goto	l19949
 16417                           
 16418                           ; BSR set to: 0
 16419                           ;inputs_MC50.c: 355:             {;inputs_MC50.c: 356:                 ts_system.timeSin
      +                          alizationDigit=( 500/50);
 16420  005214  0E00               	movlw	0
 16421  005216  0101               	movlb	1	; () banked
 16422  005218  6FA7               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16423  00521A  0E0A               	movlw	10
 16424  00521C  6FA6               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16425                           
 16426                           ; BSR set to: 1
 16427                           ;inputs_MC50.c: 357:                 SetSegmentValueIntermitentMain(dL,d5,( 200/50));
 16428  00521E  0E05               	movlw	5
 16429  005220  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16430  005222  0E00               	movlw	0
 16431  005224  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16432  005226  0E04               	movlw	4
 16433  005228  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16434  00522A  0E12               	movlw	18
 16435  00522C  EC79  F048         	call	_SetSegmentValueIntermitentMain
 16436  005230                     l19979:
 16437                           
 16438                           ;inputs_MC50.c: 359:                 return TypeFullClose;
 16439  005230  0E04               	movlw	4
 16440  005232  0012               	return	
 16441  005234                     l19989:
 16442                           
 16443                           ; BSR set to: 0
 16444  005234  0E35               	movlw	53
 16445  005236  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16446  005238  A4D8               	btfss	status,2,c
 16447  00523A  D016               	goto	l20011
 16448                           
 16449                           ; BSR set to: 0
 16450                           ;inputs_MC50.c: 371:         {;inputs_MC50.c: 372:             ts_system.timeSinalizatio
      +                          nDigit=(1000/50)*2;
 16451  00523C  0E00               	movlw	0
 16452  00523E  0101               	movlb	1	; () banked
 16453  005240  6FA7               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16454  005242  0E28               	movlw	40
 16455  005244  6FA6               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16456                           
 16457                           ; BSR set to: 1
 16458                           ;inputs_MC50.c: 373:             SetSegmentValueIntermitentMain(dL,d0,( 200/50));
 16459  005246  0E00               	movlw	0
 16460  005248  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16461  00524A  0E00               	movlw	0
 16462  00524C  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16463  00524E  0E04               	movlw	4
 16464  005250  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16465  005252  0E12               	movlw	18
 16466  005254  EC79  F048         	call	_SetSegmentValueIntermitentMain
 16467                           
 16468                           ;inputs_MC50.c: 374:             if(var_sys_NVM.logicDigital==1)
 16469  005258  0100               	movlb	0	; () banked
 16470  00525A  05A9               	decf	(_var_sys_NVM+17)& (0+255),w,b	;volatile
 16471  00525C  B4D8               	btfsc	status,2,c
 16472  00525E  D7D2               	goto	u22950
 16473  005260                     l20005:
 16474                           
 16475                           ;inputs_MC50.c: 380:             {;inputs_MC50.c: 381:                 button_struct.pro
      +                          cessed=1;
 16476  005260  0E01               	movlw	1
 16477  005262  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
 16478                           
 16479                           ;inputs_MC50.c: 382:                 return TypeFull;
 16480  005264  0E01               	movlw	1
 16481  005266  0012               	return	
 16482  005268                     l20011:
 16483                           
 16484                           ; BSR set to: 0
 16485  005268  0E33               	movlw	51
 16486  00526A  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16487  00526C  A4D8               	btfss	status,2,c
 16488  00526E  D019               	goto	l20033
 16489                           
 16490                           ; BSR set to: 0
 16491                           ;inputs_MC50.c: 387:         {;inputs_MC50.c: 389:             ts_system.timeSinalizatio
      +                          nDigit=(1000/50)*2;
 16492  005270  0E00               	movlw	0
 16493  005272  0101               	movlb	1	; () banked
 16494  005274  6FA7               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16495  005276  0E28               	movlw	40
 16496  005278  6FA6               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16497                           
 16498                           ; BSR set to: 1
 16499                           ;inputs_MC50.c: 390:             SetSegmentValueIntermitentMain(dL,d5,( 200/50));
 16500  00527A  0E05               	movlw	5
 16501  00527C  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16502  00527E  0E00               	movlw	0
 16503  005280  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16504  005282  0E04               	movlw	4
 16505  005284  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16506  005286  0E12               	movlw	18
 16507  005288  EC79  F048         	call	_SetSegmentValueIntermitentMain
 16508                           
 16509                           ;inputs_MC50.c: 391:             if(var_sys_NVM.logicDigital==1)
 16510  00528C  0100               	movlb	0	; () banked
 16511  00528E  05A9               	decf	(_var_sys_NVM+17)& (0+255),w,b	;volatile
 16512  005290  A4D8               	btfss	status,2,c
 16513  005292  D003               	goto	l20027
 16514                           
 16515                           ; BSR set to: 0
 16516                           ;inputs_MC50.c: 392:             {;inputs_MC50.c: 393:                  button_struct.pr
      +                          ocessed=1;
 16517  005294  0E01               	movlw	1
 16518  005296  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
 16519  005298  D7CB               	goto	l19979
 16520  00529A                     l20027:
 16521                           
 16522                           ; BSR set to: 0
 16523                           ;inputs_MC50.c: 399:             {;inputs_MC50.c: 400:                  button_struct.pr
      +                          ocessed=1;
 16524  00529A  0E01               	movlw	1
 16525  00529C  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
 16526                           
 16527                           ; BSR set to: 0
 16528                           ;inputs_MC50.c: 402:                 return TypeWalk;
 16529  00529E  0E02               	movlw	2
 16530  0052A0  0012               	return	
 16531  0052A2                     l20033:
 16532                           
 16533                           ; BSR set to: 0
 16534  0052A2  0E36               	movlw	54
 16535  0052A4  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16536  0052A6  A4D8               	btfss	status,2,c
 16537  0052A8  D00F               	goto	l20047
 16538                           
 16539                           ; BSR set to: 0
 16540                           ;inputs_MC50.c: 408:         {;inputs_MC50.c: 409:             ts_system.timeSinalizatio
      +                          nDigit=(1000/50)*2;
 16541  0052AA  0E00               	movlw	0
 16542  0052AC  0101               	movlb	1	; () banked
 16543  0052AE  6FA7               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16544  0052B0  0E28               	movlw	40
 16545  0052B2  6FA6               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16546                           
 16547                           ; BSR set to: 1
 16548                           ;inputs_MC50.c: 410:             SetSegmentValueIntermitentMain(dP,dU,( 200/50));
 16549  0052B4  0E13               	movlw	19
 16550  0052B6  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16551  0052B8  0E00               	movlw	0
 16552  0052BA  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16553  0052BC  0E04               	movlw	4
 16554  0052BE  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16555  0052C0  0E10               	movlw	16
 16556  0052C2  EC79  F048         	call	_SetSegmentValueIntermitentMain
 16557  0052C6  D7CC               	goto	l20005
 16558  0052C8                     l20047:
 16559                           
 16560                           ; BSR set to: 0
 16561                           ;inputs_MC50.c: 417:         {;inputs_MC50.c: 418:             if(rfCMD.currentType!=NoC
      +                          MD && rfCMD.currentType!=TypeProgrammingModeFull && rfCMD.currentType!=TypeProgrammingMo
      +                          deWalk )
 16562  0052C8  503B               	movf	_rfCMD^0,w,c	;volatile
 16563  0052CA  B4D8               	btfsc	status,2,c
 16564  0052CC  D023               	goto	l20059
 16565                           
 16566                           ; BSR set to: 0
 16567  0052CE  0E06               	movlw	6
 16568  0052D0  183B               	xorwf	_rfCMD^0,w,c	;volatile
 16569  0052D2  B4D8               	btfsc	status,2,c
 16570  0052D4  D01F               	goto	l20059
 16571                           
 16572                           ; BSR set to: 0
 16573  0052D6  0E05               	movlw	5
 16574  0052D8  183B               	xorwf	_rfCMD^0,w,c	;volatile
 16575  0052DA  B4D8               	btfsc	status,2,c
 16576  0052DC  D01B               	goto	l20059
 16577                           
 16578                           ; BSR set to: 0
 16579                           ;inputs_MC50.c: 419:             {;inputs_MC50.c: 420:                 SetSegmentValueIn
      +                          termitentMain(rfCMD.currentPosMem/10, rfCMD.currentPosMem-((rfCMD.currentPosMem/10)*10),
      +                          ( 200/50));
 16580  0052DE  0E0A               	movlw	10
 16581  0052E0  6E10               	movwf	___lbdiv@divisor^0,c
 16582  0052E2  5043               	movf	(_rfCMD+8)^0,w,c	;volatile
 16583  0052E4  ECE9  F044         	call	___lbdiv
 16584  0052E8  0DF6               	mullw	246
 16585  0052EA  50F3               	movf	243,w,c
 16586  0052EC  2443               	addwf	(_rfCMD+8)^0,w,c	;volatile
 16587  0052EE  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16588  0052F0  0E00               	movlw	0
 16589  0052F2  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16590  0052F4  0E04               	movlw	4
 16591  0052F6  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16592  0052F8  0E0A               	movlw	10
 16593  0052FA  6E10               	movwf	___lbdiv@divisor^0,c
 16594  0052FC  5043               	movf	(_rfCMD+8)^0,w,c	;volatile
 16595  0052FE  ECE9  F044         	call	___lbdiv
 16596  005302  EC79  F048         	call	_SetSegmentValueIntermitentMain
 16597                           
 16598                           ;inputs_MC50.c: 421:                 ts_system.timeSinalizationDigit=(1000/50)*2;
 16599  005306  0E00               	movlw	0
 16600  005308  0101               	movlb	1	; () banked
 16601  00530A  6FA7               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16602  00530C  0E28               	movlw	40
 16603  00530E  6FA6               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16604                           
 16605                           ; BSR set to: 1
 16606                           ;inputs_MC50.c: 422:                 rfCMD.processed=1;
 16607  005310  0E01               	movlw	1
 16608  005312  6E45               	movwf	(_rfCMD+10)^0,c	;volatile
 16609  005314                     l20059:
 16610                           
 16611                           ;inputs_MC50.c: 425:             return rfCMD.currentType;
 16612  005314  503B               	movf	_rfCMD^0,w,c	;volatile
 16613  005316  0012               	return	
 16614  005318                     l20063:
 16615                           
 16616                           ; BSR set to: 1
 16617                           ;inputs_MC50.c: 428:     {;inputs_MC50.c: 429:        if(rfCMD.currentType!=NoCMD ){
 16618  005318  503B               	movf	_rfCMD^0,w,c	;volatile
 16619  00531A  B4D8               	btfsc	status,2,c
 16620  00531C  D01B               	goto	l20071
 16621                           
 16622                           ; BSR set to: 1
 16623                           ;inputs_MC50.c: 430:                   SetSegmentValueIntermitentMain(rfCMD.currentPosMe
      +                          m/10, rfCMD.currentPosMem-((rfCMD.currentPosMem/10)*10),( 200/50));
 16624  00531E  0E0A               	movlw	10
 16625  005320  6E10               	movwf	___lbdiv@divisor^0,c
 16626  005322  5043               	movf	(_rfCMD+8)^0,w,c	;volatile
 16627  005324  ECE9  F044         	call	___lbdiv
 16628  005328  0DF6               	mullw	246
 16629  00532A  50F3               	movf	243,w,c
 16630  00532C  2443               	addwf	(_rfCMD+8)^0,w,c	;volatile
 16631  00532E  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16632  005330  0E00               	movlw	0
 16633  005332  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16634  005334  0E04               	movlw	4
 16635  005336  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16636  005338  0E0A               	movlw	10
 16637  00533A  6E10               	movwf	___lbdiv@divisor^0,c
 16638  00533C  5043               	movf	(_rfCMD+8)^0,w,c	;volatile
 16639  00533E  ECE9  F044         	call	___lbdiv
 16640  005342  EC79  F048         	call	_SetSegmentValueIntermitentMain
 16641                           
 16642                           ;inputs_MC50.c: 431:                 ts_system.timeSinalizationDigit=(1000/50)*1;
 16643  005346  0E00               	movlw	0
 16644  005348  0101               	movlb	1	; () banked
 16645  00534A  6FA7               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16646  00534C  0E14               	movlw	20
 16647  00534E  6FA6               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16648                           
 16649                           ; BSR set to: 1
 16650                           ;inputs_MC50.c: 432:                 rfCMD.processed=1;
 16651  005350  0E01               	movlw	1
 16652  005352  6E45               	movwf	(_rfCMD+10)^0,c	;volatile
 16653  005354                     l20071:
 16654                           
 16655                           ; BSR set to: 1
 16656                           ;inputs_MC50.c: 434:        return rfCMD.currentType;
 16657  005354  503B               	movf	_rfCMD^0,w,c	;volatile
 16658  005356  0012               	return		;funcret
 16659  005358                     __end_of_GetOpenOrder:
 16660                           	callstack 0
 16661                           
 16662 ;; *************** function ___lbdiv *****************
 16663 ;; Defined at:
 16664 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\lbdiv.c"
 16665 ;; Parameters:    Size  Location     Type
 16666 ;;  dividend        1    wreg     unsigned char 
 16667 ;;  divisor         1   15[COMRAM] unsigned char 
 16668 ;; Auto vars:     Size  Location     Type
 16669 ;;  dividend        1   16[COMRAM] unsigned char 
 16670 ;;  quotient        1   18[COMRAM] unsigned char 
 16671 ;;  counter         1   17[COMRAM] unsigned char 
 16672 ;; Return value:  Size  Location     Type
 16673 ;;                  1    wreg      unsigned char 
 16674 ;; Registers used:
 16675 ;;		wreg, status,2, status,0
 16676 ;; Tracked objects:
 16677 ;;		On entry : 0/0
 16678 ;;		On exit  : 0/0
 16679 ;;		Unchanged: 0/0
 16680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16681 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16682 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16684 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16685 ;;Total ram usage:        4 bytes
 16686 ;; Hardware stack levels used: 1
 16687 ;; Hardware stack levels required when called: 4
 16688 ;; This function calls:
 16689 ;;		Nothing
 16690 ;; This function is called by:
 16691 ;;		_GetOpenOrder
 16692 ;;		_sm_execute_menuConfiguration
 16693 ;; This function uses a non-reentrant model
 16694 ;;
 16695                           
 16696                           	psect	text54
 16697  0089D2                     __ptext54:
 16698                           	callstack 0
 16699  0089D2                     ___lbdiv:
 16700                           	callstack 24
 16701                           
 16702                           ;incstack = 0
 16703                           ;___lbdiv@dividend stored from wreg
 16704  0089D2  6E11               	movwf	___lbdiv@dividend^0,c
 16705  0089D4  0E00               	movlw	0
 16706  0089D6  6E13               	movwf	___lbdiv@quotient^0,c
 16707  0089D8  5010               	movf	___lbdiv@divisor^0,w,c
 16708  0089DA  B4D8               	btfsc	status,2,c
 16709  0089DC  D015               	goto	l19901
 16710  0089DE  0E01               	movlw	1
 16711  0089E0  6E12               	movwf	___lbdiv@counter^0,c
 16712  0089E2  D003               	goto	l19889
 16713  0089E4                     l19885:
 16714  0089E4  90D8               	bcf	status,0,c
 16715  0089E6  3610               	rlcf	___lbdiv@divisor^0,f,c
 16716  0089E8  2A12               	incf	___lbdiv@counter^0,f,c
 16717  0089EA                     l19889:
 16718  0089EA  AE10               	btfss	___lbdiv@divisor^0,7,c
 16719  0089EC  D7FB               	goto	l19885
 16720  0089EE                     u22820:
 16721  0089EE  90D8               	bcf	status,0,c
 16722  0089F0  3613               	rlcf	___lbdiv@quotient^0,f,c
 16723  0089F2  5010               	movf	___lbdiv@divisor^0,w,c
 16724  0089F4  5C11               	subwf	___lbdiv@dividend^0,w,c
 16725  0089F6  A0D8               	btfss	status,0,c
 16726  0089F8  D003               	goto	l19897
 16727  0089FA  5010               	movf	___lbdiv@divisor^0,w,c
 16728  0089FC  5E11               	subwf	___lbdiv@dividend^0,f,c
 16729  0089FE  8013               	bsf	___lbdiv@quotient^0,0,c
 16730  008A00                     l19897:
 16731  008A00  90D8               	bcf	status,0,c
 16732  008A02  3210               	rrcf	___lbdiv@divisor^0,f,c
 16733  008A04  2E12               	decfsz	___lbdiv@counter^0,f,c
 16734  008A06  D7F3               	goto	u22820
 16735  008A08                     l19901:
 16736  008A08  5013               	movf	___lbdiv@quotient^0,w,c
 16737  008A0A  0012               	return		;funcret
 16738  008A0C                     __end_of___lbdiv:
 16739                           	callstack 0
 16740                           
 16741 ;; *************** function _SetSegmentValueIntermitentMain *****************
 16742 ;; Defined at:
 16743 ;;		line 193 in file "outputs_MC50.c"
 16744 ;; Parameters:    Size  Location     Type
 16745 ;;  d1              1    wreg     unsigned char 
 16746 ;;  d2              1   27[COMRAM] unsigned char 
 16747 ;;  time            2   28[COMRAM] int 
 16748 ;; Auto vars:     Size  Location     Type
 16749 ;;  d1              1   30[COMRAM] unsigned char 
 16750 ;; Return value:  Size  Location     Type
 16751 ;;                  1    wreg      void 
 16752 ;; Registers used:
 16753 ;;		wreg
 16754 ;; Tracked objects:
 16755 ;;		On entry : 0/1
 16756 ;;		On exit  : 0/0
 16757 ;;		Unchanged: 0/0
 16758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16759 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16760 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16762 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16763 ;;Total ram usage:        4 bytes
 16764 ;; Hardware stack levels used: 1
 16765 ;; Hardware stack levels required when called: 4
 16766 ;; This function calls:
 16767 ;;		Nothing
 16768 ;; This function is called by:
 16769 ;;		_GetOpenOrder
 16770 ;;		_sm_execute_main
 16771 ;;		_sm_execute_menuConfiguration
 16772 ;;		_load_New_Menu
 16773 ;;		_controlSelectRemote
 16774 ;;		_controlSaveRemote
 16775 ;; This function uses a non-reentrant model
 16776 ;;
 16777                           
 16778                           	psect	text55
 16779  0090F2                     __ptext55:
 16780                           	callstack 0
 16781  0090F2                     _SetSegmentValueIntermitentMain:
 16782                           	callstack 22
 16783                           
 16784                           ;incstack = 0
 16785                           ;SetSegmentValueIntermitentMain@d1 stored from wreg
 16786  0090F2  6E1F               	movwf	SetSegmentValueIntermitentMain@d1^0,c
 16787                           
 16788                           ;outputs_MC50.c: 193: void SetSegmentValueIntermitentMain(char d1, char d2,int time);out
      +                          puts_MC50.c: 194: {;outputs_MC50.c: 195:     dispStruct.display_grp.value_display1=d1;
 16789  0090F4  C01F  F072         	movff	SetSegmentValueIntermitentMain@d1,_dispStruct	;volatile
 16790                           
 16791                           ;outputs_MC50.c: 196:     dispStruct.display_grp.value_display2=d2;
 16792  0090F8  C01C  F073         	movff	SetSegmentValueIntermitentMain@d2,_dispStruct+1	;volatile
 16793                           
 16794                           ;outputs_MC50.c: 197:     dispStruct.intermitentFreq=time;
 16795  0090FC  C01D  F075         	movff	SetSegmentValueIntermitentMain@time,_dispStruct+3	;volatile
 16796  009100  C01E  F076         	movff	SetSegmentValueIntermitentMain@time+1,_dispStruct+4	;volatile
 16797  009104  0012               	return		;funcret
 16798  009106                     __end_of_SetSegmentValueIntermitentMain:
 16799                           	callstack 0
 16800                           
 16801 ;; *************** function _readbutton *****************
 16802 ;; Defined at:
 16803 ;;		line 471 in file "inputs_MC50.c"
 16804 ;; Parameters:    Size  Location     Type
 16805 ;;		None
 16806 ;; Auto vars:     Size  Location     Type
 16807 ;;		None
 16808 ;; Return value:  Size  Location     Type
 16809 ;;                  1    wreg      void 
 16810 ;; Registers used:
 16811 ;;		wreg, status,2, status,0
 16812 ;; Tracked objects:
 16813 ;;		On entry : 3F/1
 16814 ;;		On exit  : 3F/1
 16815 ;;		Unchanged: 0/0
 16816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16817 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16818 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16819 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16820 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16821 ;;Total ram usage:        0 bytes
 16822 ;; Hardware stack levels used: 1
 16823 ;; Hardware stack levels required when called: 4
 16824 ;; This function calls:
 16825 ;;		Nothing
 16826 ;; This function is called by:
 16827 ;;		_main
 16828 ;; This function uses a non-reentrant model
 16829 ;;
 16830                           
 16831                           	psect	text56
 16832  008050                     __ptext56:
 16833                           	callstack 0
 16834  008050                     _readbutton:
 16835                           	callstack 26
 16836                           
 16837                           ; BSR set to: 1
 16838                           ;inputs_MC50.c: 474:  static unsigned char key1=0, key2=0;;inputs_MC50.c: 479:  key2 = (
      +                           PORTB & 0x37 );
 16839                           
 16840                           ;incstack = 0
 16841  008050  508E               	movf	142,w,c	;volatile
 16842  008052  0B37               	andlw	55
 16843  008054  6F96               	movwf	readbutton@key2& (0+255),b
 16844  008056  F000               	nop		;# 
 16845  008058  F000               	nop		;# 
 16846  00805A  F000               	nop		;# 
 16847                           
 16848                           ;inputs_MC50.c: 483:  key1 = ( PORTB & 0x37 );
 16849  00805C  508E               	movf	142,w,c	;volatile
 16850  00805E  0B37               	andlw	55
 16851  008060  0100               	movlb	0	; () banked
 16852  008062  6F86               	movwf	readbutton@key1& (0+255),b
 16853                           
 16854                           ;inputs_MC50.c: 485:  if ( key2 == key1 )
 16855  008064  5186               	movf	readbutton@key1& (0+255),w,b
 16856  008066  0101               	movlb	1	; () banked
 16857  008068  1996               	xorwf	readbutton@key2& (0+255),w,b
 16858  00806A  A4D8               	btfss	status,2,c
 16859  00806C  D003               	goto	l16581
 16860                           
 16861                           ; BSR set to: 1
 16862                           ;inputs_MC50.c: 486:  {;inputs_MC50.c: 487:         button_struct.current = key1;
 16863  00806E  C086  F04D         	movff	readbutton@key1,_button_struct+1	;volatile
 16864                           
 16865                           ;inputs_MC50.c: 488:  }
 16866  008072  D002               	goto	l16583
 16867  008074                     l16581:
 16868                           
 16869                           ; BSR set to: 1
 16870                           ;inputs_MC50.c: 490:     {;inputs_MC50.c: 491:         button_struct.current = 0x37;
 16871  008074  0E37               	movlw	55
 16872  008076  6E4D               	movwf	(_button_struct+1)^0,c	;volatile
 16873  008078                     l16583:
 16874                           
 16875                           ; BSR set to: 1
 16876                           ;inputs_MC50.c: 494:     if ( button_struct.current == 0x37 || ( button_struct.current !
      +                          = button_struct.old && button_struct.current == 0x00))
 16877  008078  0E37               	movlw	55
 16878  00807A  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16879  00807C  B4D8               	btfsc	status,2,c
 16880  00807E  D007               	goto	u19060
 16881                           
 16882                           ; BSR set to: 1
 16883  008080  504C               	movf	_button_struct^0,w,c	;volatile
 16884  008082  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16885  008084  B4D8               	btfsc	status,2,c
 16886  008086  D007               	goto	l16591
 16887                           
 16888                           ; BSR set to: 1
 16889  008088  504D               	movf	(_button_struct+1)^0,w,c	;volatile
 16890  00808A  A4D8               	btfss	status,2,c
 16891  00808C  D004               	goto	l16591
 16892  00808E                     u19060:
 16893                           
 16894                           ; BSR set to: 1
 16895                           ;inputs_MC50.c: 495:  {;inputs_MC50.c: 496:   button_struct.processed=0;
 16896  00808E  0E00               	movlw	0
 16897  008090  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
 16898                           
 16899                           ;inputs_MC50.c: 497:         button_struct.timer=0;
 16900  008092  0E00               	movlw	0
 16901  008094  6E4E               	movwf	(_button_struct+2)^0,c	;volatile
 16902  008096                     l16591:
 16903                           
 16904                           ; BSR set to: 1
 16905                           ;inputs_MC50.c: 500:  if ( button_struct.current != 0x37 )
 16906  008096  0E37               	movlw	55
 16907  008098  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16908  00809A  B4D8               	btfsc	status,2,c
 16909  00809C  D007               	goto	l16599
 16910                           
 16911                           ; BSR set to: 1
 16912                           ;inputs_MC50.c: 501:  {;inputs_MC50.c: 502:   button_struct.old = button_struct.current;
 16913  00809E  C04D  F04C         	movff	_button_struct+1,_button_struct	;volatile
 16914                           
 16915                           ; BSR set to: 1
 16916                           ;inputs_MC50.c: 504:         if ( button_struct.timer < 250 )
 16917  0080A2  0EFA               	movlw	250
 16918  0080A4  604E               	cpfslt	(_button_struct+2)^0,c	;volatile
 16919  0080A6  D004               	goto	l16601
 16920                           
 16921                           ; BSR set to: 1
 16922                           ;inputs_MC50.c: 505:         {;inputs_MC50.c: 506:             button_struct.timer++;
 16923  0080A8  2A4E               	incf	(_button_struct+2)^0,f,c	;volatile
 16924  0080AA  D002               	goto	l16601
 16925  0080AC                     l16599:
 16926                           
 16927                           ; BSR set to: 1
 16928                           ;inputs_MC50.c: 515:  {;inputs_MC50.c: 516:   button_struct.timer=0;
 16929  0080AC  0E00               	movlw	0
 16930  0080AE  6E4E               	movwf	(_button_struct+2)^0,c	;volatile
 16931  0080B0                     l16601:
 16932                           
 16933                           ; BSR set to: 1
 16934                           ;inputs_MC50.c: 520:  if ( button_struct.processed == 1 )
 16935  0080B0  044F               	decf	(_button_struct+3)^0,w,c	;volatile
 16936  0080B2  A4D8               	btfss	status,2,c
 16937  0080B4  0012               	return	
 16938                           
 16939                           ; BSR set to: 1
 16940                           ;inputs_MC50.c: 521:  {;inputs_MC50.c: 522:   button_struct.current = 0x37;
 16941  0080B6  0E37               	movlw	55
 16942  0080B8  6E4D               	movwf	(_button_struct+1)^0,c	;volatile
 16943                           
 16944                           ; BSR set to: 1
 16945  0080BA  0012               	return		;funcret
 16946  0080BC                     __end_of_readbutton:
 16947                           	callstack 0
 16948                           
 16949 ;; *************** function _read_package *****************
 16950 ;; Defined at:
 16951 ;;		line 21 in file "eusartpackage.c"
 16952 ;; Parameters:    Size  Location     Type
 16953 ;;		None
 16954 ;; Auto vars:     Size  Location     Type
 16955 ;;  package         7   23[COMRAM] struct package_t
 16956 ;; Return value:  Size  Location     Type
 16957 ;;                  7   16[COMRAM] struct package_t
 16958 ;; Registers used:
 16959 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, cstack
 16960 ;; Tracked objects:
 16961 ;;		On entry : 3F/0
 16962 ;;		On exit  : 3F/E
 16963 ;;		Unchanged: 0/0
 16964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16965 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16966 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16967 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16968 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16969 ;;Total ram usage:       14 bytes
 16970 ;; Hardware stack levels used: 1
 16971 ;; Hardware stack levels required when called: 5
 16972 ;; This function calls:
 16973 ;;		_EUSART1_Read
 16974 ;; This function is called by:
 16975 ;;		_main
 16976 ;; This function uses a non-reentrant model
 16977 ;;
 16978                           
 16979                           	psect	text57
 16980  0085B8                     __ptext57:
 16981                           	callstack 0
 16982  0085B8                     _read_package:
 16983                           	callstack 25
 16984                           
 16985                           ; BSR set to: 0
 16986                           ;eusartpackage.c: 22:         struct package_t package;;eusartpackage.c: 24:         if(
      +                          EUSART1_Read()!=0x0A){
 16987                           
 16988                           ; BSR set to: 1
 16989                           ;incstack = 0
 16990  0085B8  EC9F  F043         	call	_EUSART1_Read	;wreg free
 16991  0085BC  0A0A               	xorlw	10
 16992  0085BE  B4D8               	btfsc	status,2,c
 16993  0085C0  D00C               	goto	l16759
 16994  0085C2                     u19590:
 16995                           
 16996                           ; BSR set to: 14
 16997                           ;eusartpackage.c: 25:             package.valid=0;
 16998  0085C2  0E00               	movlw	0
 16999  0085C4  6E1E               	movwf	(read_package@package+6)^0,c
 17000                           
 17001                           ; BSR set to: 14
 17002                           ;eusartpackage.c: 26:             return package;
 17003  0085C6  EE20  F018         	lfsr	2,read_package@package
 17004  0085CA  EE00  F011         	lfsr	0,?_read_package
 17005  0085CE  0E06               	movlw	6
 17006  0085D0                     u19601:
 17007  0085D0  CFDB FFEB          	movff	plusw2,plusw0
 17008  0085D4  06E8               	decf	wreg,f,c
 17009  0085D6  E2FC               	bc	u19601
 17010  0085D8  0012               	return	
 17011  0085DA                     l16759:
 17012                           
 17013                           ; BSR set to: 14
 17014                           ;eusartpackage.c: 29:             package.startbyte=0x0A;
 17015  0085DA  0E0A               	movlw	10
 17016  0085DC  6E1C               	movwf	(read_package@package+4)^0,c
 17017                           
 17018                           ; BSR set to: 14
 17019                           ;eusartpackage.c: 32:         package.functioncode=EUSART1_Read();
 17020  0085DE  EC9F  F043         	call	_EUSART1_Read	;wreg free
 17021  0085E2  6E18               	movwf	read_package@package^0,c
 17022                           
 17023                           ; BSR set to: 14
 17024                           ;eusartpackage.c: 33:         package.address=EUSART1_Read();
 17025  0085E4  EC9F  F043         	call	_EUSART1_Read	;wreg free
 17026  0085E8  6E19               	movwf	(read_package@package+1)^0,c
 17027                           
 17028                           ; BSR set to: 14
 17029                           ;eusartpackage.c: 34:         package.data.data8[0]=EUSART1_Read();
 17030  0085EA  EC9F  F043         	call	_EUSART1_Read	;wreg free
 17031  0085EE  6E1A               	movwf	(read_package@package+2)^0,c
 17032                           
 17033                           ; BSR set to: 14
 17034                           ;eusartpackage.c: 35:         package.data.data8[1]=EUSART1_Read();
 17035  0085F0  EC9F  F043         	call	_EUSART1_Read	;wreg free
 17036  0085F4  6E1B               	movwf	(read_package@package+3)^0,c
 17037                           
 17038                           ; BSR set to: 14
 17039                           ;eusartpackage.c: 38:         if(EUSART1_Read()!=0x0D){
 17040  0085F6  EC9F  F043         	call	_EUSART1_Read	;wreg free
 17041  0085FA  0A0D               	xorlw	13
 17042  0085FC  A4D8               	btfss	status,2,c
 17043  0085FE  D7E1               	goto	u19590
 17044                           
 17045                           ; BSR set to: 14
 17046                           ;eusartpackage.c: 43:             package.endbyte=0x0D;
 17047  008600  0E0D               	movlw	13
 17048  008602  6E1D               	movwf	(read_package@package+5)^0,c
 17049                           
 17050                           ; BSR set to: 14
 17051                           ;eusartpackage.c: 46:         package.valid=1;
 17052  008604  0E01               	movlw	1
 17053  008606  D7DE               	goto	L76
 17054  008608                     __end_of_read_package:
 17055                           	callstack 0
 17056                           
 17057 ;; *************** function _EUSART1_Read *****************
 17058 ;; Defined at:
 17059 ;;		line 151 in file "mcc_generated_files/eusart1.c"
 17060 ;; Parameters:    Size  Location     Type
 17061 ;;		None
 17062 ;; Auto vars:     Size  Location     Type
 17063 ;;  readValue       1   15[COMRAM] unsigned char 
 17064 ;; Return value:  Size  Location     Type
 17065 ;;                  1    wreg      unsigned char 
 17066 ;; Registers used:
 17067 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17068 ;; Tracked objects:
 17069 ;;		On entry : 31/0
 17070 ;;		On exit  : 3F/E
 17071 ;;		Unchanged: 0/0
 17072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17073 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17074 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17076 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17077 ;;Total ram usage:        1 bytes
 17078 ;; Hardware stack levels used: 1
 17079 ;; Hardware stack levels required when called: 4
 17080 ;; This function calls:
 17081 ;;		Nothing
 17082 ;; This function is called by:
 17083 ;;		_read_package
 17084 ;; This function uses a non-reentrant model
 17085 ;;
 17086                           
 17087                           	psect	text58
 17088  00873E                     __ptext58:
 17089                           	callstack 0
 17090  00873E                     _EUSART1_Read:
 17091                           	callstack 25
 17092                           
 17093                           ;mcc_generated_files/eusart1.c: 155:     while(0 == eusart1RxCount)
 17094                           
 17095                           ;mcc_generated_files/eusart1.c: 155:     while(0 == eusart1RxCount)
 17096                           
 17097                           ; BSR set to: 14
 17098                           ;incstack = 0
 17099  00873E  0100               	movlb	0	; () banked
 17100  008740  5193               	movf	_eusart1RxCount& (0+255),w,b	;volatile
 17101  008742  B4D8               	btfsc	status,2,c
 17102  008744  D7FC               	goto	__ptext58
 17103                           
 17104                           ; BSR set to: 0
 17105                           ;mcc_generated_files/eusart1.c: 159:     eusart1RxLastError = eusart1RxStatusBuffer[eusa
      +                          rt1RxTail];
 17106  008746  0E74               	movlw	low _eusart1RxStatusBuffer
 17107  008748  2594               	addwf	_eusart1RxTail& (0+255),w,b	;volatile
 17108  00874A  6ED9               	movwf	fsr2l,c
 17109  00874C  6ADA               	clrf	fsr2h,c
 17110  00874E  0E02               	movlw	high _eusart1RxStatusBuffer
 17111  008750  22DA               	addwfc	fsr2h,f,c
 17112  008752  50DF               	movf	indf2,w,c
 17113  008754  0101               	movlb	1	; () banked
 17114  008756  6F99               	movwf	_eusart1RxLastError& (0+255),b	;volatile
 17115                           
 17116                           ;mcc_generated_files/eusart1.c: 161:     readValue = eusart1RxBuffer[eusart1RxTail++];
 17117  008758  0E7C               	movlw	low _eusart1RxBuffer
 17118  00875A  0100               	movlb	0	; () banked
 17119  00875C  2594               	addwf	_eusart1RxTail& (0+255),w,b	;volatile
 17120  00875E  6ED9               	movwf	fsr2l,c
 17121  008760  6ADA               	clrf	fsr2h,c
 17122  008762  0E02               	movlw	high _eusart1RxBuffer
 17123  008764  22DA               	addwfc	fsr2h,f,c
 17124  008766  50DF               	movf	indf2,w,c
 17125  008768  6E10               	movwf	EUSART1_Read@readValue^0,c
 17126                           
 17127                           ; BSR set to: 0
 17128  00876A  2B94               	incf	_eusart1RxTail& (0+255),f,b	;volatile
 17129                           
 17130                           ; BSR set to: 0
 17131                           ;mcc_generated_files/eusart1.c: 162:     if(sizeof(eusart1RxBuffer) <= eusart1RxTail)
 17132  00876C  0E07               	movlw	7
 17133  00876E  6594               	cpfsgt	_eusart1RxTail& (0+255),b
 17134  008770  D002               	goto	l13995
 17135                           
 17136                           ; BSR set to: 0
 17137                           ;mcc_generated_files/eusart1.c: 163:     {;mcc_generated_files/eusart1.c: 164:         e
      +                          usart1RxTail = 0;
 17138  008772  0E00               	movlw	0
 17139  008774  6F94               	movwf	_eusart1RxTail& (0+255),b	;volatile
 17140  008776                     l13995:
 17141                           
 17142                           ; BSR set to: 0
 17143                           ;mcc_generated_files/eusart1.c: 166:     PIE3bits.RC1IE = 0;
 17144  008776  010E               	movlb	14	; () banked
 17145  008778  9BC5               	bcf	197,5,b	;volatile
 17146                           
 17147                           ; BSR set to: 14
 17148                           ;mcc_generated_files/eusart1.c: 167:     eusart1RxCount--;
 17149  00877A  0100               	movlb	0	; () banked
 17150  00877C  0793               	decf	_eusart1RxCount& (0+255),f,b	;volatile
 17151                           
 17152                           ; BSR set to: 0
 17153                           ;mcc_generated_files/eusart1.c: 168:     PIE3bits.RC1IE = 1;
 17154  00877E  010E               	movlb	14	; () banked
 17155  008780  8BC5               	bsf	197,5,b	;volatile
 17156                           
 17157                           ; BSR set to: 14
 17158                           ;mcc_generated_files/eusart1.c: 170:     return readValue;
 17159  008782  5010               	movf	EUSART1_Read@readValue^0,w,c
 17160                           
 17161                           ; BSR set to: 14
 17162  008784  0012               	return		;funcret
 17163  008786                     __end_of_EUSART1_Read:
 17164                           	callstack 0
 17165                           
 17166 ;; *************** function _readRFButtons *****************
 17167 ;; Defined at:
 17168 ;;		line 231 in file "inputs_MC50.c"
 17169 ;; Parameters:    Size  Location     Type
 17170 ;;		None
 17171 ;; Auto vars:     Size  Location     Type
 17172 ;;		None
 17173 ;; Return value:  Size  Location     Type
 17174 ;;                  1    wreg      void 
 17175 ;; Registers used:
 17176 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 17177 ;; Tracked objects:
 17178 ;;		On entry : 3F/1
 17179 ;;		On exit  : 3E/0
 17180 ;;		Unchanged: 0/0
 17181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17185 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17186 ;;Total ram usage:        0 bytes
 17187 ;; Hardware stack levels used: 1
 17188 ;; Hardware stack levels required when called: 15
 17189 ;; This function calls:
 17190 ;;		_DecryptPacket_12BIT
 17191 ;;		_keeloqDecryptPacket
 17192 ;; This function is called by:
 17193 ;;		_main
 17194 ;; This function uses a non-reentrant model
 17195 ;;
 17196                           
 17197                           	psect	text59
 17198  0059C8                     __ptext59:
 17199                           	callstack 0
 17200  0059C8                     _readRFButtons:
 17201                           	callstack 15
 17202                           
 17203                           ; BSR set to: 1
 17204                           ;inputs_MC50.c: 232:     static unsigned char key1 = 0;;inputs_MC50.c: 233:     static u
      +                          int32_t serial = 0;;inputs_MC50.c: 234:     static uint16_t rollingCode= 0;;inputs_MC50.
      +                          c: 235:     static TypeCMD keyType = 0;;inputs_MC50.c: 236:     static TypeRemote_st typ
      +                          eRemote;;inputs_MC50.c: 241:     if(RFFull)
 17205                           
 17206                           ; BSR set to: 14
 17207                           ;incstack = 0
 17208  0059C8  0100               	movlb	0	; () banked
 17209  0059CA  518B               	movf	_RFFull& (0+255),w,b	;volatile
 17210  0059CC  B4D8               	btfsc	status,2,c
 17211  0059CE  D0B9               	goto	l22739
 17212                           
 17213                           ; BSR set to: 0
 17214                           ;inputs_MC50.c: 242:     {;inputs_MC50.c: 244:          if(RFFull_12BIT==0)
 17215  0059D0  518A               	movf	_RFFull_12BIT& (0+255),w,b	;volatile
 17216  0059D2  A4D8               	btfss	status,2,c
 17217  0059D4  D00B               	goto	l22685
 17218                           
 17219                           ; BSR set to: 0
 17220                           ;inputs_MC50.c: 245:          {;inputs_MC50.c: 246:             keyType = keeloqDecryptP
      +                          acket(BufferRF,&classic_data);
 17221  0059D6  0EC8               	movlw	low _BufferRF
 17222  0059D8  6FE0               	movwf	keeloqDecryptPacket@data& (0+255),b
 17223  0059DA  0E02               	movlw	high _BufferRF
 17224  0059DC  6FE1               	movwf	(keeloqDecryptPacket@data+1)& (0+255),b
 17225  0059DE  0E92               	movlw	low _classic_data
 17226  0059E0  6FE2               	movwf	keeloqDecryptPacket@classic_data& (0+255),b
 17227  0059E2  0E02               	movlw	high _classic_data
 17228  0059E4  6FE3               	movwf	(keeloqDecryptPacket@classic_data+1)& (0+255),b
 17229  0059E6  ECDF  F027         	call	_keeloqDecryptPacket	;wreg free
 17230  0059EA  D00A               	goto	L77
 17231  0059EC                     l22685:
 17232                           
 17233                           ; BSR set to: 0
 17234                           ;inputs_MC50.c: 249:          {;inputs_MC50.c: 250:             keyType = DecryptPacket_
      +                          12BIT(BufferRF,&classic_data);
 17235  0059EC  0EC8               	movlw	low _BufferRF
 17236  0059EE  6FE0               	movwf	DecryptPacket_12BIT@data& (0+255),b
 17237  0059F0  0E02               	movlw	high _BufferRF
 17238  0059F2  6FE1               	movwf	(DecryptPacket_12BIT@data+1)& (0+255),b
 17239  0059F4  0E92               	movlw	low _classic_data
 17240  0059F6  6FE2               	movwf	DecryptPacket_12BIT@classic_data& (0+255),b
 17241  0059F8  0E02               	movlw	high _classic_data
 17242  0059FA  6FE3               	movwf	(DecryptPacket_12BIT@classic_data+1)& (0+255),b
 17243  0059FC  EC44  F03B         	call	_DecryptPacket_12BIT	;wreg free
 17244  005A00                     L77:
 17245  005A00  6F87               	movwf	readRFButtons@keyType& (0+255),b
 17246                           
 17247                           ; BSR set to: 0
 17248                           ;inputs_MC50.c: 254:         key1 = classic_data.fcode1;
 17249  005A02  C29E  F088         	movff	_classic_data+12,readRFButtons@key1
 17250                           
 17251                           ; BSR set to: 0
 17252                           ;inputs_MC50.c: 255:         serial = classic_data.serialnumber;
 17253  005A06  C296  F181         	movff	_classic_data+4,readRFButtons@serial
 17254  005A0A  C297  F182         	movff	_classic_data+5,readRFButtons@serial+1
 17255  005A0E  C298  F183         	movff	_classic_data+6,readRFButtons@serial+2
 17256  005A12  C299  F184         	movff	_classic_data+7,readRFButtons@serial+3
 17257                           
 17258                           ; BSR set to: 0
 17259                           ;inputs_MC50.c: 256:         rollingCode = classic_data.sync;
 17260  005A16  C29A  F185         	movff	_classic_data+8,readRFButtons@rollingCode
 17261  005A1A  C29B  F186         	movff	_classic_data+9,readRFButtons@rollingCode+1
 17262                           
 17263                           ; BSR set to: 0
 17264                           ;inputs_MC50.c: 257:         typeRemote = classic_data.type;
 17265  005A1E  C2A0  F197         	movff	_classic_data+14,readRFButtons@typeRemote
 17266                           
 17267                           ; BSR set to: 0
 17268                           ;inputs_MC50.c: 270:         if (var_sys.LearningIsEnabled == YES){
 17269  005A22  0101               	movlb	1	; () banked
 17270  005A24  0526               	decf	(_var_sys+38)& (0+255),w,b	;volatile
 17271  005A26  A4D8               	btfss	status,2,c
 17272  005A28  D01E               	goto	l22707
 17273                           
 17274                           ; BSR set to: 1
 17275                           ;inputs_MC50.c: 272:              if (keyType==NoCMD || rfCMD.currentKey!=key1 || rfCMD.
      +                          currentSerial!=serial || keyType!=rfCMD.currentType)
 17276  005A2A  0100               	movlb	0	; () banked
 17277  005A2C  5187               	movf	readRFButtons@keyType& (0+255),w,b
 17278  005A2E  B4D8               	btfsc	status,2,c
 17279  005A30  D044               	goto	u27650
 17280                           
 17281                           ; BSR set to: 0
 17282  005A32  5188               	movf	readRFButtons@key1& (0+255),w,b
 17283  005A34  183C               	xorwf	(_rfCMD+1)^0,w,c	;volatile
 17284  005A36  A4D8               	btfss	status,2,c
 17285  005A38  D040               	goto	u27650
 17286                           
 17287                           ; BSR set to: 0
 17288  005A3A  0101               	movlb	1	; () banked
 17289  005A3C  5181               	movf	readRFButtons@serial& (0+255),w,b
 17290  005A3E  183D               	xorwf	(_rfCMD+2)^0,w,c	;volatile
 17291  005A40  E13C               	bnz	l22719
 17292  005A42  5182               	movf	(readRFButtons@serial+1)& (0+255),w,b
 17293  005A44  183E               	xorwf	(_rfCMD+3)^0,w,c	;volatile
 17294  005A46  E139               	bnz	l22719
 17295  005A48  5183               	movf	(readRFButtons@serial+2)& (0+255),w,b
 17296  005A4A  183F               	xorwf	(_rfCMD+4)^0,w,c	;volatile
 17297  005A4C  E136               	bnz	l22719
 17298  005A4E  5184               	movf	(readRFButtons@serial+3)& (0+255),w,b
 17299  005A50  1840               	xorwf	(_rfCMD+5)^0,w,c	;volatile
 17300  005A52  A4D8               	btfss	status,2,c
 17301  005A54  D032               	goto	u27650
 17302                           
 17303                           ; BSR set to: 1
 17304  005A56  0100               	movlb	0	; () banked
 17305  005A58  5187               	movf	readRFButtons@keyType& (0+255),w,b
 17306  005A5A  183B               	xorwf	_rfCMD^0,w,c	;volatile
 17307  005A5C  A4D8               	btfss	status,2,c
 17308  005A5E  D02D               	goto	u27650
 17309  005A60                     l1649:
 17310                           
 17311                           ;inputs_MC50.c: 274:                 rfCMD.timer=0;
 17312  005A60  0E00               	movlw	0
 17313  005A62  6E44               	movwf	(_rfCMD+9)^0,c	;volatile
 17314                           
 17315                           ;inputs_MC50.c: 275:         }
 17316  005A64  D038               	goto	l1652
 17317  005A66                     l22707:
 17318                           
 17319                           ; BSR set to: 1
 17320  005A66  0100               	movlb	0	; () banked
 17321  005A68  5187               	movf	readRFButtons@keyType& (0+255),w,b
 17322  005A6A  B4D8               	btfsc	status,2,c
 17323  005A6C  D026               	goto	u27650
 17324                           
 17325                           ; BSR set to: 0
 17326  005A6E  5187               	movf	readRFButtons@keyType& (0+255),w,b
 17327  005A70  183B               	xorwf	_rfCMD^0,w,c	;volatile
 17328  005A72  B4D8               	btfsc	status,2,c
 17329  005A74  D00F               	goto	u27630
 17330                           
 17331                           ; BSR set to: 0
 17332  005A76  0101               	movlb	1	; () banked
 17333  005A78  BFAF               	btfsc	(_ts_system+21)& (0+255),7,b	;volatile
 17334  005A7A  D005               	goto	u27620
 17335  005A7C  51AF               	movf	(_ts_system+21)& (0+255),w,b	;volatile
 17336  005A7E  E10A               	bnz	l22715
 17337  005A80  05AE               	decf	(_ts_system+20)& (0+255),w,b	;volatile
 17338  005A82  B0D8               	btfsc	status,0,c
 17339  005A84  D007               	goto	u27630
 17340  005A86                     u27620:
 17341                           
 17342                           ; BSR set to: 1
 17343  005A86  5185               	movf	readRFButtons@rollingCode& (0+255),w,b
 17344  005A88  1841               	xorwf	(_rfCMD+6)^0,w,c	;volatile
 17345  005A8A  E117               	bnz	l22719
 17346  005A8C  5186               	movf	(readRFButtons@rollingCode+1)& (0+255),w,b
 17347  005A8E  1842               	xorwf	(_rfCMD+7)^0,w,c	;volatile
 17348  005A90  A4D8               	btfss	status,2,c
 17349  005A92  D013               	goto	u27650
 17350  005A94                     u27630:
 17351  005A94                     l22715:
 17352  005A94  0100               	movlb	0	; () banked
 17353  005A96  5188               	movf	readRFButtons@key1& (0+255),w,b
 17354  005A98  183C               	xorwf	(_rfCMD+1)^0,w,c	;volatile
 17355  005A9A  A4D8               	btfss	status,2,c
 17356  005A9C  D00E               	goto	u27650
 17357                           
 17358                           ; BSR set to: 0
 17359  005A9E  0101               	movlb	1	; () banked
 17360  005AA0  5181               	movf	readRFButtons@serial& (0+255),w,b
 17361  005AA2  183D               	xorwf	(_rfCMD+2)^0,w,c	;volatile
 17362  005AA4  E10A               	bnz	u27650
 17363  005AA6  5182               	movf	(readRFButtons@serial+1)& (0+255),w,b
 17364  005AA8  183E               	xorwf	(_rfCMD+3)^0,w,c	;volatile
 17365  005AAA  E107               	bnz	u27650
 17366  005AAC  5183               	movf	(readRFButtons@serial+2)& (0+255),w,b
 17367  005AAE  183F               	xorwf	(_rfCMD+4)^0,w,c	;volatile
 17368  005AB0  E104               	bnz	u27650
 17369  005AB2  5184               	movf	(readRFButtons@serial+3)& (0+255),w,b
 17370  005AB4  1840               	xorwf	(_rfCMD+5)^0,w,c	;volatile
 17371  005AB6  B4D8               	btfsc	status,2,c
 17372  005AB8  D003               	goto	l22721
 17373  005ABA                     u27650:
 17374  005ABA                     l22719:
 17375                           
 17376                           ;inputs_MC50.c: 278:         {;inputs_MC50.c: 279:            rfCMD.processed=0;
 17377  005ABA  0E00               	movlw	0
 17378  005ABC  6E45               	movwf	(_rfCMD+10)^0,c	;volatile
 17379  005ABE  D7D0               	goto	l1649
 17380  005AC0                     l22721:
 17381                           
 17382                           ; BSR set to: 1
 17383  005AC0  BFAF               	btfsc	(_ts_system+21)& (0+255),7,b	;volatile
 17384  005AC2  D005               	goto	u27660
 17385  005AC4  51AF               	movf	(_ts_system+21)& (0+255),w,b	;volatile
 17386  005AC6  E107               	bnz	l1652
 17387  005AC8  05AE               	decf	(_ts_system+20)& (0+255),w,b	;volatile
 17388  005ACA  B0D8               	btfsc	status,0,c
 17389  005ACC  D004               	goto	l1652
 17390  005ACE                     u27660:
 17391                           
 17392                           ; BSR set to: 1
 17393  005ACE  0E02               	movlw	2
 17394  005AD0  1997               	xorwf	readRFButtons@typeRemote& (0+255),w,b
 17395  005AD2  B4D8               	btfsc	status,2,c
 17396  005AD4  D7F2               	goto	u27650
 17397  005AD6                     l1652:
 17398                           
 17399                           ;inputs_MC50.c: 289:         ts_system.TimeLastCommand=( 500/50);
 17400  005AD6  0E00               	movlw	0
 17401  005AD8  0101               	movlb	1	; () banked
 17402  005ADA  6FAF               	movwf	(_ts_system+21)& (0+255),b	;volatile
 17403  005ADC  0E0A               	movlw	10
 17404  005ADE  6FAE               	movwf	(_ts_system+20)& (0+255),b	;volatile
 17405                           
 17406                           ; BSR set to: 1
 17407                           ;inputs_MC50.c: 291:         rfCMD.currentType=keyType;
 17408  005AE0  C087  F03B         	movff	readRFButtons@keyType,_rfCMD	;volatile
 17409                           
 17410                           ;inputs_MC50.c: 292:         if
 17411  005AE4  503B               	movf	_rfCMD^0,w,c	;volatile
 17412  005AE6  B4D8               	btfsc	status,2,c
 17413  005AE8  D01A               	goto	u27710
 17414                           
 17415                           ; BSR set to: 1
 17416  005AEA  0100               	movlb	0	; () banked
 17417  005AEC  5188               	movf	readRFButtons@key1& (0+255),w,b
 17418  005AEE  183C               	xorwf	(_rfCMD+1)^0,w,c	;volatile
 17419  005AF0  A4D8               	btfss	status,2,c
 17420  005AF2  D015               	goto	u27710
 17421                           
 17422                           ; BSR set to: 0
 17423  005AF4  0101               	movlb	1	; () banked
 17424  005AF6  5181               	movf	readRFButtons@serial& (0+255),w,b
 17425  005AF8  183D               	xorwf	(_rfCMD+2)^0,w,c	;volatile
 17426  005AFA  E111               	bnz	l1662
 17427  005AFC  5182               	movf	(readRFButtons@serial+1)& (0+255),w,b
 17428  005AFE  183E               	xorwf	(_rfCMD+3)^0,w,c	;volatile
 17429  005B00  E10E               	bnz	l1662
 17430  005B02  5183               	movf	(readRFButtons@serial+2)& (0+255),w,b
 17431  005B04  183F               	xorwf	(_rfCMD+4)^0,w,c	;volatile
 17432  005B06  E10B               	bnz	l1662
 17433  005B08  5184               	movf	(readRFButtons@serial+3)& (0+255),w,b
 17434  005B0A  1840               	xorwf	(_rfCMD+5)^0,w,c	;volatile
 17435  005B0C  A4D8               	btfss	status,2,c
 17436  005B0E  D007               	goto	u27710
 17437                           
 17438                           ; BSR set to: 1
 17439  005B10  5185               	movf	readRFButtons@rollingCode& (0+255),w,b
 17440  005B12  1841               	xorwf	(_rfCMD+6)^0,w,c	;volatile
 17441  005B14  E104               	bnz	u27710
 17442  005B16  5186               	movf	(readRFButtons@rollingCode+1)& (0+255),w,b
 17443  005B18  1842               	xorwf	(_rfCMD+7)^0,w,c	;volatile
 17444  005B1A  B4D8               	btfsc	status,2,c
 17445  005B1C  D00E               	goto	l22737
 17446  005B1E                     u27710:
 17447  005B1E                     l1662:
 17448                           
 17449                           ;inputs_MC50.c: 299:         {;inputs_MC50.c: 300:             rfCMD.currentKey=key1;
 17450  005B1E  C088  F03C         	movff	readRFButtons@key1,_rfCMD+1	;volatile
 17451                           
 17452                           ;inputs_MC50.c: 301:             rfCMD.currentSerial=serial;
 17453  005B22  C181  F03D         	movff	readRFButtons@serial,_rfCMD+2	;volatile
 17454  005B26  C182  F03E         	movff	readRFButtons@serial+1,_rfCMD+3	;volatile
 17455  005B2A  C183  F03F         	movff	readRFButtons@serial+2,_rfCMD+4	;volatile
 17456  005B2E  C184  F040         	movff	readRFButtons@serial+3,_rfCMD+5	;volatile
 17457                           
 17458                           ;inputs_MC50.c: 302:             rfCMD.currentPosMem=classic_data.positionMem;
 17459  005B32  C2A1  F043         	movff	_classic_data+15,_rfCMD+8	;volatile
 17460                           
 17461                           ;inputs_MC50.c: 303:             rfCMD.timer=0;
 17462  005B36  0E00               	movlw	0
 17463  005B38  6E44               	movwf	(_rfCMD+9)^0,c	;volatile
 17464  005B3A                     l22737:
 17465                           
 17466                           ;inputs_MC50.c: 305:         rfCMD.currentRolling=rollingCode;
 17467  005B3A  C185  F041         	movff	readRFButtons@rollingCode,_rfCMD+6	;volatile
 17468  005B3E  C186  F042         	movff	readRFButtons@rollingCode+1,_rfCMD+7	;volatile
 17469  005B42                     l22739:
 17470                           
 17471                           ;inputs_MC50.c: 310:     if(rfCMD.processed == 1)
 17472  005B42  0445               	decf	(_rfCMD+10)^0,w,c	;volatile
 17473  005B44  A4D8               	btfss	status,2,c
 17474  005B46  D003               	goto	l22743
 17475                           
 17476                           ;inputs_MC50.c: 311:     {;inputs_MC50.c: 312:        rfCMD.currentType = NoCMD;
 17477  005B48  0E00               	movlw	0
 17478  005B4A  6E3B               	movwf	_rfCMD^0,c	;volatile
 17479                           
 17480                           ;inputs_MC50.c: 313:     }
 17481  005B4C  0012               	return	
 17482  005B4E                     l22743:
 17483  005B4E  503B               	movf	_rfCMD^0,w,c	;volatile
 17484  005B50  B4D8               	btfsc	status,2,c
 17485  005B52  0012               	return	
 17486                           
 17487                           ;inputs_MC50.c: 315:     {;inputs_MC50.c: 317:         if ( rfCMD.timer < 250 )
 17488  005B54  0EFA               	movlw	250
 17489  005B56  6044               	cpfslt	(_rfCMD+9)^0,c	;volatile
 17490  005B58  0012               	return	
 17491                           
 17492                           ;inputs_MC50.c: 318:         {;inputs_MC50.c: 319:             rfCMD.timer++;
 17493  005B5A  2A44               	incf	(_rfCMD+9)^0,f,c	;volatile
 17494  005B5C  0012               	return		;funcret
 17495  005B5E                     __end_of_readRFButtons:
 17496                           	callstack 0
 17497                           
 17498 ;; *************** function _keeloqDecryptPacket *****************
 17499 ;; Defined at:
 17500 ;;		line 299 in file "keeloqDecrypt_MC50.c"
 17501 ;; Parameters:    Size  Location     Type
 17502 ;;  data            2    8[BANK0 ] PTR unsigned char 
 17503 ;;		 -> BufferRF(9), 
 17504 ;;  classic_data    2   10[BANK0 ] PTR struct .
 17505 ;;		 -> classic_data(16), 
 17506 ;; Auto vars:     Size  Location     Type
 17507 ;;  commandType     1   17[BANK0 ] enum E10539
 17508 ;;  hop_error       1   16[BANK0 ] enum E10730
 17509 ;; Return value:  Size  Location     Type
 17510 ;;                  1    wreg      enum E10539
 17511 ;; Registers used:
 17512 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 17513 ;; Tracked objects:
 17514 ;;		On entry : 3F/0
 17515 ;;		On exit  : 3F/0
 17516 ;;		Unchanged: 0/0
 17517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17518 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17519 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17520 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17521 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17522 ;;Total ram usage:       10 bytes
 17523 ;; Hardware stack levels used: 1
 17524 ;; Hardware stack levels required when called: 14
 17525 ;; This function calls:
 17526 ;;		_DecCHK
 17527 ;;		_HopCHK
 17528 ;;		_keeloq_classic_decrypt_packet
 17529 ;;		_memcpy
 17530 ;;		_validateRemoteSerialNumber
 17531 ;;		_verifyProgramingMode
 17532 ;; This function is called by:
 17533 ;;		_readRFButtons
 17534 ;; This function uses a non-reentrant model
 17535 ;;
 17536                           
 17537                           	psect	text60
 17538  004FBE                     __ptext60:
 17539                           	callstack 0
 17540  004FBE                     _keeloqDecryptPacket:
 17541                           	callstack 15
 17542                           
 17543                           ; BSR set to: 0
 17544                           ;keeloqDecrypt_MC50.c: 299: TypeCMD keeloqDecryptPacket (char* data,classic_encoder_t* c
      +                          lassic_data);keeloqDecrypt_MC50.c: 300: {;keeloqDecrypt_MC50.c: 301:     result_code_t h
      +                          op_error;;keeloqDecrypt_MC50.c: 302:     TypeCMD commandType;;keeloqDecrypt_MC50.c: 303:
      +                               memcpy(classic_data, data, 8);
 17545                           
 17546                           ;incstack = 0
 17547  004FBE  C0E2  F010         	movff	keeloqDecryptPacket@classic_data,memcpy@d1
 17548  004FC2  C0E3  F011         	movff	keeloqDecryptPacket@classic_data+1,memcpy@d1+1
 17549  004FC6  C0E0  F012         	movff	keeloqDecryptPacket@data,memcpy@s1
 17550  004FCA  C0E1  F013         	movff	keeloqDecryptPacket@data+1,memcpy@s1+1
 17551  004FCE  0E00               	movlw	0
 17552  004FD0  6E15               	movwf	(memcpy@n+1)^0,c
 17553  004FD2  0E08               	movlw	8
 17554  004FD4  6E14               	movwf	memcpy@n^0,c
 17555  004FD6  EC08  F044         	call	_memcpy	;wreg free
 17556                           
 17557                           ;keeloqDecrypt_MC50.c: 304:     memcpy(&classic_data->sync, &classic_data->raw_data, 4);
 17558  004FDA  0E08               	movlw	8
 17559  004FDC  0100               	movlb	0	; () banked
 17560  004FDE  25E2               	addwf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17561  004FE0  6E10               	movwf	memcpy@d1^0,c
 17562  004FE2  0E00               	movlw	0
 17563  004FE4  21E3               	addwfc	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17564  004FE6  6E11               	movwf	(memcpy@d1+1)^0,c
 17565  004FE8  C0E2  F012         	movff	keeloqDecryptPacket@classic_data,memcpy@s1
 17566  004FEC  C0E3  F013         	movff	keeloqDecryptPacket@classic_data+1,memcpy@s1+1
 17567  004FF0  0E00               	movlw	0
 17568  004FF2  6E15               	movwf	(memcpy@n+1)^0,c
 17569  004FF4  0E04               	movlw	4
 17570  004FF6  6E14               	movwf	memcpy@n^0,c
 17571  004FF8  EC08  F044         	call	_memcpy	;wreg free
 17572                           
 17573                           ;keeloqDecrypt_MC50.c: 305:     classic_data->fcode1 = *((uint8_t *) (&classic_data->ser
      +                          ialnumber) + 3) >> 4;
 17574  004FFC  0100               	movlb	0	; () banked
 17575  004FFE  EE20 F00C          	lfsr	2,12
 17576  005002  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17577  005004  26D9               	addwf	fsr2l,f,c
 17578  005006  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17579  005008  22DA               	addwfc	fsr2h,f,c
 17580  00500A  EE10 F007          	lfsr	1,7
 17581  00500E  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17582  005010  26E1               	addwf	fsr1l,f,c
 17583  005012  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17584  005014  22E2               	addwfc	fsr1h,f,c
 17585  005016  50E7               	movf	indf1,w,c
 17586  005018  6FE4               	movwf	??_keeloqDecryptPacket& (0+255),b
 17587  00501A  39E4               	swapf	??_keeloqDecryptPacket& (0+255),w,b
 17588  00501C  0B0F               	andlw	15
 17589  00501E  6EDF               	movwf	indf2,c
 17590                           
 17591                           ; BSR set to: 0
 17592                           ;keeloqDecrypt_MC50.c: 306:     commandType=verifyProgramingMode(classic_data);
 17593  005020  C0E2  F010         	movff	keeloqDecryptPacket@classic_data,verifyProgramingMode@classic_data
 17594  005024  C0E3  F011         	movff	keeloqDecryptPacket@classic_data+1,verifyProgramingMode@classic_data+1
 17595  005028  EC22  F045         	call	_verifyProgramingMode	;wreg free
 17596  00502C  6FE9               	movwf	keeloqDecryptPacket@commandType& (0+255),b
 17597                           
 17598                           ; BSR set to: 0
 17599                           ;keeloqDecrypt_MC50.c: 308:     if(commandType==NoCMD)
 17600  00502E  51E9               	movf	keeloqDecryptPacket@commandType& (0+255),w,b
 17601  005030  A4D8               	btfss	status,2,c
 17602  005032  D019               	goto	l21223
 17603                           
 17604                           ; BSR set to: 0
 17605                           ;keeloqDecrypt_MC50.c: 309:     {;keeloqDecrypt_MC50.c: 310:         commandType=validat
      +                          eRemoteSerialNumber(classic_data->serialnumber,NO,&classic_data->positionMem);
 17606  005034  EE20 F004          	lfsr	2,4
 17607  005038  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17608  00503A  26D9               	addwf	fsr2l,f,c
 17609  00503C  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17610  00503E  22DA               	addwfc	fsr2h,f,c
 17611  005040  CFDE F02E          	movff	postinc2,validateRemoteSerialNumber@serial
 17612  005044  CFDE F02F          	movff	postinc2,validateRemoteSerialNumber@serial+1
 17613  005048  CFDE F030          	movff	postinc2,validateRemoteSerialNumber@serial+2
 17614  00504C  CFDE F031          	movff	postinc2,validateRemoteSerialNumber@serial+3
 17615  005050  0E00               	movlw	0
 17616  005052  6E32               	movwf	validateRemoteSerialNumber@VerifyOnlySerial^0,c
 17617  005054  0E0F               	movlw	15
 17618  005056  25E2               	addwf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17619  005058  6E33               	movwf	validateRemoteSerialNumber@position^0,c
 17620  00505A  0E00               	movlw	0
 17621  00505C  21E3               	addwfc	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17622  00505E  6E34               	movwf	(validateRemoteSerialNumber@position+1)^0,c
 17623  005060  EC7C  F02A         	call	_validateRemoteSerialNumber	;wreg free
 17624  005064  D004               	goto	L78
 17625  005066                     l21223:
 17626                           
 17627                           ; BSR set to: 0
 17628  005066  51A6               	movf	(_var_sys_NVM+14)& (0+255),w,b	;volatile
 17629  005068  A4D8               	btfss	status,2,c
 17630  00506A  D002               	goto	l21227
 17631                           
 17632                           ; BSR set to: 0
 17633                           ;keeloqDecrypt_MC50.c: 313:     {;keeloqDecrypt_MC50.c: 314:         commandType=NoCMD;
 17634  00506C  0E00               	movlw	0
 17635  00506E                     L78:
 17636  00506E  6FE9               	movwf	keeloqDecryptPacket@commandType& (0+255),b
 17637  005070                     l21227:
 17638                           
 17639                           ; BSR set to: 0
 17640                           ;keeloqDecrypt_MC50.c: 316:     classic_data->serialnumber = classic_data->serialnumber 
      +                          & 0x0FFFFFFF;
 17641  005070  EE20 F004          	lfsr	2,4
 17642  005074  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17643  005076  26D9               	addwf	fsr2l,f,c
 17644  005078  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17645  00507A  22DA               	addwfc	fsr2h,f,c
 17646  00507C  0EFF               	movlw	255
 17647  00507E  14DE               	andwf	postinc2,w,c
 17648  005080  6FE4               	movwf	??_keeloqDecryptPacket& (0+255),b
 17649  005082  0EFF               	movlw	255
 17650  005084  14DE               	andwf	postinc2,w,c
 17651  005086  6FE5               	movwf	(??_keeloqDecryptPacket+1)& (0+255),b
 17652  005088  0EFF               	movlw	255
 17653  00508A  14DE               	andwf	postinc2,w,c
 17654  00508C  6FE6               	movwf	(??_keeloqDecryptPacket+2)& (0+255),b
 17655  00508E  0E0F               	movlw	15
 17656  005090  14DE               	andwf	postinc2,w,c
 17657  005092  6FE7               	movwf	(??_keeloqDecryptPacket+3)& (0+255),b
 17658  005094  EE20 F004          	lfsr	2,4
 17659  005098  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17660  00509A  26D9               	addwf	fsr2l,f,c
 17661  00509C  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17662  00509E  22DA               	addwfc	fsr2h,f,c
 17663  0050A0  C0E4  FFDE         	movff	??_keeloqDecryptPacket,postinc2
 17664  0050A4  C0E5  FFDE         	movff	??_keeloqDecryptPacket+1,postinc2
 17665  0050A8  C0E6  FFDE         	movff	??_keeloqDecryptPacket+2,postinc2
 17666  0050AC  C0E7  FFDE         	movff	??_keeloqDecryptPacket+3,postinc2
 17667                           
 17668                           ; BSR set to: 0
 17669                           ;keeloqDecrypt_MC50.c: 318:     keeloq_classic_decrypt_packet(classic_data);
 17670  0050B0  C0E2  F038         	movff	keeloqDecryptPacket@classic_data,keeloq_classic_decrypt_packet@data
 17671  0050B4  C0E3  F039         	movff	keeloqDecryptPacket@classic_data+1,keeloq_classic_decrypt_packet@data+1
 17672  0050B8  ECDC  F041         	call	_keeloq_classic_decrypt_packet	;wreg free
 17673                           
 17674                           ; BSR set to: 0
 17675                           ;keeloqDecrypt_MC50.c: 320:     if(commandType==NoCMD )
 17676  0050BC  51E9               	movf	keeloqDecryptPacket@commandType& (0+255),w,b
 17677  0050BE  A4D8               	btfss	status,2,c
 17678  0050C0  D01B               	goto	l21245
 17679                           
 17680                           ; BSR set to: 0
 17681                           ;keeloqDecrypt_MC50.c: 321:     {;keeloqDecrypt_MC50.c: 323:         if (DecCHK(classic_
      +                          data) == 0) {
 17682  0050C2  C0E2  F010         	movff	keeloqDecryptPacket@classic_data,DecCHK@data
 17683  0050C6  C0E3  F011         	movff	keeloqDecryptPacket@classic_data+1,DecCHK@data+1
 17684  0050CA  EC3C  F045         	call	_DecCHK	;wreg free
 17685  0050CE  0900               	iorlw	0
 17686  0050D0  A4D8               	btfss	status,2,c
 17687  0050D2  D008               	goto	l21237
 17688                           
 17689                           ; BSR set to: 0
 17690                           ;keeloqDecrypt_MC50.c: 324:             classic_data->type=Keeloq_NoRollingCode;
 17691  0050D4  EE20 F00E          	lfsr	2,14
 17692  0050D8  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17693  0050DA  26D9               	addwf	fsr2l,f,c
 17694  0050DC  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17695  0050DE  22DA               	addwfc	fsr2h,f,c
 17696  0050E0  0E01               	movlw	1
 17697  0050E2  D007               	goto	L79
 17698  0050E4                     l21237:
 17699                           
 17700                           ; BSR set to: 0
 17701                           ;keeloqDecrypt_MC50.c: 328:         {;keeloqDecrypt_MC50.c: 329:             classic_dat
      +                          a->type=Keeloq_RollingCode;
 17702  0050E4  EE20 F00E          	lfsr	2,14
 17703  0050E8  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17704  0050EA  26D9               	addwf	fsr2l,f,c
 17705  0050EC  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17706  0050EE  22DA               	addwfc	fsr2h,f,c
 17707  0050F0  0E00               	movlw	0
 17708  0050F2                     L79:
 17709  0050F2  6EDF               	movwf	indf2,c
 17710  0050F4                     l21239:
 17711                           
 17712                           ; BSR set to: 0
 17713                           ;keeloqDecrypt_MC50.c: 331:         return NoCMD;
 17714  0050F4  0E00               	movlw	0
 17715  0050F6  0012               	return	
 17716  0050F8                     l21245:
 17717                           
 17718                           ; BSR set to: 0
 17719  0050F8  0E06               	movlw	6
 17720  0050FA  19E9               	xorwf	keeloqDecryptPacket@commandType& (0+255),w,b
 17721  0050FC  B4D8               	btfsc	status,2,c
 17722  0050FE  D004               	goto	u24610
 17723                           
 17724                           ; BSR set to: 0
 17725  005100  0E05               	movlw	5
 17726  005102  19E9               	xorwf	keeloqDecryptPacket@commandType& (0+255),w,b
 17727  005104  A4D8               	btfss	status,2,c
 17728  005106  D01B               	goto	l21255
 17729  005108                     u24610:
 17730                           
 17731                           ; BSR set to: 0
 17732                           ;keeloqDecrypt_MC50.c: 334:     {;keeloqDecrypt_MC50.c: 335:         if(validateRemoteSe
      +                          rialNumber(classic_data->serialnumber,YES,&classic_data->positionMem)==NoCMD)
 17733  005108  EE20 F004          	lfsr	2,4
 17734  00510C  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17735  00510E  26D9               	addwf	fsr2l,f,c
 17736  005110  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17737  005112  22DA               	addwfc	fsr2h,f,c
 17738  005114  CFDE F02E          	movff	postinc2,validateRemoteSerialNumber@serial
 17739  005118  CFDE F02F          	movff	postinc2,validateRemoteSerialNumber@serial+1
 17740  00511C  CFDE F030          	movff	postinc2,validateRemoteSerialNumber@serial+2
 17741  005120  CFDE F031          	movff	postinc2,validateRemoteSerialNumber@serial+3
 17742  005124  0E01               	movlw	1
 17743  005126  6E32               	movwf	validateRemoteSerialNumber@VerifyOnlySerial^0,c
 17744  005128  0E0F               	movlw	15
 17745  00512A  25E2               	addwf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17746  00512C  6E33               	movwf	validateRemoteSerialNumber@position^0,c
 17747  00512E  0E00               	movlw	0
 17748  005130  21E3               	addwfc	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17749  005132  6E34               	movwf	(validateRemoteSerialNumber@position+1)^0,c
 17750  005134  EC7C  F02A         	call	_validateRemoteSerialNumber	;wreg free
 17751  005138  0900               	iorlw	0
 17752  00513A  B4D8               	btfsc	status,2,c
 17753  00513C  D7DB               	goto	l21239
 17754  00513E                     l21255:
 17755                           
 17756                           ; BSR set to: 0
 17757                           ;keeloqDecrypt_MC50.c: 344:     if (DecCHK(classic_data) == 0)
 17758  00513E  C0E2  F010         	movff	keeloqDecryptPacket@classic_data,DecCHK@data
 17759  005142  C0E3  F011         	movff	keeloqDecryptPacket@classic_data+1,DecCHK@data+1
 17760  005146  EC3C  F045         	call	_DecCHK	;wreg free
 17761  00514A  0900               	iorlw	0
 17762  00514C  A4D8               	btfss	status,2,c
 17763  00514E  D00D               	goto	l21271
 17764                           
 17765                           ; BSR set to: 0
 17766                           ;keeloqDecrypt_MC50.c: 345:     {;keeloqDecrypt_MC50.c: 346:         if(var_sys_NVM.Only
      +                          RollingCode==YES) {
 17767  005150  05BE               	decf	(_var_sys_NVM+38)& (0+255),w,b	;volatile
 17768  005152  B4D8               	btfsc	status,2,c
 17769  005154  D7CF               	goto	l21239
 17770                           
 17771                           ; BSR set to: 0
 17772                           ;keeloqDecrypt_MC50.c: 352:         {;keeloqDecrypt_MC50.c: 353:             classic_dat
      +                          a->type=Keeloq_NoRollingCode;
 17773  005156  EE20 F00E          	lfsr	2,14
 17774  00515A  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17775  00515C  26D9               	addwf	fsr2l,f,c
 17776  00515E  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17777  005160  22DA               	addwfc	fsr2h,f,c
 17778  005162  0E01               	movlw	1
 17779  005164  6EDF               	movwf	indf2,c
 17780                           
 17781                           ; BSR set to: 0
 17782                           ;keeloqDecrypt_MC50.c: 354:             return commandType;
 17783  005166  51E9               	movf	keeloqDecryptPacket@commandType& (0+255),w,b
 17784  005168  0012               	return	
 17785  00516A                     l21271:
 17786                           
 17787                           ; BSR set to: 0
 17788                           ;keeloqDecrypt_MC50.c: 359:     hop_error = HopCHK(classic_data);
 17789  00516A  C0E2  F024         	movff	keeloqDecryptPacket@classic_data,HopCHK@data
 17790  00516E  C0E3  F025         	movff	keeloqDecryptPacket@classic_data+1,HopCHK@data+1
 17791  005172  EC16  F03C         	call	_HopCHK	;wreg free
 17792  005176  0100               	movlb	0	; () banked
 17793  005178  6FE8               	movwf	keeloqDecryptPacket@hop_error& (0+255),b
 17794                           
 17795                           ; BSR set to: 0
 17796                           ;keeloqDecrypt_MC50.c: 360:     if (hop_error != VALID_PACKET) {
 17797  00517A  05E8               	decf	keeloqDecryptPacket@hop_error& (0+255),w,b
 17798  00517C  A4D8               	btfss	status,2,c
 17799  00517E  D7BA               	goto	l21239
 17800                           
 17801                           ; BSR set to: 0
 17802                           ;keeloqDecrypt_MC50.c: 364:     classic_data->type=Keeloq_RollingCode;
 17803  005180  EE20 F00E          	lfsr	2,14
 17804  005184  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17805  005186  26D9               	addwf	fsr2l,f,c
 17806  005188  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17807  00518A  22DA               	addwfc	fsr2h,f,c
 17808  00518C  0E00               	movlw	0
 17809  00518E  D7EA               	goto	L80
 17810  005190                     __end_of_keeloqDecryptPacket:
 17811                           	callstack 0
 17812                           
 17813 ;; *************** function _verifyProgramingMode *****************
 17814 ;; Defined at:
 17815 ;;		line 401 in file "keeloqDecrypt_MC50.c"
 17816 ;; Parameters:    Size  Location     Type
 17817 ;;  classic_data    2   15[COMRAM] PTR struct .
 17818 ;;		 -> classic_data(16), 
 17819 ;; Auto vars:     Size  Location     Type
 17820 ;;		None
 17821 ;; Return value:  Size  Location     Type
 17822 ;;                  1    wreg      enum E10539
 17823 ;; Registers used:
 17824 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17825 ;; Tracked objects:
 17826 ;;		On entry : 3F/0
 17827 ;;		On exit  : 3F/0
 17828 ;;		Unchanged: 3F/0
 17829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17830 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17831 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17832 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17833 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17834 ;;Total ram usage:        3 bytes
 17835 ;; Hardware stack levels used: 1
 17836 ;; Hardware stack levels required when called: 4
 17837 ;; This function calls:
 17838 ;;		Nothing
 17839 ;; This function is called by:
 17840 ;;		_keeloqDecryptPacket
 17841 ;; This function uses a non-reentrant model
 17842 ;;
 17843                           
 17844                           	psect	text61
 17845  008A44                     __ptext61:
 17846                           	callstack 0
 17847  008A44                     _verifyProgramingMode:
 17848                           	callstack 24
 17849                           
 17850                           ; BSR set to: 0
 17851                           ;keeloqDecrypt_MC50.c: 401: TypeCMD verifyProgramingMode(classic_encoder_t* classic_data
      +                          );keeloqDecrypt_MC50.c: 402: {;keeloqDecrypt_MC50.c: 403:     if (classic_data->fcode1==
      +                          0x0A)
 17852                           
 17853                           ; BSR set to: 0
 17854                           ;incstack = 0
 17855  008A44  EE20 F00C          	lfsr	2,12
 17856  008A48  5010               	movf	verifyProgramingMode@classic_data^0,w,c
 17857  008A4A  26D9               	addwf	fsr2l,f,c
 17858  008A4C  5011               	movf	(verifyProgramingMode@classic_data+1)^0,w,c
 17859  008A4E  22DA               	addwfc	fsr2h,f,c
 17860  008A50  0E0A               	movlw	10
 17861  008A52  18DE               	xorwf	postinc2,w,c
 17862  008A54  A4D8               	btfss	status,2,c
 17863  008A56  D002               	goto	l20231
 17864                           
 17865                           ; BSR set to: 0
 17866                           ;keeloqDecrypt_MC50.c: 404:     {;keeloqDecrypt_MC50.c: 405:         return TypeProgramm
      +                          ingModeFull;
 17867  008A58  0E06               	movlw	6
 17868  008A5A  0012               	return	
 17869  008A5C                     l20231:
 17870                           
 17871                           ; BSR set to: 0
 17872  008A5C  EE20 F00C          	lfsr	2,12
 17873  008A60  5010               	movf	verifyProgramingMode@classic_data^0,w,c
 17874  008A62  26D9               	addwf	fsr2l,f,c
 17875  008A64  5011               	movf	(verifyProgramingMode@classic_data+1)^0,w,c
 17876  008A66  22DA               	addwfc	fsr2h,f,c
 17877  008A68  0E05               	movlw	5
 17878  008A6A  18DE               	xorwf	postinc2,w,c
 17879  008A6C  A4D8               	btfss	status,2,c
 17880  008A6E  D002               	goto	l20239
 17881                           
 17882                           ; BSR set to: 0
 17883                           ;keeloqDecrypt_MC50.c: 408:     {;keeloqDecrypt_MC50.c: 409:         return TypeProgramm
      +                          ingModeWalk;
 17884  008A70  0E05               	movlw	5
 17885  008A72  0012               	return	
 17886  008A74                     l20239:
 17887                           
 17888                           ; BSR set to: 0
 17889                           ;keeloqDecrypt_MC50.c: 412:     {;keeloqDecrypt_MC50.c: 413:         return NoCMD;
 17890  008A74  0E00               	movlw	0
 17891                           
 17892                           ; BSR set to: 0
 17893  008A76  0012               	return		;funcret
 17894  008A78                     __end_of_verifyProgramingMode:
 17895                           	callstack 0
 17896                           
 17897 ;; *************** function _keeloq_classic_decrypt_packet *****************
 17898 ;; Defined at:
 17899 ;;		line 390 in file "keeloqDecrypt_MC50.c"
 17900 ;; Parameters:    Size  Location     Type
 17901 ;;  data            2   55[COMRAM] PTR struct .
 17902 ;;		 -> classic_data(16), 
 17903 ;; Auto vars:     Size  Location     Type
 17904 ;;		None
 17905 ;; Return value:  Size  Location     Type
 17906 ;;                  1    wreg      void 
 17907 ;; Registers used:
 17908 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 17909 ;; Tracked objects:
 17910 ;;		On entry : 3F/0
 17911 ;;		On exit  : 3F/0
 17912 ;;		Unchanged: 0/0
 17913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17914 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17915 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17916 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17917 ;;      Totals:         2       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17918 ;;Total ram usage:        5 bytes
 17919 ;; Hardware stack levels used: 1
 17920 ;; Hardware stack levels required when called: 7
 17921 ;; This function calls:
 17922 ;;		_Decrypt
 17923 ;;		_NormalKeyGen
 17924 ;; This function is called by:
 17925 ;;		_keeloqDecryptPacket
 17926 ;; This function uses a non-reentrant model
 17927 ;;
 17928                           
 17929                           	psect	text62
 17930  0083B8                     __ptext62:
 17931                           	callstack 0
 17932  0083B8                     _keeloq_classic_decrypt_packet:
 17933                           	callstack 21
 17934                           
 17935                           ; BSR set to: 0
 17936                           ;keeloqDecrypt_MC50.c: 393:     NormalKeyGen(&data->serialnumber);
 17937                           
 17938                           ; BSR set to: 0
 17939                           ;incstack = 0
 17940  0083B8  0E04               	movlw	4
 17941  0083BA  2438               	addwf	keeloq_classic_decrypt_packet@data^0,w,c
 17942  0083BC  6E26               	movwf	NormalKeyGen@serial^0,c
 17943  0083BE  0E00               	movlw	0
 17944  0083C0  2039               	addwfc	(keeloq_classic_decrypt_packet@data+1)^0,w,c
 17945  0083C2  6E27               	movwf	(NormalKeyGen@serial+1)^0,c
 17946  0083C4  EC72  F033         	call	_NormalKeyGen	;wreg free
 17947                           
 17948                           ;keeloqDecrypt_MC50.c: 395:     Decrypt((uint8_t*) & data->sync);
 17949  0083C8  0E08               	movlw	8
 17950  0083CA  2438               	addwf	keeloq_classic_decrypt_packet@data^0,w,c
 17951  0083CC  6E1B               	movwf	Decrypt@packet^0,c
 17952  0083CE  0E00               	movlw	0
 17953  0083D0  2039               	addwfc	(keeloq_classic_decrypt_packet@data+1)^0,w,c
 17954  0083D2  6E1C               	movwf	(Decrypt@packet+1)^0,c
 17955  0083D4  ECD9  F036         	call	_Decrypt	;wreg free
 17956                           
 17957                           ;keeloqDecrypt_MC50.c: 398:     data->fcode2 = (data->disc >> 12) & 0x0F;
 17958  0083D8  EE20 F00D          	lfsr	2,13
 17959  0083DC  5038               	movf	keeloq_classic_decrypt_packet@data^0,w,c
 17960  0083DE  26D9               	addwf	fsr2l,f,c
 17961  0083E0  5039               	movf	(keeloq_classic_decrypt_packet@data+1)^0,w,c
 17962  0083E2  22DA               	addwfc	fsr2h,f,c
 17963  0083E4  EE10 F00A          	lfsr	1,10
 17964  0083E8  5038               	movf	keeloq_classic_decrypt_packet@data^0,w,c
 17965  0083EA  26E1               	addwf	fsr1l,f,c
 17966  0083EC  5039               	movf	(keeloq_classic_decrypt_packet@data+1)^0,w,c
 17967  0083EE  22E2               	addwfc	fsr1h,f,c
 17968  0083F0  CFE6 F0D8          	movff	postinc1,??_keeloq_classic_decrypt_packet
 17969  0083F4  CFE5 F0D9          	movff	postdec1,??_keeloq_classic_decrypt_packet+1
 17970  0083F8  0E0C               	movlw	12
 17971  0083FA  0100               	movlb	0	; () banked
 17972  0083FC  6FDA               	movwf	(??_keeloq_classic_decrypt_packet+2)& (0+255),b
 17973  0083FE                     u23315:
 17974  0083FE  90D8               	bcf	status,0,c
 17975  008400  33D9               	rrcf	(??_keeloq_classic_decrypt_packet+1)& (0+255),f,b
 17976  008402  33D8               	rrcf	??_keeloq_classic_decrypt_packet& (0+255),f,b
 17977  008404  2FDA               	decfsz	(??_keeloq_classic_decrypt_packet+2)& (0+255),f,b
 17978  008406  D7FB               	goto	u23315
 17979  008408  51D8               	movf	??_keeloq_classic_decrypt_packet& (0+255),w,b
 17980  00840A  0B0F               	andlw	15
 17981  00840C  6EDF               	movwf	indf2,c
 17982                           
 17983                           ; BSR set to: 0
 17984  00840E  0012               	return		;funcret
 17985  008410                     __end_of_keeloq_classic_decrypt_packet:
 17986                           	callstack 0
 17987                           
 17988 ;; *************** function _NormalKeyGen *****************
 17989 ;; Defined at:
 17990 ;;		line 87 in file "keeloqDecrypt_MC50.c"
 17991 ;; Parameters:    Size  Location     Type
 17992 ;;  serial          2   37[COMRAM] PTR unsigned long 
 17993 ;;		 -> classic_data(16), 
 17994 ;; Auto vars:     Size  Location     Type
 17995 ;;  Buffer          8   47[COMRAM] unsigned char [8]
 17996 ;;  SKEYtemp        4   43[COMRAM] unsigned char [4]
 17997 ;;  HOPtemp         4   39[COMRAM] unsigned char [4]
 17998 ;; Return value:  Size  Location     Type
 17999 ;;                  1    wreg      void 
 18000 ;; Registers used:
 18001 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18002 ;; Tracked objects:
 18003 ;;		On entry : 3F/0
 18004 ;;		On exit  : 0/0
 18005 ;;		Unchanged: 0/0
 18006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18007 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18008 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18010 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18011 ;;Total ram usage:       18 bytes
 18012 ;; Hardware stack levels used: 1
 18013 ;; Hardware stack levels required when called: 6
 18014 ;; This function calls:
 18015 ;;		_Decrypt
 18016 ;;		_LoadManufCode
 18017 ;;		_memcpy
 18018 ;; This function is called by:
 18019 ;;		_keeloq_classic_decrypt_packet
 18020 ;; This function uses a non-reentrant model
 18021 ;;
 18022                           
 18023                           	psect	text63
 18024  0066E4                     __ptext63:
 18025                           	callstack 0
 18026  0066E4                     _NormalKeyGen:
 18027                           	callstack 21
 18028                           
 18029                           ; BSR set to: 0
 18030                           ;keeloqDecrypt_MC50.c: 88:     static uint8_t SEED[4];;keeloqDecrypt_MC50.c: 89:     uin
      +                          t8_t Buffer[8];;keeloqDecrypt_MC50.c: 90:     uint8_t HOPtemp[4];;keeloqDecrypt_MC50.c: 
      +                          91:     uint8_t SKEYtemp[4];;keeloqDecrypt_MC50.c: 93:     memcpy(&Buffer[4], serial, 4)
      +                          ;
 18031                           
 18032                           ; BSR set to: 0
 18033                           ;incstack = 0
 18034  0066E4  0E34               	movlw	low (NormalKeyGen@Buffer+4)
 18035  0066E6  6E10               	movwf	memcpy@d1^0,c
 18036  0066E8  6A11               	clrf	(memcpy@d1+1)^0,c
 18037  0066EA  C026  F012         	movff	NormalKeyGen@serial,memcpy@s1
 18038  0066EE  C027  F013         	movff	NormalKeyGen@serial+1,memcpy@s1+1
 18039  0066F2  0E00               	movlw	0
 18040  0066F4  6E15               	movwf	(memcpy@n+1)^0,c
 18041  0066F6  0E04               	movlw	4
 18042  0066F8  6E14               	movwf	memcpy@n^0,c
 18043  0066FA  EC08  F044         	call	_memcpy	;wreg free
 18044                           
 18045                           ;keeloqDecrypt_MC50.c: 95:     memcpy(HOPtemp, Buffer, 4);
 18046  0066FE  0E28               	movlw	low NormalKeyGen@HOPtemp
 18047  006700  6E10               	movwf	memcpy@d1^0,c
 18048  006702  6A11               	clrf	(memcpy@d1+1)^0,c
 18049  006704  0E30               	movlw	low NormalKeyGen@Buffer
 18050  006706  6E12               	movwf	memcpy@s1^0,c
 18051  006708  6A13               	clrf	(memcpy@s1+1)^0,c
 18052  00670A  0E00               	movlw	0
 18053  00670C  6E15               	movwf	(memcpy@n+1)^0,c
 18054  00670E  0E04               	movlw	4
 18055  006710  6E14               	movwf	memcpy@n^0,c
 18056  006712  EC08  F044         	call	_memcpy	;wreg free
 18057                           
 18058                           ;keeloqDecrypt_MC50.c: 97:     memcpy(SEED, &Buffer[4], 4);
 18059  006716  0ED9               	movlw	low NormalKeyGen@SEED
 18060  006718  6E10               	movwf	memcpy@d1^0,c
 18061  00671A  0E02               	movlw	high NormalKeyGen@SEED
 18062  00671C  6E11               	movwf	(memcpy@d1+1)^0,c
 18063  00671E  0E34               	movlw	low (NormalKeyGen@Buffer+4)
 18064  006720  6E12               	movwf	memcpy@s1^0,c
 18065  006722  6A13               	clrf	(memcpy@s1+1)^0,c
 18066  006724  0E00               	movlw	0
 18067  006726  6E15               	movwf	(memcpy@n+1)^0,c
 18068  006728  0E04               	movlw	4
 18069  00672A  6E14               	movwf	memcpy@n^0,c
 18070  00672C  EC08  F044         	call	_memcpy	;wreg free
 18071                           
 18072                           ;keeloqDecrypt_MC50.c: 98:     SEED[3] &= 0x0f;
 18073  006730  0E0F               	movlw	15
 18074  006732  0102               	movlb	2	; () banked
 18075  006734  17DC               	andwf	(NormalKeyGen@SEED+3)& (0+255),f,b
 18076                           
 18077                           ; BSR set to: 2
 18078                           ;keeloqDecrypt_MC50.c: 101:     memcpy(Buffer, SEED, 4);
 18079  006736  0E30               	movlw	low NormalKeyGen@Buffer
 18080  006738  6E10               	movwf	memcpy@d1^0,c
 18081  00673A  6A11               	clrf	(memcpy@d1+1)^0,c
 18082  00673C  0ED9               	movlw	low NormalKeyGen@SEED
 18083  00673E  6E12               	movwf	memcpy@s1^0,c
 18084  006740  0E02               	movlw	high NormalKeyGen@SEED
 18085  006742  6E13               	movwf	(memcpy@s1+1)^0,c
 18086  006744  0E00               	movlw	0
 18087  006746  6E15               	movwf	(memcpy@n+1)^0,c
 18088  006748  0E04               	movlw	4
 18089  00674A  6E14               	movwf	memcpy@n^0,c
 18090  00674C  EC08  F044         	call	_memcpy	;wreg free
 18091                           
 18092                           ;keeloqDecrypt_MC50.c: 102:     Buffer[3] |= 0x20;
 18093  006750  8A33               	bsf	(NormalKeyGen@Buffer+3)^0,5,c
 18094                           
 18095                           ;keeloqDecrypt_MC50.c: 103:     LoadManufCode();
 18096  006752  EC54  F047         	call	_LoadManufCode	;wreg free
 18097                           
 18098                           ; BSR set to: 2
 18099                           ;keeloqDecrypt_MC50.c: 104:     Decrypt(Buffer);
 18100  006756  0E30               	movlw	low NormalKeyGen@Buffer
 18101  006758  6E1B               	movwf	Decrypt@packet^0,c
 18102  00675A  6A1C               	clrf	(Decrypt@packet+1)^0,c
 18103  00675C  ECD9  F036         	call	_Decrypt	;wreg free
 18104                           
 18105                           ;keeloqDecrypt_MC50.c: 105:     memcpy(SKEYtemp, Buffer, 4);
 18106  006760  0E2C               	movlw	low NormalKeyGen@SKEYtemp
 18107  006762  6E10               	movwf	memcpy@d1^0,c
 18108  006764  6A11               	clrf	(memcpy@d1+1)^0,c
 18109  006766  0E30               	movlw	low NormalKeyGen@Buffer
 18110  006768  6E12               	movwf	memcpy@s1^0,c
 18111  00676A  6A13               	clrf	(memcpy@s1+1)^0,c
 18112  00676C  0E00               	movlw	0
 18113  00676E  6E15               	movwf	(memcpy@n+1)^0,c
 18114  006770  0E04               	movlw	4
 18115  006772  6E14               	movwf	memcpy@n^0,c
 18116  006774  EC08  F044         	call	_memcpy	;wreg free
 18117                           
 18118                           ;keeloqDecrypt_MC50.c: 108:     memcpy(Buffer, SEED, 4);
 18119  006778  0E30               	movlw	low NormalKeyGen@Buffer
 18120  00677A  6E10               	movwf	memcpy@d1^0,c
 18121  00677C  6A11               	clrf	(memcpy@d1+1)^0,c
 18122  00677E  0ED9               	movlw	low NormalKeyGen@SEED
 18123  006780  6E12               	movwf	memcpy@s1^0,c
 18124  006782  0E02               	movlw	high NormalKeyGen@SEED
 18125  006784  6E13               	movwf	(memcpy@s1+1)^0,c
 18126  006786  0E00               	movlw	0
 18127  006788  6E15               	movwf	(memcpy@n+1)^0,c
 18128  00678A  0E04               	movlw	4
 18129  00678C  6E14               	movwf	memcpy@n^0,c
 18130  00678E  EC08  F044         	call	_memcpy	;wreg free
 18131                           
 18132                           ;keeloqDecrypt_MC50.c: 109:     Buffer[3] |= 0x60;
 18133  006792  0E60               	movlw	96
 18134  006794  1233               	iorwf	(NormalKeyGen@Buffer+3)^0,f,c
 18135                           
 18136                           ;keeloqDecrypt_MC50.c: 110:     LoadManufCode();
 18137  006796  EC54  F047         	call	_LoadManufCode	;wreg free
 18138                           
 18139                           ; BSR set to: 2
 18140                           ;keeloqDecrypt_MC50.c: 111:     Decrypt(Buffer);
 18141  00679A  0E30               	movlw	low NormalKeyGen@Buffer
 18142  00679C  6E1B               	movwf	Decrypt@packet^0,c
 18143  00679E  6A1C               	clrf	(Decrypt@packet+1)^0,c
 18144  0067A0  ECD9  F036         	call	_Decrypt	;wreg free
 18145                           
 18146                           ;keeloqDecrypt_MC50.c: 112:     memcpy(&DKEY[4], Buffer, 4);
 18147  0067A4  0ED5               	movlw	low (_DKEY+4)
 18148  0067A6  6E10               	movwf	memcpy@d1^0,c
 18149  0067A8  0E02               	movlw	high (_DKEY+4)
 18150  0067AA  6E11               	movwf	(memcpy@d1+1)^0,c
 18151  0067AC  0E30               	movlw	low NormalKeyGen@Buffer
 18152  0067AE  6E12               	movwf	memcpy@s1^0,c
 18153  0067B0  6A13               	clrf	(memcpy@s1+1)^0,c
 18154  0067B2  0E00               	movlw	0
 18155  0067B4  6E15               	movwf	(memcpy@n+1)^0,c
 18156  0067B6  0E04               	movlw	4
 18157  0067B8  6E14               	movwf	memcpy@n^0,c
 18158  0067BA  EC08  F044         	call	_memcpy	;wreg free
 18159                           
 18160                           ;keeloqDecrypt_MC50.c: 113:     memcpy(DKEY, SKEYtemp, 4);
 18161  0067BE  0ED1               	movlw	low _DKEY
 18162  0067C0  6E10               	movwf	memcpy@d1^0,c
 18163  0067C2  0E02               	movlw	high _DKEY
 18164  0067C4  6E11               	movwf	(memcpy@d1+1)^0,c
 18165  0067C6  0E2C               	movlw	low NormalKeyGen@SKEYtemp
 18166  0067C8  6E12               	movwf	memcpy@s1^0,c
 18167  0067CA  6A13               	clrf	(memcpy@s1+1)^0,c
 18168  0067CC  0E00               	movlw	0
 18169  0067CE  6E15               	movwf	(memcpy@n+1)^0,c
 18170  0067D0  0E04               	movlw	4
 18171  0067D2  6E14               	movwf	memcpy@n^0,c
 18172  0067D4  EC08  F044         	call	_memcpy	;wreg free
 18173                           
 18174                           ;keeloqDecrypt_MC50.c: 116:     memcpy(Buffer, HOPtemp, 4);
 18175  0067D8  0E30               	movlw	low NormalKeyGen@Buffer
 18176  0067DA  6E10               	movwf	memcpy@d1^0,c
 18177  0067DC  6A11               	clrf	(memcpy@d1+1)^0,c
 18178  0067DE  0E28               	movlw	low NormalKeyGen@HOPtemp
 18179  0067E0  6E12               	movwf	memcpy@s1^0,c
 18180  0067E2  6A13               	clrf	(memcpy@s1+1)^0,c
 18181  0067E4  0E00               	movlw	0
 18182  0067E6  6E15               	movwf	(memcpy@n+1)^0,c
 18183  0067E8  0E04               	movlw	4
 18184  0067EA  6E14               	movwf	memcpy@n^0,c
 18185  0067EC  EC08  F044         	call	_memcpy	;wreg free
 18186  0067F0  0012               	return		;funcret
 18187  0067F2                     __end_of_NormalKeyGen:
 18188                           	callstack 0
 18189                           
 18190 ;; *************** function _LoadManufCode *****************
 18191 ;; Defined at:
 18192 ;;		line 63 in file "keeloqDecrypt_MC50.c"
 18193 ;; Parameters:    Size  Location     Type
 18194 ;;		None
 18195 ;; Auto vars:     Size  Location     Type
 18196 ;;		None
 18197 ;; Return value:  Size  Location     Type
 18198 ;;                  1    wreg      void 
 18199 ;; Registers used:
 18200 ;;		wreg, status,2
 18201 ;; Tracked objects:
 18202 ;;		On entry : 0/2
 18203 ;;		On exit  : 3F/2
 18204 ;;		Unchanged: 0/0
 18205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18206 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18209 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18210 ;;Total ram usage:        0 bytes
 18211 ;; Hardware stack levels used: 1
 18212 ;; Hardware stack levels required when called: 4
 18213 ;; This function calls:
 18214 ;;		Nothing
 18215 ;; This function is called by:
 18216 ;;		_NormalKeyGen
 18217 ;; This function uses a non-reentrant model
 18218 ;;
 18219                           
 18220                           	psect	text64
 18221  008EA8                     __ptext64:
 18222                           	callstack 0
 18223  008EA8                     _LoadManufCode:
 18224                           	callstack 22
 18225                           
 18226                           ;keeloqDecrypt_MC50.c: 64:     DKEY[0] = 0xFF;
 18227                           
 18228                           ;incstack = 0
 18229  008EA8  0102               	movlb	2	; () banked
 18230  008EAA  69D1               	setf	_DKEY& (0+255),b
 18231                           
 18232                           ; BSR set to: 2
 18233                           ;keeloqDecrypt_MC50.c: 65:     DKEY[1] = 0xCA;
 18234  008EAC  0ECA               	movlw	202
 18235  008EAE  6FD2               	movwf	(_DKEY+1)& (0+255),b
 18236                           
 18237                           ;keeloqDecrypt_MC50.c: 66:     DKEY[2] = 0x76;
 18238  008EB0  0E76               	movlw	118
 18239  008EB2  6FD3               	movwf	(_DKEY+2)& (0+255),b
 18240                           
 18241                           ;keeloqDecrypt_MC50.c: 67:     DKEY[3] = 0x94;
 18242  008EB4  0E94               	movlw	148
 18243  008EB6  6FD4               	movwf	(_DKEY+3)& (0+255),b
 18244                           
 18245                           ;keeloqDecrypt_MC50.c: 68:     DKEY[4] = 0x22;
 18246  008EB8  0E22               	movlw	34
 18247  008EBA  6FD5               	movwf	(_DKEY+4)& (0+255),b
 18248                           
 18249                           ;keeloqDecrypt_MC50.c: 69:     DKEY[5] = 0x68;
 18250  008EBC  0E68               	movlw	104
 18251  008EBE  6FD6               	movwf	(_DKEY+5)& (0+255),b
 18252                           
 18253                           ;keeloqDecrypt_MC50.c: 70:     DKEY[6] = 0x27;
 18254  008EC0  0E27               	movlw	39
 18255  008EC2  6FD7               	movwf	(_DKEY+6)& (0+255),b
 18256                           
 18257                           ;keeloqDecrypt_MC50.c: 71:     DKEY[7] = 0x57;
 18258  008EC4  0E57               	movlw	87
 18259  008EC6  6FD8               	movwf	(_DKEY+7)& (0+255),b
 18260                           
 18261                           ; BSR set to: 2
 18262  008EC8  0012               	return		;funcret
 18263  008ECA                     __end_of_LoadManufCode:
 18264                           	callstack 0
 18265                           
 18266 ;; *************** function _Decrypt *****************
 18267 ;; Defined at:
 18268 ;;		line 142 in file "keeloqDecrypt_MC50.c"
 18269 ;; Parameters:    Size  Location     Type
 18270 ;;  packet          2   26[COMRAM] PTR unsigned char 
 18271 ;;		 -> SecureKeyGen@HOPtemp(4), NormalKeyGen@Buffer(8), classic_data(16), 
 18272 ;; Auto vars:     Size  Location     Type
 18273 ;;  Buffer          4   33[COMRAM] unsigned char [4]
 18274 ;;  aux             1   32[COMRAM] unsigned char 
 18275 ;;  p               1   31[COMRAM] char 
 18276 ;;  j               1   30[COMRAM] unsigned char 
 18277 ;;  i               1   29[COMRAM] unsigned char 
 18278 ;;  key             1   28[COMRAM] unsigned char 
 18279 ;; Return value:  Size  Location     Type
 18280 ;;                  1    wreg      void 
 18281 ;; Registers used:
 18282 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18283 ;; Tracked objects:
 18284 ;;		On entry : 0/0
 18285 ;;		On exit  : 0/0
 18286 ;;		Unchanged: 0/0
 18287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18288 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18289 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18291 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18292 ;;Total ram usage:       11 bytes
 18293 ;; Hardware stack levels used: 1
 18294 ;; Hardware stack levels required when called: 5
 18295 ;; This function calls:
 18296 ;;		_memcpy
 18297 ;; This function is called by:
 18298 ;;		_NormalKeyGen
 18299 ;;		_keeloq_classic_decrypt_packet
 18300 ;; This function uses a non-reentrant model
 18301 ;;
 18302                           
 18303                           	psect	text65
 18304  006DB2                     __ptext65:
 18305                           	callstack 0
 18306  006DB2                     _Decrypt:
 18307                           	callstack 21
 18308                           
 18309                           ;keeloqDecrypt_MC50.c: 143:     uint_fast8_t i, j;;keeloqDecrypt_MC50.c: 144:     uint8_
      +                          t key, aux;;keeloqDecrypt_MC50.c: 146:     int8_t p;;keeloqDecrypt_MC50.c: 147:     uint
      +                          8_t Buffer[4];;keeloqDecrypt_MC50.c: 149:     memcpy(Buffer, packet, 4);
 18310                           
 18311                           ; BSR set to: 2
 18312                           ;incstack = 0
 18313  006DB2  0E22               	movlw	low Decrypt@Buffer
 18314  006DB4  6E10               	movwf	memcpy@d1^0,c
 18315  006DB6  6A11               	clrf	(memcpy@d1+1)^0,c
 18316  006DB8  C01B  F012         	movff	Decrypt@packet,memcpy@s1
 18317  006DBC  C01C  F013         	movff	Decrypt@packet+1,memcpy@s1+1
 18318  006DC0  0E00               	movlw	0
 18319  006DC2  6E15               	movwf	(memcpy@n+1)^0,c
 18320  006DC4  0E04               	movlw	4
 18321  006DC6  6E14               	movwf	memcpy@n^0,c
 18322  006DC8  EC08  F044         	call	_memcpy	;wreg free
 18323                           
 18324                           ;keeloqDecrypt_MC50.c: 151:     p = 1;
 18325  006DCC  0E01               	movlw	1
 18326  006DCE  6E20               	movwf	Decrypt@p^0,c
 18327                           
 18328                           ;keeloqDecrypt_MC50.c: 153:     for (j = 66; j > 0; j--) {
 18329  006DD0  0E42               	movlw	66
 18330  006DD2  6E1F               	movwf	Decrypt@j^0,c
 18331  006DD4                     l19443:
 18332                           
 18333                           ;keeloqDecrypt_MC50.c: 154:         key = DKEY[p--];
 18334  006DD4  0ED1               	movlw	low _DKEY
 18335  006DD6  2420               	addwf	Decrypt@p^0,w,c
 18336  006DD8  6ED9               	movwf	fsr2l,c
 18337  006DDA  6ADA               	clrf	fsr2h,c
 18338  006DDC  0E02               	movlw	high _DKEY
 18339  006DDE  22DA               	addwfc	fsr2h,f,c
 18340  006DE0  50DF               	movf	indf2,w,c
 18341  006DE2  6E1D               	movwf	Decrypt@key^0,c
 18342  006DE4  0620               	decf	Decrypt@p^0,f,c
 18343                           
 18344                           ;keeloqDecrypt_MC50.c: 155:         if (p < 0)
 18345  006DE6  AE20               	btfss	Decrypt@p^0,7,c
 18346  006DE8  D002               	goto	l19451
 18347                           
 18348                           ;keeloqDecrypt_MC50.c: 156:             p += 8;
 18349  006DEA  0E08               	movlw	8
 18350  006DEC  2620               	addwf	Decrypt@p^0,f,c
 18351  006DEE                     l19451:
 18352                           
 18353                           ;keeloqDecrypt_MC50.c: 157:         for (i = 8; i > 0; i--) {
 18354  006DEE  0E08               	movlw	8
 18355  006DF0  6E1E               	movwf	Decrypt@i^0,c
 18356  006DF2                     l1854:
 18357                           
 18358                           ;keeloqDecrypt_MC50.c: 159:             if ((( (Buffer[3]) & (1<<(6))) != 0)) {
 18359  006DF2  AC25               	btfss	(Decrypt@Buffer+3)^0,6,c
 18360  006DF4  D006               	goto	l1856
 18361                           
 18362                           ;keeloqDecrypt_MC50.c: 160:                 if (!(( (Buffer[3]) & (1<<(1))) != 0))
 18363  006DF6  B225               	btfsc	(Decrypt@Buffer+3)^0,1,c
 18364  006DF8  D002               	goto	l19461
 18365                           
 18366                           ;keeloqDecrypt_MC50.c: 161:                     aux = 0b00111010;
 18367  006DFA  0E3A               	movlw	58
 18368  006DFC  D007               	goto	L81
 18369  006DFE                     l19461:
 18370                           
 18371                           ;keeloqDecrypt_MC50.c: 163:                     aux = 0b01011100;
 18372  006DFE  0E5C               	movlw	92
 18373  006E00  D005               	goto	L81
 18374  006E02                     l1856:
 18375                           
 18376                           ;keeloqDecrypt_MC50.c: 165:                 if (!(( (Buffer[3]) & (1<<(1))) != 0))
 18377  006E02  B225               	btfsc	(Decrypt@Buffer+3)^0,1,c
 18378  006E04  D002               	goto	l19465
 18379                           
 18380                           ;keeloqDecrypt_MC50.c: 166:                     aux = 0b01110100;
 18381  006E06  0E74               	movlw	116
 18382  006E08  D001               	goto	L81
 18383  006E0A                     l19465:
 18384                           
 18385                           ;keeloqDecrypt_MC50.c: 168:                     aux = 0b00101110;
 18386  006E0A  0E2E               	movlw	46
 18387  006E0C                     L81:
 18388  006E0C  6E21               	movwf	Decrypt@aux^0,c
 18389                           
 18390                           ;keeloqDecrypt_MC50.c: 172:             if ((( (Buffer[2]) & (1<<(3))) != 0))
 18391  006E0E  B624               	btfsc	(Decrypt@Buffer+2)^0,3,c
 18392                           
 18393                           ;keeloqDecrypt_MC50.c: 173:                 aux = (aux << 4) | (aux >> 4);
 18394  006E10  3A21               	swapf	Decrypt@aux^0,f,c
 18395                           
 18396                           ;keeloqDecrypt_MC50.c: 174:             if ((( (Buffer[1]) & (1<<(0))) != 0))
 18397  006E12  A023               	btfss	(Decrypt@Buffer+1)^0,0,c
 18398  006E14  D004               	goto	l19473
 18399                           
 18400                           ;keeloqDecrypt_MC50.c: 175:                 aux <<= 2;
 18401  006E16  90D8               	bcf	status,0,c
 18402  006E18  3621               	rlcf	Decrypt@aux^0,f,c
 18403  006E1A  90D8               	bcf	status,0,c
 18404  006E1C  3621               	rlcf	Decrypt@aux^0,f,c
 18405  006E1E                     l19473:
 18406                           
 18407                           ;keeloqDecrypt_MC50.c: 176:             if ((( (Buffer[0]) & (1<<(0))) != 0))
 18408  006E1E  A022               	btfss	Decrypt@Buffer^0,0,c
 18409  006E20  D002               	goto	l1864
 18410                           
 18411                           ;keeloqDecrypt_MC50.c: 177:                 aux <<= 1;
 18412  006E22  90D8               	bcf	status,0,c
 18413  006E24  3621               	rlcf	Decrypt@aux^0,f,c
 18414  006E26                     l1864:
 18415                           
 18416                           ;keeloqDecrypt_MC50.c: 180:             aux ^= Buffer[1] ^ Buffer[3] ^ key;
 18417  006E26  5023               	movf	(Decrypt@Buffer+1)^0,w,c
 18418  006E28  1825               	xorwf	(Decrypt@Buffer+3)^0,w,c
 18419  006E2A  181D               	xorwf	Decrypt@key^0,w,c
 18420  006E2C  1A21               	xorwf	Decrypt@aux^0,f,c
 18421                           
 18422                           ;keeloqDecrypt_MC50.c: 182:             Buffer[3] = (Buffer[3] << 1) | (Buffer[2] >> 7);
 18423  006E2E  90D8               	bcf	status,0,c
 18424  006E30  3424               	rlcf	(Decrypt@Buffer+2)^0,w,c
 18425  006E32  3425               	rlcf	(Decrypt@Buffer+3)^0,w,c
 18426  006E34  6E25               	movwf	(Decrypt@Buffer+3)^0,c
 18427                           
 18428                           ;keeloqDecrypt_MC50.c: 183:             Buffer[2] = (Buffer[2] << 1) | (Buffer[1] >> 7);
 18429  006E36  90D8               	bcf	status,0,c
 18430  006E38  3423               	rlcf	(Decrypt@Buffer+1)^0,w,c
 18431  006E3A  3424               	rlcf	(Decrypt@Buffer+2)^0,w,c
 18432  006E3C  6E24               	movwf	(Decrypt@Buffer+2)^0,c
 18433                           
 18434                           ;keeloqDecrypt_MC50.c: 184:             Buffer[1] = (Buffer[1] << 1) | (Buffer[0] >> 7);
 18435  006E3E  90D8               	bcf	status,0,c
 18436  006E40  3422               	rlcf	Decrypt@Buffer^0,w,c
 18437  006E42  3423               	rlcf	(Decrypt@Buffer+1)^0,w,c
 18438  006E44  6E23               	movwf	(Decrypt@Buffer+1)^0,c
 18439                           
 18440                           ;keeloqDecrypt_MC50.c: 185:             Buffer[0] = (Buffer[0] << 1) | (aux >> 7);
 18441  006E46  90D8               	bcf	status,0,c
 18442  006E48  3421               	rlcf	Decrypt@aux^0,w,c
 18443  006E4A  3422               	rlcf	Decrypt@Buffer^0,w,c
 18444  006E4C  6E22               	movwf	Decrypt@Buffer^0,c
 18445                           
 18446                           ;keeloqDecrypt_MC50.c: 188:             key <<= 1;
 18447  006E4E  90D8               	bcf	status,0,c
 18448  006E50  361D               	rlcf	Decrypt@key^0,f,c
 18449                           
 18450                           ;keeloqDecrypt_MC50.c: 189:         }
 18451  006E52  061E               	decf	Decrypt@i^0,f,c
 18452  006E54  501E               	movf	Decrypt@i^0,w,c
 18453  006E56  A4D8               	btfss	status,2,c
 18454  006E58  D7CC               	goto	l1854
 18455                           
 18456                           ;keeloqDecrypt_MC50.c: 190:     }
 18457  006E5A  061F               	decf	Decrypt@j^0,f,c
 18458  006E5C  501F               	movf	Decrypt@j^0,w,c
 18459  006E5E  A4D8               	btfss	status,2,c
 18460  006E60  D7B9               	goto	l19443
 18461                           
 18462                           ;keeloqDecrypt_MC50.c: 192:     memcpy(packet, Buffer, 4);
 18463  006E62  C01B  F010         	movff	Decrypt@packet,memcpy@d1
 18464  006E66  C01C  F011         	movff	Decrypt@packet+1,memcpy@d1+1
 18465  006E6A  0E22               	movlw	low Decrypt@Buffer
 18466  006E6C  6E12               	movwf	memcpy@s1^0,c
 18467  006E6E  6A13               	clrf	(memcpy@s1+1)^0,c
 18468  006E70  0E00               	movlw	0
 18469  006E72  6E15               	movwf	(memcpy@n+1)^0,c
 18470  006E74  0E04               	movlw	4
 18471  006E76  6E14               	movwf	memcpy@n^0,c
 18472  006E78  EC08  F044         	call	_memcpy	;wreg free
 18473  006E7C  0012               	return		;funcret
 18474  006E7E                     __end_of_Decrypt:
 18475                           	callstack 0
 18476                           
 18477 ;; *************** function _HopCHK *****************
 18478 ;; Defined at:
 18479 ;;		line 236 in file "keeloqDecrypt_MC50.c"
 18480 ;; Parameters:    Size  Location     Type
 18481 ;;  data            2   35[COMRAM] PTR struct .
 18482 ;;		 -> classic_data(16), 
 18483 ;; Auto vars:     Size  Location     Type
 18484 ;;  hopDiff         2   37[COMRAM] short 
 18485 ;; Return value:  Size  Location     Type
 18486 ;;                  1    wreg      enum E10730
 18487 ;; Registers used:
 18488 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18489 ;; Tracked objects:
 18490 ;;		On entry : 3F/0
 18491 ;;		On exit  : 3C/0
 18492 ;;		Unchanged: 0/0
 18493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18494 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18495 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18497 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18498 ;;Total ram usage:        4 bytes
 18499 ;; Hardware stack levels used: 1
 18500 ;; Hardware stack levels required when called: 6
 18501 ;; This function calls:
 18502 ;;		_ReqResync
 18503 ;;		_getHopCode
 18504 ;; This function is called by:
 18505 ;;		_keeloqDecryptPacket
 18506 ;; This function uses a non-reentrant model
 18507 ;;
 18508                           
 18509                           	psect	text66
 18510  00782C                     __ptext66:
 18511                           	callstack 0
 18512  00782C                     _HopCHK:
 18513                           	callstack 22
 18514                           
 18515                           ; BSR set to: 0
 18516                           ;keeloqDecrypt_MC50.c: 237:     int16_t hopDiff;;keeloqDecrypt_MC50.c: 238:     Hop = da
      +                          ta->sync;
 18517                           
 18518                           ;incstack = 0
 18519  00782C  EE20 F008          	lfsr	2,8
 18520  007830  5024               	movf	HopCHK@data^0,w,c
 18521  007832  26D9               	addwf	fsr2l,f,c
 18522  007834  5025               	movf	(HopCHK@data+1)^0,w,c
 18523  007836  22DA               	addwfc	fsr2h,f,c
 18524  007838  CFDE F07C          	movff	postinc2,_Hop
 18525  00783C  CFDD F07D          	movff	postdec2,_Hop+1
 18526                           
 18527                           ; BSR set to: 0
 18528                           ;keeloqDecrypt_MC50.c: 239:     EHop=getHopCode(data);
 18529  007840  C024  F016         	movff	HopCHK@data,getHopCode@data
 18530  007844  C025  F017         	movff	HopCHK@data+1,getHopCode@data+1
 18531  007848  EC96  F030         	call	_getHopCode	;wreg free
 18532  00784C  C016  F28C         	movff	?_getHopCode,_EHop
 18533  007850  C017  F28D         	movff	?_getHopCode+1,_EHop+1
 18534                           
 18535                           ;keeloqDecrypt_MC50.c: 241:     if (F2Chance)
 18536  007854  0101               	movlb	1	; () banked
 18537  007856  5195               	movf	_F2Chance& (0+255),w,b
 18538  007858  B4D8               	btfsc	status,2,c
 18539  00785A  D010               	goto	l20203
 18540                           
 18541                           ; BSR set to: 1
 18542                           ;keeloqDecrypt_MC50.c: 242:         if (NextHop == Hop) {
 18543  00785C  0100               	movlb	0	; () banked
 18544  00785E  517C               	movf	_Hop& (0+255),w,b
 18545  007860  0102               	movlb	2	; () banked
 18546  007862  198E               	xorwf	_NextHop& (0+255),w,b
 18547  007864  E10B               	bnz	l20203
 18548  007866  0100               	movlb	0	; () banked
 18549  007868  517D               	movf	(_Hop+1)& (0+255),w,b
 18550  00786A  0102               	movlb	2	; () banked
 18551  00786C  198F               	xorwf	(_NextHop+1)& (0+255),w,b
 18552  00786E  A4D8               	btfss	status,2,c
 18553  007870  D005               	goto	l20203
 18554                           
 18555                           ; BSR set to: 2
 18556                           ;keeloqDecrypt_MC50.c: 243:             F2Chance = 0;
 18557  007872  0E00               	movlw	0
 18558  007874  0101               	movlb	1	; () banked
 18559  007876  6F95               	movwf	_F2Chance& (0+255),b
 18560  007878                     l20199:
 18561                           
 18562                           ;keeloqDecrypt_MC50.c: 245:             return VALID_PACKET;
 18563  007878  0E01               	movlw	1
 18564  00787A  0012               	return	
 18565  00787C                     l20203:
 18566                           
 18567                           ;keeloqDecrypt_MC50.c: 249:     hopDiff = Hop - EHop;
 18568  00787C  0102               	movlb	2	; () banked
 18569  00787E  518C               	movf	_EHop& (0+255),w,b
 18570  007880  0100               	movlb	0	; () banked
 18571  007882  5D7C               	subwf	_Hop& (0+255),w,b
 18572  007884  6E26               	movwf	HopCHK@hopDiff^0,c
 18573  007886  0102               	movlb	2	; () banked
 18574  007888  518D               	movf	(_EHop+1)& (0+255),w,b
 18575  00788A  0100               	movlb	0	; () banked
 18576  00788C  597D               	subwfb	(_Hop+1)& (0+255),w,b
 18577  00788E  6E27               	movwf	(HopCHK@hopDiff+1)^0,c
 18578                           
 18579                           ;keeloqDecrypt_MC50.c: 251:     if (hopDiff < 0) {
 18580  007890  AE27               	btfss	(HopCHK@hopDiff+1)^0,7,c
 18581  007892  D002               	goto	l20211
 18582                           
 18583                           ; BSR set to: 0
 18584                           ;keeloqDecrypt_MC50.c: 254:         return HOP_CHECK_FAIL;
 18585  007894  0E0A               	movlw	10
 18586  007896  0012               	return	
 18587  007898                     l20211:
 18588                           
 18589                           ; BSR set to: 0
 18590  007898  BE27               	btfsc	(HopCHK@hopDiff+1)^0,7,c
 18591  00789A  D7EE               	goto	l20199
 18592  00789C  5027               	movf	(HopCHK@hopDiff+1)^0,w,c
 18593  00789E  E104               	bnz	u23280
 18594  0078A0  0E11               	movlw	17
 18595  0078A2  5C26               	subwf	HopCHK@hopDiff^0,w,c
 18596  0078A4  A0D8               	btfss	status,0,c
 18597  0078A6  D7E8               	goto	l20199
 18598  0078A8                     u23280:
 18599                           
 18600                           ; BSR set to: 0
 18601                           ;keeloqDecrypt_MC50.c: 257:         return ReqResync(Hop);
 18602  0078A8  C07C  F010         	movff	_Hop,ReqResync@CurrentHop
 18603  0078AC  C07D  F011         	movff	_Hop+1,ReqResync@CurrentHop+1
 18604  0078B0  EC1D  F048         	call	_ReqResync	;wreg free
 18605  0078B4  0012               	return		;funcret
 18606  0078B6                     __end_of_HopCHK:
 18607                           	callstack 0
 18608                           
 18609 ;; *************** function _getHopCode *****************
 18610 ;; Defined at:
 18611 ;;		line 266 in file "keeloqDecrypt_MC50.c"
 18612 ;; Parameters:    Size  Location     Type
 18613 ;;  data            2   21[COMRAM] PTR struct .
 18614 ;;		 -> classic_data(16), 
 18615 ;; Auto vars:     Size  Location     Type
 18616 ;;  tempHop         2   31[COMRAM] unsigned short 
 18617 ;;  i               1   34[COMRAM] unsigned char 
 18618 ;;  tempPos         1   33[COMRAM] char 
 18619 ;; Return value:  Size  Location     Type
 18620 ;;                  2   21[COMRAM] unsigned short 
 18621 ;; Registers used:
 18622 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18623 ;; Tracked objects:
 18624 ;;		On entry : 3F/0
 18625 ;;		On exit  : 3D/0
 18626 ;;		Unchanged: 0/0
 18627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18628 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18629 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18630 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18631 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18632 ;;Total ram usage:       14 bytes
 18633 ;; Hardware stack levels used: 1
 18634 ;; Hardware stack levels required when called: 5
 18635 ;; This function calls:
 18636 ;;		_ReqResync
 18637 ;;		___wmul
 18638 ;; This function is called by:
 18639 ;;		_HopCHK
 18640 ;; This function uses a non-reentrant model
 18641 ;;
 18642                           
 18643                           	psect	text67
 18644  00612C                     __ptext67:
 18645                           	callstack 0
 18646  00612C                     _getHopCode:
 18647                           	callstack 22
 18648                           
 18649                           ; BSR set to: 0
 18650                           ;keeloqDecrypt_MC50.c: 268:     uint16_t tempHop=0;
 18651                           
 18652                           ;incstack = 0
 18653  00612C  0E00               	movlw	0
 18654  00612E  6E21               	movwf	(getHopCode@tempHop+1)^0,c
 18655  006130  0E00               	movlw	0
 18656  006132  6E20               	movwf	getHopCode@tempHop^0,c
 18657                           
 18658                           ; BSR set to: 0
 18659                           ;keeloqDecrypt_MC50.c: 269:     int8_t tempPos=-1;
 18660  006134  6822               	setf	getHopCode@tempPos^0,c
 18661                           
 18662                           ;keeloqDecrypt_MC50.c: 270:     for(i=0;i<25;i++)
 18663  006136  0E00               	movlw	0
 18664  006138  6E23               	movwf	getHopCode@i^0,c
 18665  00613A                     l19691:
 18666                           
 18667                           ; BSR set to: 0
 18668                           ;keeloqDecrypt_MC50.c: 271:     {;keeloqDecrypt_MC50.c: 272:         if(listSyncValues[i
      +                          ].serial==data->serialnumber)
 18669  00613A  EE20 F004          	lfsr	2,4
 18670  00613E  5016               	movf	getHopCode@data^0,w,c
 18671  006140  26D9               	addwf	fsr2l,f,c
 18672  006142  5017               	movf	(getHopCode@data+1)^0,w,c
 18673  006144  22DA               	addwfc	fsr2h,f,c
 18674  006146  5023               	movf	getHopCode@i^0,w,c
 18675  006148  0D06               	mullw	6
 18676  00614A  0E00               	movlw	low _listSyncValues
 18677  00614C  24F3               	addwf	243,w,c
 18678  00614E  6EE1               	movwf	fsr1l,c
 18679  006150  0E03               	movlw	high _listSyncValues
 18680  006152  20F4               	addwfc	prodh,w,c
 18681  006154  6EE2               	movwf	fsr1h,c
 18682  006156  50DE               	movf	postinc2,w,c
 18683  006158  18E6               	xorwf	postinc1,w,c
 18684  00615A  E118               	bnz	l19697
 18685  00615C  50DE               	movf	postinc2,w,c
 18686  00615E  18E6               	xorwf	postinc1,w,c
 18687  006160  E115               	bnz	l19697
 18688  006162  50DE               	movf	postinc2,w,c
 18689  006164  18E6               	xorwf	postinc1,w,c
 18690  006166  E112               	bnz	l19697
 18691  006168  50DE               	movf	postinc2,w,c
 18692  00616A  18E6               	xorwf	postinc1,w,c
 18693  00616C  A4D8               	btfss	status,2,c
 18694  00616E  D00E               	goto	l19697
 18695                           
 18696                           ; BSR set to: 0
 18697                           ;keeloqDecrypt_MC50.c: 273:         {;keeloqDecrypt_MC50.c: 274:             tempHop=lis
      +                          tSyncValues[i].sync;
 18698  006170  5023               	movf	getHopCode@i^0,w,c
 18699  006172  0D06               	mullw	6
 18700  006174  0E04               	movlw	low (_listSyncValues+4)
 18701  006176  24F3               	addwf	243,w,c
 18702  006178  6ED9               	movwf	fsr2l,c
 18703  00617A  0E03               	movlw	high (_listSyncValues+4)
 18704  00617C  20F4               	addwfc	prodh,w,c
 18705  00617E  6EDA               	movwf	fsr2h,c
 18706  006180  CFDE F020          	movff	postinc2,getHopCode@tempHop
 18707  006184  CFDD F021          	movff	postdec2,getHopCode@tempHop+1
 18708                           
 18709                           ; BSR set to: 0
 18710                           ;keeloqDecrypt_MC50.c: 275:             tempPos=i;
 18711  006188  C023  F022         	movff	getHopCode@i,getHopCode@tempPos
 18712  00618C                     l19697:
 18713                           
 18714                           ; BSR set to: 0
 18715                           ;keeloqDecrypt_MC50.c: 278:     }
 18716  00618C  2A23               	incf	getHopCode@i^0,f,c
 18717                           
 18718                           ; BSR set to: 0
 18719  00618E  0E18               	movlw	24
 18720  006190  6423               	cpfsgt	getHopCode@i^0,c
 18721  006192  D7D3               	goto	l19691
 18722                           
 18723                           ; BSR set to: 0
 18724                           ;keeloqDecrypt_MC50.c: 280:     if(tempPos<0)
 18725  006194  AE22               	btfss	getHopCode@tempPos^0,7,c
 18726  006196  D050               	goto	l19717
 18727                           
 18728                           ; BSR set to: 0
 18729                           ;keeloqDecrypt_MC50.c: 281:     {;keeloqDecrypt_MC50.c: 282:         listSyncValues[poin
      +                          tSync].serial=data->serialnumber;
 18730  006198  EE20 F004          	lfsr	2,4
 18731  00619C  5016               	movf	getHopCode@data^0,w,c
 18732  00619E  26D9               	addwf	fsr2l,f,c
 18733  0061A0  5017               	movf	(getHopCode@data+1)^0,w,c
 18734  0061A2  22DA               	addwfc	fsr2h,f,c
 18735  0061A4  C07A  F010         	movff	_pointSync,___wmul@multiplier	;volatile
 18736  0061A8  C07B  F011         	movff	_pointSync+1,___wmul@multiplier+1	;volatile
 18737  0061AC  0E00               	movlw	0
 18738  0061AE  6E13               	movwf	(___wmul@multiplicand+1)^0,c
 18739  0061B0  0E06               	movlw	6
 18740  0061B2  6E12               	movwf	___wmul@multiplicand^0,c
 18741  0061B4  EC09  F047         	call	___wmul	;wreg free
 18742  0061B8  0E00               	movlw	low _listSyncValues
 18743  0061BA  2410               	addwf	?___wmul^0,w,c
 18744  0061BC  6EE1               	movwf	fsr1l,c
 18745  0061BE  0E03               	movlw	high _listSyncValues
 18746  0061C0  2011               	addwfc	(?___wmul+1)^0,w,c
 18747  0061C2  6EE2               	movwf	fsr1h,c
 18748  0061C4  CFDE FFE6          	movff	postinc2,postinc1
 18749  0061C8  CFDE FFE6          	movff	postinc2,postinc1
 18750  0061CC  CFDE FFE6          	movff	postinc2,postinc1
 18751  0061D0  CFDE FFE6          	movff	postinc2,postinc1
 18752                           
 18753                           ;keeloqDecrypt_MC50.c: 283:         listSyncValues[pointSync].sync=data->sync;
 18754  0061D4  EE20 F008          	lfsr	2,8
 18755  0061D8  5016               	movf	getHopCode@data^0,w,c
 18756  0061DA  26D9               	addwf	fsr2l,f,c
 18757  0061DC  5017               	movf	(getHopCode@data+1)^0,w,c
 18758  0061DE  22DA               	addwfc	fsr2h,f,c
 18759  0061E0  C07A  F010         	movff	_pointSync,___wmul@multiplier	;volatile
 18760  0061E4  C07B  F011         	movff	_pointSync+1,___wmul@multiplier+1	;volatile
 18761  0061E8  0E00               	movlw	0
 18762  0061EA  6E13               	movwf	(___wmul@multiplicand+1)^0,c
 18763  0061EC  0E06               	movlw	6
 18764  0061EE  6E12               	movwf	___wmul@multiplicand^0,c
 18765  0061F0  EC09  F047         	call	___wmul	;wreg free
 18766  0061F4  0E04               	movlw	low (_listSyncValues+4)
 18767  0061F6  2410               	addwf	?___wmul^0,w,c
 18768  0061F8  6EE1               	movwf	fsr1l,c
 18769  0061FA  0E03               	movlw	high (_listSyncValues+4)
 18770  0061FC  2011               	addwfc	(?___wmul+1)^0,w,c
 18771  0061FE  6EE2               	movwf	fsr1h,c
 18772  006200  CFDE FFE6          	movff	postinc2,postinc1
 18773  006204  CFDD FFE5          	movff	postdec2,postdec1
 18774                           
 18775                           ;keeloqDecrypt_MC50.c: 284:         pointSync++;
 18776  006208  0100               	movlb	0	; () banked
 18777  00620A  4B7A               	infsnz	_pointSync& (0+255),f,b	;volatile
 18778  00620C  2B7B               	incf	(_pointSync+1)& (0+255),f,b	;volatile
 18779                           
 18780                           ; BSR set to: 0
 18781                           ;keeloqDecrypt_MC50.c: 285:         if(pointSync>=25)
 18782  00620E  517B               	movf	(_pointSync+1)& (0+255),w,b	;volatile
 18783  006210  E104               	bnz	u22600
 18784  006212  0E19               	movlw	25
 18785  006214  5D7A               	subwf	_pointSync& (0+255),w,b	;volatile
 18786  006216  A0D8               	btfss	status,0,c
 18787  006218  D004               	goto	l19711
 18788  00621A                     u22600:
 18789                           
 18790                           ; BSR set to: 0
 18791                           ;keeloqDecrypt_MC50.c: 286:         {;keeloqDecrypt_MC50.c: 287:             pointSync=0
      +                          ;
 18792  00621A  0E00               	movlw	0
 18793  00621C  6F7B               	movwf	(_pointSync+1)& (0+255),b	;volatile
 18794  00621E  0E00               	movlw	0
 18795  006220  6F7A               	movwf	_pointSync& (0+255),b	;volatile
 18796  006222                     l19711:
 18797                           
 18798                           ; BSR set to: 0
 18799                           ;keeloqDecrypt_MC50.c: 289:         return ReqResync(Hop);
 18800  006222  C07C  F010         	movff	_Hop,ReqResync@CurrentHop
 18801  006226  C07D  F011         	movff	_Hop+1,ReqResync@CurrentHop+1
 18802  00622A  EC1D  F048         	call	_ReqResync	;wreg free
 18803  00622E  6E18               	movwf	??_getHopCode^0,c
 18804  006230  5018               	movf	??_getHopCode^0,w,c
 18805  006232  6E16               	movwf	?_getHopCode^0,c
 18806  006234  6A17               	clrf	(?_getHopCode+1)^0,c
 18807  006236  0012               	return	
 18808  006238                     l19717:
 18809                           
 18810                           ; BSR set to: 0
 18811                           ;keeloqDecrypt_MC50.c: 292:     {;keeloqDecrypt_MC50.c: 293:         listSyncValues[temp
      +                          Pos].sync=Hop;
 18812  006238  5022               	movf	getHopCode@tempPos^0,w,c
 18813  00623A  0D06               	mullw	6
 18814  00623C  0E04               	movlw	low (_listSyncValues+4)
 18815  00623E  24F3               	addwf	243,w,c
 18816  006240  6ED9               	movwf	fsr2l,c
 18817  006242  0E03               	movlw	high (_listSyncValues+4)
 18818  006244  20F4               	addwfc	prodh,w,c
 18819  006246  6EDA               	movwf	fsr2h,c
 18820  006248  C07C  FFDE         	movff	_Hop,postinc2
 18821  00624C  C07D  FFDD         	movff	_Hop+1,postdec2
 18822                           
 18823                           ; BSR set to: 0
 18824                           ;keeloqDecrypt_MC50.c: 296:     return tempHop;
 18825  006250  C020  F016         	movff	getHopCode@tempHop,?_getHopCode
 18826  006254  C021  F017         	movff	getHopCode@tempHop+1,?_getHopCode+1
 18827  006258  0012               	return		;funcret
 18828  00625A                     __end_of_getHopCode:
 18829                           	callstack 0
 18830                           
 18831 ;; *************** function _ReqResync *****************
 18832 ;; Defined at:
 18833 ;;		line 224 in file "keeloqDecrypt_MC50.c"
 18834 ;; Parameters:    Size  Location     Type
 18835 ;;  CurrentHop      2   15[COMRAM] unsigned short 
 18836 ;; Auto vars:     Size  Location     Type
 18837 ;;		None
 18838 ;; Return value:  Size  Location     Type
 18839 ;;                  1    wreg      enum E10730
 18840 ;; Registers used:
 18841 ;;		wreg, status,2, status,0
 18842 ;; Tracked objects:
 18843 ;;		On entry : 3F/0
 18844 ;;		On exit  : 3F/2
 18845 ;;		Unchanged: 0/0
 18846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18847 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18848 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18850 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18851 ;;Total ram usage:        2 bytes
 18852 ;; Hardware stack levels used: 1
 18853 ;; Hardware stack levels required when called: 4
 18854 ;; This function calls:
 18855 ;;		Nothing
 18856 ;; This function is called by:
 18857 ;;		_HopCHK
 18858 ;;		_getHopCode
 18859 ;; This function uses a non-reentrant model
 18860 ;;
 18861                           
 18862                           	psect	text68
 18863  00903A                     __ptext68:
 18864                           	callstack 0
 18865  00903A                     _ReqResync:
 18866                           	callstack 22
 18867                           
 18868                           ; BSR set to: 0
 18869                           ;keeloqDecrypt_MC50.c: 225:     F2Chance = 1;
 18870                           
 18871                           ;incstack = 0
 18872  00903A  0E01               	movlw	1
 18873  00903C  0101               	movlb	1	; () banked
 18874  00903E  6F95               	movwf	_F2Chance& (0+255),b
 18875                           
 18876                           ; BSR set to: 1
 18877                           ;keeloqDecrypt_MC50.c: 226:     NextHop = CurrentHop + 1;
 18878  009040  0E01               	movlw	1
 18879  009042  2410               	addwf	ReqResync@CurrentHop^0,w,c
 18880  009044  0102               	movlb	2	; () banked
 18881  009046  6F8E               	movwf	_NextHop& (0+255),b
 18882  009048  0E00               	movlw	0
 18883  00904A  2011               	addwfc	(ReqResync@CurrentHop+1)^0,w,c
 18884  00904C  6F8F               	movwf	(_NextHop+1)& (0+255),b
 18885                           
 18886                           ; BSR set to: 2
 18887                           ;keeloqDecrypt_MC50.c: 228:     return RESYNC_REQ;
 18888  00904E  0E09               	movlw	9
 18889                           
 18890                           ; BSR set to: 2
 18891  009050  0012               	return		;funcret
 18892  009052                     __end_of_ReqResync:
 18893                           	callstack 0
 18894                           
 18895 ;; *************** function _DecCHK *****************
 18896 ;; Defined at:
 18897 ;;		line 206 in file "keeloqDecrypt_MC50.c"
 18898 ;; Parameters:    Size  Location     Type
 18899 ;;  data            2   15[COMRAM] PTR struct .
 18900 ;;		 -> classic_data(16), 
 18901 ;; Auto vars:     Size  Location     Type
 18902 ;;		None
 18903 ;; Return value:  Size  Location     Type
 18904 ;;                  1    wreg      _Bool 
 18905 ;; Registers used:
 18906 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 18907 ;; Tracked objects:
 18908 ;;		On entry : 3F/0
 18909 ;;		On exit  : 3F/0
 18910 ;;		Unchanged: 3F/0
 18911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18912 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18914 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18915 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18916 ;;Total ram usage:        4 bytes
 18917 ;; Hardware stack levels used: 1
 18918 ;; Hardware stack levels required when called: 4
 18919 ;; This function calls:
 18920 ;;		Nothing
 18921 ;; This function is called by:
 18922 ;;		_keeloqDecryptPacket
 18923 ;; This function uses a non-reentrant model
 18924 ;;
 18925                           
 18926                           	psect	text69
 18927  008A78                     __ptext69:
 18928                           	callstack 0
 18929  008A78                     _DecCHK:
 18930                           	callstack 24
 18931                           
 18932                           ; BSR set to: 0
 18933                           ;keeloqDecrypt_MC50.c: 208:     if (((data->fcode1 ^ data->fcode2) & 0x0f) != 0)
 18934                           
 18935                           ; BSR set to: 2
 18936                           ;incstack = 0
 18937  008A78  EE20 F00D          	lfsr	2,13
 18938  008A7C  5010               	movf	DecCHK@data^0,w,c
 18939  008A7E  26D9               	addwf	fsr2l,f,c
 18940  008A80  5011               	movf	(DecCHK@data+1)^0,w,c
 18941  008A82  22DA               	addwfc	fsr2h,f,c
 18942  008A84  50DF               	movf	indf2,w,c
 18943  008A86  6E12               	movwf	??_DecCHK^0,c
 18944  008A88  EE20 F00C          	lfsr	2,12
 18945  008A8C  5010               	movf	DecCHK@data^0,w,c
 18946  008A8E  26D9               	addwf	fsr2l,f,c
 18947  008A90  5011               	movf	(DecCHK@data+1)^0,w,c
 18948  008A92  22DA               	addwfc	fsr2h,f,c
 18949  008A94  50DF               	movf	indf2,w,c
 18950  008A96  1812               	xorwf	??_DecCHK^0,w,c
 18951  008A98  6E13               	movwf	(??_DecCHK+1)^0,c
 18952  008A9A  0E0F               	movlw	15
 18953  008A9C  1613               	andwf	(??_DecCHK+1)^0,f,c
 18954  008A9E  B4D8               	btfsc	status,2,c
 18955  008AA0  D002               	goto	l20185
 18956                           
 18957                           ; BSR set to: 0
 18958                           ;keeloqDecrypt_MC50.c: 209:         return 0;
 18959  008AA2  0E00               	movlw	0
 18960  008AA4  0012               	return	
 18961  008AA6                     l20185:
 18962                           
 18963                           ; BSR set to: 0
 18964                           ;keeloqDecrypt_MC50.c: 211:     return 1;
 18965  008AA6  0E01               	movlw	1
 18966                           
 18967                           ; BSR set to: 0
 18968  008AA8  0012               	return		;funcret
 18969  008AAA                     __end_of_DecCHK:
 18970                           	callstack 0
 18971                           
 18972 ;; *************** function _DecryptPacket_12BIT *****************
 18973 ;; Defined at:
 18974 ;;		line 370 in file "keeloqDecrypt_MC50.c"
 18975 ;; Parameters:    Size  Location     Type
 18976 ;;  data            2    8[BANK0 ] PTR unsigned char 
 18977 ;;		 -> BufferRF(9), 
 18978 ;;  classic_data    2   10[BANK0 ] PTR struct .
 18979 ;;		 -> classic_data(16), 
 18980 ;; Auto vars:     Size  Location     Type
 18981 ;;  commandType     1   12[BANK0 ] enum E10539
 18982 ;; Return value:  Size  Location     Type
 18983 ;;                  1    wreg      enum E10539
 18984 ;; Registers used:
 18985 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18986 ;; Tracked objects:
 18987 ;;		On entry : 3F/0
 18988 ;;		On exit  : 3F/0
 18989 ;;		Unchanged: 0/0
 18990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18991 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18992 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18994 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18995 ;;Total ram usage:        5 bytes
 18996 ;; Hardware stack levels used: 1
 18997 ;; Hardware stack levels required when called: 14
 18998 ;; This function calls:
 18999 ;;		_memcpy
 19000 ;;		_validateRemoteSerialNumber
 19001 ;; This function is called by:
 19002 ;;		_readRFButtons
 19003 ;; This function uses a non-reentrant model
 19004 ;;
 19005                           
 19006                           	psect	text70
 19007  007688                     __ptext70:
 19008                           	callstack 0
 19009  007688                     _DecryptPacket_12BIT:
 19010                           	callstack 15
 19011                           
 19012                           ; BSR set to: 0
 19013                           ;keeloqDecrypt_MC50.c: 370: TypeCMD DecryptPacket_12BIT (char* data,classic_encoder_t* c
      +                          lassic_data);keeloqDecrypt_MC50.c: 371: {;keeloqDecrypt_MC50.c: 372:     TypeCMD command
      +                          Type;;keeloqDecrypt_MC50.c: 373:     memcpy(&classic_data->serialnumber, data, 4);
 19014                           
 19015                           ; BSR set to: 0
 19016                           ;incstack = 0
 19017  007688  0E04               	movlw	4
 19018  00768A  25E2               	addwf	DecryptPacket_12BIT@classic_data& (0+255),w,b
 19019  00768C  6E10               	movwf	memcpy@d1^0,c
 19020  00768E  0E00               	movlw	0
 19021  007690  21E3               	addwfc	(DecryptPacket_12BIT@classic_data+1)& (0+255),w,b
 19022  007692  6E11               	movwf	(memcpy@d1+1)^0,c
 19023  007694  C0E0  F012         	movff	DecryptPacket_12BIT@data,memcpy@s1
 19024  007698  C0E1  F013         	movff	DecryptPacket_12BIT@data+1,memcpy@s1+1
 19025  00769C  0E00               	movlw	0
 19026  00769E  6E15               	movwf	(memcpy@n+1)^0,c
 19027  0076A0  0E04               	movlw	4
 19028  0076A2  6E14               	movwf	memcpy@n^0,c
 19029  0076A4  EC08  F044         	call	_memcpy	;wreg free
 19030                           
 19031                           ;keeloqDecrypt_MC50.c: 374:     commandType=validateRemoteSerialNumber(classic_data->ser
      +                          ialnumber,NO,&classic_data->positionMem);
 19032  0076A8  0100               	movlb	0	; () banked
 19033  0076AA  EE20 F004          	lfsr	2,4
 19034  0076AE  51E2               	movf	DecryptPacket_12BIT@classic_data& (0+255),w,b
 19035  0076B0  26D9               	addwf	fsr2l,f,c
 19036  0076B2  51E3               	movf	(DecryptPacket_12BIT@classic_data+1)& (0+255),w,b
 19037  0076B4  22DA               	addwfc	fsr2h,f,c
 19038  0076B6  CFDE F02E          	movff	postinc2,validateRemoteSerialNumber@serial
 19039  0076BA  CFDE F02F          	movff	postinc2,validateRemoteSerialNumber@serial+1
 19040  0076BE  CFDE F030          	movff	postinc2,validateRemoteSerialNumber@serial+2
 19041  0076C2  CFDE F031          	movff	postinc2,validateRemoteSerialNumber@serial+3
 19042  0076C6  0E00               	movlw	0
 19043  0076C8  6E32               	movwf	validateRemoteSerialNumber@VerifyOnlySerial^0,c
 19044  0076CA  0E0F               	movlw	15
 19045  0076CC  25E2               	addwf	DecryptPacket_12BIT@classic_data& (0+255),w,b
 19046  0076CE  6E33               	movwf	validateRemoteSerialNumber@position^0,c
 19047  0076D0  0E00               	movlw	0
 19048  0076D2  21E3               	addwfc	(DecryptPacket_12BIT@classic_data+1)& (0+255),w,b
 19049  0076D4  6E34               	movwf	(validateRemoteSerialNumber@position+1)^0,c
 19050  0076D6  EC7C  F02A         	call	_validateRemoteSerialNumber	;wreg free
 19051  0076DA  6FE4               	movwf	DecryptPacket_12BIT@commandType& (0+255),b
 19052                           
 19053                           ; BSR set to: 0
 19054                           ;keeloqDecrypt_MC50.c: 375:     classic_data->fcode1 = 0;
 19055  0076DC  EE20 F00C          	lfsr	2,12
 19056  0076E0  51E2               	movf	DecryptPacket_12BIT@classic_data& (0+255),w,b
 19057  0076E2  26D9               	addwf	fsr2l,f,c
 19058  0076E4  51E3               	movf	(DecryptPacket_12BIT@classic_data+1)& (0+255),w,b
 19059  0076E6  22DA               	addwfc	fsr2h,f,c
 19060  0076E8  0E00               	movlw	0
 19061  0076EA  6EDF               	movwf	indf2,c
 19062                           
 19063                           ; BSR set to: 0
 19064                           ;keeloqDecrypt_MC50.c: 376:     classic_data->sync = 0;
 19065  0076EC  EE20 F008          	lfsr	2,8
 19066  0076F0  51E2               	movf	DecryptPacket_12BIT@classic_data& (0+255),w,b
 19067  0076F2  26D9               	addwf	fsr2l,f,c
 19068  0076F4  51E3               	movf	(DecryptPacket_12BIT@classic_data+1)& (0+255),w,b
 19069  0076F6  22DA               	addwfc	fsr2h,f,c
 19070  0076F8  0E00               	movlw	0
 19071  0076FA  6EDE               	movwf	postinc2,c
 19072  0076FC  0E00               	movlw	0
 19073  0076FE  6EDD               	movwf	postdec2,c
 19074                           
 19075                           ; BSR set to: 0
 19076                           ;keeloqDecrypt_MC50.c: 377:     classic_data->type=DIP_12BIT;
 19077  007700  EE20 F00E          	lfsr	2,14
 19078  007704  51E2               	movf	DecryptPacket_12BIT@classic_data& (0+255),w,b
 19079  007706  26D9               	addwf	fsr2l,f,c
 19080  007708  51E3               	movf	(DecryptPacket_12BIT@classic_data+1)& (0+255),w,b
 19081  00770A  22DA               	addwfc	fsr2h,f,c
 19082  00770C  0E02               	movlw	2
 19083  00770E  6EDF               	movwf	indf2,c
 19084                           
 19085                           ; BSR set to: 0
 19086                           ;keeloqDecrypt_MC50.c: 386:     return commandType;
 19087  007710  51E4               	movf	DecryptPacket_12BIT@commandType& (0+255),w,b
 19088                           
 19089                           ; BSR set to: 0
 19090  007712  0012               	return		;funcret
 19091  007714                     __end_of_DecryptPacket_12BIT:
 19092                           	callstack 0
 19093                           
 19094 ;; *************** function _validateRemoteSerialNumber *****************
 19095 ;; Defined at:
 19096 ;;		line 27 in file "controlMemory_MC50.c"
 19097 ;; Parameters:    Size  Location     Type
 19098 ;;  serial          4   45[COMRAM] unsigned long 
 19099 ;;  VerifyOnlySe    1   49[COMRAM] enum E10564
 19100 ;;  position        2   50[COMRAM] PTR unsigned char 
 19101 ;;		 -> controlSelectRemote@pos(1), classic_data(16), 
 19102 ;; Auto vars:     Size  Location     Type
 19103 ;;  mask            4   52[COMRAM] unsigned long 
 19104 ;;  i               1   57[COMRAM] unsigned char 
 19105 ;;  j               1   56[COMRAM] unsigned char 
 19106 ;; Return value:  Size  Location     Type
 19107 ;;                  1    wreg      enum E10539
 19108 ;; Registers used:
 19109 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19110 ;; Tracked objects:
 19111 ;;		On entry : 3F/0
 19112 ;;		On exit  : 3F/0
 19113 ;;		Unchanged: 0/0
 19114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19115 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19116 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19117 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19118 ;;      Totals:        13       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19119 ;;Total ram usage:       21 bytes
 19120 ;; Hardware stack levels used: 1
 19121 ;; Hardware stack levels required when called: 13
 19122 ;; This function calls:
 19123 ;;		_i2c_readDataBlock
 19124 ;; This function is called by:
 19125 ;;		_keeloqDecryptPacket
 19126 ;;		_DecryptPacket_12BIT
 19127 ;;		_controlSelectRemote
 19128 ;; This function uses a non-reentrant model
 19129 ;;
 19130                           
 19131                           	psect	text71
 19132  0054F8                     __ptext71:
 19133                           	callstack 0
 19134  0054F8                     _validateRemoteSerialNumber:
 19135                           	callstack 14
 19136                           
 19137                           ; BSR set to: 0
 19138                           ;controlMemory_MC50.c: 29:     char j=0;
 19139                           
 19140                           ; BSR set to: 0
 19141                           ;incstack = 0
 19142  0054F8  0E00               	movlw	0
 19143  0054FA  6E39               	movwf	validateRemoteSerialNumber@j^0,c
 19144                           
 19145                           ; BSR set to: 0
 19146                           ;controlMemory_MC50.c: 30:     unsigned long mask;;controlMemory_MC50.c: 33:     if(Veri
      +                          fyOnlySerial==YES)
 19147  0054FC  0432               	decf	validateRemoteSerialNumber@VerifyOnlySerial^0,w,c
 19148  0054FE  A4D8               	btfss	status,2,c
 19149  005500  D009               	goto	l1436
 19150                           
 19151                           ; BSR set to: 0
 19152                           ;controlMemory_MC50.c: 34:     {;controlMemory_MC50.c: 35:         mask=0x0FFFFFFF;
 19153  005502  0EFF               	movlw	255
 19154  005504  6E35               	movwf	validateRemoteSerialNumber@mask^0,c
 19155  005506  0EFF               	movlw	255
 19156  005508  6E36               	movwf	(validateRemoteSerialNumber@mask+1)^0,c
 19157  00550A  0EFF               	movlw	255
 19158  00550C  6E37               	movwf	(validateRemoteSerialNumber@mask+2)^0,c
 19159  00550E  0E0F               	movlw	15
 19160  005510  6E38               	movwf	(validateRemoteSerialNumber@mask+3)^0,c
 19161                           
 19162                           ;controlMemory_MC50.c: 36:     }
 19163  005512  D004               	goto	l19545
 19164  005514                     l1436:
 19165                           
 19166                           ; BSR set to: 0
 19167                           ;controlMemory_MC50.c: 38:     {;controlMemory_MC50.c: 39:         mask=0xFFFFFFFF;
 19168  005514  6835               	setf	validateRemoteSerialNumber@mask^0,c
 19169  005516  6836               	setf	(validateRemoteSerialNumber@mask+1)^0,c
 19170  005518  6837               	setf	(validateRemoteSerialNumber@mask+2)^0,c
 19171  00551A  6838               	setf	(validateRemoteSerialNumber@mask+3)^0,c
 19172  00551C                     l19545:
 19173                           
 19174                           ; BSR set to: 0
 19175                           ;controlMemory_MC50.c: 42:     for (i=0;i<var_sys_NVM.positionRemotesFull;i++)
 19176  00551C  0E00               	movlw	0
 19177  00551E  6E3A               	movwf	validateRemoteSerialNumber@i^0,c
 19178  005520  D056               	goto	l19563
 19179  005522                     l19547:
 19180                           
 19181                           ; BSR set to: 0
 19182                           ;controlMemory_MC50.c: 43:     {;controlMemory_MC50.c: 44:         if(i%4==0)
 19183  005522  C03A  F0D8         	movff	validateRemoteSerialNumber@i,??_validateRemoteSerialNumber
 19184  005526  0E03               	movlw	3
 19185  005528  17D8               	andwf	??_validateRemoteSerialNumber& (0+255),f,b
 19186  00552A  A4D8               	btfss	status,2,c
 19187  00552C  D01C               	goto	l19553
 19188                           
 19189                           ; BSR set to: 0
 19190                           ;controlMemory_MC50.c: 45:         {;controlMemory_MC50.c: 46:             j=0;
 19191  00552E  0E00               	movlw	0
 19192  005530  6E39               	movwf	validateRemoteSerialNumber@j^0,c
 19193                           
 19194                           ; BSR set to: 0
 19195                           ;controlMemory_MC50.c: 48:             i2c_readDataBlock(0x50, (uint16_t)(0x0200 + (i * 
      +                          4)),(char*)memoryTEMP, 16);
 19196  005532  503A               	movf	validateRemoteSerialNumber@i^0,w,c
 19197  005534  6FD8               	movwf	??_validateRemoteSerialNumber& (0+255),b
 19198  005536  6BD9               	clrf	(??_validateRemoteSerialNumber+1)& (0+255),b
 19199  005538  90D8               	bcf	status,0,c
 19200  00553A  37D8               	rlcf	??_validateRemoteSerialNumber& (0+255),f,b
 19201  00553C  37D9               	rlcf	(??_validateRemoteSerialNumber+1)& (0+255),f,b
 19202  00553E  90D8               	bcf	status,0,c
 19203  005540  37D8               	rlcf	??_validateRemoteSerialNumber& (0+255),f,b
 19204  005542  37D9               	rlcf	(??_validateRemoteSerialNumber+1)& (0+255),f,b
 19205  005544  0E00               	movlw	0
 19206  005546  25D8               	addwf	??_validateRemoteSerialNumber& (0+255),w,b
 19207  005548  6E22               	movwf	i2c_readDataBlock@reg^0,c
 19208  00554A  0E02               	movlw	2
 19209  00554C  21D9               	addwfc	(??_validateRemoteSerialNumber+1)& (0+255),w,b
 19210  00554E  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 19211  005550  0EA2               	movlw	low _memoryTEMP
 19212  005552  6E24               	movwf	i2c_readDataBlock@data^0,c
 19213  005554  0E02               	movlw	high _memoryTEMP
 19214  005556  6E25               	movwf	(i2c_readDataBlock@data+1)^0,c
 19215  005558  0E00               	movlw	0
 19216  00555A  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 19217  00555C  0E10               	movlw	16
 19218  00555E  6E26               	movwf	i2c_readDataBlock@len^0,c
 19219  005560  0E50               	movlw	80
 19220  005562  ECD5  F03E         	call	_i2c_readDataBlock
 19221  005566                     l19553:
 19222                           
 19223                           ;controlMemory_MC50.c: 50:         if((unsigned long)serial==((unsigned long)memoryTEMP[
      +                          j]&mask))
 19224  005566  5039               	movf	validateRemoteSerialNumber@j^0,w,c
 19225  005568  0D04               	mullw	4
 19226  00556A  0EA2               	movlw	low _memoryTEMP
 19227  00556C  24F3               	addwf	243,w,c
 19228  00556E  6ED9               	movwf	fsr2l,c
 19229  005570  0E02               	movlw	high _memoryTEMP
 19230  005572  20F4               	addwfc	prodh,w,c
 19231  005574  6EDA               	movwf	fsr2h,c
 19232  005576  CFDE F0D8          	movff	postinc2,??_validateRemoteSerialNumber
 19233  00557A  CFDE F0D9          	movff	postinc2,??_validateRemoteSerialNumber+1
 19234  00557E  CFDE F0DA          	movff	postinc2,??_validateRemoteSerialNumber+2
 19235  005582  CFDE F0DB          	movff	postinc2,??_validateRemoteSerialNumber+3
 19236  005586  5035               	movf	validateRemoteSerialNumber@mask^0,w,c
 19237  005588  0100               	movlb	0	; () banked
 19238  00558A  15D8               	andwf	??_validateRemoteSerialNumber& (0+255),w,b
 19239  00558C  6FDC               	movwf	(??_validateRemoteSerialNumber+4)& (0+255),b
 19240  00558E  5036               	movf	(validateRemoteSerialNumber@mask+1)^0,w,c
 19241  005590  15D9               	andwf	(??_validateRemoteSerialNumber+1)& (0+255),w,b
 19242  005592  6FDD               	movwf	(??_validateRemoteSerialNumber+5)& (0+255),b
 19243  005594  5037               	movf	(validateRemoteSerialNumber@mask+2)^0,w,c
 19244  005596  15DA               	andwf	(??_validateRemoteSerialNumber+2)& (0+255),w,b
 19245  005598  6FDE               	movwf	(??_validateRemoteSerialNumber+6)& (0+255),b
 19246  00559A  5038               	movf	(validateRemoteSerialNumber@mask+3)^0,w,c
 19247  00559C  15DB               	andwf	(??_validateRemoteSerialNumber+3)& (0+255),w,b
 19248  00559E  6FDF               	movwf	(??_validateRemoteSerialNumber+7)& (0+255),b
 19249  0055A0  502E               	movf	validateRemoteSerialNumber@serial^0,w,c
 19250  0055A2  19DC               	xorwf	(??_validateRemoteSerialNumber+4)& (0+255),w,b
 19251  0055A4  E112               	bnz	l19561
 19252  0055A6  502F               	movf	(validateRemoteSerialNumber@serial+1)^0,w,c
 19253  0055A8  19DD               	xorwf	(??_validateRemoteSerialNumber+5)& (0+255),w,b
 19254  0055AA  E10F               	bnz	l19561
 19255  0055AC  5030               	movf	(validateRemoteSerialNumber@serial+2)^0,w,c
 19256  0055AE  19DE               	xorwf	(??_validateRemoteSerialNumber+6)& (0+255),w,b
 19257  0055B0  E10C               	bnz	l19561
 19258  0055B2  5031               	movf	(validateRemoteSerialNumber@serial+3)^0,w,c
 19259  0055B4  19DF               	xorwf	(??_validateRemoteSerialNumber+7)& (0+255),w,b
 19260  0055B6  A4D8               	btfss	status,2,c
 19261  0055B8  D008               	goto	l19561
 19262                           
 19263                           ; BSR set to: 0
 19264                           ;controlMemory_MC50.c: 51:         {;controlMemory_MC50.c: 53:             position[0]=i
      +                          ;
 19265  0055BA  C033  FFD9         	movff	validateRemoteSerialNumber@position,fsr2l
 19266  0055BE  C034  FFDA         	movff	validateRemoteSerialNumber@position+1,fsr2h
 19267  0055C2  C03A  FFDF         	movff	validateRemoteSerialNumber@i,indf2
 19268                           
 19269                           ; BSR set to: 0
 19270                           ;controlMemory_MC50.c: 54:             return TypeFull;
 19271  0055C6  0E01               	movlw	1
 19272  0055C8  0012               	return	
 19273  0055CA                     l19561:
 19274                           
 19275                           ; BSR set to: 0
 19276                           ;controlMemory_MC50.c: 57:         j++;
 19277  0055CA  2A39               	incf	validateRemoteSerialNumber@j^0,f,c
 19278                           
 19279                           ;controlMemory_MC50.c: 59:     }
 19280  0055CC  2A3A               	incf	validateRemoteSerialNumber@i^0,f,c
 19281  0055CE                     l19563:
 19282                           
 19283                           ; BSR set to: 0
 19284  0055CE  51B8               	movf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
 19285  0055D0  5C3A               	subwf	validateRemoteSerialNumber@i^0,w,c
 19286  0055D2  A0D8               	btfss	status,0,c
 19287  0055D4  D7A6               	goto	l19547
 19288                           
 19289                           ; BSR set to: 0
 19290                           ;controlMemory_MC50.c: 61:     for (i=0;i<var_sys_NVM.positionRemotesWalk;i++)
 19291  0055D6  0E00               	movlw	0
 19292  0055D8  6E3A               	movwf	validateRemoteSerialNumber@i^0,c
 19293  0055DA  D056               	goto	l19583
 19294  0055DC                     l19567:
 19295                           
 19296                           ; BSR set to: 0
 19297                           ;controlMemory_MC50.c: 62:     {;controlMemory_MC50.c: 63:         if(i%4==0)
 19298  0055DC  C03A  F0D8         	movff	validateRemoteSerialNumber@i,??_validateRemoteSerialNumber
 19299  0055E0  0E03               	movlw	3
 19300  0055E2  17D8               	andwf	??_validateRemoteSerialNumber& (0+255),f,b
 19301  0055E4  A4D8               	btfss	status,2,c
 19302  0055E6  D01C               	goto	l19573
 19303                           
 19304                           ; BSR set to: 0
 19305                           ;controlMemory_MC50.c: 64:         {;controlMemory_MC50.c: 65:             j=0;
 19306  0055E8  0E00               	movlw	0
 19307  0055EA  6E39               	movwf	validateRemoteSerialNumber@j^0,c
 19308                           
 19309                           ; BSR set to: 0
 19310                           ;controlMemory_MC50.c: 66:             i2c_readDataBlock(0x50, (uint16_t)(0x0500 + (i * 
      +                          4)),(char*)memoryTEMP, 16);
 19311  0055EC  503A               	movf	validateRemoteSerialNumber@i^0,w,c
 19312  0055EE  6FD8               	movwf	??_validateRemoteSerialNumber& (0+255),b
 19313  0055F0  6BD9               	clrf	(??_validateRemoteSerialNumber+1)& (0+255),b
 19314  0055F2  90D8               	bcf	status,0,c
 19315  0055F4  37D8               	rlcf	??_validateRemoteSerialNumber& (0+255),f,b
 19316  0055F6  37D9               	rlcf	(??_validateRemoteSerialNumber+1)& (0+255),f,b
 19317  0055F8  90D8               	bcf	status,0,c
 19318  0055FA  37D8               	rlcf	??_validateRemoteSerialNumber& (0+255),f,b
 19319  0055FC  37D9               	rlcf	(??_validateRemoteSerialNumber+1)& (0+255),f,b
 19320  0055FE  0E00               	movlw	0
 19321  005600  25D8               	addwf	??_validateRemoteSerialNumber& (0+255),w,b
 19322  005602  6E22               	movwf	i2c_readDataBlock@reg^0,c
 19323  005604  0E05               	movlw	5
 19324  005606  21D9               	addwfc	(??_validateRemoteSerialNumber+1)& (0+255),w,b
 19325  005608  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 19326  00560A  0EA2               	movlw	low _memoryTEMP
 19327  00560C  6E24               	movwf	i2c_readDataBlock@data^0,c
 19328  00560E  0E02               	movlw	high _memoryTEMP
 19329  005610  6E25               	movwf	(i2c_readDataBlock@data+1)^0,c
 19330  005612  0E00               	movlw	0
 19331  005614  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 19332  005616  0E10               	movlw	16
 19333  005618  6E26               	movwf	i2c_readDataBlock@len^0,c
 19334  00561A  0E50               	movlw	80
 19335  00561C  ECD5  F03E         	call	_i2c_readDataBlock
 19336  005620                     l19573:
 19337                           
 19338                           ;controlMemory_MC50.c: 69:         if((unsigned long)serial==((unsigned long)memoryTEMP[
      +                          j]&mask))
 19339  005620  5039               	movf	validateRemoteSerialNumber@j^0,w,c
 19340  005622  0D04               	mullw	4
 19341  005624  0EA2               	movlw	low _memoryTEMP
 19342  005626  24F3               	addwf	243,w,c
 19343  005628  6ED9               	movwf	fsr2l,c
 19344  00562A  0E02               	movlw	high _memoryTEMP
 19345  00562C  20F4               	addwfc	prodh,w,c
 19346  00562E  6EDA               	movwf	fsr2h,c
 19347  005630  CFDE F0D8          	movff	postinc2,??_validateRemoteSerialNumber
 19348  005634  CFDE F0D9          	movff	postinc2,??_validateRemoteSerialNumber+1
 19349  005638  CFDE F0DA          	movff	postinc2,??_validateRemoteSerialNumber+2
 19350  00563C  CFDE F0DB          	movff	postinc2,??_validateRemoteSerialNumber+3
 19351  005640  5035               	movf	validateRemoteSerialNumber@mask^0,w,c
 19352  005642  0100               	movlb	0	; () banked
 19353  005644  15D8               	andwf	??_validateRemoteSerialNumber& (0+255),w,b
 19354  005646  6FDC               	movwf	(??_validateRemoteSerialNumber+4)& (0+255),b
 19355  005648  5036               	movf	(validateRemoteSerialNumber@mask+1)^0,w,c
 19356  00564A  15D9               	andwf	(??_validateRemoteSerialNumber+1)& (0+255),w,b
 19357  00564C  6FDD               	movwf	(??_validateRemoteSerialNumber+5)& (0+255),b
 19358  00564E  5037               	movf	(validateRemoteSerialNumber@mask+2)^0,w,c
 19359  005650  15DA               	andwf	(??_validateRemoteSerialNumber+2)& (0+255),w,b
 19360  005652  6FDE               	movwf	(??_validateRemoteSerialNumber+6)& (0+255),b
 19361  005654  5038               	movf	(validateRemoteSerialNumber@mask+3)^0,w,c
 19362  005656  15DB               	andwf	(??_validateRemoteSerialNumber+3)& (0+255),w,b
 19363  005658  6FDF               	movwf	(??_validateRemoteSerialNumber+7)& (0+255),b
 19364  00565A  502E               	movf	validateRemoteSerialNumber@serial^0,w,c
 19365  00565C  19DC               	xorwf	(??_validateRemoteSerialNumber+4)& (0+255),w,b
 19366  00565E  E112               	bnz	l19581
 19367  005660  502F               	movf	(validateRemoteSerialNumber@serial+1)^0,w,c
 19368  005662  19DD               	xorwf	(??_validateRemoteSerialNumber+5)& (0+255),w,b
 19369  005664  E10F               	bnz	l19581
 19370  005666  5030               	movf	(validateRemoteSerialNumber@serial+2)^0,w,c
 19371  005668  19DE               	xorwf	(??_validateRemoteSerialNumber+6)& (0+255),w,b
 19372  00566A  E10C               	bnz	l19581
 19373  00566C  5031               	movf	(validateRemoteSerialNumber@serial+3)^0,w,c
 19374  00566E  19DF               	xorwf	(??_validateRemoteSerialNumber+7)& (0+255),w,b
 19375  005670  A4D8               	btfss	status,2,c
 19376  005672  D008               	goto	l19581
 19377                           
 19378                           ; BSR set to: 0
 19379                           ;controlMemory_MC50.c: 70:         {;controlMemory_MC50.c: 72:             position[0]=i
      +                          ;
 19380  005674  C033  FFD9         	movff	validateRemoteSerialNumber@position,fsr2l
 19381  005678  C034  FFDA         	movff	validateRemoteSerialNumber@position+1,fsr2h
 19382  00567C  C03A  FFDF         	movff	validateRemoteSerialNumber@i,indf2
 19383                           
 19384                           ; BSR set to: 0
 19385                           ;controlMemory_MC50.c: 73:             return TypeWalk;
 19386  005680  0E02               	movlw	2
 19387  005682  0012               	return	
 19388  005684                     l19581:
 19389                           
 19390                           ; BSR set to: 0
 19391                           ;controlMemory_MC50.c: 75:         j++;
 19392  005684  2A39               	incf	validateRemoteSerialNumber@j^0,f,c
 19393                           
 19394                           ;controlMemory_MC50.c: 76:     }
 19395  005686  2A3A               	incf	validateRemoteSerialNumber@i^0,f,c
 19396  005688                     l19583:
 19397                           
 19398                           ; BSR set to: 0
 19399  005688  51B9               	movf	(_var_sys_NVM+33)& (0+255),w,b	;volatile
 19400  00568A  5C3A               	subwf	validateRemoteSerialNumber@i^0,w,c
 19401  00568C  A0D8               	btfss	status,0,c
 19402  00568E  D7A6               	goto	l19567
 19403                           
 19404                           ; BSR set to: 0
 19405                           ;controlMemory_MC50.c: 78:     return NoCMD;
 19406  005690  0E00               	movlw	0
 19407                           
 19408                           ; BSR set to: 0
 19409  005692  0012               	return		;funcret
 19410  005694                     __end_of_validateRemoteSerialNumber:
 19411                           	callstack 0
 19412                           
 19413 ;; *************** function _readInputs *****************
 19414 ;; Defined at:
 19415 ;;		line 528 in file "inputs_MC50.c"
 19416 ;; Parameters:    Size  Location     Type
 19417 ;;		None
 19418 ;; Auto vars:     Size  Location     Type
 19419 ;;		None
 19420 ;; Return value:  Size  Location     Type
 19421 ;;                  1    wreg      void 
 19422 ;; Registers used:
 19423 ;;		wreg, status,2, status,0
 19424 ;; Tracked objects:
 19425 ;;		On entry : 3F/1
 19426 ;;		On exit  : 3E/0
 19427 ;;		Unchanged: 0/0
 19428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19429 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19430 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19432 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19433 ;;Total ram usage:        0 bytes
 19434 ;; Hardware stack levels used: 1
 19435 ;; Hardware stack levels required when called: 4
 19436 ;; This function calls:
 19437 ;;		Nothing
 19438 ;; This function is called by:
 19439 ;;		_main
 19440 ;; This function uses a non-reentrant model
 19441 ;;
 19442                           
 19443                           	psect	text72
 19444  0067F2                     __ptext72:
 19445                           	callstack 0
 19446  0067F2                     _readInputs:
 19447                           	callstack 26
 19448                           
 19449                           ; BSR set to: 1
 19450                           ;inputs_MC50.c: 533:     if(var_sys_NVM.Direction_motor == 0){fimdecurso.FimdeCursoClose
      +                          AUX=PORTAbits.RA1;}
 19451                           
 19452                           ; BSR set to: 0
 19453                           ;incstack = 0
 19454  0067F2  0100               	movlb	0	; () banked
 19455  0067F4  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 19456  0067F6  A4D8               	btfss	status,2,c
 19457  0067F8  D006               	goto	l16609
 19458                           
 19459                           ; BSR set to: 0
 19460  0067FA  0E00               	movlw	0
 19461  0067FC  B28D               	btfsc	141,1,c	;volatile
 19462  0067FE  0E01               	movlw	1
 19463  006800  0101               	movlb	1	; () banked
 19464  006802  6F78               	movwf	(_fimdecurso+3)& (0+255),b	;volatile
 19465  006804  D005               	goto	l16611
 19466  006806                     l16609:
 19467                           
 19468                           ; BSR set to: 0
 19469  006806  0E00               	movlw	0
 19470  006808  B48D               	btfsc	141,2,c	;volatile
 19471  00680A  0E01               	movlw	1
 19472  00680C  0101               	movlb	1	; () banked
 19473  00680E  6F78               	movwf	(_fimdecurso+3)& (0+255),b	;volatile
 19474  006810                     l16611:
 19475                           
 19476                           ; BSR set to: 1
 19477                           ;inputs_MC50.c: 541:     if (fimdecurso.FimdeCursoCloseAUX==fimdecurso.FimdeCursoCloseOL
      +                          D)
 19478  006810  5179               	movf	(_fimdecurso+4)& (0+255),w,b	;volatile
 19479  006812  1978               	xorwf	(_fimdecurso+3)& (0+255),w,b	;volatile
 19480  006814  A4D8               	btfss	status,2,c
 19481  006816  D002               	goto	l1726
 19482                           
 19483                           ; BSR set to: 1
 19484                           ;inputs_MC50.c: 542:     {;inputs_MC50.c: 543:            fimdecurso.FimdeCursoCloseTime
      +                          r++;
 19485  006818  2B7A               	incf	(_fimdecurso+5)& (0+255),f,b	;volatile
 19486                           
 19487                           ;inputs_MC50.c: 544:     }
 19488  00681A  D004               	goto	l1727
 19489  00681C                     l1726:
 19490                           
 19491                           ; BSR set to: 1
 19492                           ;inputs_MC50.c: 547:     {;inputs_MC50.c: 548:             fimdecurso.FimdeCursoCloseOLD
      +                           = fimdecurso.FimdeCursoCloseAUX;
 19493  00681C  C178  F179         	movff	_fimdecurso+3,_fimdecurso+4	;volatile
 19494                           
 19495                           ; BSR set to: 1
 19496                           ;inputs_MC50.c: 549:             fimdecurso.FimdeCursoCloseTimer=0;
 19497  006820  0E00               	movlw	0
 19498  006822  6F7A               	movwf	(_fimdecurso+5)& (0+255),b	;volatile
 19499  006824                     l1727:
 19500                           
 19501                           ; BSR set to: 1
 19502                           ;inputs_MC50.c: 553:     if (fimdecurso.FimdeCursoCloseTimer>=( 50/50))
 19503  006824  517A               	movf	(_fimdecurso+5)& (0+255),w,b	;volatile
 19504  006826  A4D8               	btfss	status,2,c
 19505                           
 19506                           ; BSR set to: 1
 19507                           ;inputs_MC50.c: 554:     {;inputs_MC50.c: 555:         var_sys.FimCurso_CloseIsEnabled=f
      +                          imdecurso.FimdeCursoCloseAUX;
 19508  006828  C178  F103         	movff	_fimdecurso+3,_var_sys+3	;volatile
 19509                           
 19510                           ; BSR set to: 1
 19511                           ;inputs_MC50.c: 564:     if(var_sys_NVM.Direction_motor == 0){fimdecurso.FimdeCursoOpenA
      +                          UX=PORTAbits.RA2;}
 19512  00682C  0100               	movlb	0	; () banked
 19513  00682E  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 19514  006830  A4D8               	btfss	status,2,c
 19515  006832  D006               	goto	l16623
 19516                           
 19517                           ; BSR set to: 0
 19518  006834  0E00               	movlw	0
 19519  006836  B48D               	btfsc	141,2,c	;volatile
 19520  006838  0E01               	movlw	1
 19521  00683A  0101               	movlb	1	; () banked
 19522  00683C  6F75               	movwf	_fimdecurso& (0+255),b	;volatile
 19523  00683E  D005               	goto	l16625
 19524  006840                     l16623:
 19525                           
 19526                           ; BSR set to: 0
 19527  006840  0E00               	movlw	0
 19528  006842  B28D               	btfsc	141,1,c	;volatile
 19529  006844  0E01               	movlw	1
 19530  006846  0101               	movlb	1	; () banked
 19531  006848  6F75               	movwf	_fimdecurso& (0+255),b	;volatile
 19532  00684A                     l16625:
 19533                           
 19534                           ; BSR set to: 1
 19535                           ;inputs_MC50.c: 570:     if (fimdecurso.FimdeCursoOpenAUX==fimdecurso.FimdeCursoOpenOLD)
 19536  00684A  5175               	movf	_fimdecurso& (0+255),w,b	;volatile
 19537  00684C  1976               	xorwf	(_fimdecurso+1)& (0+255),w,b	;volatile
 19538  00684E  A4D8               	btfss	status,2,c
 19539  006850  D002               	goto	l1731
 19540                           
 19541                           ; BSR set to: 1
 19542                           ;inputs_MC50.c: 571:     {;inputs_MC50.c: 572:            fimdecurso.FimdeCursoOpenTimer
      +                          ++;
 19543  006852  2B77               	incf	(_fimdecurso+2)& (0+255),f,b	;volatile
 19544                           
 19545                           ;inputs_MC50.c: 573:     }
 19546  006854  D004               	goto	l1732
 19547  006856                     l1731:
 19548                           
 19549                           ; BSR set to: 1
 19550                           ;inputs_MC50.c: 576:     {;inputs_MC50.c: 577:             fimdecurso.FimdeCursoOpenOLD 
      +                          = fimdecurso.FimdeCursoOpenAUX;
 19551  006856  C175  F176         	movff	_fimdecurso,_fimdecurso+1	;volatile
 19552                           
 19553                           ; BSR set to: 1
 19554                           ;inputs_MC50.c: 578:             fimdecurso.FimdeCursoOpenTimer=0;
 19555  00685A  0E00               	movlw	0
 19556  00685C  6F77               	movwf	(_fimdecurso+2)& (0+255),b	;volatile
 19557  00685E                     l1732:
 19558                           
 19559                           ; BSR set to: 1
 19560                           ;inputs_MC50.c: 582:     if (fimdecurso.FimdeCursoOpenTimer>=( 50/50))
 19561  00685E  5177               	movf	(_fimdecurso+2)& (0+255),w,b	;volatile
 19562  006860  A4D8               	btfss	status,2,c
 19563                           
 19564                           ; BSR set to: 1
 19565                           ;inputs_MC50.c: 583:     {;inputs_MC50.c: 584:         var_sys.FimCurso_OpenIsEnabled=fi
      +                          mdecurso.FimdeCursoOpenAUX;
 19566  006862  C175  F104         	movff	_fimdecurso,_var_sys+4	;volatile
 19567                           
 19568                           ; BSR set to: 1
 19569                           ;inputs_MC50.c: 589:     security.PhotoCellAUX=PORTAbits.RA4;
 19570  006866  0E00               	movlw	0
 19571  006868  B88D               	btfsc	141,4,c	;volatile
 19572  00686A  0E01               	movlw	1
 19573  00686C  6F6A               	movwf	_security& (0+255),b	;volatile
 19574                           
 19575                           ; BSR set to: 1
 19576                           ;inputs_MC50.c: 594:     if (security.PhotoCellAUX==security.PhotoCellOLD)
 19577  00686E  516A               	movf	_security& (0+255),w,b	;volatile
 19578  006870  196B               	xorwf	(_security+1)& (0+255),w,b	;volatile
 19579  006872  A4D8               	btfss	status,2,c
 19580  006874  D002               	goto	l1734
 19581                           
 19582                           ; BSR set to: 1
 19583                           ;inputs_MC50.c: 595:     {;inputs_MC50.c: 596:            security.PhotoCellTimer++;
 19584  006876  2B6C               	incf	(_security+2)& (0+255),f,b	;volatile
 19585                           
 19586                           ;inputs_MC50.c: 597:     }
 19587  006878  D004               	goto	l1735
 19588  00687A                     l1734:
 19589                           
 19590                           ; BSR set to: 1
 19591                           ;inputs_MC50.c: 600:     {;inputs_MC50.c: 601:             security.PhotoCellOLD = secur
      +                          ity.PhotoCellAUX;
 19592  00687A  C16A  F16B         	movff	_security,_security+1	;volatile
 19593                           
 19594                           ; BSR set to: 1
 19595                           ;inputs_MC50.c: 602:             security.PhotoCellTimer=0;
 19596  00687E  0E00               	movlw	0
 19597  006880  6F6C               	movwf	(_security+2)& (0+255),b	;volatile
 19598  006882                     l1735:
 19599                           
 19600                           ; BSR set to: 1
 19601                           ;inputs_MC50.c: 606:     if (security.PhotoCellTimer>=( 50/50))
 19602  006882  516C               	movf	(_security+2)& (0+255),w,b	;volatile
 19603  006884  A4D8               	btfss	status,2,c
 19604                           
 19605                           ; BSR set to: 1
 19606                           ;inputs_MC50.c: 607:     {;inputs_MC50.c: 608:         var_sys.photoCellIsObstructed=sec
      +                          urity.PhotoCellAUX;
 19607  006886  C16A  F101         	movff	_security,_var_sys+1	;volatile
 19608                           
 19609                           ; BSR set to: 1
 19610                           ;inputs_MC50.c: 612:     security.SecurityBarAUX=PORTAbits.RA5;
 19611  00688A  0E00               	movlw	0
 19612  00688C  BA8D               	btfsc	141,5,c	;volatile
 19613  00688E  0E01               	movlw	1
 19614  006890  6F6D               	movwf	(_security+3)& (0+255),b	;volatile
 19615                           
 19616                           ; BSR set to: 1
 19617                           ;inputs_MC50.c: 616:     if (security.SecurityBarAUX==security.SecurityBarOLD)
 19618  006892  516E               	movf	(_security+4)& (0+255),w,b	;volatile
 19619  006894  196D               	xorwf	(_security+3)& (0+255),w,b	;volatile
 19620  006896  A4D8               	btfss	status,2,c
 19621  006898  D002               	goto	l1737
 19622                           
 19623                           ; BSR set to: 1
 19624                           ;inputs_MC50.c: 617:     {;inputs_MC50.c: 618:            security.SecurityBarTimer++;
 19625  00689A  2B6F               	incf	(_security+5)& (0+255),f,b	;volatile
 19626                           
 19627                           ;inputs_MC50.c: 619:     }
 19628  00689C  D004               	goto	l1738
 19629  00689E                     l1737:
 19630                           
 19631                           ; BSR set to: 1
 19632                           ;inputs_MC50.c: 622:     {;inputs_MC50.c: 623:             security.SecurityBarOLD = sec
      +                          urity.SecurityBarAUX;
 19633  00689E  C16D  F16E         	movff	_security+3,_security+4	;volatile
 19634                           
 19635                           ; BSR set to: 1
 19636                           ;inputs_MC50.c: 624:             security.SecurityBarTimer=0;
 19637  0068A2  0E00               	movlw	0
 19638  0068A4  6F6F               	movwf	(_security+5)& (0+255),b	;volatile
 19639  0068A6                     l1738:
 19640                           
 19641                           ; BSR set to: 1
 19642                           ;inputs_MC50.c: 628:     if (security.SecurityBarTimer>=( 50/50))
 19643  0068A6  516F               	movf	(_security+5)& (0+255),w,b	;volatile
 19644  0068A8  A4D8               	btfss	status,2,c
 19645                           
 19646                           ; BSR set to: 1
 19647                           ;inputs_MC50.c: 629:     {;inputs_MC50.c: 630:         security.SecurityBarSTATE=securit
      +                          y.SecurityBarAUX;
 19648  0068AA  C16D  F170         	movff	_security+3,_security+6	;volatile
 19649                           
 19650                           ; BSR set to: 1
 19651                           ;inputs_MC50.c: 633:     security.SecurityBar8K2AUX=PORTAbits.RA6;
 19652  0068AE  0E00               	movlw	0
 19653  0068B0  BC8D               	btfsc	141,6,c	;volatile
 19654  0068B2  0E01               	movlw	1
 19655  0068B4  6F71               	movwf	(_security+7)& (0+255),b	;volatile
 19656                           
 19657                           ; BSR set to: 1
 19658                           ;inputs_MC50.c: 637:     if (security.SecurityBar8K2AUX==security.SecurityBar8K2OLD)
 19659  0068B6  5172               	movf	(_security+8)& (0+255),w,b	;volatile
 19660  0068B8  1971               	xorwf	(_security+7)& (0+255),w,b	;volatile
 19661  0068BA  A4D8               	btfss	status,2,c
 19662  0068BC  D002               	goto	l1740
 19663                           
 19664                           ; BSR set to: 1
 19665                           ;inputs_MC50.c: 638:     {;inputs_MC50.c: 639:            security.SecurityBar8K2Timer++
      +                          ;
 19666  0068BE  2B73               	incf	(_security+9)& (0+255),f,b	;volatile
 19667                           
 19668                           ;inputs_MC50.c: 640:     }
 19669  0068C0  D004               	goto	l1741
 19670  0068C2                     l1740:
 19671                           
 19672                           ; BSR set to: 1
 19673                           ;inputs_MC50.c: 643:     {;inputs_MC50.c: 644:             security.SecurityBar8K2OLD = 
      +                          security.SecurityBar8K2AUX;
 19674  0068C2  C171  F172         	movff	_security+7,_security+8	;volatile
 19675                           
 19676                           ; BSR set to: 1
 19677                           ;inputs_MC50.c: 645:             security.SecurityBar8K2Timer=0;
 19678  0068C6  0E00               	movlw	0
 19679  0068C8  6F73               	movwf	(_security+9)& (0+255),b	;volatile
 19680  0068CA                     l1741:
 19681                           
 19682                           ; BSR set to: 1
 19683                           ;inputs_MC50.c: 649:     if (security.SecurityBar8K2Timer>=( 50/50))
 19684  0068CA  5173               	movf	(_security+9)& (0+255),w,b	;volatile
 19685  0068CC  A4D8               	btfss	status,2,c
 19686                           
 19687                           ; BSR set to: 1
 19688                           ;inputs_MC50.c: 650:     {;inputs_MC50.c: 651:         security.SecurityBar8K2STATE=secu
      +                          rity.SecurityBar8K2AUX;
 19689  0068CE  C171  F174         	movff	_security+7,_security+10	;volatile
 19690                           
 19691                           ; BSR set to: 1
 19692                           ;inputs_MC50.c: 655:     if (var_sys_NVM.securityBandType == 0)
 19693  0068D2  0100               	movlb	0	; () banked
 19694  0068D4  51A2               	movf	(_var_sys_NVM+10)& (0+255),w,b	;volatile
 19695  0068D6  A4D8               	btfss	status,2,c
 19696  0068D8  D00D               	goto	l1743
 19697                           
 19698                           ; BSR set to: 0
 19699                           ;inputs_MC50.c: 656:     {;inputs_MC50.c: 657:         if(security.SecurityBarSTATE==0 &
      +                          & security.SecurityBar8K2STATE==1)
 19700  0068DA  0101               	movlb	1	; () banked
 19701  0068DC  5170               	movf	(_security+6)& (0+255),w,b	;volatile
 19702  0068DE  A4D8               	btfss	status,2,c
 19703  0068E0  D006               	goto	l16671
 19704                           
 19705                           ; BSR set to: 1
 19706  0068E2  0574               	decf	(_security+10)& (0+255),w,b	;volatile
 19707  0068E4  A4D8               	btfss	status,2,c
 19708  0068E6  D003               	goto	l16671
 19709                           
 19710                           ; BSR set to: 1
 19711                           ;inputs_MC50.c: 658:         {;inputs_MC50.c: 659:             var_sys.SecurityBarIsObst
      +                          ructed = NO;
 19712  0068E8  0E00               	movlw	0
 19713  0068EA  6F02               	movwf	(_var_sys+2)& (0+255),b	;volatile
 19714                           
 19715                           ;inputs_MC50.c: 660:         }
 19716  0068EC  0012               	return	
 19717  0068EE                     l16671:
 19718                           
 19719                           ; BSR set to: 1
 19720                           ;inputs_MC50.c: 662:         {;inputs_MC50.c: 663:             var_sys.SecurityBarIsObst
      +                          ructed = YES;
 19721  0068EE  0E01               	movlw	1
 19722  0068F0  6F02               	movwf	(_var_sys+2)& (0+255),b	;volatile
 19723  0068F2  0012               	return	
 19724  0068F4                     l1743:
 19725                           
 19726                           ; BSR set to: 0
 19727                           ;inputs_MC50.c: 667:     {;inputs_MC50.c: 668:         var_sys.SecurityBarIsObstructed =
      +                           security.SecurityBarSTATE;
 19728  0068F4  C170  F102         	movff	_security+6,_var_sys+2	;volatile
 19729  0068F8  0012               	return		;funcret
 19730  0068FA                     __end_of_readInputs:
 19731                           	callstack 0
 19732                           
 19733 ;; *************** function _loadNVM_VarSystem *****************
 19734 ;; Defined at:
 19735 ;;		line 139 in file "controlMemory_MC50.c"
 19736 ;; Parameters:    Size  Location     Type
 19737 ;;		None
 19738 ;; Auto vars:     Size  Location     Type
 19739 ;;		None
 19740 ;; Return value:  Size  Location     Type
 19741 ;;                  1    wreg      void 
 19742 ;; Registers used:
 19743 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19744 ;; Tracked objects:
 19745 ;;		On entry : 3F/0
 19746 ;;		On exit  : 0/0
 19747 ;;		Unchanged: 0/0
 19748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19749 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19750 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19752 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19753 ;;Total ram usage:        0 bytes
 19754 ;; Hardware stack levels used: 1
 19755 ;; Hardware stack levels required when called: 15
 19756 ;; This function calls:
 19757 ;;		_I2C1_Read1ByteRegister
 19758 ;;		_ResetDefaultMemory
 19759 ;;		_SaveNVM_VarSystem
 19760 ;;		_checkNVM_VarSystem
 19761 ;;		_i2c_readDataBlock
 19762 ;; This function is called by:
 19763 ;;		_main
 19764 ;; This function uses a non-reentrant model
 19765 ;;
 19766                           
 19767                           	psect	text73
 19768  00625A                     __ptext73:
 19769                           	callstack 0
 19770  00625A                     _loadNVM_VarSystem:
 19771                           	callstack 15
 19772                           
 19773                           ; BSR set to: 0
 19774                           ;controlMemory_MC50.c: 141:     if((I2C1_Read1ByteRegister(0x50, 0) == 0xFF) && (I2C1_Re
      +                          ad1ByteRegister(0x50, 16) == 0xFF))
 19775                           
 19776                           ;incstack = 0
 19777  00625A  0E00               	movlw	0
 19778  00625C  6E22               	movwf	I2C1_Read1ByteRegister@reg^0,c
 19779  00625E  0E50               	movlw	80
 19780  006260  EC81  F041         	call	_I2C1_Read1ByteRegister
 19781  006264  0AFF               	xorlw	255
 19782  006266  A4D8               	btfss	status,2,c
 19783  006268  D04C               	goto	l22657
 19784  00626A  0E10               	movlw	16
 19785  00626C  6E22               	movwf	I2C1_Read1ByteRegister@reg^0,c
 19786  00626E  0E50               	movlw	80
 19787  006270  EC81  F041         	call	_I2C1_Read1ByteRegister
 19788  006274  0AFF               	xorlw	255
 19789  006276  A4D8               	btfss	status,2,c
 19790  006278  D044               	goto	l22657
 19791                           
 19792                           ;controlMemory_MC50.c: 142:     {;controlMemory_MC50.c: 143:         ResetDefaultMemory(
      +                          SC);
 19793  00627A  0E00               	movlw	0
 19794  00627C  ECAF  F02D         	call	_ResetDefaultMemory
 19795                           
 19796                           ;controlMemory_MC50.c: 144:         var_sys_NVM.learningTimeToClose = 0;
 19797  006280  0E00               	movlw	0
 19798  006282  0100               	movlb	0	; () banked
 19799  006284  6FD0               	movwf	(_var_sys_NVM+56)& (0+255),b	;volatile
 19800  006286  0E00               	movlw	0
 19801  006288  6FD1               	movwf	(_var_sys_NVM+57)& (0+255),b	;volatile
 19802  00628A  0E00               	movlw	0
 19803  00628C  6FD2               	movwf	(_var_sys_NVM+58)& (0+255),b	;volatile
 19804  00628E  0E00               	movlw	0
 19805  006290  6FD3               	movwf	(_var_sys_NVM+59)& (0+255),b	;volatile
 19806                           
 19807                           ; BSR set to: 0
 19808                           ;controlMemory_MC50.c: 145:         var_sys_NVM.learningTimeToOpen = 0;
 19809  006292  0E00               	movlw	0
 19810  006294  6FCC               	movwf	(_var_sys_NVM+52)& (0+255),b	;volatile
 19811  006296  0E00               	movlw	0
 19812  006298  6FCD               	movwf	(_var_sys_NVM+53)& (0+255),b	;volatile
 19813  00629A  0E00               	movlw	0
 19814  00629C  6FCE               	movwf	(_var_sys_NVM+54)& (0+255),b	;volatile
 19815  00629E  0E00               	movlw	0
 19816  0062A0  6FCF               	movwf	(_var_sys_NVM+55)& (0+255),b	;volatile
 19817                           
 19818                           ; BSR set to: 0
 19819                           ;controlMemory_MC50.c: 146:         var_sys_NVM.learningCurrentNormalClose = 0;
 19820  0062A2  0E00               	movlw	0
 19821  0062A4  6FC9               	movwf	(_var_sys_NVM+49)& (0+255),b	;volatile
 19822  0062A6  0E00               	movlw	0
 19823  0062A8  6FC8               	movwf	(_var_sys_NVM+48)& (0+255),b	;volatile
 19824                           
 19825                           ; BSR set to: 0
 19826                           ;controlMemory_MC50.c: 147:         var_sys_NVM.learningCurrentNormalOpen = 0;
 19827  0062AA  0E00               	movlw	0
 19828  0062AC  6FCB               	movwf	(_var_sys_NVM+51)& (0+255),b	;volatile
 19829  0062AE  0E00               	movlw	0
 19830  0062B0  6FCA               	movwf	(_var_sys_NVM+50)& (0+255),b	;volatile
 19831                           
 19832                           ; BSR set to: 0
 19833                           ;controlMemory_MC50.c: 148:         var_sys_NVM.learningCurrentDecelarationClose = 0;
 19834  0062B2  0E00               	movlw	0
 19835  0062B4  6FC0               	movwf	(_var_sys_NVM+40)& (0+255),b	;volatile
 19836  0062B6  0E00               	movlw	0
 19837  0062B8  6FC1               	movwf	(_var_sys_NVM+41)& (0+255),b	;volatile
 19838  0062BA  0E00               	movlw	0
 19839  0062BC  6FC2               	movwf	(_var_sys_NVM+42)& (0+255),b	;volatile
 19840  0062BE  0E00               	movlw	0
 19841  0062C0  6FC3               	movwf	(_var_sys_NVM+43)& (0+255),b	;volatile
 19842                           
 19843                           ; BSR set to: 0
 19844                           ;controlMemory_MC50.c: 149:         var_sys_NVM.learningCurrentDecelarationOpen = 0;
 19845  0062C2  0E00               	movlw	0
 19846  0062C4  6FC4               	movwf	(_var_sys_NVM+44)& (0+255),b	;volatile
 19847  0062C6  0E00               	movlw	0
 19848  0062C8  6FC5               	movwf	(_var_sys_NVM+45)& (0+255),b	;volatile
 19849  0062CA  0E00               	movlw	0
 19850  0062CC  6FC6               	movwf	(_var_sys_NVM+46)& (0+255),b	;volatile
 19851  0062CE  0E00               	movlw	0
 19852  0062D0  6FC7               	movwf	(_var_sys_NVM+47)& (0+255),b	;volatile
 19853                           
 19854                           ;controlMemory_MC50.c: 150:         SaveNVM_VarSystem(pageMemoryLearningVars);
 19855  0062D2  0E03               	movlw	3
 19856  0062D4  EC06  F045         	call	_SaveNVM_VarSystem
 19857                           
 19858                           ;controlMemory_MC50.c: 151:         var_sys_NVM.positionRemotesFull = 0;
 19859  0062D8  0E00               	movlw	0
 19860  0062DA  0100               	movlb	0	; () banked
 19861  0062DC  6FB8               	movwf	(_var_sys_NVM+32)& (0+255),b	;volatile
 19862                           
 19863                           ; BSR set to: 0
 19864                           ;controlMemory_MC50.c: 152:         var_sys_NVM.positionRemotesWalk = 0;
 19865  0062DE  0E00               	movlw	0
 19866  0062E0  6FB9               	movwf	(_var_sys_NVM+33)& (0+255),b	;volatile
 19867                           
 19868                           ; BSR set to: 0
 19869                           ;controlMemory_MC50.c: 153:         var_sys_NVM.OnlyRollingCode = NO;
 19870  0062E2  0E00               	movlw	0
 19871  0062E4  6FBE               	movwf	(_var_sys_NVM+38)& (0+255),b	;volatile
 19872                           
 19873                           ; BSR set to: 0
 19874                           ;controlMemory_MC50.c: 154:         var_sys_NVM.counterMoves = 0;
 19875  0062E6  0E00               	movlw	0
 19876  0062E8  6FBA               	movwf	(_var_sys_NVM+34)& (0+255),b	;volatile
 19877  0062EA  0E00               	movlw	0
 19878  0062EC  6FBB               	movwf	(_var_sys_NVM+35)& (0+255),b	;volatile
 19879  0062EE  0E00               	movlw	0
 19880  0062F0  6FBC               	movwf	(_var_sys_NVM+36)& (0+255),b	;volatile
 19881  0062F2  0E00               	movlw	0
 19882  0062F4  6FBD               	movwf	(_var_sys_NVM+37)& (0+255),b	;volatile
 19883                           
 19884                           ;controlMemory_MC50.c: 155:        SaveNVM_VarSystem(pageMemoryCounters);
 19885  0062F6  0E02               	movlw	2
 19886  0062F8  EC06  F045         	call	_SaveNVM_VarSystem
 19887                           
 19888                           ;controlMemory_MC50.c: 157:          var_sys_NVM.TypeofMotor = 0;
 19889  0062FC  0E00               	movlw	0
 19890  0062FE  0100               	movlb	0	; () banked
 19891  006300  6FB4               	movwf	(_var_sys_NVM+28)& (0+255),b	;volatile
 19892  006302                     l22657:
 19893                           
 19894                           ;controlMemory_MC50.c: 160:     i2c_readDataBlock(0x50, (uint16_t)(pageMemoryP * 16),(ch
      +                          ar*)&var_sys_NVM,16);
 19895  006302  0E00               	movlw	0
 19896  006304  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 19897  006306  0E00               	movlw	0
 19898  006308  6E22               	movwf	i2c_readDataBlock@reg^0,c
 19899  00630A  0E98               	movlw	low _var_sys_NVM
 19900  00630C  6E24               	movwf	i2c_readDataBlock@data^0,c
 19901  00630E  6A25               	clrf	(i2c_readDataBlock@data+1)^0,c
 19902  006310  0E00               	movlw	0
 19903  006312  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 19904  006314  0E10               	movlw	16
 19905  006316  6E26               	movwf	i2c_readDataBlock@len^0,c
 19906  006318  0E50               	movlw	80
 19907  00631A  ECD5  F03E         	call	_i2c_readDataBlock
 19908                           
 19909                           ;controlMemory_MC50.c: 161:     i2c_readDataBlock(0x50, (uint16_t)(pageMemoryE * 16),(ch
      +                          ar*)&var_sys_NVM.homemPresente, 16);
 19910  00631E  0E00               	movlw	0
 19911  006320  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 19912  006322  0E10               	movlw	16
 19913  006324  6E22               	movwf	i2c_readDataBlock@reg^0,c
 19914  006326  0EA8               	movlw	low (_var_sys_NVM+16)
 19915  006328  6E24               	movwf	i2c_readDataBlock@data^0,c
 19916  00632A  6A25               	clrf	(i2c_readDataBlock@data+1)^0,c
 19917  00632C  0E00               	movlw	0
 19918  00632E  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 19919  006330  0E10               	movlw	16
 19920  006332  6E26               	movwf	i2c_readDataBlock@len^0,c
 19921  006334  0E50               	movlw	80
 19922  006336  ECD5  F03E         	call	_i2c_readDataBlock
 19923                           
 19924                           ;controlMemory_MC50.c: 162:     i2c_readDataBlock(0x50, (uint16_t)(pageMemoryCounters * 
      +                          16),(char*)&var_sys_NVM.positionRemotesFull,16);
 19925  00633A  0E00               	movlw	0
 19926  00633C  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 19927  00633E  0E20               	movlw	32
 19928  006340  6E22               	movwf	i2c_readDataBlock@reg^0,c
 19929  006342  0EB8               	movlw	low (_var_sys_NVM+32)
 19930  006344  6E24               	movwf	i2c_readDataBlock@data^0,c
 19931  006346  6A25               	clrf	(i2c_readDataBlock@data+1)^0,c
 19932  006348  0E00               	movlw	0
 19933  00634A  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 19934  00634C  0E10               	movlw	16
 19935  00634E  6E26               	movwf	i2c_readDataBlock@len^0,c
 19936  006350  0E50               	movlw	80
 19937  006352  ECD5  F03E         	call	_i2c_readDataBlock
 19938                           
 19939                           ;controlMemory_MC50.c: 163:     i2c_readDataBlock(0x50, (uint16_t)(pageMemoryLearningVar
      +                          s * 16),(char*)&var_sys_NVM.learningCurrentNormalClose, 16);
 19940  006356  0E00               	movlw	0
 19941  006358  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 19942  00635A  0E30               	movlw	48
 19943  00635C  6E22               	movwf	i2c_readDataBlock@reg^0,c
 19944  00635E  0EC8               	movlw	low (_var_sys_NVM+48)
 19945  006360  6E24               	movwf	i2c_readDataBlock@data^0,c
 19946  006362  6A25               	clrf	(i2c_readDataBlock@data+1)^0,c
 19947  006364  0E00               	movlw	0
 19948  006366  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 19949  006368  0E10               	movlw	16
 19950  00636A  6E26               	movwf	i2c_readDataBlock@len^0,c
 19951  00636C  0E50               	movlw	80
 19952  00636E  ECD5  F03E         	call	_i2c_readDataBlock
 19953                           
 19954                           ;controlMemory_MC50.c: 166:     checkNVM_VarSystem();
 19955  006372  ECAC  F029         	call	_checkNVM_VarSystem	;wreg free
 19956                           
 19957                           ;controlMemory_MC50.c: 168:     var_sys.actualCounterMoves=var_sys_NVM.counterMoves;
 19958  006376  C0BA  F13C         	movff	_var_sys_NVM+34,_var_sys+60	;volatile
 19959  00637A  C0BB  F13D         	movff	_var_sys_NVM+35,_var_sys+61	;volatile
 19960  00637E  C0BC  F13E         	movff	_var_sys_NVM+36,_var_sys+62	;volatile
 19961  006382  C0BD  F13F         	movff	_var_sys_NVM+37,_var_sys+63	;volatile
 19962  006386  0012               	return		;funcret
 19963  006388                     __end_of_loadNVM_VarSystem:
 19964                           	callstack 0
 19965                           
 19966 ;; *************** function _i2c_readDataBlock *****************
 19967 ;; Defined at:
 19968 ;;		line 147 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 19969 ;; Parameters:    Size  Location     Type
 19970 ;;  address         1    wreg     unsigned char 
 19971 ;;  reg             2   33[COMRAM] unsigned short 
 19972 ;;  data            2   35[COMRAM] PTR void 
 19973 ;;		 -> var_sys_NVM.homemPresente(1), cmdMemoryIsEmpty@tempSerial(4), var_sys_NVM.positionRemotesFull(1), memoryTEMP(16)
      +, 
 19974 ;;		 -> var_sys_NVM.learningCurrentNormalClose(2), var_sys_NVM(64), 
 19975 ;;  len             2   37[COMRAM] unsigned int 
 19976 ;; Auto vars:     Size  Location     Type
 19977 ;;  address         1   40[COMRAM] unsigned char 
 19978 ;;  d               4   41[COMRAM] struct .
 19979 ;; Return value:  Size  Location     Type
 19980 ;;                  1    wreg      void 
 19981 ;; Registers used:
 19982 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19983 ;; Tracked objects:
 19984 ;;		On entry : 0/1
 19985 ;;		On exit  : 0/0
 19986 ;;		Unchanged: 0/0
 19987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19988 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19989 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19990 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19991 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19992 ;;Total ram usage:       12 bytes
 19993 ;; Hardware stack levels used: 1
 19994 ;; Hardware stack levels required when called: 12
 19995 ;; This function calls:
 19996 ;;		_I2C1_Close
 19997 ;;		_I2C1_MasterWrite
 19998 ;;		_I2C1_Open
 19999 ;;		_I2C1_SetAddressNackCallback
 20000 ;;		_I2C1_SetBuffer
 20001 ;;		_I2C1_SetDataCompleteCallback
 20002 ;; This function is called by:
 20003 ;;		_validateRemoteSerialNumber
 20004 ;;		_cmdMemoryIsEmpty
 20005 ;;		_loadNVM_VarSystem
 20006 ;; This function uses a non-reentrant model
 20007 ;;
 20008                           
 20009                           	psect	text74
 20010  007DAA                     __ptext74:
 20011                           	callstack 0
 20012  007DAA                     _i2c_readDataBlock:
 20013                           	callstack 14
 20014                           
 20015                           ;incstack = 0
 20016                           ;i2c_readDataBlock@address stored from wreg
 20017  007DAA  6E29               	movwf	i2c_readDataBlock@address^0,c
 20018                           
 20019                           ;mcc_generated_files/drivers/i2c_simple_master.c: 147: void i2c_readDataBlock(i2c1_addre
      +                          ss_t address, uint16_t reg, void *data, size_t len);mcc_generated_files/drivers/i2c_simp
      +                          le_master.c: 148: {;mcc_generated_files/drivers/i2c_simple_master.c: 149:     buf_t d;;m
      +                          cc_generated_files/drivers/i2c_simple_master.c: 150:     d.data = data;
 20020  007DAC  C024  F02C         	movff	i2c_readDataBlock@data,i2c_readDataBlock@d+2
 20021  007DB0  C025  F02D         	movff	i2c_readDataBlock@data+1,i2c_readDataBlock@d+3
 20022                           
 20023                           ;mcc_generated_files/drivers/i2c_simple_master.c: 151:     d.len = len;
 20024  007DB4  C026  F02A         	movff	i2c_readDataBlock@len,i2c_readDataBlock@d
 20025  007DB8  C027  F02B         	movff	i2c_readDataBlock@len+1,i2c_readDataBlock@d+1
 20026  007DBC                     l19413:
 20027  007DBC  5023               	movf	(i2c_readDataBlock@reg+1)^0,w,c
 20028  007DBE  1029               	iorwf	i2c_readDataBlock@address^0,w,c
 20029  007DC0  ECE0  F03C         	call	_I2C1_Open
 20030  007DC4  0900               	iorlw	0
 20031  007DC6  B4D8               	btfsc	status,2,c
 20032  007DC8  D7F9               	goto	l19413
 20033                           
 20034                           ;mcc_generated_files/drivers/i2c_simple_master.c: 154:     I2C1_SetDataCompleteCallback(
      +                          rdBlkRegCompleteHandler,&d);
 20035  007DCA  0E16               	movlw	low _rdBlkRegCompleteHandler
 20036  007DCC  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 20037  007DCE  0E89               	movlw	high _rdBlkRegCompleteHandler
 20038  007DD0  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 20039  007DD2  0E2A               	movlw	low i2c_readDataBlock@d
 20040  007DD4  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 20041  007DD6  6A18               	clrf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 20042  007DD8  EC4D  F048         	call	_I2C1_SetDataCompleteCallback	;wreg free
 20043                           
 20044                           ;mcc_generated_files/drivers/i2c_simple_master.c: 155:     I2C1_SetBuffer(&reg,1);
 20045  007DDC  0E22               	movlw	low i2c_readDataBlock@reg
 20046  007DDE  6E10               	movwf	I2C1_SetBuffer@buffer^0,c
 20047  007DE0  6A11               	clrf	(I2C1_SetBuffer@buffer+1)^0,c
 20048  007DE2  0E00               	movlw	0
 20049  007DE4  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 20050  007DE6  0E01               	movlw	1
 20051  007DE8  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 20052  007DEA  EC04  F048         	call	_I2C1_SetBuffer	;wreg free
 20053                           
 20054                           ; BSR set to: 2
 20055                           ;mcc_generated_files/drivers/i2c_simple_master.c: 156:     I2C1_SetAddressNackCallback((
      +                          (void*)0),((void*)0));
 20056  007DEE  0E00               	movlw	0
 20057  007DF0  6E15               	movwf	I2C1_SetAddressNackCallback@cb^0,c
 20058  007DF2  0E00               	movlw	0
 20059  007DF4  6E16               	movwf	(I2C1_SetAddressNackCallback@cb+1)^0,c
 20060  007DF6  0E00               	movlw	0
 20061  007DF8  6E17               	movwf	I2C1_SetAddressNackCallback@ptr^0,c
 20062  007DFA  0E00               	movlw	0
 20063  007DFC  6E18               	movwf	(I2C1_SetAddressNackCallback@ptr+1)^0,c
 20064  007DFE  EC35  F048         	call	_I2C1_SetAddressNackCallback	;wreg free
 20065                           
 20066                           ;mcc_generated_files/drivers/i2c_simple_master.c: 157:     I2C1_MasterWrite();
 20067  007E02  EC03  F049         	call	_I2C1_MasterWrite	;wreg free
 20068  007E06                     l19423:
 20069  007E06  EC76  F047         	call	_I2C1_Close	;wreg free
 20070  007E0A  06E8               	decf	wreg,f,c
 20071  007E0C  B4D8               	btfsc	status,2,c
 20072  007E0E  D7FB               	goto	l19423
 20073                           
 20074                           ;mcc_generated_files/drivers/i2c_simple_master.c: 159:     _delay((unsigned long)((10)*(
      +                          64000000/4000.0)));
 20075  007E10  0ED0               	movlw	208
 20076  007E12  6E28               	movwf	??_i2c_readDataBlock^0,c
 20077  007E14  0ECA               	movlw	202
 20078  007E16                     u28867:
 20079  007E16  2EE8               	decfsz	wreg,f,c
 20080  007E18  D7FE               	bra	u28867
 20081  007E1A  2E28               	decfsz	??_i2c_readDataBlock^0,f,c
 20082  007E1C  D7FC               	bra	u28867
 20083  007E1E  0012               	return		;funcret
 20084  007E20                     __end_of_i2c_readDataBlock:
 20085                           	callstack 0
 20086                           
 20087 ;; *************** function _checkNVM_VarSystem *****************
 20088 ;; Defined at:
 20089 ;;		line 314 in file "controlMemory_MC50.c"
 20090 ;; Parameters:    Size  Location     Type
 20091 ;;		None
 20092 ;; Auto vars:     Size  Location     Type
 20093 ;;  saveParam       1   57[COMRAM] unsigned char 
 20094 ;; Return value:  Size  Location     Type
 20095 ;;                  1    wreg      void 
 20096 ;; Registers used:
 20097 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20098 ;; Tracked objects:
 20099 ;;		On entry : 0/2
 20100 ;;		On exit  : 0/0
 20101 ;;		Unchanged: 0/0
 20102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20103 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20104 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20106 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20107 ;;Total ram usage:        1 bytes
 20108 ;; Hardware stack levels used: 1
 20109 ;; Hardware stack levels required when called: 14
 20110 ;; This function calls:
 20111 ;;		_SaveNVM_VarSystem
 20112 ;; This function is called by:
 20113 ;;		_loadNVM_VarSystem
 20114 ;; This function uses a non-reentrant model
 20115 ;;
 20116                           
 20117                           	psect	text75
 20118  005358                     __ptext75:
 20119                           	callstack 0
 20120  005358                     _checkNVM_VarSystem:
 20121                           	callstack 15
 20122                           
 20123                           ;controlMemory_MC50.c: 316:     char saveParam;;controlMemory_MC50.c: 319:     saveParam
      +                           = 0;
 20124                           
 20125                           ;incstack = 0
 20126  005358  0E00               	movlw	0
 20127  00535A  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20128                           
 20129                           ;controlMemory_MC50.c: 327:     if ( var_sys_NVM.decelarationOpen>45 )
 20130  00535C  0E2D               	movlw	45
 20131  00535E  0100               	movlb	0	; () banked
 20132  005360  6598               	cpfsgt	_var_sys_NVM& (0+255),b	;volatile
 20133  005362  D004               	goto	l21107
 20134                           
 20135                           ; BSR set to: 0
 20136                           ;controlMemory_MC50.c: 328:     {;controlMemory_MC50.c: 330:         var_sys_NVM.decelar
      +                          ationOpen = 3;
 20137  005364  0E03               	movlw	3
 20138  005366  6F98               	movwf	_var_sys_NVM& (0+255),b	;volatile
 20139                           
 20140                           ;controlMemory_MC50.c: 331:         saveParam=1;
 20141  005368  0E01               	movlw	1
 20142  00536A  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20143  00536C                     l21107:
 20144                           
 20145                           ; BSR set to: 0
 20146                           ;controlMemory_MC50.c: 334:     if ( var_sys_NVM.decelarationClose>45 )
 20147  00536C  0E2D               	movlw	45
 20148  00536E  6599               	cpfsgt	(_var_sys_NVM+1)& (0+255),b	;volatile
 20149  005370  D004               	goto	l1490
 20150                           
 20151                           ; BSR set to: 0
 20152                           ;controlMemory_MC50.c: 335:     {;controlMemory_MC50.c: 337:         var_sys_NVM.decelar
      +                          ationClose = 3;
 20153  005372  0E03               	movlw	3
 20154  005374  6F99               	movwf	(_var_sys_NVM+1)& (0+255),b	;volatile
 20155                           
 20156                           ;controlMemory_MC50.c: 338:         saveParam=1;
 20157  005376  0E01               	movlw	1
 20158  005378  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20159  00537A                     l1490:
 20160                           
 20161                           ; BSR set to: 0
 20162                           ;controlMemory_MC50.c: 341:     if ( (var_sys_NVM.motorPower<1) || (var_sys_NVM.motorPow
      +                          er>9) )
 20163  00537A  519A               	movf	(_var_sys_NVM+2)& (0+255),w,b	;volatile
 20164  00537C  B4D8               	btfsc	status,2,c
 20165  00537E  D003               	goto	u24290
 20166                           
 20167                           ; BSR set to: 0
 20168  005380  0E09               	movlw	9
 20169  005382  659A               	cpfsgt	(_var_sys_NVM+2)& (0+255),b	;volatile
 20170  005384  D004               	goto	l21115
 20171  005386                     u24290:
 20172                           
 20173                           ; BSR set to: 0
 20174                           ;controlMemory_MC50.c: 342:     {;controlMemory_MC50.c: 344:         var_sys_NVM.motorPo
      +                          wer = 9;
 20175  005386  0E09               	movlw	9
 20176  005388  6F9A               	movwf	(_var_sys_NVM+2)& (0+255),b	;volatile
 20177                           
 20178                           ;controlMemory_MC50.c: 345:         saveParam=1;
 20179  00538A  0E01               	movlw	1
 20180  00538C  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20181  00538E                     l21115:
 20182                           
 20183                           ; BSR set to: 0
 20184                           ;controlMemory_MC50.c: 348:     if ( var_sys_NVM.motorSensitivity>9 )
 20185  00538E  0E09               	movlw	9
 20186  005390  659B               	cpfsgt	(_var_sys_NVM+3)& (0+255),b	;volatile
 20187  005392  D004               	goto	l21119
 20188                           
 20189                           ; BSR set to: 0
 20190                           ;controlMemory_MC50.c: 349:     {;controlMemory_MC50.c: 351:         var_sys_NVM.motorSe
      +                          nsitivity = 0;
 20191  005394  0E00               	movlw	0
 20192  005396  6F9B               	movwf	(_var_sys_NVM+3)& (0+255),b	;volatile
 20193                           
 20194                           ;controlMemory_MC50.c: 352:         saveParam=1;
 20195  005398  0E01               	movlw	1
 20196  00539A  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20197  00539C                     l21119:
 20198                           
 20199                           ; BSR set to: 0
 20200                           ;controlMemory_MC50.c: 355:     if ( var_sys_NVM.walkTime>99 )
 20201  00539C  0E63               	movlw	99
 20202  00539E  659C               	cpfsgt	(_var_sys_NVM+4)& (0+255),b	;volatile
 20203  0053A0  D004               	goto	l21123
 20204                           
 20205                           ; BSR set to: 0
 20206                           ;controlMemory_MC50.c: 356:     {;controlMemory_MC50.c: 358:         var_sys_NVM.walkTim
      +                          e = 10;
 20207  0053A2  0E0A               	movlw	10
 20208  0053A4  6F9C               	movwf	(_var_sys_NVM+4)& (0+255),b	;volatile
 20209                           
 20210                           ;controlMemory_MC50.c: 359:         saveParam=1;
 20211  0053A6  0E01               	movlw	1
 20212  0053A8  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20213  0053AA                     l21123:
 20214                           
 20215                           ; BSR set to: 0
 20216                           ;controlMemory_MC50.c: 362:     if ( var_sys_NVM.autoTimeFullClose>99 )
 20217  0053AA  0E63               	movlw	99
 20218  0053AC  659D               	cpfsgt	(_var_sys_NVM+5)& (0+255),b	;volatile
 20219  0053AE  D004               	goto	l21127
 20220                           
 20221                           ; BSR set to: 0
 20222                           ;controlMemory_MC50.c: 363:     {;controlMemory_MC50.c: 365:         var_sys_NVM.autoTim
      +                          eFullClose = 0;
 20223  0053B0  0E00               	movlw	0
 20224  0053B2  6F9D               	movwf	(_var_sys_NVM+5)& (0+255),b	;volatile
 20225                           
 20226                           ;controlMemory_MC50.c: 366:         saveParam=1;
 20227  0053B4  0E01               	movlw	1
 20228  0053B6  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20229  0053B8                     l21127:
 20230                           
 20231                           ; BSR set to: 0
 20232                           ;controlMemory_MC50.c: 369:     if ( var_sys_NVM.autoTimeWalkClose>99 )
 20233  0053B8  0E63               	movlw	99
 20234  0053BA  659E               	cpfsgt	(_var_sys_NVM+6)& (0+255),b	;volatile
 20235  0053BC  D004               	goto	l21131
 20236                           
 20237                           ; BSR set to: 0
 20238                           ;controlMemory_MC50.c: 370:     {;controlMemory_MC50.c: 372:         var_sys_NVM.autoTim
      +                          eWalkClose = 0;
 20239  0053BE  0E00               	movlw	0
 20240  0053C0  6F9E               	movwf	(_var_sys_NVM+6)& (0+255),b	;volatile
 20241                           
 20242                           ;controlMemory_MC50.c: 373:         saveParam=1;
 20243  0053C2  0E01               	movlw	1
 20244  0053C4  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20245  0053C6                     l21131:
 20246                           
 20247                           ; BSR set to: 0
 20248                           ;controlMemory_MC50.c: 376:     if ( var_sys_NVM.photoCellIsON>1 )
 20249  0053C6  0E01               	movlw	1
 20250  0053C8  659F               	cpfsgt	(_var_sys_NVM+7)& (0+255),b	;volatile
 20251  0053CA  D004               	goto	l21135
 20252                           
 20253                           ; BSR set to: 0
 20254                           ;controlMemory_MC50.c: 377:     {;controlMemory_MC50.c: 379:         var_sys_NVM.photoCe
      +                          llIsON = 0;
 20255  0053CC  0E00               	movlw	0
 20256  0053CE  6F9F               	movwf	(_var_sys_NVM+7)& (0+255),b	;volatile
 20257                           
 20258                           ;controlMemory_MC50.c: 380:         saveParam=1;
 20259  0053D0  0E01               	movlw	1
 20260  0053D2  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20261  0053D4                     l21135:
 20262                           
 20263                           ; BSR set to: 0
 20264                           ;controlMemory_MC50.c: 383:     if ( var_sys_NVM.photoCellInOpen>1 )
 20265  0053D4  0E01               	movlw	1
 20266  0053D6  65A0               	cpfsgt	(_var_sys_NVM+8)& (0+255),b	;volatile
 20267  0053D8  D004               	goto	l21139
 20268                           
 20269                           ; BSR set to: 0
 20270                           ;controlMemory_MC50.c: 384:     {;controlMemory_MC50.c: 386:         var_sys_NVM.photoCe
      +                          llInOpen = 0;
 20271  0053DA  0E00               	movlw	0
 20272  0053DC  6FA0               	movwf	(_var_sys_NVM+8)& (0+255),b	;volatile
 20273                           
 20274                           ;controlMemory_MC50.c: 387:         saveParam=1;
 20275  0053DE  0E01               	movlw	1
 20276  0053E0  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20277  0053E2                     l21139:
 20278                           
 20279                           ; BSR set to: 0
 20280                           ;controlMemory_MC50.c: 390:     if ( var_sys_NVM.securityBandIsON>1 )
 20281  0053E2  0E01               	movlw	1
 20282  0053E4  65A1               	cpfsgt	(_var_sys_NVM+9)& (0+255),b	;volatile
 20283  0053E6  D004               	goto	l21143
 20284                           
 20285                           ; BSR set to: 0
 20286                           ;controlMemory_MC50.c: 391:     {;controlMemory_MC50.c: 393:         var_sys_NVM.securit
      +                          yBandIsON = 0 ;
 20287  0053E8  0E00               	movlw	0
 20288  0053EA  6FA1               	movwf	(_var_sys_NVM+9)& (0+255),b	;volatile
 20289                           
 20290                           ;controlMemory_MC50.c: 394:         saveParam=1;
 20291  0053EC  0E01               	movlw	1
 20292  0053EE  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20293  0053F0                     l21143:
 20294                           
 20295                           ; BSR set to: 0
 20296                           ;controlMemory_MC50.c: 397:     if ( var_sys_NVM.securityBandType>1 )
 20297  0053F0  0E01               	movlw	1
 20298  0053F2  65A2               	cpfsgt	(_var_sys_NVM+10)& (0+255),b	;volatile
 20299  0053F4  D004               	goto	l21147
 20300                           
 20301                           ; BSR set to: 0
 20302                           ;controlMemory_MC50.c: 398:     {;controlMemory_MC50.c: 400:         var_sys_NVM.securit
      +                          yBandType = 1;
 20303  0053F6  0E01               	movlw	1
 20304  0053F8  6FA2               	movwf	(_var_sys_NVM+10)& (0+255),b	;volatile
 20305                           
 20306                           ;controlMemory_MC50.c: 401:         saveParam=1;
 20307  0053FA  0E01               	movlw	1
 20308  0053FC  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20309  0053FE                     l21147:
 20310                           
 20311                           ; BSR set to: 0
 20312                           ;controlMemory_MC50.c: 404:     if ( var_sys_NVM.securityBandInOpen>1 )
 20313  0053FE  0E01               	movlw	1
 20314  005400  65A3               	cpfsgt	(_var_sys_NVM+11)& (0+255),b	;volatile
 20315  005402  D004               	goto	l21151
 20316                           
 20317                           ; BSR set to: 0
 20318                           ;controlMemory_MC50.c: 405:     {;controlMemory_MC50.c: 407:         var_sys_NVM.securit
      +                          yBandInOpen = 0;
 20319  005404  0E00               	movlw	0
 20320  005406  6FA3               	movwf	(_var_sys_NVM+11)& (0+255),b	;volatile
 20321                           
 20322                           ;controlMemory_MC50.c: 408:         saveParam=1;
 20323  005408  0E01               	movlw	1
 20324  00540A  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20325  00540C                     l21151:
 20326                           
 20327                           ; BSR set to: 0
 20328                           ;controlMemory_MC50.c: 411:     if ( var_sys_NVM.operationMode>2 )
 20329  00540C  0E02               	movlw	2
 20330  00540E  65A4               	cpfsgt	(_var_sys_NVM+12)& (0+255),b	;volatile
 20331  005410  D004               	goto	l21155
 20332                           
 20333                           ; BSR set to: 0
 20334                           ;controlMemory_MC50.c: 412:     {;controlMemory_MC50.c: 414:         var_sys_NVM.operati
      +                          onMode = 0;
 20335  005412  0E00               	movlw	0
 20336  005414  6FA4               	movwf	(_var_sys_NVM+12)& (0+255),b	;volatile
 20337                           
 20338                           ;controlMemory_MC50.c: 415:         saveParam=1;
 20339  005416  0E01               	movlw	1
 20340  005418  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20341  00541A                     l21155:
 20342                           
 20343                           ; BSR set to: 0
 20344                           ;controlMemory_MC50.c: 418:     if ( var_sys_NVM.flashLightMode>3 )
 20345  00541A  0E03               	movlw	3
 20346  00541C  65A5               	cpfsgt	(_var_sys_NVM+13)& (0+255),b	;volatile
 20347  00541E  D004               	goto	l21159
 20348                           
 20349                           ; BSR set to: 0
 20350                           ;controlMemory_MC50.c: 419:     {;controlMemory_MC50.c: 421:         var_sys_NVM.flashLi
      +                          ghtMode = 0;
 20351  005420  0E00               	movlw	0
 20352  005422  6FA5               	movwf	(_var_sys_NVM+13)& (0+255),b	;volatile
 20353                           
 20354                           ;controlMemory_MC50.c: 422:         saveParam=1;
 20355  005424  0E01               	movlw	1
 20356  005426  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20357  005428                     l21159:
 20358                           
 20359                           ; BSR set to: 0
 20360                           ;controlMemory_MC50.c: 425:     if ( var_sys_NVM.programmingDistance>1 )
 20361  005428  0E01               	movlw	1
 20362  00542A  65A6               	cpfsgt	(_var_sys_NVM+14)& (0+255),b	;volatile
 20363  00542C  D004               	goto	l21163
 20364                           
 20365                           ; BSR set to: 0
 20366                           ;controlMemory_MC50.c: 426:     {;controlMemory_MC50.c: 428:         var_sys_NVM.program
      +                          mingDistance = 0;
 20367  00542E  0E00               	movlw	0
 20368  005430  6FA6               	movwf	(_var_sys_NVM+14)& (0+255),b	;volatile
 20369                           
 20370                           ;controlMemory_MC50.c: 429:         saveParam=1;
 20371  005432  0E01               	movlw	1
 20372  005434  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20373  005436                     l21163:
 20374                           
 20375                           ; BSR set to: 0
 20376                           ;controlMemory_MC50.c: 432:     if ( var_sys_NVM.decelarationSensivity>9 )
 20377  005436  0E09               	movlw	9
 20378  005438  65A7               	cpfsgt	(_var_sys_NVM+15)& (0+255),b	;volatile
 20379  00543A  D004               	goto	l21167
 20380                           
 20381                           ; BSR set to: 0
 20382                           ;controlMemory_MC50.c: 433:     {;controlMemory_MC50.c: 435:         var_sys_NVM.decelar
      +                          ationSensivity = 0;
 20383  00543C  0E00               	movlw	0
 20384  00543E  6FA7               	movwf	(_var_sys_NVM+15)& (0+255),b	;volatile
 20385                           
 20386                           ;controlMemory_MC50.c: 436:         saveParam=1;
 20387  005440  0E01               	movlw	1
 20388  005442  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20389  005444                     l21167:
 20390                           
 20391                           ; BSR set to: 0
 20392                           ;controlMemory_MC50.c: 441:     if ( var_sys_NVM.homemPresente>2 )
 20393  005444  0E02               	movlw	2
 20394  005446  65A8               	cpfsgt	(_var_sys_NVM+16)& (0+255),b	;volatile
 20395  005448  D004               	goto	l21171
 20396                           
 20397                           ; BSR set to: 0
 20398                           ;controlMemory_MC50.c: 442:     {;controlMemory_MC50.c: 444:         var_sys_NVM.homemPr
      +                          esente = 0;
 20399  00544A  0E00               	movlw	0
 20400  00544C  6FA8               	movwf	(_var_sys_NVM+16)& (0+255),b	;volatile
 20401                           
 20402                           ;controlMemory_MC50.c: 445:         saveParam=1;
 20403  00544E  0E01               	movlw	1
 20404  005450  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20405  005452                     l21171:
 20406                           
 20407                           ; BSR set to: 0
 20408                           ;controlMemory_MC50.c: 448:     if ( var_sys_NVM.logicDigital>1 )
 20409  005452  0E01               	movlw	1
 20410  005454  65A9               	cpfsgt	(_var_sys_NVM+17)& (0+255),b	;volatile
 20411  005456  D004               	goto	l21175
 20412                           
 20413                           ; BSR set to: 0
 20414                           ;controlMemory_MC50.c: 449:     {;controlMemory_MC50.c: 451:         var_sys_NVM.logicDi
      +                          gital = 0;
 20415  005458  0E00               	movlw	0
 20416  00545A  6FA9               	movwf	(_var_sys_NVM+17)& (0+255),b	;volatile
 20417                           
 20418                           ;controlMemory_MC50.c: 452:         saveParam=1;
 20419  00545C  0E01               	movlw	1
 20420  00545E  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20421  005460                     l21175:
 20422                           
 20423                           ; BSR set to: 0
 20424                           ;controlMemory_MC50.c: 455:     if ( var_sys_NVM.softStart>9 )
 20425  005460  0E09               	movlw	9
 20426  005462  65AA               	cpfsgt	(_var_sys_NVM+18)& (0+255),b	;volatile
 20427  005464  D004               	goto	l21179
 20428                           
 20429                           ; BSR set to: 0
 20430                           ;controlMemory_MC50.c: 456:     {;controlMemory_MC50.c: 458:         var_sys_NVM.softSta
      +                          rt = 0;
 20431  005466  0E00               	movlw	0
 20432  005468  6FAA               	movwf	(_var_sys_NVM+18)& (0+255),b	;volatile
 20433                           
 20434                           ;controlMemory_MC50.c: 459:         saveParam=1;
 20435  00546A  0E01               	movlw	1
 20436  00546C  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20437  00546E                     l21179:
 20438                           
 20439                           ; BSR set to: 0
 20440                           ;controlMemory_MC50.c: 463:     if ( var_sys_NVM.ligthTime>99 )
 20441  00546E  0E63               	movlw	99
 20442  005470  65AC               	cpfsgt	(_var_sys_NVM+20)& (0+255),b	;volatile
 20443  005472  D004               	goto	l21183
 20444                           
 20445                           ; BSR set to: 0
 20446                           ;controlMemory_MC50.c: 464:     {;controlMemory_MC50.c: 466:         var_sys_NVM.ligthTi
      +                          me = 3;
 20447  005474  0E03               	movlw	3
 20448  005476  6FAC               	movwf	(_var_sys_NVM+20)& (0+255),b	;volatile
 20449                           
 20450                           ;controlMemory_MC50.c: 467:         saveParam=1;
 20451  005478  0E01               	movlw	1
 20452  00547A  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20453  00547C                     l21183:
 20454                           
 20455                           ; BSR set to: 0
 20456                           ;controlMemory_MC50.c: 470:     if ( var_sys_NVM.folow_me>9 )
 20457  00547C  0E09               	movlw	9
 20458  00547E  65AD               	cpfsgt	(_var_sys_NVM+21)& (0+255),b	;volatile
 20459  005480  D004               	goto	l21187
 20460                           
 20461                           ; BSR set to: 0
 20462                           ;controlMemory_MC50.c: 471:     {;controlMemory_MC50.c: 473:         var_sys_NVM.folow_m
      +                          e = 0;
 20463  005482  0E00               	movlw	0
 20464  005484  6FAD               	movwf	(_var_sys_NVM+21)& (0+255),b	;volatile
 20465                           
 20466                           ;controlMemory_MC50.c: 474:         saveParam=1;
 20467  005486  0E01               	movlw	1
 20468  005488  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20469  00548A                     l21187:
 20470                           
 20471                           ; BSR set to: 0
 20472                           ;controlMemory_MC50.c: 479:     if ( var_sys_NVM.electricBrake>1 )
 20473  00548A  0E01               	movlw	1
 20474  00548C  65AF               	cpfsgt	(_var_sys_NVM+23)& (0+255),b	;volatile
 20475  00548E  D004               	goto	l1512
 20476                           
 20477                           ; BSR set to: 0
 20478                           ;controlMemory_MC50.c: 480:     {;controlMemory_MC50.c: 482:         var_sys_NVM.electri
      +                          cBrake = 0;
 20479  005490  0E00               	movlw	0
 20480  005492  6FAF               	movwf	(_var_sys_NVM+23)& (0+255),b	;volatile
 20481                           
 20482                           ;controlMemory_MC50.c: 483:         saveParam=1;
 20483  005494  0E01               	movlw	1
 20484  005496  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20485  005498                     l1512:
 20486                           
 20487                           ; BSR set to: 0
 20488                           ;controlMemory_MC50.c: 486:     if ( (var_sys_NVM.velocityDecelaration<1) || (var_sys_NV
      +                          M.velocityDecelaration>9) )
 20489  005498  51B0               	movf	(_var_sys_NVM+24)& (0+255),w,b	;volatile
 20490  00549A  B4D8               	btfsc	status,2,c
 20491  00549C  D003               	goto	u24500
 20492                           
 20493                           ; BSR set to: 0
 20494  00549E  0E09               	movlw	9
 20495  0054A0  65B0               	cpfsgt	(_var_sys_NVM+24)& (0+255),b	;volatile
 20496  0054A2  D004               	goto	l21195
 20497  0054A4                     u24500:
 20498                           
 20499                           ; BSR set to: 0
 20500                           ;controlMemory_MC50.c: 487:     {;controlMemory_MC50.c: 489:         var_sys_NVM.velocit
      +                          yDecelaration = 5;
 20501  0054A4  0E05               	movlw	5
 20502  0054A6  6FB0               	movwf	(_var_sys_NVM+24)& (0+255),b	;volatile
 20503                           
 20504                           ;controlMemory_MC50.c: 490:         saveParam=1;
 20505  0054A8  0E01               	movlw	1
 20506  0054AA  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20507  0054AC                     l21195:
 20508                           
 20509                           ; BSR set to: 0
 20510                           ;controlMemory_MC50.c: 493:     if ( var_sys_NVM.flashRGBMode>3 )
 20511  0054AC  0E03               	movlw	3
 20512  0054AE  65B1               	cpfsgt	(_var_sys_NVM+25)& (0+255),b	;volatile
 20513  0054B0  D004               	goto	l21199
 20514                           
 20515                           ; BSR set to: 0
 20516                           ;controlMemory_MC50.c: 494:     {;controlMemory_MC50.c: 496:         var_sys_NVM.flashRG
      +                          BMode = 3;
 20517  0054B2  0E03               	movlw	3
 20518  0054B4  6FB1               	movwf	(_var_sys_NVM+25)& (0+255),b	;volatile
 20519                           
 20520                           ;controlMemory_MC50.c: 497:         saveParam=1;
 20521  0054B6  0E01               	movlw	1
 20522  0054B8  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20523  0054BA                     l21199:
 20524                           
 20525                           ; BSR set to: 0
 20526                           ;controlMemory_MC50.c: 499:         if ( var_sys_NVM.Stopboton > 1 )
 20527  0054BA  0E01               	movlw	1
 20528  0054BC  65AE               	cpfsgt	(_var_sys_NVM+22)& (0+255),b	;volatile
 20529  0054BE  D004               	goto	l21203
 20530                           
 20531                           ; BSR set to: 0
 20532                           ;controlMemory_MC50.c: 500:     {;controlMemory_MC50.c: 502:         var_sys_NVM.Stopbot
      +                          on = 0 ;
 20533  0054C0  0E00               	movlw	0
 20534  0054C2  6FAE               	movwf	(_var_sys_NVM+22)& (0+255),b	;volatile
 20535                           
 20536                           ;controlMemory_MC50.c: 503:         saveParam=1;
 20537  0054C4  0E01               	movlw	1
 20538  0054C6  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20539  0054C8                     l21203:
 20540                           
 20541                           ; BSR set to: 0
 20542                           ;controlMemory_MC50.c: 505:         if ( var_sys_NVM.Direction_motor>1 )
 20543  0054C8  0E01               	movlw	1
 20544  0054CA  65B3               	cpfsgt	(_var_sys_NVM+27)& (0+255),b	;volatile
 20545  0054CC  D004               	goto	l21207
 20546                           
 20547                           ; BSR set to: 0
 20548                           ;controlMemory_MC50.c: 506:     {;controlMemory_MC50.c: 508:         var_sys_NVM.Directi
      +                          on_motor = 1;
 20549  0054CE  0E01               	movlw	1
 20550  0054D0  6FB3               	movwf	(_var_sys_NVM+27)& (0+255),b	;volatile
 20551                           
 20552                           ;controlMemory_MC50.c: 509:         saveParam=1;
 20553  0054D2  0E01               	movlw	1
 20554  0054D4  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20555  0054D6                     l21207:
 20556                           
 20557                           ; BSR set to: 0
 20558                           ;controlMemory_MC50.c: 511:         if ( var_sys_NVM.softstop>9 )
 20559  0054D6  0E09               	movlw	9
 20560  0054D8  65AB               	cpfsgt	(_var_sys_NVM+19)& (0+255),b	;volatile
 20561  0054DA  D004               	goto	l1519
 20562                           
 20563                           ; BSR set to: 0
 20564                           ;controlMemory_MC50.c: 512:     {;controlMemory_MC50.c: 514:         var_sys_NVM.softsto
      +                          p = 0;
 20565  0054DC  0E00               	movlw	0
 20566  0054DE  6FAB               	movwf	(_var_sys_NVM+19)& (0+255),b	;volatile
 20567                           
 20568                           ;controlMemory_MC50.c: 515:         saveParam=1;
 20569  0054E0  0E01               	movlw	1
 20570  0054E2  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20571  0054E4                     l1519:
 20572                           
 20573                           ; BSR set to: 0
 20574                           ;controlMemory_MC50.c: 540:     if ( saveParam != 0 )
 20575  0054E4  503A               	movf	checkNVM_VarSystem@saveParam^0,w,c
 20576  0054E6  B4D8               	btfsc	status,2,c
 20577  0054E8  0012               	return	
 20578                           
 20579                           ; BSR set to: 0
 20580                           ;controlMemory_MC50.c: 541:     {;controlMemory_MC50.c: 542:         SaveNVM_VarSystem(p
      +                          ageMemoryP);
 20581  0054EA  0E00               	movlw	0
 20582  0054EC  EC06  F045         	call	_SaveNVM_VarSystem
 20583                           
 20584                           ;controlMemory_MC50.c: 543:         SaveNVM_VarSystem(pageMemoryE);
 20585  0054F0  0E01               	movlw	1
 20586  0054F2  EC06  F045         	call	_SaveNVM_VarSystem
 20587  0054F6  0012               	return		;funcret
 20588  0054F8                     __end_of_checkNVM_VarSystem:
 20589                           	callstack 0
 20590                           
 20591 ;; *************** function _ResetDefaultMemory *****************
 20592 ;; Defined at:
 20593 ;;		line 186 in file "controlMemory_MC50.c"
 20594 ;; Parameters:    Size  Location     Type
 20595 ;;  type            1    wreg     unsigned char 
 20596 ;; Auto vars:     Size  Location     Type
 20597 ;;  type            1   57[COMRAM] unsigned char 
 20598 ;; Return value:  Size  Location     Type
 20599 ;;                  1    wreg      void 
 20600 ;; Registers used:
 20601 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20602 ;; Tracked objects:
 20603 ;;		On entry : 31/0
 20604 ;;		On exit  : 0/0
 20605 ;;		Unchanged: 0/0
 20606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20608 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20610 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20611 ;;Total ram usage:        1 bytes
 20612 ;; Hardware stack levels used: 1
 20613 ;; Hardware stack levels required when called: 14
 20614 ;; This function calls:
 20615 ;;		_SaveNVM_VarSystem
 20616 ;; This function is called by:
 20617 ;;		_loadNVM_VarSystem
 20618 ;;		_sm_execute_menuConfiguration
 20619 ;; This function uses a non-reentrant model
 20620 ;;
 20621                           
 20622                           	psect	text76
 20623  005B5E                     __ptext76:
 20624                           	callstack 0
 20625  005B5E                     _ResetDefaultMemory:
 20626                           	callstack 14
 20627                           
 20628                           ;incstack = 0
 20629                           ;ResetDefaultMemory@type stored from wreg
 20630  005B5E  6E3A               	movwf	ResetDefaultMemory@type^0,c
 20631                           
 20632                           ;controlMemory_MC50.c: 186: void ResetDefaultMemory(unsigned char type);controlMemory_MC
      +                          50.c: 187: {;controlMemory_MC50.c: 190:     var_sys_NVM.decelarationOpen = 3;
 20633  005B60  0E03               	movlw	3
 20634  005B62  0100               	movlb	0	; () banked
 20635  005B64  6F98               	movwf	_var_sys_NVM& (0+255),b	;volatile
 20636                           
 20637                           ;controlMemory_MC50.c: 191:     var_sys_NVM.motorPower = 9;
 20638  005B66  0E09               	movlw	9
 20639  005B68  6F9A               	movwf	(_var_sys_NVM+2)& (0+255),b	;volatile
 20640                           
 20641                           ;controlMemory_MC50.c: 192:     var_sys_NVM.decelarationClose = 3;
 20642  005B6A  0E03               	movlw	3
 20643  005B6C  6F99               	movwf	(_var_sys_NVM+1)& (0+255),b	;volatile
 20644                           
 20645                           ;controlMemory_MC50.c: 193:     var_sys_NVM.photoCellIsON = 0;
 20646  005B6E  0E00               	movlw	0
 20647  005B70  6F9F               	movwf	(_var_sys_NVM+7)& (0+255),b	;volatile
 20648                           
 20649                           ;controlMemory_MC50.c: 194:     var_sys_NVM.photoCellInOpen = 0;
 20650  005B72  0E00               	movlw	0
 20651  005B74  6FA0               	movwf	(_var_sys_NVM+8)& (0+255),b	;volatile
 20652                           
 20653                           ;controlMemory_MC50.c: 195:     var_sys_NVM.securityBandIsON = 0 ;
 20654  005B76  0E00               	movlw	0
 20655  005B78  6FA1               	movwf	(_var_sys_NVM+9)& (0+255),b	;volatile
 20656                           
 20657                           ;controlMemory_MC50.c: 196:     var_sys_NVM.securityBandType = 1;
 20658  005B7A  0E01               	movlw	1
 20659  005B7C  6FA2               	movwf	(_var_sys_NVM+10)& (0+255),b	;volatile
 20660                           
 20661                           ;controlMemory_MC50.c: 197:     var_sys_NVM.securityBandInOpen = 0;
 20662  005B7E  0E00               	movlw	0
 20663  005B80  6FA3               	movwf	(_var_sys_NVM+11)& (0+255),b	;volatile
 20664                           
 20665                           ;controlMemory_MC50.c: 198:     var_sys_NVM.flashLightMode = 0;
 20666  005B82  0E00               	movlw	0
 20667  005B84  6FA5               	movwf	(_var_sys_NVM+13)& (0+255),b	;volatile
 20668                           
 20669                           ;controlMemory_MC50.c: 199:     var_sys_NVM.programmingDistance = 0;
 20670  005B86  0E00               	movlw	0
 20671  005B88  6FA6               	movwf	(_var_sys_NVM+14)& (0+255),b	;volatile
 20672                           
 20673                           ;controlMemory_MC50.c: 200:     var_sys_NVM.decelarationSensivity = 0;
 20674  005B8A  0E00               	movlw	0
 20675  005B8C  6FA7               	movwf	(_var_sys_NVM+15)& (0+255),b	;volatile
 20676                           
 20677                           ;controlMemory_MC50.c: 201:     var_sys_NVM.homemPresente = 0;
 20678  005B8E  0E00               	movlw	0
 20679  005B90  6FA8               	movwf	(_var_sys_NVM+16)& (0+255),b	;volatile
 20680                           
 20681                           ;controlMemory_MC50.c: 202:     var_sys_NVM.autoTimeWalkClose = 0;
 20682  005B92  0E00               	movlw	0
 20683  005B94  6F9E               	movwf	(_var_sys_NVM+6)& (0+255),b	;volatile
 20684                           
 20685                           ;controlMemory_MC50.c: 203:     var_sys_NVM.ligthTime = 3;
 20686  005B96  0E03               	movlw	3
 20687  005B98  6FAC               	movwf	(_var_sys_NVM+20)& (0+255),b	;volatile
 20688                           
 20689                           ;controlMemory_MC50.c: 204:     var_sys_NVM.folow_me = 0;
 20690  005B9A  0E00               	movlw	0
 20691  005B9C  6FAD               	movwf	(_var_sys_NVM+21)& (0+255),b	;volatile
 20692                           
 20693                           ;controlMemory_MC50.c: 205:     var_sys_NVM.electricBrake = 0;
 20694  005B9E  0E00               	movlw	0
 20695  005BA0  6FAF               	movwf	(_var_sys_NVM+23)& (0+255),b	;volatile
 20696                           
 20697                           ;controlMemory_MC50.c: 206:     var_sys_NVM.autoTimeWalkClose = 0;
 20698  005BA2  0E00               	movlw	0
 20699  005BA4  6F9E               	movwf	(_var_sys_NVM+6)& (0+255),b	;volatile
 20700                           
 20701                           ;controlMemory_MC50.c: 207:     var_sys_NVM.Direction_motor = 1 ;
 20702  005BA6  0E01               	movlw	1
 20703  005BA8  6FB3               	movwf	(_var_sys_NVM+27)& (0+255),b	;volatile
 20704                           
 20705                           ; BSR set to: 0
 20706                           ;controlMemory_MC50.c: 210:     if (type == SC){
 20707  005BAA  503A               	movf	ResetDefaultMemory@type^0,w,c
 20708  005BAC  A4D8               	btfss	status,2,c
 20709  005BAE  D014               	goto	l19911
 20710                           
 20711                           ; BSR set to: 0
 20712                           ;controlMemory_MC50.c: 212:         var_sys_NVM.motorSensitivity = 0;
 20713  005BB0  0E00               	movlw	0
 20714  005BB2  6F9B               	movwf	(_var_sys_NVM+3)& (0+255),b	;volatile
 20715                           
 20716                           ;controlMemory_MC50.c: 213:         var_sys_NVM.logicDigital = 0;
 20717  005BB4  0E00               	movlw	0
 20718  005BB6  6FA9               	movwf	(_var_sys_NVM+17)& (0+255),b	;volatile
 20719                           
 20720                           ;controlMemory_MC50.c: 214:         var_sys_NVM.Stopboton = 0;
 20721  005BB8  0E00               	movlw	0
 20722  005BBA  6FAE               	movwf	(_var_sys_NVM+22)& (0+255),b	;volatile
 20723                           
 20724                           ;controlMemory_MC50.c: 215:         var_sys_NVM.autoTimeFullClose = 0;
 20725  005BBC  0E00               	movlw	0
 20726  005BBE  6F9D               	movwf	(_var_sys_NVM+5)& (0+255),b	;volatile
 20727                           
 20728                           ;controlMemory_MC50.c: 216:         var_sys_NVM.operationMode = 0;
 20729  005BC0  0E00               	movlw	0
 20730  005BC2  6FA4               	movwf	(_var_sys_NVM+12)& (0+255),b	;volatile
 20731                           
 20732                           ;controlMemory_MC50.c: 217:         var_sys_NVM.velocityDecelaration = 5;
 20733  005BC4  0E05               	movlw	5
 20734  005BC6  6FB0               	movwf	(_var_sys_NVM+24)& (0+255),b	;volatile
 20735                           
 20736                           ;controlMemory_MC50.c: 218:         var_sys_NVM.flashRGBMode = 3;
 20737  005BC8  0E03               	movlw	3
 20738  005BCA  6FB1               	movwf	(_var_sys_NVM+25)& (0+255),b	;volatile
 20739                           
 20740                           ;controlMemory_MC50.c: 219:         var_sys_NVM.softstop = 0;
 20741  005BCC  0E00               	movlw	0
 20742  005BCE  6FAB               	movwf	(_var_sys_NVM+19)& (0+255),b	;volatile
 20743                           
 20744                           ;controlMemory_MC50.c: 220:         var_sys_NVM.softStart = 0;
 20745  005BD0  0E00               	movlw	0
 20746  005BD2  6FAA               	movwf	(_var_sys_NVM+18)& (0+255),b	;volatile
 20747                           
 20748                           ;controlMemory_MC50.c: 221:         var_sys_NVM.walkTime = 10;
 20749  005BD4  0E0A               	movlw	10
 20750  005BD6  D039               	goto	L82
 20751  005BD8                     l19911:
 20752                           
 20753                           ; BSR set to: 0
 20754  005BD8  043A               	decf	ResetDefaultMemory@type^0,w,c
 20755  005BDA  A4D8               	btfss	status,2,c
 20756  005BDC  D01B               	goto	l19915
 20757                           
 20758                           ; BSR set to: 0
 20759                           ;controlMemory_MC50.c: 225:         var_sys_NVM.decelarationClose = 4;
 20760  005BDE  0E04               	movlw	4
 20761  005BE0  6F99               	movwf	(_var_sys_NVM+1)& (0+255),b	;volatile
 20762                           
 20763                           ;controlMemory_MC50.c: 226:         var_sys_NVM.decelarationOpen = 4;
 20764  005BE2  0E04               	movlw	4
 20765  005BE4  6F98               	movwf	_var_sys_NVM& (0+255),b	;volatile
 20766                           
 20767                           ;controlMemory_MC50.c: 227:         var_sys_NVM.motorSensitivity = 4;
 20768  005BE6  0E04               	movlw	4
 20769  005BE8  6F9B               	movwf	(_var_sys_NVM+3)& (0+255),b	;volatile
 20770                           
 20771                           ;controlMemory_MC50.c: 228:         var_sys_NVM.logicDigital = 1;
 20772  005BEA  0E01               	movlw	1
 20773  005BEC  6FA9               	movwf	(_var_sys_NVM+17)& (0+255),b	;volatile
 20774                           
 20775                           ;controlMemory_MC50.c: 229:         var_sys_NVM.Stopboton = 1;
 20776  005BEE  0E01               	movlw	1
 20777  005BF0  6FAE               	movwf	(_var_sys_NVM+22)& (0+255),b	;volatile
 20778                           
 20779                           ;controlMemory_MC50.c: 230:         var_sys_NVM.autoTimeFullClose = 0;
 20780  005BF2  0E00               	movlw	0
 20781  005BF4  6F9D               	movwf	(_var_sys_NVM+5)& (0+255),b	;volatile
 20782                           
 20783                           ;controlMemory_MC50.c: 231:         var_sys_NVM.operationMode = 0;
 20784  005BF6  0E00               	movlw	0
 20785  005BF8  6FA4               	movwf	(_var_sys_NVM+12)& (0+255),b	;volatile
 20786                           
 20787                           ;controlMemory_MC50.c: 232:         var_sys_NVM.velocityDecelaration = 5;
 20788  005BFA  0E05               	movlw	5
 20789  005BFC  6FB0               	movwf	(_var_sys_NVM+24)& (0+255),b	;volatile
 20790                           
 20791                           ;controlMemory_MC50.c: 233:         var_sys_NVM.flashRGBMode = 3;
 20792  005BFE  0E03               	movlw	3
 20793  005C00  6FB1               	movwf	(_var_sys_NVM+25)& (0+255),b	;volatile
 20794                           
 20795                           ;controlMemory_MC50.c: 234:         var_sys_NVM.softstop = 0;
 20796  005C02  0E00               	movlw	0
 20797  005C04  6FAB               	movwf	(_var_sys_NVM+19)& (0+255),b	;volatile
 20798                           
 20799                           ;controlMemory_MC50.c: 235:         var_sys_NVM.softStart = 5;
 20800  005C06  0E05               	movlw	5
 20801  005C08  6FAA               	movwf	(_var_sys_NVM+18)& (0+255),b	;volatile
 20802                           
 20803                           ;controlMemory_MC50.c: 236:         var_sys_NVM.walkTime = 0;
 20804  005C0A  0E00               	movlw	0
 20805  005C0C  6F9C               	movwf	(_var_sys_NVM+4)& (0+255),b	;volatile
 20806                           
 20807                           ;controlMemory_MC50.c: 237:         var_sys_NVM.Direction_motor = 0 ;
 20808  005C0E  0E00               	movlw	0
 20809  005C10  6FB3               	movwf	(_var_sys_NVM+27)& (0+255),b	;volatile
 20810                           
 20811                           ;controlMemory_MC50.c: 239:     }
 20812  005C12  D01C               	goto	l19919
 20813  005C14                     l19915:
 20814                           
 20815                           ; BSR set to: 0
 20816  005C14  0E02               	movlw	2
 20817  005C16  183A               	xorwf	ResetDefaultMemory@type^0,w,c
 20818  005C18  A4D8               	btfss	status,2,c
 20819  005C1A  D018               	goto	l19919
 20820                           
 20821                           ; BSR set to: 0
 20822                           ;controlMemory_MC50.c: 241:         var_sys_NVM.decelarationClose = 6;
 20823  005C1C  0E06               	movlw	6
 20824  005C1E  6F99               	movwf	(_var_sys_NVM+1)& (0+255),b	;volatile
 20825                           
 20826                           ;controlMemory_MC50.c: 242:         var_sys_NVM.decelarationOpen = 2;
 20827  005C20  0E02               	movlw	2
 20828  005C22  6F98               	movwf	_var_sys_NVM& (0+255),b	;volatile
 20829                           
 20830                           ;controlMemory_MC50.c: 243:         var_sys_NVM.motorSensitivity = 0;
 20831  005C24  0E00               	movlw	0
 20832  005C26  6F9B               	movwf	(_var_sys_NVM+3)& (0+255),b	;volatile
 20833                           
 20834                           ;controlMemory_MC50.c: 244:         var_sys_NVM.logicDigital = 0;
 20835  005C28  0E00               	movlw	0
 20836  005C2A  6FA9               	movwf	(_var_sys_NVM+17)& (0+255),b	;volatile
 20837                           
 20838                           ;controlMemory_MC50.c: 245:         var_sys_NVM.Stopboton = 0;
 20839  005C2C  0E00               	movlw	0
 20840  005C2E  6FAE               	movwf	(_var_sys_NVM+22)& (0+255),b	;volatile
 20841                           
 20842                           ;controlMemory_MC50.c: 246:         var_sys_NVM.autoTimeFullClose = 0;
 20843  005C30  0E00               	movlw	0
 20844  005C32  6F9D               	movwf	(_var_sys_NVM+5)& (0+255),b	;volatile
 20845                           
 20846                           ;controlMemory_MC50.c: 247:         var_sys_NVM.operationMode = 2;
 20847  005C34  0E02               	movlw	2
 20848  005C36  6FA4               	movwf	(_var_sys_NVM+12)& (0+255),b	;volatile
 20849                           
 20850                           ;controlMemory_MC50.c: 248:         var_sys_NVM.velocityDecelaration = 5;
 20851  005C38  0E05               	movlw	5
 20852  005C3A  6FB0               	movwf	(_var_sys_NVM+24)& (0+255),b	;volatile
 20853                           
 20854                           ;controlMemory_MC50.c: 249:         var_sys_NVM.flashRGBMode = 1;
 20855  005C3C  0E01               	movlw	1
 20856  005C3E  6FB1               	movwf	(_var_sys_NVM+25)& (0+255),b	;volatile
 20857                           
 20858                           ;controlMemory_MC50.c: 250:         var_sys_NVM.softstop = 5;
 20859  005C40  0E05               	movlw	5
 20860  005C42  6FAB               	movwf	(_var_sys_NVM+19)& (0+255),b	;volatile
 20861                           
 20862                           ;controlMemory_MC50.c: 251:         var_sys_NVM.softStart = 0;
 20863  005C44  0E00               	movlw	0
 20864  005C46  6FAA               	movwf	(_var_sys_NVM+18)& (0+255),b	;volatile
 20865                           
 20866                           ;controlMemory_MC50.c: 252:         var_sys_NVM.walkTime = 0;
 20867  005C48  0E00               	movlw	0
 20868  005C4A                     L82:
 20869  005C4A  6F9C               	movwf	(_var_sys_NVM+4)& (0+255),b	;volatile
 20870  005C4C                     l19919:
 20871                           
 20872                           ; BSR set to: 0
 20873                           ;controlMemory_MC50.c: 260:     SaveNVM_VarSystem(pageMemoryE);
 20874  005C4C  0E01               	movlw	1
 20875  005C4E  EC06  F045         	call	_SaveNVM_VarSystem
 20876                           
 20877                           ;controlMemory_MC50.c: 261:     SaveNVM_VarSystem(pageMemoryP);
 20878  005C52  0E00               	movlw	0
 20879  005C54  EC06  F045         	call	_SaveNVM_VarSystem
 20880                           
 20881                           ;controlMemory_MC50.c: 266:     var_sys_NVM.learningTimeToClose = 0;
 20882  005C58  0E00               	movlw	0
 20883  005C5A  0100               	movlb	0	; () banked
 20884  005C5C  6FD0               	movwf	(_var_sys_NVM+56)& (0+255),b	;volatile
 20885  005C5E  0E00               	movlw	0
 20886  005C60  6FD1               	movwf	(_var_sys_NVM+57)& (0+255),b	;volatile
 20887  005C62  0E00               	movlw	0
 20888  005C64  6FD2               	movwf	(_var_sys_NVM+58)& (0+255),b	;volatile
 20889  005C66  0E00               	movlw	0
 20890  005C68  6FD3               	movwf	(_var_sys_NVM+59)& (0+255),b	;volatile
 20891                           
 20892                           ;controlMemory_MC50.c: 267:     var_sys_NVM.learningTimeToOpen = 0;
 20893  005C6A  0E00               	movlw	0
 20894  005C6C  6FCC               	movwf	(_var_sys_NVM+52)& (0+255),b	;volatile
 20895  005C6E  0E00               	movlw	0
 20896  005C70  6FCD               	movwf	(_var_sys_NVM+53)& (0+255),b	;volatile
 20897  005C72  0E00               	movlw	0
 20898  005C74  6FCE               	movwf	(_var_sys_NVM+54)& (0+255),b	;volatile
 20899  005C76  0E00               	movlw	0
 20900  005C78  6FCF               	movwf	(_var_sys_NVM+55)& (0+255),b	;volatile
 20901                           
 20902                           ;controlMemory_MC50.c: 268:     var_sys_NVM.learningCurrentNormalClose = 0;
 20903  005C7A  0E00               	movlw	0
 20904  005C7C  6FC9               	movwf	(_var_sys_NVM+49)& (0+255),b	;volatile
 20905  005C7E  0E00               	movlw	0
 20906  005C80  6FC8               	movwf	(_var_sys_NVM+48)& (0+255),b	;volatile
 20907                           
 20908                           ;controlMemory_MC50.c: 269:     var_sys_NVM.learningCurrentNormalOpen = 0;
 20909  005C82  0E00               	movlw	0
 20910  005C84  6FCB               	movwf	(_var_sys_NVM+51)& (0+255),b	;volatile
 20911  005C86  0E00               	movlw	0
 20912  005C88  6FCA               	movwf	(_var_sys_NVM+50)& (0+255),b	;volatile
 20913                           
 20914                           ;controlMemory_MC50.c: 270:     var_sys_NVM.learningCurrentDecelarationClose = 0;
 20915  005C8A  0E00               	movlw	0
 20916  005C8C  6FC0               	movwf	(_var_sys_NVM+40)& (0+255),b	;volatile
 20917  005C8E  0E00               	movlw	0
 20918  005C90  6FC1               	movwf	(_var_sys_NVM+41)& (0+255),b	;volatile
 20919  005C92  0E00               	movlw	0
 20920  005C94  6FC2               	movwf	(_var_sys_NVM+42)& (0+255),b	;volatile
 20921  005C96  0E00               	movlw	0
 20922  005C98  6FC3               	movwf	(_var_sys_NVM+43)& (0+255),b	;volatile
 20923                           
 20924                           ;controlMemory_MC50.c: 271:     var_sys_NVM.learningCurrentDecelarationOpen = 0;
 20925  005C9A  0E00               	movlw	0
 20926  005C9C  6FC4               	movwf	(_var_sys_NVM+44)& (0+255),b	;volatile
 20927  005C9E  0E00               	movlw	0
 20928  005CA0  6FC5               	movwf	(_var_sys_NVM+45)& (0+255),b	;volatile
 20929  005CA2  0E00               	movlw	0
 20930  005CA4  6FC6               	movwf	(_var_sys_NVM+46)& (0+255),b	;volatile
 20931  005CA6  0E00               	movlw	0
 20932  005CA8  6FC7               	movwf	(_var_sys_NVM+47)& (0+255),b	;volatile
 20933                           
 20934                           ; BSR set to: 0
 20935                           ;controlMemory_MC50.c: 277:     if ((PORTAbits.RA2 == 0) && (PORTAbits.RA1 == 0) && (POR
      +                          TBbits.RB0 == 0)&&(PORTAbits.RA5==0)){
 20936  005CAA  A48D               	btfss	141,2,c	;volatile
 20937                           
 20938                           ; BSR set to: 0
 20939  005CAC  B28D               	btfsc	141,1,c	;volatile
 20940  005CAE  D015               	goto	l19933
 20941                           
 20942                           ; BSR set to: 0
 20943  005CB0  A08E               	btfss	142,0,c	;volatile
 20944                           
 20945                           ; BSR set to: 0
 20946  005CB2  BA8D               	btfsc	141,5,c	;volatile
 20947  005CB4  D012               	goto	l19933
 20948                           
 20949                           ; BSR set to: 0
 20950                           ;controlMemory_MC50.c: 278:      var_sys.actualCounterMoves = 0;
 20951  005CB6  0E00               	movlw	0
 20952  005CB8  0101               	movlb	1	; () banked
 20953  005CBA  6F3C               	movwf	(_var_sys+60)& (0+255),b	;volatile
 20954  005CBC  0E00               	movlw	0
 20955  005CBE  6F3D               	movwf	(_var_sys+61)& (0+255),b	;volatile
 20956  005CC0  0E00               	movlw	0
 20957  005CC2  6F3E               	movwf	(_var_sys+62)& (0+255),b	;volatile
 20958  005CC4  0E00               	movlw	0
 20959  005CC6  6F3F               	movwf	(_var_sys+63)& (0+255),b	;volatile
 20960                           
 20961                           ;controlMemory_MC50.c: 279:      var_sys_NVM.counterMoves = 0;
 20962  005CC8  0E00               	movlw	0
 20963  005CCA  0100               	movlb	0	; () banked
 20964  005CCC  6FBA               	movwf	(_var_sys_NVM+34)& (0+255),b	;volatile
 20965  005CCE  0E00               	movlw	0
 20966  005CD0  6FBB               	movwf	(_var_sys_NVM+35)& (0+255),b	;volatile
 20967  005CD2  0E00               	movlw	0
 20968  005CD4  6FBC               	movwf	(_var_sys_NVM+36)& (0+255),b	;volatile
 20969  005CD6  0E00               	movlw	0
 20970  005CD8  6FBD               	movwf	(_var_sys_NVM+37)& (0+255),b	;volatile
 20971  005CDA                     l19933:
 20972                           
 20973                           ; BSR set to: 0
 20974                           ;controlMemory_MC50.c: 284:     SaveNVM_VarSystem(pageMemoryCounters);
 20975  005CDA  0E02               	movlw	2
 20976  005CDC  EC06  F045         	call	_SaveNVM_VarSystem
 20977                           
 20978                           ;controlMemory_MC50.c: 285:     SaveNVM_VarSystem(pageMemoryLearningVars);
 20979  005CE0  0E03               	movlw	3
 20980  005CE2  EC06  F045         	call	_SaveNVM_VarSystem
 20981  005CE6  0012               	return		;funcret
 20982  005CE8                     __end_of_ResetDefaultMemory:
 20983                           	callstack 0
 20984                           
 20985 ;; *************** function _I2C1_Read1ByteRegister *****************
 20986 ;; Defined at:
 20987 ;;		line 65 in file "mcc_generated_files/examples/i2c1_master_example.c"
 20988 ;; Parameters:    Size  Location     Type
 20989 ;;  address         1    wreg     unsigned char 
 20990 ;;  reg             1   33[COMRAM] unsigned char 
 20991 ;; Auto vars:     Size  Location     Type
 20992 ;;  address         1   34[COMRAM] unsigned char 
 20993 ;;  returnValue     1   35[COMRAM] unsigned char 
 20994 ;; Return value:  Size  Location     Type
 20995 ;;                  1    wreg      unsigned char 
 20996 ;; Registers used:
 20997 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20998 ;; Tracked objects:
 20999 ;;		On entry : 31/0
 21000 ;;		On exit  : 33/2
 21001 ;;		Unchanged: 0/0
 21002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21003 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21004 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21006 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21007 ;;Total ram usage:        3 bytes
 21008 ;; Hardware stack levels used: 1
 21009 ;; Hardware stack levels required when called: 12
 21010 ;; This function calls:
 21011 ;;		_I2C1_Close
 21012 ;;		_I2C1_MasterWrite
 21013 ;;		_I2C1_Open
 21014 ;;		_I2C1_SetAddressNackCallback
 21015 ;;		_I2C1_SetBuffer
 21016 ;;		_I2C1_SetDataCompleteCallback
 21017 ;; This function is called by:
 21018 ;;		_loadNVM_VarSystem
 21019 ;; This function uses a non-reentrant model
 21020 ;;
 21021                           
 21022                           	psect	text77
 21023  008302                     __ptext77:
 21024                           	callstack 0
 21025  008302                     _I2C1_Read1ByteRegister:
 21026                           	callstack 17
 21027                           
 21028                           ;incstack = 0
 21029                           ;I2C1_Read1ByteRegister@address stored from wreg
 21030  008302  6E23               	movwf	I2C1_Read1ByteRegister@address^0,c
 21031                           
 21032                           ;mcc_generated_files/examples/i2c1_master_example.c: 65: uint8_t I2C1_Read1ByteRegister(
      +                          i2c1_address_t address, uint8_t reg);mcc_generated_files/examples/i2c1_master_example.c:
      +                           66: {;mcc_generated_files/examples/i2c1_master_example.c: 67:     uint8_t returnValue =
      +                           0x00;
 21033  008304  0E00               	movlw	0
 21034  008306  6E24               	movwf	I2C1_Read1ByteRegister@returnValue^0,c
 21035  008308                     l21085:
 21036  008308  5023               	movf	I2C1_Read1ByteRegister@address^0,w,c
 21037  00830A  ECE0  F03C         	call	_I2C1_Open
 21038  00830E  0900               	iorlw	0
 21039  008310  B4D8               	btfsc	status,2,c
 21040  008312  D7FA               	goto	l21085
 21041                           
 21042                           ;mcc_generated_files/examples/i2c1_master_example.c: 70:     I2C1_SetDataCompleteCallbac
      +                          k(rd1RegCompleteHandler,&returnValue);
 21043  008314  0E42               	movlw	low _rd1RegCompleteHandler@i2c1_master_example$F500
 21044  008316  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 21045  008318  0E8C               	movlw	high _rd1RegCompleteHandler@i2c1_master_example$F500
 21046  00831A  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 21047  00831C  0E24               	movlw	low I2C1_Read1ByteRegister@returnValue
 21048  00831E  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 21049  008320  6A18               	clrf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 21050  008322  EC4D  F048         	call	_I2C1_SetDataCompleteCallback	;wreg free
 21051                           
 21052                           ;mcc_generated_files/examples/i2c1_master_example.c: 71:     I2C1_SetBuffer(&reg,1);
 21053  008326  0E22               	movlw	low I2C1_Read1ByteRegister@reg
 21054  008328  6E10               	movwf	I2C1_SetBuffer@buffer^0,c
 21055  00832A  6A11               	clrf	(I2C1_SetBuffer@buffer+1)^0,c
 21056  00832C  0E00               	movlw	0
 21057  00832E  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 21058  008330  0E01               	movlw	1
 21059  008332  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 21060  008334  EC04  F048         	call	_I2C1_SetBuffer	;wreg free
 21061                           
 21062                           ; BSR set to: 2
 21063                           ;mcc_generated_files/examples/i2c1_master_example.c: 72:     I2C1_SetAddressNackCallback
      +                          (((void*)0),((void*)0));
 21064  008338  0E00               	movlw	0
 21065  00833A  6E15               	movwf	I2C1_SetAddressNackCallback@cb^0,c
 21066  00833C  0E00               	movlw	0
 21067  00833E  6E16               	movwf	(I2C1_SetAddressNackCallback@cb+1)^0,c
 21068  008340  0E00               	movlw	0
 21069  008342  6E17               	movwf	I2C1_SetAddressNackCallback@ptr^0,c
 21070  008344  0E00               	movlw	0
 21071  008346  6E18               	movwf	(I2C1_SetAddressNackCallback@ptr+1)^0,c
 21072  008348  EC35  F048         	call	_I2C1_SetAddressNackCallback	;wreg free
 21073                           
 21074                           ;mcc_generated_files/examples/i2c1_master_example.c: 73:     I2C1_MasterWrite();
 21075  00834C  EC03  F049         	call	_I2C1_MasterWrite	;wreg free
 21076  008350                     l21095:
 21077  008350  EC76  F047         	call	_I2C1_Close	;wreg free
 21078  008354  06E8               	decf	wreg,f,c
 21079  008356  B4D8               	btfsc	status,2,c
 21080  008358  D7FB               	goto	l21095
 21081                           
 21082                           ;mcc_generated_files/examples/i2c1_master_example.c: 76:     return returnValue;
 21083  00835A  5024               	movf	I2C1_Read1ByteRegister@returnValue^0,w,c
 21084  00835C  0012               	return		;funcret
 21085  00835E                     __end_of_I2C1_Read1ByteRegister:
 21086                           	callstack 0
 21087                           
 21088 ;; *************** function _getKeyPressed *****************
 21089 ;; Defined at:
 21090 ;;		line 217 in file "inputs_MC50.c"
 21091 ;; Parameters:    Size  Location     Type
 21092 ;;		None
 21093 ;; Auto vars:     Size  Location     Type
 21094 ;;  temp            1   15[COMRAM] char 
 21095 ;; Return value:  Size  Location     Type
 21096 ;;                  1    wreg      char 
 21097 ;; Registers used:
 21098 ;;		wreg, status,2, status,0
 21099 ;; Tracked objects:
 21100 ;;		On entry : 3E/1
 21101 ;;		On exit  : 3D/0
 21102 ;;		Unchanged: 0/0
 21103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21104 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21105 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21107 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21108 ;;Total ram usage:        1 bytes
 21109 ;; Hardware stack levels used: 1
 21110 ;; Hardware stack levels required when called: 4
 21111 ;; This function calls:
 21112 ;;		Nothing
 21113 ;; This function is called by:
 21114 ;;		_main
 21115 ;; This function uses a non-reentrant model
 21116 ;;
 21117                           
 21118                           	psect	text78
 21119  009052                     __ptext78:
 21120                           	callstack 0
 21121  009052                     _getKeyPressed:
 21122                           	callstack 26
 21123                           
 21124                           ;inputs_MC50.c: 218:     signed char temp=-1;
 21125                           
 21126                           ;incstack = 0
 21127  009052  6810               	setf	getKeyPressed@temp^0,c
 21128                           
 21129                           ;inputs_MC50.c: 219:     if(RFFull)
 21130  009054  0100               	movlb	0	; () banked
 21131  009056  518B               	movf	_RFFull& (0+255),w,b	;volatile
 21132  009058  B4D8               	btfsc	status,2,c
 21133  00905A  D005               	goto	l16503
 21134                           
 21135                           ; BSR set to: 0
 21136                           ;inputs_MC50.c: 220:     {;inputs_MC50.c: 221:         temp=(BufferRF[7]&0xF0)>>4;
 21137  00905C  0102               	movlb	2	; () banked
 21138  00905E  39CF               	swapf	(_BufferRF+7)& (0+255),w,b
 21139  009060  0B0F               	andlw	15
 21140  009062  0B0F               	andlw	15
 21141  009064  6E10               	movwf	getKeyPressed@temp^0,c
 21142  009066                     l16503:
 21143                           
 21144                           ;inputs_MC50.c: 223:     return temp;
 21145  009066  5010               	movf	getKeyPressed@temp^0,w,c
 21146  009068  0012               	return		;funcret
 21147  00906A                     __end_of_getKeyPressed:
 21148                           	callstack 0
 21149                           
 21150 ;; *************** function _eusartparser *****************
 21151 ;; Defined at:
 21152 ;;		line 441 in file "eusartparser.c"
 21153 ;; Parameters:    Size  Location     Type
 21154 ;;  package         1   57[COMRAM] PTR struct package_t
 21155 ;;		 -> main@package(7), 
 21156 ;; Auto vars:     Size  Location     Type
 21157 ;;  a               7    0        struct package_t
 21158 ;; Return value:  Size  Location     Type
 21159 ;;                  1    wreg      void 
 21160 ;; Registers used:
 21161 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 21162 ;; Tracked objects:
 21163 ;;		On entry : 3F/E
 21164 ;;		On exit  : 0/0
 21165 ;;		Unchanged: 0/0
 21166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21167 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21168 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21169 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21170 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21171 ;;Total ram usage:        3 bytes
 21172 ;; Hardware stack levels used: 1
 21173 ;; Hardware stack levels required when called: 14
 21174 ;; This function calls:
 21175 ;;		_SaveNVM_VarSystem
 21176 ;;		_read_eusartparser
 21177 ;;		_write_eusartparser
 21178 ;;		_write_package
 21179 ;; This function is called by:
 21180 ;;		_main
 21181 ;; This function uses a non-reentrant model
 21182 ;;
 21183                           
 21184                           	psect	text79
 21185  006E7E                     __ptext79:
 21186                           	callstack 0
 21187  006E7E                     _eusartparser:
 21188                           	callstack 16
 21189                           
 21190                           ; BSR set to: 14
 21191                           ;eusartparser.c: 442:         struct package_t a;;eusartparser.c: 443:         switch(pa
      +                          ckage->functioncode){
 21192                           
 21193                           ;incstack = 0
 21194  006E7E  D04E               	goto	l22779
 21195  006E80                     l22751:
 21196                           
 21197                           ; BSR set to: 0
 21198                           ;eusartparser.c: 445:                 if(programmer_enable)
 21199  006E80  5185               	movf	_programmer_enable& (0+255),w,b
 21200  006E82  B4D8               	btfsc	status,2,c
 21201  006E84  0012               	return	
 21202                           
 21203                           ; BSR set to: 0
 21204                           ;eusartparser.c: 446:                     read_eusartparser(package);
 21205  006E86  C03A  F018         	movff	eusartparser@package,read_eusartparser@package
 21206  006E8A  ECD4  F014         	call	_read_eusartparser	;wreg free
 21207  006E8E  0012               	return	
 21208  006E90                     l22755:
 21209                           
 21210                           ; BSR set to: 0
 21211                           ;eusartparser.c: 450:                 if(programmer_enable)
 21212  006E90  5185               	movf	_programmer_enable& (0+255),w,b
 21213  006E92  B4D8               	btfsc	status,2,c
 21214  006E94  0012               	return	
 21215                           
 21216                           ; BSR set to: 0
 21217                           ;eusartparser.c: 451:                     write_eusartparser(*package);
 21218  006E96  503A               	movf	eusartparser@package^0,w,c
 21219  006E98  6ED9               	movwf	fsr2l,c
 21220  006E9A  6ADA               	clrf	fsr2h,c
 21221  006E9C  EE00  F010         	lfsr	0,write_eusartparser@package
 21222  006EA0  0E06               	movlw	6
 21223  006EA2                     u27771:
 21224  006EA2  CFDB FFEB          	movff	plusw2,plusw0
 21225  006EA6  06E8               	decf	wreg,f,c
 21226  006EA8  E2FC               	bc	u27771
 21227  006EAA  EC58  F017         	call	_write_eusartparser	;wreg free
 21228  006EAE  0012               	return	
 21229  006EB0                     l22759:
 21230                           
 21231                           ; BSR set to: 0
 21232                           ;eusartparser.c: 455:                 if(programmer_enable){
 21233  006EB0  5185               	movf	_programmer_enable& (0+255),w,b
 21234  006EB2  B4D8               	btfsc	status,2,c
 21235  006EB4  D008               	goto	l22765
 21236                           
 21237                           ; BSR set to: 0
 21238                           ;eusartparser.c: 456:                     SaveNVM_VarSystem(pageMemoryE);
 21239  006EB6  0E01               	movlw	1
 21240  006EB8  EC06  F045         	call	_SaveNVM_VarSystem
 21241                           
 21242                           ;eusartparser.c: 457:                     SaveNVM_VarSystem(pageMemoryP);
 21243  006EBC  0E00               	movlw	0
 21244  006EBE  EC06  F045         	call	_SaveNVM_VarSystem
 21245                           
 21246                           ;eusartparser.c: 458:                     programmer_enable=0;
 21247  006EC2  0E00               	movlw	0
 21248  006EC4  D005               	goto	L83
 21249  006EC6                     l22765:
 21250                           
 21251                           ; BSR set to: 0
 21252                           ;eusartparser.c: 461:                     if((sm_state_Main_t)main_stateMachine.current_
      +                          state==st_standBy)
 21253  006EC6  0101               	movlb	1	; () banked
 21254  006EC8  51ED               	movf	_main_stateMachine& (0+255),w,b
 21255  006ECA  A4D8               	btfss	status,2,c
 21256  006ECC  D004               	goto	l22769
 21257                           
 21258                           ; BSR set to: 1
 21259                           ;eusartparser.c: 462:                         programmer_enable=1;
 21260  006ECE  0E01               	movlw	1
 21261  006ED0                     L83:
 21262  006ED0  0100               	movlb	0	; () banked
 21263  006ED2  6F85               	movwf	_programmer_enable& (0+255),b
 21264  006ED4  D016               	goto	l22773
 21265  006ED6                     l22769:
 21266                           
 21267                           ; BSR set to: 1
 21268                           ;eusartparser.c: 464:                         package->data.data16=(uint16_t)2;
 21269  006ED6  503A               	movf	eusartparser@package^0,w,c
 21270  006ED8  6ED9               	movwf	fsr2l,c
 21271  006EDA  6ADA               	clrf	fsr2h,c
 21272  006EDC  0E02               	movlw	2
 21273  006EDE  26D9               	addwf	fsr2l,f,c
 21274  006EE0  0E02               	movlw	2
 21275  006EE2  6EDE               	movwf	postinc2,c
 21276  006EE4  0E00               	movlw	0
 21277  006EE6  6EDD               	movwf	postdec2,c
 21278  006EE8                     l22771:
 21279                           
 21280                           ;eusartparser.c: 465:                         write_package(*package);
 21281  006EE8  503A               	movf	eusartparser@package^0,w,c
 21282  006EEA  6ED9               	movwf	fsr2l,c
 21283  006EEC  6ADA               	clrf	fsr2h,c
 21284  006EEE  EE00  F011         	lfsr	0,write_package@package
 21285  006EF2  0E06               	movlw	6
 21286  006EF4                     u27801:
 21287  006EF4  CFDB FFEB          	movff	plusw2,plusw0
 21288  006EF8  06E8               	decf	wreg,f,c
 21289  006EFA  E2FC               	bc	u27801
 21290  006EFC  ECB3  F045         	call	_write_package	;wreg free
 21291                           
 21292                           ;eusartparser.c: 466:                         break;
 21293  006F00  0012               	return	
 21294  006F02                     l22773:
 21295                           
 21296                           ; BSR set to: 0
 21297                           ;eusartparser.c: 470:                 package->data.data16=(uint16_t)programmer_enable;
 21298  006F02  5185               	movf	_programmer_enable& (0+255),w,b
 21299  006F04  6FDC               	movwf	??_eusartparser& (0+255),b
 21300  006F06  6BDD               	clrf	(??_eusartparser+1)& (0+255),b
 21301  006F08  503A               	movf	eusartparser@package^0,w,c
 21302  006F0A  6ED9               	movwf	fsr2l,c
 21303  006F0C  6ADA               	clrf	fsr2h,c
 21304  006F0E  0E02               	movlw	2
 21305  006F10  26D9               	addwf	fsr2l,f,c
 21306  006F12  C0DC  FFDE         	movff	??_eusartparser,postinc2
 21307  006F16  C0DD  FFDD         	movff	??_eusartparser+1,postdec2
 21308  006F1A  D7E6               	goto	l22771
 21309  006F1C                     l22779:
 21310                           
 21311                           ; BSR set to: 14
 21312  006F1C  503A               	movf	eusartparser@package^0,w,c
 21313  006F1E  6ED9               	movwf	fsr2l,c
 21314  006F20  6ADA               	clrf	fsr2h,c
 21315  006F22  50DF               	movf	indf2,w,c
 21316  006F24  0100               	movlb	0	; () banked
 21317  006F26  6FDC               	movwf	??_eusartparser& (0+255),b
 21318  006F28  6BDD               	clrf	(??_eusartparser+1)& (0+255),b
 21319                           
 21320                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 21321                           ; Switch size 1, requested type "simple"
 21322                           ; Number of cases is 1, Range of values is 0 to 0
 21323                           ; switch strategies available:
 21324                           ; Name         Instructions Cycles
 21325                           ; simple_byte            4     3 (average)
 21326                           ;	Chosen strategy is simple_byte
 21327  006F2A  51DD               	movf	(??_eusartparser+1)& (0+255),w,b
 21328  006F2C  0A00               	xorlw	0	; case 0
 21329  006F2E  A4D8               	btfss	status,2,c
 21330  006F30  0012               	return	
 21331                           
 21332                           ; BSR set to: 0
 21333                           ; Switch size 1, requested type "simple"
 21334                           ; Number of cases is 3, Range of values is 0 to 2
 21335                           ; switch strategies available:
 21336                           ; Name         Instructions Cycles
 21337                           ; simple_byte           10     6 (average)
 21338                           ;	Chosen strategy is simple_byte
 21339  006F32  51DC               	movf	??_eusartparser& (0+255),w,b
 21340  006F34  0A00               	xorlw	0	; case 0
 21341  006F36  B4D8               	btfsc	status,2,c
 21342  006F38  D7A3               	goto	l22751
 21343  006F3A  0A01               	xorlw	1	; case 1
 21344  006F3C  B4D8               	btfsc	status,2,c
 21345  006F3E  D7A8               	goto	l22755
 21346  006F40  0A03               	xorlw	3	; case 2
 21347  006F42  A4D8               	btfss	status,2,c
 21348  006F44  0012               	return	
 21349  006F46  D7B4               	goto	l22759
 21350  006F48                     __end_of_eusartparser:
 21351                           	callstack 0
 21352                           
 21353 ;; *************** function _write_eusartparser *****************
 21354 ;; Defined at:
 21355 ;;		line 241 in file "eusartparser.c"
 21356 ;; Parameters:    Size  Location     Type
 21357 ;;  package         7   15[COMRAM] struct package_t
 21358 ;; Auto vars:     Size  Location     Type
 21359 ;;  debug2          2   32[COMRAM] volatile int 
 21360 ;;  debug           2   30[COMRAM] volatile int 
 21361 ;; Return value:  Size  Location     Type
 21362 ;;                  1    wreg      void 
 21363 ;; Registers used:
 21364 ;;		wreg, status,2, status,0
 21365 ;; Tracked objects:
 21366 ;;		On entry : 3F/0
 21367 ;;		On exit  : 3F/0
 21368 ;;		Unchanged: 0/0
 21369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21370 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21371 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21372 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21373 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21374 ;;Total ram usage:       19 bytes
 21375 ;; Hardware stack levels used: 1
 21376 ;; Hardware stack levels required when called: 4
 21377 ;; This function calls:
 21378 ;;		Nothing
 21379 ;; This function is called by:
 21380 ;;		_eusartparser
 21381 ;; This function uses a non-reentrant model
 21382 ;;
 21383                           
 21384                           	psect	text80
 21385  002EB0                     __ptext80:
 21386                           	callstack 0
 21387  002EB0                     _write_eusartparser:
 21388                           	callstack 25
 21389                           
 21390                           ; BSR set to: 0
 21391                           ;eusartparser.c: 242:         volatile int debug=(uint8_t)package.address;
 21392                           
 21393                           ;incstack = 0
 21394  002EB0  C011  F01F         	movff	write_eusartparser@package+1,write_eusartparser@debug	;volatile
 21395  002EB4  6A20               	clrf	(write_eusartparser@debug+1)^0,c	;volatile
 21396                           
 21397                           ; BSR set to: 0
 21398                           ;eusartparser.c: 243:         volatile int debug2=0x10;
 21399  002EB6  0E00               	movlw	0
 21400  002EB8  6E22               	movwf	(write_eusartparser@debug2+1)^0,c	;volatile
 21401  002EBA  0E10               	movlw	16
 21402  002EBC  6E21               	movwf	write_eusartparser@debug2^0,c	;volatile
 21403                           
 21404                           ;eusartparser.c: 244:         switch((uint8_t)package.address){
 21405  002EBE  D180               	goto	l16195
 21406  002EC0                     l3587:
 21407                           
 21408                           ; BSR set to: 0
 21409                           ;eusartparser.c: 249:                 var_sys_NVM.decelarationOpen=package.data.data8[0]
      +                          ;
 21410  002EC0  C012  F098         	movff	write_eusartparser@package+2,_var_sys_NVM	;volatile
 21411                           
 21412                           ;eusartparser.c: 250:                 var_sys_NVM.decelarationClose=package.data.data8[1
      +                          ];
 21413  002EC4  C013  F099         	movff	write_eusartparser@package+3,_var_sys_NVM+1	;volatile
 21414                           
 21415                           ;eusartparser.c: 251:                 break;
 21416  002EC8  0012               	return	
 21417  002ECA                     l3589:
 21418                           
 21419                           ; BSR set to: 0
 21420                           ;eusartparser.c: 255:                 var_sys_NVM.motorPower=package.data.data8[0];
 21421  002ECA  C012  F09A         	movff	write_eusartparser@package+2,_var_sys_NVM+2	;volatile
 21422                           
 21423                           ;eusartparser.c: 256:                 var_sys_NVM.motorSensitivity=package.data.data8[1]
      +                          ;
 21424  002ECE  C013  F09B         	movff	write_eusartparser@package+3,_var_sys_NVM+3	;volatile
 21425                           
 21426                           ;eusartparser.c: 257:                 break;
 21427  002ED2  0012               	return	
 21428  002ED4                     l3590:
 21429                           
 21430                           ; BSR set to: 0
 21431                           ;eusartparser.c: 261:                 var_sys_NVM.walkTime=package.data.data8[1];
 21432  002ED4  C013  F09C         	movff	write_eusartparser@package+3,_var_sys_NVM+4	;volatile
 21433                           
 21434                           ;eusartparser.c: 262:                 break;
 21435  002ED8  0012               	return	
 21436  002EDA                     l3592:
 21437                           
 21438                           ; BSR set to: 0
 21439                           ;eusartparser.c: 267:                 var_sys_NVM.autoTimeFullClose=package.data.data8[0
      +                          ];
 21440  002EDA  C012  F09D         	movff	write_eusartparser@package+2,_var_sys_NVM+5	;volatile
 21441                           
 21442                           ;eusartparser.c: 268:                 var_sys_NVM.autoTimeWalkClose=package.data.data8[1
      +                          ];
 21443  002EDE  C013  F09E         	movff	write_eusartparser@package+3,_var_sys_NVM+6	;volatile
 21444                           
 21445                           ;eusartparser.c: 269:                 break;
 21446  002EE2  0012               	return	
 21447  002EE4                     l3594:
 21448                           
 21449                           ; BSR set to: 0
 21450                           ;eusartparser.c: 274:                 var_sys_NVM.photoCellIsON=package.data.data8[0];
 21451  002EE4  C012  F09F         	movff	write_eusartparser@package+2,_var_sys_NVM+7	;volatile
 21452                           
 21453                           ;eusartparser.c: 275:                 var_sys_NVM.photoCellInOpen=package.data.data8[1];
 21454  002EE8  C013  F0A0         	movff	write_eusartparser@package+3,_var_sys_NVM+8	;volatile
 21455                           
 21456                           ;eusartparser.c: 276:                 break;
 21457  002EEC  0012               	return	
 21458  002EEE                     l3595:
 21459                           
 21460                           ; BSR set to: 0
 21461                           ;eusartparser.c: 280:                 var_sys_NVM.securityBandIsON=package.data.data8[0]
      +                          ;
 21462  002EEE  C012  F0A1         	movff	write_eusartparser@package+2,_var_sys_NVM+9	;volatile
 21463                           
 21464                           ;eusartparser.c: 281:                 var_sys_NVM.securityBandType=package.data.data8[1]
      +                          ;
 21465  002EF2  C013  F0A2         	movff	write_eusartparser@package+3,_var_sys_NVM+10	;volatile
 21466                           
 21467                           ;eusartparser.c: 282:                 break;
 21468  002EF6  0012               	return	
 21469  002EF8                     l3596:
 21470                           
 21471                           ; BSR set to: 0
 21472                           ;eusartparser.c: 286:                 var_sys_NVM.securityBandInOpen=package.data.data8[
      +                          1];
 21473  002EF8  C013  F0A3         	movff	write_eusartparser@package+3,_var_sys_NVM+11	;volatile
 21474                           
 21475                           ;eusartparser.c: 287:                 break;
 21476  002EFC  0012               	return	
 21477  002EFE                     l3597:
 21478                           
 21479                           ; BSR set to: 0
 21480                           ;eusartparser.c: 291:                 var_sys_NVM.operationMode=package.data.data8[1];
 21481  002EFE  C013  F0A4         	movff	write_eusartparser@package+3,_var_sys_NVM+12	;volatile
 21482                           
 21483                           ;eusartparser.c: 292:                 break;
 21484  002F02  0012               	return	
 21485  002F04                     l3598:
 21486                           
 21487                           ; BSR set to: 0
 21488                           ;eusartparser.c: 296:                 var_sys_NVM.flashLightMode=package.data.data8[1];
 21489  002F04  C013  F0A5         	movff	write_eusartparser@package+3,_var_sys_NVM+13	;volatile
 21490                           
 21491                           ;eusartparser.c: 297:                 break;
 21492  002F08  0012               	return	
 21493  002F0A                     l3599:
 21494                           
 21495                           ; BSR set to: 0
 21496                           ;eusartparser.c: 301:                 var_sys_NVM.programmingDistance=package.data.data8
      +                          [1];
 21497  002F0A  C013  F0A6         	movff	write_eusartparser@package+3,_var_sys_NVM+14	;volatile
 21498                           
 21499                           ;eusartparser.c: 302:                 break;
 21500  002F0E  0012               	return	
 21501  002F10                     l3600:
 21502                           
 21503                           ; BSR set to: 0
 21504                           ;eusartparser.c: 306:                 var_sys_NVM.decelarationSensivity=package.data.dat
      +                          a8[1];
 21505  002F10  C013  F0A7         	movff	write_eusartparser@package+3,_var_sys_NVM+15	;volatile
 21506                           
 21507                           ;eusartparser.c: 307:                 break;
 21508  002F14  0012               	return	
 21509  002F16                     l3601:
 21510                           
 21511                           ; BSR set to: 0
 21512                           ;eusartparser.c: 312:                 var_sys_NVM.homemPresente=package.data.data8[1];
 21513  002F16  C013  F0A8         	movff	write_eusartparser@package+3,_var_sys_NVM+16	;volatile
 21514                           
 21515                           ;eusartparser.c: 313:                 break;
 21516  002F1A  0012               	return	
 21517  002F1C                     l3603:
 21518                           
 21519                           ; BSR set to: 0
 21520                           ;eusartparser.c: 318:                 var_sys_NVM.logicDigital=package.data.data8[1];
 21521  002F1C  C013  F0A9         	movff	write_eusartparser@package+3,_var_sys_NVM+17	;volatile
 21522                           
 21523                           ;eusartparser.c: 319:                 break;
 21524  002F20  0012               	return	
 21525  002F22                     l3604:
 21526                           
 21527                           ; BSR set to: 0
 21528                           ;eusartparser.c: 323:                 var_sys_NVM.softStart=package.data.data8[0];
 21529  002F22  C012  F0AA         	movff	write_eusartparser@package+2,_var_sys_NVM+18	;volatile
 21530                           
 21531                           ;eusartparser.c: 324:                 var_sys_NVM.softstop=package.data.data8[1];
 21532  002F26  C013  F0AB         	movff	write_eusartparser@package+3,_var_sys_NVM+19	;volatile
 21533                           
 21534                           ;eusartparser.c: 325:                 break;
 21535  002F2A  0012               	return	
 21536  002F2C                     l3606:
 21537                           
 21538                           ; BSR set to: 0
 21539                           ;eusartparser.c: 330:                 var_sys_NVM.ligthTime=package.data.data8[1];
 21540  002F2C  C013  F0AC         	movff	write_eusartparser@package+3,_var_sys_NVM+20	;volatile
 21541                           
 21542                           ;eusartparser.c: 331:                 break;
 21543  002F30  0012               	return	
 21544  002F32                     l3608:
 21545                           
 21546                           ; BSR set to: 0
 21547                           ;eusartparser.c: 336:                 var_sys_NVM.folow_me=package.data.data8[1];
 21548  002F32  C013  F0AD         	movff	write_eusartparser@package+3,_var_sys_NVM+21	;volatile
 21549                           
 21550                           ;eusartparser.c: 337:                 break;
 21551  002F36  0012               	return	
 21552  002F38                     l3609:
 21553                           
 21554                           ; BSR set to: 0
 21555                           ;eusartparser.c: 341:                 var_sys_NVM.Stopboton=package.data.data8[1];
 21556  002F38  C013  F0AE         	movff	write_eusartparser@package+3,_var_sys_NVM+22	;volatile
 21557                           
 21558                           ;eusartparser.c: 342:                 break;
 21559  002F3C  0012               	return	
 21560  002F3E                     l3610:
 21561                           
 21562                           ; BSR set to: 0
 21563                           ;eusartparser.c: 346:                 var_sys_NVM.electricBrake=package.data.data8[1];
 21564  002F3E  C013  F0AF         	movff	write_eusartparser@package+3,_var_sys_NVM+23	;volatile
 21565                           
 21566                           ;eusartparser.c: 347:                 break;
 21567  002F42  0012               	return	
 21568  002F44                     l3611:
 21569                           
 21570                           ; BSR set to: 0
 21571                           ;eusartparser.c: 351:                 var_sys_NVM.velocityDecelaration=package.data.data
      +                          8[1];
 21572  002F44  C013  F0B0         	movff	write_eusartparser@package+3,_var_sys_NVM+24	;volatile
 21573                           
 21574                           ;eusartparser.c: 352:                 break;
 21575  002F48  0012               	return	
 21576  002F4A                     l3613:
 21577                           
 21578                           ; BSR set to: 0
 21579                           ;eusartparser.c: 357:                 var_sys_NVM.flashRGBMode=package.data.data8[1];
 21580  002F4A  C013  F0B1         	movff	write_eusartparser@package+3,_var_sys_NVM+25	;volatile
 21581                           
 21582                           ;eusartparser.c: 358:                 break;
 21583  002F4E  0012               	return	
 21584  002F50                     l3614:
 21585                           
 21586                           ; BSR set to: 0
 21587                           ;eusartparser.c: 362:                 var_sys_NVM.Direction_motor=package.data.data8[1];
 21588  002F50  C013  F0B3         	movff	write_eusartparser@package+3,_var_sys_NVM+27	;volatile
 21589                           
 21590                           ;eusartparser.c: 363:                 break;
 21591  002F54  0012               	return	
 21592  002F56                     l3615:
 21593                           
 21594                           ; BSR set to: 0
 21595                           ;eusartparser.c: 367:                 var_sys_NVM.TypeofMotor=package.data.data8[1];
 21596  002F56  C013  F0B4         	movff	write_eusartparser@package+3,_var_sys_NVM+28	;volatile
 21597                           
 21598                           ;eusartparser.c: 368:                 break;
 21599  002F5A  0012               	return	
 21600  002F5C                     l3616:
 21601                           
 21602                           ; BSR set to: 0
 21603                           ;eusartparser.c: 372:                 var_sys_NVM.positionRemotesFull=package.data.data8
      +                          [0];
 21604  002F5C  C012  F0B8         	movff	write_eusartparser@package+2,_var_sys_NVM+32	;volatile
 21605                           
 21606                           ;eusartparser.c: 373:                 var_sys_NVM.positionRemotesWalk=package.data.data8
      +                          [1];
 21607  002F60  C013  F0B9         	movff	write_eusartparser@package+3,_var_sys_NVM+33	;volatile
 21608                           
 21609                           ;eusartparser.c: 374:                 break;
 21610  002F64  0012               	return	
 21611  002F66                     l16173:
 21612                           
 21613                           ; BSR set to: 0
 21614                           ;eusartparser.c: 377:                 var_sys_NVM.counterMoves=var_sys_NVM.counterMoves|
      +                          ((uint32_t)(package.data.data16&0xFFFF)<<(uint8_t)(1*16));
 21615  002F66  5012               	movf	(write_eusartparser@package+2)^0,w,c
 21616  002F68  6E17               	movwf	??_write_eusartparser^0,c
 21617  002F6A  5013               	movf	(write_eusartparser@package+3)^0,w,c
 21618  002F6C  6E18               	movwf	(??_write_eusartparser+1)^0,c
 21619  002F6E  6A19               	clrf	(??_write_eusartparser+2)^0,c
 21620  002F70  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 21621  002F72  C018  F01A         	movff	??_write_eusartparser+1,??_write_eusartparser+3
 21622  002F76  C017  F019         	movff	??_write_eusartparser,??_write_eusartparser+2
 21623  002F7A  6A18               	clrf	(??_write_eusartparser+1)^0,c
 21624  002F7C  6A17               	clrf	??_write_eusartparser^0,c
 21625  002F7E  51BA               	movf	(_var_sys_NVM+34)& (0+255),w,b	;volatile
 21626  002F80  1017               	iorwf	??_write_eusartparser^0,w,c
 21627  002F82  6FBA               	movwf	(_var_sys_NVM+34)& (0+255),b	;volatile
 21628  002F84  51BB               	movf	(_var_sys_NVM+35)& (0+255),w,b	;volatile
 21629  002F86  1018               	iorwf	(??_write_eusartparser+1)^0,w,c
 21630  002F88  6FBB               	movwf	(_var_sys_NVM+35)& (0+255),b	;volatile
 21631  002F8A  51BC               	movf	(_var_sys_NVM+36)& (0+255),w,b	;volatile
 21632  002F8C  1019               	iorwf	(??_write_eusartparser+2)^0,w,c
 21633  002F8E  6FBC               	movwf	(_var_sys_NVM+36)& (0+255),b	;volatile
 21634  002F90  51BD               	movf	(_var_sys_NVM+37)& (0+255),w,b	;volatile
 21635  002F92  101A               	iorwf	(??_write_eusartparser+3)^0,w,c
 21636  002F94  6FBD               	movwf	(_var_sys_NVM+37)& (0+255),b	;volatile
 21637                           
 21638                           ;eusartparser.c: 378:                 var_sys_NVM.counterMoves=var_sys_NVM.counterMoves&
      +                          ~((uint32_t)(~package.data.data16&0xFFFF)<<(uint8_t)(1*16));
 21639  002F96  1C12               	comf	(write_eusartparser@package+2)^0,w,c
 21640  002F98  6E17               	movwf	??_write_eusartparser^0,c
 21641  002F9A  1C13               	comf	(write_eusartparser@package+3)^0,w,c
 21642  002F9C  6E18               	movwf	(??_write_eusartparser+1)^0,c
 21643  002F9E  6A19               	clrf	(??_write_eusartparser+2)^0,c
 21644  002FA0  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 21645  002FA2  C018  F01A         	movff	??_write_eusartparser+1,??_write_eusartparser+3
 21646  002FA6  C017  F019         	movff	??_write_eusartparser,??_write_eusartparser+2
 21647  002FAA  6A18               	clrf	(??_write_eusartparser+1)^0,c
 21648  002FAC  6A17               	clrf	??_write_eusartparser^0,c
 21649  002FAE  1C17               	comf	??_write_eusartparser^0,w,c
 21650  002FB0  6E1B               	movwf	(??_write_eusartparser+4)^0,c
 21651  002FB2  1C18               	comf	(??_write_eusartparser+1)^0,w,c
 21652  002FB4  6E1C               	movwf	(??_write_eusartparser+5)^0,c
 21653  002FB6  1C19               	comf	(??_write_eusartparser+2)^0,w,c
 21654  002FB8  6E1D               	movwf	(??_write_eusartparser+6)^0,c
 21655  002FBA  1C1A               	comf	(??_write_eusartparser+3)^0,w,c
 21656  002FBC  6E1E               	movwf	(??_write_eusartparser+7)^0,c
 21657  002FBE  51BA               	movf	(_var_sys_NVM+34)& (0+255),w,b	;volatile
 21658  002FC0  141B               	andwf	(??_write_eusartparser+4)^0,w,c
 21659  002FC2  6FBA               	movwf	(_var_sys_NVM+34)& (0+255),b	;volatile
 21660  002FC4  51BB               	movf	(_var_sys_NVM+35)& (0+255),w,b	;volatile
 21661  002FC6  141C               	andwf	(??_write_eusartparser+5)^0,w,c
 21662  002FC8  6FBB               	movwf	(_var_sys_NVM+35)& (0+255),b	;volatile
 21663  002FCA  51BC               	movf	(_var_sys_NVM+36)& (0+255),w,b	;volatile
 21664  002FCC  141D               	andwf	(??_write_eusartparser+6)^0,w,c
 21665  002FCE  6FBC               	movwf	(_var_sys_NVM+36)& (0+255),b	;volatile
 21666  002FD0  51BD               	movf	(_var_sys_NVM+37)& (0+255),w,b	;volatile
 21667  002FD2  141E               	andwf	(??_write_eusartparser+7)^0,w,c
 21668  002FD4  6FBD               	movwf	(_var_sys_NVM+37)& (0+255),b	;volatile
 21669                           
 21670                           ;eusartparser.c: 379:                 break;
 21671  002FD6  0012               	return	
 21672  002FD8                     l16175:
 21673                           
 21674                           ; BSR set to: 0
 21675                           ;eusartparser.c: 381:                 var_sys_NVM.counterMoves=var_sys_NVM.counterMoves|
      +                          ((uint32_t)(package.data.data16&0xFFFF)<<(uint8_t)(0*16));
 21676  002FD8  5012               	movf	(write_eusartparser@package+2)^0,w,c
 21677  002FDA  11BA               	iorwf	(_var_sys_NVM+34)& (0+255),w,b	;volatile
 21678  002FDC  6FBA               	movwf	(_var_sys_NVM+34)& (0+255),b	;volatile
 21679  002FDE  5013               	movf	(write_eusartparser@package+3)^0,w,c
 21680  002FE0  11BB               	iorwf	(_var_sys_NVM+35)& (0+255),w,b	;volatile
 21681  002FE2  6FBB               	movwf	(_var_sys_NVM+35)& (0+255),b	;volatile
 21682  002FE4  0E00               	movlw	0
 21683  002FE6  11BC               	iorwf	(_var_sys_NVM+36)& (0+255),w,b	;volatile
 21684  002FE8  6FBC               	movwf	(_var_sys_NVM+36)& (0+255),b	;volatile
 21685  002FEA  0E00               	movlw	0
 21686  002FEC  11BD               	iorwf	(_var_sys_NVM+37)& (0+255),w,b	;volatile
 21687  002FEE  6FBD               	movwf	(_var_sys_NVM+37)& (0+255),b	;volatile
 21688                           
 21689                           ;eusartparser.c: 382:                 var_sys_NVM.counterMoves=var_sys_NVM.counterMoves&
      +                          ~((uint32_t)(~package.data.data16&0xFFFF)<<(uint8_t)(0*16));
 21690  002FF0  1C12               	comf	(write_eusartparser@package+2)^0,w,c
 21691  002FF2  6E17               	movwf	??_write_eusartparser^0,c
 21692  002FF4  1C13               	comf	(write_eusartparser@package+3)^0,w,c
 21693  002FF6  6E18               	movwf	(??_write_eusartparser+1)^0,c
 21694  002FF8  6A19               	clrf	(??_write_eusartparser+2)^0,c
 21695  002FFA  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 21696  002FFC  1C17               	comf	??_write_eusartparser^0,w,c
 21697  002FFE  6E1B               	movwf	(??_write_eusartparser+4)^0,c
 21698  003000  1C18               	comf	(??_write_eusartparser+1)^0,w,c
 21699  003002  6E1C               	movwf	(??_write_eusartparser+5)^0,c
 21700  003004  1C19               	comf	(??_write_eusartparser+2)^0,w,c
 21701  003006  6E1D               	movwf	(??_write_eusartparser+6)^0,c
 21702  003008  1C1A               	comf	(??_write_eusartparser+3)^0,w,c
 21703  00300A  6E1E               	movwf	(??_write_eusartparser+7)^0,c
 21704  00300C  51BA               	movf	(_var_sys_NVM+34)& (0+255),w,b	;volatile
 21705  00300E  141B               	andwf	(??_write_eusartparser+4)^0,w,c
 21706  003010  6FBA               	movwf	(_var_sys_NVM+34)& (0+255),b	;volatile
 21707  003012  51BB               	movf	(_var_sys_NVM+35)& (0+255),w,b	;volatile
 21708  003014  141C               	andwf	(??_write_eusartparser+5)^0,w,c
 21709  003016  6FBB               	movwf	(_var_sys_NVM+35)& (0+255),b	;volatile
 21710  003018  51BC               	movf	(_var_sys_NVM+36)& (0+255),w,b	;volatile
 21711  00301A  141D               	andwf	(??_write_eusartparser+6)^0,w,c
 21712  00301C  6FBC               	movwf	(_var_sys_NVM+36)& (0+255),b	;volatile
 21713  00301E  51BD               	movf	(_var_sys_NVM+37)& (0+255),w,b	;volatile
 21714  003020  141E               	andwf	(??_write_eusartparser+7)^0,w,c
 21715  003022  6FBD               	movwf	(_var_sys_NVM+37)& (0+255),b	;volatile
 21716                           
 21717                           ;eusartparser.c: 383:                 break;
 21718  003024  0012               	return	
 21719  003026                     l3619:
 21720                           
 21721                           ; BSR set to: 0
 21722                           ;eusartparser.c: 388:                 var_sys_NVM.OnlyRollingCode=package.data.data8[1];
 21723  003026  C013  F0BE         	movff	write_eusartparser@package+3,_var_sys_NVM+38	;volatile
 21724                           
 21725                           ;eusartparser.c: 389:                 break;
 21726  00302A  0012               	return	
 21727  00302C                     l16177:
 21728                           
 21729                           ; BSR set to: 0
 21730                           ;eusartparser.c: 392:                 var_sys_NVM.learningCurrentDecelarationClose=var_s
      +                          ys_NVM.learningCurrentDecelarationClose|((uint32_t)(package.data.data16&0xFFFF)<<(uint8_
      +                          t)(1*16));
 21731  00302C  5012               	movf	(write_eusartparser@package+2)^0,w,c
 21732  00302E  6E17               	movwf	??_write_eusartparser^0,c
 21733  003030  5013               	movf	(write_eusartparser@package+3)^0,w,c
 21734  003032  6E18               	movwf	(??_write_eusartparser+1)^0,c
 21735  003034  6A19               	clrf	(??_write_eusartparser+2)^0,c
 21736  003036  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 21737  003038  C018  F01A         	movff	??_write_eusartparser+1,??_write_eusartparser+3
 21738  00303C  C017  F019         	movff	??_write_eusartparser,??_write_eusartparser+2
 21739  003040  6A18               	clrf	(??_write_eusartparser+1)^0,c
 21740  003042  6A17               	clrf	??_write_eusartparser^0,c
 21741  003044  51C0               	movf	(_var_sys_NVM+40)& (0+255),w,b	;volatile
 21742  003046  1017               	iorwf	??_write_eusartparser^0,w,c
 21743  003048  6FC0               	movwf	(_var_sys_NVM+40)& (0+255),b	;volatile
 21744  00304A  51C1               	movf	(_var_sys_NVM+41)& (0+255),w,b	;volatile
 21745  00304C  1018               	iorwf	(??_write_eusartparser+1)^0,w,c
 21746  00304E  6FC1               	movwf	(_var_sys_NVM+41)& (0+255),b	;volatile
 21747  003050  51C2               	movf	(_var_sys_NVM+42)& (0+255),w,b	;volatile
 21748  003052  1019               	iorwf	(??_write_eusartparser+2)^0,w,c
 21749  003054  6FC2               	movwf	(_var_sys_NVM+42)& (0+255),b	;volatile
 21750  003056  51C3               	movf	(_var_sys_NVM+43)& (0+255),w,b	;volatile
 21751  003058  101A               	iorwf	(??_write_eusartparser+3)^0,w,c
 21752  00305A  6FC3               	movwf	(_var_sys_NVM+43)& (0+255),b	;volatile
 21753                           
 21754                           ;eusartparser.c: 393:                 var_sys_NVM.learningCurrentDecelarationClose=var_s
      +                          ys_NVM.learningCurrentDecelarationClose&~((uint32_t)(~package.data.data16&0xFFFF)<<(uint
      +                          8_t)(1*16));
 21755  00305C  1C12               	comf	(write_eusartparser@package+2)^0,w,c
 21756  00305E  6E17               	movwf	??_write_eusartparser^0,c
 21757  003060  1C13               	comf	(write_eusartparser@package+3)^0,w,c
 21758  003062  6E18               	movwf	(??_write_eusartparser+1)^0,c
 21759  003064  6A19               	clrf	(??_write_eusartparser+2)^0,c
 21760  003066  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 21761  003068  C018  F01A         	movff	??_write_eusartparser+1,??_write_eusartparser+3
 21762  00306C  C017  F019         	movff	??_write_eusartparser,??_write_eusartparser+2
 21763  003070  6A18               	clrf	(??_write_eusartparser+1)^0,c
 21764  003072  6A17               	clrf	??_write_eusartparser^0,c
 21765  003074  1C17               	comf	??_write_eusartparser^0,w,c
 21766  003076  6E1B               	movwf	(??_write_eusartparser+4)^0,c
 21767  003078  1C18               	comf	(??_write_eusartparser+1)^0,w,c
 21768  00307A  6E1C               	movwf	(??_write_eusartparser+5)^0,c
 21769  00307C  1C19               	comf	(??_write_eusartparser+2)^0,w,c
 21770  00307E  6E1D               	movwf	(??_write_eusartparser+6)^0,c
 21771  003080  1C1A               	comf	(??_write_eusartparser+3)^0,w,c
 21772  003082  6E1E               	movwf	(??_write_eusartparser+7)^0,c
 21773  003084  51C0               	movf	(_var_sys_NVM+40)& (0+255),w,b	;volatile
 21774  003086  141B               	andwf	(??_write_eusartparser+4)^0,w,c
 21775  003088  6FC0               	movwf	(_var_sys_NVM+40)& (0+255),b	;volatile
 21776  00308A  51C1               	movf	(_var_sys_NVM+41)& (0+255),w,b	;volatile
 21777  00308C  141C               	andwf	(??_write_eusartparser+5)^0,w,c
 21778  00308E  6FC1               	movwf	(_var_sys_NVM+41)& (0+255),b	;volatile
 21779  003090  51C2               	movf	(_var_sys_NVM+42)& (0+255),w,b	;volatile
 21780  003092  141D               	andwf	(??_write_eusartparser+6)^0,w,c
 21781  003094  6FC2               	movwf	(_var_sys_NVM+42)& (0+255),b	;volatile
 21782  003096  51C3               	movf	(_var_sys_NVM+43)& (0+255),w,b	;volatile
 21783  003098  141E               	andwf	(??_write_eusartparser+7)^0,w,c
 21784  00309A  6FC3               	movwf	(_var_sys_NVM+43)& (0+255),b	;volatile
 21785                           
 21786                           ;eusartparser.c: 394:                 break;
 21787  00309C  0012               	return	
 21788  00309E                     l16179:
 21789                           
 21790                           ; BSR set to: 0
 21791                           ;eusartparser.c: 396:                 var_sys_NVM.learningCurrentDecelarationClose=var_s
      +                          ys_NVM.learningCurrentDecelarationClose|((uint32_t)(package.data.data16&0xFFFF)<<(uint8_
      +                          t)(0*16));
 21792  00309E  5012               	movf	(write_eusartparser@package+2)^0,w,c
 21793  0030A0  11C0               	iorwf	(_var_sys_NVM+40)& (0+255),w,b	;volatile
 21794  0030A2  6FC0               	movwf	(_var_sys_NVM+40)& (0+255),b	;volatile
 21795  0030A4  5013               	movf	(write_eusartparser@package+3)^0,w,c
 21796  0030A6  11C1               	iorwf	(_var_sys_NVM+41)& (0+255),w,b	;volatile
 21797  0030A8  6FC1               	movwf	(_var_sys_NVM+41)& (0+255),b	;volatile
 21798  0030AA  0E00               	movlw	0
 21799  0030AC  11C2               	iorwf	(_var_sys_NVM+42)& (0+255),w,b	;volatile
 21800  0030AE  6FC2               	movwf	(_var_sys_NVM+42)& (0+255),b	;volatile
 21801  0030B0  0E00               	movlw	0
 21802  0030B2  11C3               	iorwf	(_var_sys_NVM+43)& (0+255),w,b	;volatile
 21803  0030B4  6FC3               	movwf	(_var_sys_NVM+43)& (0+255),b	;volatile
 21804                           
 21805                           ;eusartparser.c: 397:                 var_sys_NVM.learningCurrentDecelarationClose=var_s
      +                          ys_NVM.learningCurrentDecelarationClose&~((uint32_t)(~package.data.data16&0xFFFF)<<(uint
      +                          8_t)(0*16));
 21806  0030B6  1C12               	comf	(write_eusartparser@package+2)^0,w,c
 21807  0030B8  6E17               	movwf	??_write_eusartparser^0,c
 21808  0030BA  1C13               	comf	(write_eusartparser@package+3)^0,w,c
 21809  0030BC  6E18               	movwf	(??_write_eusartparser+1)^0,c
 21810  0030BE  6A19               	clrf	(??_write_eusartparser+2)^0,c
 21811  0030C0  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 21812  0030C2  1C17               	comf	??_write_eusartparser^0,w,c
 21813  0030C4  6E1B               	movwf	(??_write_eusartparser+4)^0,c
 21814  0030C6  1C18               	comf	(??_write_eusartparser+1)^0,w,c
 21815  0030C8  6E1C               	movwf	(??_write_eusartparser+5)^0,c
 21816  0030CA  1C19               	comf	(??_write_eusartparser+2)^0,w,c
 21817  0030CC  6E1D               	movwf	(??_write_eusartparser+6)^0,c
 21818  0030CE  1C1A               	comf	(??_write_eusartparser+3)^0,w,c
 21819  0030D0  6E1E               	movwf	(??_write_eusartparser+7)^0,c
 21820  0030D2  51C0               	movf	(_var_sys_NVM+40)& (0+255),w,b	;volatile
 21821  0030D4  141B               	andwf	(??_write_eusartparser+4)^0,w,c
 21822  0030D6  6FC0               	movwf	(_var_sys_NVM+40)& (0+255),b	;volatile
 21823  0030D8  51C1               	movf	(_var_sys_NVM+41)& (0+255),w,b	;volatile
 21824  0030DA  141C               	andwf	(??_write_eusartparser+5)^0,w,c
 21825  0030DC  6FC1               	movwf	(_var_sys_NVM+41)& (0+255),b	;volatile
 21826  0030DE  51C2               	movf	(_var_sys_NVM+42)& (0+255),w,b	;volatile
 21827  0030E0  141D               	andwf	(??_write_eusartparser+6)^0,w,c
 21828  0030E2  6FC2               	movwf	(_var_sys_NVM+42)& (0+255),b	;volatile
 21829  0030E4  51C3               	movf	(_var_sys_NVM+43)& (0+255),w,b	;volatile
 21830  0030E6  141E               	andwf	(??_write_eusartparser+7)^0,w,c
 21831  0030E8  6FC3               	movwf	(_var_sys_NVM+43)& (0+255),b	;volatile
 21832                           
 21833                           ;eusartparser.c: 398:                 break;
 21834  0030EA  0012               	return	
 21835  0030EC                     l16181:
 21836                           
 21837                           ; BSR set to: 0
 21838                           ;eusartparser.c: 401:                 var_sys_NVM.learningCurrentDecelarationOpen=var_sy
      +                          s_NVM.learningCurrentDecelarationOpen|((uint32_t)(package.data.data16&0xFFFF)<<(uint8_t)
      +                          (1*16));
 21839  0030EC  5012               	movf	(write_eusartparser@package+2)^0,w,c
 21840  0030EE  6E17               	movwf	??_write_eusartparser^0,c
 21841  0030F0  5013               	movf	(write_eusartparser@package+3)^0,w,c
 21842  0030F2  6E18               	movwf	(??_write_eusartparser+1)^0,c
 21843  0030F4  6A19               	clrf	(??_write_eusartparser+2)^0,c
 21844  0030F6  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 21845  0030F8  C018  F01A         	movff	??_write_eusartparser+1,??_write_eusartparser+3
 21846  0030FC  C017  F019         	movff	??_write_eusartparser,??_write_eusartparser+2
 21847  003100  6A18               	clrf	(??_write_eusartparser+1)^0,c
 21848  003102  6A17               	clrf	??_write_eusartparser^0,c
 21849  003104  51C4               	movf	(_var_sys_NVM+44)& (0+255),w,b	;volatile
 21850  003106  1017               	iorwf	??_write_eusartparser^0,w,c
 21851  003108  6FC4               	movwf	(_var_sys_NVM+44)& (0+255),b	;volatile
 21852  00310A  51C5               	movf	(_var_sys_NVM+45)& (0+255),w,b	;volatile
 21853  00310C  1018               	iorwf	(??_write_eusartparser+1)^0,w,c
 21854  00310E  6FC5               	movwf	(_var_sys_NVM+45)& (0+255),b	;volatile
 21855  003110  51C6               	movf	(_var_sys_NVM+46)& (0+255),w,b	;volatile
 21856  003112  1019               	iorwf	(??_write_eusartparser+2)^0,w,c
 21857  003114  6FC6               	movwf	(_var_sys_NVM+46)& (0+255),b	;volatile
 21858  003116  51C7               	movf	(_var_sys_NVM+47)& (0+255),w,b	;volatile
 21859  003118  101A               	iorwf	(??_write_eusartparser+3)^0,w,c
 21860  00311A  6FC7               	movwf	(_var_sys_NVM+47)& (0+255),b	;volatile
 21861                           
 21862                           ;eusartparser.c: 402:                 var_sys_NVM.learningCurrentDecelarationOpen=var_sy
      +                          s_NVM.learningCurrentDecelarationOpen&~((uint32_t)(~package.data.data16&0xFFFF)<<(uint8_
      +                          t)(1*16));
 21863  00311C  1C12               	comf	(write_eusartparser@package+2)^0,w,c
 21864  00311E  6E17               	movwf	??_write_eusartparser^0,c
 21865  003120  1C13               	comf	(write_eusartparser@package+3)^0,w,c
 21866  003122  6E18               	movwf	(??_write_eusartparser+1)^0,c
 21867  003124  6A19               	clrf	(??_write_eusartparser+2)^0,c
 21868  003126  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 21869  003128  C018  F01A         	movff	??_write_eusartparser+1,??_write_eusartparser+3
 21870  00312C  C017  F019         	movff	??_write_eusartparser,??_write_eusartparser+2
 21871  003130  6A18               	clrf	(??_write_eusartparser+1)^0,c
 21872  003132  6A17               	clrf	??_write_eusartparser^0,c
 21873  003134  1C17               	comf	??_write_eusartparser^0,w,c
 21874  003136  6E1B               	movwf	(??_write_eusartparser+4)^0,c
 21875  003138  1C18               	comf	(??_write_eusartparser+1)^0,w,c
 21876  00313A  6E1C               	movwf	(??_write_eusartparser+5)^0,c
 21877  00313C  1C19               	comf	(??_write_eusartparser+2)^0,w,c
 21878  00313E  6E1D               	movwf	(??_write_eusartparser+6)^0,c
 21879  003140  1C1A               	comf	(??_write_eusartparser+3)^0,w,c
 21880  003142  6E1E               	movwf	(??_write_eusartparser+7)^0,c
 21881  003144  51C4               	movf	(_var_sys_NVM+44)& (0+255),w,b	;volatile
 21882  003146  141B               	andwf	(??_write_eusartparser+4)^0,w,c
 21883  003148  6FC4               	movwf	(_var_sys_NVM+44)& (0+255),b	;volatile
 21884  00314A  51C5               	movf	(_var_sys_NVM+45)& (0+255),w,b	;volatile
 21885  00314C  141C               	andwf	(??_write_eusartparser+5)^0,w,c
 21886  00314E  6FC5               	movwf	(_var_sys_NVM+45)& (0+255),b	;volatile
 21887  003150  51C6               	movf	(_var_sys_NVM+46)& (0+255),w,b	;volatile
 21888  003152  141D               	andwf	(??_write_eusartparser+6)^0,w,c
 21889  003154  6FC6               	movwf	(_var_sys_NVM+46)& (0+255),b	;volatile
 21890  003156  51C7               	movf	(_var_sys_NVM+47)& (0+255),w,b	;volatile
 21891  003158  141E               	andwf	(??_write_eusartparser+7)^0,w,c
 21892  00315A  6FC7               	movwf	(_var_sys_NVM+47)& (0+255),b	;volatile
 21893                           
 21894                           ;eusartparser.c: 403:                 break;
 21895  00315C  0012               	return	
 21896  00315E                     l16183:
 21897                           
 21898                           ; BSR set to: 0
 21899                           ;eusartparser.c: 405:                 var_sys_NVM.learningCurrentDecelarationOpen=var_sy
      +                          s_NVM.learningCurrentDecelarationOpen|((uint32_t)(package.data.data16&0xFFFF)<<(uint8_t)
      +                          (0*16));
 21900  00315E  5012               	movf	(write_eusartparser@package+2)^0,w,c
 21901  003160  11C4               	iorwf	(_var_sys_NVM+44)& (0+255),w,b	;volatile
 21902  003162  6FC4               	movwf	(_var_sys_NVM+44)& (0+255),b	;volatile
 21903  003164  5013               	movf	(write_eusartparser@package+3)^0,w,c
 21904  003166  11C5               	iorwf	(_var_sys_NVM+45)& (0+255),w,b	;volatile
 21905  003168  6FC5               	movwf	(_var_sys_NVM+45)& (0+255),b	;volatile
 21906  00316A  0E00               	movlw	0
 21907  00316C  11C6               	iorwf	(_var_sys_NVM+46)& (0+255),w,b	;volatile
 21908  00316E  6FC6               	movwf	(_var_sys_NVM+46)& (0+255),b	;volatile
 21909  003170  0E00               	movlw	0
 21910  003172  11C7               	iorwf	(_var_sys_NVM+47)& (0+255),w,b	;volatile
 21911  003174  6FC7               	movwf	(_var_sys_NVM+47)& (0+255),b	;volatile
 21912                           
 21913                           ;eusartparser.c: 406:                 var_sys_NVM.learningCurrentDecelarationOpen=var_sy
      +                          s_NVM.learningCurrentDecelarationOpen&~((uint32_t)(~package.data.data16&0xFFFF)<<(uint8_
      +                          t)(0*16));
 21914  003176  1C12               	comf	(write_eusartparser@package+2)^0,w,c
 21915  003178  6E17               	movwf	??_write_eusartparser^0,c
 21916  00317A  1C13               	comf	(write_eusartparser@package+3)^0,w,c
 21917  00317C  6E18               	movwf	(??_write_eusartparser+1)^0,c
 21918  00317E  6A19               	clrf	(??_write_eusartparser+2)^0,c
 21919  003180  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 21920  003182  1C17               	comf	??_write_eusartparser^0,w,c
 21921  003184  6E1B               	movwf	(??_write_eusartparser+4)^0,c
 21922  003186  1C18               	comf	(??_write_eusartparser+1)^0,w,c
 21923  003188  6E1C               	movwf	(??_write_eusartparser+5)^0,c
 21924  00318A  1C19               	comf	(??_write_eusartparser+2)^0,w,c
 21925  00318C  6E1D               	movwf	(??_write_eusartparser+6)^0,c
 21926  00318E  1C1A               	comf	(??_write_eusartparser+3)^0,w,c
 21927  003190  6E1E               	movwf	(??_write_eusartparser+7)^0,c
 21928  003192  51C4               	movf	(_var_sys_NVM+44)& (0+255),w,b	;volatile
 21929  003194  141B               	andwf	(??_write_eusartparser+4)^0,w,c
 21930  003196  6FC4               	movwf	(_var_sys_NVM+44)& (0+255),b	;volatile
 21931  003198  51C5               	movf	(_var_sys_NVM+45)& (0+255),w,b	;volatile
 21932  00319A  141C               	andwf	(??_write_eusartparser+5)^0,w,c
 21933  00319C  6FC5               	movwf	(_var_sys_NVM+45)& (0+255),b	;volatile
 21934  00319E  51C6               	movf	(_var_sys_NVM+46)& (0+255),w,b	;volatile
 21935  0031A0  141D               	andwf	(??_write_eusartparser+6)^0,w,c
 21936  0031A2  6FC6               	movwf	(_var_sys_NVM+46)& (0+255),b	;volatile
 21937  0031A4  51C7               	movf	(_var_sys_NVM+47)& (0+255),w,b	;volatile
 21938  0031A6  141E               	andwf	(??_write_eusartparser+7)^0,w,c
 21939  0031A8  6FC7               	movwf	(_var_sys_NVM+47)& (0+255),b	;volatile
 21940                           
 21941                           ;eusartparser.c: 407:                 break;
 21942  0031AA  0012               	return	
 21943  0031AC                     l3624:
 21944                           
 21945                           ; BSR set to: 0
 21946                           ;eusartparser.c: 410:                 var_sys_NVM.learningCurrentNormalClose=package.dat
      +                          a.data16;
 21947  0031AC  C012  F0C8         	movff	write_eusartparser@package+2,_var_sys_NVM+48	;volatile
 21948  0031B0  C013  F0C9         	movff	write_eusartparser@package+3,_var_sys_NVM+49	;volatile
 21949                           
 21950                           ;eusartparser.c: 411:                 break;
 21951  0031B4  0012               	return	
 21952  0031B6                     l3625:
 21953                           
 21954                           ; BSR set to: 0
 21955                           ;eusartparser.c: 414:                 var_sys_NVM.learningCurrentNormalOpen=package.data
      +                          .data16;
 21956  0031B6  C012  F0CA         	movff	write_eusartparser@package+2,_var_sys_NVM+50	;volatile
 21957  0031BA  C013  F0CB         	movff	write_eusartparser@package+3,_var_sys_NVM+51	;volatile
 21958                           
 21959                           ;eusartparser.c: 415:                 break;
 21960  0031BE  0012               	return	
 21961  0031C0                     l16195:
 21962                           
 21963                           ; BSR set to: 0
 21964  0031C0  5011               	movf	(write_eusartparser@package+1)^0,w,c
 21965  0031C2  6E17               	movwf	??_write_eusartparser^0,c
 21966  0031C4  6A18               	clrf	(??_write_eusartparser+1)^0,c
 21967                           
 21968                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 21969                           ; Switch size 1, requested type "simple"
 21970                           ; Number of cases is 1, Range of values is 0 to 0
 21971                           ; switch strategies available:
 21972                           ; Name         Instructions Cycles
 21973                           ; simple_byte            4     3 (average)
 21974                           ;	Chosen strategy is simple_byte
 21975  0031C6  5018               	movf	(??_write_eusartparser+1)^0,w,c
 21976  0031C8  0A00               	xorlw	0	; case 0
 21977  0031CA  A4D8               	btfss	status,2,c
 21978  0031CC  0012               	return	
 21979                           
 21980                           ; BSR set to: 0
 21981                           ; Switch size 1, requested type "simple"
 21982                           ; Number of cases is 43, Range of values is 0 to 51
 21983                           ; switch strategies available:
 21984                           ; Name         Instructions Cycles
 21985                           ; simple_byte          130    66 (average)
 21986                           ;	Chosen strategy is simple_byte
 21987  0031CE  5017               	movf	??_write_eusartparser^0,w,c
 21988  0031D0  0A00               	xorlw	0	; case 0
 21989  0031D2  B4D8               	btfsc	status,2,c
 21990  0031D4  D675               	goto	l3587
 21991  0031D6  0A02               	xorlw	2	; case 2
 21992  0031D8  B4D8               	btfsc	status,2,c
 21993  0031DA  D67F               	goto	l3592
 21994  0031DC  0A01               	xorlw	1	; case 3
 21995  0031DE  B4D8               	btfsc	status,2,c
 21996  0031E0  D6A5               	goto	l3606
 21997  0031E2  0A06               	xorlw	6	; case 5
 21998  0031E4  B4D8               	btfsc	status,2,c
 21999  0031E6  D67E               	goto	l3594
 22000  0031E8  0A02               	xorlw	2	; case 7
 22001  0031EA  B4D8               	btfsc	status,2,c
 22002  0031EC  D697               	goto	l3603
 22003  0031EE  0A0F               	xorlw	15	; case 8
 22004  0031F0  B4D8               	btfsc	status,2,c
 22005  0031F2  D6AB               	goto	l3613
 22006  0031F4  0A02               	xorlw	2	; case 10
 22007  0031F6  B4D8               	btfsc	status,2,c
 22008  0031F8  D69C               	goto	l3608
 22009  0031FA  0A1A               	xorlw	26	; case 16
 22010  0031FC  B4D8               	btfsc	status,2,c
 22011  0031FE  D660               	goto	l3587
 22012  003200  0A01               	xorlw	1	; case 17
 22013  003202  B4D8               	btfsc	status,2,c
 22014  003204  D662               	goto	l3589
 22015  003206  0A03               	xorlw	3	; case 18
 22016  003208  B4D8               	btfsc	status,2,c
 22017  00320A  D664               	goto	l3590
 22018  00320C  0A01               	xorlw	1	; case 19
 22019  00320E  B4D8               	btfsc	status,2,c
 22020  003210  D664               	goto	l3592
 22021  003212  0A07               	xorlw	7	; case 20
 22022  003214  B4D8               	btfsc	status,2,c
 22023  003216  D666               	goto	l3594
 22024  003218  0A01               	xorlw	1	; case 21
 22025  00321A  B4D8               	btfsc	status,2,c
 22026  00321C  D668               	goto	l3595
 22027  00321E  0A03               	xorlw	3	; case 22
 22028  003220  B4D8               	btfsc	status,2,c
 22029  003222  D66A               	goto	l3596
 22030  003224  0A01               	xorlw	1	; case 23
 22031  003226  B4D8               	btfsc	status,2,c
 22032  003228  D66A               	goto	l3597
 22033  00322A  0A0F               	xorlw	15	; case 24
 22034  00322C  B4D8               	btfsc	status,2,c
 22035  00322E  D66A               	goto	l3598
 22036  003230  0A01               	xorlw	1	; case 25
 22037  003232  B4D8               	btfsc	status,2,c
 22038  003234  D66A               	goto	l3599
 22039  003236  0A03               	xorlw	3	; case 26
 22040  003238  B4D8               	btfsc	status,2,c
 22041  00323A  D66A               	goto	l3600
 22042  00323C  0A01               	xorlw	1	; case 27
 22043  00323E  B4D8               	btfsc	status,2,c
 22044  003240  D66A               	goto	l3601
 22045  003242  0A07               	xorlw	7	; case 28
 22046  003244  B4D8               	btfsc	status,2,c
 22047  003246  D66A               	goto	l3603
 22048  003248  0A01               	xorlw	1	; case 29
 22049  00324A  B4D8               	btfsc	status,2,c
 22050  00324C  D66A               	goto	l3604
 22051  00324E  0A03               	xorlw	3	; case 30
 22052  003250  B4D8               	btfsc	status,2,c
 22053  003252  D66C               	goto	l3606
 22054  003254  0A01               	xorlw	1	; case 31
 22055  003256  B4D8               	btfsc	status,2,c
 22056  003258  D66C               	goto	l3608
 22057  00325A  0A3F               	xorlw	63	; case 32
 22058  00325C  B4D8               	btfsc	status,2,c
 22059  00325E  D66C               	goto	l3609
 22060  003260  0A01               	xorlw	1	; case 33
 22061  003262  B4D8               	btfsc	status,2,c
 22062  003264  D66C               	goto	l3610
 22063  003266  0A03               	xorlw	3	; case 34
 22064  003268  B4D8               	btfsc	status,2,c
 22065  00326A  D66C               	goto	l3611
 22066  00326C  0A01               	xorlw	1	; case 35
 22067  00326E  B4D8               	btfsc	status,2,c
 22068  003270  D66C               	goto	l3613
 22069  003272  0A07               	xorlw	7	; case 36
 22070  003274  B4D8               	btfsc	status,2,c
 22071  003276  D66C               	goto	l3614
 22072  003278  0A01               	xorlw	1	; case 37
 22073  00327A  B4D8               	btfsc	status,2,c
 22074  00327C  D66C               	goto	l3615
 22075  00327E  0A03               	xorlw	3	; case 38
 22076  003280  B4D8               	btfsc	status,2,c
 22077  003282  D66C               	goto	l3616
 22078  003284  0A01               	xorlw	1	; case 39
 22079  003286  B4D8               	btfsc	status,2,c
 22080  003288  D66E               	goto	l16173
 22081  00328A  0A0F               	xorlw	15	; case 40
 22082  00328C  B4D8               	btfsc	status,2,c
 22083  00328E  D6A4               	goto	l16175
 22084  003290  0A01               	xorlw	1	; case 41
 22085  003292  B4D8               	btfsc	status,2,c
 22086  003294  D6C8               	goto	l3619
 22087  003296  0A03               	xorlw	3	; case 42
 22088  003298  B4D8               	btfsc	status,2,c
 22089  00329A  D6C8               	goto	l16177
 22090  00329C  0A01               	xorlw	1	; case 43
 22091  00329E  B4D8               	btfsc	status,2,c
 22092  0032A0  D6FE               	goto	l16179
 22093  0032A2  0A07               	xorlw	7	; case 44
 22094  0032A4  B4D8               	btfsc	status,2,c
 22095  0032A6  D722               	goto	l16181
 22096  0032A8  0A01               	xorlw	1	; case 45
 22097  0032AA  B4D8               	btfsc	status,2,c
 22098  0032AC  D758               	goto	l16183
 22099  0032AE  0A03               	xorlw	3	; case 46
 22100  0032B0  B4D8               	btfsc	status,2,c
 22101  0032B2  D77C               	goto	l3624
 22102  0032B4  0A01               	xorlw	1	; case 47
 22103  0032B6  B4D8               	btfsc	status,2,c
 22104  0032B8  D77E               	goto	l3625
 22105  0032BA  0A1F               	xorlw	31	; case 48
 22106  0032BC  B4D8               	btfsc	status,2,c
 22107  0032BE  D716               	goto	l16181
 22108  0032C0  0A01               	xorlw	1	; case 49
 22109  0032C2  B4D8               	btfsc	status,2,c
 22110  0032C4  D74C               	goto	l16183
 22111  0032C6  0A03               	xorlw	3	; case 50
 22112  0032C8  B4D8               	btfsc	status,2,c
 22113  0032CA  D710               	goto	l16181
 22114  0032CC  0A01               	xorlw	1	; case 51
 22115  0032CE  A4D8               	btfss	status,2,c
 22116  0032D0  0012               	return	
 22117  0032D2  D745               	goto	l16183
 22118  0032D4                     __end_of_write_eusartparser:
 22119                           	callstack 0
 22120                           
 22121 ;; *************** function _read_eusartparser *****************
 22122 ;; Defined at:
 22123 ;;		line 5 in file "eusartparser.c"
 22124 ;; Parameters:    Size  Location     Type
 22125 ;;  package         1   23[COMRAM] PTR struct package_t
 22126 ;;		 -> main@package(7), 
 22127 ;; Auto vars:     Size  Location     Type
 22128 ;;		None
 22129 ;; Return value:  Size  Location     Type
 22130 ;;                  1    wreg      void 
 22131 ;; Registers used:
 22132 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 22133 ;; Tracked objects:
 22134 ;;		On entry : 3F/0
 22135 ;;		On exit  : 0/0
 22136 ;;		Unchanged: 0/0
 22137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22138 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22139 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22140 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22141 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22142 ;;Total ram usage:        3 bytes
 22143 ;; Hardware stack levels used: 1
 22144 ;; Hardware stack levels required when called: 6
 22145 ;; This function calls:
 22146 ;;		_write_package
 22147 ;; This function is called by:
 22148 ;;		_eusartparser
 22149 ;; This function uses a non-reentrant model
 22150 ;;
 22151                           
 22152                           	psect	text81
 22153  0029A8                     __ptext81:
 22154                           	callstack 0
 22155  0029A8                     _read_eusartparser:
 22156                           	callstack 23
 22157                           
 22158                           ; BSR set to: 0
 22159                           ;eusartparser.c: 6:         switch(package->address){
 22160                           
 22161                           ; BSR set to: 0
 22162                           ;incstack = 0
 22163  0029A8  D203               	goto	l16163
 22164  0029AA                     l16027:
 22165                           
 22166                           ; BSR set to: 0
 22167                           ;eusartparser.c: 11:                 package->data.data8[1]=var_sys_NVM.decelarationClos
      +                          e;
 22168  0029AA  5018               	movf	read_eusartparser@package^0,w,c
 22169  0029AC  6ED9               	movwf	fsr2l,c
 22170  0029AE  6ADA               	clrf	fsr2h,c
 22171  0029B0  0E03               	movlw	3
 22172  0029B2  26D9               	addwf	fsr2l,f,c
 22173  0029B4  C099  FFDF         	movff	_var_sys_NVM+1,indf2	;volatile
 22174                           
 22175                           ;eusartparser.c: 12:                 package->data.data8[0]=var_sys_NVM.decelarationOpen
      +                          ;
 22176  0029B8  5018               	movf	read_eusartparser@package^0,w,c
 22177  0029BA  6ED9               	movwf	fsr2l,c
 22178  0029BC  6ADA               	clrf	fsr2h,c
 22179  0029BE  0E02               	movlw	2
 22180  0029C0  26D9               	addwf	fsr2l,f,c
 22181  0029C2  C098  FFDF         	movff	_var_sys_NVM,indf2	;volatile
 22182  0029C6                     l16029:
 22183                           
 22184                           ; BSR set to: 0
 22185                           ;eusartparser.c: 13:                 write_package(*package);
 22186  0029C6  5018               	movf	read_eusartparser@package^0,w,c
 22187  0029C8  6ED9               	movwf	fsr2l,c
 22188  0029CA  6ADA               	clrf	fsr2h,c
 22189  0029CC  EE00  F011         	lfsr	0,write_package@package
 22190  0029D0  0E06               	movlw	6
 22191  0029D2                     u18081:
 22192  0029D2  CFDB FFEB          	movff	plusw2,plusw0
 22193  0029D6  06E8               	decf	wreg,f,c
 22194  0029D8  E2FC               	bc	u18081
 22195  0029DA  ECB3  F045         	call	_write_package	;wreg free
 22196                           
 22197                           ;eusartparser.c: 14:                 break;
 22198  0029DE  0012               	return	
 22199  0029E0                     l16031:
 22200                           
 22201                           ; BSR set to: 0
 22202                           ;eusartparser.c: 18:                 package->data.data8[1]=var_sys_NVM.motorSensitivity
      +                          ;
 22203  0029E0  5018               	movf	read_eusartparser@package^0,w,c
 22204  0029E2  6ED9               	movwf	fsr2l,c
 22205  0029E4  6ADA               	clrf	fsr2h,c
 22206  0029E6  0E03               	movlw	3
 22207  0029E8  26D9               	addwf	fsr2l,f,c
 22208  0029EA  C09B  FFDF         	movff	_var_sys_NVM+3,indf2	;volatile
 22209                           
 22210                           ;eusartparser.c: 19:                 package->data.data8[0]=var_sys_NVM.motorPower;
 22211  0029EE  5018               	movf	read_eusartparser@package^0,w,c
 22212  0029F0  6ED9               	movwf	fsr2l,c
 22213  0029F2  6ADA               	clrf	fsr2h,c
 22214  0029F4  0E02               	movlw	2
 22215  0029F6  26D9               	addwf	fsr2l,f,c
 22216  0029F8  C09A  FFDF         	movff	_var_sys_NVM+2,indf2	;volatile
 22217  0029FC  D7E4               	goto	l16029
 22218  0029FE                     l16035:
 22219                           
 22220                           ; BSR set to: 0
 22221                           ;eusartparser.c: 25:                 package->data.data8[1]=var_sys_NVM.walkTime;
 22222  0029FE  5018               	movf	read_eusartparser@package^0,w,c
 22223  002A00  6ED9               	movwf	fsr2l,c
 22224  002A02  6ADA               	clrf	fsr2h,c
 22225  002A04  0E03               	movlw	3
 22226  002A06  26D9               	addwf	fsr2l,f,c
 22227  002A08  C09C  FFDF         	movff	_var_sys_NVM+4,indf2	;volatile
 22228  002A0C  D0F9               	goto	L99
 22229  002A0E                     l16039:
 22230                           
 22231                           ; BSR set to: 0
 22232                           ;eusartparser.c: 33:                 package->data.data8[1]=var_sys_NVM.autoTimeWalkClos
      +                          e;
 22233  002A0E  5018               	movf	read_eusartparser@package^0,w,c
 22234  002A10  6ED9               	movwf	fsr2l,c
 22235  002A12  6ADA               	clrf	fsr2h,c
 22236  002A14  0E03               	movlw	3
 22237  002A16  26D9               	addwf	fsr2l,f,c
 22238  002A18  C09E  FFDF         	movff	_var_sys_NVM+6,indf2	;volatile
 22239                           
 22240                           ;eusartparser.c: 34:                 package->data.data8[0]=var_sys_NVM.autoTimeFullClos
      +                          e;
 22241  002A1C  5018               	movf	read_eusartparser@package^0,w,c
 22242  002A1E  6ED9               	movwf	fsr2l,c
 22243  002A20  6ADA               	clrf	fsr2h,c
 22244  002A22  0E02               	movlw	2
 22245  002A24  26D9               	addwf	fsr2l,f,c
 22246  002A26  C09D  FFDF         	movff	_var_sys_NVM+5,indf2	;volatile
 22247  002A2A  D7CD               	goto	l16029
 22248  002A2C                     l16043:
 22249                           
 22250                           ; BSR set to: 0
 22251                           ;eusartparser.c: 41:                 package->data.data8[1]=var_sys_NVM.photoCellInOpen;
 22252  002A2C  5018               	movf	read_eusartparser@package^0,w,c
 22253  002A2E  6ED9               	movwf	fsr2l,c
 22254  002A30  6ADA               	clrf	fsr2h,c
 22255  002A32  0E03               	movlw	3
 22256  002A34  26D9               	addwf	fsr2l,f,c
 22257  002A36  C0A0  FFDF         	movff	_var_sys_NVM+8,indf2	;volatile
 22258                           
 22259                           ;eusartparser.c: 42:                 package->data.data8[0]=var_sys_NVM.photoCellIsON;
 22260  002A3A  5018               	movf	read_eusartparser@package^0,w,c
 22261  002A3C  6ED9               	movwf	fsr2l,c
 22262  002A3E  6ADA               	clrf	fsr2h,c
 22263  002A40  0E02               	movlw	2
 22264  002A42  26D9               	addwf	fsr2l,f,c
 22265  002A44  C09F  FFDF         	movff	_var_sys_NVM+7,indf2	;volatile
 22266  002A48  D7BE               	goto	l16029
 22267  002A4A                     l16047:
 22268                           
 22269                           ; BSR set to: 0
 22270                           ;eusartparser.c: 48:                 package->data.data8[1]=var_sys_NVM.securityBandType
      +                          ;
 22271  002A4A  5018               	movf	read_eusartparser@package^0,w,c
 22272  002A4C  6ED9               	movwf	fsr2l,c
 22273  002A4E  6ADA               	clrf	fsr2h,c
 22274  002A50  0E03               	movlw	3
 22275  002A52  26D9               	addwf	fsr2l,f,c
 22276  002A54  C0A2  FFDF         	movff	_var_sys_NVM+10,indf2	;volatile
 22277                           
 22278                           ;eusartparser.c: 49:                 package->data.data8[0]=var_sys_NVM.securityBandIsON
      +                          ;
 22279  002A58  5018               	movf	read_eusartparser@package^0,w,c
 22280  002A5A  6ED9               	movwf	fsr2l,c
 22281  002A5C  6ADA               	clrf	fsr2h,c
 22282  002A5E  0E02               	movlw	2
 22283  002A60  26D9               	addwf	fsr2l,f,c
 22284  002A62  C0A1  FFDF         	movff	_var_sys_NVM+9,indf2	;volatile
 22285  002A66  D7AF               	goto	l16029
 22286  002A68                     l16051:
 22287                           
 22288                           ; BSR set to: 0
 22289                           ;eusartparser.c: 55:                 package->data.data8[1]=var_sys_NVM.securityBandInOp
      +                          en;
 22290  002A68  5018               	movf	read_eusartparser@package^0,w,c
 22291  002A6A  6ED9               	movwf	fsr2l,c
 22292  002A6C  6ADA               	clrf	fsr2h,c
 22293  002A6E  0E03               	movlw	3
 22294  002A70  26D9               	addwf	fsr2l,f,c
 22295  002A72  C0A3  FFDF         	movff	_var_sys_NVM+11,indf2	;volatile
 22296  002A76  D0C4               	goto	L99
 22297  002A78                     l16055:
 22298                           
 22299                           ; BSR set to: 0
 22300                           ;eusartparser.c: 62:                 package->data.data8[1]=var_sys_NVM.operationMode;
 22301  002A78  5018               	movf	read_eusartparser@package^0,w,c
 22302  002A7A  6ED9               	movwf	fsr2l,c
 22303  002A7C  6ADA               	clrf	fsr2h,c
 22304  002A7E  0E03               	movlw	3
 22305  002A80  26D9               	addwf	fsr2l,f,c
 22306  002A82  C0A4  FFDF         	movff	_var_sys_NVM+12,indf2	;volatile
 22307  002A86  D0BC               	goto	L99
 22308  002A88                     l16059:
 22309                           
 22310                           ; BSR set to: 0
 22311                           ;eusartparser.c: 69:                 package->data.data8[1]=var_sys_NVM.flashLightMode;
 22312  002A88  5018               	movf	read_eusartparser@package^0,w,c
 22313  002A8A  6ED9               	movwf	fsr2l,c
 22314  002A8C  6ADA               	clrf	fsr2h,c
 22315  002A8E  0E03               	movlw	3
 22316  002A90  26D9               	addwf	fsr2l,f,c
 22317  002A92  C0A5  FFDF         	movff	_var_sys_NVM+13,indf2	;volatile
 22318  002A96  D0B4               	goto	L99
 22319  002A98                     l16063:
 22320                           
 22321                           ; BSR set to: 0
 22322                           ;eusartparser.c: 76:                 package->data.data8[1]=var_sys_NVM.programmingDista
      +                          nce;
 22323  002A98  5018               	movf	read_eusartparser@package^0,w,c
 22324  002A9A  6ED9               	movwf	fsr2l,c
 22325  002A9C  6ADA               	clrf	fsr2h,c
 22326  002A9E  0E03               	movlw	3
 22327  002AA0  26D9               	addwf	fsr2l,f,c
 22328  002AA2  C0A6  FFDF         	movff	_var_sys_NVM+14,indf2	;volatile
 22329  002AA6  D0AC               	goto	L99
 22330  002AA8                     l16067:
 22331                           
 22332                           ; BSR set to: 0
 22333                           ;eusartparser.c: 83:                 package->data.data8[1]=var_sys_NVM.decelarationSens
      +                          ivity;
 22334  002AA8  5018               	movf	read_eusartparser@package^0,w,c
 22335  002AAA  6ED9               	movwf	fsr2l,c
 22336  002AAC  6ADA               	clrf	fsr2h,c
 22337  002AAE  0E03               	movlw	3
 22338  002AB0  26D9               	addwf	fsr2l,f,c
 22339  002AB2  C0A7  FFDF         	movff	_var_sys_NVM+15,indf2	;volatile
 22340  002AB6  D0A4               	goto	L99
 22341  002AB8                     l16071:
 22342                           
 22343                           ; BSR set to: 0
 22344                           ;eusartparser.c: 91:                 package->data.data8[1]=var_sys_NVM.homemPresente;
 22345  002AB8  5018               	movf	read_eusartparser@package^0,w,c
 22346  002ABA  6ED9               	movwf	fsr2l,c
 22347  002ABC  6ADA               	clrf	fsr2h,c
 22348  002ABE  0E03               	movlw	3
 22349  002AC0  26D9               	addwf	fsr2l,f,c
 22350  002AC2  C0A8  FFDF         	movff	_var_sys_NVM+16,indf2	;volatile
 22351  002AC6  D09C               	goto	L99
 22352  002AC8                     l16075:
 22353                           
 22354                           ; BSR set to: 0
 22355                           ;eusartparser.c: 99:                 package->data.data8[1]=var_sys_NVM.logicDigital;
 22356  002AC8  5018               	movf	read_eusartparser@package^0,w,c
 22357  002ACA  6ED9               	movwf	fsr2l,c
 22358  002ACC  6ADA               	clrf	fsr2h,c
 22359  002ACE  0E03               	movlw	3
 22360  002AD0  26D9               	addwf	fsr2l,f,c
 22361  002AD2  C0A9  FFDF         	movff	_var_sys_NVM+17,indf2	;volatile
 22362  002AD6  D094               	goto	L99
 22363  002AD8                     l16079:
 22364                           
 22365                           ; BSR set to: 0
 22366                           ;eusartparser.c: 106:                 package->data.data8[1]=var_sys_NVM.softstop;
 22367  002AD8  5018               	movf	read_eusartparser@package^0,w,c
 22368  002ADA  6ED9               	movwf	fsr2l,c
 22369  002ADC  6ADA               	clrf	fsr2h,c
 22370  002ADE  0E03               	movlw	3
 22371  002AE0  26D9               	addwf	fsr2l,f,c
 22372  002AE2  C0AB  FFDF         	movff	_var_sys_NVM+19,indf2	;volatile
 22373                           
 22374                           ;eusartparser.c: 107:                 package->data.data8[0]=var_sys_NVM.softStart;
 22375  002AE6  5018               	movf	read_eusartparser@package^0,w,c
 22376  002AE8  6ED9               	movwf	fsr2l,c
 22377  002AEA  6ADA               	clrf	fsr2h,c
 22378  002AEC  0E02               	movlw	2
 22379  002AEE  26D9               	addwf	fsr2l,f,c
 22380  002AF0  C0AA  FFDF         	movff	_var_sys_NVM+18,indf2	;volatile
 22381  002AF4  D768               	goto	l16029
 22382  002AF6                     l16083:
 22383                           
 22384                           ; BSR set to: 0
 22385                           ;eusartparser.c: 114:                 package->data.data8[1]=var_sys_NVM.ligthTime;
 22386  002AF6  5018               	movf	read_eusartparser@package^0,w,c
 22387  002AF8  6ED9               	movwf	fsr2l,c
 22388  002AFA  6ADA               	clrf	fsr2h,c
 22389  002AFC  0E03               	movlw	3
 22390  002AFE  26D9               	addwf	fsr2l,f,c
 22391  002B00  C0AC  FFDF         	movff	_var_sys_NVM+20,indf2	;volatile
 22392  002B04  D07D               	goto	L99
 22393  002B06                     l16087:
 22394                           
 22395                           ; BSR set to: 0
 22396                           ;eusartparser.c: 122:                 package->data.data8[1]=var_sys_NVM.folow_me;
 22397  002B06  5018               	movf	read_eusartparser@package^0,w,c
 22398  002B08  6ED9               	movwf	fsr2l,c
 22399  002B0A  6ADA               	clrf	fsr2h,c
 22400  002B0C  0E03               	movlw	3
 22401  002B0E  26D9               	addwf	fsr2l,f,c
 22402  002B10  C0AD  FFDF         	movff	_var_sys_NVM+21,indf2	;volatile
 22403  002B14  D075               	goto	L99
 22404  002B16                     l16091:
 22405                           
 22406                           ; BSR set to: 0
 22407                           ;eusartparser.c: 129:                 package->data.data8[1]=var_sys_NVM.Stopboton;
 22408  002B16  5018               	movf	read_eusartparser@package^0,w,c
 22409  002B18  6ED9               	movwf	fsr2l,c
 22410  002B1A  6ADA               	clrf	fsr2h,c
 22411  002B1C  0E03               	movlw	3
 22412  002B1E  26D9               	addwf	fsr2l,f,c
 22413  002B20  C0AE  FFDF         	movff	_var_sys_NVM+22,indf2	;volatile
 22414  002B24  D06D               	goto	L99
 22415  002B26                     l16095:
 22416                           
 22417                           ; BSR set to: 0
 22418                           ;eusartparser.c: 136:                 package->data.data8[1]=var_sys_NVM.electricBrake;
 22419  002B26  5018               	movf	read_eusartparser@package^0,w,c
 22420  002B28  6ED9               	movwf	fsr2l,c
 22421  002B2A  6ADA               	clrf	fsr2h,c
 22422  002B2C  0E03               	movlw	3
 22423  002B2E  26D9               	addwf	fsr2l,f,c
 22424  002B30  C0AF  FFDF         	movff	_var_sys_NVM+23,indf2	;volatile
 22425  002B34  D065               	goto	L99
 22426  002B36                     l16099:
 22427                           
 22428                           ; BSR set to: 0
 22429                           ;eusartparser.c: 143:                 package->data.data8[1]=var_sys_NVM.velocityDecelar
      +                          ation;
 22430  002B36  5018               	movf	read_eusartparser@package^0,w,c
 22431  002B38  6ED9               	movwf	fsr2l,c
 22432  002B3A  6ADA               	clrf	fsr2h,c
 22433  002B3C  0E03               	movlw	3
 22434  002B3E  26D9               	addwf	fsr2l,f,c
 22435  002B40  C0B0  FFDF         	movff	_var_sys_NVM+24,indf2	;volatile
 22436  002B44  D05D               	goto	L99
 22437  002B46                     l16103:
 22438                           
 22439                           ; BSR set to: 0
 22440                           ;eusartparser.c: 151:                 package->data.data8[1]=var_sys_NVM.flashRGBMode;
 22441  002B46  5018               	movf	read_eusartparser@package^0,w,c
 22442  002B48  6ED9               	movwf	fsr2l,c
 22443  002B4A  6ADA               	clrf	fsr2h,c
 22444  002B4C  0E03               	movlw	3
 22445  002B4E  26D9               	addwf	fsr2l,f,c
 22446  002B50  C0B1  FFDF         	movff	_var_sys_NVM+25,indf2	;volatile
 22447  002B54  D055               	goto	L99
 22448  002B56                     l16107:
 22449                           
 22450                           ; BSR set to: 0
 22451                           ;eusartparser.c: 158:                 package->data.data8[1]=var_sys_NVM.Direction_motor
      +                          ;
 22452  002B56  5018               	movf	read_eusartparser@package^0,w,c
 22453  002B58  6ED9               	movwf	fsr2l,c
 22454  002B5A  6ADA               	clrf	fsr2h,c
 22455  002B5C  0E03               	movlw	3
 22456  002B5E  26D9               	addwf	fsr2l,f,c
 22457  002B60  C0B3  FFDF         	movff	_var_sys_NVM+27,indf2	;volatile
 22458  002B64  D04D               	goto	L99
 22459  002B66                     l16111:
 22460                           
 22461                           ; BSR set to: 0
 22462                           ;eusartparser.c: 165:                 package->data.data8[1]=var_sys_NVM.TypeofMotor;
 22463  002B66  5018               	movf	read_eusartparser@package^0,w,c
 22464  002B68  6ED9               	movwf	fsr2l,c
 22465  002B6A  6ADA               	clrf	fsr2h,c
 22466  002B6C  0E03               	movlw	3
 22467  002B6E  26D9               	addwf	fsr2l,f,c
 22468  002B70  C0B4  FFDF         	movff	_var_sys_NVM+28,indf2	;volatile
 22469  002B74  D045               	goto	L99
 22470  002B76                     l16115:
 22471                           
 22472                           ; BSR set to: 0
 22473                           ;eusartparser.c: 172:                 package->data.data8[1]=var_sys_NVM.positionRemotes
      +                          Walk;
 22474  002B76  5018               	movf	read_eusartparser@package^0,w,c
 22475  002B78  6ED9               	movwf	fsr2l,c
 22476  002B7A  6ADA               	clrf	fsr2h,c
 22477  002B7C  0E03               	movlw	3
 22478  002B7E  26D9               	addwf	fsr2l,f,c
 22479  002B80  C0B9  FFDF         	movff	_var_sys_NVM+33,indf2	;volatile
 22480                           
 22481                           ;eusartparser.c: 173:                 package->data.data8[0]=var_sys_NVM.positionRemotes
      +                          Full;
 22482  002B84  5018               	movf	read_eusartparser@package^0,w,c
 22483  002B86  6ED9               	movwf	fsr2l,c
 22484  002B88  6ADA               	clrf	fsr2h,c
 22485  002B8A  0E02               	movlw	2
 22486  002B8C  26D9               	addwf	fsr2l,f,c
 22487  002B8E  C0B8  FFDF         	movff	_var_sys_NVM+32,indf2	;volatile
 22488  002B92  D719               	goto	l16029
 22489  002B94                     l16119:
 22490                           
 22491                           ; BSR set to: 0
 22492                           ;eusartparser.c: 179:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.c
      +                          ounterMoves))+1);
 22493  002B94  EE20  F0BC         	lfsr	2,_var_sys_NVM+36
 22494  002B98  5018               	movf	read_eusartparser@package^0,w,c
 22495  002B9A  6EE1               	movwf	fsr1l,c
 22496  002B9C  6AE2               	clrf	fsr1h,c
 22497  002B9E  0E02               	movlw	2
 22498  002BA0  26E1               	addwf	fsr1l,f,c
 22499  002BA2  CFDE FFE6          	movff	postinc2,postinc1
 22500  002BA6  CFDD FFE5          	movff	postdec2,postdec1
 22501                           
 22502                           ; BSR set to: 0
 22503                           ;eusartparser.c: 180:                 write_package(*package);
 22504  002BAA  5018               	movf	read_eusartparser@package^0,w,c
 22505  002BAC  6ED9               	movwf	fsr2l,c
 22506  002BAE  6ADA               	clrf	fsr2h,c
 22507  002BB0  EE00  F011         	lfsr	0,write_package@package
 22508  002BB4  0E06               	movlw	6
 22509  002BB6                     u18091:
 22510  002BB6  CFDB FFEB          	movff	plusw2,plusw0
 22511  002BBA  06E8               	decf	wreg,f,c
 22512  002BBC  E2FC               	bc	u18091
 22513  002BBE  ECB3  F045         	call	_write_package	;wreg free
 22514                           
 22515                           ;eusartparser.c: 181:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.c
      +                          ounterMoves))+0);
 22516  002BC2  EE20  F0BA         	lfsr	2,_var_sys_NVM+34
 22517  002BC6  5018               	movf	read_eusartparser@package^0,w,c
 22518  002BC8  6EE1               	movwf	fsr1l,c
 22519  002BCA  6AE2               	clrf	fsr1h,c
 22520  002BCC  0E02               	movlw	2
 22521  002BCE  26E1               	addwf	fsr1l,f,c
 22522  002BD0  CFDE FFE6          	movff	postinc2,postinc1
 22523  002BD4  CFDD FFE5          	movff	postdec2,postdec1
 22524                           
 22525                           ;eusartparser.c: 182:                 write_package(*package);
 22526  002BD8  5018               	movf	read_eusartparser@package^0,w,c
 22527  002BDA  6ED9               	movwf	fsr2l,c
 22528  002BDC  6ADA               	clrf	fsr2h,c
 22529  002BDE  EE00  F011         	lfsr	0,write_package@package
 22530  002BE2  0E06               	movlw	6
 22531  002BE4                     u18101:
 22532  002BE4  CFDB FFEB          	movff	plusw2,plusw0
 22533  002BE8  06E8               	decf	wreg,f,c
 22534  002BEA  E2FC               	bc	u18101
 22535  002BEC  ECB3  F045         	call	_write_package	;wreg free
 22536                           
 22537                           ;eusartparser.c: 183:                 break;
 22538  002BF0  0012               	return	
 22539  002BF2                     l16125:
 22540                           
 22541                           ; BSR set to: 0
 22542                           ;eusartparser.c: 187:                 package->data.data8[1]=var_sys_NVM.OnlyRollingCode
      +                          ;
 22543  002BF2  5018               	movf	read_eusartparser@package^0,w,c
 22544  002BF4  6ED9               	movwf	fsr2l,c
 22545  002BF6  6ADA               	clrf	fsr2h,c
 22546  002BF8  0E03               	movlw	3
 22547  002BFA  26D9               	addwf	fsr2l,f,c
 22548  002BFC  C0BE  FFDF         	movff	_var_sys_NVM+38,indf2	;volatile
 22549  002C00                     L99:
 22550                           
 22551                           ;eusartparser.c: 188:                 package->data.data8[0]=0x00;
 22552  002C00  5018               	movf	read_eusartparser@package^0,w,c
 22553  002C02  6ED9               	movwf	fsr2l,c
 22554  002C04  6ADA               	clrf	fsr2h,c
 22555  002C06  0E02               	movlw	2
 22556  002C08  26D9               	addwf	fsr2l,f,c
 22557  002C0A  0E00               	movlw	0
 22558  002C0C  6EDF               	movwf	indf2,c
 22559  002C0E  D6DB               	goto	l16029
 22560  002C10                     l16129:
 22561                           
 22562                           ; BSR set to: 0
 22563                           ;eusartparser.c: 194:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.l
      +                          earningCurrentDecelarationClose))+1);
 22564  002C10  EE20  F0C2         	lfsr	2,_var_sys_NVM+42
 22565  002C14  5018               	movf	read_eusartparser@package^0,w,c
 22566  002C16  6EE1               	movwf	fsr1l,c
 22567  002C18  6AE2               	clrf	fsr1h,c
 22568  002C1A  0E02               	movlw	2
 22569  002C1C  26E1               	addwf	fsr1l,f,c
 22570  002C1E  CFDE FFE6          	movff	postinc2,postinc1
 22571  002C22  CFDD FFE5          	movff	postdec2,postdec1
 22572                           
 22573                           ; BSR set to: 0
 22574                           ;eusartparser.c: 195:                 write_package(*package);
 22575  002C26  5018               	movf	read_eusartparser@package^0,w,c
 22576  002C28  6ED9               	movwf	fsr2l,c
 22577  002C2A  6ADA               	clrf	fsr2h,c
 22578  002C2C  EE00  F011         	lfsr	0,write_package@package
 22579  002C30  0E06               	movlw	6
 22580  002C32                     u18111:
 22581  002C32  CFDB FFEB          	movff	plusw2,plusw0
 22582  002C36  06E8               	decf	wreg,f,c
 22583  002C38  E2FC               	bc	u18111
 22584  002C3A  ECB3  F045         	call	_write_package	;wreg free
 22585                           
 22586                           ;eusartparser.c: 196:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.l
      +                          earningCurrentDecelarationClose))+0);
 22587  002C3E  EE20  F0C0         	lfsr	2,_var_sys_NVM+40
 22588  002C42  5018               	movf	read_eusartparser@package^0,w,c
 22589  002C44  6EE1               	movwf	fsr1l,c
 22590  002C46  6AE2               	clrf	fsr1h,c
 22591  002C48  0E02               	movlw	2
 22592  002C4A  26E1               	addwf	fsr1l,f,c
 22593  002C4C  CFDE FFE6          	movff	postinc2,postinc1
 22594  002C50  CFDD FFE5          	movff	postdec2,postdec1
 22595                           
 22596                           ;eusartparser.c: 197:                 write_package(*package);
 22597  002C54  5018               	movf	read_eusartparser@package^0,w,c
 22598  002C56  6ED9               	movwf	fsr2l,c
 22599  002C58  6ADA               	clrf	fsr2h,c
 22600  002C5A  EE00  F011         	lfsr	0,write_package@package
 22601  002C5E  0E06               	movlw	6
 22602  002C60                     u18121:
 22603  002C60  CFDB FFEB          	movff	plusw2,plusw0
 22604  002C64  06E8               	decf	wreg,f,c
 22605  002C66  E2FC               	bc	u18121
 22606  002C68  ECB3  F045         	call	_write_package	;wreg free
 22607                           
 22608                           ;eusartparser.c: 198:                 break;
 22609  002C6C  0012               	return	
 22610  002C6E                     l16135:
 22611                           
 22612                           ; BSR set to: 0
 22613                           ;eusartparser.c: 202:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.l
      +                          earningCurrentDecelarationOpen))+1);
 22614  002C6E  EE20  F0C6         	lfsr	2,_var_sys_NVM+46
 22615  002C72  5018               	movf	read_eusartparser@package^0,w,c
 22616  002C74  6EE1               	movwf	fsr1l,c
 22617  002C76  6AE2               	clrf	fsr1h,c
 22618  002C78  0E02               	movlw	2
 22619  002C7A  26E1               	addwf	fsr1l,f,c
 22620  002C7C  CFDE FFE6          	movff	postinc2,postinc1
 22621  002C80  CFDD FFE5          	movff	postdec2,postdec1
 22622                           
 22623                           ; BSR set to: 0
 22624                           ;eusartparser.c: 203:                 write_package(*package);
 22625  002C84  5018               	movf	read_eusartparser@package^0,w,c
 22626  002C86  6ED9               	movwf	fsr2l,c
 22627  002C88  6ADA               	clrf	fsr2h,c
 22628  002C8A  EE00  F011         	lfsr	0,write_package@package
 22629  002C8E  0E06               	movlw	6
 22630  002C90                     u18131:
 22631  002C90  CFDB FFEB          	movff	plusw2,plusw0
 22632  002C94  06E8               	decf	wreg,f,c
 22633  002C96  E2FC               	bc	u18131
 22634  002C98  ECB3  F045         	call	_write_package	;wreg free
 22635                           
 22636                           ;eusartparser.c: 204:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.l
      +                          earningCurrentDecelarationOpen))+0);
 22637  002C9C  EE20  F0C4         	lfsr	2,_var_sys_NVM+44
 22638  002CA0  5018               	movf	read_eusartparser@package^0,w,c
 22639  002CA2  6EE1               	movwf	fsr1l,c
 22640  002CA4  6AE2               	clrf	fsr1h,c
 22641  002CA6  0E02               	movlw	2
 22642  002CA8  26E1               	addwf	fsr1l,f,c
 22643  002CAA  CFDE FFE6          	movff	postinc2,postinc1
 22644  002CAE  CFDD FFE5          	movff	postdec2,postdec1
 22645                           
 22646                           ;eusartparser.c: 205:                 write_package(*package);
 22647  002CB2  5018               	movf	read_eusartparser@package^0,w,c
 22648  002CB4  6ED9               	movwf	fsr2l,c
 22649  002CB6  6ADA               	clrf	fsr2h,c
 22650  002CB8  EE00  F011         	lfsr	0,write_package@package
 22651  002CBC  0E06               	movlw	6
 22652  002CBE                     u18141:
 22653  002CBE  CFDB FFEB          	movff	plusw2,plusw0
 22654  002CC2  06E8               	decf	wreg,f,c
 22655  002CC4  E2FC               	bc	u18141
 22656  002CC6  ECB3  F045         	call	_write_package	;wreg free
 22657                           
 22658                           ;eusartparser.c: 206:                 break;
 22659  002CCA  0012               	return	
 22660  002CCC                     l16141:
 22661                           
 22662                           ; BSR set to: 0
 22663                           ;eusartparser.c: 210:                 package->data.data16=var_sys_NVM.learningCurrentNo
      +                          rmalClose;
 22664  002CCC  5018               	movf	read_eusartparser@package^0,w,c
 22665  002CCE  6ED9               	movwf	fsr2l,c
 22666  002CD0  6ADA               	clrf	fsr2h,c
 22667  002CD2  0E02               	movlw	2
 22668  002CD4  26D9               	addwf	fsr2l,f,c
 22669  002CD6  C0C8  FFDE         	movff	_var_sys_NVM+48,postinc2	;volatile
 22670  002CDA  C0C9  FFDD         	movff	_var_sys_NVM+49,postdec2	;volatile
 22671  002CDE  D673               	goto	l16029
 22672  002CE0                     l16145:
 22673                           
 22674                           ; BSR set to: 0
 22675                           ;eusartparser.c: 216:                 package->data.data16=var_sys_NVM.learningCurrentNo
      +                          rmalOpen;
 22676  002CE0  5018               	movf	read_eusartparser@package^0,w,c
 22677  002CE2  6ED9               	movwf	fsr2l,c
 22678  002CE4  6ADA               	clrf	fsr2h,c
 22679  002CE6  0E02               	movlw	2
 22680  002CE8  26D9               	addwf	fsr2l,f,c
 22681  002CEA  C0CA  FFDE         	movff	_var_sys_NVM+50,postinc2	;volatile
 22682  002CEE  C0CB  FFDD         	movff	_var_sys_NVM+51,postdec2	;volatile
 22683  002CF2  D669               	goto	l16029
 22684  002CF4                     l16149:
 22685                           
 22686                           ; BSR set to: 0
 22687                           ;eusartparser.c: 222:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.l
      +                          earningTimeToOpen))+1);
 22688  002CF4  EE20  F0CE         	lfsr	2,_var_sys_NVM+54
 22689  002CF8  5018               	movf	read_eusartparser@package^0,w,c
 22690  002CFA  6EE1               	movwf	fsr1l,c
 22691  002CFC  6AE2               	clrf	fsr1h,c
 22692  002CFE  0E02               	movlw	2
 22693  002D00  26E1               	addwf	fsr1l,f,c
 22694  002D02  CFDE FFE6          	movff	postinc2,postinc1
 22695  002D06  CFDD FFE5          	movff	postdec2,postdec1
 22696                           
 22697                           ; BSR set to: 0
 22698                           ;eusartparser.c: 223:                 write_package(*package);
 22699  002D0A  5018               	movf	read_eusartparser@package^0,w,c
 22700  002D0C  6ED9               	movwf	fsr2l,c
 22701  002D0E  6ADA               	clrf	fsr2h,c
 22702  002D10  EE00  F011         	lfsr	0,write_package@package
 22703  002D14  0E06               	movlw	6
 22704  002D16                     u18151:
 22705  002D16  CFDB FFEB          	movff	plusw2,plusw0
 22706  002D1A  06E8               	decf	wreg,f,c
 22707  002D1C  E2FC               	bc	u18151
 22708  002D1E  ECB3  F045         	call	_write_package	;wreg free
 22709                           
 22710                           ;eusartparser.c: 224:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.l
      +                          earningTimeToOpen))+0);
 22711  002D22  EE20  F0CC         	lfsr	2,_var_sys_NVM+52
 22712  002D26  5018               	movf	read_eusartparser@package^0,w,c
 22713  002D28  6EE1               	movwf	fsr1l,c
 22714  002D2A  6AE2               	clrf	fsr1h,c
 22715  002D2C  0E02               	movlw	2
 22716  002D2E  26E1               	addwf	fsr1l,f,c
 22717  002D30  CFDE FFE6          	movff	postinc2,postinc1
 22718  002D34  CFDD FFE5          	movff	postdec2,postdec1
 22719                           
 22720                           ;eusartparser.c: 225:                 write_package(*package);
 22721  002D38  5018               	movf	read_eusartparser@package^0,w,c
 22722  002D3A  6ED9               	movwf	fsr2l,c
 22723  002D3C  6ADA               	clrf	fsr2h,c
 22724  002D3E  EE00  F011         	lfsr	0,write_package@package
 22725  002D42  0E06               	movlw	6
 22726  002D44                     u18161:
 22727  002D44  CFDB FFEB          	movff	plusw2,plusw0
 22728  002D48  06E8               	decf	wreg,f,c
 22729  002D4A  E2FC               	bc	u18161
 22730  002D4C  ECB3  F045         	call	_write_package	;wreg free
 22731                           
 22732                           ;eusartparser.c: 226:                 break;
 22733  002D50  0012               	return	
 22734  002D52                     l16155:
 22735                           
 22736                           ; BSR set to: 0
 22737                           ;eusartparser.c: 230:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.l
      +                          earningTimeToClose))+1);
 22738  002D52  EE20  F0D2         	lfsr	2,_var_sys_NVM+58
 22739  002D56  5018               	movf	read_eusartparser@package^0,w,c
 22740  002D58  6EE1               	movwf	fsr1l,c
 22741  002D5A  6AE2               	clrf	fsr1h,c
 22742  002D5C  0E02               	movlw	2
 22743  002D5E  26E1               	addwf	fsr1l,f,c
 22744  002D60  CFDE FFE6          	movff	postinc2,postinc1
 22745  002D64  CFDD FFE5          	movff	postdec2,postdec1
 22746                           
 22747                           ; BSR set to: 0
 22748                           ;eusartparser.c: 231:                 write_package(*package);
 22749  002D68  5018               	movf	read_eusartparser@package^0,w,c
 22750  002D6A  6ED9               	movwf	fsr2l,c
 22751  002D6C  6ADA               	clrf	fsr2h,c
 22752  002D6E  EE00  F011         	lfsr	0,write_package@package
 22753  002D72  0E06               	movlw	6
 22754  002D74                     u18171:
 22755  002D74  CFDB FFEB          	movff	plusw2,plusw0
 22756  002D78  06E8               	decf	wreg,f,c
 22757  002D7A  E2FC               	bc	u18171
 22758  002D7C  ECB3  F045         	call	_write_package	;wreg free
 22759                           
 22760                           ;eusartparser.c: 232:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.l
      +                          earningTimeToClose))+0);
 22761  002D80  EE20  F0D0         	lfsr	2,_var_sys_NVM+56
 22762  002D84  5018               	movf	read_eusartparser@package^0,w,c
 22763  002D86  6EE1               	movwf	fsr1l,c
 22764  002D88  6AE2               	clrf	fsr1h,c
 22765  002D8A  0E02               	movlw	2
 22766  002D8C  26E1               	addwf	fsr1l,f,c
 22767  002D8E  CFDE FFE6          	movff	postinc2,postinc1
 22768  002D92  CFDD FFE5          	movff	postdec2,postdec1
 22769                           
 22770                           ;eusartparser.c: 233:                 write_package(*package);
 22771  002D96  5018               	movf	read_eusartparser@package^0,w,c
 22772  002D98  6ED9               	movwf	fsr2l,c
 22773  002D9A  6ADA               	clrf	fsr2h,c
 22774  002D9C  EE00  F011         	lfsr	0,write_package@package
 22775  002DA0  0E06               	movlw	6
 22776  002DA2                     u18181:
 22777  002DA2  CFDB FFEB          	movff	plusw2,plusw0
 22778  002DA6  06E8               	decf	wreg,f,c
 22779  002DA8  E2FC               	bc	u18181
 22780  002DAA  ECB3  F045         	call	_write_package	;wreg free
 22781                           
 22782                           ;eusartparser.c: 234:                 break;
 22783  002DAE  0012               	return	
 22784  002DB0                     l16163:
 22785                           
 22786                           ; BSR set to: 0
 22787  002DB0  5018               	movf	read_eusartparser@package^0,w,c
 22788  002DB2  6ED9               	movwf	fsr2l,c
 22789  002DB4  6ADA               	clrf	fsr2h,c
 22790  002DB6  0E01               	movlw	1
 22791  002DB8  26D9               	addwf	fsr2l,f,c
 22792  002DBA  50DF               	movf	indf2,w,c
 22793  002DBC  6E19               	movwf	??_read_eusartparser^0,c
 22794  002DBE  6A1A               	clrf	(??_read_eusartparser+1)^0,c
 22795                           
 22796                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 22797                           ; Switch size 1, requested type "simple"
 22798                           ; Number of cases is 1, Range of values is 0 to 0
 22799                           ; switch strategies available:
 22800                           ; Name         Instructions Cycles
 22801                           ; simple_byte            4     3 (average)
 22802                           ;	Chosen strategy is simple_byte
 22803  002DC0  501A               	movf	(??_read_eusartparser+1)^0,w,c
 22804  002DC2  0A00               	xorlw	0	; case 0
 22805  002DC4  A4D8               	btfss	status,2,c
 22806  002DC6  0012               	return	
 22807                           
 22808                           ; BSR set to: 0
 22809                           ; Switch size 1, requested type "simple"
 22810                           ; Number of cases is 38, Range of values is 0 to 50
 22811                           ; switch strategies available:
 22812                           ; Name         Instructions Cycles
 22813                           ; simple_byte          115    58 (average)
 22814                           ;	Chosen strategy is simple_byte
 22815  002DC8  5019               	movf	??_read_eusartparser^0,w,c
 22816  002DCA  0A00               	xorlw	0	; case 0
 22817  002DCC  B4D8               	btfsc	status,2,c
 22818  002DCE  D5ED               	goto	l16027
 22819  002DD0  0A02               	xorlw	2	; case 2
 22820  002DD2  B4D8               	btfsc	status,2,c
 22821  002DD4  D61C               	goto	l16039
 22822  002DD6  0A01               	xorlw	1	; case 3
 22823  002DD8  B4D8               	btfsc	status,2,c
 22824  002DDA  D68D               	goto	l16083
 22825  002DDC  0A06               	xorlw	6	; case 5
 22826  002DDE  B4D8               	btfsc	status,2,c
 22827  002DE0  D625               	goto	l16043
 22828  002DE2  0A02               	xorlw	2	; case 7
 22829  002DE4  B4D8               	btfsc	status,2,c
 22830  002DE6  D670               	goto	l16075
 22831  002DE8  0A0F               	xorlw	15	; case 8
 22832  002DEA  B4D8               	btfsc	status,2,c
 22833  002DEC  D6AC               	goto	l16103
 22834  002DEE  0A02               	xorlw	2	; case 10
 22835  002DF0  B4D8               	btfsc	status,2,c
 22836  002DF2  D689               	goto	l16087
 22837  002DF4  0A1A               	xorlw	26	; case 16
 22838  002DF6  B4D8               	btfsc	status,2,c
 22839  002DF8  D5D8               	goto	l16027
 22840  002DFA  0A01               	xorlw	1	; case 17
 22841  002DFC  B4D8               	btfsc	status,2,c
 22842  002DFE  D5F0               	goto	l16031
 22843  002E00  0A03               	xorlw	3	; case 18
 22844  002E02  B4D8               	btfsc	status,2,c
 22845  002E04  D5FC               	goto	l16035
 22846  002E06  0A01               	xorlw	1	; case 19
 22847  002E08  B4D8               	btfsc	status,2,c
 22848  002E0A  D601               	goto	l16039
 22849  002E0C  0A07               	xorlw	7	; case 20
 22850  002E0E  B4D8               	btfsc	status,2,c
 22851  002E10  D60D               	goto	l16043
 22852  002E12  0A01               	xorlw	1	; case 21
 22853  002E14  B4D8               	btfsc	status,2,c
 22854  002E16  D619               	goto	l16047
 22855  002E18  0A03               	xorlw	3	; case 22
 22856  002E1A  B4D8               	btfsc	status,2,c
 22857  002E1C  D625               	goto	l16051
 22858  002E1E  0A01               	xorlw	1	; case 23
 22859  002E20  B4D8               	btfsc	status,2,c
 22860  002E22  D62A               	goto	l16055
 22861  002E24  0A0F               	xorlw	15	; case 24
 22862  002E26  B4D8               	btfsc	status,2,c
 22863  002E28  D62F               	goto	l16059
 22864  002E2A  0A01               	xorlw	1	; case 25
 22865  002E2C  B4D8               	btfsc	status,2,c
 22866  002E2E  D634               	goto	l16063
 22867  002E30  0A03               	xorlw	3	; case 26
 22868  002E32  B4D8               	btfsc	status,2,c
 22869  002E34  D639               	goto	l16067
 22870  002E36  0A01               	xorlw	1	; case 27
 22871  002E38  B4D8               	btfsc	status,2,c
 22872  002E3A  D63E               	goto	l16071
 22873  002E3C  0A07               	xorlw	7	; case 28
 22874  002E3E  B4D8               	btfsc	status,2,c
 22875  002E40  D643               	goto	l16075
 22876  002E42  0A01               	xorlw	1	; case 29
 22877  002E44  B4D8               	btfsc	status,2,c
 22878  002E46  D648               	goto	l16079
 22879  002E48  0A03               	xorlw	3	; case 30
 22880  002E4A  B4D8               	btfsc	status,2,c
 22881  002E4C  D654               	goto	l16083
 22882  002E4E  0A01               	xorlw	1	; case 31
 22883  002E50  B4D8               	btfsc	status,2,c
 22884  002E52  D659               	goto	l16087
 22885  002E54  0A3F               	xorlw	63	; case 32
 22886  002E56  B4D8               	btfsc	status,2,c
 22887  002E58  D65E               	goto	l16091
 22888  002E5A  0A01               	xorlw	1	; case 33
 22889  002E5C  B4D8               	btfsc	status,2,c
 22890  002E5E  D663               	goto	l16095
 22891  002E60  0A03               	xorlw	3	; case 34
 22892  002E62  B4D8               	btfsc	status,2,c
 22893  002E64  D668               	goto	l16099
 22894  002E66  0A01               	xorlw	1	; case 35
 22895  002E68  B4D8               	btfsc	status,2,c
 22896  002E6A  D66D               	goto	l16103
 22897  002E6C  0A07               	xorlw	7	; case 36
 22898  002E6E  B4D8               	btfsc	status,2,c
 22899  002E70  D672               	goto	l16107
 22900  002E72  0A01               	xorlw	1	; case 37
 22901  002E74  B4D8               	btfsc	status,2,c
 22902  002E76  D677               	goto	l16111
 22903  002E78  0A03               	xorlw	3	; case 38
 22904  002E7A  B4D8               	btfsc	status,2,c
 22905  002E7C  D67C               	goto	l16115
 22906  002E7E  0A01               	xorlw	1	; case 39
 22907  002E80  B4D8               	btfsc	status,2,c
 22908  002E82  D688               	goto	l16119
 22909  002E84  0A0E               	xorlw	14	; case 41
 22910  002E86  B4D8               	btfsc	status,2,c
 22911  002E88  D6B4               	goto	l16125
 22912  002E8A  0A03               	xorlw	3	; case 42
 22913  002E8C  B4D8               	btfsc	status,2,c
 22914  002E8E  D6C0               	goto	l16129
 22915  002E90  0A06               	xorlw	6	; case 44
 22916  002E92  B4D8               	btfsc	status,2,c
 22917  002E94  D6EC               	goto	l16135
 22918  002E96  0A02               	xorlw	2	; case 46
 22919  002E98  B4D8               	btfsc	status,2,c
 22920  002E9A  D718               	goto	l16141
 22921  002E9C  0A01               	xorlw	1	; case 47
 22922  002E9E  B4D8               	btfsc	status,2,c
 22923  002EA0  D71F               	goto	l16145
 22924  002EA2  0A1F               	xorlw	31	; case 48
 22925  002EA4  B4D8               	btfsc	status,2,c
 22926  002EA6  D726               	goto	l16149
 22927  002EA8  0A02               	xorlw	2	; case 50
 22928  002EAA  A4D8               	btfss	status,2,c
 22929  002EAC  0012               	return	
 22930  002EAE  D751               	goto	l16155
 22931  002EB0                     __end_of_read_eusartparser:
 22932                           	callstack 0
 22933                           
 22934 ;; *************** function _write_package *****************
 22935 ;; Defined at:
 22936 ;;		line 50 in file "eusartpackage.c"
 22937 ;; Parameters:    Size  Location     Type
 22938 ;;  package         7   16[COMRAM] const struct package_t
 22939 ;; Auto vars:     Size  Location     Type
 22940 ;;		None
 22941 ;; Return value:  Size  Location     Type
 22942 ;;                  1    wreg      void 
 22943 ;; Registers used:
 22944 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 22945 ;; Tracked objects:
 22946 ;;		On entry : 0/1
 22947 ;;		On exit  : 0/0
 22948 ;;		Unchanged: 0/0
 22949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22950 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22951 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22952 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22953 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22954 ;;Total ram usage:        7 bytes
 22955 ;; Hardware stack levels used: 1
 22956 ;; Hardware stack levels required when called: 5
 22957 ;; This function calls:
 22958 ;;		_EUSART1_Write
 22959 ;; This function is called by:
 22960 ;;		_read_eusartparser
 22961 ;;		_eusartparser
 22962 ;; This function uses a non-reentrant model
 22963 ;;
 22964                           
 22965                           	psect	text82
 22966  008B66                     __ptext82:
 22967                           	callstack 0
 22968  008B66                     _write_package:
 22969                           	callstack 24
 22970                           
 22971                           ;eusartpackage.c: 52:         if(package.valid==0)
 22972                           
 22973                           ;incstack = 0
 22974  008B66  5017               	movf	(write_package@package+6)^0,w,c
 22975  008B68  B4D8               	btfsc	status,2,c
 22976  008B6A  0012               	return	
 22977                           
 22978                           ;eusartpackage.c: 56:         EUSART1_Write(package.startbyte);
 22979  008B6C  5015               	movf	(write_package@package+4)^0,w,c
 22980  008B6E  EC4B  F044         	call	_EUSART1_Write
 22981                           
 22982                           ;eusartpackage.c: 57:         EUSART1_Write(package.functioncode);
 22983  008B72  5011               	movf	write_package@package^0,w,c
 22984  008B74  EC4B  F044         	call	_EUSART1_Write
 22985                           
 22986                           ;eusartpackage.c: 58:         EUSART1_Write(package.address);
 22987  008B78  5012               	movf	(write_package@package+1)^0,w,c
 22988  008B7A  EC4B  F044         	call	_EUSART1_Write
 22989                           
 22990                           ;eusartpackage.c: 59:         EUSART1_Write(package.data.data8[0]);
 22991  008B7E  5013               	movf	(write_package@package+2)^0,w,c
 22992  008B80  EC4B  F044         	call	_EUSART1_Write
 22993                           
 22994                           ;eusartpackage.c: 60:         EUSART1_Write(package.data.data8[1]);
 22995  008B84  5014               	movf	(write_package@package+3)^0,w,c
 22996  008B86  EC4B  F044         	call	_EUSART1_Write
 22997                           
 22998                           ;eusartpackage.c: 61:         EUSART1_Write(package.endbyte);
 22999  008B8A  5016               	movf	(write_package@package+5)^0,w,c
 23000  008B8C  EC4B  F044         	call	_EUSART1_Write
 23001  008B90  0012               	return		;funcret
 23002  008B92                     __end_of_write_package:
 23003                           	callstack 0
 23004                           
 23005 ;; *************** function _EUSART1_Write *****************
 23006 ;; Defined at:
 23007 ;;		line 173 in file "mcc_generated_files/eusart1.c"
 23008 ;; Parameters:    Size  Location     Type
 23009 ;;  txData          1    wreg     unsigned char 
 23010 ;; Auto vars:     Size  Location     Type
 23011 ;;  txData          1   15[COMRAM] unsigned char 
 23012 ;; Return value:  Size  Location     Type
 23013 ;;                  1    wreg      void 
 23014 ;; Registers used:
 23015 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 23016 ;; Tracked objects:
 23017 ;;		On entry : 0/1
 23018 ;;		On exit  : 3F/E
 23019 ;;		Unchanged: 0/0
 23020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23021 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23022 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23024 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23025 ;;Total ram usage:        1 bytes
 23026 ;; Hardware stack levels used: 1
 23027 ;; Hardware stack levels required when called: 4
 23028 ;; This function calls:
 23029 ;;		Nothing
 23030 ;; This function is called by:
 23031 ;;		_write_package
 23032 ;; This function uses a non-reentrant model
 23033 ;;
 23034                           
 23035                           	psect	text83
 23036  008896                     __ptext83:
 23037                           	callstack 0
 23038  008896                     _EUSART1_Write:
 23039                           	callstack 24
 23040                           
 23041                           ;incstack = 0
 23042                           ;EUSART1_Write@txData stored from wreg
 23043  008896  6E10               	movwf	EUSART1_Write@txData^0,c
 23044  008898                     
 23045                           ;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBufferRemaining)
 23046                           
 23047                           ;mcc_generated_files/eusart1.c: 173: void EUSART1_Write(uint8_t txData);mcc_generated_fi
      +                          les/eusart1.c: 174: {;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBuffer
      +                          Remaining)
 23048  008898  0101               	movlb	1	; () banked
 23049  00889A  51FE               	movf	_eusart1TxBufferRemaining& (0+255),w,b	;volatile
 23050  00889C  B4D8               	btfsc	status,2,c
 23051  00889E  D7FC               	goto	l12009
 23052                           
 23053                           ; BSR set to: 1
 23054                           ;mcc_generated_files/eusart1.c: 179:     if(0 == PIE3bits.TX1IE)
 23055  0088A0  010E               	movlb	14	; () banked
 23056  0088A2  B9C5               	btfsc	197,4,b	;volatile
 23057  0088A4  D003               	goto	l100
 23058                           
 23059                           ; BSR set to: 14
 23060                           ;mcc_generated_files/eusart1.c: 180:     {;mcc_generated_files/eusart1.c: 181:         T
      +                          X1REG = txData;
 23061  0088A6  C010  FF9A         	movff	EUSART1_Write@txData,3994	;volatile
 23062                           
 23063                           ;mcc_generated_files/eusart1.c: 182:     }
 23064  0088AA  D012               	goto	l12025
 23065  0088AC                     l100:
 23066                           
 23067                           ; BSR set to: 14
 23068                           ;mcc_generated_files/eusart1.c: 184:     {;mcc_generated_files/eusart1.c: 185:         P
      +                          IE3bits.TX1IE = 0;
 23069  0088AC  99C5               	bcf	197,4,b	;volatile
 23070                           
 23071                           ; BSR set to: 14
 23072                           ;mcc_generated_files/eusart1.c: 186:         eusart1TxBuffer[eusart1TxHead++] = txData;
 23073  0088AE  0E84               	movlw	low _eusart1TxBuffer
 23074  0088B0  0100               	movlb	0	; () banked
 23075  0088B2  2597               	addwf	_eusart1TxHead& (0+255),w,b	;volatile
 23076  0088B4  6ED9               	movwf	fsr2l,c
 23077  0088B6  6ADA               	clrf	fsr2h,c
 23078  0088B8  0E02               	movlw	high _eusart1TxBuffer
 23079  0088BA  22DA               	addwfc	fsr2h,f,c
 23080  0088BC  C010  FFDF         	movff	EUSART1_Write@txData,indf2
 23081                           
 23082                           ; BSR set to: 0
 23083  0088C0  2B97               	incf	_eusart1TxHead& (0+255),f,b	;volatile
 23084                           
 23085                           ; BSR set to: 0
 23086                           ;mcc_generated_files/eusart1.c: 187:         if(sizeof(eusart1TxBuffer) <= eusart1TxHead
      +                          )
 23087  0088C2  0E07               	movlw	7
 23088  0088C4  6597               	cpfsgt	_eusart1TxHead& (0+255),b
 23089  0088C6  D002               	goto	l12023
 23090                           
 23091                           ; BSR set to: 0
 23092                           ;mcc_generated_files/eusart1.c: 188:         {;mcc_generated_files/eusart1.c: 189:      
      +                                 eusart1TxHead = 0;
 23093  0088C8  0E00               	movlw	0
 23094  0088CA  6F97               	movwf	_eusart1TxHead& (0+255),b	;volatile
 23095  0088CC                     l12023:
 23096                           
 23097                           ; BSR set to: 0
 23098                           ;mcc_generated_files/eusart1.c: 191:         eusart1TxBufferRemaining--;
 23099  0088CC  0101               	movlb	1	; () banked
 23100  0088CE  07FE               	decf	_eusart1TxBufferRemaining& (0+255),f,b	;volatile
 23101  0088D0                     l12025:
 23102                           
 23103                           ;mcc_generated_files/eusart1.c: 193:     PIE3bits.TX1IE = 1;
 23104  0088D0  010E               	movlb	14	; () banked
 23105  0088D2  89C5               	bsf	197,4,b	;volatile
 23106                           
 23107                           ; BSR set to: 14
 23108  0088D4  0012               	return		;funcret
 23109  0088D6                     __end_of_EUSART1_Write:
 23110                           	callstack 0
 23111                           
 23112 ;; *************** function _WWDT_TimerClear *****************
 23113 ;; Defined at:
 23114 ;;		line 128 in file "mcc_generated_files/mcc.c"
 23115 ;; Parameters:    Size  Location     Type
 23116 ;;		None
 23117 ;; Auto vars:     Size  Location     Type
 23118 ;;  state           1   15[COMRAM] _Bool 
 23119 ;;  readBack        1    0        unsigned char 
 23120 ;; Return value:  Size  Location     Type
 23121 ;;                  1    wreg      void 
 23122 ;; Registers used:
 23123 ;;		wreg, status,2
 23124 ;; Tracked objects:
 23125 ;;		On entry : 0/0
 23126 ;;		On exit  : 0/0
 23127 ;;		Unchanged: 0/0
 23128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23130 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23132 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23133 ;;Total ram usage:        1 bytes
 23134 ;; Hardware stack levels used: 1
 23135 ;; Hardware stack levels required when called: 4
 23136 ;; This function calls:
 23137 ;;		Nothing
 23138 ;; This function is called by:
 23139 ;;		_main
 23140 ;; This function uses a non-reentrant model
 23141 ;;
 23142                           
 23143                           	psect	text84
 23144  008F4C                     __ptext84:
 23145                           	callstack 0
 23146  008F4C                     _WWDT_TimerClear:
 23147                           	callstack 26
 23148                           
 23149                           ;mcc_generated_files/mcc.c: 134:     _Bool state = GIE;
 23150                           
 23151                           ; BSR set to: 14
 23152                           ;incstack = 0
 23153  008F4C  0E00               	movlw	0
 23154  008F4E  BEF2               	btfsc	4082,7,c	;volatile
 23155  008F50  0E01               	movlw	1
 23156  008F52  6E10               	movwf	WWDT_TimerClear@state^0,c
 23157                           
 23158                           ;mcc_generated_files/mcc.c: 135:     GIE = 0;
 23159  008F54  9EF2               	bcf	4082,7,c	;volatile
 23160  008F56  010E               	movlb	14	; () banked
 23161  008F58  51D2               	movf	210,w,b	;volatile
 23162  008F5A  0004               	clrwdt		;# 
 23163                           
 23164                           ;mcc_generated_files/mcc.c: 138:     GIE = state;
 23165  008F5C  B010               	btfsc	WWDT_TimerClear@state^0,0,c
 23166  008F5E  D002               	bra	u18595
 23167  008F60  9EF2               	bcf	4082,7,c	;volatile
 23168  008F62  D001               	bra	u18596
 23169  008F64                     u18595:
 23170  008F64  8EF2               	bsf	4082,7,c	;volatile
 23171  008F66                     u18596:
 23172  008F66  0012               	return		;funcret
 23173  008F68                     __end_of_WWDT_TimerClear:
 23174                           	callstack 0
 23175                           
 23176 ;; *************** function _WWDT_SoftEnable *****************
 23177 ;; Defined at:
 23178 ;;		line 104 in file "mcc_generated_files/mcc.c"
 23179 ;; Parameters:    Size  Location     Type
 23180 ;;		None
 23181 ;; Auto vars:     Size  Location     Type
 23182 ;;		None
 23183 ;; Return value:  Size  Location     Type
 23184 ;;                  1    wreg      void 
 23185 ;; Registers used:
 23186 ;;		None
 23187 ;; Tracked objects:
 23188 ;;		On entry : 3F/E
 23189 ;;		On exit  : 3F/E
 23190 ;;		Unchanged: 0/0
 23191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23195 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23196 ;;Total ram usage:        0 bytes
 23197 ;; Hardware stack levels used: 1
 23198 ;; Hardware stack levels required when called: 4
 23199 ;; This function calls:
 23200 ;;		Nothing
 23201 ;; This function is called by:
 23202 ;;		_main
 23203 ;; This function uses a non-reentrant model
 23204 ;;
 23205                           
 23206                           	psect	text85
 23207  00928C                     __ptext85:
 23208                           	callstack 0
 23209  00928C                     _WWDT_SoftEnable:
 23210                           	callstack 26
 23211                           
 23212                           ; BSR set to: 14
 23213                           ;mcc_generated_files/mcc.c: 107:     WDTCON0bits.SEN=1;
 23214                           
 23215                           ;incstack = 0
 23216  00928C  81D2               	bsf	210,0,b	;volatile
 23217                           
 23218                           ; BSR set to: 14
 23219  00928E  0012               	return		;funcret
 23220  009290                     __end_of_WWDT_SoftEnable:
 23221                           	callstack 0
 23222                           
 23223 ;; *************** function _ShowVersion *****************
 23224 ;; Defined at:
 23225 ;;		line 254 in file "main_MC50.c"
 23226 ;; Parameters:    Size  Location     Type
 23227 ;;		None
 23228 ;; Auto vars:     Size  Location     Type
 23229 ;;		None
 23230 ;; Return value:  Size  Location     Type
 23231 ;;                  1    wreg      void 
 23232 ;; Registers used:
 23233 ;;		wreg, status,2, status,0, cstack
 23234 ;; Tracked objects:
 23235 ;;		On entry : 3F/1
 23236 ;;		On exit  : 3F/1
 23237 ;;		Unchanged: 0/0
 23238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23239 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23242 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23243 ;;Total ram usage:        0 bytes
 23244 ;; Hardware stack levels used: 1
 23245 ;; Hardware stack levels required when called: 5
 23246 ;; This function calls:
 23247 ;;		_SetSegmentValue
 23248 ;; This function is called by:
 23249 ;;		_main
 23250 ;; This function uses a non-reentrant model
 23251 ;;
 23252                           
 23253                           	psect	text86
 23254  008124                     __ptext86:
 23255                           	callstack 0
 23256  008124                     _ShowVersion:
 23257                           	callstack 25
 23258                           
 23259                           ; BSR set to: 1
 23260                           ;main_MC50.c: 256:     if(ts_system.TimeShowVersion<=0)
 23261                           
 23262                           ; BSR set to: 14
 23263                           ;incstack = 0
 23264  008124  BFD7               	btfsc	(_ts_system+61)& (0+255),7,b	;volatile
 23265  008126  D005               	goto	u19680
 23266  008128  51D7               	movf	(_ts_system+61)& (0+255),w,b	;volatile
 23267  00812A  E12E               	bnz	l2039
 23268  00812C  05D6               	decf	(_ts_system+60)& (0+255),w,b	;volatile
 23269  00812E  B0D8               	btfsc	status,0,c
 23270  008130  0012               	return	
 23271  008132                     u19680:
 23272                           
 23273                           ; BSR set to: 1
 23274                           ;main_MC50.c: 257:     {;main_MC50.c: 259:             if(var_sys.StateVersion==0)
 23275  008132  5149               	movf	(_var_sys+73)& (0+255),w,b	;volatile
 23276  008134  A4D8               	btfss	status,2,c
 23277  008136  D006               	goto	l16827
 23278                           
 23279                           ; BSR set to: 1
 23280                           ;main_MC50.c: 260:             {;main_MC50.c: 261:                 SetSegmentValue((1/10
      +                          )%10,(1/1)%10);
 23281  008138  0E01               	movlw	1
 23282  00813A  6E1C               	movwf	SetSegmentValue@d2^0,c
 23283  00813C  0E00               	movlw	0
 23284  00813E  ECF7  F047         	call	_SetSegmentValue
 23285                           
 23286                           ;main_MC50.c: 262:             }
 23287  008142  D01C               	goto	l2034
 23288  008144                     l16827:
 23289                           
 23290                           ; BSR set to: 1
 23291  008144  0549               	decf	(_var_sys+73)& (0+255),w,b	;volatile
 23292  008146  A4D8               	btfss	status,2,c
 23293  008148  D006               	goto	l16831
 23294                           
 23295                           ; BSR set to: 1
 23296                           ;main_MC50.c: 264:             {;main_MC50.c: 265:                 SetSegmentValue(dr, (
      +                          180/100)%10);
 23297  00814A  0E01               	movlw	1
 23298  00814C  6E1C               	movwf	SetSegmentValue@d2^0,c
 23299  00814E  0E14               	movlw	20
 23300  008150  ECF7  F047         	call	_SetSegmentValue
 23301                           
 23302                           ;main_MC50.c: 266:             }
 23303  008154  D013               	goto	l2034
 23304  008156                     l16831:
 23305                           
 23306                           ; BSR set to: 1
 23307  008156  0E02               	movlw	2
 23308  008158  1949               	xorwf	(_var_sys+73)& (0+255),w,b	;volatile
 23309  00815A  A4D8               	btfss	status,2,c
 23310  00815C  D006               	goto	l16835
 23311                           
 23312                           ; BSR set to: 1
 23313                           ;main_MC50.c: 268:             {;main_MC50.c: 269:                 SetSegmentValue((180/
      +                          10)%10,(180/1)%10);
 23314  00815E  0E00               	movlw	0
 23315  008160  6E1C               	movwf	SetSegmentValue@d2^0,c
 23316  008162  0E08               	movlw	8
 23317  008164  ECF7  F047         	call	_SetSegmentValue
 23318                           
 23319                           ;main_MC50.c: 270:             }
 23320  008168  D009               	goto	l2034
 23321  00816A                     l16835:
 23322                           
 23323                           ; BSR set to: 1
 23324  00816A  0E03               	movlw	3
 23325  00816C  1949               	xorwf	(_var_sys+73)& (0+255),w,b	;volatile
 23326  00816E  A4D8               	btfss	status,2,c
 23327  008170  D005               	goto	l2034
 23328                           
 23329                           ; BSR set to: 1
 23330                           ;main_MC50.c: 272:             {;main_MC50.c: 273:                SetSegmentValue(dr, d2
      +                          );
 23331  008172  0E02               	movlw	2
 23332  008174  6E1C               	movwf	SetSegmentValue@d2^0,c
 23333  008176  0E14               	movlw	20
 23334  008178  ECF7  F047         	call	_SetSegmentValue
 23335  00817C                     l2034:
 23336                           
 23337                           ;main_MC50.c: 282:         var_sys.StateVersion++;
 23338                           
 23339                           ; BSR set to: 1
 23340  00817C  0101               	movlb	1	; () banked
 23341  00817E  2B49               	incf	(_var_sys+73)& (0+255),f,b	;volatile
 23342                           
 23343                           ; BSR set to: 1
 23344                           ;main_MC50.c: 283:         ts_system.TimeShowVersion=(1000/50);
 23345  008180  0E00               	movlw	0
 23346  008182  6FD7               	movwf	(_ts_system+61)& (0+255),b	;volatile
 23347  008184  0E14               	movlw	20
 23348  008186  6FD6               	movwf	(_ts_system+60)& (0+255),b	;volatile
 23349  008188                     l2039:
 23350                           
 23351                           ; BSR set to: 1
 23352  008188  0012               	return		;funcret
 23353  00818A                     __end_of_ShowVersion:
 23354                           	callstack 0
 23355                           
 23356 ;; *************** function _SetSegmentValue *****************
 23357 ;; Defined at:
 23358 ;;		line 112 in file "outputs_MC50.c"
 23359 ;; Parameters:    Size  Location     Type
 23360 ;;  d1              1    wreg     unsigned char 
 23361 ;;  d2              1   27[COMRAM] unsigned char 
 23362 ;; Auto vars:     Size  Location     Type
 23363 ;;  d1              1   28[COMRAM] unsigned char 
 23364 ;; Return value:  Size  Location     Type
 23365 ;;                  1    wreg      void 
 23366 ;; Registers used:
 23367 ;;		wreg, status,2
 23368 ;; Tracked objects:
 23369 ;;		On entry : 0/0
 23370 ;;		On exit  : 3F/0
 23371 ;;		Unchanged: 0/0
 23372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23373 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23374 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23376 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23377 ;;Total ram usage:        2 bytes
 23378 ;; Hardware stack levels used: 1
 23379 ;; Hardware stack levels required when called: 4
 23380 ;; This function calls:
 23381 ;;		Nothing
 23382 ;; This function is called by:
 23383 ;;		_main
 23384 ;;		_ShowVersion
 23385 ;;		_controlSelectRemote
 23386 ;; This function uses a non-reentrant model
 23387 ;;
 23388                           
 23389                           	psect	text87
 23390  008FEE                     __ptext87:
 23391                           	callstack 0
 23392  008FEE                     _SetSegmentValue:
 23393                           	callstack 23
 23394                           
 23395                           ; BSR set to: 1
 23396                           ;incstack = 0
 23397                           ;SetSegmentValue@d1 stored from wreg
 23398  008FEE  6E1D               	movwf	SetSegmentValue@d1^0,c
 23399                           
 23400                           ;outputs_MC50.c: 112: void SetSegmentValue(char d1, char d2);outputs_MC50.c: 113: {;outp
      +                          uts_MC50.c: 117:         dispStruct.display_grp.value_display1=d1;
 23401  008FF0  C01D  F072         	movff	SetSegmentValue@d1,_dispStruct	;volatile
 23402                           
 23403                           ;outputs_MC50.c: 118:         dispStruct.display_grp.value_display2=d2;
 23404  008FF4  C01C  F073         	movff	SetSegmentValue@d2,_dispStruct+1	;volatile
 23405                           
 23406                           ;outputs_MC50.c: 119:         dispStruct.intermitentFreq=0;
 23407  008FF8  0E00               	movlw	0
 23408  008FFA  0100               	movlb	0	; () banked
 23409  008FFC  6F76               	movwf	(_dispStruct+4)& (0+255),b	;volatile
 23410  008FFE  0E00               	movlw	0
 23411  009000  6F75               	movwf	(_dispStruct+3)& (0+255),b	;volatile
 23412                           
 23413                           ; BSR set to: 0
 23414                           ;outputs_MC50.c: 120:         dispStruct.upFase=0;
 23415  009002  0E00               	movlw	0
 23416  009004  6F77               	movwf	(_dispStruct+5)& (0+255),b	;volatile
 23417                           
 23418                           ; BSR set to: 0
 23419  009006  0012               	return		;funcret
 23420  009008                     __end_of_SetSegmentValue:
 23421                           	callstack 0
 23422                           
 23423 ;; *************** function _SYSTEM_Initialize *****************
 23424 ;; Defined at:
 23425 ;;		line 50 in file "mcc_generated_files/mcc.c"
 23426 ;; Parameters:    Size  Location     Type
 23427 ;;		None
 23428 ;; Auto vars:     Size  Location     Type
 23429 ;;		None
 23430 ;; Return value:  Size  Location     Type
 23431 ;;                  1    wreg      void 
 23432 ;; Registers used:
 23433 ;;		wreg, status,2, status,0, cstack
 23434 ;; Tracked objects:
 23435 ;;		On entry : 3F/0
 23436 ;;		On exit  : 3F/E
 23437 ;;		Unchanged: 0/0
 23438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23439 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23440 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23442 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23443 ;;Total ram usage:        0 bytes
 23444 ;; Hardware stack levels used: 1
 23445 ;; Hardware stack levels required when called: 6
 23446 ;; This function calls:
 23447 ;;		_ADCC_Initialize
 23448 ;;		_EUSART1_Initialize
 23449 ;;		_I2C1_Initialize
 23450 ;;		_INTERRUPT_Initialize
 23451 ;;		_OSCILLATOR_Initialize
 23452 ;;		_PIN_MANAGER_Initialize
 23453 ;;		_PMD_Initialize
 23454 ;;		_TMR0_Initialize
 23455 ;;		_TMR1_Initialize
 23456 ;;		_TMR2_Initialize
 23457 ;;		_WWDT_Initialize
 23458 ;; This function is called by:
 23459 ;;		_main
 23460 ;; This function uses a non-reentrant model
 23461 ;;
 23462                           
 23463                           	psect	text88
 23464  008B0C                     __ptext88:
 23465                           	callstack 0
 23466  008B0C                     _SYSTEM_Initialize:
 23467                           	callstack 24
 23468                           
 23469                           ; BSR set to: 0
 23470                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 23471                           
 23472                           ; BSR set to: 0
 23473                           ;incstack = 0
 23474  008B0C  EC48  F049         	call	_INTERRUPT_Initialize	;wreg free
 23475                           
 23476                           ; BSR set to: 0
 23477                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 23478  008B10  ECB4  F047         	call	_PMD_Initialize	;wreg free
 23479                           
 23480                           ; BSR set to: 14
 23481                           ;mcc_generated_files/mcc.c: 54:     I2C1_Initialize();
 23482  008B14  EC83  F048         	call	_I2C1_Initialize	;wreg free
 23483                           
 23484                           ; BSR set to: 14
 23485                           ;mcc_generated_files/mcc.c: 55:     PIN_MANAGER_Initialize();
 23486  008B18  EC67  F03A         	call	_PIN_MANAGER_Initialize	;wreg free
 23487                           
 23488                           ; BSR set to: 14
 23489                           ;mcc_generated_files/mcc.c: 56:     OSCILLATOR_Initialize();
 23490  008B1C  EC59  F048         	call	_OSCILLATOR_Initialize	;wreg free
 23491                           
 23492                           ; BSR set to: 14
 23493                           ;mcc_generated_files/mcc.c: 57:     WWDT_Initialize();
 23494  008B20  ECC7  F048         	call	_WWDT_Initialize	;wreg free
 23495                           
 23496                           ; BSR set to: 14
 23497                           ;mcc_generated_files/mcc.c: 58:     ADCC_Initialize();
 23498  008B24  EC04  F043         	call	_ADCC_Initialize	;wreg free
 23499                           
 23500                           ; BSR set to: 15
 23501                           ;mcc_generated_files/mcc.c: 59:     TMR2_Initialize();
 23502  008B28  ECC9  F045         	call	_TMR2_Initialize	;wreg free
 23503                           
 23504                           ; BSR set to: 14
 23505                           ;mcc_generated_files/mcc.c: 60:     TMR1_Initialize();
 23506  008B2C  EC2A  F044         	call	_TMR1_Initialize	;wreg free
 23507                           
 23508                           ; BSR set to: 14
 23509                           ;mcc_generated_files/mcc.c: 61:     TMR0_Initialize();
 23510  008B30  EC65  F047         	call	_TMR0_Initialize	;wreg free
 23511                           
 23512                           ; BSR set to: 14
 23513                           ;mcc_generated_files/mcc.c: 62:     EUSART1_Initialize();
 23514  008B34  ECA3  F03D         	call	_EUSART1_Initialize	;wreg free
 23515                           
 23516                           ; BSR set to: 14
 23517  008B38  0012               	return		;funcret
 23518  008B3A                     __end_of_SYSTEM_Initialize:
 23519                           	callstack 0
 23520                           
 23521 ;; *************** function _WWDT_Initialize *****************
 23522 ;; Defined at:
 23523 ;;		line 96 in file "mcc_generated_files/mcc.c"
 23524 ;; Parameters:    Size  Location     Type
 23525 ;;		None
 23526 ;; Auto vars:     Size  Location     Type
 23527 ;;		None
 23528 ;; Return value:  Size  Location     Type
 23529 ;;                  1    wreg      void 
 23530 ;; Registers used:
 23531 ;;		wreg, status,2
 23532 ;; Tracked objects:
 23533 ;;		On entry : 3F/E
 23534 ;;		On exit  : 3F/E
 23535 ;;		Unchanged: 0/0
 23536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23537 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23538 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23540 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23541 ;;Total ram usage:        0 bytes
 23542 ;; Hardware stack levels used: 1
 23543 ;; Hardware stack levels required when called: 4
 23544 ;; This function calls:
 23545 ;;		Nothing
 23546 ;; This function is called by:
 23547 ;;		_SYSTEM_Initialize
 23548 ;; This function uses a non-reentrant model
 23549 ;;
 23550                           
 23551                           	psect	text89
 23552  00918E                     __ptext89:
 23553                           	callstack 0
 23554  00918E                     _WWDT_Initialize:
 23555                           	callstack 25
 23556                           
 23557                           ; BSR set to: 14
 23558                           ;mcc_generated_files/mcc.c: 99:     WDTCON0 = 22;
 23559                           
 23560                           ; BSR set to: 14
 23561                           ;incstack = 0
 23562  00918E  0E16               	movlw	22
 23563  009190  6FD2               	movwf	210,b	;volatile
 23564                           
 23565                           ;mcc_generated_files/mcc.c: 100:     WDTCON1 = 7|32;
 23566  009192  0E27               	movlw	39
 23567  009194  6FD3               	movwf	211,b	;volatile
 23568                           
 23569                           ; BSR set to: 14
 23570  009196  0012               	return		;funcret
 23571  009198                     __end_of_WWDT_Initialize:
 23572                           	callstack 0
 23573                           
 23574 ;; *************** function _TMR2_Initialize *****************
 23575 ;; Defined at:
 23576 ;;		line 79 in file "mcc_generated_files/tmr2.c"
 23577 ;; Parameters:    Size  Location     Type
 23578 ;;		None
 23579 ;; Auto vars:     Size  Location     Type
 23580 ;;		None
 23581 ;; Return value:  Size  Location     Type
 23582 ;;                  1    wreg      void 
 23583 ;; Registers used:
 23584 ;;		wreg, status,2, status,0, cstack
 23585 ;; Tracked objects:
 23586 ;;		On entry : 3F/F
 23587 ;;		On exit  : 3F/E
 23588 ;;		Unchanged: 0/0
 23589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23590 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23591 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23593 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23594 ;;Total ram usage:        0 bytes
 23595 ;; Hardware stack levels used: 1
 23596 ;; Hardware stack levels required when called: 5
 23597 ;; This function calls:
 23598 ;;		_TMR2_SetInterruptHandler
 23599 ;; This function is called by:
 23600 ;;		_SYSTEM_Initialize
 23601 ;; This function uses a non-reentrant model
 23602 ;;
 23603                           
 23604                           	psect	text90
 23605  008B92                     __ptext90:
 23606                           	callstack 0
 23607  008B92                     _TMR2_Initialize:
 23608                           	callstack 24
 23609                           
 23610                           ; BSR set to: 15
 23611                           ;mcc_generated_files/tmr2.c: 84:     T2CLKCON = 0x02;
 23612                           
 23613                           ; BSR set to: 14
 23614                           ;incstack = 0
 23615  008B92  0E02               	movlw	2
 23616  008B94  6EBF               	movwf	191,c	;volatile
 23617                           
 23618                           ;mcc_generated_files/tmr2.c: 87:     T2HLT = 0x40;
 23619  008B96  0E40               	movlw	64
 23620  008B98  6EBE               	movwf	190,c	;volatile
 23621                           
 23622                           ;mcc_generated_files/tmr2.c: 90:     T2RST = 0x00;
 23623  008B9A  0E00               	movlw	0
 23624  008B9C  6EC0               	movwf	192,c	;volatile
 23625                           
 23626                           ;mcc_generated_files/tmr2.c: 93:     T2PR = 0xC7;
 23627  008B9E  0EC7               	movlw	199
 23628  008BA0  6EBC               	movwf	188,c	;volatile
 23629                           
 23630                           ;mcc_generated_files/tmr2.c: 96:     T2TMR = 0x00;
 23631  008BA2  0E00               	movlw	0
 23632  008BA4  6EBB               	movwf	187,c	;volatile
 23633                           
 23634                           ; BSR set to: 15
 23635                           ;mcc_generated_files/tmr2.c: 99:     PIR4bits.TMR2IF = 0;
 23636  008BA6  010E               	movlb	14	; () banked
 23637  008BA8  93CE               	bcf	206,1,b	;volatile
 23638                           
 23639                           ; BSR set to: 14
 23640                           ;mcc_generated_files/tmr2.c: 102:     PIE4bits.TMR2IE = 1;
 23641  008BAA  83C6               	bsf	198,1,b	;volatile
 23642                           
 23643                           ; BSR set to: 14
 23644                           ;mcc_generated_files/tmr2.c: 105:     TMR2_SetInterruptHandler(TMR2_DefaultInterruptHand
      +                          ler);
 23645  008BAC  0EBC               	movlw	low _TMR2_DefaultInterruptHandler
 23646  008BAE  6E10               	movwf	TMR2_SetInterruptHandler@InterruptHandler^0,c
 23647  008BB0  0E92               	movlw	high _TMR2_DefaultInterruptHandler
 23648  008BB2  6E11               	movwf	(TMR2_SetInterruptHandler@InterruptHandler+1)^0,c
 23649  008BB4  ECCC  F048         	call	_TMR2_SetInterruptHandler	;wreg free
 23650                           
 23651                           ; BSR set to: 14
 23652                           ;mcc_generated_files/tmr2.c: 108:     T2CON = 0xD9;
 23653  008BB8  0ED9               	movlw	217
 23654  008BBA  6EBD               	movwf	189,c	;volatile
 23655                           
 23656                           ; BSR set to: 14
 23657  008BBC  0012               	return		;funcret
 23658  008BBE                     __end_of_TMR2_Initialize:
 23659                           	callstack 0
 23660                           
 23661 ;; *************** function _TMR2_SetInterruptHandler *****************
 23662 ;; Defined at:
 23663 ;;		line 342 in file "mcc_generated_files/tmr2.c"
 23664 ;; Parameters:    Size  Location     Type
 23665 ;;  InterruptHan    2   15[COMRAM] PTR FTN()void 
 23666 ;;		 -> TMR2_DefaultInterruptHandler(1), 
 23667 ;; Auto vars:     Size  Location     Type
 23668 ;;		None
 23669 ;; Return value:  Size  Location     Type
 23670 ;;                  1    wreg      void 
 23671 ;; Registers used:
 23672 ;;		wreg, status,2, status,0
 23673 ;; Tracked objects:
 23674 ;;		On entry : 3F/E
 23675 ;;		On exit  : 3F/E
 23676 ;;		Unchanged: 3F/0
 23677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23678 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23679 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23681 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23682 ;;Total ram usage:        2 bytes
 23683 ;; Hardware stack levels used: 1
 23684 ;; Hardware stack levels required when called: 4
 23685 ;; This function calls:
 23686 ;;		Nothing
 23687 ;; This function is called by:
 23688 ;;		_TMR2_Initialize
 23689 ;; This function uses a non-reentrant model
 23690 ;;
 23691                           
 23692                           	psect	text91
 23693  009198                     __ptext91:
 23694                           	callstack 0
 23695  009198                     _TMR2_SetInterruptHandler:
 23696                           	callstack 24
 23697                           
 23698                           ; BSR set to: 14
 23699                           ;mcc_generated_files/tmr2.c: 343:     TMR2_InterruptHandler = InterruptHandler;
 23700                           
 23701                           ; BSR set to: 14
 23702                           ;incstack = 0
 23703  009198  C010  F2DD         	movff	TMR2_SetInterruptHandler@InterruptHandler,_TMR2_InterruptHandler
 23704  00919C  C011  F2DE         	movff	TMR2_SetInterruptHandler@InterruptHandler+1,_TMR2_InterruptHandler+1
 23705                           
 23706                           ; BSR set to: 14
 23707  0091A0  0012               	return		;funcret
 23708  0091A2                     __end_of_TMR2_SetInterruptHandler:
 23709                           	callstack 0
 23710                           
 23711 ;; *************** function _TMR1_Initialize *****************
 23712 ;; Defined at:
 23713 ;;		line 66 in file "mcc_generated_files/tmr1.c"
 23714 ;; Parameters:    Size  Location     Type
 23715 ;;		None
 23716 ;; Auto vars:     Size  Location     Type
 23717 ;;		None
 23718 ;; Return value:  Size  Location     Type
 23719 ;;                  1    wreg      void 
 23720 ;; Registers used:
 23721 ;;		wreg, status,2, status,0, cstack
 23722 ;; Tracked objects:
 23723 ;;		On entry : 3F/E
 23724 ;;		On exit  : 3F/E
 23725 ;;		Unchanged: 0/0
 23726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23729 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23730 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23731 ;;Total ram usage:        2 bytes
 23732 ;; Hardware stack levels used: 1
 23733 ;; Hardware stack levels required when called: 5
 23734 ;; This function calls:
 23735 ;;		_TMR1_SetInterruptHandler
 23736 ;; This function is called by:
 23737 ;;		_SYSTEM_Initialize
 23738 ;; This function uses a non-reentrant model
 23739 ;;
 23740                           
 23741                           	psect	text92
 23742  008854                     __ptext92:
 23743                           	callstack 0
 23744  008854                     _TMR1_Initialize:
 23745                           	callstack 24
 23746                           
 23747                           ; BSR set to: 14
 23748                           ;mcc_generated_files/tmr1.c: 71:     T1GCON = 0x00;
 23749                           
 23750                           ; BSR set to: 14
 23751                           ;incstack = 0
 23752  008854  0E00               	movlw	0
 23753  008856  6ED0               	movwf	208,c	;volatile
 23754                           
 23755                           ;mcc_generated_files/tmr1.c: 74:     T1GATE = 0x00;
 23756  008858  0E00               	movlw	0
 23757  00885A  6ED1               	movwf	209,c	;volatile
 23758                           
 23759                           ;mcc_generated_files/tmr1.c: 77:     T1CLK = 0x01;
 23760  00885C  0E01               	movlw	1
 23761  00885E  6ED2               	movwf	210,c	;volatile
 23762                           
 23763                           ; BSR set to: 14
 23764                           ;mcc_generated_files/tmr1.c: 80:     TMR1H = 0xFF;
 23765  008860  68CE               	setf	206,c	;volatile
 23766                           
 23767                           ;mcc_generated_files/tmr1.c: 83:     TMR1L = 0x38;
 23768  008862  0E38               	movlw	56
 23769  008864  6ECD               	movwf	205,c	;volatile
 23770                           
 23771                           ; BSR set to: 14
 23772                           ;mcc_generated_files/tmr1.c: 86:     PIR4bits.TMR1IF = 0;
 23773  008866  91CE               	bcf	206,0,b	;volatile
 23774                           
 23775                           ; BSR set to: 14
 23776                           ;mcc_generated_files/tmr1.c: 89:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
 23777  008868  50CD               	movf	205,w,c	;volatile
 23778  00886A  CFCE F012          	movff	4046,??_TMR1_Initialize	;volatile
 23779  00886E  6A13               	clrf	(??_TMR1_Initialize+1)^0,c
 23780  008870  C012  F013         	movff	??_TMR1_Initialize,??_TMR1_Initialize+1
 23781  008874  6A12               	clrf	??_TMR1_Initialize^0,c
 23782  008876  1012               	iorwf	??_TMR1_Initialize^0,w,c
 23783  008878  0102               	movlb	2	; () banked
 23784  00887A  6FE1               	movwf	_timer1ReloadVal& (0+255),b	;volatile
 23785  00887C  5013               	movf	(??_TMR1_Initialize+1)^0,w,c
 23786  00887E  6FE2               	movwf	(_timer1ReloadVal+1)& (0+255),b	;volatile
 23787                           
 23788                           ; BSR set to: 2
 23789                           ;mcc_generated_files/tmr1.c: 92:     PIE4bits.TMR1IE = 1;
 23790  008880  010E               	movlb	14	; () banked
 23791  008882  81C6               	bsf	198,0,b	;volatile
 23792                           
 23793                           ; BSR set to: 14
 23794                           ;mcc_generated_files/tmr1.c: 95:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
 23795  008884  0EBE               	movlw	low _TMR1_DefaultInterruptHandler
 23796  008886  6E10               	movwf	TMR1_SetInterruptHandler@InterruptHandler^0,c
 23797  008888  0E92               	movlw	high _TMR1_DefaultInterruptHandler
 23798  00888A  6E11               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)^0,c
 23799  00888C  ECD1  F048         	call	_TMR1_SetInterruptHandler	;wreg free
 23800                           
 23801                           ; BSR set to: 14
 23802                           ;mcc_generated_files/tmr1.c: 98:     T1CON = 0x31;
 23803  008890  0E31               	movlw	49
 23804  008892  6ECF               	movwf	207,c	;volatile
 23805                           
 23806                           ; BSR set to: 14
 23807  008894  0012               	return		;funcret
 23808  008896                     __end_of_TMR1_Initialize:
 23809                           	callstack 0
 23810                           
 23811 ;; *************** function _TMR1_SetInterruptHandler *****************
 23812 ;; Defined at:
 23813 ;;		line 192 in file "mcc_generated_files/tmr1.c"
 23814 ;; Parameters:    Size  Location     Type
 23815 ;;  InterruptHan    2   15[COMRAM] PTR FTN()void 
 23816 ;;		 -> TMR1_DefaultInterruptHandler(1), 
 23817 ;; Auto vars:     Size  Location     Type
 23818 ;;		None
 23819 ;; Return value:  Size  Location     Type
 23820 ;;                  1    wreg      void 
 23821 ;; Registers used:
 23822 ;;		wreg, status,2, status,0
 23823 ;; Tracked objects:
 23824 ;;		On entry : 3F/E
 23825 ;;		On exit  : 3F/E
 23826 ;;		Unchanged: 3F/0
 23827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23828 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23829 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23831 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23832 ;;Total ram usage:        2 bytes
 23833 ;; Hardware stack levels used: 1
 23834 ;; Hardware stack levels required when called: 4
 23835 ;; This function calls:
 23836 ;;		Nothing
 23837 ;; This function is called by:
 23838 ;;		_TMR1_Initialize
 23839 ;; This function uses a non-reentrant model
 23840 ;;
 23841                           
 23842                           	psect	text93
 23843  0091A2                     __ptext93:
 23844                           	callstack 0
 23845  0091A2                     _TMR1_SetInterruptHandler:
 23846                           	callstack 24
 23847                           
 23848                           ; BSR set to: 14
 23849                           ;mcc_generated_files/tmr1.c: 193:     TMR1_InterruptHandler = InterruptHandler;
 23850                           
 23851                           ; BSR set to: 14
 23852                           ;incstack = 0
 23853  0091A2  C010  F2DF         	movff	TMR1_SetInterruptHandler@InterruptHandler,_TMR1_InterruptHandler
 23854  0091A6  C011  F2E0         	movff	TMR1_SetInterruptHandler@InterruptHandler+1,_TMR1_InterruptHandler+1
 23855                           
 23856                           ; BSR set to: 14
 23857  0091AA  0012               	return		;funcret
 23858  0091AC                     __end_of_TMR1_SetInterruptHandler:
 23859                           	callstack 0
 23860                           
 23861 ;; *************** function _TMR0_Initialize *****************
 23862 ;; Defined at:
 23863 ;;		line 67 in file "mcc_generated_files/tmr0.c"
 23864 ;; Parameters:    Size  Location     Type
 23865 ;;		None
 23866 ;; Auto vars:     Size  Location     Type
 23867 ;;		None
 23868 ;; Return value:  Size  Location     Type
 23869 ;;                  1    wreg      void 
 23870 ;; Registers used:
 23871 ;;		wreg, status,2, status,0, cstack
 23872 ;; Tracked objects:
 23873 ;;		On entry : 3F/E
 23874 ;;		On exit  : 3F/E
 23875 ;;		Unchanged: 0/0
 23876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23878 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23880 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23881 ;;Total ram usage:        0 bytes
 23882 ;; Hardware stack levels used: 1
 23883 ;; Hardware stack levels required when called: 5
 23884 ;; This function calls:
 23885 ;;		_TMR0_SetInterruptHandler
 23886 ;; This function is called by:
 23887 ;;		_SYSTEM_Initialize
 23888 ;; This function uses a non-reentrant model
 23889 ;;
 23890                           
 23891                           	psect	text94
 23892  008ECA                     __ptext94:
 23893                           	callstack 0
 23894  008ECA                     _TMR0_Initialize:
 23895                           	callstack 24
 23896                           
 23897                           ; BSR set to: 14
 23898                           ;mcc_generated_files/tmr0.c: 72:     T0CON1 = 0x41;
 23899                           
 23900                           ; BSR set to: 14
 23901                           ;incstack = 0
 23902  008ECA  0E41               	movlw	65
 23903  008ECC  6ED6               	movwf	214,c	;volatile
 23904                           
 23905                           ;mcc_generated_files/tmr0.c: 75:     TMR0H = 0x84;
 23906  008ECE  0E84               	movlw	132
 23907  008ED0  6ED4               	movwf	212,c	;volatile
 23908                           
 23909                           ;mcc_generated_files/tmr0.c: 78:     TMR0L = 0x00;
 23910  008ED2  0E00               	movlw	0
 23911  008ED4  6ED3               	movwf	211,c	;volatile
 23912                           
 23913                           ; BSR set to: 14
 23914                           ;mcc_generated_files/tmr0.c: 81:     PIR0bits.TMR0IF = 0;
 23915  008ED6  9BCA               	bcf	202,5,b	;volatile
 23916                           
 23917                           ; BSR set to: 14
 23918                           ;mcc_generated_files/tmr0.c: 84:     PIE0bits.TMR0IE = 1;
 23919  008ED8  8BC2               	bsf	194,5,b	;volatile
 23920                           
 23921                           ; BSR set to: 14
 23922                           ;mcc_generated_files/tmr0.c: 87:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
 23923  008EDA  0EC0               	movlw	low _TMR0_DefaultInterruptHandler
 23924  008EDC  6E10               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
 23925  008EDE  0E92               	movlw	high _TMR0_DefaultInterruptHandler
 23926  008EE0  6E11               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
 23927  008EE2  ECD6  F048         	call	_TMR0_SetInterruptHandler	;wreg free
 23928                           
 23929                           ; BSR set to: 14
 23930                           ;mcc_generated_files/tmr0.c: 90:     T0CON0 = 0x87;
 23931  008EE6  0E87               	movlw	135
 23932  008EE8  6ED5               	movwf	213,c	;volatile
 23933                           
 23934                           ; BSR set to: 14
 23935  008EEA  0012               	return		;funcret
 23936  008EEC                     __end_of_TMR0_Initialize:
 23937                           	callstack 0
 23938                           
 23939 ;; *************** function _TMR0_SetInterruptHandler *****************
 23940 ;; Defined at:
 23941 ;;		line 143 in file "mcc_generated_files/tmr0.c"
 23942 ;; Parameters:    Size  Location     Type
 23943 ;;  InterruptHan    2   15[COMRAM] PTR FTN()void 
 23944 ;;		 -> TMR0_DefaultInterruptHandler(1), 
 23945 ;; Auto vars:     Size  Location     Type
 23946 ;;		None
 23947 ;; Return value:  Size  Location     Type
 23948 ;;                  1    wreg      void 
 23949 ;; Registers used:
 23950 ;;		wreg, status,2, status,0
 23951 ;; Tracked objects:
 23952 ;;		On entry : 3F/E
 23953 ;;		On exit  : 3F/E
 23954 ;;		Unchanged: 3F/0
 23955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23956 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23957 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23959 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23960 ;;Total ram usage:        2 bytes
 23961 ;; Hardware stack levels used: 1
 23962 ;; Hardware stack levels required when called: 4
 23963 ;; This function calls:
 23964 ;;		Nothing
 23965 ;; This function is called by:
 23966 ;;		_TMR0_Initialize
 23967 ;; This function uses a non-reentrant model
 23968 ;;
 23969                           
 23970                           	psect	text95
 23971  0091AC                     __ptext95:
 23972                           	callstack 0
 23973  0091AC                     _TMR0_SetInterruptHandler:
 23974                           	callstack 24
 23975                           
 23976                           ; BSR set to: 14
 23977                           ;mcc_generated_files/tmr0.c: 144:     TMR0_InterruptHandler = InterruptHandler;
 23978                           
 23979                           ; BSR set to: 14
 23980                           ;incstack = 0
 23981  0091AC  C010  F2E3         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
 23982  0091B0  C011  F2E4         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
 23983                           
 23984                           ; BSR set to: 14
 23985  0091B4  0012               	return		;funcret
 23986  0091B6                     __end_of_TMR0_SetInterruptHandler:
 23987                           	callstack 0
 23988                           
 23989 ;; *************** function _PMD_Initialize *****************
 23990 ;; Defined at:
 23991 ;;		line 79 in file "mcc_generated_files/mcc.c"
 23992 ;; Parameters:    Size  Location     Type
 23993 ;;		None
 23994 ;; Auto vars:     Size  Location     Type
 23995 ;;		None
 23996 ;; Return value:  Size  Location     Type
 23997 ;;                  1    wreg      void 
 23998 ;; Registers used:
 23999 ;;		wreg, status,2
 24000 ;; Tracked objects:
 24001 ;;		On entry : 3F/0
 24002 ;;		On exit  : 3F/E
 24003 ;;		Unchanged: 0/0
 24004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24008 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24009 ;;Total ram usage:        0 bytes
 24010 ;; Hardware stack levels used: 1
 24011 ;; Hardware stack levels required when called: 4
 24012 ;; This function calls:
 24013 ;;		Nothing
 24014 ;; This function is called by:
 24015 ;;		_SYSTEM_Initialize
 24016 ;; This function uses a non-reentrant model
 24017 ;;
 24018                           
 24019                           	psect	text96
 24020  008F68                     __ptext96:
 24021                           	callstack 0
 24022  008F68                     _PMD_Initialize:
 24023                           	callstack 25
 24024                           
 24025                           ; BSR set to: 0
 24026                           ;mcc_generated_files/mcc.c: 82:     PMD0 = 0x00;
 24027                           
 24028                           ; BSR set to: 14
 24029                           ;incstack = 0
 24030  008F68  0E00               	movlw	0
 24031  008F6A  010E               	movlb	14	; () banked
 24032  008F6C  6FE1               	movwf	225,b	;volatile
 24033                           
 24034                           ;mcc_generated_files/mcc.c: 84:     PMD1 = 0x00;
 24035  008F6E  0E00               	movlw	0
 24036  008F70  6FE2               	movwf	226,b	;volatile
 24037                           
 24038                           ;mcc_generated_files/mcc.c: 86:     PMD2 = 0x00;
 24039  008F72  0E00               	movlw	0
 24040  008F74  6FE3               	movwf	227,b	;volatile
 24041                           
 24042                           ;mcc_generated_files/mcc.c: 88:     PMD3 = 0x00;
 24043  008F76  0E00               	movlw	0
 24044  008F78  6FE4               	movwf	228,b	;volatile
 24045                           
 24046                           ;mcc_generated_files/mcc.c: 90:     PMD4 = 0x00;
 24047  008F7A  0E00               	movlw	0
 24048  008F7C  6FE5               	movwf	229,b	;volatile
 24049                           
 24050                           ;mcc_generated_files/mcc.c: 92:     PMD5 = 0x00;
 24051  008F7E  0E00               	movlw	0
 24052  008F80  6FE6               	movwf	230,b	;volatile
 24053                           
 24054                           ; BSR set to: 14
 24055  008F82  0012               	return		;funcret
 24056  008F84                     __end_of_PMD_Initialize:
 24057                           	callstack 0
 24058                           
 24059 ;; *************** function _PIN_MANAGER_Initialize *****************
 24060 ;; Defined at:
 24061 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 24062 ;; Parameters:    Size  Location     Type
 24063 ;;		None
 24064 ;; Auto vars:     Size  Location     Type
 24065 ;;		None
 24066 ;; Return value:  Size  Location     Type
 24067 ;;                  1    wreg      void 
 24068 ;; Registers used:
 24069 ;;		wreg, status,2
 24070 ;; Tracked objects:
 24071 ;;		On entry : 3F/E
 24072 ;;		On exit  : 3F/E
 24073 ;;		Unchanged: 0/0
 24074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24076 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24078 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24079 ;;Total ram usage:        0 bytes
 24080 ;; Hardware stack levels used: 1
 24081 ;; Hardware stack levels required when called: 4
 24082 ;; This function calls:
 24083 ;;		Nothing
 24084 ;; This function is called by:
 24085 ;;		_SYSTEM_Initialize
 24086 ;; This function uses a non-reentrant model
 24087 ;;
 24088                           
 24089                           	psect	text97
 24090  0074CE                     __ptext97:
 24091                           	callstack 0
 24092  0074CE                     _PIN_MANAGER_Initialize:
 24093                           	callstack 25
 24094                           
 24095                           ; BSR set to: 14
 24096                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
 24097                           
 24098                           ; BSR set to: 14
 24099                           ;incstack = 0
 24100  0074CE  0E00               	movlw	0
 24101  0074D0  6E87               	movwf	135,c	;volatile
 24102                           
 24103                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
 24104  0074D2  0E00               	movlw	0
 24105  0074D4  6E86               	movwf	134,c	;volatile
 24106                           
 24107                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
 24108  0074D6  0E00               	movlw	0
 24109  0074D8  6E83               	movwf	131,c	;volatile
 24110                           
 24111                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
 24112  0074DA  0E00               	movlw	0
 24113  0074DC  6E84               	movwf	132,c	;volatile
 24114                           
 24115                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
 24116  0074DE  0E00               	movlw	0
 24117  0074E0  6E85               	movwf	133,c	;volatile
 24118                           
 24119                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x00;
 24120  0074E2  0E00               	movlw	0
 24121  0074E4  6E8C               	movwf	140,c	;volatile
 24122                           
 24123                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0x7F;
 24124  0074E6  0E7F               	movlw	127
 24125  0074E8  6E88               	movwf	136,c	;volatile
 24126                           
 24127                           ; BSR set to: 14
 24128                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
 24129  0074EA  6889               	setf	137,c	;volatile
 24130                           
 24131                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0x58;
 24132  0074EC  0E58               	movlw	88
 24133  0074EE  6E8A               	movwf	138,c	;volatile
 24134                           
 24135                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0x00;
 24136  0074F0  0E00               	movlw	0
 24137  0074F2  6E8B               	movwf	139,c	;volatile
 24138                           
 24139                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0x00;
 24140  0074F4  0E00               	movlw	0
 24141  0074F6  010F               	movlb	15	; () banked
 24142  0074F8  6F26               	movwf	38,b	;volatile
 24143                           
 24144                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0x00;
 24145  0074FA  0E00               	movlw	0
 24146  0074FC  6F21               	movwf	33,b	;volatile
 24147                           
 24148                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0x00;
 24149  0074FE  0E00               	movlw	0
 24150  007500  6F19               	movwf	25,b	;volatile
 24151                           
 24152                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x00;
 24153  007502  0E00               	movlw	0
 24154  007504  6F2E               	movwf	46,b	;volatile
 24155                           
 24156                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0x01;
 24157  007506  0E01               	movlw	1
 24158  007508  6F11               	movwf	17,b	;volatile
 24159                           
 24160                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
 24161  00750A  0E00               	movlw	0
 24162  00750C  6F25               	movwf	37,b	;volatile
 24163                           
 24164                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
 24165  00750E  0E00               	movlw	0
 24166  007510  6F2D               	movwf	45,b	;volatile
 24167                           
 24168                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0xF7;
 24169  007512  0EF7               	movlw	247
 24170  007514  6F18               	movwf	24,b	;volatile
 24171                           
 24172                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
 24173  007516  0E00               	movlw	0
 24174  007518  6F10               	movwf	16,b	;volatile
 24175                           
 24176                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
 24177  00751A  0E00               	movlw	0
 24178  00751C  6F20               	movwf	32,b	;volatile
 24179                           
 24180                           ;mcc_generated_files/pin_manager.c: 96:     ODCONE = 0x00;
 24181  00751E  0E00               	movlw	0
 24182  007520  6F2C               	movwf	44,b	;volatile
 24183                           
 24184                           ;mcc_generated_files/pin_manager.c: 97:     ODCONA = 0x00;
 24185  007522  0E00               	movlw	0
 24186  007524  6F0F               	movwf	15,b	;volatile
 24187                           
 24188                           ;mcc_generated_files/pin_manager.c: 98:     ODCONB = 0x00;
 24189  007526  0E00               	movlw	0
 24190  007528  6F17               	movwf	23,b	;volatile
 24191                           
 24192                           ;mcc_generated_files/pin_manager.c: 99:     ODCONC = 0x00;
 24193  00752A  0E00               	movlw	0
 24194  00752C  6F1F               	movwf	31,b	;volatile
 24195                           
 24196                           ;mcc_generated_files/pin_manager.c: 100:     ODCOND = 0x00;
 24197  00752E  0E00               	movlw	0
 24198  007530  6F24               	movwf	36,b	;volatile
 24199                           
 24200                           ; BSR set to: 15
 24201                           ;mcc_generated_files/pin_manager.c: 105:     SLRCONA = 0xFF;
 24202  007532  690E               	setf	14,b	;volatile
 24203                           
 24204                           ; BSR set to: 15
 24205                           ;mcc_generated_files/pin_manager.c: 106:     SLRCONB = 0xFF;
 24206  007534  6916               	setf	22,b	;volatile
 24207                           
 24208                           ; BSR set to: 15
 24209                           ;mcc_generated_files/pin_manager.c: 107:     SLRCONC = 0xFF;
 24210  007536  691E               	setf	30,b	;volatile
 24211                           
 24212                           ; BSR set to: 15
 24213                           ;mcc_generated_files/pin_manager.c: 108:     SLRCOND = 0xFF;
 24214  007538  6923               	setf	35,b	;volatile
 24215                           
 24216                           ;mcc_generated_files/pin_manager.c: 109:     SLRCONE = 0x07;
 24217  00753A  0E07               	movlw	7
 24218  00753C  6F2B               	movwf	43,b	;volatile
 24219                           
 24220                           ; BSR set to: 15
 24221                           ;mcc_generated_files/pin_manager.c: 114:     INLVLA = 0xFF;
 24222  00753E  690D               	setf	13,b	;volatile
 24223                           
 24224                           ; BSR set to: 15
 24225                           ;mcc_generated_files/pin_manager.c: 115:     INLVLB = 0xFF;
 24226  007540  6915               	setf	21,b	;volatile
 24227                           
 24228                           ; BSR set to: 15
 24229                           ;mcc_generated_files/pin_manager.c: 116:     INLVLC = 0xFF;
 24230  007542  691D               	setf	29,b	;volatile
 24231                           
 24232                           ; BSR set to: 15
 24233                           ;mcc_generated_files/pin_manager.c: 117:     INLVLD = 0xFF;
 24234  007544  6922               	setf	34,b	;volatile
 24235                           
 24236                           ;mcc_generated_files/pin_manager.c: 118:     INLVLE = 0x0F;
 24237  007546  0E0F               	movlw	15
 24238  007548  6F2A               	movwf	42,b	;volatile
 24239                           
 24240                           ;mcc_generated_files/pin_manager.c: 127:     SSP1CLKPPS = 0x13;
 24241  00754A  0E13               	movlw	19
 24242  00754C  010E               	movlb	14	; () banked
 24243  00754E  6FB7               	movwf	183,b	;volatile
 24244                           
 24245                           ;mcc_generated_files/pin_manager.c: 128:     RX1PPS = 0x16;
 24246  007550  0E16               	movlw	22
 24247  007552  6FB5               	movwf	181,b	;volatile
 24248                           
 24249                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x0F;
 24250  007554  0E0F               	movlw	15
 24251  007556  6FFA               	movwf	250,b	;volatile
 24252                           
 24253                           ;mcc_generated_files/pin_manager.c: 130:     RC4PPS = 0x10;
 24254  007558  0E10               	movlw	16
 24255  00755A  6FFB               	movwf	251,b	;volatile
 24256                           
 24257                           ;mcc_generated_files/pin_manager.c: 131:     RC7PPS = 0x09;
 24258  00755C  0E09               	movlw	9
 24259  00755E  6FFE               	movwf	254,b	;volatile
 24260                           
 24261                           ;mcc_generated_files/pin_manager.c: 132:     SSP1DATPPS = 0x14;
 24262  007560  0E14               	movlw	20
 24263  007562  6FB8               	movwf	184,b	;volatile
 24264                           
 24265                           ; BSR set to: 14
 24266  007564  0012               	return		;funcret
 24267  007566                     __end_of_PIN_MANAGER_Initialize:
 24268                           	callstack 0
 24269                           
 24270 ;; *************** function _OSCILLATOR_Initialize *****************
 24271 ;; Defined at:
 24272 ;;		line 65 in file "mcc_generated_files/mcc.c"
 24273 ;; Parameters:    Size  Location     Type
 24274 ;;		None
 24275 ;; Auto vars:     Size  Location     Type
 24276 ;;		None
 24277 ;; Return value:  Size  Location     Type
 24278 ;;                  1    wreg      void 
 24279 ;; Registers used:
 24280 ;;		wreg, status,2
 24281 ;; Tracked objects:
 24282 ;;		On entry : 3F/E
 24283 ;;		On exit  : 3F/E
 24284 ;;		Unchanged: 0/0
 24285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24289 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24290 ;;Total ram usage:        0 bytes
 24291 ;; Hardware stack levels used: 1
 24292 ;; Hardware stack levels required when called: 4
 24293 ;; This function calls:
 24294 ;;		Nothing
 24295 ;; This function is called by:
 24296 ;;		_SYSTEM_Initialize
 24297 ;; This function uses a non-reentrant model
 24298 ;;
 24299                           
 24300                           	psect	text98
 24301  0090B2                     __ptext98:
 24302                           	callstack 0
 24303  0090B2                     _OSCILLATOR_Initialize:
 24304                           	callstack 25
 24305                           
 24306                           ; BSR set to: 14
 24307                           ;mcc_generated_files/mcc.c: 68:     OSCCON1 = 0x60;
 24308                           
 24309                           ; BSR set to: 14
 24310                           ;incstack = 0
 24311  0090B2  0E60               	movlw	96
 24312  0090B4  6FD8               	movwf	216,b	;volatile
 24313                           
 24314                           ;mcc_generated_files/mcc.c: 70:     OSCCON3 = 0x00;
 24315  0090B6  0E00               	movlw	0
 24316  0090B8  6FDA               	movwf	218,b	;volatile
 24317                           
 24318                           ;mcc_generated_files/mcc.c: 72:     OSCEN = 0x00;
 24319  0090BA  0E00               	movlw	0
 24320  0090BC  6FDC               	movwf	220,b	;volatile
 24321                           
 24322                           ;mcc_generated_files/mcc.c: 74:     OSCFRQ = 0x08;
 24323  0090BE  0E08               	movlw	8
 24324  0090C0  6FDE               	movwf	222,b	;volatile
 24325                           
 24326                           ;mcc_generated_files/mcc.c: 76:     OSCTUNE = 0x00;
 24327  0090C2  0E00               	movlw	0
 24328  0090C4  6FDD               	movwf	221,b	;volatile
 24329                           
 24330                           ; BSR set to: 14
 24331  0090C6  0012               	return		;funcret
 24332  0090C8                     __end_of_OSCILLATOR_Initialize:
 24333                           	callstack 0
 24334                           
 24335 ;; *************** function _INTERRUPT_Initialize *****************
 24336 ;; Defined at:
 24337 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 24338 ;; Parameters:    Size  Location     Type
 24339 ;;		None
 24340 ;; Auto vars:     Size  Location     Type
 24341 ;;		None
 24342 ;; Return value:  Size  Location     Type
 24343 ;;                  1    wreg      void 
 24344 ;; Registers used:
 24345 ;;		None
 24346 ;; Tracked objects:
 24347 ;;		On entry : 3F/0
 24348 ;;		On exit  : 3F/0
 24349 ;;		Unchanged: 3F/0
 24350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24351 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24352 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24354 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24355 ;;Total ram usage:        0 bytes
 24356 ;; Hardware stack levels used: 1
 24357 ;; Hardware stack levels required when called: 4
 24358 ;; This function calls:
 24359 ;;		Nothing
 24360 ;; This function is called by:
 24361 ;;		_SYSTEM_Initialize
 24362 ;; This function uses a non-reentrant model
 24363 ;;
 24364                           
 24365                           	psect	text99
 24366  009290                     __ptext99:
 24367                           	callstack 0
 24368  009290                     _INTERRUPT_Initialize:
 24369                           	callstack 25
 24370                           
 24371                           ; BSR set to: 0
 24372                           ;mcc_generated_files/interrupt_manager.c: 55:     INTCONbits.IPEN = 0;
 24373                           
 24374                           ; BSR set to: 14
 24375                           ;incstack = 0
 24376  009290  9AF2               	bcf	242,5,c	;volatile
 24377                           
 24378                           ; BSR set to: 0
 24379  009292  0012               	return		;funcret
 24380  009294                     __end_of_INTERRUPT_Initialize:
 24381                           	callstack 0
 24382                           
 24383 ;; *************** function _I2C1_Initialize *****************
 24384 ;; Defined at:
 24385 ;;		line 167 in file "mcc_generated_files/i2c1_master.c"
 24386 ;; Parameters:    Size  Location     Type
 24387 ;;		None
 24388 ;; Auto vars:     Size  Location     Type
 24389 ;;		None
 24390 ;; Return value:  Size  Location     Type
 24391 ;;                  1    wreg      void 
 24392 ;; Registers used:
 24393 ;;		wreg, status,2
 24394 ;; Tracked objects:
 24395 ;;		On entry : 3F/E
 24396 ;;		On exit  : 3F/E
 24397 ;;		Unchanged: 3F/0
 24398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24400 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24402 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24403 ;;Total ram usage:        0 bytes
 24404 ;; Hardware stack levels used: 1
 24405 ;; Hardware stack levels required when called: 4
 24406 ;; This function calls:
 24407 ;;		Nothing
 24408 ;; This function is called by:
 24409 ;;		_SYSTEM_Initialize
 24410 ;; This function uses a non-reentrant model
 24411 ;;
 24412                           
 24413                           	psect	text100
 24414  009106                     __ptext100:
 24415                           	callstack 0
 24416  009106                     _I2C1_Initialize:
 24417                           	callstack 25
 24418                           
 24419                           ; BSR set to: 14
 24420                           ;mcc_generated_files/i2c1_master.c: 169:     SSP1STAT = 0x80;
 24421                           
 24422                           ; BSR set to: 0
 24423                           ;incstack = 0
 24424  009106  0E80               	movlw	128
 24425  009108  6E95               	movwf	149,c	;volatile
 24426                           
 24427                           ;mcc_generated_files/i2c1_master.c: 170:     SSP1CON1 = 0x08;
 24428  00910A  0E08               	movlw	8
 24429  00910C  6E96               	movwf	150,c	;volatile
 24430                           
 24431                           ;mcc_generated_files/i2c1_master.c: 171:     SSP1CON2 = 0x00;
 24432  00910E  0E00               	movlw	0
 24433  009110  6E97               	movwf	151,c	;volatile
 24434                           
 24435                           ;mcc_generated_files/i2c1_master.c: 172:     SSP1ADD = 0x9F;
 24436  009112  0E9F               	movlw	159
 24437  009114  6E93               	movwf	147,c	;volatile
 24438                           
 24439                           ; BSR set to: 14
 24440                           ;mcc_generated_files/i2c1_master.c: 173:     SSP1CON1bits.SSPEN = 0;
 24441  009116  9A96               	bcf	150,5,c	;volatile
 24442                           
 24443                           ; BSR set to: 14
 24444  009118  0012               	return		;funcret
 24445  00911A                     __end_of_I2C1_Initialize:
 24446                           	callstack 0
 24447                           
 24448 ;; *************** function _EUSART1_Initialize *****************
 24449 ;; Defined at:
 24450 ;;		line 88 in file "mcc_generated_files/eusart1.c"
 24451 ;; Parameters:    Size  Location     Type
 24452 ;;		None
 24453 ;; Auto vars:     Size  Location     Type
 24454 ;;		None
 24455 ;; Return value:  Size  Location     Type
 24456 ;;                  1    wreg      void 
 24457 ;; Registers used:
 24458 ;;		wreg, status,2, status,0, cstack
 24459 ;; Tracked objects:
 24460 ;;		On entry : 3F/E
 24461 ;;		On exit  : 3F/E
 24462 ;;		Unchanged: 0/0
 24463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24464 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24465 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24467 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24468 ;;Total ram usage:        0 bytes
 24469 ;; Hardware stack levels used: 1
 24470 ;; Hardware stack levels required when called: 5
 24471 ;; This function calls:
 24472 ;;		_EUSART1_SetErrorHandler
 24473 ;;		_EUSART1_SetFramingErrorHandler
 24474 ;;		_EUSART1_SetOverrunErrorHandler
 24475 ;;		_EUSART1_SetRxInterruptHandler
 24476 ;;		_EUSART1_SetTxInterruptHandler
 24477 ;; This function is called by:
 24478 ;;		_SYSTEM_Initialize
 24479 ;; This function uses a non-reentrant model
 24480 ;;
 24481                           
 24482                           	psect	text101
 24483  007B46                     __ptext101:
 24484                           	callstack 0
 24485  007B46                     _EUSART1_Initialize:
 24486                           	callstack 24
 24487                           
 24488                           ; BSR set to: 14
 24489                           ;mcc_generated_files/eusart1.c: 91:     PIE3bits.RC1IE = 0;
 24490                           
 24491                           ; BSR set to: 14
 24492                           ;incstack = 0
 24493  007B46  9BC5               	bcf	197,5,b	;volatile
 24494                           
 24495                           ; BSR set to: 14
 24496                           ;mcc_generated_files/eusart1.c: 92:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
 24497  007B48  0E34               	movlw	low _EUSART1_Receive_ISR
 24498  007B4A  6E10               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler^0,c
 24499  007B4C  0E74               	movlw	high _EUSART1_Receive_ISR
 24500  007B4E  6E11               	movwf	(EUSART1_SetRxInterruptHandler@interruptHandler+1)^0,c
 24501  007B50  ECE0  F048         	call	_EUSART1_SetRxInterruptHandler	;wreg free
 24502                           
 24503                           ; BSR set to: 14
 24504                           ;mcc_generated_files/eusart1.c: 93:     PIE3bits.TX1IE = 0;
 24505  007B54  99C5               	bcf	197,4,b	;volatile
 24506                           
 24507                           ;mcc_generated_files/eusart1.c: 94:     EUSART1_SetTxInterruptHandler(EUSART1_Transmit_I
      +                          SR);
 24508  007B56  0EAA               	movlw	low _EUSART1_Transmit_ISR
 24509  007B58  6E10               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler^0,c
 24510  007B5A  0E8A               	movlw	high _EUSART1_Transmit_ISR
 24511  007B5C  6E11               	movwf	(EUSART1_SetTxInterruptHandler@interruptHandler+1)^0,c
 24512  007B5E  ECDB  F048         	call	_EUSART1_SetTxInterruptHandler	;wreg free
 24513                           
 24514                           ; BSR set to: 14
 24515                           ;mcc_generated_files/eusart1.c: 98:     BAUD1CON = 0x08;
 24516  007B62  0E08               	movlw	8
 24517  007B64  6E9F               	movwf	159,c	;volatile
 24518                           
 24519                           ; BSR set to: 14
 24520                           ;mcc_generated_files/eusart1.c: 101:     RC1STA = 0x90;
 24521  007B66  0E90               	movlw	144
 24522  007B68  6E9D               	movwf	157,c	;volatile
 24523                           
 24524                           ; BSR set to: 14
 24525                           ;mcc_generated_files/eusart1.c: 104:     TX1STA = 0x24;
 24526  007B6A  0E24               	movlw	36
 24527  007B6C  6E9E               	movwf	158,c	;volatile
 24528                           
 24529                           ; BSR set to: 14
 24530                           ;mcc_generated_files/eusart1.c: 107:     SP1BRGL = 0x82;
 24531  007B6E  0E82               	movlw	130
 24532  007B70  6E9B               	movwf	155,c	;volatile
 24533                           
 24534                           ; BSR set to: 14
 24535                           ;mcc_generated_files/eusart1.c: 110:     SP1BRGH = 0x06;
 24536  007B72  0E06               	movlw	6
 24537  007B74  6E9C               	movwf	156,c	;volatile
 24538                           
 24539                           ; BSR set to: 14
 24540                           ;mcc_generated_files/eusart1.c: 113:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
 24541  007B76  0EC2               	movlw	low _EUSART1_DefaultFramingErrorHandler
 24542  007B78  6E10               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
 24543  007B7A  0E92               	movlw	high _EUSART1_DefaultFramingErrorHandler
 24544  007B7C  6E11               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
 24545  007B7E  ECEA  F048         	call	_EUSART1_SetFramingErrorHandler	;wreg free
 24546                           
 24547                           ; BSR set to: 14
 24548                           ;mcc_generated_files/eusart1.c: 114:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
 24549  007B82  0E7A               	movlw	low _EUSART1_DefaultOverrunErrorHandler
 24550  007B84  6E10               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
 24551  007B86  0E92               	movlw	high _EUSART1_DefaultOverrunErrorHandler
 24552  007B88  6E11               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
 24553  007B8A  ECE5  F048         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
 24554                           
 24555                           ; BSR set to: 14
 24556                           ;mcc_generated_files/eusart1.c: 115:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
 24557  007B8E  0E80               	movlw	low _EUSART1_DefaultErrorHandler
 24558  007B90  6E10               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
 24559  007B92  0E92               	movlw	high _EUSART1_DefaultErrorHandler
 24560  007B94  6E11               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
 24561  007B96  ECEF  F048         	call	_EUSART1_SetErrorHandler	;wreg free
 24562                           
 24563                           ;mcc_generated_files/eusart1.c: 117:     eusart1RxLastError.status = 0;
 24564  007B9A  0E00               	movlw	0
 24565  007B9C  0101               	movlb	1	; () banked
 24566  007B9E  6F99               	movwf	_eusart1RxLastError& (0+255),b	;volatile
 24567                           
 24568                           ;mcc_generated_files/eusart1.c: 120:     eusart1TxHead = 0;
 24569  007BA0  0E00               	movlw	0
 24570  007BA2  0100               	movlb	0	; () banked
 24571  007BA4  6F97               	movwf	_eusart1TxHead& (0+255),b	;volatile
 24572                           
 24573                           ;mcc_generated_files/eusart1.c: 121:     eusart1TxTail = 0;
 24574  007BA6  0E00               	movlw	0
 24575  007BA8  6F96               	movwf	_eusart1TxTail& (0+255),b	;volatile
 24576                           
 24577                           ;mcc_generated_files/eusart1.c: 122:     eusart1TxBufferRemaining = sizeof(eusart1TxBuff
      +                          er);
 24578  007BAA  0E08               	movlw	8
 24579  007BAC  0101               	movlb	1	; () banked
 24580  007BAE  6FFE               	movwf	_eusart1TxBufferRemaining& (0+255),b	;volatile
 24581                           
 24582                           ;mcc_generated_files/eusart1.c: 124:     eusart1RxHead = 0;
 24583  007BB0  0E00               	movlw	0
 24584  007BB2  0100               	movlb	0	; () banked
 24585  007BB4  6F95               	movwf	_eusart1RxHead& (0+255),b	;volatile
 24586                           
 24587                           ;mcc_generated_files/eusart1.c: 125:     eusart1RxTail = 0;
 24588  007BB6  0E00               	movlw	0
 24589  007BB8  6F94               	movwf	_eusart1RxTail& (0+255),b	;volatile
 24590                           
 24591                           ;mcc_generated_files/eusart1.c: 126:     eusart1RxCount = 0;
 24592  007BBA  0E00               	movlw	0
 24593  007BBC  6F93               	movwf	_eusart1RxCount& (0+255),b	;volatile
 24594                           
 24595                           ; BSR set to: 0
 24596                           ;mcc_generated_files/eusart1.c: 129:     PIE3bits.RC1IE = 1;
 24597  007BBE  010E               	movlb	14	; () banked
 24598  007BC0  8BC5               	bsf	197,5,b	;volatile
 24599                           
 24600                           ; BSR set to: 14
 24601  007BC2  0012               	return		;funcret
 24602  007BC4                     __end_of_EUSART1_Initialize:
 24603                           	callstack 0
 24604                           
 24605 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
 24606 ;; Defined at:
 24607 ;;		line 276 in file "mcc_generated_files/eusart1.c"
 24608 ;; Parameters:    Size  Location     Type
 24609 ;;  interruptHan    2   15[COMRAM] PTR FTN()void 
 24610 ;;		 -> EUSART1_Transmit_ISR(1), 
 24611 ;; Auto vars:     Size  Location     Type
 24612 ;;		None
 24613 ;; Return value:  Size  Location     Type
 24614 ;;                  1    wreg      void 
 24615 ;; Registers used:
 24616 ;;		wreg, status,2, status,0
 24617 ;; Tracked objects:
 24618 ;;		On entry : 3F/E
 24619 ;;		On exit  : 3F/E
 24620 ;;		Unchanged: 3F/0
 24621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24622 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24623 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24625 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24626 ;;Total ram usage:        2 bytes
 24627 ;; Hardware stack levels used: 1
 24628 ;; Hardware stack levels required when called: 4
 24629 ;; This function calls:
 24630 ;;		Nothing
 24631 ;; This function is called by:
 24632 ;;		_EUSART1_Initialize
 24633 ;; This function uses a non-reentrant model
 24634 ;;
 24635                           
 24636                           	psect	text102
 24637  0091B6                     __ptext102:
 24638                           	callstack 0
 24639  0091B6                     _EUSART1_SetTxInterruptHandler:
 24640                           	callstack 24
 24641                           
 24642                           ; BSR set to: 14
 24643                           ;mcc_generated_files/eusart1.c: 277:     EUSART1_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
 24644                           
 24645                           ; BSR set to: 14
 24646                           ;incstack = 0
 24647  0091B6  C010  F2ED         	movff	EUSART1_SetTxInterruptHandler@interruptHandler,_EUSART1_TxDefaultInterruptHandler
 24648  0091BA  C011  F2EE         	movff	EUSART1_SetTxInterruptHandler@interruptHandler+1,_EUSART1_TxDefaultInterruptHandl
      +                          er+1
 24649                           
 24650                           ; BSR set to: 14
 24651  0091BE  0012               	return		;funcret
 24652  0091C0                     __end_of_EUSART1_SetTxInterruptHandler:
 24653                           	callstack 0
 24654                           
 24655 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
 24656 ;; Defined at:
 24657 ;;		line 280 in file "mcc_generated_files/eusart1.c"
 24658 ;; Parameters:    Size  Location     Type
 24659 ;;  interruptHan    2   15[COMRAM] PTR FTN()void 
 24660 ;;		 -> EUSART1_Receive_ISR(1), 
 24661 ;; Auto vars:     Size  Location     Type
 24662 ;;		None
 24663 ;; Return value:  Size  Location     Type
 24664 ;;                  1    wreg      void 
 24665 ;; Registers used:
 24666 ;;		wreg, status,2, status,0
 24667 ;; Tracked objects:
 24668 ;;		On entry : 3F/E
 24669 ;;		On exit  : 3F/E
 24670 ;;		Unchanged: 3F/0
 24671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24672 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24675 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24676 ;;Total ram usage:        2 bytes
 24677 ;; Hardware stack levels used: 1
 24678 ;; Hardware stack levels required when called: 4
 24679 ;; This function calls:
 24680 ;;		Nothing
 24681 ;; This function is called by:
 24682 ;;		_EUSART1_Initialize
 24683 ;; This function uses a non-reentrant model
 24684 ;;
 24685                           
 24686                           	psect	text103
 24687  0091C0                     __ptext103:
 24688                           	callstack 0
 24689  0091C0                     _EUSART1_SetRxInterruptHandler:
 24690                           	callstack 24
 24691                           
 24692                           ; BSR set to: 14
 24693                           ;mcc_generated_files/eusart1.c: 281:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
 24694                           
 24695                           ; BSR set to: 14
 24696                           ;incstack = 0
 24697  0091C0  C010  F2EB         	movff	EUSART1_SetRxInterruptHandler@interruptHandler,_EUSART1_RxDefaultInterruptHandler
 24698  0091C4  C011  F2EC         	movff	EUSART1_SetRxInterruptHandler@interruptHandler+1,_EUSART1_RxDefaultInterruptHandl
      +                          er+1
 24699                           
 24700                           ; BSR set to: 14
 24701  0091C8  0012               	return		;funcret
 24702  0091CA                     __end_of_EUSART1_SetRxInterruptHandler:
 24703                           	callstack 0
 24704                           
 24705 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
 24706 ;; Defined at:
 24707 ;;		line 268 in file "mcc_generated_files/eusart1.c"
 24708 ;; Parameters:    Size  Location     Type
 24709 ;;  interruptHan    2   15[COMRAM] PTR FTN()void 
 24710 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
 24711 ;; Auto vars:     Size  Location     Type
 24712 ;;		None
 24713 ;; Return value:  Size  Location     Type
 24714 ;;                  1    wreg      void 
 24715 ;; Registers used:
 24716 ;;		wreg, status,2, status,0
 24717 ;; Tracked objects:
 24718 ;;		On entry : 3F/E
 24719 ;;		On exit  : 3F/E
 24720 ;;		Unchanged: 3F/0
 24721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24722 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24723 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24725 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24726 ;;Total ram usage:        2 bytes
 24727 ;; Hardware stack levels used: 1
 24728 ;; Hardware stack levels required when called: 4
 24729 ;; This function calls:
 24730 ;;		Nothing
 24731 ;; This function is called by:
 24732 ;;		_EUSART1_Initialize
 24733 ;; This function uses a non-reentrant model
 24734 ;;
 24735                           
 24736                           	psect	text104
 24737  0091CA                     __ptext104:
 24738                           	callstack 0
 24739  0091CA                     _EUSART1_SetOverrunErrorHandler:
 24740                           	callstack 24
 24741                           
 24742                           ; BSR set to: 14
 24743                           ;mcc_generated_files/eusart1.c: 269:     EUSART1_OverrunErrorHandler = interruptHandler;
 24744                           
 24745                           ; BSR set to: 14
 24746                           ;incstack = 0
 24747  0091CA  C010  F2E7         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
 24748  0091CE  C011  F2E8         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
 24749                           
 24750                           ; BSR set to: 14
 24751  0091D2  0012               	return		;funcret
 24752  0091D4                     __end_of_EUSART1_SetOverrunErrorHandler:
 24753                           	callstack 0
 24754                           
 24755 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
 24756 ;; Defined at:
 24757 ;;		line 264 in file "mcc_generated_files/eusart1.c"
 24758 ;; Parameters:    Size  Location     Type
 24759 ;;  interruptHan    2   15[COMRAM] PTR FTN()void 
 24760 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
 24761 ;; Auto vars:     Size  Location     Type
 24762 ;;		None
 24763 ;; Return value:  Size  Location     Type
 24764 ;;                  1    wreg      void 
 24765 ;; Registers used:
 24766 ;;		wreg, status,2, status,0
 24767 ;; Tracked objects:
 24768 ;;		On entry : 3F/E
 24769 ;;		On exit  : 3F/E
 24770 ;;		Unchanged: 3F/0
 24771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24772 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24773 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24775 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24776 ;;Total ram usage:        2 bytes
 24777 ;; Hardware stack levels used: 1
 24778 ;; Hardware stack levels required when called: 4
 24779 ;; This function calls:
 24780 ;;		Nothing
 24781 ;; This function is called by:
 24782 ;;		_EUSART1_Initialize
 24783 ;; This function uses a non-reentrant model
 24784 ;;
 24785                           
 24786                           	psect	text105
 24787  0091D4                     __ptext105:
 24788                           	callstack 0
 24789  0091D4                     _EUSART1_SetFramingErrorHandler:
 24790                           	callstack 24
 24791                           
 24792                           ; BSR set to: 14
 24793                           ;mcc_generated_files/eusart1.c: 265:     EUSART1_FramingErrorHandler = interruptHandler;
 24794                           
 24795                           ; BSR set to: 14
 24796                           ;incstack = 0
 24797  0091D4  C010  F2E9         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
 24798  0091D8  C011  F2EA         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
 24799                           
 24800                           ; BSR set to: 14
 24801  0091DC  0012               	return		;funcret
 24802  0091DE                     __end_of_EUSART1_SetFramingErrorHandler:
 24803                           	callstack 0
 24804                           
 24805 ;; *************** function _EUSART1_SetErrorHandler *****************
 24806 ;; Defined at:
 24807 ;;		line 272 in file "mcc_generated_files/eusart1.c"
 24808 ;; Parameters:    Size  Location     Type
 24809 ;;  interruptHan    2   15[COMRAM] PTR FTN()void 
 24810 ;;		 -> EUSART1_DefaultErrorHandler(1), 
 24811 ;; Auto vars:     Size  Location     Type
 24812 ;;		None
 24813 ;; Return value:  Size  Location     Type
 24814 ;;                  1    wreg      void 
 24815 ;; Registers used:
 24816 ;;		wreg, status,2, status,0
 24817 ;; Tracked objects:
 24818 ;;		On entry : 3F/E
 24819 ;;		On exit  : 3F/E
 24820 ;;		Unchanged: 3F/0
 24821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24822 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24823 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24824 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24825 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24826 ;;Total ram usage:        2 bytes
 24827 ;; Hardware stack levels used: 1
 24828 ;; Hardware stack levels required when called: 4
 24829 ;; This function calls:
 24830 ;;		Nothing
 24831 ;; This function is called by:
 24832 ;;		_EUSART1_Initialize
 24833 ;; This function uses a non-reentrant model
 24834 ;;
 24835                           
 24836                           	psect	text106
 24837  0091DE                     __ptext106:
 24838                           	callstack 0
 24839  0091DE                     _EUSART1_SetErrorHandler:
 24840                           	callstack 24
 24841                           
 24842                           ; BSR set to: 14
 24843                           ;mcc_generated_files/eusart1.c: 273:     EUSART1_ErrorHandler = interruptHandler;
 24844                           
 24845                           ; BSR set to: 14
 24846                           ;incstack = 0
 24847  0091DE  C010  F2E5         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
 24848  0091E2  C011  F2E6         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
 24849                           
 24850                           ; BSR set to: 14
 24851  0091E6  0012               	return		;funcret
 24852  0091E8                     __end_of_EUSART1_SetErrorHandler:
 24853                           	callstack 0
 24854                           
 24855 ;; *************** function _ADCC_Initialize *****************
 24856 ;; Defined at:
 24857 ;;		line 62 in file "mcc_generated_files/adcc.c"
 24858 ;; Parameters:    Size  Location     Type
 24859 ;;		None
 24860 ;; Auto vars:     Size  Location     Type
 24861 ;;		None
 24862 ;; Return value:  Size  Location     Type
 24863 ;;                  1    wreg      void 
 24864 ;; Registers used:
 24865 ;;		wreg, status,2
 24866 ;; Tracked objects:
 24867 ;;		On entry : 3F/E
 24868 ;;		On exit  : 3F/F
 24869 ;;		Unchanged: 0/0
 24870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24871 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24872 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24874 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24875 ;;Total ram usage:        0 bytes
 24876 ;; Hardware stack levels used: 1
 24877 ;; Hardware stack levels required when called: 4
 24878 ;; This function calls:
 24879 ;;		Nothing
 24880 ;; This function is called by:
 24881 ;;		_SYSTEM_Initialize
 24882 ;; This function uses a non-reentrant model
 24883 ;;
 24884                           
 24885                           	psect	text107
 24886  008608                     __ptext107:
 24887                           	callstack 0
 24888  008608                     _ADCC_Initialize:
 24889                           	callstack 25
 24890                           
 24891                           ; BSR set to: 14
 24892                           ;mcc_generated_files/adcc.c: 66:     ADLTHL = 0x00;
 24893                           
 24894                           ; BSR set to: 14
 24895                           ;incstack = 0
 24896  008608  0E00               	movlw	0
 24897  00860A  6E6A               	movwf	106,c	;volatile
 24898                           
 24899                           ;mcc_generated_files/adcc.c: 68:     ADLTHH = 0x00;
 24900  00860C  0E00               	movlw	0
 24901  00860E  6E6B               	movwf	107,c	;volatile
 24902                           
 24903                           ;mcc_generated_files/adcc.c: 70:     ADUTHL = 0x00;
 24904  008610  0E00               	movlw	0
 24905  008612  6E6C               	movwf	108,c	;volatile
 24906                           
 24907                           ;mcc_generated_files/adcc.c: 72:     ADUTHH = 0x00;
 24908  008614  0E00               	movlw	0
 24909  008616  6E6D               	movwf	109,c	;volatile
 24910                           
 24911                           ;mcc_generated_files/adcc.c: 74:     ADSTPTL = 0x00;
 24912  008618  0E00               	movlw	0
 24913  00861A  6E68               	movwf	104,c	;volatile
 24914                           
 24915                           ;mcc_generated_files/adcc.c: 76:     ADSTPTH = 0x00;
 24916  00861C  0E00               	movlw	0
 24917  00861E  6E69               	movwf	105,c	;volatile
 24918                           
 24919                           ;mcc_generated_files/adcc.c: 78:     ADRPT = 0x00;
 24920  008620  0E00               	movlw	0
 24921  008622  6E66               	movwf	102,c	;volatile
 24922                           
 24923                           ;mcc_generated_files/adcc.c: 80:     ADPCH = 0x00;
 24924  008624  0E00               	movlw	0
 24925  008626  010F               	movlb	15	; () banked
 24926  008628  6F5F               	movwf	95,b	;volatile
 24927                           
 24928                           ;mcc_generated_files/adcc.c: 82:     ADCAP = 0x00;
 24929  00862A  0E00               	movlw	0
 24930  00862C  6F5D               	movwf	93,b	;volatile
 24931                           
 24932                           ;mcc_generated_files/adcc.c: 84:     ADPRE = 0x00;
 24933  00862E  0E00               	movlw	0
 24934  008630  6F5E               	movwf	94,b	;volatile
 24935                           
 24936                           ;mcc_generated_files/adcc.c: 86:     ADCON1 = 0x00;
 24937  008632  0E00               	movlw	0
 24938  008634  6F59               	movwf	89,b	;volatile
 24939                           
 24940                           ;mcc_generated_files/adcc.c: 88:     ADCON2 = 0x00;
 24941  008636  0E00               	movlw	0
 24942  008638  6F5A               	movwf	90,b	;volatile
 24943                           
 24944                           ;mcc_generated_files/adcc.c: 90:     ADCON3 = 0x00;
 24945  00863A  0E00               	movlw	0
 24946  00863C  6F5B               	movwf	91,b	;volatile
 24947                           
 24948                           ;mcc_generated_files/adcc.c: 92:     ADSTAT = 0x00;
 24949  00863E  0E00               	movlw	0
 24950  008640  6E65               	movwf	101,c	;volatile
 24951                           
 24952                           ;mcc_generated_files/adcc.c: 94:     ADREF = 0x00;
 24953  008642  0E00               	movlw	0
 24954  008644  6F58               	movwf	88,b	;volatile
 24955                           
 24956                           ;mcc_generated_files/adcc.c: 96:     ADACT = 0x00;
 24957  008646  0E00               	movlw	0
 24958  008648  6F56               	movwf	86,b	;volatile
 24959                           
 24960                           ;mcc_generated_files/adcc.c: 98:     ADCLK = 0x3F;
 24961  00864A  0E3F               	movlw	63
 24962  00864C  6F57               	movwf	87,b	;volatile
 24963                           
 24964                           ;mcc_generated_files/adcc.c: 100:     ADCON0 = 0x80;
 24965  00864E  0E80               	movlw	128
 24966  008650  6E60               	movwf	96,c	;volatile
 24967                           
 24968                           ;mcc_generated_files/adcc.c: 102:     ADACQ = 0x00;
 24969  008652  0E00               	movlw	0
 24970  008654  6F5C               	movwf	92,b	;volatile
 24971                           
 24972                           ; BSR set to: 15
 24973  008656  0012               	return		;funcret
 24974  008658                     __end_of_ADCC_Initialize:
 24975                           	callstack 0
 24976                           
 24977 ;; *************** function _EUSART1_is_rx_ready *****************
 24978 ;; Defined at:
 24979 ;;		line 137 in file "mcc_generated_files/eusart1.c"
 24980 ;; Parameters:    Size  Location     Type
 24981 ;;		None
 24982 ;; Auto vars:     Size  Location     Type
 24983 ;;		None
 24984 ;; Return value:  Size  Location     Type
 24985 ;;                  1    wreg      _Bool 
 24986 ;; Registers used:
 24987 ;;		wreg, status,2
 24988 ;; Tracked objects:
 24989 ;;		On entry : 0/1
 24990 ;;		On exit  : 3F/0
 24991 ;;		Unchanged: 0/0
 24992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24996 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24997 ;;Total ram usage:        0 bytes
 24998 ;; Hardware stack levels used: 1
 24999 ;; Hardware stack levels required when called: 4
 25000 ;; This function calls:
 25001 ;;		Nothing
 25002 ;; This function is called by:
 25003 ;;		_main
 25004 ;; This function uses a non-reentrant model
 25005 ;;
 25006                           
 25007                           	psect	text108
 25008  00912C                     __ptext108:
 25009                           	callstack 0
 25010  00912C                     _EUSART1_is_rx_ready:
 25011                           	callstack 26
 25012                           
 25013                           ;mcc_generated_files/eusart1.c: 139:     return (eusart1RxCount ? 1 : 0);
 25014                           
 25015                           ; BSR set to: 15
 25016                           ;incstack = 0
 25017  00912C  0100               	movlb	0	; () banked
 25018  00912E  5193               	movf	_eusart1RxCount& (0+255),w,b	;volatile
 25019  009130  B4D8               	btfsc	status,2,c
 25020  009132  D002               	goto	u18190
 25021  009134  0E01               	movlw	1
 25022  009136  0012               	return	
 25023  009138                     u18190:
 25024  009138  0E00               	movlw	0
 25025                           
 25026                           ; BSR set to: 0
 25027  00913A  0012               	return		;funcret
 25028  00913C                     __end_of_EUSART1_is_rx_ready:
 25029                           	callstack 0
 25030                           
 25031 ;; *************** function _ControlMotor *****************
 25032 ;; Defined at:
 25033 ;;		line 703 in file "outputs_MC50.c"
 25034 ;; Parameters:    Size  Location     Type
 25035 ;;		None
 25036 ;; Auto vars:     Size  Location     Type
 25037 ;;  stateMotor      1   23[COMRAM] enum E10381
 25038 ;; Return value:  Size  Location     Type
 25039 ;;                  1    wreg      void 
 25040 ;; Registers used:
 25041 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 25042 ;; Tracked objects:
 25043 ;;		On entry : 3E/1
 25044 ;;		On exit  : 3E/0
 25045 ;;		Unchanged: 0/0
 25046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25047 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25048 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25049 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25050 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25051 ;;Total ram usage:        7 bytes
 25052 ;; Hardware stack levels used: 1
 25053 ;; Hardware stack levels required when called: 5
 25054 ;; This function calls:
 25055 ;;		_VerifyElectricalBrake
 25056 ;; This function is called by:
 25057 ;;		_main
 25058 ;; This function uses a non-reentrant model
 25059 ;;
 25060                           
 25061                           	psect	text109
 25062  004746                     __ptext109:
 25063                           	callstack 0
 25064  004746                     _ControlMotor:
 25065                           	callstack 25
 25066                           
 25067                           ;outputs_MC50.c: 707:     if((var_sys.TimeMaxMotorIsON<=0) && (var_sys.WorkTimeMaxAlarmS
      +                          tate!=Clear) && (var_sys.LearningIsEnabled==NO) && (var_sys.PositionIsLost==NO)){
 25068                           
 25069                           ; BSR set to: 0
 25070                           ;incstack = 0
 25071  004746  0101               	movlb	1	; () banked
 25072  004748  5118               	movf	(_var_sys+24)& (0+255),w,b	;volatile
 25073  00474A  1119               	iorwf	(_var_sys+25)& (0+255),w,b	;volatile
 25074  00474C  111A               	iorwf	(_var_sys+26)& (0+255),w,b	;volatile
 25075  00474E  111B               	iorwf	(_var_sys+27)& (0+255),w,b	;volatile
 25076  004750  A4D8               	btfss	status,2,c
 25077  004752  D00D               	goto	l16853
 25078                           
 25079                           ; BSR set to: 1
 25080  004754  5142               	movf	(_var_sys+66)& (0+255),w,b	;volatile
 25081  004756  B4D8               	btfsc	status,2,c
 25082  004758  D00A               	goto	l16853
 25083                           
 25084                           ; BSR set to: 1
 25085  00475A  5126               	movf	(_var_sys+38)& (0+255),w,b	;volatile
 25086  00475C  A4D8               	btfss	status,2,c
 25087  00475E  D007               	goto	l16853
 25088                           
 25089                           ; BSR set to: 1
 25090  004760  5148               	movf	(_var_sys+72)& (0+255),w,b	;volatile
 25091  004762  A4D8               	btfss	status,2,c
 25092  004764  D004               	goto	l16853
 25093                           
 25094                           ; BSR set to: 1
 25095                           ;outputs_MC50.c: 708:         var_sys.StateMotor = Stopped;
 25096  004766  0E00               	movlw	0
 25097  004768  6F00               	movwf	_var_sys& (0+255),b	;volatile
 25098                           
 25099                           ;outputs_MC50.c: 709:         var_sys.WorkTimeMaxAlarmState=EmAlarme;
 25100  00476A  0E02               	movlw	2
 25101  00476C  D007               	goto	L100
 25102  00476E                     l16853:
 25103                           
 25104                           ; BSR set to: 1
 25105  00476E  0542               	decf	(_var_sys+66)& (0+255),w,b	;volatile
 25106  004770  A4D8               	btfss	status,2,c
 25107  004772  D005               	goto	l16859
 25108                           
 25109                           ; BSR set to: 1
 25110  004774  5100               	movf	_var_sys& (0+255),w,b	;volatile
 25111  004776  A4D8               	btfss	status,2,c
 25112  004778  D002               	goto	l16859
 25113                           
 25114                           ; BSR set to: 1
 25115                           ;outputs_MC50.c: 716:     {;outputs_MC50.c: 717:          var_sys.WorkTimeMaxAlarmState=
      +                          Clear;
 25116  00477A  0E00               	movlw	0
 25117  00477C                     L100:
 25118  00477C  6F42               	movwf	(_var_sys+66)& (0+255),b	;volatile
 25119  00477E                     l16859:
 25120                           
 25121                           ; BSR set to: 1
 25122                           ;outputs_MC50.c: 721:     stateMotor_enum stateMotor=VerifyElectricalBrake(var_sys.State
      +                          Motor);
 25123  00477E  5100               	movf	_var_sys& (0+255),w,b	;volatile
 25124  004780  EC5D  F03E         	call	_VerifyElectricalBrake
 25125  004784  6E18               	movwf	ControlMotor@stateMotor^0,c
 25126                           
 25127                           ;outputs_MC50.c: 722:     if(stateMotor == Stopped )
 25128  004786  5018               	movf	ControlMotor@stateMotor^0,w,c
 25129  004788  A4D8               	btfss	status,2,c
 25130  00478A  D00A               	goto	l16869
 25131                           
 25132                           ;outputs_MC50.c: 723:     {;outputs_MC50.c: 724:         var_sys.InStoping = YES;
 25133  00478C  0E01               	movlw	1
 25134  00478E  0101               	movlb	1	; () banked
 25135  004790  6F0D               	movwf	(_var_sys+13)& (0+255),b	;volatile
 25136                           
 25137                           ; BSR set to: 1
 25138                           ;outputs_MC50.c: 725:         if(ts_system.ts_TRIACWait>=0)
 25139  004792  BFA1               	btfsc	(_ts_system+7)& (0+255),7,b	;volatile
 25140  004794  0012               	return	
 25141                           
 25142                           ; BSR set to: 1
 25143                           
 25144                           ;outputs_MC50.c: 726:         {;outputs_MC50.c: 727:             do { LATEbits.LATE1 = 0
      +                          ; } while(0);
 25145  004796  9287               	bcf	135,1,c	;volatile
 25146                           
 25147                           ; BSR set to: 1
 25148                           
 25149                           ;outputs_MC50.c: 728:             do { LATEbits.LATE0 = 0; } while(0);
 25150  004798  9087               	bcf	135,0,c	;volatile
 25151  00479A                     l16867:
 25152                           
 25153                           ; BSR set to: 1
 25154                           ;outputs_MC50.c: 729:             var_sys.Activatecounter = stoped ;
 25155  00479A  0E00               	movlw	0
 25156  00479C  6F16               	movwf	(_var_sys+22)& (0+255),b	;volatile
 25157  00479E  0012               	return	
 25158  0047A0                     l16869:
 25159  0047A0  0100               	movlb	0	; () banked
 25160  0047A2  05AF               	decf	(_var_sys_NVM+23)& (0+255),w,b	;volatile
 25161  0047A4  A4D8               	btfss	status,2,c
 25162  0047A6  D022               	goto	l16885
 25163                           
 25164                           ; BSR set to: 0
 25165  0047A8  0579               	decf	(_brakeElectric_st+1)& (0+255),w,b
 25166  0047AA  A4D8               	btfss	status,2,c
 25167  0047AC  D01F               	goto	l16885
 25168                           
 25169                           ; BSR set to: 0
 25170  0047AE  0101               	movlb	1	; () banked
 25171  0047B0  5100               	movf	_var_sys& (0+255),w,b	;volatile
 25172  0047B2  A4D8               	btfss	status,2,c
 25173  0047B4  D01B               	goto	l16885
 25174                           
 25175                           ; BSR set to: 1
 25176  0047B6  5018               	movf	ControlMotor@stateMotor^0,w,c
 25177  0047B8  A4D8               	btfss	status,2,c
 25178                           
 25179                           ; BSR set to: 1
 25180  0047BA  BFC3               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 25181  0047BC  D017               	goto	l16885
 25182  0047BE  51C3               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 25183  0047C0  E103               	bnz	u19850
 25184  0047C2  05C2               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 25185  0047C4  A0D8               	btfss	status,0,c
 25186  0047C6  D012               	goto	l16885
 25187  0047C8                     u19850:
 25188                           
 25189                           ; BSR set to: 1
 25190  0047C8  BFDB               	btfsc	(_ts_system+65)& (0+255),7,b	;volatile
 25191  0047CA  D005               	goto	u19860
 25192  0047CC  51DB               	movf	(_ts_system+65)& (0+255),w,b	;volatile
 25193  0047CE  E10E               	bnz	l16885
 25194  0047D0  05DA               	decf	(_ts_system+64)& (0+255),w,b	;volatile
 25195  0047D2  B0D8               	btfsc	status,0,c
 25196  0047D4  D00B               	goto	l16885
 25197  0047D6                     u19860:
 25198                           
 25199                           ; BSR set to: 1
 25200                           ;outputs_MC50.c: 739:     {;outputs_MC50.c: 742:         if ( ts_system.TimeElectricBrak
      +                          e<(((5+6)*( 100/50))-(2*( 100/50))) )
 25201  0047D6  BFC3               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 25202  0047D8  D006               	goto	u19870
 25203  0047DA  51C3               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 25204  0047DC  E103               	bnz	u19871
 25205  0047DE  0E12               	movlw	18
 25206  0047E0  5DC2               	subwf	(_ts_system+40)& (0+255),w,b	;volatile
 25207  0047E2  B0D8               	btfsc	status,0,c
 25208  0047E4                     u19871:
 25209  0047E4  0012               	return	
 25210  0047E6                     u19870:
 25211                           
 25212                           ; BSR set to: 1
 25213                           
 25214                           ;outputs_MC50.c: 743:         {;outputs_MC50.c: 748:             do { LATEbits.LATE1 = 1
      +                          ; } while(0);
 25215  0047E6  8287               	bsf	135,1,c	;volatile
 25216                           
 25217                           ; BSR set to: 1
 25218                           
 25219                           ;outputs_MC50.c: 749:             do { LATEbits.LATE0 = 1; } while(0);
 25220  0047E8  8087               	bsf	135,0,c	;volatile
 25221  0047EA  D7D7               	goto	l16867
 25222  0047EC                     l16885:
 25223  0047EC  0418               	decf	ControlMotor@stateMotor^0,w,c
 25224  0047EE  B4D8               	btfsc	status,2,c
 25225  0047F0  D004               	goto	u19890
 25226  0047F2  0E02               	movlw	2
 25227  0047F4  1818               	xorwf	ControlMotor@stateMotor^0,w,c
 25228  0047F6  A4D8               	btfss	status,2,c
 25229  0047F8  D063               	goto	l16915
 25230  0047FA                     u19890:
 25231  0047FA  0101               	movlb	1	; () banked
 25232  0047FC  5104               	movf	(_var_sys+4)& (0+255),w,b	;volatile
 25233  0047FE  A4D8               	btfss	status,2,c
 25234  004800  D05F               	goto	l16915
 25235                           
 25236                           ; BSR set to: 1
 25237                           ;outputs_MC50.c: 761:     {;outputs_MC50.c: 762:         if((PORTEbits.RE1==0 && var_sys
      +                          _NVM.Direction_motor == 0)||(PORTEbits.RE0==0 && var_sys_NVM.Direction_motor == 1))
 25238  004802  B291               	btfsc	145,1,c	;volatile
 25239  004804  D004               	goto	u19920
 25240                           
 25241                           ; BSR set to: 1
 25242  004806  0100               	movlb	0	; () banked
 25243  004808  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 25244  00480A  B4D8               	btfsc	status,2,c
 25245  00480C  D006               	goto	u19940
 25246  00480E                     u19920:
 25247  00480E  B091               	btfsc	145,0,c	;volatile
 25248  004810  D04F               	goto	l2348
 25249  004812  0100               	movlb	0	; () banked
 25250  004814  05B3               	decf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 25251  004816  A4D8               	btfss	status,2,c
 25252  004818  D04B               	goto	l2348
 25253  00481A                     u19940:
 25254                           
 25255                           ; BSR set to: 0
 25256                           ;outputs_MC50.c: 763:         {;outputs_MC50.c: 764:             if((PORTEbits.RE0==0 &&
      +                           var_sys_NVM.Direction_motor == 0)||(PORTEbits.RE1==0 && var_sys_NVM.Direction_motor == 
      +                          1))
 25257  00481A  B091               	btfsc	145,0,c	;volatile
 25258  00481C  D003               	goto	u19960
 25259                           
 25260                           ; BSR set to: 0
 25261  00481E  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 25262  004820  B4D8               	btfsc	status,2,c
 25263  004822  D005               	goto	u19980
 25264  004824                     u19960:
 25265                           
 25266                           ; BSR set to: 0
 25267  004824  B291               	btfsc	145,1,c	;volatile
 25268  004826  D03A               	goto	l16911
 25269                           
 25270                           ; BSR set to: 0
 25271  004828  05B3               	decf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 25272  00482A  A4D8               	btfss	status,2,c
 25273  00482C  D037               	goto	l16911
 25274  00482E                     u19980:
 25275                           
 25276                           ; BSR set to: 0
 25277                           ;outputs_MC50.c: 765:             {;outputs_MC50.c: 766:                 var_sys.InStopi
      +                          ng = NO;
 25278  00482E  0E00               	movlw	0
 25279  004830  0101               	movlb	1	; () banked
 25280  004832  6F0D               	movwf	(_var_sys+13)& (0+255),b	;volatile
 25281                           
 25282                           ;outputs_MC50.c: 767:                 ts_system.ts_TRIACWait=200;
 25283  004834  0E00               	movlw	0
 25284  004836  6FA1               	movwf	(_ts_system+7)& (0+255),b	;volatile
 25285  004838  0EC8               	movlw	200
 25286  00483A  6FA0               	movwf	(_ts_system+6)& (0+255),b	;volatile
 25287                           
 25288                           ;outputs_MC50.c: 768:                 ts_system.TimeChargeCondesador=(1000/50);
 25289  00483C  0E00               	movlw	0
 25290  00483E  6FB5               	movwf	(_ts_system+27)& (0+255),b	;volatile
 25291  004840  0E14               	movlw	20
 25292  004842  6FB4               	movwf	(_ts_system+26)& (0+255),b	;volatile
 25293                           
 25294                           ; BSR set to: 1
 25295                           ;outputs_MC50.c: 769:                 if (var_sys.FimCurso_CloseIsEnabled == YES|| var_s
      +                          ys.Statedoorcontrol == st_Closed ){
 25296  004844  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
 25297  004846  B4D8               	btfsc	status,2,c
 25298  004848  D003               	goto	u20000
 25299                           
 25300                           ; BSR set to: 1
 25301  00484A  051C               	decf	(_var_sys+28)& (0+255),w,b	;volatile
 25302  00484C  A4D8               	btfss	status,2,c
 25303  00484E  D024               	goto	l16909
 25304  004850                     u20000:
 25305                           
 25306                           ; BSR set to: 1
 25307                           ;outputs_MC50.c: 770:                 var_sys.TimeMaxMotorIsON=((unsigned int)var_sys_NV
      +                          M.velocityDecelaration+((unsigned int)var_sys_NVM.decelarationOpen)*( 500/50))+var_sys_N
      +                          VM.learningTimeToOpen + (1000/50)*4;
 25308  004850  0100               	movlb	0	; () banked
 25309  004852  5198               	movf	_var_sys_NVM& (0+255),w,b	;volatile
 25310  004854  0D0A               	mullw	10
 25311  004856  CFF3 F012          	movff	prodl,??_ControlMotor
 25312  00485A  CFF4 F013          	movff	prodh,??_ControlMotor+1
 25313  00485E  51B0               	movf	(_var_sys_NVM+24)& (0+255),w,b	;volatile
 25314  004860  2612               	addwf	??_ControlMotor^0,f,c
 25315  004862  0E00               	movlw	0
 25316  004864  2213               	addwfc	(??_ControlMotor+1)^0,f,c
 25317  004866  5012               	movf	??_ControlMotor^0,w,c
 25318  004868  25CC               	addwf	(_var_sys_NVM+52)& (0+255),w,b	;volatile
 25319  00486A  6E14               	movwf	(??_ControlMotor+2)^0,c
 25320  00486C  5013               	movf	(??_ControlMotor+1)^0,w,c
 25321  00486E  21CD               	addwfc	(_var_sys_NVM+53)& (0+255),w,b	;volatile
 25322  004870  6E15               	movwf	(??_ControlMotor+3)^0,c
 25323  004872  0E00               	movlw	0
 25324  004874  21CE               	addwfc	(_var_sys_NVM+54)& (0+255),w,b	;volatile
 25325  004876  6E16               	movwf	(??_ControlMotor+4)^0,c
 25326  004878  0E00               	movlw	0
 25327  00487A  21CF               	addwfc	(_var_sys_NVM+55)& (0+255),w,b	;volatile
 25328  00487C  6E17               	movwf	(??_ControlMotor+5)^0,c
 25329  00487E  0E50               	movlw	80
 25330  004880  2414               	addwf	(??_ControlMotor+2)^0,w,c
 25331  004882  0101               	movlb	1	; () banked
 25332  004884  6F18               	movwf	(_var_sys+24)& (0+255),b	;volatile
 25333  004886  0E00               	movlw	0
 25334  004888  2015               	addwfc	(??_ControlMotor+3)^0,w,c
 25335  00488A  6F19               	movwf	(_var_sys+25)& (0+255),b	;volatile
 25336  00488C  0E00               	movlw	0
 25337  00488E  2016               	addwfc	(??_ControlMotor+4)^0,w,c
 25338  004890  6F1A               	movwf	(_var_sys+26)& (0+255),b	;volatile
 25339  004892  0E00               	movlw	0
 25340  004894  2017               	addwfc	(??_ControlMotor+5)^0,w,c
 25341  004896  6F1B               	movwf	(_var_sys+27)& (0+255),b	;volatile
 25342  004898                     l16909:
 25343                           
 25344                           ; BSR set to: 1
 25345                           ;outputs_MC50.c: 775:                 var_sys.Statedoorcontrol = st_Opening;
 25346  004898  0E02               	movlw	2
 25347  00489A  6F1C               	movwf	(_var_sys+28)& (0+255),b	;volatile
 25348  00489C                     l16911:
 25349                           
 25350                           ;outputs_MC50.c: 779:             if (var_sys_NVM.Direction_motor == 0){do { LATEbits.LA
      +                          TE0 = 1; } while(0);}
 25351  00489C  0100               	movlb	0	; () banked
 25352  00489E  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 25353  0048A0  A4D8               	btfss	status,2,c
 25354  0048A2  D002               	goto	l2365
 25355                           
 25356                           ; BSR set to: 0
 25357  0048A4  8087               	bsf	135,0,c	;volatile
 25358  0048A6  D001               	goto	l16913
 25359  0048A8                     l2365:
 25360                           
 25361                           ; BSR set to: 0
 25362  0048A8  8287               	bsf	135,1,c	;volatile
 25363  0048AA                     l16913:
 25364                           
 25365                           ; BSR set to: 0
 25366                           ;outputs_MC50.c: 781:             var_sys.Activatecounter = open ;
 25367  0048AA  0E01               	movlw	1
 25368  0048AC  0101               	movlb	1	; () banked
 25369  0048AE  6F16               	movwf	(_var_sys+22)& (0+255),b	;volatile
 25370  0048B0                     l2348:
 25371                           
 25372                           ;outputs_MC50.c: 785:            if (var_sys_NVM.Direction_motor == 0){do { LATEbits.LAT
      +                          E1 = 0; } while(0);}
 25373  0048B0  0100               	movlb	0	; () banked
 25374  0048B2  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 25375  0048B4  A4D8               	btfss	status,2,c
 25376  0048B6  D002               	goto	l2371
 25377                           
 25378                           ; BSR set to: 0
 25379  0048B8  9287               	bcf	135,1,c	;volatile
 25380  0048BA  0012               	return	
 25381  0048BC                     l2371:
 25382                           
 25383                           ; BSR set to: 0
 25384  0048BC  9087               	bcf	135,0,c	;volatile
 25385  0048BE  0012               	return	
 25386  0048C0                     l16915:
 25387  0048C0  0E03               	movlw	3
 25388  0048C2  1818               	xorwf	ControlMotor@stateMotor^0,w,c
 25389  0048C4  A4D8               	btfss	status,2,c
 25390  0048C6  0012               	return	
 25391  0048C8  0101               	movlb	1	; () banked
 25392  0048CA  5103               	movf	(_var_sys+3)& (0+255),w,b	;volatile
 25393  0048CC  A4D8               	btfss	status,2,c
 25394  0048CE  0012               	return	
 25395                           
 25396                           ; BSR set to: 1
 25397                           ;outputs_MC50.c: 791:     {;outputs_MC50.c: 792:         if((PORTEbits.RE0==0 && var_sys
      +                          _NVM.Direction_motor == 0)||(PORTEbits.RE1==0 && var_sys_NVM.Direction_motor == 1))
 25398  0048D0  B091               	btfsc	145,0,c	;volatile
 25399  0048D2  D004               	goto	u20060
 25400                           
 25401                           ; BSR set to: 1
 25402  0048D4  0100               	movlb	0	; () banked
 25403  0048D6  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 25404  0048D8  B4D8               	btfsc	status,2,c
 25405  0048DA  D006               	goto	u20080
 25406  0048DC                     u20060:
 25407  0048DC  B291               	btfsc	145,1,c	;volatile
 25408  0048DE  D050               	goto	l2375
 25409  0048E0  0100               	movlb	0	; () banked
 25410  0048E2  05B3               	decf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 25411  0048E4  A4D8               	btfss	status,2,c
 25412  0048E6  D04C               	goto	l2375
 25413  0048E8                     u20080:
 25414                           
 25415                           ; BSR set to: 0
 25416                           ;outputs_MC50.c: 793:         {;outputs_MC50.c: 794:             if((PORTEbits.RE1==0 &&
      +                           var_sys_NVM.Direction_motor == 0)||(PORTEbits.RE0==0 && var_sys_NVM.Direction_motor == 
      +                          1))
 25417  0048E8  B291               	btfsc	145,1,c	;volatile
 25418  0048EA  D003               	goto	u20100
 25419                           
 25420                           ; BSR set to: 0
 25421  0048EC  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 25422  0048EE  B4D8               	btfsc	status,2,c
 25423  0048F0  D005               	goto	u20120
 25424  0048F2                     u20100:
 25425                           
 25426                           ; BSR set to: 0
 25427  0048F2  B091               	btfsc	145,0,c	;volatile
 25428  0048F4  D03B               	goto	l16939
 25429                           
 25430                           ; BSR set to: 0
 25431  0048F6  05B3               	decf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 25432  0048F8  A4D8               	btfss	status,2,c
 25433  0048FA  D038               	goto	l16939
 25434  0048FC                     u20120:
 25435                           
 25436                           ; BSR set to: 0
 25437                           ;outputs_MC50.c: 795:             {;outputs_MC50.c: 796:                 var_sys.InStopi
      +                          ng = NO;
 25438  0048FC  0E00               	movlw	0
 25439  0048FE  0101               	movlb	1	; () banked
 25440  004900  6F0D               	movwf	(_var_sys+13)& (0+255),b	;volatile
 25441                           
 25442                           ;outputs_MC50.c: 797:                 ts_system.ts_TRIACWait=200;
 25443  004902  0E00               	movlw	0
 25444  004904  6FA1               	movwf	(_ts_system+7)& (0+255),b	;volatile
 25445  004906  0EC8               	movlw	200
 25446  004908  6FA0               	movwf	(_ts_system+6)& (0+255),b	;volatile
 25447                           
 25448                           ;outputs_MC50.c: 798:                 ts_system.TimeChargeCondesador=(1000/50);
 25449  00490A  0E00               	movlw	0
 25450  00490C  6FB5               	movwf	(_ts_system+27)& (0+255),b	;volatile
 25451  00490E  0E14               	movlw	20
 25452  004910  6FB4               	movwf	(_ts_system+26)& (0+255),b	;volatile
 25453                           
 25454                           ; BSR set to: 1
 25455                           ;outputs_MC50.c: 799:                 if (var_sys.FimCurso_OpenIsEnabled == YES|| var_sy
      +                          s.Statedoorcontrol == st_Opened){
 25456  004912  0504               	decf	(_var_sys+4)& (0+255),w,b	;volatile
 25457  004914  B4D8               	btfsc	status,2,c
 25458  004916  D004               	goto	u20140
 25459                           
 25460                           ; BSR set to: 1
 25461  004918  0E04               	movlw	4
 25462  00491A  191C               	xorwf	(_var_sys+28)& (0+255),w,b	;volatile
 25463  00491C  A4D8               	btfss	status,2,c
 25464  00491E  D024               	goto	l16937
 25465  004920                     u20140:
 25466                           
 25467                           ; BSR set to: 1
 25468                           ;outputs_MC50.c: 800:                 var_sys.TimeMaxMotorIsON=((unsigned int)var_sys_NV
      +                          M.velocityDecelaration+(unsigned int)var_sys_NVM.decelarationClose*( 500/50))+var_sys_NV
      +                          M.learningTimeToClose + (1000/50)*4;
 25469  004920  0100               	movlb	0	; () banked
 25470  004922  5199               	movf	(_var_sys_NVM+1)& (0+255),w,b	;volatile
 25471  004924  0D0A               	mullw	10
 25472  004926  CFF3 F012          	movff	prodl,??_ControlMotor
 25473  00492A  CFF4 F013          	movff	prodh,??_ControlMotor+1
 25474  00492E  51B0               	movf	(_var_sys_NVM+24)& (0+255),w,b	;volatile
 25475  004930  2612               	addwf	??_ControlMotor^0,f,c
 25476  004932  0E00               	movlw	0
 25477  004934  2213               	addwfc	(??_ControlMotor+1)^0,f,c
 25478  004936  5012               	movf	??_ControlMotor^0,w,c
 25479  004938  25D0               	addwf	(_var_sys_NVM+56)& (0+255),w,b	;volatile
 25480  00493A  6E14               	movwf	(??_ControlMotor+2)^0,c
 25481  00493C  5013               	movf	(??_ControlMotor+1)^0,w,c
 25482  00493E  21D1               	addwfc	(_var_sys_NVM+57)& (0+255),w,b	;volatile
 25483  004940  6E15               	movwf	(??_ControlMotor+3)^0,c
 25484  004942  0E00               	movlw	0
 25485  004944  21D2               	addwfc	(_var_sys_NVM+58)& (0+255),w,b	;volatile
 25486  004946  6E16               	movwf	(??_ControlMotor+4)^0,c
 25487  004948  0E00               	movlw	0
 25488  00494A  21D3               	addwfc	(_var_sys_NVM+59)& (0+255),w,b	;volatile
 25489  00494C  6E17               	movwf	(??_ControlMotor+5)^0,c
 25490  00494E  0E50               	movlw	80
 25491  004950  2414               	addwf	(??_ControlMotor+2)^0,w,c
 25492  004952  0101               	movlb	1	; () banked
 25493  004954  6F18               	movwf	(_var_sys+24)& (0+255),b	;volatile
 25494  004956  0E00               	movlw	0
 25495  004958  2015               	addwfc	(??_ControlMotor+3)^0,w,c
 25496  00495A  6F19               	movwf	(_var_sys+25)& (0+255),b	;volatile
 25497  00495C  0E00               	movlw	0
 25498  00495E  2016               	addwfc	(??_ControlMotor+4)^0,w,c
 25499  004960  6F1A               	movwf	(_var_sys+26)& (0+255),b	;volatile
 25500  004962  0E00               	movlw	0
 25501  004964  2017               	addwfc	(??_ControlMotor+5)^0,w,c
 25502  004966  6F1B               	movwf	(_var_sys+27)& (0+255),b	;volatile
 25503  004968                     l16937:
 25504                           
 25505                           ; BSR set to: 1
 25506                           ;outputs_MC50.c: 803:                 var_sys.Statedoorcontrol = st_Closing;
 25507  004968  0E03               	movlw	3
 25508  00496A  6F1C               	movwf	(_var_sys+28)& (0+255),b	;volatile
 25509  00496C                     l16939:
 25510                           
 25511                           ;outputs_MC50.c: 806:             if (var_sys_NVM.Direction_motor == 0){do { LATEbits.LA
      +                          TE1 = 1; } while(0);}
 25512  00496C  0100               	movlb	0	; () banked
 25513  00496E  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 25514  004970  A4D8               	btfss	status,2,c
 25515  004972  D002               	goto	l2392
 25516                           
 25517                           ; BSR set to: 0
 25518  004974  8287               	bsf	135,1,c	;volatile
 25519  004976  D001               	goto	l16941
 25520  004978                     l2392:
 25521                           
 25522                           ; BSR set to: 0
 25523  004978  8087               	bsf	135,0,c	;volatile
 25524  00497A                     l16941:
 25525                           
 25526                           ; BSR set to: 0
 25527                           ;outputs_MC50.c: 808:             var_sys.Activatecounter = close ;
 25528  00497A  0E02               	movlw	2
 25529  00497C  0101               	movlb	1	; () banked
 25530  00497E  6F16               	movwf	(_var_sys+22)& (0+255),b	;volatile
 25531  004980                     l2375:
 25532                           
 25533                           ;outputs_MC50.c: 811:            if (var_sys_NVM.Direction_motor == 0){do { LATEbits.LAT
      +                          E0 = 0; } while(0);}
 25534  004980  0100               	movlb	0	; () banked
 25535  004982  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 25536  004984  A4D8               	btfss	status,2,c
 25537  004986  D002               	goto	l2398
 25538                           
 25539                           ; BSR set to: 0
 25540  004988  9087               	bcf	135,0,c	;volatile
 25541  00498A  0012               	return	
 25542  00498C                     l2398:
 25543                           
 25544                           ; BSR set to: 0
 25545  00498C  9287               	bcf	135,1,c	;volatile
 25546  00498E  0012               	return		;funcret
 25547  004990                     __end_of_ControlMotor:
 25548                           	callstack 0
 25549                           
 25550 ;; *************** function _VerifyElectricalBrake *****************
 25551 ;; Defined at:
 25552 ;;		line 658 in file "outputs_MC50.c"
 25553 ;; Parameters:    Size  Location     Type
 25554 ;;  actualState     1    wreg     enum E10381
 25555 ;; Auto vars:     Size  Location     Type
 25556 ;;  actualState     1   16[COMRAM] enum E10381
 25557 ;;  tempState       1   15[COMRAM] enum E10381
 25558 ;; Return value:  Size  Location     Type
 25559 ;;                  1    wreg      enum E10381
 25560 ;; Registers used:
 25561 ;;		wreg, status,2, status,0
 25562 ;; Tracked objects:
 25563 ;;		On entry : 3F/1
 25564 ;;		On exit  : 3E/0
 25565 ;;		Unchanged: 0/0
 25566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25567 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25568 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25569 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25570 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25571 ;;Total ram usage:        2 bytes
 25572 ;; Hardware stack levels used: 1
 25573 ;; Hardware stack levels required when called: 4
 25574 ;; This function calls:
 25575 ;;		Nothing
 25576 ;; This function is called by:
 25577 ;;		_ControlMotor
 25578 ;; This function uses a non-reentrant model
 25579 ;;
 25580                           
 25581                           	psect	text110
 25582  007CBA                     __ptext110:
 25583                           	callstack 0
 25584  007CBA                     _VerifyElectricalBrake:
 25585                           	callstack 25
 25586                           
 25587                           ;incstack = 0
 25588                           ;VerifyElectricalBrake@actualState stored from wreg
 25589  007CBA  6E11               	movwf	VerifyElectricalBrake@actualState^0,c
 25590                           
 25591                           ;outputs_MC50.c: 658: stateMotor_enum VerifyElectricalBrake(stateMotor_enum actualState)
      +                          ;outputs_MC50.c: 659: {;outputs_MC50.c: 660:     stateMotor_enum tempState;;outputs_MC50
      +                          .c: 661:     tempState=actualState;
 25592  007CBC  C011  F010         	movff	VerifyElectricalBrake@actualState,VerifyElectricalBrake@tempState
 25593                           
 25594                           ;outputs_MC50.c: 662:     if(var_sys_NVM.electricBrake==1 && actualState==Stopped && ts_
      +                          system.TimeStopElectricBrake<=0)
 25595  007CC0  0100               	movlb	0	; () banked
 25596  007CC2  05AF               	decf	(_var_sys_NVM+23)& (0+255),w,b	;volatile
 25597  007CC4  A4D8               	btfss	status,2,c
 25598  007CC6  D02E               	goto	l2318
 25599                           
 25600                           ; BSR set to: 0
 25601  007CC8  5011               	movf	VerifyElectricalBrake@actualState^0,w,c
 25602  007CCA  A4D8               	btfss	status,2,c
 25603  007CCC  D02B               	goto	l2318
 25604                           
 25605                           ; BSR set to: 0
 25606  007CCE  0101               	movlb	1	; () banked
 25607  007CD0  BFDB               	btfsc	(_ts_system+65)& (0+255),7,b	;volatile
 25608  007CD2  D005               	goto	u15270
 25609  007CD4  51DB               	movf	(_ts_system+65)& (0+255),w,b	;volatile
 25610  007CD6  E126               	bnz	l2318
 25611  007CD8  05DA               	decf	(_ts_system+64)& (0+255),w,b	;volatile
 25612  007CDA  B0D8               	btfsc	status,0,c
 25613  007CDC  D023               	goto	l2318
 25614  007CDE                     u15270:
 25615                           
 25616                           ; BSR set to: 1
 25617                           ;outputs_MC50.c: 663:     {;outputs_MC50.c: 664:         if(actualState!=brakeElectric_s
      +                          t.lastState && brakeElectric_st.ElectricBrakeIsActive==NO )
 25618  007CDE  5011               	movf	VerifyElectricalBrake@actualState^0,w,c
 25619  007CE0  0100               	movlb	0	; () banked
 25620  007CE2  1978               	xorwf	_brakeElectric_st& (0+255),w,b
 25621  007CE4  B4D8               	btfsc	status,2,c
 25622  007CE6  D00B               	goto	l14701
 25623                           
 25624                           ; BSR set to: 0
 25625  007CE8  5179               	movf	(_brakeElectric_st+1)& (0+255),w,b
 25626  007CEA  A4D8               	btfss	status,2,c
 25627  007CEC  D008               	goto	l14701
 25628                           
 25629                           ; BSR set to: 0
 25630                           ;outputs_MC50.c: 665:         {;outputs_MC50.c: 666:             brakeElectric_st.Electr
      +                          icBrakeIsActive=YES;
 25631  007CEE  0E01               	movlw	1
 25632  007CF0  6F79               	movwf	(_brakeElectric_st+1)& (0+255),b
 25633                           
 25634                           ;outputs_MC50.c: 668:             ts_system.TimeElectricBrake=((5+6)*( 100/50));
 25635  007CF2  0E00               	movlw	0
 25636  007CF4  0101               	movlb	1	; () banked
 25637  007CF6  6FC3               	movwf	(_ts_system+41)& (0+255),b	;volatile
 25638  007CF8  0E16               	movlw	22
 25639  007CFA  6FC2               	movwf	(_ts_system+40)& (0+255),b	;volatile
 25640                           
 25641                           ;outputs_MC50.c: 670:         }
 25642  007CFC  D018               	goto	l2323
 25643  007CFE                     l14701:
 25644                           
 25645                           ; BSR set to: 0
 25646  007CFE  0579               	decf	(_brakeElectric_st+1)& (0+255),w,b
 25647  007D00  A4D8               	btfss	status,2,c
 25648  007D02  D00B               	goto	l14707
 25649                           
 25650                           ; BSR set to: 0
 25651  007D04  0101               	movlb	1	; () banked
 25652  007D06  BFC3               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 25653  007D08  D008               	goto	l14707
 25654  007D0A  51C3               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 25655  007D0C  E103               	bnz	u15310
 25656  007D0E  05C2               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 25657  007D10  A0D8               	btfss	status,0,c
 25658  007D12  D003               	goto	l14707
 25659  007D14                     u15310:
 25660                           
 25661                           ; BSR set to: 1
 25662                           ;outputs_MC50.c: 672:         {;outputs_MC50.c: 673:             tempState=InOpenFull;
 25663  007D14  0E01               	movlw	1
 25664  007D16  6E10               	movwf	VerifyElectricalBrake@tempState^0,c
 25665                           
 25666                           ;outputs_MC50.c: 686:         }
 25667  007D18  D00A               	goto	l2323
 25668  007D1A                     l14707:
 25669                           
 25670                           ;outputs_MC50.c: 688:         {;outputs_MC50.c: 689:             brakeElectric_st.lastSt
      +                          ate=Stopped;
 25671  007D1A  0E00               	movlw	0
 25672  007D1C  0100               	movlb	0	; () banked
 25673  007D1E  6F78               	movwf	_brakeElectric_st& (0+255),b
 25674                           
 25675                           ;outputs_MC50.c: 690:             brakeElectric_st.ElectricBrakeIsActive=NO;
 25676  007D20  0E00               	movlw	0
 25677  007D22  D004               	goto	L101
 25678  007D24                     l2318:
 25679                           
 25680                           ;outputs_MC50.c: 695:     {;outputs_MC50.c: 696:         brakeElectric_st.lastState=actu
      +                          alState;
 25681  007D24  C011  F078         	movff	VerifyElectricalBrake@actualState,_brakeElectric_st
 25682                           
 25683                           ;outputs_MC50.c: 697:         brakeElectric_st.ElectricBrakeIsActive=NO;
 25684  007D28  0E00               	movlw	0
 25685  007D2A  0100               	movlb	0	; () banked
 25686  007D2C                     L101:
 25687  007D2C  6F79               	movwf	(_brakeElectric_st+1)& (0+255),b
 25688  007D2E                     l2323:
 25689                           
 25690                           ;outputs_MC50.c: 700:     return tempState;
 25691  007D2E  5010               	movf	VerifyElectricalBrake@tempState^0,w,c
 25692  007D30  0012               	return		;funcret
 25693  007D32                     __end_of_VerifyElectricalBrake:
 25694                           	callstack 0
 25695                           
 25696 ;; *************** function _ControlLights *****************
 25697 ;; Defined at:
 25698 ;;		line 816 in file "outputs_MC50.c"
 25699 ;; Parameters:    Size  Location     Type
 25700 ;;		None
 25701 ;; Auto vars:     Size  Location     Type
 25702 ;;		None
 25703 ;; Return value:  Size  Location     Type
 25704 ;;                  1    wreg      void 
 25705 ;; Registers used:
 25706 ;;		wreg, status,2, status,0, cstack
 25707 ;; Tracked objects:
 25708 ;;		On entry : 3E/1
 25709 ;;		On exit  : 3E/0
 25710 ;;		Unchanged: 0/0
 25711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25712 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25713 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25715 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25716 ;;Total ram usage:        0 bytes
 25717 ;; Hardware stack levels used: 1
 25718 ;; Hardware stack levels required when called: 6
 25719 ;; This function calls:
 25720 ;;		_setFlashLigth_ON
 25721 ;;		_setRGB_ON
 25722 ;; This function is called by:
 25723 ;;		_main
 25724 ;; This function uses a non-reentrant model
 25725 ;;
 25726                           
 25727                           	psect	text111
 25728  0039D6                     __ptext111:
 25729                           	callstack 0
 25730  0039D6                     _ControlLights:
 25731                           	callstack 24
 25732                           
 25733                           ;outputs_MC50.c: 818:     if(var_sys.DistanceProgrammingActive==YES)
 25734                           
 25735                           ;incstack = 0
 25736  0039D6  0101               	movlb	1	; () banked
 25737  0039D8  0540               	decf	(_var_sys+64)& (0+255),w,b	;volatile
 25738  0039DA  A4D8               	btfss	status,2,c
 25739  0039DC  D007               	goto	l16947
 25740                           
 25741                           ; BSR set to: 1
 25742                           ;outputs_MC50.c: 819:     {;outputs_MC50.c: 820:         setFlashLigth_ON((1000/50));
 25743  0039DE  0E00               	movlw	0
 25744  0039E0  6E11               	movwf	(setFlashLigth_ON@Freq+1)^0,c
 25745  0039E2  0E14               	movlw	20
 25746  0039E4  6E10               	movwf	setFlashLigth_ON@Freq^0,c
 25747  0039E6  ECCB  F044         	call	_setFlashLigth_ON	;wreg free
 25748                           
 25749                           ;outputs_MC50.c: 821:     }
 25750  0039EA  D010               	goto	l16953
 25751  0039EC                     l16947:
 25752                           
 25753                           ; BSR set to: 1
 25754  0039EC  51E2               	movf	_controlGate_stateMachine& (0+255),w,b
 25755  0039EE  11E3               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
 25756  0039F0  A4D8               	btfss	status,2,c
 25757  0039F2  D00C               	goto	l16953
 25758                           
 25759                           ; BSR set to: 1
 25760                           ;outputs_MC50.c: 823:     {;outputs_MC50.c: 824:         var_sys.ControlReleCapacitorOpe
      +                          n = 0;
 25761  0039F4  0E00               	movlw	0
 25762  0039F6  6F28               	movwf	(_var_sys+40)& (0+255),b	;volatile
 25763                           
 25764                           ;outputs_MC50.c: 825:         var_sys.ControlReleCapacitorClose = 0;
 25765  0039F8  0E00               	movlw	0
 25766  0039FA  6F29               	movwf	(_var_sys+41)& (0+255),b	;volatile
 25767                           
 25768                           ; BSR set to: 1
 25769                           ;outputs_MC50.c: 826:         if (var_sys_NVM.flashLightMode !=3){
 25770  0039FC  0E03               	movlw	3
 25771  0039FE  0100               	movlb	0	; () banked
 25772  003A00  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 25773  003A02  B4D8               	btfsc	status,2,c
 25774  003A04  D002               	goto	l2410
 25775                           
 25776                           ; BSR set to: 0
 25777                           
 25778                           ;outputs_MC50.c: 827:            do { LATEbits.LATE2 = 0; } while(0);
 25779  003A06  9487               	bcf	135,2,c	;volatile
 25780  003A08  D001               	goto	l16953
 25781  003A0A                     l2410:
 25782                           
 25783                           ; BSR set to: 0
 25784  003A0A  8487               	bsf	135,2,c	;volatile
 25785  003A0C                     l16953:
 25786                           
 25787                           ;outputs_MC50.c: 835:     if (((var_sys.preflashingcontrol == YES || controlGate_stateMa
      +                          chine.current_state==st_Opened) && (ts_system.timeWaitToClose >0) && (ts_system.timeWait
      +                          ToClose <= 3 * (1000/50))) && var_sys_NVM.flashRGBMode == rgb_pre){
 25788  003A0C  0101               	movlb	1	; () banked
 25789  003A0E  051D               	decf	(_var_sys+29)& (0+255),w,b	;volatile
 25790  003A10  B4D8               	btfsc	status,2,c
 25791  003A12  D005               	goto	u20210
 25792                           
 25793                           ; BSR set to: 1
 25794  003A14  0E04               	movlw	4
 25795  003A16  19E2               	xorwf	_controlGate_stateMachine& (0+255),w,b
 25796  003A18  11E3               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
 25797  003A1A  A4D8               	btfss	status,2,c
 25798  003A1C  D01C               	goto	l16965
 25799  003A1E                     u20210:
 25800                           
 25801                           ; BSR set to: 1
 25802  003A1E  BFAD               	btfsc	(_ts_system+19)& (0+255),7,b	;volatile
 25803  003A20  D01A               	goto	l16965
 25804  003A22  51AD               	movf	(_ts_system+19)& (0+255),w,b	;volatile
 25805  003A24  E103               	bnz	u20220
 25806  003A26  05AC               	decf	(_ts_system+18)& (0+255),w,b	;volatile
 25807  003A28  A0D8               	btfss	status,0,c
 25808  003A2A  D015               	goto	l16965
 25809  003A2C                     u20220:
 25810                           
 25811                           ; BSR set to: 1
 25812  003A2C  BFAD               	btfsc	(_ts_system+19)& (0+255),7,b	;volatile
 25813  003A2E  D006               	goto	u20230
 25814  003A30  51AD               	movf	(_ts_system+19)& (0+255),w,b	;volatile
 25815  003A32  E111               	bnz	l16965
 25816  003A34  0E3D               	movlw	61
 25817  003A36  5DAC               	subwf	(_ts_system+18)& (0+255),w,b	;volatile
 25818  003A38  B0D8               	btfsc	status,0,c
 25819  003A3A  D00D               	goto	l16965
 25820  003A3C                     u20230:
 25821                           
 25822                           ; BSR set to: 1
 25823  003A3C  0E02               	movlw	2
 25824  003A3E  0100               	movlb	0	; () banked
 25825  003A40  19B1               	xorwf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 25826  003A42  A4D8               	btfss	status,2,c
 25827  003A44  D008               	goto	l16965
 25828                           
 25829                           ; BSR set to: 0
 25830                           ;outputs_MC50.c: 836:         setRGB_ON(BLUE,( 200/50));
 25831  003A46  0E00               	movlw	0
 25832  003A48  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 25833  003A4A  0E04               	movlw	4
 25834  003A4C  6E11               	movwf	setRGB_ON@Freq^0,c
 25835  003A4E  0E01               	movlw	1
 25836  003A50  ECFC  F03A         	call	_setRGB_ON
 25837                           
 25838                           ;outputs_MC50.c: 838:     }
 25839  003A54  0012               	return	
 25840  003A56                     l16965:
 25841  003A56  0E03               	movlw	3
 25842  003A58  0101               	movlb	1	; () banked
 25843  003A5A  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 25844  003A5C  A4D8               	btfss	status,2,c
 25845  003A5E  D04F               	goto	l16995
 25846                           
 25847                           ; BSR set to: 1
 25848                           ;outputs_MC50.c: 842:     {;outputs_MC50.c: 843:         var_sys.ControlReleCapacitorOpe
      +                          n = 0;
 25849  003A60  0E00               	movlw	0
 25850  003A62  6F28               	movwf	(_var_sys+40)& (0+255),b	;volatile
 25851                           
 25852                           ;outputs_MC50.c: 846:         if (var_sys.ControlReleCapacitorClose==0 && var_sys_NVM.fl
      +                          ashRGBMode==rgb_capacitor)
 25853  003A64  5129               	movf	(_var_sys+41)& (0+255),w,b	;volatile
 25854  003A66  A4D8               	btfss	status,2,c
 25855  003A68  D013               	goto	l16977
 25856                           
 25857                           ; BSR set to: 1
 25858  003A6A  0E03               	movlw	3
 25859  003A6C  0100               	movlb	0	; () banked
 25860  003A6E  19B1               	xorwf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 25861  003A70  A4D8               	btfss	status,2,c
 25862  003A72  D00E               	goto	l16977
 25863                           
 25864                           ; BSR set to: 0
 25865                           ;outputs_MC50.c: 847:         {;outputs_MC50.c: 848:          ts_system.TimeReleCapacito
      +                          r = (1000/50)*2;
 25866  003A74  0E00               	movlw	0
 25867  003A76  0101               	movlb	1	; () banked
 25868  003A78  6FDD               	movwf	(_ts_system+67)& (0+255),b	;volatile
 25869  003A7A  0E28               	movlw	40
 25870  003A7C  6FDC               	movwf	(_ts_system+66)& (0+255),b	;volatile
 25871                           
 25872                           ; BSR set to: 1
 25873                           ;outputs_MC50.c: 849:             setRGB_ON(YELLOW,0);
 25874  003A7E  0E00               	movlw	0
 25875  003A80  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 25876  003A82  0E00               	movlw	0
 25877  003A84  6E11               	movwf	setRGB_ON@Freq^0,c
 25878  003A86  0E04               	movlw	4
 25879  003A88  ECFC  F03A         	call	_setRGB_ON
 25880                           
 25881                           ; BSR set to: 1
 25882                           ;outputs_MC50.c: 850:          var_sys.ControlReleCapacitorClose = 1;
 25883  003A8C  0E01               	movlw	1
 25884  003A8E  6F29               	movwf	(_var_sys+41)& (0+255),b	;volatile
 25885  003A90                     l16977:
 25886                           
 25887                           ;outputs_MC50.c: 852:         if(ts_system.TimeReleCapacitor<=0 && var_sys_NVM.flashRGBM
      +                          ode==rgb_capacitor)
 25888  003A90  0101               	movlb	1	; () banked
 25889  003A92  BFDD               	btfsc	(_ts_system+67)& (0+255),7,b	;volatile
 25890  003A94  D005               	goto	u20280
 25891  003A96  51DD               	movf	(_ts_system+67)& (0+255),w,b	;volatile
 25892  003A98  E105               	bnz	l16981
 25893  003A9A  05DC               	decf	(_ts_system+66)& (0+255),w,b	;volatile
 25894  003A9C  B0D8               	btfsc	status,0,c
 25895  003A9E  D002               	goto	l16981
 25896  003AA0                     u20280:
 25897                           
 25898                           ; BSR set to: 1
 25899  003AA0  0100               	movlb	0	; () banked
 25900  003AA2  51B1               	movf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 25901  003AA4                     l16981:
 25902                           
 25903                           ;outputs_MC50.c: 858:         if(var_sys_NVM.flashRGBMode==rgb_pisca && ts_system.TimeRe
      +                          leCapacitor<=0)
 25904  003AA4  0100               	movlb	0	; () banked
 25905  003AA6  05B1               	decf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 25906  003AA8  A4D8               	btfss	status,2,c
 25907  003AAA  D010               	goto	l16987
 25908                           
 25909                           ; BSR set to: 0
 25910  003AAC  0101               	movlb	1	; () banked
 25911  003AAE  BFDD               	btfsc	(_ts_system+67)& (0+255),7,b	;volatile
 25912  003AB0  D005               	goto	u20300
 25913  003AB2  51DD               	movf	(_ts_system+67)& (0+255),w,b	;volatile
 25914  003AB4  E10B               	bnz	l16987
 25915  003AB6  05DC               	decf	(_ts_system+66)& (0+255),w,b	;volatile
 25916  003AB8  B0D8               	btfsc	status,0,c
 25917  003ABA  D008               	goto	l16987
 25918  003ABC                     u20300:
 25919                           
 25920                           ; BSR set to: 1
 25921                           ;outputs_MC50.c: 860:         {;outputs_MC50.c: 861:             setRGB_ON(RED,( 200/50)
      +                           +( 50/50));
 25922  003ABC  0E00               	movlw	0
 25923  003ABE  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 25924  003AC0  0E05               	movlw	5
 25925  003AC2  6E11               	movwf	setRGB_ON@Freq^0,c
 25926  003AC4  0E03               	movlw	3
 25927  003AC6  ECFC  F03A         	call	_setRGB_ON
 25928                           
 25929                           ;outputs_MC50.c: 862:         }
 25930  003ACA  D007               	goto	l16989
 25931  003ACC                     l16987:
 25932                           
 25933                           ;outputs_MC50.c: 864:         {;outputs_MC50.c: 865:             setRGB_ON(RED,0);
 25934  003ACC  0E00               	movlw	0
 25935  003ACE  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 25936  003AD0  0E00               	movlw	0
 25937  003AD2  6E11               	movwf	setRGB_ON@Freq^0,c
 25938  003AD4  0E03               	movlw	3
 25939  003AD6  ECFC  F03A         	call	_setRGB_ON
 25940  003ADA                     l16989:
 25941                           
 25942                           ; BSR set to: 1
 25943                           ;outputs_MC50.c: 868:         if(var_sys_NVM.flashLightMode==fixo)
 25944  003ADA  0100               	movlb	0	; () banked
 25945  003ADC  51A5               	movf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 25946  003ADE  A4D8               	btfss	status,2,c
 25947  003AE0  D007               	goto	l16993
 25948                           
 25949                           ; BSR set to: 0
 25950                           ;outputs_MC50.c: 869:         {;outputs_MC50.c: 871:             setFlashLigth_ON(( 500/
      +                          50));
 25951  003AE2  0E00               	movlw	0
 25952  003AE4  6E11               	movwf	(setFlashLigth_ON@Freq+1)^0,c
 25953  003AE6  0E0A               	movlw	10
 25954  003AE8  6E10               	movwf	setFlashLigth_ON@Freq^0,c
 25955  003AEA  ECCB  F044         	call	_setFlashLigth_ON	;wreg free
 25956                           
 25957                           ;outputs_MC50.c: 873:         }
 25958  003AEE  0012               	return	
 25959  003AF0                     l16993:
 25960                           
 25961                           ;outputs_MC50.c: 875:             setFlashLigth_ON(0);
 25962  003AF0  0E00               	movlw	0
 25963  003AF2  6E11               	movwf	(setFlashLigth_ON@Freq+1)^0,c
 25964  003AF4  0E00               	movlw	0
 25965  003AF6  6E10               	movwf	setFlashLigth_ON@Freq^0,c
 25966  003AF8  ECCB  F044         	call	_setFlashLigth_ON	;wreg free
 25967  003AFC  0012               	return	
 25968  003AFE                     l16995:
 25969                           
 25970                           ; BSR set to: 1
 25971  003AFE  5100               	movf	_var_sys& (0+255),w,b	;volatile
 25972  003B00  A4D8               	btfss	status,2,c
 25973  003B02  D042               	goto	l17023
 25974                           
 25975                           ; BSR set to: 1
 25976  003B04  05E2               	decf	_controlGate_stateMachine& (0+255),w,b
 25977  003B06  11E3               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
 25978  003B08  A4D8               	btfss	status,2,c
 25979  003B0A  D03E               	goto	l17023
 25980                           
 25981                           ; BSR set to: 1
 25982                           ;outputs_MC50.c: 881:     {;outputs_MC50.c: 882:         if(var_sys.preflashingcontrol !
      +                          = YES){
 25983  003B0C  051D               	decf	(_var_sys+29)& (0+255),w,b	;volatile
 25984  003B0E  A4D8               	btfss	status,2,c
 25985                           
 25986                           ; BSR set to: 1
 25987                           
 25988                           ;outputs_MC50.c: 883:             do { LATAbits.LATA7 = 1; } while(0);
 25989  003B10  8E83               	bsf	131,7,c	;volatile
 25990                           
 25991                           ; BSR set to: 1
 25992                           ;outputs_MC50.c: 888:         if(var_sys_NVM.flashRGBMode==rgb_pisca)
 25993  003B12  0100               	movlb	0	; () banked
 25994  003B14  05B1               	decf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 25995  003B16  A4D8               	btfss	status,2,c
 25996  003B18  D017               	goto	l17011
 25997                           
 25998                           ; BSR set to: 0
 25999                           ;outputs_MC50.c: 889:         {;outputs_MC50.c: 890:             if (var_sys_NVM.TypeofM
      +                          otor == br || var_sys_NVM.TypeofMotor == SE)setRGB_ON(YELLOW,0);
 26000  003B1A  0E02               	movlw	2
 26001  003B1C  19B4               	xorwf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 26002  003B1E  B4D8               	btfsc	status,2,c
 26003  003B20  D003               	goto	u20370
 26004                           
 26005                           ; BSR set to: 0
 26006  003B22  05B4               	decf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 26007  003B24  A4D8               	btfss	status,2,c
 26008  003B26  D008               	goto	l17009
 26009  003B28                     u20370:
 26010                           
 26011                           ; BSR set to: 0
 26012  003B28  0E00               	movlw	0
 26013  003B2A  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 26014  003B2C  0E00               	movlw	0
 26015  003B2E  6E11               	movwf	setRGB_ON@Freq^0,c
 26016  003B30  0E04               	movlw	4
 26017  003B32  ECFC  F03A         	call	_setRGB_ON
 26018  003B36  D013               	goto	l17015
 26019  003B38                     l17009:
 26020                           
 26021                           ; BSR set to: 0
 26022  003B38  0E00               	movlw	0
 26023  003B3A  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 26024  003B3C  0E28               	movlw	40
 26025  003B3E  6E11               	movwf	setRGB_ON@Freq^0,c
 26026  003B40  0E04               	movlw	4
 26027  003B42  ECFC  F03A         	call	_setRGB_ON
 26028  003B46  D00B               	goto	l17015
 26029  003B48                     l17011:
 26030                           
 26031                           ; BSR set to: 0
 26032  003B48  0E03               	movlw	3
 26033  003B4A  19B1               	xorwf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 26034  003B4C  B4D8               	btfsc	status,2,c
 26035  003B4E  D007               	goto	l17015
 26036                           
 26037                           ; BSR set to: 0
 26038  003B50  0E00               	movlw	0
 26039  003B52  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 26040  003B54  0E00               	movlw	0
 26041  003B56  6E11               	movwf	setRGB_ON@Freq^0,c
 26042  003B58  0E04               	movlw	4
 26043  003B5A  ECFC  F03A         	call	_setRGB_ON
 26044  003B5E                     l17015:
 26045                           
 26046                           ;outputs_MC50.c: 895:         if (var_sys_NVM.flashLightMode != electroiman)
 26047  003B5E  0E03               	movlw	3
 26048  003B60  0100               	movlb	0	; () banked
 26049  003B62  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 26050  003B64  B4D8               	btfsc	status,2,c
 26051  003B66  0012               	return	
 26052                           
 26053                           ; BSR set to: 0
 26054                           ;outputs_MC50.c: 896:         {;outputs_MC50.c: 897:         if (ts_system.TimeOnFlashLi
      +                          gth>0)
 26055  003B68  0101               	movlb	1	; () banked
 26056  003B6A  BFBD               	btfsc	(_ts_system+35)& (0+255),7,b	;volatile
 26057  003B6C  D007               	goto	l2438
 26058  003B6E  51BD               	movf	(_ts_system+35)& (0+255),w,b	;volatile
 26059  003B70  11BC               	iorwf	(_ts_system+34)& (0+255),w,b	;volatile
 26060  003B72  11BB               	iorwf	(_ts_system+33)& (0+255),w,b	;volatile
 26061  003B74  E1BD               	bnz	l16993
 26062  003B76  05BA               	decf	(_ts_system+32)& (0+255),w,b	;volatile
 26063  003B78  B0D8               	btfsc	status,0,c
 26064  003B7A  D7BA               	goto	l16993
 26065  003B7C                     l2438:
 26066                           
 26067                           ; BSR set to: 1
 26068  003B7C  9487               	bcf	135,2,c	;volatile
 26069                           
 26070                           ; BSR set to: 1
 26071                           ;outputs_MC50.c: 904:             ts_system.timeFreqFlashligth=0;
 26072  003B7E  0E00               	movlw	0
 26073  003B80  6FB9               	movwf	(_ts_system+31)& (0+255),b	;volatile
 26074  003B82  0E00               	movlw	0
 26075  003B84  6FB8               	movwf	(_ts_system+30)& (0+255),b	;volatile
 26076                           
 26077                           ; BSR set to: 0
 26078                           ;outputs_MC50.c: 907:     }
 26079                           
 26080                           ;outputs_MC50.c: 906:         }
 26081  003B86  0012               	return	
 26082  003B88                     l17023:
 26083                           
 26084                           ; BSR set to: 1
 26085  003B88  5100               	movf	_var_sys& (0+255),w,b	;volatile
 26086  003B8A  A4D8               	btfss	status,2,c
 26087  003B8C  D048               	goto	l17057
 26088                           
 26089                           ; BSR set to: 1
 26090                           ;outputs_MC50.c: 911:     {;outputs_MC50.c: 912:         if (( var_sys_NVM.autoTimeFullC
      +                          lose==0 && var_sys.StateMotor == InOpenFull)||((var_sys_NVM.autoTimeWalkClose==0) && var
      +                          _sys_NVM.walkTime >0 && var_sys.StateMotor == InOpenWalk))
 26091  003B8E  0100               	movlb	0	; () banked
 26092  003B90  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 26093  003B92  A4D8               	btfss	status,2,c
 26094  003B94  D004               	goto	u20430
 26095                           
 26096                           ; BSR set to: 0
 26097  003B96  0101               	movlb	1	; () banked
 26098  003B98  0500               	decf	_var_sys& (0+255),w,b	;volatile
 26099  003B9A  B4D8               	btfsc	status,2,c
 26100  003B9C  D00C               	goto	u20460
 26101  003B9E                     u20430:
 26102  003B9E  0100               	movlb	0	; () banked
 26103  003BA0  519E               	movf	(_var_sys_NVM+6)& (0+255),w,b	;volatile
 26104  003BA2  A4D8               	btfss	status,2,c
 26105  003BA4  D017               	goto	l17041
 26106                           
 26107                           ; BSR set to: 0
 26108  003BA6  519C               	movf	(_var_sys_NVM+4)& (0+255),w,b	;volatile
 26109  003BA8  B4D8               	btfsc	status,2,c
 26110  003BAA  D014               	goto	l17041
 26111                           
 26112                           ; BSR set to: 0
 26113  003BAC  0E02               	movlw	2
 26114  003BAE  0101               	movlb	1	; () banked
 26115  003BB0  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 26116  003BB2  A4D8               	btfss	status,2,c
 26117  003BB4  D00F               	goto	l17041
 26118  003BB6                     u20460:
 26119                           
 26120                           ; BSR set to: 1
 26121                           ;outputs_MC50.c: 913:         {;outputs_MC50.c: 916:             var_sys.ControlReleCapa
      +                          citorOpen = 0;
 26122  003BB6  0E00               	movlw	0
 26123  003BB8  6F28               	movwf	(_var_sys+40)& (0+255),b	;volatile
 26124                           
 26125                           ;outputs_MC50.c: 917:             var_sys.ControlReleCapacitorClose = 0;
 26126  003BBA  0E00               	movlw	0
 26127  003BBC  6F29               	movwf	(_var_sys+41)& (0+255),b	;volatile
 26128                           
 26129                           ; BSR set to: 1
 26130                           ;outputs_MC50.c: 921:             if (var_sys_NVM.flashLightMode != electroiman && var_s
      +                          ys_NVM.flashLightMode != condominio ){
 26131  003BBE  0E03               	movlw	3
 26132  003BC0  0100               	movlb	0	; () banked
 26133  003BC2  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 26134  003BC4  B4D8               	btfsc	status,2,c
 26135  003BC6  0012               	return	
 26136                           
 26137                           ; BSR set to: 0
 26138  003BC8  0E02               	movlw	2
 26139  003BCA  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 26140  003BCC  B4D8               	btfsc	status,2,c
 26141  003BCE  0012               	return	
 26142                           
 26143                           ; BSR set to: 0
 26144                           
 26145                           ;outputs_MC50.c: 922:               do { LATEbits.LATE2 = 0; } while(0);
 26146  003BD0  9487               	bcf	135,2,c	;volatile
 26147  003BD2  0012               	return	
 26148  003BD4                     l17041:
 26149                           
 26150                           ;outputs_MC50.c: 927:         {;outputs_MC50.c: 928:             if(var_sys_NVM.flashRGB
      +                          Mode==rgb_pisca)
 26151  003BD4  0100               	movlb	0	; () banked
 26152  003BD6  05B1               	decf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 26153  003BD8  A4D8               	btfss	status,2,c
 26154  003BDA  D008               	goto	l17045
 26155                           
 26156                           ; BSR set to: 0
 26157                           ;outputs_MC50.c: 929:             {;outputs_MC50.c: 930:                 setRGB_ON(BLUE,
      +                          (1000/50));
 26158  003BDC  0E00               	movlw	0
 26159  003BDE  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 26160  003BE0  0E14               	movlw	20
 26161  003BE2  6E11               	movwf	setRGB_ON@Freq^0,c
 26162  003BE4  0E01               	movlw	1
 26163  003BE6  ECFC  F03A         	call	_setRGB_ON
 26164                           
 26165                           ;outputs_MC50.c: 932:             }
 26166  003BEA  D007               	goto	l17047
 26167  003BEC                     l17045:
 26168                           
 26169                           ; BSR set to: 0
 26170                           ;outputs_MC50.c: 934:             {;outputs_MC50.c: 935:                 setRGB_ON(BLUE,
      +                          0);
 26171  003BEC  0E00               	movlw	0
 26172  003BEE  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 26173  003BF0  0E00               	movlw	0
 26174  003BF2  6E11               	movwf	setRGB_ON@Freq^0,c
 26175  003BF4  0E01               	movlw	1
 26176  003BF6  ECFC  F03A         	call	_setRGB_ON
 26177  003BFA                     l17047:
 26178                           
 26179                           ; BSR set to: 1
 26180                           ;outputs_MC50.c: 939:             if(var_sys_NVM.flashLightMode==pisca ||var_sys_NVM.fla
      +                          shLightMode==electroiman)
 26181  003BFA  0100               	movlb	0	; () banked
 26182  003BFC  05A5               	decf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 26183  003BFE  B4D8               	btfsc	status,2,c
 26184  003C00  D004               	goto	u20510
 26185                           
 26186                           ; BSR set to: 0
 26187  003C02  0E03               	movlw	3
 26188  003C04  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 26189  003C06  A4D8               	btfss	status,2,c
 26190  003C08  D002               	goto	l17051
 26191  003C0A                     u20510:
 26192                           
 26193                           ; BSR set to: 0
 26194                           
 26195                           ;outputs_MC50.c: 940:             {;outputs_MC50.c: 941:                  do { LATEbits.
      +                          LATE2 = 0; } while(0);
 26196  003C0A  9487               	bcf	135,2,c	;volatile
 26197  003C0C  0012               	return	
 26198  003C0E                     l17051:
 26199                           
 26200                           ; BSR set to: 0
 26201  003C0E  51A5               	movf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 26202  003C10  B4D8               	btfsc	status,2,c
 26203  003C12  D76E               	goto	l16993
 26204                           
 26205                           ; BSR set to: 0
 26206  003C14  0E02               	movlw	2
 26207  003C16  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 26208  003C18  A4D8               	btfss	status,2,c
 26209  003C1A  0012               	return	
 26210  003C1C  D769               	goto	l16993
 26211  003C1E                     l17057:
 26212                           
 26213                           ; BSR set to: 1
 26214                           ;outputs_MC50.c: 955:     {;outputs_MC50.c: 957:         var_sys.ControlReleCapacitorClo
      +                          se=0;
 26215  003C1E  0E00               	movlw	0
 26216  003C20  6F29               	movwf	(_var_sys+41)& (0+255),b	;volatile
 26217                           
 26218                           ;outputs_MC50.c: 958:         if (var_sys.ControlReleCapacitorOpen==0 && var_sys_NVM.fla
      +                          shRGBMode==rgb_capacitor)
 26219  003C22  5128               	movf	(_var_sys+40)& (0+255),w,b	;volatile
 26220  003C24  A4D8               	btfss	status,2,c
 26221  003C26  D00C               	goto	l17063
 26222                           
 26223                           ; BSR set to: 1
 26224  003C28  0E03               	movlw	3
 26225  003C2A  0100               	movlb	0	; () banked
 26226  003C2C  19B1               	xorwf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 26227  003C2E  A4D8               	btfss	status,2,c
 26228  003C30  D007               	goto	l17063
 26229                           
 26230                           ; BSR set to: 0
 26231                           ;outputs_MC50.c: 959:         {;outputs_MC50.c: 960:          ts_system.TimeReleCapacito
      +                          r = (1000/50)*2;
 26232  003C32  0E00               	movlw	0
 26233  003C34  0101               	movlb	1	; () banked
 26234  003C36  6FDD               	movwf	(_ts_system+67)& (0+255),b	;volatile
 26235  003C38  0E28               	movlw	40
 26236  003C3A  6FDC               	movwf	(_ts_system+66)& (0+255),b	;volatile
 26237                           
 26238                           ;outputs_MC50.c: 962:          var_sys.ControlReleCapacitorOpen = 1;
 26239  003C3C  0E01               	movlw	1
 26240  003C3E  6F28               	movwf	(_var_sys+40)& (0+255),b	;volatile
 26241  003C40                     l17063:
 26242                           
 26243                           ;outputs_MC50.c: 964:         if(ts_system.TimeReleCapacitor <=0 && var_sys_NVM.flashRGB
      +                          Mode==rgb_capacitor)
 26244  003C40  0101               	movlb	1	; () banked
 26245  003C42  BFDD               	btfsc	(_ts_system+67)& (0+255),7,b	;volatile
 26246  003C44  D005               	goto	u20560
 26247  003C46  51DD               	movf	(_ts_system+67)& (0+255),w,b	;volatile
 26248  003C48  E105               	bnz	l17067
 26249  003C4A  05DC               	decf	(_ts_system+66)& (0+255),w,b	;volatile
 26250  003C4C  B0D8               	btfsc	status,0,c
 26251  003C4E  D002               	goto	l17067
 26252  003C50                     u20560:
 26253                           
 26254                           ; BSR set to: 1
 26255  003C50  0100               	movlb	0	; () banked
 26256  003C52  51B1               	movf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 26257  003C54                     l17067:
 26258                           
 26259                           ;outputs_MC50.c: 969:         if (controlGate_stateMachine.current_state==st_Opened)
 26260  003C54  0E04               	movlw	4
 26261  003C56  0101               	movlb	1	; () banked
 26262  003C58  19E2               	xorwf	_controlGate_stateMachine& (0+255),w,b
 26263  003C5A  11E3               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
 26264  003C5C  A4D8               	btfss	status,2,c
 26265  003C5E  D01B               	goto	l17079
 26266                           
 26267                           ; BSR set to: 1
 26268                           ;outputs_MC50.c: 970:         {;outputs_MC50.c: 973:             var_sys.ControlReleCapa
      +                          citorOpen = 0;
 26269  003C60  0E00               	movlw	0
 26270  003C62  6F28               	movwf	(_var_sys+40)& (0+255),b	;volatile
 26271                           
 26272                           ;outputs_MC50.c: 974:             var_sys.ControlReleCapacitorClose = 0;
 26273  003C64  0E00               	movlw	0
 26274  003C66  6F29               	movwf	(_var_sys+41)& (0+255),b	;volatile
 26275                           
 26276                           ;outputs_MC50.c: 977:             if (var_sys_NVM.autoTimeFullClose != 0 || ((var_sys_NV
      +                          M.autoTimeWalkClose!=0) && var_sys_NVM.walkTime >0)|| var_sys_NVM.operationMode==2)
 26277  003C68  0100               	movlb	0	; () banked
 26278  003C6A  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 26279  003C6C  A4D8               	btfss	status,2,c
 26280  003C6E  D00A               	goto	u20610
 26281                           
 26282                           ; BSR set to: 0
 26283  003C70  519E               	movf	(_var_sys_NVM+6)& (0+255),w,b	;volatile
 26284  003C72  B4D8               	btfsc	status,2,c
 26285  003C74  D003               	goto	u20600
 26286                           
 26287                           ; BSR set to: 0
 26288  003C76  519C               	movf	(_var_sys_NVM+4)& (0+255),w,b	;volatile
 26289  003C78  A4D8               	btfss	status,2,c
 26290  003C7A  D004               	goto	u20610
 26291  003C7C                     u20600:
 26292                           
 26293                           ; BSR set to: 0
 26294  003C7C  0E02               	movlw	2
 26295  003C7E  19A4               	xorwf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 26296  003C80  A4D8               	btfss	status,2,c
 26297  003C82  D007               	goto	l2472
 26298  003C84                     u20610:
 26299                           
 26300                           ; BSR set to: 0
 26301                           ;outputs_MC50.c: 978:             {;outputs_MC50.c: 979:                    setRGB_ON(BL
      +                          UE,0);
 26302  003C84  0E00               	movlw	0
 26303  003C86  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 26304  003C88  0E00               	movlw	0
 26305  003C8A  6E11               	movwf	setRGB_ON@Freq^0,c
 26306  003C8C  0E01               	movlw	1
 26307  003C8E  ECFC  F03A         	call	_setRGB_ON
 26308  003C92                     l2472:
 26309  003C92  9487               	bcf	135,2,c	;volatile
 26310  003C94  0012               	return	
 26311  003C96                     l17079:
 26312                           
 26313                           ; BSR set to: 1
 26314                           ;outputs_MC50.c: 993:         {;outputs_MC50.c: 996:             if(var_sys_NVM.flashRGB
      +                          Mode==rgb_pisca)
 26315  003C96  0100               	movlb	0	; () banked
 26316  003C98  05B1               	decf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 26317  003C9A  A4D8               	btfss	status,2,c
 26318  003C9C  D008               	goto	l17083
 26319                           
 26320                           ; BSR set to: 0
 26321                           ;outputs_MC50.c: 997:             {;outputs_MC50.c: 998:                 setRGB_ON(GREEN
      +                          ,( 500/50));
 26322  003C9E  0E00               	movlw	0
 26323  003CA0  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 26324  003CA2  0E0A               	movlw	10
 26325  003CA4  6E11               	movwf	setRGB_ON@Freq^0,c
 26326  003CA6  0E02               	movlw	2
 26327  003CA8  ECFC  F03A         	call	_setRGB_ON
 26328                           
 26329                           ;outputs_MC50.c: 999:             }
 26330  003CAC  D007               	goto	l17085
 26331  003CAE                     l17083:
 26332                           
 26333                           ; BSR set to: 0
 26334                           ;outputs_MC50.c: 1001:             {;outputs_MC50.c: 1002:                 setRGB_ON(GRE
      +                          EN,0);
 26335  003CAE  0E00               	movlw	0
 26336  003CB0  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 26337  003CB2  0E00               	movlw	0
 26338  003CB4  6E11               	movwf	setRGB_ON@Freq^0,c
 26339  003CB6  0E02               	movlw	2
 26340  003CB8  ECFC  F03A         	call	_setRGB_ON
 26341  003CBC                     l17085:
 26342                           
 26343                           ; BSR set to: 1
 26344                           ;outputs_MC50.c: 1006:             if(var_sys_NVM.flashLightMode==fixo)
 26345  003CBC  0100               	movlb	0	; () banked
 26346  003CBE  51A5               	movf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 26347  003CC0  A4D8               	btfss	status,2,c
 26348  003CC2  D007               	goto	l17089
 26349                           
 26350                           ; BSR set to: 0
 26351                           ;outputs_MC50.c: 1007:             {;outputs_MC50.c: 1010:                 setFlashLigth
      +                          _ON((1000/50));
 26352  003CC4  0E00               	movlw	0
 26353  003CC6  6E11               	movwf	(setFlashLigth_ON@Freq+1)^0,c
 26354  003CC8  0E14               	movlw	20
 26355  003CCA  6E10               	movwf	setFlashLigth_ON@Freq^0,c
 26356  003CCC  ECCB  F044         	call	_setFlashLigth_ON	;wreg free
 26357                           
 26358                           ;outputs_MC50.c: 1011:             }
 26359  003CD0  D00D               	goto	l17095
 26360  003CD2                     l17089:
 26361                           
 26362                           ; BSR set to: 0
 26363  003CD2  05A5               	decf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 26364  003CD4  B4D8               	btfsc	status,2,c
 26365  003CD6  D004               	goto	u20650
 26366                           
 26367                           ; BSR set to: 0
 26368  003CD8  0E02               	movlw	2
 26369  003CDA  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 26370  003CDC  A4D8               	btfss	status,2,c
 26371  003CDE  D006               	goto	l17095
 26372  003CE0                     u20650:
 26373                           
 26374                           ; BSR set to: 0
 26375                           ;outputs_MC50.c: 1013:             {;outputs_MC50.c: 1014:                 setFlashLigth
      +                          _ON(0);
 26376  003CE0  0E00               	movlw	0
 26377  003CE2  6E11               	movwf	(setFlashLigth_ON@Freq+1)^0,c
 26378  003CE4  0E00               	movlw	0
 26379  003CE6  6E10               	movwf	setFlashLigth_ON@Freq^0,c
 26380  003CE8  ECCB  F044         	call	_setFlashLigth_ON	;wreg free
 26381  003CEC                     l17095:
 26382                           
 26383                           ;outputs_MC50.c: 1017:             if (var_sys_NVM.flashLightMode == electroiman)
 26384  003CEC  0E03               	movlw	3
 26385  003CEE  0100               	movlb	0	; () banked
 26386  003CF0  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 26387  003CF2  A4D8               	btfss	status,2,c
 26388  003CF4  0012               	return	
 26389                           
 26390                           ; BSR set to: 0
 26391                           
 26392                           ;outputs_MC50.c: 1018:             {;outputs_MC50.c: 1019:             do { LATEbits.LAT
      +                          E2 = 0; } while(0);
 26393  003CF6  9487               	bcf	135,2,c	;volatile
 26394  003CF8  0012               	return		;funcret
 26395  003CFA                     __end_of_ControlLights:
 26396                           	callstack 0
 26397                           
 26398 ;; *************** function _setRGB_ON *****************
 26399 ;; Defined at:
 26400 ;;		line 1028 in file "outputs_MC50.c"
 26401 ;; Parameters:    Size  Location     Type
 26402 ;;  RGBLigth        1    wreg     enum E10611
 26403 ;;  Freq            2   16[COMRAM] int 
 26404 ;; Auto vars:     Size  Location     Type
 26405 ;;  RGBLigth        1   20[COMRAM] enum E10611
 26406 ;; Return value:  Size  Location     Type
 26407 ;;                  1    wreg      void 
 26408 ;; Registers used:
 26409 ;;		wreg, status,2, status,0, cstack
 26410 ;; Tracked objects:
 26411 ;;		On entry : 3E/0
 26412 ;;		On exit  : 3F/1
 26413 ;;		Unchanged: 0/0
 26414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26415 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26416 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26417 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26418 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26419 ;;Total ram usage:        5 bytes
 26420 ;; Hardware stack levels used: 1
 26421 ;; Hardware stack levels required when called: 5
 26422 ;; This function calls:
 26423 ;;		_RGB_Set
 26424 ;; This function is called by:
 26425 ;;		_ControlLights
 26426 ;; This function uses a non-reentrant model
 26427 ;;
 26428                           
 26429                           	psect	text112
 26430  0075F8                     __ptext112:
 26431                           	callstack 0
 26432  0075F8                     _setRGB_ON:
 26433                           	callstack 24
 26434                           
 26435                           ;incstack = 0
 26436                           ;setRGB_ON@RGBLigth stored from wreg
 26437  0075F8  6E15               	movwf	setRGB_ON@RGBLigth^0,c
 26438                           
 26439                           ;outputs_MC50.c: 1028: void setRGB_ON(RGBY_enum RGBLigth,int Freq);outputs_MC50.c: 1029:
      +                           {;outputs_MC50.c: 1031:     do { LATAbits.LATA7 = 1; } while(0);
 26440  0075FA  8E83               	bsf	131,7,c	;volatile
 26441                           
 26442                           ;outputs_MC50.c: 1037:     if(Freq==0 || var_sys.upFaseRGB==1)
 26443  0075FC  5011               	movf	setRGB_ON@Freq^0,w,c
 26444  0075FE  1012               	iorwf	(setRGB_ON@Freq+1)^0,w,c
 26445  007600  B4D8               	btfsc	status,2,c
 26446  007602  D015               	goto	l14739
 26447  007604  0101               	movlb	1	; () banked
 26448  007606  0524               	decf	(_var_sys+36)& (0+255),w,b	;volatile
 26449  007608  B4D8               	btfsc	status,2,c
 26450  00760A  D011               	goto	l14739
 26451  00760C  D024               	goto	l14741
 26452  00760E                     l14729:
 26453                           
 26454                           ;outputs_MC50.c: 1043:                 RGB_Set(0x20);
 26455  00760E  0E20               	movlw	32
 26456  007610  ECA6  F048         	call	_RGB_Set
 26457                           
 26458                           ;outputs_MC50.c: 1044:             break;
 26459  007614  D020               	goto	l14741
 26460  007616                     l14731:
 26461                           
 26462                           ;outputs_MC50.c: 1047:                 RGB_Set(0x04);
 26463  007616  0E04               	movlw	4
 26464  007618  ECA6  F048         	call	_RGB_Set
 26465                           
 26466                           ;outputs_MC50.c: 1048:             break;
 26467  00761C  D01C               	goto	l14741
 26468  00761E                     l14733:
 26469                           
 26470                           ;outputs_MC50.c: 1051:                 RGB_Set(0x00);
 26471  00761E  0E00               	movlw	0
 26472  007620  ECA6  F048         	call	_RGB_Set
 26473                           
 26474                           ;outputs_MC50.c: 1052:             break;
 26475  007624  D018               	goto	l14741
 26476  007626                     l14735:
 26477                           
 26478                           ;outputs_MC50.c: 1055:                 RGB_Set(0x24);
 26479  007626  0E24               	movlw	36
 26480  007628  ECA6  F048         	call	_RGB_Set
 26481                           
 26482                           ;outputs_MC50.c: 1056:             break;
 26483  00762C  D014               	goto	l14741
 26484  00762E                     l14739:
 26485  00762E  5015               	movf	setRGB_ON@RGBLigth^0,w,c
 26486  007630  6E13               	movwf	??_setRGB_ON^0,c
 26487  007632  6A14               	clrf	(??_setRGB_ON+1)^0,c
 26488                           
 26489                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 26490                           ; Switch size 1, requested type "simple"
 26491                           ; Number of cases is 1, Range of values is 0 to 0
 26492                           ; switch strategies available:
 26493                           ; Name         Instructions Cycles
 26494                           ; simple_byte            4     3 (average)
 26495                           ;	Chosen strategy is simple_byte
 26496  007634  5014               	movf	(??_setRGB_ON+1)^0,w,c
 26497  007636  0A00               	xorlw	0	; case 0
 26498  007638  A4D8               	btfss	status,2,c
 26499  00763A  D00D               	goto	l14741
 26500                           
 26501                           ; Switch size 1, requested type "simple"
 26502                           ; Number of cases is 4, Range of values is 1 to 4
 26503                           ; switch strategies available:
 26504                           ; Name         Instructions Cycles
 26505                           ; simple_byte           13     7 (average)
 26506                           ;	Chosen strategy is simple_byte
 26507  00763C  5013               	movf	??_setRGB_ON^0,w,c
 26508  00763E  0A01               	xorlw	1	; case 1
 26509  007640  B4D8               	btfsc	status,2,c
 26510  007642  D7ED               	goto	l14733
 26511  007644  0A03               	xorlw	3	; case 2
 26512  007646  B4D8               	btfsc	status,2,c
 26513  007648  D7E6               	goto	l14731
 26514  00764A  0A01               	xorlw	1	; case 3
 26515  00764C  B4D8               	btfsc	status,2,c
 26516  00764E  D7DF               	goto	l14729
 26517  007650  0A07               	xorlw	7	; case 4
 26518  007652  B4D8               	btfsc	status,2,c
 26519  007654  D7E8               	goto	l14735
 26520  007656                     l14741:
 26521                           
 26522                           ;outputs_MC50.c: 1061:     if(ts_system.timeFreqRGB<=0 && Freq!=0)
 26523  007656  0101               	movlb	1	; () banked
 26524  007658  BFB7               	btfsc	(_ts_system+29)& (0+255),7,b	;volatile
 26525  00765A  D005               	goto	u15380
 26526  00765C  51B7               	movf	(_ts_system+29)& (0+255),w,b	;volatile
 26527  00765E  E113               	bnz	l2502
 26528  007660  05B6               	decf	(_ts_system+28)& (0+255),w,b	;volatile
 26529  007662  B0D8               	btfsc	status,0,c
 26530  007664  0012               	return	
 26531  007666                     u15380:
 26532                           
 26533                           ; BSR set to: 1
 26534  007666  5011               	movf	setRGB_ON@Freq^0,w,c
 26535  007668  1012               	iorwf	(setRGB_ON@Freq+1)^0,w,c
 26536  00766A  B4D8               	btfsc	status,2,c
 26537  00766C  0012               	return	
 26538                           
 26539                           ; BSR set to: 1
 26540                           ;outputs_MC50.c: 1062:     {;outputs_MC50.c: 1063:         ts_system.timeFreqRGB=Freq;
 26541  00766E  C011  F1B6         	movff	setRGB_ON@Freq,_ts_system+28	;volatile
 26542  007672  C012  F1B7         	movff	setRGB_ON@Freq+1,_ts_system+29	;volatile
 26543                           
 26544                           ; BSR set to: 1
 26545                           ;outputs_MC50.c: 1064:         if(var_sys.upFaseRGB==1)
 26546  007676  0524               	decf	(_var_sys+36)& (0+255),w,b	;volatile
 26547  007678  A4D8               	btfss	status,2,c
 26548  00767A  D003               	goto	l14751
 26549                           
 26550                           ; BSR set to: 1
 26551                           ;outputs_MC50.c: 1065:         {;outputs_MC50.c: 1066:             var_sys.upFaseRGB=0;
 26552  00767C  0E00               	movlw	0
 26553  00767E  6F24               	movwf	(_var_sys+36)& (0+255),b	;volatile
 26554                           
 26555                           ;outputs_MC50.c: 1067:         }
 26556  007680  0012               	return	
 26557  007682                     l14751:
 26558                           
 26559                           ; BSR set to: 1
 26560                           ;outputs_MC50.c: 1069:         {;outputs_MC50.c: 1070:             var_sys.upFaseRGB=1;
 26561  007682  0E01               	movlw	1
 26562  007684  6F24               	movwf	(_var_sys+36)& (0+255),b	;volatile
 26563  007686                     l2502:
 26564                           
 26565                           ; BSR set to: 1
 26566  007686  0012               	return		;funcret
 26567  007688                     __end_of_setRGB_ON:
 26568                           	callstack 0
 26569                           
 26570 ;; *************** function _RGB_Set *****************
 26571 ;; Defined at:
 26572 ;;		line 98 in file "outputs_MC50.c"
 26573 ;; Parameters:    Size  Location     Type
 26574 ;;  value           1    wreg     unsigned char 
 26575 ;; Auto vars:     Size  Location     Type
 26576 ;;  value           1   15[COMRAM] unsigned char 
 26577 ;; Return value:  Size  Location     Type
 26578 ;;                  1    wreg      void 
 26579 ;; Registers used:
 26580 ;;		wreg, status,2, status,0
 26581 ;; Tracked objects:
 26582 ;;		On entry : 0/0
 26583 ;;		On exit  : 0/0
 26584 ;;		Unchanged: 0/0
 26585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26586 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26587 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26589 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26590 ;;Total ram usage:        1 bytes
 26591 ;; Hardware stack levels used: 1
 26592 ;; Hardware stack levels required when called: 4
 26593 ;; This function calls:
 26594 ;;		Nothing
 26595 ;; This function is called by:
 26596 ;;		_setRGB_ON
 26597 ;; This function uses a non-reentrant model
 26598 ;;
 26599                           
 26600                           	psect	text113
 26601  00914C                     __ptext113:
 26602                           	callstack 0
 26603  00914C                     _RGB_Set:
 26604                           	callstack 24
 26605                           
 26606                           ; BSR set to: 1
 26607                           ;incstack = 0
 26608                           ;RGB_Set@value stored from wreg
 26609  00914C  6E10               	movwf	RGB_Set@value^0,c
 26610                           
 26611                           ;outputs_MC50.c: 98: void RGB_Set(char value);outputs_MC50.c: 99: {;outputs_MC50.c: 100:
      +                              LATC &= 0xdb ;
 26612  00914E  0EDB               	movlw	219
 26613  009150  1685               	andwf	133,f,c	;volatile
 26614                           
 26615                           ;outputs_MC50.c: 101:    LATC |= value;
 26616  009152  5010               	movf	RGB_Set@value^0,w,c	;volatile
 26617  009154  1285               	iorwf	133,f,c	;volatile
 26618  009156  9E83               	bcf	131,7,c	;volatile
 26619  009158  0012               	return		;funcret
 26620  00915A                     __end_of_RGB_Set:
 26621                           	callstack 0
 26622                           
 26623 ;; *************** function _setFlashLigth_ON *****************
 26624 ;; Defined at:
 26625 ;;		line 1077 in file "outputs_MC50.c"
 26626 ;; Parameters:    Size  Location     Type
 26627 ;;  Freq            2   15[COMRAM] int 
 26628 ;; Auto vars:     Size  Location     Type
 26629 ;;		None
 26630 ;; Return value:  Size  Location     Type
 26631 ;;                  1    wreg      void 
 26632 ;; Registers used:
 26633 ;;		wreg, status,2, status,0
 26634 ;; Tracked objects:
 26635 ;;		On entry : 3E/1
 26636 ;;		On exit  : 3F/1
 26637 ;;		Unchanged: 0/0
 26638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26639 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26640 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26641 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26642 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26643 ;;Total ram usage:        2 bytes
 26644 ;; Hardware stack levels used: 1
 26645 ;; Hardware stack levels required when called: 4
 26646 ;; This function calls:
 26647 ;;		Nothing
 26648 ;; This function is called by:
 26649 ;;		_ControlLights
 26650 ;; This function uses a non-reentrant model
 26651 ;;
 26652                           
 26653                           	psect	text114
 26654  008996                     __ptext114:
 26655                           	callstack 0
 26656  008996                     _setFlashLigth_ON:
 26657                           	callstack 25
 26658                           
 26659                           ;outputs_MC50.c: 1077: void setFlashLigth_ON(int Freq);outputs_MC50.c: 1078: {;outputs_M
      +                          C50.c: 1079:     if(Freq==0 || var_sys.upFaseFlashligth==1)
 26660                           
 26661                           ;incstack = 0
 26662  008996  5010               	movf	setFlashLigth_ON@Freq^0,w,c
 26663  008998  1011               	iorwf	(setFlashLigth_ON@Freq+1)^0,w,c
 26664  00899A  B4D8               	btfsc	status,2,c
 26665  00899C  D004               	goto	u15330
 26666  00899E  0101               	movlb	1	; () banked
 26667  0089A0  0525               	decf	(_var_sys+37)& (0+255),w,b	;volatile
 26668  0089A2  A4D8               	btfss	status,2,c
 26669  0089A4  D002               	goto	l2511
 26670  0089A6                     u15330:
 26671                           
 26672                           ;outputs_MC50.c: 1080:     {;outputs_MC50.c: 1081:         do { LATEbits.LATE2 = 1; } wh
      +                          ile(0);
 26673  0089A6  8487               	bsf	135,2,c	;volatile
 26674  0089A8  D001               	goto	l14717
 26675  0089AA                     l2511:
 26676                           
 26677                           ; BSR set to: 1
 26678  0089AA  9487               	bcf	135,2,c	;volatile
 26679  0089AC                     l14717:
 26680                           
 26681                           ;outputs_MC50.c: 1088:     if(ts_system.timeFreqFlashligth<=0 && Freq!=0)
 26682  0089AC  0101               	movlb	1	; () banked
 26683  0089AE  BFB9               	btfsc	(_ts_system+31)& (0+255),7,b	;volatile
 26684  0089B0  D005               	goto	u15340
 26685  0089B2  51B9               	movf	(_ts_system+31)& (0+255),w,b	;volatile
 26686  0089B4  E10D               	bnz	l2514
 26687  0089B6  05B8               	decf	(_ts_system+30)& (0+255),w,b	;volatile
 26688  0089B8  B0D8               	btfsc	status,0,c
 26689  0089BA  0012               	return	
 26690  0089BC                     u15340:
 26691                           
 26692                           ; BSR set to: 1
 26693  0089BC  5010               	movf	setFlashLigth_ON@Freq^0,w,c
 26694  0089BE  1011               	iorwf	(setFlashLigth_ON@Freq+1)^0,w,c
 26695  0089C0  B4D8               	btfsc	status,2,c
 26696  0089C2  0012               	return	
 26697                           
 26698                           ; BSR set to: 1
 26699                           ;outputs_MC50.c: 1089:     {;outputs_MC50.c: 1090:         ts_system.timeFreqFlashligth=
      +                          Freq;
 26700  0089C4  C010  F1B8         	movff	setFlashLigth_ON@Freq,_ts_system+30	;volatile
 26701  0089C8  C011  F1B9         	movff	setFlashLigth_ON@Freq+1,_ts_system+31	;volatile
 26702                           
 26703                           ; BSR set to: 1
 26704                           ;outputs_MC50.c: 1091:         var_sys.upFaseFlashligth ^= (1 << 0);
 26705  0089CC  0E01               	movlw	1
 26706  0089CE  1B25               	xorwf	(_var_sys+37)& (0+255),f,b	;volatile
 26707  0089D0                     l2514:
 26708                           
 26709                           ; BSR set to: 1
 26710  0089D0  0012               	return		;funcret
 26711  0089D2                     __end_of_setFlashLigth_ON:
 26712                           	callstack 0
 26713                           
 26714 ;; *************** function _ControlInputs *****************
 26715 ;; Defined at:
 26716 ;;		line 674 in file "inputs_MC50.c"
 26717 ;; Parameters:    Size  Location     Type
 26718 ;;		None
 26719 ;; Auto vars:     Size  Location     Type
 26720 ;;		None
 26721 ;; Return value:  Size  Location     Type
 26722 ;;                  1    wreg      void 
 26723 ;; Registers used:
 26724 ;;		wreg, status,2, status,0
 26725 ;; Tracked objects:
 26726 ;;		On entry : 3E/1
 26727 ;;		On exit  : 3E/0
 26728 ;;		Unchanged: 0/0
 26729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26730 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26731 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26733 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26734 ;;Total ram usage:        0 bytes
 26735 ;; Hardware stack levels used: 1
 26736 ;; Hardware stack levels required when called: 4
 26737 ;; This function calls:
 26738 ;;		Nothing
 26739 ;; This function is called by:
 26740 ;;		_main
 26741 ;; This function uses a non-reentrant model
 26742 ;;
 26743                           
 26744                           	psect	text115
 26745  0064B0                     __ptext115:
 26746                           	callstack 0
 26747  0064B0                     _ControlInputs:
 26748                           	callstack 26
 26749                           
 26750                           ;inputs_MC50.c: 678:     if (( var_sys.StateMotor==InClose || (((PORTEbits.RE1 == 1)&& v
      +                          ar_sys_NVM.Direction_motor == 0)||((PORTEbits.RE0 == 1)&&var_sys_NVM.Direction_motor == 
      +                          1))) && (var_sys.FimCurso_CloseIsEnabled == YES))
 26751                           
 26752                           ; BSR set to: 1
 26753                           ;incstack = 0
 26754  0064B0  0E03               	movlw	3
 26755  0064B2  0101               	movlb	1	; () banked
 26756  0064B4  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 26757  0064B6  B4D8               	btfsc	status,2,c
 26758  0064B8  D00C               	goto	u19290
 26759                           
 26760                           ; BSR set to: 1
 26761  0064BA  A291               	btfss	145,1,c	;volatile
 26762  0064BC  D004               	goto	u19270
 26763                           
 26764                           ; BSR set to: 1
 26765  0064BE  0100               	movlb	0	; () banked
 26766  0064C0  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 26767  0064C2  B4D8               	btfsc	status,2,c
 26768  0064C4  D006               	goto	u19290
 26769  0064C6                     u19270:
 26770  0064C6  A091               	btfss	145,0,c	;volatile
 26771  0064C8  D00A               	goto	l16685
 26772  0064CA  0100               	movlb	0	; () banked
 26773  0064CC  05B3               	decf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 26774  0064CE  A4D8               	btfss	status,2,c
 26775  0064D0  D006               	goto	l16685
 26776  0064D2                     u19290:
 26777  0064D2  0101               	movlb	1	; () banked
 26778  0064D4  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
 26779  0064D6  A4D8               	btfss	status,2,c
 26780  0064D8  D002               	goto	l16685
 26781                           
 26782                           ; BSR set to: 1
 26783                           ;inputs_MC50.c: 679:     {;inputs_MC50.c: 680:         var_sys.StateMotor = Stopped;
 26784  0064DA  0E00               	movlw	0
 26785  0064DC  6F00               	movwf	_var_sys& (0+255),b	;volatile
 26786  0064DE                     l16685:
 26787                           
 26788                           ;inputs_MC50.c: 683:     if((var_sys.StateMotor==InOpenFull || var_sys.StateMotor==InOpe
      +                          nWalk || (((PORTEbits.RE0 == 1) &&var_sys_NVM.Direction_motor == 0)||((PORTEbits.RE1 == 
      +                          1) && var_sys_NVM.Direction_motor == 1))) && (var_sys.FimCurso_OpenIsEnabled == YES))
 26789  0064DE  0101               	movlb	1	; () banked
 26790  0064E0  0500               	decf	_var_sys& (0+255),w,b	;volatile
 26791  0064E2  B4D8               	btfsc	status,2,c
 26792  0064E4  D010               	goto	u19360
 26793                           
 26794                           ; BSR set to: 1
 26795  0064E6  0E02               	movlw	2
 26796  0064E8  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 26797  0064EA  B4D8               	btfsc	status,2,c
 26798  0064EC  D00C               	goto	u19360
 26799                           
 26800                           ; BSR set to: 1
 26801  0064EE  A091               	btfss	145,0,c	;volatile
 26802  0064F0  D004               	goto	u19340
 26803                           
 26804                           ; BSR set to: 1
 26805  0064F2  0100               	movlb	0	; () banked
 26806  0064F4  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 26807  0064F6  B4D8               	btfsc	status,2,c
 26808  0064F8  D006               	goto	u19360
 26809  0064FA                     u19340:
 26810  0064FA  A291               	btfss	145,1,c	;volatile
 26811  0064FC  D00A               	goto	l16699
 26812  0064FE  0100               	movlb	0	; () banked
 26813  006500  05B3               	decf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 26814  006502  A4D8               	btfss	status,2,c
 26815  006504  D006               	goto	l16699
 26816  006506                     u19360:
 26817  006506  0101               	movlb	1	; () banked
 26818  006508  0504               	decf	(_var_sys+4)& (0+255),w,b	;volatile
 26819  00650A  A4D8               	btfss	status,2,c
 26820  00650C  D002               	goto	l16699
 26821                           
 26822                           ; BSR set to: 1
 26823                           ;inputs_MC50.c: 684:     {;inputs_MC50.c: 685:         var_sys.StateMotor = Stopped;
 26824  00650E  0E00               	movlw	0
 26825  006510  6F00               	movwf	_var_sys& (0+255),b	;volatile
 26826  006512                     l16699:
 26827                           
 26828                           ;inputs_MC50.c: 688:     if (var_sys.LearningIsEnabled != YES){
 26829  006512  0101               	movlb	1	; () banked
 26830  006514  0526               	decf	(_var_sys+38)& (0+255),w,b	;volatile
 26831  006516  B4D8               	btfsc	status,2,c
 26832  006518  0012               	return	
 26833                           
 26834                           ; BSR set to: 1
 26835                           ;inputs_MC50.c: 690:         if((var_sys_NVM.photoCellIsON == 1) && (var_sys.photoCellIs
      +                          Obstructed == YES) && var_sys.AutoInversionActive==NO)
 26836  00651A  0100               	movlb	0	; () banked
 26837  00651C  059F               	decf	(_var_sys_NVM+7)& (0+255),w,b	;volatile
 26838  00651E  A4D8               	btfss	status,2,c
 26839  006520  D02B               	goto	l16725
 26840                           
 26841                           ; BSR set to: 0
 26842  006522  0101               	movlb	1	; () banked
 26843  006524  0501               	decf	(_var_sys+1)& (0+255),w,b	;volatile
 26844  006526  A4D8               	btfss	status,2,c
 26845  006528  D027               	goto	l16725
 26846                           
 26847                           ; BSR set to: 1
 26848  00652A  5127               	movf	(_var_sys+39)& (0+255),w,b	;volatile
 26849  00652C  A4D8               	btfss	status,2,c
 26850  00652E  D024               	goto	l16725
 26851                           
 26852                           ; BSR set to: 1
 26853                           ;inputs_MC50.c: 691:         {;inputs_MC50.c: 699:             if((var_sys.StateMotor==I
      +                          nOpenFull || var_sys.StateMotor==InOpenWalk) && (var_sys_NVM.photoCellInOpen==1))
 26854  006530  0500               	decf	_var_sys& (0+255),w,b	;volatile
 26855  006532  B4D8               	btfsc	status,2,c
 26856  006534  D004               	goto	u19430
 26857                           
 26858                           ; BSR set to: 1
 26859  006536  0E02               	movlw	2
 26860  006538  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 26861  00653A  A4D8               	btfss	status,2,c
 26862  00653C  D007               	goto	l16715
 26863  00653E                     u19430:
 26864                           
 26865                           ; BSR set to: 1
 26866  00653E  0100               	movlb	0	; () banked
 26867  006540  05A0               	decf	(_var_sys_NVM+8)& (0+255),w,b	;volatile
 26868  006542  A4D8               	btfss	status,2,c
 26869  006544  D003               	goto	l16715
 26870                           
 26871                           ; BSR set to: 0
 26872                           ;inputs_MC50.c: 700:             {;inputs_MC50.c: 701:                 var_sys.StateMoto
      +                          r = Stopped;
 26873  006546  0E00               	movlw	0
 26874  006548  0101               	movlb	1	; () banked
 26875  00654A  D015               	goto	L102
 26876  00654C                     l16715:
 26877  00654C  0E03               	movlw	3
 26878  00654E  0101               	movlb	1	; () banked
 26879  006550  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 26880  006552  A4D8               	btfss	status,2,c
 26881  006554  D011               	goto	l16725
 26882                           
 26883                           ; BSR set to: 1
 26884  006556  0100               	movlb	0	; () banked
 26885  006558  51A0               	movf	(_var_sys_NVM+8)& (0+255),w,b	;volatile
 26886  00655A  A4D8               	btfss	status,2,c
 26887  00655C  D00D               	goto	l16725
 26888                           
 26889                           ; BSR set to: 0
 26890  00655E  0101               	movlb	1	; () banked
 26891  006560  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 26892  006562  D005               	goto	u19470
 26893  006564  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 26894  006566  E108               	bnz	l16725
 26895  006568  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 26896  00656A  B0D8               	btfsc	status,0,c
 26897  00656C  D005               	goto	l16725
 26898  00656E                     u19470:
 26899                           
 26900                           ; BSR set to: 1
 26901  00656E  0527               	decf	(_var_sys+39)& (0+255),w,b	;volatile
 26902  006570  A4D8               	btfss	status,2,c
 26903  006572  D002               	goto	l16725
 26904                           
 26905                           ; BSR set to: 1
 26906                           ;inputs_MC50.c: 706:             {;inputs_MC50.c: 707:                 var_sys.StateMoto
      +                          r = Stopped;
 26907  006574  0E00               	movlw	0
 26908  006576                     L102:
 26909  006576  6F00               	movwf	_var_sys& (0+255),b	;volatile
 26910  006578                     l16725:
 26911                           
 26912                           ;inputs_MC50.c: 713:         if((var_sys_NVM.securityBandIsON == 1 || var_sys_NVM.Stopbo
      +                          ton == 1) && (var_sys.SecurityBarIsObstructed == YES && var_sys.AutoInversionActive == N
      +                          O))
 26913  006578  0100               	movlb	0	; () banked
 26914  00657A  05A1               	decf	(_var_sys_NVM+9)& (0+255),w,b	;volatile
 26915  00657C  B4D8               	btfsc	status,2,c
 26916  00657E  D003               	goto	u19500
 26917                           
 26918                           ; BSR set to: 0
 26919  006580  05AE               	decf	(_var_sys_NVM+22)& (0+255),w,b	;volatile
 26920  006582  A4D8               	btfss	status,2,c
 26921  006584  0012               	return	
 26922  006586                     u19500:
 26923                           
 26924                           ; BSR set to: 0
 26925  006586  0101               	movlb	1	; () banked
 26926  006588  0502               	decf	(_var_sys+2)& (0+255),w,b	;volatile
 26927  00658A  A4D8               	btfss	status,2,c
 26928  00658C  0012               	return	
 26929                           
 26930                           ; BSR set to: 1
 26931  00658E  5127               	movf	(_var_sys+39)& (0+255),w,b	;volatile
 26932  006590  A4D8               	btfss	status,2,c
 26933  006592  0012               	return	
 26934                           
 26935                           ; BSR set to: 1
 26936                           ;inputs_MC50.c: 714:         {;inputs_MC50.c: 723:             if(var_sys.StateMotor == 
      +                          InClose && (var_sys_NVM.securityBandInOpen == 0))
 26937  006594  0E03               	movlw	3
 26938  006596  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 26939  006598  A4D8               	btfss	status,2,c
 26940  00659A  D008               	goto	l16739
 26941                           
 26942                           ; BSR set to: 1
 26943  00659C  0100               	movlb	0	; () banked
 26944  00659E  51A3               	movf	(_var_sys_NVM+11)& (0+255),w,b	;volatile
 26945  0065A0  A4D8               	btfss	status,2,c
 26946  0065A2  D004               	goto	l16739
 26947                           
 26948                           ; BSR set to: 0
 26949                           ;inputs_MC50.c: 724:             {;inputs_MC50.c: 725:                 var_sys.StateMoto
      +                          r = Stopped;
 26950  0065A4  0E00               	movlw	0
 26951  0065A6  0101               	movlb	1	; () banked
 26952  0065A8  6F00               	movwf	_var_sys& (0+255),b	;volatile
 26953                           
 26954                           ;inputs_MC50.c: 727:             }
 26955  0065AA  0012               	return	
 26956  0065AC                     l16739:
 26957  0065AC  0101               	movlb	1	; () banked
 26958  0065AE  0500               	decf	_var_sys& (0+255),w,b	;volatile
 26959  0065B0  B4D8               	btfsc	status,2,c
 26960  0065B2  D004               	goto	u19560
 26961                           
 26962                           ; BSR set to: 1
 26963  0065B4  0E02               	movlw	2
 26964  0065B6  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 26965  0065B8  A4D8               	btfss	status,2,c
 26966  0065BA  D004               	goto	u19570
 26967  0065BC                     u19560:
 26968                           
 26969                           ; BSR set to: 1
 26970  0065BC  0100               	movlb	0	; () banked
 26971  0065BE  05A3               	decf	(_var_sys_NVM+11)& (0+255),w,b	;volatile
 26972  0065C0  B4D8               	btfsc	status,2,c
 26973  0065C2  D004               	goto	u19580
 26974  0065C4                     u19570:
 26975  0065C4  0100               	movlb	0	; () banked
 26976  0065C6  05AE               	decf	(_var_sys_NVM+22)& (0+255),w,b	;volatile
 26977  0065C8  A4D8               	btfss	status,2,c
 26978  0065CA  0012               	return	
 26979  0065CC                     u19580:
 26980                           
 26981                           ; BSR set to: 0
 26982                           ;inputs_MC50.c: 730:             {;inputs_MC50.c: 731:                 var_sys.StateMoto
      +                          r = Stopped;
 26983  0065CC  0E00               	movlw	0
 26984  0065CE  0101               	movlb	1	; () banked
 26985  0065D0  6F00               	movwf	_var_sys& (0+255),b	;volatile
 26986  0065D2  0012               	return	
 26987  0065D4                     __end_of_ControlInputs:
 26988                           	callstack 0
 26989                           
 26990 ;; *************** function _ControlCurrent *****************
 26991 ;; Defined at:
 26992 ;;		line 342 in file "controlCurrent_MC50.c"
 26993 ;; Parameters:    Size  Location     Type
 26994 ;;		None
 26995 ;; Auto vars:     Size  Location     Type
 26996 ;;		None
 26997 ;; Return value:  Size  Location     Type
 26998 ;;                  1    wreg      void 
 26999 ;; Registers used:
 27000 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27001 ;; Tracked objects:
 27002 ;;		On entry : 3E/1
 27003 ;;		On exit  : 3E/0
 27004 ;;		Unchanged: 0/0
 27005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27006 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27007 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27008 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27009 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27010 ;;Total ram usage:        4 bytes
 27011 ;; Hardware stack levels used: 1
 27012 ;; Hardware stack levels required when called: 6
 27013 ;; This function calls:
 27014 ;;		_GetMotorPower
 27015 ;;		_getCurrentComparator
 27016 ;;		_refreshADCZeroOffset
 27017 ;;		_refreshCurrent
 27018 ;; This function is called by:
 27019 ;;		_main
 27020 ;; This function uses a non-reentrant model
 27021 ;;
 27022                           
 27023                           	psect	text116
 27024  005E6A                     __ptext116:
 27025                           	callstack 0
 27026  005E6A                     _ControlCurrent:
 27027                           	callstack 24
 27028                           
 27029                           ;controlCurrent_MC50.c: 345:     refreshCurrent();
 27030                           
 27031                           ;incstack = 0
 27032  005E6A  ECC3  F043         	call	_refreshCurrent	;wreg free
 27033                           
 27034                           ;controlCurrent_MC50.c: 351:     refreshADCZeroOffset();
 27035  005E6E  EC7D  F034         	call	_refreshADCZeroOffset	;wreg free
 27036                           
 27037                           ;controlCurrent_MC50.c: 354:     var_sys.velocityActual = GetMotorPower();
 27038  005E72  ECA4  F037         	call	_GetMotorPower	;wreg free
 27039  005E76  6E23               	movwf	??_ControlCurrent^0,c
 27040  005E78  5023               	movf	??_ControlCurrent^0,w,c
 27041  005E7A  6F38               	movwf	(_var_sys+56)& (0+255),b	;volatile
 27042  005E7C  6B39               	clrf	(_var_sys+57)& (0+255),b	;volatile
 27043                           
 27044                           ; BSR set to: 1
 27045                           ;controlCurrent_MC50.c: 355:     var_sys.ActualComparatorCurrent = getCurrentComparator(
      +                          );
 27046  005E7E  EC4A  F02B         	call	_getCurrentComparator	;wreg free
 27047  005E82  C016  F134         	movff	?_getCurrentComparator,_var_sys+52	;volatile
 27048  005E86  C017  F135         	movff	?_getCurrentComparator+1,_var_sys+53	;volatile
 27049  005E8A  C018  F136         	movff	?_getCurrentComparator+2,_var_sys+54	;volatile
 27050  005E8E  C019  F137         	movff	?_getCurrentComparator+3,_var_sys+55	;volatile
 27051                           
 27052                           ; BSR set to: 1
 27053                           ;controlCurrent_MC50.c: 357:     if(var_sys.StateMotor == Stopped)
 27054  005E92  5100               	movf	_var_sys& (0+255),w,b	;volatile
 27055  005E94  A4D8               	btfss	status,2,c
 27056  005E96  D00F               	goto	l22577
 27057                           
 27058                           ; BSR set to: 1
 27059                           ;controlCurrent_MC50.c: 358:     {;controlCurrent_MC50.c: 360:         numberOfErrorCurr
      +                          ent=0;
 27060  005E98  0E00               	movlw	0
 27061  005E9A  0100               	movlb	0	; () banked
 27062  005E9C  6F8E               	movwf	_numberOfErrorCurrent& (0+255),b	;volatile
 27063                           
 27064                           ;controlCurrent_MC50.c: 361:         var_sys.CurrentAlarmIsOn=NO;
 27065  005E9E  0E00               	movlw	0
 27066  005EA0  0101               	movlb	1	; () banked
 27067  005EA2  6F41               	movwf	(_var_sys+65)& (0+255),b	;volatile
 27068                           
 27069                           ;controlCurrent_MC50.c: 362:         var_sys.InvertionCurrentOpening=NO;
 27070  005EA4  0E00               	movlw	0
 27071  005EA6  6F45               	movwf	(_var_sys+69)& (0+255),b	;volatile
 27072                           
 27073                           ;controlCurrent_MC50.c: 363:         var_sys.InvertionCurrentClosing=NO;
 27074  005EA8  0E00               	movlw	0
 27075  005EAA  6F44               	movwf	(_var_sys+68)& (0+255),b	;volatile
 27076                           
 27077                           ;controlCurrent_MC50.c: 364:         ts_system.TimeTransitionDecelaration=(1000/50);
 27078  005EAC  0E00               	movlw	0
 27079  005EAE  6FD3               	movwf	(_ts_system+57)& (0+255),b	;volatile
 27080  005EB0  0E14               	movlw	20
 27081  005EB2  6FD2               	movwf	(_ts_system+56)& (0+255),b	;volatile
 27082                           
 27083                           ;controlCurrent_MC50.c: 365:     }
 27084  005EB4  0012               	return	
 27085  005EB6                     l22577:
 27086                           
 27087                           ; BSR set to: 1
 27088  005EB6  517B               	movf	_powerControl_st& (0+255),w,b
 27089  005EB8  A4D8               	btfss	status,2,c
 27090  005EBA  D05D               	goto	l22611
 27091                           
 27092                           ; BSR set to: 1
 27093                           ;controlCurrent_MC50.c: 368:     {;controlCurrent_MC50.c: 376:         ts_system.TimeTra
      +                          nsitionDecelaration=(1000/50);
 27094  005EBC  0E00               	movlw	0
 27095  005EBE  6FD3               	movwf	(_ts_system+57)& (0+255),b	;volatile
 27096  005EC0  0E14               	movlw	20
 27097  005EC2  6FD2               	movwf	(_ts_system+56)& (0+255),b	;volatile
 27098                           
 27099                           ; BSR set to: 1
 27100                           ;controlCurrent_MC50.c: 377:         if (( var_sys.ActualCurrent>var_sys.ActualComparato
      +                          rCurrent ) && (ts_system.TimeChargeCondesador<=0)&&var_sys_NVM.motorSensitivity!=0 && ts
      +                          _system.TimeReleCapacitor<=0)
 27101  005EC4  512E               	movf	(_var_sys+46)& (0+255),w,b	;volatile
 27102  005EC6  6E23               	movwf	??_ControlCurrent^0,c
 27103  005EC8  512F               	movf	(_var_sys+47)& (0+255),w,b	;volatile
 27104  005ECA  6E24               	movwf	(??_ControlCurrent+1)^0,c
 27105  005ECC  6A25               	clrf	(??_ControlCurrent+2)^0,c
 27106  005ECE  6A26               	clrf	(??_ControlCurrent+3)^0,c
 27107  005ED0  5023               	movf	??_ControlCurrent^0,w,c
 27108  005ED2  5D34               	subwf	(_var_sys+52)& (0+255),w,b	;volatile
 27109  005ED4  5024               	movf	(??_ControlCurrent+1)^0,w,c
 27110  005ED6  5935               	subwfb	(_var_sys+53)& (0+255),w,b	;volatile
 27111  005ED8  5025               	movf	(??_ControlCurrent+2)^0,w,c
 27112  005EDA  5936               	subwfb	(_var_sys+54)& (0+255),w,b	;volatile
 27113  005EDC  5026               	movf	(??_ControlCurrent+3)^0,w,c
 27114  005EDE  5937               	subwfb	(_var_sys+55)& (0+255),w,b	;volatile
 27115  005EE0  B0D8               	btfsc	status,0,c
 27116  005EE2  D03E               	goto	l22609
 27117                           
 27118                           ; BSR set to: 1
 27119  005EE4  BFB5               	btfsc	(_ts_system+27)& (0+255),7,b	;volatile
 27120  005EE6  D005               	goto	u27360
 27121  005EE8  51B5               	movf	(_ts_system+27)& (0+255),w,b	;volatile
 27122  005EEA  E13A               	bnz	l22609
 27123  005EEC  05B4               	decf	(_ts_system+26)& (0+255),w,b	;volatile
 27124  005EEE  B0D8               	btfsc	status,0,c
 27125  005EF0  D037               	goto	l22609
 27126  005EF2                     u27360:
 27127                           
 27128                           ; BSR set to: 1
 27129  005EF2  0100               	movlb	0	; () banked
 27130  005EF4  519B               	movf	(_var_sys_NVM+3)& (0+255),w,b	;volatile
 27131  005EF6  B4D8               	btfsc	status,2,c
 27132  005EF8  D033               	goto	l22609
 27133                           
 27134                           ; BSR set to: 0
 27135  005EFA  0101               	movlb	1	; () banked
 27136  005EFC  BFDD               	btfsc	(_ts_system+67)& (0+255),7,b	;volatile
 27137  005EFE  D005               	goto	u27380
 27138  005F00  51DD               	movf	(_ts_system+67)& (0+255),w,b	;volatile
 27139  005F02  E12E               	bnz	l22609
 27140  005F04  05DC               	decf	(_ts_system+66)& (0+255),w,b	;volatile
 27141  005F06  B0D8               	btfsc	status,0,c
 27142  005F08  D02B               	goto	l22609
 27143  005F0A                     u27380:
 27144                           
 27145                           ; BSR set to: 1
 27146                           ;controlCurrent_MC50.c: 378:         {;controlCurrent_MC50.c: 379:              if (numb
      +                          erOfErrorCurrent >=1)
 27147  005F0A  0100               	movlb	0	; () banked
 27148  005F0C  518E               	movf	_numberOfErrorCurrent& (0+255),w,b	;volatile
 27149  005F0E  B4D8               	btfsc	status,2,c
 27150  005F10  D00B               	goto	l22595
 27151                           
 27152                           ; BSR set to: 0
 27153                           ;controlCurrent_MC50.c: 380:              {;controlCurrent_MC50.c: 381:                 
      +                           if(erroranterior > var_sys.ActualCurrent )
 27154  005F12  0101               	movlb	1	; () banked
 27155  005F14  5189               	movf	_erroranterior& (0+255),w,b	;volatile
 27156  005F16  5D2E               	subwf	(_var_sys+46)& (0+255),w,b	;volatile
 27157  005F18  518A               	movf	(_erroranterior+1)& (0+255),w,b	;volatile
 27158  005F1A  592F               	subwfb	(_var_sys+47)& (0+255),w,b	;volatile
 27159  005F1C  B0D8               	btfsc	status,0,c
 27160  005F1E  D004               	goto	l22595
 27161                           
 27162                           ; BSR set to: 1
 27163                           ;controlCurrent_MC50.c: 382:                  {;controlCurrent_MC50.c: 383:             
      +                                 numberOfErrorCurrent = 0;
 27164  005F20  0E00               	movlw	0
 27165  005F22  0100               	movlb	0	; () banked
 27166  005F24  6F8E               	movwf	_numberOfErrorCurrent& (0+255),b	;volatile
 27167                           
 27168                           ;controlCurrent_MC50.c: 384:                  }
 27169  005F26  D002               	goto	l22597
 27170  005F28                     l22595:
 27171                           
 27172                           ;controlCurrent_MC50.c: 386:                  {;controlCurrent_MC50.c: 387:             
      +                                 numberOfErrorCurrent++;
 27173  005F28  0100               	movlb	0	; () banked
 27174  005F2A  2B8E               	incf	_numberOfErrorCurrent& (0+255),f,b	;volatile
 27175  005F2C                     l22597:
 27176                           
 27177                           ; BSR set to: 0
 27178                           ;controlCurrent_MC50.c: 389:                  erroranterior = var_sys.ActualCurrent;
 27179  005F2C  C12E  F189         	movff	_var_sys+46,_erroranterior	;volatile
 27180  005F30  C12F  F18A         	movff	_var_sys+47,_erroranterior+1	;volatile
 27181                           
 27182                           ; BSR set to: 0
 27183                           ;controlCurrent_MC50.c: 398:             if(ts_system.TimeCurrentWaitForAlarm<=0&&number
      +                          OfErrorCurrent>1)
 27184                           
 27185                           ;controlCurrent_MC50.c: 390:              }
 27186  005F34  0101               	movlb	1	; () banked
 27187  005F36  BFC9               	btfsc	(_ts_system+47)& (0+255),7,b	;volatile
 27188  005F38  D005               	goto	u27410
 27189  005F3A  51C9               	movf	(_ts_system+47)& (0+255),w,b	;volatile
 27190  005F3C  E14F               	bnz	l1405
 27191  005F3E  05C8               	decf	(_ts_system+46)& (0+255),w,b	;volatile
 27192  005F40  B0D8               	btfsc	status,0,c
 27193  005F42  0012               	return	
 27194  005F44                     u27410:
 27195                           
 27196                           ; BSR set to: 1
 27197  005F44  0E01               	movlw	1
 27198  005F46  0100               	movlb	0	; () banked
 27199  005F48  658E               	cpfsgt	_numberOfErrorCurrent& (0+255),b	;volatile
 27200  005F4A  0012               	return	
 27201                           
 27202                           ; BSR set to: 0
 27203                           ;controlCurrent_MC50.c: 399:             {;controlCurrent_MC50.c: 400:                 v
      +                          ar_sys.StateMotor = Stopped;
 27204  005F4C  0E00               	movlw	0
 27205  005F4E  0101               	movlb	1	; () banked
 27206  005F50  6F00               	movwf	_var_sys& (0+255),b	;volatile
 27207                           
 27208                           ;controlCurrent_MC50.c: 401:                 ts_system.TimeCurrentAlarm= (1000/50)*10;
 27209  005F52  0E00               	movlw	0
 27210  005F54  6FC5               	movwf	(_ts_system+43)& (0+255),b	;volatile
 27211  005F56  0EC8               	movlw	200
 27212  005F58  6FC4               	movwf	(_ts_system+42)& (0+255),b	;volatile
 27213                           
 27214                           ;controlCurrent_MC50.c: 402:                 var_sys.CurrentAlarmIsOn=YES;
 27215  005F5A  0E01               	movlw	1
 27216  005F5C  6F41               	movwf	(_var_sys+65)& (0+255),b	;volatile
 27217  005F5E  0012               	return	
 27218  005F60                     l22609:
 27219                           
 27220                           ;controlCurrent_MC50.c: 409:         {;controlCurrent_MC50.c: 410:             numberOfE
      +                          rrorCurrent=0;
 27221  005F60  0E00               	movlw	0
 27222  005F62  0100               	movlb	0	; () banked
 27223  005F64  6F8E               	movwf	_numberOfErrorCurrent& (0+255),b	;volatile
 27224                           
 27225                           ;controlCurrent_MC50.c: 411:             var_sys.CurrentAlarmIsOn=NO;
 27226  005F66  0E00               	movlw	0
 27227  005F68  0101               	movlb	1	; () banked
 27228  005F6A  6F41               	movwf	(_var_sys+65)& (0+255),b	;volatile
 27229                           
 27230                           ;controlCurrent_MC50.c: 412:             var_sys.InvertionCurrentOpening=NO;
 27231  005F6C  0E00               	movlw	0
 27232  005F6E  6F45               	movwf	(_var_sys+69)& (0+255),b	;volatile
 27233                           
 27234                           ;controlCurrent_MC50.c: 413:             var_sys.InvertionCurrentClosing=NO;
 27235  005F70  0E00               	movlw	0
 27236  005F72  6F44               	movwf	(_var_sys+68)& (0+255),b	;volatile
 27237  005F74  0012               	return	
 27238  005F76                     l22611:
 27239                           
 27240                           ; BSR set to: 1
 27241                           ;controlCurrent_MC50.c: 419:     {;controlCurrent_MC50.c: 420:         if( ( var_sys.Act
      +                          ualHistCurrent<var_sys.ActualComparatorCurrent ) && (ts_system.TimeChargeCondesador<=0)&
      +                          &ts_system.TimeTransitionDecelaration<=0&&var_sys_NVM.decelarationSensivity!=0)
 27242  005F76  5134               	movf	(_var_sys+52)& (0+255),w,b	;volatile
 27243  005F78  5D30               	subwf	(_var_sys+48)& (0+255),w,b	;volatile
 27244  005F7A  5135               	movf	(_var_sys+53)& (0+255),w,b	;volatile
 27245  005F7C  5931               	subwfb	(_var_sys+49)& (0+255),w,b	;volatile
 27246  005F7E  5136               	movf	(_var_sys+54)& (0+255),w,b	;volatile
 27247  005F80  5932               	subwfb	(_var_sys+50)& (0+255),w,b	;volatile
 27248  005F82  5137               	movf	(_var_sys+55)& (0+255),w,b	;volatile
 27249  005F84  5933               	subwfb	(_var_sys+51)& (0+255),w,b	;volatile
 27250  005F86  B0D8               	btfsc	status,0,c
 27251  005F88  D7EB               	goto	l22609
 27252                           
 27253                           ; BSR set to: 1
 27254  005F8A  BFB5               	btfsc	(_ts_system+27)& (0+255),7,b	;volatile
 27255  005F8C  D005               	goto	u27440
 27256  005F8E  51B5               	movf	(_ts_system+27)& (0+255),w,b	;volatile
 27257  005F90  E1E7               	bnz	l22609
 27258  005F92  05B4               	decf	(_ts_system+26)& (0+255),w,b	;volatile
 27259  005F94  B0D8               	btfsc	status,0,c
 27260  005F96  D7E4               	goto	l22609
 27261  005F98                     u27440:
 27262                           
 27263                           ; BSR set to: 1
 27264  005F98  BFD3               	btfsc	(_ts_system+57)& (0+255),7,b	;volatile
 27265  005F9A  D005               	goto	u27450
 27266  005F9C  51D3               	movf	(_ts_system+57)& (0+255),w,b	;volatile
 27267  005F9E  E1E0               	bnz	l22609
 27268  005FA0  05D2               	decf	(_ts_system+56)& (0+255),w,b	;volatile
 27269  005FA2  B0D8               	btfsc	status,0,c
 27270  005FA4  D7DD               	goto	l22609
 27271  005FA6                     u27450:
 27272                           
 27273                           ; BSR set to: 1
 27274  005FA6  0100               	movlb	0	; () banked
 27275  005FA8  51A7               	movf	(_var_sys_NVM+15)& (0+255),w,b	;volatile
 27276  005FAA  B4D8               	btfsc	status,2,c
 27277  005FAC  D7D9               	goto	l22609
 27278                           
 27279                           ; BSR set to: 0
 27280                           ;controlCurrent_MC50.c: 421:         {;controlCurrent_MC50.c: 423:             numberOfE
      +                          rrorCurrent++;
 27281  005FAE  2B8E               	incf	_numberOfErrorCurrent& (0+255),f,b	;volatile
 27282                           
 27283                           ; BSR set to: 0
 27284                           ;controlCurrent_MC50.c: 424:             if(ts_system.TimeCurrentWaitForAlarm<=0&&number
      +                          OfErrorCurrent>2)
 27285  005FB0  0101               	movlb	1	; () banked
 27286  005FB2  BFC9               	btfsc	(_ts_system+47)& (0+255),7,b	;volatile
 27287  005FB4  D005               	goto	u27470
 27288  005FB6  51C9               	movf	(_ts_system+47)& (0+255),w,b	;volatile
 27289  005FB8  E111               	bnz	l1405
 27290  005FBA  05C8               	decf	(_ts_system+46)& (0+255),w,b	;volatile
 27291  005FBC  B0D8               	btfsc	status,0,c
 27292  005FBE  0012               	return	
 27293  005FC0                     u27470:
 27294                           
 27295                           ; BSR set to: 1
 27296  005FC0  0E02               	movlw	2
 27297  005FC2  0100               	movlb	0	; () banked
 27298  005FC4  658E               	cpfsgt	_numberOfErrorCurrent& (0+255),b	;volatile
 27299  005FC6  0012               	return	
 27300                           
 27301                           ; BSR set to: 0
 27302                           ;controlCurrent_MC50.c: 425:             {;controlCurrent_MC50.c: 426:                 v
      +                          ar_sys.StateMotor = Stopped;
 27303  005FC8  0E00               	movlw	0
 27304  005FCA  0101               	movlb	1	; () banked
 27305  005FCC  6F00               	movwf	_var_sys& (0+255),b	;volatile
 27306                           
 27307                           ;controlCurrent_MC50.c: 427:                 ts_system.TimeCurrentAlarm= (1000/50)*10;
 27308  005FCE  0E00               	movlw	0
 27309  005FD0  6FC5               	movwf	(_ts_system+43)& (0+255),b	;volatile
 27310  005FD2  0EC8               	movlw	200
 27311  005FD4  6FC4               	movwf	(_ts_system+42)& (0+255),b	;volatile
 27312                           
 27313                           ;controlCurrent_MC50.c: 428:                 var_sys.CurrentAlarmIsOn=YES;
 27314  005FD6  0E01               	movlw	1
 27315  005FD8  6F41               	movwf	(_var_sys+65)& (0+255),b	;volatile
 27316  005FDA  0012               	return	
 27317  005FDC                     l1405:
 27318  005FDC  0012               	return		;funcret
 27319  005FDE                     __end_of_ControlCurrent:
 27320                           	callstack 0
 27321                           
 27322 ;; *************** function _refreshCurrent *****************
 27323 ;; Defined at:
 27324 ;;		line 233 in file "controlCurrent_MC50.c"
 27325 ;; Parameters:    Size  Location     Type
 27326 ;;		None
 27327 ;; Auto vars:     Size  Location     Type
 27328 ;;		None
 27329 ;; Return value:  Size  Location     Type
 27330 ;;                  1    wreg      void 
 27331 ;; Registers used:
 27332 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27333 ;; Tracked objects:
 27334 ;;		On entry : 3E/1
 27335 ;;		On exit  : 3F/0
 27336 ;;		Unchanged: 0/0
 27337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27341 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27342 ;;Total ram usage:        0 bytes
 27343 ;; Hardware stack levels used: 1
 27344 ;; Hardware stack levels required when called: 5
 27345 ;; This function calls:
 27346 ;;		_saveEnergyADCHist
 27347 ;;		_sumEnergyADC
 27348 ;;		_sumHIST
 27349 ;; This function is called by:
 27350 ;;		_ControlCurrent
 27351 ;; This function uses a non-reentrant model
 27352 ;;
 27353                           
 27354                           	psect	text117
 27355  008786                     __ptext117:
 27356                           	callstack 0
 27357  008786                     _refreshCurrent:
 27358                           	callstack 24
 27359                           
 27360                           ;controlCurrent_MC50.c: 238:     if ( (var_sys_NVM.electricBrake==1) && (ts_system.TimeE
      +                          lectricBrake>0) )
 27361                           
 27362                           ;incstack = 0
 27363  008786  0100               	movlb	0	; () banked
 27364  008788  05AF               	decf	(_var_sys_NVM+23)& (0+255),w,b	;volatile
 27365  00878A  A4D8               	btfss	status,2,c
 27366  00878C  D008               	goto	l14447
 27367                           
 27368                           ; BSR set to: 0
 27369  00878E  0101               	movlb	1	; () banked
 27370  008790  BFC3               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 27371  008792  D005               	goto	l14447
 27372  008794  51C3               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 27373  008796  E109               	bnz	l1372
 27374  008798  05C2               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 27375  00879A  B0D8               	btfsc	status,0,c
 27376  00879C  D006               	goto	l1372
 27377  00879E                     l14447:
 27378                           
 27379                           ;controlCurrent_MC50.c: 243:     {;controlCurrent_MC50.c: 245:         var_sys.ActualCur
      +                          rent=sumEnergyADC();
 27380  00879E  EC8A  F03B         	call	_sumEnergyADC	;wreg free
 27381  0087A2  C010  F12E         	movff	?_sumEnergyADC,_var_sys+46	;volatile
 27382  0087A6  C011  F12F         	movff	?_sumEnergyADC+1,_var_sys+47	;volatile
 27383  0087AA                     l1372:
 27384                           
 27385                           ; BSR set to: 1
 27386                           ;controlCurrent_MC50.c: 248:     saveEnergyADCHist(var_sys.ActualCurrent);
 27387  0087AA  C12E  F010         	movff	_var_sys+46,saveEnergyADCHist@valueToSave	;volatile
 27388  0087AE  C12F  F011         	movff	_var_sys+47,saveEnergyADCHist@valueToSave+1	;volatile
 27389  0087B2  ECCF  F046         	call	_saveEnergyADCHist	;wreg free
 27390                           
 27391                           ;controlCurrent_MC50.c: 250:     var_sys.ActualHistCurrent=sumHIST();
 27392  0087B6  EC7A  F035         	call	_sumHIST	;wreg free
 27393  0087BA  C010  F130         	movff	?_sumHIST,_var_sys+48	;volatile
 27394  0087BE  C011  F131         	movff	?_sumHIST+1,_var_sys+49	;volatile
 27395  0087C2  C012  F132         	movff	?_sumHIST+2,_var_sys+50	;volatile
 27396  0087C6  C013  F133         	movff	?_sumHIST+3,_var_sys+51	;volatile
 27397                           
 27398                           ; BSR set to: 0
 27399  0087CA  0012               	return		;funcret
 27400  0087CC                     __end_of_refreshCurrent:
 27401                           	callstack 0
 27402                           
 27403 ;; *************** function _sumHIST *****************
 27404 ;; Defined at:
 27405 ;;		line 199 in file "controlCurrent_MC50.c"
 27406 ;; Parameters:    Size  Location     Type
 27407 ;;		None
 27408 ;; Auto vars:     Size  Location     Type
 27409 ;;  sumH            4   27[COMRAM] unsigned long 
 27410 ;;  min             2   25[COMRAM] unsigned int 
 27411 ;;  max             2   23[COMRAM] unsigned int 
 27412 ;;  i               1   31[COMRAM] unsigned char 
 27413 ;; Return value:  Size  Location     Type
 27414 ;;                  4   15[COMRAM] unsigned long 
 27415 ;; Registers used:
 27416 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 27417 ;; Tracked objects:
 27418 ;;		On entry : 3F/0
 27419 ;;		On exit  : 3F/0
 27420 ;;		Unchanged: 3F/0
 27421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27422 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27423 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27424 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27425 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27426 ;;Total ram usage:       17 bytes
 27427 ;; Hardware stack levels used: 1
 27428 ;; Hardware stack levels required when called: 4
 27429 ;; This function calls:
 27430 ;;		Nothing
 27431 ;; This function is called by:
 27432 ;;		_refreshCurrent
 27433 ;; This function uses a non-reentrant model
 27434 ;;
 27435                           
 27436                           	psect	text118
 27437  006AF4                     __ptext118:
 27438                           	callstack 0
 27439  006AF4                     _sumHIST:
 27440                           	callstack 24
 27441                           
 27442                           ; BSR set to: 0
 27443                           ;controlCurrent_MC50.c: 201:     unsigned char i;;controlCurrent_MC50.c: 202:     unsign
      +                          ed long sumH = 0;
 27444                           
 27445                           ; BSR set to: 0
 27446                           ;incstack = 0
 27447  006AF4  0E00               	movlw	0
 27448  006AF6  6E1C               	movwf	sumHIST@sumH^0,c
 27449  006AF8  0E00               	movlw	0
 27450  006AFA  6E1D               	movwf	(sumHIST@sumH+1)^0,c
 27451  006AFC  0E00               	movlw	0
 27452  006AFE  6E1E               	movwf	(sumHIST@sumH+2)^0,c
 27453  006B00  0E00               	movlw	0
 27454  006B02  6E1F               	movwf	(sumHIST@sumH+3)^0,c
 27455                           
 27456                           ;controlCurrent_MC50.c: 203:     unsigned int max=0;
 27457  006B04  0E00               	movlw	0
 27458  006B06  6E19               	movwf	(sumHIST@max+1)^0,c
 27459  006B08  0E00               	movlw	0
 27460  006B0A  6E18               	movwf	sumHIST@max^0,c
 27461                           
 27462                           ; BSR set to: 0
 27463                           ;controlCurrent_MC50.c: 204:     unsigned int min=0xFFFF;
 27464  006B0C  681A               	setf	sumHIST@min^0,c
 27465  006B0E  681B               	setf	(sumHIST@min+1)^0,c
 27466                           
 27467                           ;controlCurrent_MC50.c: 207:     for( i = 0; i<(10); i++)
 27468  006B10  0E00               	movlw	0
 27469  006B12  6E20               	movwf	sumHIST@i^0,c
 27470  006B14                     l12603:
 27471                           
 27472                           ; BSR set to: 0
 27473                           ;controlCurrent_MC50.c: 208:     {;controlCurrent_MC50.c: 209:         sumH=sumH+SumEner
      +                          gyADCHist_array[i];
 27474  006B14  5020               	movf	sumHIST@i^0,w,c
 27475  006B16  0D02               	mullw	2
 27476  006B18  0E60               	movlw	low _SumEnergyADCHist_array
 27477  006B1A  24F3               	addwf	243,w,c
 27478  006B1C  6ED9               	movwf	fsr2l,c
 27479  006B1E  0E02               	movlw	high _SumEnergyADCHist_array
 27480  006B20  20F4               	addwfc	prodh,w,c
 27481  006B22  6EDA               	movwf	fsr2h,c
 27482  006B24  CFDE F014          	movff	postinc2,??_sumHIST
 27483  006B28  CFDD F015          	movff	postdec2,??_sumHIST+1
 27484  006B2C  5014               	movf	??_sumHIST^0,w,c
 27485  006B2E  241C               	addwf	sumHIST@sumH^0,w,c
 27486  006B30  6E1C               	movwf	sumHIST@sumH^0,c
 27487  006B32  5015               	movf	(??_sumHIST+1)^0,w,c
 27488  006B34  201D               	addwfc	(sumHIST@sumH+1)^0,w,c
 27489  006B36  6E1D               	movwf	(sumHIST@sumH+1)^0,c
 27490  006B38  0E00               	movlw	0
 27491  006B3A  201E               	addwfc	(sumHIST@sumH+2)^0,w,c
 27492  006B3C  6E1E               	movwf	(sumHIST@sumH+2)^0,c
 27493  006B3E  0E00               	movlw	0
 27494  006B40  201F               	addwfc	(sumHIST@sumH+3)^0,w,c
 27495  006B42  6E1F               	movwf	(sumHIST@sumH+3)^0,c
 27496                           
 27497                           ;controlCurrent_MC50.c: 212:         if(SumEnergyADCHist_array[i]>max)
 27498  006B44  5020               	movf	sumHIST@i^0,w,c
 27499  006B46  0D02               	mullw	2
 27500  006B48  0E60               	movlw	low _SumEnergyADCHist_array
 27501  006B4A  24F3               	addwf	243,w,c
 27502  006B4C  6ED9               	movwf	fsr2l,c
 27503  006B4E  0E02               	movlw	high _SumEnergyADCHist_array
 27504  006B50  20F4               	addwfc	prodh,w,c
 27505  006B52  6EDA               	movwf	fsr2h,c
 27506  006B54  50DE               	movf	postinc2,w,c
 27507  006B56  5C18               	subwf	sumHIST@max^0,w,c
 27508  006B58  50DE               	movf	postinc2,w,c
 27509  006B5A  5819               	subwfb	(sumHIST@max+1)^0,w,c
 27510  006B5C  B0D8               	btfsc	status,0,c
 27511  006B5E  D00C               	goto	l1366
 27512                           
 27513                           ; BSR set to: 0
 27514                           ;controlCurrent_MC50.c: 213:         {;controlCurrent_MC50.c: 214:             max=SumEn
      +                          ergyADCHist_array[i];
 27515  006B60  5020               	movf	sumHIST@i^0,w,c
 27516  006B62  0D02               	mullw	2
 27517  006B64  0E60               	movlw	low _SumEnergyADCHist_array
 27518  006B66  24F3               	addwf	243,w,c
 27519  006B68  6ED9               	movwf	fsr2l,c
 27520  006B6A  0E02               	movlw	high _SumEnergyADCHist_array
 27521  006B6C  20F4               	addwfc	prodh,w,c
 27522  006B6E  6EDA               	movwf	fsr2h,c
 27523  006B70  CFDE F018          	movff	postinc2,sumHIST@max
 27524  006B74  CFDD F019          	movff	postdec2,sumHIST@max+1
 27525  006B78                     l1366:
 27526                           
 27527                           ; BSR set to: 0
 27528                           ;controlCurrent_MC50.c: 218:         if(SumEnergyADCHist_array[i]<min)
 27529  006B78  5020               	movf	sumHIST@i^0,w,c
 27530  006B7A  0D02               	mullw	2
 27531  006B7C  0E60               	movlw	low _SumEnergyADCHist_array
 27532  006B7E  24F3               	addwf	243,w,c
 27533  006B80  6ED9               	movwf	fsr2l,c
 27534  006B82  0E02               	movlw	high _SumEnergyADCHist_array
 27535  006B84  20F4               	addwfc	prodh,w,c
 27536  006B86  6EDA               	movwf	fsr2h,c
 27537  006B88  501A               	movf	sumHIST@min^0,w,c
 27538  006B8A  5CDE               	subwf	postinc2,w,c
 27539  006B8C  501B               	movf	(sumHIST@min+1)^0,w,c
 27540  006B8E  58DE               	subwfb	postinc2,w,c
 27541  006B90  B0D8               	btfsc	status,0,c
 27542  006B92  D00C               	goto	l12609
 27543                           
 27544                           ; BSR set to: 0
 27545                           ;controlCurrent_MC50.c: 219:         {;controlCurrent_MC50.c: 220:             min=SumEn
      +                          ergyADCHist_array[i];
 27546  006B94  5020               	movf	sumHIST@i^0,w,c
 27547  006B96  0D02               	mullw	2
 27548  006B98  0E60               	movlw	low _SumEnergyADCHist_array
 27549  006B9A  24F3               	addwf	243,w,c
 27550  006B9C  6ED9               	movwf	fsr2l,c
 27551  006B9E  0E02               	movlw	high _SumEnergyADCHist_array
 27552  006BA0  20F4               	addwfc	prodh,w,c
 27553  006BA2  6EDA               	movwf	fsr2h,c
 27554  006BA4  CFDE F01A          	movff	postinc2,sumHIST@min
 27555  006BA8  CFDD F01B          	movff	postdec2,sumHIST@min+1
 27556  006BAC                     l12609:
 27557                           
 27558                           ; BSR set to: 0
 27559                           ;controlCurrent_MC50.c: 222:     }
 27560  006BAC  2A20               	incf	sumHIST@i^0,f,c
 27561                           
 27562                           ; BSR set to: 0
 27563  006BAE  0E09               	movlw	9
 27564  006BB0  6420               	cpfsgt	sumHIST@i^0,c
 27565  006BB2  D7B0               	goto	l12603
 27566                           
 27567                           ; BSR set to: 0
 27568                           ;controlCurrent_MC50.c: 224:     sumH = sumH - ( max+min );
 27569  006BB4  501A               	movf	sumHIST@min^0,w,c
 27570  006BB6  2418               	addwf	sumHIST@max^0,w,c
 27571  006BB8  6E14               	movwf	??_sumHIST^0,c
 27572  006BBA  501B               	movf	(sumHIST@min+1)^0,w,c
 27573  006BBC  2019               	addwfc	(sumHIST@max+1)^0,w,c
 27574  006BBE  6E15               	movwf	(??_sumHIST+1)^0,c
 27575  006BC0  6A16               	clrf	(??_sumHIST+2)^0,c
 27576  006BC2  6A17               	clrf	(??_sumHIST+3)^0,c
 27577  006BC4  5014               	movf	??_sumHIST^0,w,c
 27578  006BC6  5C1C               	subwf	sumHIST@sumH^0,w,c
 27579  006BC8  6E1C               	movwf	sumHIST@sumH^0,c
 27580  006BCA  5015               	movf	(??_sumHIST+1)^0,w,c
 27581  006BCC  581D               	subwfb	(sumHIST@sumH+1)^0,w,c
 27582  006BCE  6E1D               	movwf	(sumHIST@sumH+1)^0,c
 27583  006BD0  5016               	movf	(??_sumHIST+2)^0,w,c
 27584  006BD2  581E               	subwfb	(sumHIST@sumH+2)^0,w,c
 27585  006BD4  6E1E               	movwf	(sumHIST@sumH+2)^0,c
 27586  006BD6  5017               	movf	(??_sumHIST+3)^0,w,c
 27587  006BD8  581F               	subwfb	(sumHIST@sumH+3)^0,w,c
 27588  006BDA  6E1F               	movwf	(sumHIST@sumH+3)^0,c
 27589                           
 27590                           ; BSR set to: 0
 27591                           ;controlCurrent_MC50.c: 226:     return sumH;
 27592  006BDC  C01C  F010         	movff	sumHIST@sumH,?_sumHIST
 27593  006BE0  C01D  F011         	movff	sumHIST@sumH+1,?_sumHIST+1
 27594  006BE4  C01E  F012         	movff	sumHIST@sumH+2,?_sumHIST+2
 27595  006BE8  C01F  F013         	movff	sumHIST@sumH+3,?_sumHIST+3
 27596                           
 27597                           ; BSR set to: 0
 27598  006BEC  0012               	return		;funcret
 27599  006BEE                     __end_of_sumHIST:
 27600                           	callstack 0
 27601                           
 27602 ;; *************** function _sumEnergyADC *****************
 27603 ;; Defined at:
 27604 ;;		line 59 in file "controlCurrent_MC50.c"
 27605 ;; Parameters:    Size  Location     Type
 27606 ;;		None
 27607 ;; Auto vars:     Size  Location     Type
 27608 ;;  auxValue        2   21[COMRAM] unsigned int 
 27609 ;;  sumE            2   19[COMRAM] unsigned int 
 27610 ;;  i               1   23[COMRAM] unsigned char 
 27611 ;; Return value:  Size  Location     Type
 27612 ;;                  2   15[COMRAM] unsigned int 
 27613 ;; Registers used:
 27614 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 27615 ;; Tracked objects:
 27616 ;;		On entry : 3E/0
 27617 ;;		On exit  : 3F/1
 27618 ;;		Unchanged: 0/0
 27619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27620 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27621 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27622 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27623 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27624 ;;Total ram usage:        9 bytes
 27625 ;; Hardware stack levels used: 1
 27626 ;; Hardware stack levels required when called: 4
 27627 ;; This function calls:
 27628 ;;		Nothing
 27629 ;; This function is called by:
 27630 ;;		_refreshCurrent
 27631 ;; This function uses a non-reentrant model
 27632 ;;
 27633                           
 27634                           	psect	text119
 27635  007714                     __ptext119:
 27636                           	callstack 0
 27637  007714                     _sumEnergyADC:
 27638                           	callstack 24
 27639                           
 27640                           ;controlCurrent_MC50.c: 61:     unsigned char i;;controlCurrent_MC50.c: 63:     unsigned
      +                           int sumE = 0;
 27641                           
 27642                           ; BSR set to: 0
 27643                           ;incstack = 0
 27644  007714  0E00               	movlw	0
 27645  007716  6E15               	movwf	(sumEnergyADC@sumE+1)^0,c
 27646  007718  0E00               	movlw	0
 27647  00771A  6E14               	movwf	sumEnergyADC@sumE^0,c
 27648                           
 27649                           ;controlCurrent_MC50.c: 72:     for ( i=0 ; i<(30) ; i++ )
 27650  00771C  0E00               	movlw	0
 27651  00771E  6E18               	movwf	sumEnergyADC@i^0,c
 27652  007720                     l12575:
 27653                           
 27654                           ;controlCurrent_MC50.c: 73:     {;controlCurrent_MC50.c: 83:         if ( ADC_array[i] >
      +                           var_sys.ADCZeroOffset )
 27655  007720  5018               	movf	sumEnergyADC@i^0,w,c
 27656  007722  0D02               	mullw	2
 27657  007724  0E00               	movlw	low _ADC_array
 27658  007726  24F3               	addwf	243,w,c
 27659  007728  6ED9               	movwf	fsr2l,c
 27660  00772A  0E02               	movlw	high _ADC_array
 27661  00772C  20F4               	addwfc	prodh,w,c
 27662  00772E  6EDA               	movwf	fsr2h,c
 27663  007730  50DE               	movf	postinc2,w,c
 27664  007732  0101               	movlb	1	; () banked
 27665  007734  5D4B               	subwf	(_var_sys+75)& (0+255),w,b	;volatile
 27666  007736  50DE               	movf	postinc2,w,c
 27667  007738  594C               	subwfb	(_var_sys+76)& (0+255),w,b	;volatile
 27668  00773A  B0D8               	btfsc	status,0,c
 27669  00773C  D012               	goto	l12579
 27670                           
 27671                           ; BSR set to: 1
 27672                           ;controlCurrent_MC50.c: 84:         {;controlCurrent_MC50.c: 85:             auxValue = 
      +                          ( ADC_array[i] - var_sys.ADCZeroOffset );
 27673  00773E  5018               	movf	sumEnergyADC@i^0,w,c
 27674  007740  0D02               	mullw	2
 27675  007742  0E00               	movlw	low _ADC_array
 27676  007744  24F3               	addwf	243,w,c
 27677  007746  6ED9               	movwf	fsr2l,c
 27678  007748  0E02               	movlw	high _ADC_array
 27679  00774A  20F4               	addwfc	prodh,w,c
 27680  00774C  6EDA               	movwf	fsr2h,c
 27681  00774E  CFDE F012          	movff	postinc2,??_sumEnergyADC
 27682  007752  CFDD F013          	movff	postdec2,??_sumEnergyADC+1
 27683  007756  514B               	movf	(_var_sys+75)& (0+255),w,b	;volatile
 27684  007758  5C12               	subwf	??_sumEnergyADC^0,w,c
 27685  00775A  6E16               	movwf	sumEnergyADC@auxValue^0,c
 27686  00775C  514C               	movf	(_var_sys+76)& (0+255),w,b	;volatile
 27687  00775E  5813               	subwfb	(??_sumEnergyADC+1)^0,w,c
 27688  007760  D011               	goto	L103
 27689  007762                     l12579:
 27690                           
 27691                           ; BSR set to: 1
 27692                           ;controlCurrent_MC50.c: 88:         {;controlCurrent_MC50.c: 89:            auxValue = (
      +                           var_sys.ADCZeroOffset - ADC_array[i] );
 27693  007762  5018               	movf	sumEnergyADC@i^0,w,c
 27694  007764  0D02               	mullw	2
 27695  007766  0E00               	movlw	low _ADC_array
 27696  007768  24F3               	addwf	243,w,c
 27697  00776A  6ED9               	movwf	fsr2l,c
 27698  00776C  0E02               	movlw	high _ADC_array
 27699  00776E  20F4               	addwfc	prodh,w,c
 27700  007770  6EDA               	movwf	fsr2h,c
 27701  007772  CFDE F012          	movff	postinc2,??_sumEnergyADC
 27702  007776  CFDD F013          	movff	postdec2,??_sumEnergyADC+1
 27703  00777A  5012               	movf	??_sumEnergyADC^0,w,c
 27704  00777C  5D4B               	subwf	(_var_sys+75)& (0+255),w,b	;volatile
 27705  00777E  6E16               	movwf	sumEnergyADC@auxValue^0,c
 27706  007780  5013               	movf	(??_sumEnergyADC+1)^0,w,c
 27707  007782  594C               	subwfb	(_var_sys+76)& (0+255),w,b	;volatile
 27708  007784                     L103:
 27709  007784  6E17               	movwf	(sumEnergyADC@auxValue+1)^0,c
 27710                           
 27711                           ; BSR set to: 1
 27712                           ;controlCurrent_MC50.c: 91:         sumE += auxValue;
 27713  007786  5016               	movf	sumEnergyADC@auxValue^0,w,c
 27714  007788  2614               	addwf	sumEnergyADC@sumE^0,f,c
 27715  00778A  5017               	movf	(sumEnergyADC@auxValue+1)^0,w,c
 27716  00778C  2215               	addwfc	(sumEnergyADC@sumE+1)^0,f,c
 27717                           
 27718                           ; BSR set to: 1
 27719                           ;controlCurrent_MC50.c: 94:     }
 27720  00778E  2A18               	incf	sumEnergyADC@i^0,f,c
 27721                           
 27722                           ; BSR set to: 1
 27723  007790  0E1D               	movlw	29
 27724  007792  6418               	cpfsgt	sumEnergyADC@i^0,c
 27725  007794  D7C5               	goto	l12575
 27726                           
 27727                           ; BSR set to: 1
 27728                           ;controlCurrent_MC50.c: 96:     return sumE;
 27729  007796  C014  F010         	movff	sumEnergyADC@sumE,?_sumEnergyADC
 27730  00779A  C015  F011         	movff	sumEnergyADC@sumE+1,?_sumEnergyADC+1
 27731                           
 27732                           ; BSR set to: 1
 27733  00779E  0012               	return		;funcret
 27734  0077A0                     __end_of_sumEnergyADC:
 27735                           	callstack 0
 27736                           
 27737 ;; *************** function _saveEnergyADCHist *****************
 27738 ;; Defined at:
 27739 ;;		line 182 in file "controlCurrent_MC50.c"
 27740 ;; Parameters:    Size  Location     Type
 27741 ;;  valueToSave     2   15[COMRAM] unsigned int 
 27742 ;; Auto vars:     Size  Location     Type
 27743 ;;		None
 27744 ;; Return value:  Size  Location     Type
 27745 ;;                  1    wreg      void 
 27746 ;; Registers used:
 27747 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 27748 ;; Tracked objects:
 27749 ;;		On entry : 3F/1
 27750 ;;		On exit  : 3F/0
 27751 ;;		Unchanged: 0/0
 27752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27753 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27754 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27756 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27757 ;;Total ram usage:        2 bytes
 27758 ;; Hardware stack levels used: 1
 27759 ;; Hardware stack levels required when called: 4
 27760 ;; This function calls:
 27761 ;;		Nothing
 27762 ;; This function is called by:
 27763 ;;		_refreshCurrent
 27764 ;; This function uses a non-reentrant model
 27765 ;;
 27766                           
 27767                           	psect	text120
 27768  008D9E                     __ptext120:
 27769                           	callstack 0
 27770  008D9E                     _saveEnergyADCHist:
 27771                           	callstack 24
 27772                           
 27773                           ; BSR set to: 1
 27774                           ;controlCurrent_MC50.c: 182: void saveEnergyADCHist(unsigned int valueToSave);controlCur
      +                          rent_MC50.c: 183: {;controlCurrent_MC50.c: 184:     if(idxSaveEnergyADCHist>=10)
 27775                           
 27776                           ; BSR set to: 1
 27777                           ;incstack = 0
 27778  008D9E  0E09               	movlw	9
 27779  008DA0  0100               	movlb	0	; () banked
 27780  008DA2  6590               	cpfsgt	_idxSaveEnergyADCHist& (0+255),b	;volatile
 27781  008DA4  D002               	goto	l12591
 27782                           
 27783                           ; BSR set to: 0
 27784                           ;controlCurrent_MC50.c: 185:     {;controlCurrent_MC50.c: 186:         idxSaveEnergyADCH
      +                          ist=0;
 27785  008DA6  0E00               	movlw	0
 27786  008DA8  6F90               	movwf	_idxSaveEnergyADCHist& (0+255),b	;volatile
 27787  008DAA                     l12591:
 27788                           
 27789                           ; BSR set to: 0
 27790                           ;controlCurrent_MC50.c: 189:     SumEnergyADCHist_array[idxSaveEnergyADCHist]=valueToSav
      +                          e;
 27791  008DAA  5190               	movf	_idxSaveEnergyADCHist& (0+255),w,b	;volatile
 27792  008DAC  0D02               	mullw	2
 27793  008DAE  0E60               	movlw	low _SumEnergyADCHist_array
 27794  008DB0  24F3               	addwf	243,w,c
 27795  008DB2  6ED9               	movwf	fsr2l,c
 27796  008DB4  0E02               	movlw	high _SumEnergyADCHist_array
 27797  008DB6  20F4               	addwfc	prodh,w,c
 27798  008DB8  6EDA               	movwf	fsr2h,c
 27799  008DBA  C010  FFDE         	movff	saveEnergyADCHist@valueToSave,postinc2
 27800  008DBE  C011  FFDD         	movff	saveEnergyADCHist@valueToSave+1,postdec2
 27801                           
 27802                           ; BSR set to: 0
 27803                           ;controlCurrent_MC50.c: 190:     idxSaveEnergyADCHist++;
 27804  008DC2  2B90               	incf	_idxSaveEnergyADCHist& (0+255),f,b	;volatile
 27805                           
 27806                           ; BSR set to: 0
 27807  008DC4  0012               	return		;funcret
 27808  008DC6                     __end_of_saveEnergyADCHist:
 27809                           	callstack 0
 27810                           
 27811 ;; *************** function _refreshADCZeroOffset *****************
 27812 ;; Defined at:
 27813 ;;		line 103 in file "controlCurrent_MC50.c"
 27814 ;; Parameters:    Size  Location     Type
 27815 ;;		None
 27816 ;; Auto vars:     Size  Location     Type
 27817 ;;  media           2   23[COMRAM] unsigned int 
 27818 ;;  i               1   22[COMRAM] unsigned char 
 27819 ;; Return value:  Size  Location     Type
 27820 ;;                  1    wreg      void 
 27821 ;; Registers used:
 27822 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27823 ;; Tracked objects:
 27824 ;;		On entry : 3F/0
 27825 ;;		On exit  : 3E/0
 27826 ;;		Unchanged: 0/0
 27827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27828 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27829 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27831 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27832 ;;Total ram usage:        3 bytes
 27833 ;; Hardware stack levels used: 1
 27834 ;; Hardware stack levels required when called: 5
 27835 ;; This function calls:
 27836 ;;		___lwdiv
 27837 ;; This function is called by:
 27838 ;;		_ControlCurrent
 27839 ;; This function uses a non-reentrant model
 27840 ;;
 27841                           
 27842                           	psect	text121
 27843  0068FA                     __ptext121:
 27844                           	callstack 0
 27845  0068FA                     _refreshADCZeroOffset:
 27846                           	callstack 24
 27847                           
 27848                           ; BSR set to: 0
 27849                           ;controlCurrent_MC50.c: 105:     unsigned char i;;controlCurrent_MC50.c: 106:     unsign
      +                          ed int media = 0;
 27850                           
 27851                           ; BSR set to: 0
 27852                           ;incstack = 0
 27853  0068FA  0E00               	movlw	0
 27854  0068FC  6E19               	movwf	(refreshADCZeroOffset@media+1)^0,c
 27855  0068FE  0E00               	movlw	0
 27856  006900  6E18               	movwf	refreshADCZeroOffset@media^0,c
 27857                           
 27858                           ;controlCurrent_MC50.c: 109:     if ( var_sys.StateMotor == Stopped )
 27859  006902  0101               	movlb	1	; () banked
 27860  006904  5100               	movf	_var_sys& (0+255),w,b	;volatile
 27861  006906  A4D8               	btfss	status,2,c
 27862  006908  0012               	return	
 27863                           
 27864                           ; BSR set to: 1
 27865                           ;controlCurrent_MC50.c: 110:     {;controlCurrent_MC50.c: 111:         if ( ts_system.Ti
      +                          meStopADCZeroOffsetCalc <= 0 )
 27866  00690A  BFD9               	btfsc	(_ts_system+63)& (0+255),7,b	;volatile
 27867  00690C  D005               	goto	u14690
 27868  00690E  51D9               	movf	(_ts_system+63)& (0+255),w,b	;volatile
 27869  006910  E172               	bnz	l1357
 27870  006912  05D8               	decf	(_ts_system+62)& (0+255),w,b	;volatile
 27871  006914  B0D8               	btfsc	status,0,c
 27872  006916  0012               	return	
 27873  006918                     u14690:
 27874                           
 27875                           ; BSR set to: 1
 27876                           ;controlCurrent_MC50.c: 112:         {;controlCurrent_MC50.c: 113:             ts_system
      +                          .TimeStopADCZeroOffsetCalc = (1000/50);
 27877  006918  0E00               	movlw	0
 27878  00691A  6FD9               	movwf	(_ts_system+63)& (0+255),b	;volatile
 27879  00691C  0E14               	movlw	20
 27880  00691E  6FD8               	movwf	(_ts_system+62)& (0+255),b	;volatile
 27881                           
 27882                           ;controlCurrent_MC50.c: 121:             for ( i=0 ; i<(30) ; i++ )
 27883  006920  0E00               	movlw	0
 27884  006922  6E17               	movwf	refreshADCZeroOffset@i^0,c
 27885  006924                     l14399:
 27886                           
 27887                           ;controlCurrent_MC50.c: 122:             {;controlCurrent_MC50.c: 126:                 m
      +                          edia += ADC_array[i];
 27888  006924  5017               	movf	refreshADCZeroOffset@i^0,w,c
 27889  006926  0D02               	mullw	2
 27890  006928  0E00               	movlw	low _ADC_array
 27891  00692A  24F3               	addwf	243,w,c
 27892  00692C  6ED9               	movwf	fsr2l,c
 27893  00692E  0E02               	movlw	high _ADC_array
 27894  006930  20F4               	addwfc	prodh,w,c
 27895  006932  6EDA               	movwf	fsr2h,c
 27896  006934  50DE               	movf	postinc2,w,c
 27897  006936  2618               	addwf	refreshADCZeroOffset@media^0,f,c
 27898  006938  50DD               	movf	postdec2,w,c
 27899  00693A  2219               	addwfc	(refreshADCZeroOffset@media+1)^0,f,c
 27900                           
 27901                           ;controlCurrent_MC50.c: 128:             }
 27902  00693C  2A17               	incf	refreshADCZeroOffset@i^0,f,c
 27903  00693E  0E1D               	movlw	29
 27904  006940  6417               	cpfsgt	refreshADCZeroOffset@i^0,c
 27905  006942  D7F0               	goto	l14399
 27906                           
 27907                           ;controlCurrent_MC50.c: 130:             media = media/30;
 27908  006944  C018  F010         	movff	refreshADCZeroOffset@media,___lwdiv@dividend
 27909  006948  C019  F011         	movff	refreshADCZeroOffset@media+1,___lwdiv@dividend+1
 27910  00694C  0E00               	movlw	0
 27911  00694E  6E13               	movwf	(___lwdiv@divisor+1)^0,c
 27912  006950  0E1E               	movlw	30
 27913  006952  6E12               	movwf	___lwdiv@divisor^0,c
 27914  006954  ECB3  F042         	call	___lwdiv	;wreg free
 27915  006958  C010  F018         	movff	?___lwdiv,refreshADCZeroOffset@media
 27916  00695C  C011  F019         	movff	?___lwdiv+1,refreshADCZeroOffset@media+1
 27917                           
 27918                           ;controlCurrent_MC50.c: 131:             if ( (media>(510 -20)) && (media<(510 +20)) )
 27919  006960  0EEB               	movlw	235
 27920  006962  5C18               	subwf	refreshADCZeroOffset@media^0,w,c
 27921  006964  0E01               	movlw	1
 27922  006966  5819               	subwfb	(refreshADCZeroOffset@media+1)^0,w,c
 27923  006968  A0D8               	btfss	status,0,c
 27924  00696A  D006               	goto	l14413
 27925  00696C  0E12               	movlw	18
 27926  00696E  5C18               	subwf	refreshADCZeroOffset@media^0,w,c
 27927  006970  0E02               	movlw	2
 27928  006972  5819               	subwfb	(refreshADCZeroOffset@media+1)^0,w,c
 27929  006974  A0D8               	btfss	status,0,c
 27930  006976  D004               	goto	l14415
 27931  006978                     l14413:
 27932                           
 27933                           ;controlCurrent_MC50.c: 136:             {;controlCurrent_MC50.c: 138:                 m
      +                          edia = 510;
 27934  006978  0E01               	movlw	1
 27935  00697A  6E19               	movwf	(refreshADCZeroOffset@media+1)^0,c
 27936  00697C  0EFE               	movlw	254
 27937  00697E  6E18               	movwf	refreshADCZeroOffset@media^0,c
 27938  006980                     l14415:
 27939                           
 27940                           ;controlCurrent_MC50.c: 142:             if ( idxAdcZeroAquisition >= 30 )
 27941  006980  0E1D               	movlw	29
 27942  006982  0100               	movlb	0	; () banked
 27943  006984  658F               	cpfsgt	_idxAdcZeroAquisition& (0+255),b	;volatile
 27944  006986  D002               	goto	l14419
 27945                           
 27946                           ; BSR set to: 0
 27947                           ;controlCurrent_MC50.c: 143:             {;controlCurrent_MC50.c: 144:                 i
      +                          dxAdcZeroAquisition = 0;
 27948  006988  0E00               	movlw	0
 27949  00698A  6F8F               	movwf	_idxAdcZeroAquisition& (0+255),b	;volatile
 27950  00698C                     l14419:
 27951                           
 27952                           ; BSR set to: 0
 27953                           ;controlCurrent_MC50.c: 146:             ADC_zero_array[idxAdcZeroAquisition] = media;
 27954  00698C  518F               	movf	_idxAdcZeroAquisition& (0+255),w,b	;volatile
 27955  00698E  0D02               	mullw	2
 27956  006990  0E96               	movlw	low _ADC_zero_array
 27957  006992  24F3               	addwf	243,w,c
 27958  006994  6ED9               	movwf	fsr2l,c
 27959  006996  0E03               	movlw	high _ADC_zero_array
 27960  006998  20F4               	addwfc	prodh,w,c
 27961  00699A  6EDA               	movwf	fsr2h,c
 27962  00699C  C018  FFDE         	movff	refreshADCZeroOffset@media,postinc2
 27963  0069A0  C019  FFDD         	movff	refreshADCZeroOffset@media+1,postdec2
 27964                           
 27965                           ; BSR set to: 0
 27966                           ;controlCurrent_MC50.c: 147:             idxAdcZeroAquisition++;
 27967  0069A4  2B8F               	incf	_idxAdcZeroAquisition& (0+255),f,b	;volatile
 27968                           
 27969                           ; BSR set to: 0
 27970                           ;controlCurrent_MC50.c: 150:             media = 0;
 27971  0069A6  0E00               	movlw	0
 27972  0069A8  6E19               	movwf	(refreshADCZeroOffset@media+1)^0,c
 27973  0069AA  0E00               	movlw	0
 27974  0069AC  6E18               	movwf	refreshADCZeroOffset@media^0,c
 27975                           
 27976                           ; BSR set to: 0
 27977                           ;controlCurrent_MC50.c: 151:             for ( i=0 ; i<(30) ; i++ )
 27978  0069AE  0E00               	movlw	0
 27979  0069B0  6E17               	movwf	refreshADCZeroOffset@i^0,c
 27980  0069B2                     l14431:
 27981                           
 27982                           ; BSR set to: 0
 27983                           ;controlCurrent_MC50.c: 152:             {;controlCurrent_MC50.c: 158:                 m
      +                          edia += ADC_zero_array[i];
 27984  0069B2  5017               	movf	refreshADCZeroOffset@i^0,w,c
 27985  0069B4  0D02               	mullw	2
 27986  0069B6  0E96               	movlw	low _ADC_zero_array
 27987  0069B8  24F3               	addwf	243,w,c
 27988  0069BA  6ED9               	movwf	fsr2l,c
 27989  0069BC  0E03               	movlw	high _ADC_zero_array
 27990  0069BE  20F4               	addwfc	prodh,w,c
 27991  0069C0  6EDA               	movwf	fsr2h,c
 27992  0069C2  50DE               	movf	postinc2,w,c
 27993  0069C4  2618               	addwf	refreshADCZeroOffset@media^0,f,c
 27994  0069C6  50DD               	movf	postdec2,w,c
 27995  0069C8  2219               	addwfc	(refreshADCZeroOffset@media+1)^0,f,c
 27996                           
 27997                           ; BSR set to: 0
 27998                           ;controlCurrent_MC50.c: 159:             }
 27999  0069CA  2A17               	incf	refreshADCZeroOffset@i^0,f,c
 28000                           
 28001                           ; BSR set to: 0
 28002  0069CC  0E1D               	movlw	29
 28003  0069CE  6417               	cpfsgt	refreshADCZeroOffset@i^0,c
 28004  0069D0  D7F0               	goto	l14431
 28005                           
 28006                           ; BSR set to: 0
 28007                           ;controlCurrent_MC50.c: 160:             media = media/30;
 28008  0069D2  C018  F010         	movff	refreshADCZeroOffset@media,___lwdiv@dividend
 28009  0069D6  C019  F011         	movff	refreshADCZeroOffset@media+1,___lwdiv@dividend+1
 28010  0069DA  0E00               	movlw	0
 28011  0069DC  6E13               	movwf	(___lwdiv@divisor+1)^0,c
 28012  0069DE  0E1E               	movlw	30
 28013  0069E0  6E12               	movwf	___lwdiv@divisor^0,c
 28014  0069E2  ECB3  F042         	call	___lwdiv	;wreg free
 28015  0069E6  C010  F018         	movff	?___lwdiv,refreshADCZeroOffset@media
 28016  0069EA  C011  F019         	movff	?___lwdiv+1,refreshADCZeroOffset@media+1
 28017                           
 28018                           ;controlCurrent_MC50.c: 162:             var_sys.ADCZeroOffset = media;
 28019  0069EE  C018  F14B         	movff	refreshADCZeroOffset@media,_var_sys+75	;volatile
 28020  0069F2  C019  F14C         	movff	refreshADCZeroOffset@media+1,_var_sys+76	;volatile
 28021  0069F6                     l1357:
 28022  0069F6  0012               	return		;funcret
 28023  0069F8                     __end_of_refreshADCZeroOffset:
 28024                           	callstack 0
 28025                           
 28026 ;; *************** function ___lwdiv *****************
 28027 ;; Defined at:
 28028 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\lwdiv.c"
 28029 ;; Parameters:    Size  Location     Type
 28030 ;;  dividend        2   15[COMRAM] unsigned int 
 28031 ;;  divisor         2   17[COMRAM] unsigned int 
 28032 ;; Auto vars:     Size  Location     Type
 28033 ;;  quotient        2   19[COMRAM] unsigned int 
 28034 ;;  counter         1   21[COMRAM] unsigned char 
 28035 ;; Return value:  Size  Location     Type
 28036 ;;                  2   15[COMRAM] unsigned int 
 28037 ;; Registers used:
 28038 ;;		wreg, status,2, status,0
 28039 ;; Tracked objects:
 28040 ;;		On entry : 3E/1
 28041 ;;		On exit  : 3E/0
 28042 ;;		Unchanged: 3E/0
 28043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28044 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28045 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28046 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28047 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28048 ;;Total ram usage:        7 bytes
 28049 ;; Hardware stack levels used: 1
 28050 ;; Hardware stack levels required when called: 4
 28051 ;; This function calls:
 28052 ;;		Nothing
 28053 ;; This function is called by:
 28054 ;;		_refreshADCZeroOffset
 28055 ;;		_sm_execute_menuConfiguration
 28056 ;; This function uses a non-reentrant model
 28057 ;;
 28058                           
 28059                           	psect	text122
 28060  008566                     __ptext122:
 28061                           	callstack 0
 28062  008566                     ___lwdiv:
 28063                           	callstack 24
 28064                           
 28065                           ;incstack = 0
 28066  008566  0E00               	movlw	0
 28067  008568  6E15               	movwf	(___lwdiv@quotient+1)^0,c
 28068  00856A  0E00               	movlw	0
 28069  00856C  6E14               	movwf	___lwdiv@quotient^0,c
 28070  00856E  5012               	movf	___lwdiv@divisor^0,w,c
 28071  008570  1013               	iorwf	(___lwdiv@divisor+1)^0,w,c
 28072  008572  B4D8               	btfsc	status,2,c
 28073  008574  D01C               	goto	l4139
 28074  008576  0E01               	movlw	1
 28075  008578  6E16               	movwf	___lwdiv@counter^0,c
 28076  00857A  D004               	goto	l13879
 28077  00857C                     l13877:
 28078  00857C  90D8               	bcf	status,0,c
 28079  00857E  3612               	rlcf	___lwdiv@divisor^0,f,c
 28080  008580  3613               	rlcf	(___lwdiv@divisor+1)^0,f,c
 28081  008582  2A16               	incf	___lwdiv@counter^0,f,c
 28082  008584                     l13879:
 28083  008584  AE13               	btfss	(___lwdiv@divisor+1)^0,7,c
 28084  008586  D7FA               	goto	l13877
 28085  008588                     u13710:
 28086  008588  90D8               	bcf	status,0,c
 28087  00858A  3614               	rlcf	___lwdiv@quotient^0,f,c
 28088  00858C  3615               	rlcf	(___lwdiv@quotient+1)^0,f,c
 28089  00858E  5012               	movf	___lwdiv@divisor^0,w,c
 28090  008590  5C10               	subwf	___lwdiv@dividend^0,w,c
 28091  008592  5013               	movf	(___lwdiv@divisor+1)^0,w,c
 28092  008594  5811               	subwfb	(___lwdiv@dividend+1)^0,w,c
 28093  008596  A0D8               	btfss	status,0,c
 28094  008598  D005               	goto	l13889
 28095  00859A  5012               	movf	___lwdiv@divisor^0,w,c
 28096  00859C  5E10               	subwf	___lwdiv@dividend^0,f,c
 28097  00859E  5013               	movf	(___lwdiv@divisor+1)^0,w,c
 28098  0085A0  5A11               	subwfb	(___lwdiv@dividend+1)^0,f,c
 28099  0085A2  8014               	bsf	___lwdiv@quotient^0,0,c
 28100  0085A4                     l13889:
 28101  0085A4  90D8               	bcf	status,0,c
 28102  0085A6  3213               	rrcf	(___lwdiv@divisor+1)^0,f,c
 28103  0085A8  3212               	rrcf	___lwdiv@divisor^0,f,c
 28104  0085AA  2E16               	decfsz	___lwdiv@counter^0,f,c
 28105  0085AC  D7ED               	goto	u13710
 28106  0085AE                     l4139:
 28107  0085AE  C014  F010         	movff	___lwdiv@quotient,?___lwdiv
 28108  0085B2  C015  F011         	movff	___lwdiv@quotient+1,?___lwdiv+1
 28109  0085B6  0012               	return		;funcret
 28110  0085B8                     __end_of___lwdiv:
 28111                           	callstack 0
 28112                           
 28113 ;; *************** function _getCurrentComparator *****************
 28114 ;; Defined at:
 28115 ;;		line 264 in file "controlCurrent_MC50.c"
 28116 ;; Parameters:    Size  Location     Type
 28117 ;;		None
 28118 ;; Auto vars:     Size  Location     Type
 28119 ;;  x               1   33[COMRAM] unsigned char 
 28120 ;;  tempOffset      2   31[COMRAM] unsigned int 
 28121 ;; Return value:  Size  Location     Type
 28122 ;;                  4   21[COMRAM] unsigned long 
 28123 ;; Registers used:
 28124 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 28125 ;; Tracked objects:
 28126 ;;		On entry : 3F/1
 28127 ;;		On exit  : 3F/1
 28128 ;;		Unchanged: 0/0
 28129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28130 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28131 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28132 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28133 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28134 ;;Total ram usage:       13 bytes
 28135 ;; Hardware stack levels used: 1
 28136 ;; Hardware stack levels required when called: 5
 28137 ;; This function calls:
 28138 ;;		___wmul
 28139 ;; This function is called by:
 28140 ;;		_ControlCurrent
 28141 ;; This function uses a non-reentrant model
 28142 ;;
 28143                           
 28144                           	psect	text123
 28145  005694                     __ptext123:
 28146                           	callstack 0
 28147  005694                     _getCurrentComparator:
 28148                           	callstack 24
 28149                           
 28150                           ; BSR set to: 1
 28151                           ;controlCurrent_MC50.c: 269:     if(ts_system.timeSoftStart>0)
 28152                           
 28153                           ; BSR set to: 1
 28154                           
 28155                           ;incstack = 0
 28156  005694  BFB1               	btfsc	(_ts_system+23)& (0+255),7,b	;volatile
 28157  005696  D00A               	goto	l14455
 28158  005698  51B1               	movf	(_ts_system+23)& (0+255),w,b	;volatile
 28159  00569A  E103               	bnz	u14770
 28160  00569C  05B0               	decf	(_ts_system+22)& (0+255),w,b	;volatile
 28161  00569E  A0D8               	btfss	status,0,c
 28162  0056A0  D005               	goto	l14455
 28163  0056A2                     u14770:
 28164                           
 28165                           ; BSR set to: 1
 28166                           ;controlCurrent_MC50.c: 270:     {;controlCurrent_MC50.c: 271:         ts_system.timewai
      +                          tBeforeSoftStart=(1000/50);
 28167  0056A2  0E00               	movlw	0
 28168  0056A4  6FD5               	movwf	(_ts_system+59)& (0+255),b	;volatile
 28169  0056A6  0E14               	movlw	20
 28170  0056A8  6FD4               	movwf	(_ts_system+58)& (0+255),b	;volatile
 28171  0056AA  D007               	goto	u14780
 28172  0056AC                     l14455:
 28173                           
 28174                           ; BSR set to: 1
 28175  0056AC  BFD5               	btfsc	(_ts_system+59)& (0+255),7,b	;volatile
 28176  0056AE  D009               	goto	l14459
 28177  0056B0  51D5               	movf	(_ts_system+59)& (0+255),w,b	;volatile
 28178  0056B2  E103               	bnz	u14780
 28179  0056B4  05D4               	decf	(_ts_system+58)& (0+255),w,b	;volatile
 28180  0056B6  A0D8               	btfss	status,0,c
 28181  0056B8  D004               	goto	l14459
 28182  0056BA                     u14780:
 28183                           
 28184                           ; BSR set to: 1
 28185                           ;controlCurrent_MC50.c: 276:     {;controlCurrent_MC50.c: 277:         tempOffset=1200;
 28186  0056BA  0E04               	movlw	4
 28187  0056BC  6E21               	movwf	(getCurrentComparator@tempOffset+1)^0,c
 28188  0056BE  0EB0               	movlw	176
 28189  0056C0  D003               	goto	L104
 28190  0056C2                     l14459:
 28191                           
 28192                           ; BSR set to: 1
 28193                           ;controlCurrent_MC50.c: 280:     {;controlCurrent_MC50.c: 281:         tempOffset=0;
 28194  0056C2  0E00               	movlw	0
 28195  0056C4  6E21               	movwf	(getCurrentComparator@tempOffset+1)^0,c
 28196  0056C6  0E00               	movlw	0
 28197  0056C8                     L104:
 28198  0056C8  6E20               	movwf	getCurrentComparator@tempOffset^0,c
 28199                           
 28200                           ; BSR set to: 1
 28201                           ;controlCurrent_MC50.c: 284:     if(powerControl_st.decelarationActive==NO)
 28202  0056CA  517B               	movf	_powerControl_st& (0+255),w,b
 28203  0056CC  A4D8               	btfss	status,2,c
 28204  0056CE  D05B               	goto	l14475
 28205                           
 28206                           ; BSR set to: 1
 28207                           ;controlCurrent_MC50.c: 285:     {;controlCurrent_MC50.c: 286:         if(var_sys.StateM
      +                          otor==InClose)
 28208  0056D0  0E03               	movlw	3
 28209  0056D2  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 28210  0056D4  A4D8               	btfss	status,2,c
 28211  0056D6  D005               	goto	l14465
 28212                           
 28213                           ; BSR set to: 1
 28214                           ;controlCurrent_MC50.c: 287:         {;controlCurrent_MC50.c: 288:             var_sys.A
      +                          ctualComparatorCurrent=var_sys_NVM.learningCurrentNormalClose;
 28215  0056D8  C0C8  F134         	movff	_var_sys_NVM+48,_var_sys+52	;volatile
 28216  0056DC  C0C9  F135         	movff	_var_sys_NVM+49,_var_sys+53	;volatile
 28217  0056E0  D004               	goto	L105
 28218  0056E2                     l14465:
 28219                           
 28220                           ; BSR set to: 1
 28221                           ;controlCurrent_MC50.c: 291:         {;controlCurrent_MC50.c: 292:             var_sys.A
      +                          ctualComparatorCurrent=var_sys_NVM.learningCurrentNormalOpen;
 28222  0056E2  C0CA  F134         	movff	_var_sys_NVM+50,_var_sys+52	;volatile
 28223  0056E6  C0CB  F135         	movff	_var_sys_NVM+51,_var_sys+53	;volatile
 28224  0056EA                     L105:
 28225  0056EA  6B36               	clrf	(_var_sys+54)& (0+255),b	;volatile
 28226  0056EC  6B37               	clrf	(_var_sys+55)& (0+255),b	;volatile
 28227                           
 28228                           ; BSR set to: 1
 28229                           ;controlCurrent_MC50.c: 295:         if(var_sys.ActualComparatorCurrent<=100||(var_sys.A
      +                          ctualComparatorCurrent>(510*30)))
 28230  0056EE  5137               	movf	(_var_sys+55)& (0+255),w,b	;volatile
 28231  0056F0  1136               	iorwf	(_var_sys+54)& (0+255),w,b	;volatile
 28232  0056F2  1135               	iorwf	(_var_sys+53)& (0+255),w,b	;volatile
 28233  0056F4  E104               	bnz	u14810
 28234  0056F6  0E65               	movlw	101
 28235  0056F8  5D34               	subwf	(_var_sys+52)& (0+255),w,b	;volatile
 28236  0056FA  A0D8               	btfss	status,0,c
 28237  0056FC  D009               	goto	u14820
 28238  0056FE                     u14810:
 28239                           
 28240                           ; BSR set to: 1
 28241  0056FE  5137               	movf	(_var_sys+55)& (0+255),w,b	;volatile
 28242  005700  1136               	iorwf	(_var_sys+54)& (0+255),w,b	;volatile
 28243  005702  E106               	bnz	u14820
 28244  005704  0EC5               	movlw	197
 28245  005706  5D34               	subwf	(_var_sys+52)& (0+255),w,b	;volatile
 28246  005708  0E3B               	movlw	59
 28247  00570A  5935               	subwfb	(_var_sys+53)& (0+255),w,b	;volatile
 28248  00570C  A0D8               	btfss	status,0,c
 28249  00570E  D004               	goto	l1383
 28250  005710                     u14820:
 28251                           
 28252                           ; BSR set to: 1
 28253                           ;controlCurrent_MC50.c: 296:         {;controlCurrent_MC50.c: 297:              var_sys.
      +                          ActualComparatorCurrent=(510*30);
 28254  005710  0EC4               	movlw	196
 28255  005712  6F34               	movwf	(_var_sys+52)& (0+255),b	;volatile
 28256  005714  0E3B               	movlw	59
 28257  005716  D058               	goto	L107
 28258  005718                     l1383:
 28259                           
 28260                           ; BSR set to: 1
 28261                           ;controlCurrent_MC50.c: 300:         {;controlCurrent_MC50.c: 301:             unsigned 
      +                          char x=var_sys_NVM.motorSensitivity;
 28262  005718  C09B  F022         	movff	_var_sys_NVM+3,getCurrentComparator@x	;volatile
 28263                           
 28264                           ; BSR set to: 1
 28265                           ;controlCurrent_MC50.c: 307:            var_sys.ActualComparatorCurrent=var_sys.ActualCo
      +                          mparatorCurrent+((10*(x*x))+(-200*x)+1300);
 28266  00571C  5022               	movf	getCurrentComparator@x^0,w,c
 28267  00571E  0222               	mulwf	getCurrentComparator@x^0,c
 28268  005720  CFF3 F010          	movff	prodl,___wmul@multiplier
 28269  005724  CFF4 F011          	movff	prodh,___wmul@multiplier+1
 28270  005728  0E00               	movlw	0
 28271  00572A  6E13               	movwf	(___wmul@multiplicand+1)^0,c
 28272  00572C  0E0A               	movlw	10
 28273  00572E  6E12               	movwf	___wmul@multiplicand^0,c
 28274  005730  EC09  F047         	call	___wmul	;wreg free
 28275  005734  C010  F01A         	movff	?___wmul,??_getCurrentComparator
 28276  005738  C011  F01B         	movff	?___wmul+1,??_getCurrentComparator+1
 28277  00573C  C022  F010         	movff	getCurrentComparator@x,___wmul@multiplier
 28278  005740  6A11               	clrf	(___wmul@multiplier+1)^0,c
 28279  005742  0EFF               	movlw	255
 28280  005744  6E13               	movwf	(___wmul@multiplicand+1)^0,c
 28281  005746  0E38               	movlw	56
 28282  005748  6E12               	movwf	___wmul@multiplicand^0,c
 28283  00574A  EC09  F047         	call	___wmul	;wreg free
 28284  00574E  5010               	movf	?___wmul^0,w,c
 28285  005750  261A               	addwf	??_getCurrentComparator^0,f,c
 28286  005752  5011               	movf	(?___wmul+1)^0,w,c
 28287  005754  221B               	addwfc	(??_getCurrentComparator+1)^0,f,c
 28288  005756  0E14               	movlw	20
 28289  005758  241A               	addwf	??_getCurrentComparator^0,w,c
 28290  00575A  6E1C               	movwf	(??_getCurrentComparator+2)^0,c
 28291  00575C  0E05               	movlw	5
 28292  00575E  201B               	addwfc	(??_getCurrentComparator+1)^0,w,c
 28293  005760  6E1D               	movwf	(??_getCurrentComparator+3)^0,c
 28294  005762  6A1E               	clrf	(??_getCurrentComparator+4)^0,c
 28295  005764  BE1D               	btfsc	(??_getCurrentComparator+3)^0,7,c
 28296  005766  061E               	decf	(??_getCurrentComparator+4)^0,f,c
 28297  005768  501E               	movf	(??_getCurrentComparator+4)^0,w,c
 28298  00576A  6E1F               	movwf	(??_getCurrentComparator+5)^0,c
 28299  00576C  0101               	movlb	1	; () banked
 28300  00576E  5134               	movf	(_var_sys+52)& (0+255),w,b	;volatile
 28301  005770  241C               	addwf	(??_getCurrentComparator+2)^0,w,c
 28302  005772  6F34               	movwf	(_var_sys+52)& (0+255),b	;volatile
 28303  005774  5135               	movf	(_var_sys+53)& (0+255),w,b	;volatile
 28304  005776  201D               	addwfc	(??_getCurrentComparator+3)^0,w,c
 28305  005778  6F35               	movwf	(_var_sys+53)& (0+255),b	;volatile
 28306  00577A  5136               	movf	(_var_sys+54)& (0+255),w,b	;volatile
 28307  00577C  201E               	addwfc	(??_getCurrentComparator+4)^0,w,c
 28308  00577E  6F36               	movwf	(_var_sys+54)& (0+255),b	;volatile
 28309  005780  5137               	movf	(_var_sys+55)& (0+255),w,b	;volatile
 28310  005782  201F               	addwfc	(??_getCurrentComparator+5)^0,w,c
 28311  005784  D046               	goto	L106
 28312  005786                     l14475:
 28313                           
 28314                           ; BSR set to: 1
 28315                           ;controlCurrent_MC50.c: 311:     {;controlCurrent_MC50.c: 312:         if(var_sys.StateM
      +                          otor==InClose)
 28316  005786  0E03               	movlw	3
 28317  005788  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 28318  00578A  A4D8               	btfss	status,2,c
 28319  00578C  D009               	goto	l1388
 28320                           
 28321                           ; BSR set to: 1
 28322                           ;controlCurrent_MC50.c: 313:         {;controlCurrent_MC50.c: 314:             var_sys.A
      +                          ctualComparatorCurrent=var_sys_NVM.learningCurrentDecelarationClose;
 28323  00578E  C0C0  F134         	movff	_var_sys_NVM+40,_var_sys+52	;volatile
 28324  005792  C0C1  F135         	movff	_var_sys_NVM+41,_var_sys+53	;volatile
 28325  005796  C0C2  F136         	movff	_var_sys_NVM+42,_var_sys+54	;volatile
 28326  00579A  C0C3  F137         	movff	_var_sys_NVM+43,_var_sys+55	;volatile
 28327                           
 28328                           ;controlCurrent_MC50.c: 315:         }
 28329  00579E  D008               	goto	l14479
 28330  0057A0                     l1388:
 28331                           
 28332                           ; BSR set to: 1
 28333                           ;controlCurrent_MC50.c: 317:         {;controlCurrent_MC50.c: 318:             var_sys.A
      +                          ctualComparatorCurrent=var_sys_NVM.learningCurrentDecelarationOpen ;
 28334  0057A0  C0C4  F134         	movff	_var_sys_NVM+44,_var_sys+52	;volatile
 28335  0057A4  C0C5  F135         	movff	_var_sys_NVM+45,_var_sys+53	;volatile
 28336  0057A8  C0C6  F136         	movff	_var_sys_NVM+46,_var_sys+54	;volatile
 28337  0057AC  C0C7  F137         	movff	_var_sys_NVM+47,_var_sys+55	;volatile
 28338  0057B0                     l14479:
 28339                           
 28340                           ; BSR set to: 1
 28341                           ;controlCurrent_MC50.c: 321:         if(var_sys.ActualComparatorCurrent<=5000)
 28342  0057B0  5137               	movf	(_var_sys+55)& (0+255),w,b	;volatile
 28343  0057B2  1136               	iorwf	(_var_sys+54)& (0+255),w,b	;volatile
 28344  0057B4  E10E               	bnz	l14483
 28345  0057B6  0E89               	movlw	137
 28346  0057B8  5D34               	subwf	(_var_sys+52)& (0+255),w,b	;volatile
 28347  0057BA  0E13               	movlw	19
 28348  0057BC  5935               	subwfb	(_var_sys+53)& (0+255),w,b	;volatile
 28349  0057BE  B0D8               	btfsc	status,0,c
 28350  0057C0  D008               	goto	l14483
 28351                           
 28352                           ; BSR set to: 1
 28353                           ;controlCurrent_MC50.c: 322:         {;controlCurrent_MC50.c: 323:             var_sys.A
      +                          ctualComparatorCurrent=5000;
 28354  0057C2  0E88               	movlw	136
 28355  0057C4  6F34               	movwf	(_var_sys+52)& (0+255),b	;volatile
 28356  0057C6  0E13               	movlw	19
 28357  0057C8                     L107:
 28358  0057C8  6F35               	movwf	(_var_sys+53)& (0+255),b	;volatile
 28359  0057CA  0E00               	movlw	0
 28360  0057CC  6F36               	movwf	(_var_sys+54)& (0+255),b	;volatile
 28361  0057CE  0E00               	movlw	0
 28362  0057D0  D020               	goto	L106
 28363  0057D2                     l14483:
 28364                           
 28365                           ; BSR set to: 1
 28366                           ;controlCurrent_MC50.c: 326:         {;controlCurrent_MC50.c: 327:             var_sys.A
      +                          ctualComparatorCurrent=var_sys.ActualComparatorCurrent-(1200 +(500*(10-var_sys_NVM.decel
      +                          arationSensivity)));
 28367  0057D2  C0A7  F010         	movff	_var_sys_NVM+15,___wmul@multiplier	;volatile
 28368  0057D6  6A11               	clrf	(___wmul@multiplier+1)^0,c
 28369  0057D8  0EFE               	movlw	254
 28370  0057DA  6E13               	movwf	(___wmul@multiplicand+1)^0,c
 28371  0057DC  0E0C               	movlw	12
 28372  0057DE  6E12               	movwf	___wmul@multiplicand^0,c
 28373  0057E0  EC09  F047         	call	___wmul	;wreg free
 28374  0057E4  0E38               	movlw	56
 28375  0057E6  2410               	addwf	?___wmul^0,w,c
 28376  0057E8  6E1A               	movwf	??_getCurrentComparator^0,c
 28377  0057EA  0E18               	movlw	24
 28378  0057EC  2011               	addwfc	(?___wmul+1)^0,w,c
 28379  0057EE  6E1B               	movwf	(??_getCurrentComparator+1)^0,c
 28380  0057F0  6A1C               	clrf	(??_getCurrentComparator+2)^0,c
 28381  0057F2  BE1B               	btfsc	(??_getCurrentComparator+1)^0,7,c
 28382  0057F4  061C               	decf	(??_getCurrentComparator+2)^0,f,c
 28383  0057F6  501C               	movf	(??_getCurrentComparator+2)^0,w,c
 28384  0057F8  6E1D               	movwf	(??_getCurrentComparator+3)^0,c
 28385  0057FA  501A               	movf	??_getCurrentComparator^0,w,c
 28386  0057FC  0101               	movlb	1	; () banked
 28387  0057FE  5D34               	subwf	(_var_sys+52)& (0+255),w,b	;volatile
 28388  005800  6F34               	movwf	(_var_sys+52)& (0+255),b	;volatile
 28389  005802  501B               	movf	(??_getCurrentComparator+1)^0,w,c
 28390  005804  5935               	subwfb	(_var_sys+53)& (0+255),w,b	;volatile
 28391  005806  6F35               	movwf	(_var_sys+53)& (0+255),b	;volatile
 28392  005808  501C               	movf	(??_getCurrentComparator+2)^0,w,c
 28393  00580A  5936               	subwfb	(_var_sys+54)& (0+255),w,b	;volatile
 28394  00580C  6F36               	movwf	(_var_sys+54)& (0+255),b	;volatile
 28395  00580E  501D               	movf	(??_getCurrentComparator+3)^0,w,c
 28396  005810  5937               	subwfb	(_var_sys+55)& (0+255),w,b	;volatile
 28397  005812                     L106:
 28398  005812  6F37               	movwf	(_var_sys+55)& (0+255),b	;volatile
 28399                           
 28400                           ; BSR set to: 1
 28401                           ;controlCurrent_MC50.c: 332:     return var_sys.ActualComparatorCurrent+tempOffset;
 28402  005814  5020               	movf	getCurrentComparator@tempOffset^0,w,c
 28403  005816  2534               	addwf	(_var_sys+52)& (0+255),w,b	;volatile
 28404  005818  6E16               	movwf	?_getCurrentComparator^0,c
 28405  00581A  5021               	movf	(getCurrentComparator@tempOffset+1)^0,w,c
 28406  00581C  2135               	addwfc	(_var_sys+53)& (0+255),w,b	;volatile
 28407  00581E  6E17               	movwf	(?_getCurrentComparator+1)^0,c
 28408  005820  0E00               	movlw	0
 28409  005822  2136               	addwfc	(_var_sys+54)& (0+255),w,b	;volatile
 28410  005824  6E18               	movwf	(?_getCurrentComparator+2)^0,c
 28411  005826  0E00               	movlw	0
 28412  005828  2137               	addwfc	(_var_sys+55)& (0+255),w,b	;volatile
 28413  00582A  6E19               	movwf	(?_getCurrentComparator+3)^0,c
 28414                           
 28415                           ; BSR set to: 1
 28416  00582C  0012               	return		;funcret
 28417  00582E                     __end_of_getCurrentComparator:
 28418                           	callstack 0
 28419                           
 28420 ;; *************** function ___wmul *****************
 28421 ;; Defined at:
 28422 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\Umul16.c"
 28423 ;; Parameters:    Size  Location     Type
 28424 ;;  multiplier      2   15[COMRAM] unsigned int 
 28425 ;;  multiplicand    2   17[COMRAM] unsigned int 
 28426 ;; Auto vars:     Size  Location     Type
 28427 ;;  product         2   19[COMRAM] unsigned int 
 28428 ;; Return value:  Size  Location     Type
 28429 ;;                  2   15[COMRAM] unsigned int 
 28430 ;; Registers used:
 28431 ;;		wreg, status,2, status,0, prodl, prodh
 28432 ;; Tracked objects:
 28433 ;;		On entry : 0/0
 28434 ;;		On exit  : 0/0
 28435 ;;		Unchanged: 0/0
 28436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28437 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28438 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28440 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28441 ;;Total ram usage:        6 bytes
 28442 ;; Hardware stack levels used: 1
 28443 ;; Hardware stack levels required when called: 4
 28444 ;; This function calls:
 28445 ;;		Nothing
 28446 ;; This function is called by:
 28447 ;;		_getCurrentComparator
 28448 ;;		_getHopCode
 28449 ;; This function uses a non-reentrant model
 28450 ;;
 28451                           
 28452                           	psect	text124
 28453  008E12                     __ptext124:
 28454                           	callstack 0
 28455  008E12                     ___wmul:
 28456                           	callstack 22
 28457                           
 28458                           ; BSR set to: 1
 28459                           ;incstack = 0
 28460  008E12  5010               	movf	___wmul@multiplier^0,w,c
 28461  008E14  0212               	mulwf	___wmul@multiplicand^0,c
 28462  008E16  CFF3 F014          	movff	prodl,___wmul@product
 28463  008E1A  CFF4 F015          	movff	prodh,___wmul@product+1
 28464  008E1E  5010               	movf	___wmul@multiplier^0,w,c
 28465  008E20  0213               	mulwf	(___wmul@multiplicand+1)^0,c
 28466  008E22  50F3               	movf	243,w,c
 28467  008E24  2615               	addwf	(___wmul@product+1)^0,f,c
 28468  008E26  5011               	movf	(___wmul@multiplier+1)^0,w,c
 28469  008E28  0212               	mulwf	___wmul@multiplicand^0,c
 28470  008E2A  50F3               	movf	243,w,c
 28471  008E2C  2615               	addwf	(___wmul@product+1)^0,f,c
 28472  008E2E  C014  F010         	movff	___wmul@product,?___wmul
 28473  008E32  C015  F011         	movff	___wmul@product+1,?___wmul+1
 28474  008E36  0012               	return		;funcret
 28475  008E38                     __end_of___wmul:
 28476                           	callstack 0
 28477                           
 28478 ;; *************** function _GetMotorPower *****************
 28479 ;; Defined at:
 28480 ;;		line 405 in file "outputs_MC50.c"
 28481 ;; Parameters:    Size  Location     Type
 28482 ;;		None
 28483 ;; Auto vars:     Size  Location     Type
 28484 ;;  defineatraso    1   18[COMRAM] unsigned char 
 28485 ;; Return value:  Size  Location     Type
 28486 ;;                  1    wreg      unsigned char 
 28487 ;; Registers used:
 28488 ;;		wreg, status,2, status,0, prodl, prodh
 28489 ;; Tracked objects:
 28490 ;;		On entry : 3E/1
 28491 ;;		On exit  : 3F/1
 28492 ;;		Unchanged: 0/0
 28493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28495 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28496 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28497 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28498 ;;Total ram usage:        4 bytes
 28499 ;; Hardware stack levels used: 1
 28500 ;; Hardware stack levels required when called: 4
 28501 ;; This function calls:
 28502 ;;		Nothing
 28503 ;; This function is called by:
 28504 ;;		_ControlCurrent
 28505 ;;		_InitSoftStart
 28506 ;;		_InitSoftStop
 28507 ;; This function uses a non-reentrant model
 28508 ;;
 28509                           
 28510                           	psect	text125
 28511  006F48                     __ptext125:
 28512                           	callstack 0
 28513  006F48                     _GetMotorPower:
 28514                           	callstack 22
 28515                           
 28516                           ;outputs_MC50.c: 408:     unsigned char defineatraso;;outputs_MC50.c: 413:     if(powerC
      +                          ontrol_st.decelarationActive==YES)
 28517                           
 28518                           ;incstack = 0
 28519  006F48  0101               	movlb	1	; () banked
 28520  006F4A  057B               	decf	_powerControl_st& (0+255),w,b
 28521  006F4C  A4D8               	btfss	status,2,c
 28522  006F4E  D006               	goto	l19345
 28523                           
 28524                           ; BSR set to: 1
 28525                           ;outputs_MC50.c: 414:     {;outputs_MC50.c: 415:        temppower=(var_sys_NVM.motorPowe
      +                          r*6);
 28526  006F50  0100               	movlb	0	; () banked
 28527  006F52  519A               	movf	(_var_sys_NVM+2)& (0+255),w,b	;volatile
 28528  006F54  0D06               	mullw	6
 28529  006F56  CFF3 F18E          	movff	prodl,_temppower
 28530                           
 28531                           ;outputs_MC50.c: 416:     }
 28532  006F5A  D043               	goto	l2235
 28533  006F5C                     l19345:
 28534                           
 28535                           ; BSR set to: 1
 28536                           ;outputs_MC50.c: 418:     {;outputs_MC50.c: 419:         fullmotorPower=(var_sys_NVM.mot
      +                          orPower*6);
 28537  006F5C  0100               	movlb	0	; () banked
 28538  006F5E  519A               	movf	(_var_sys_NVM+2)& (0+255),w,b	;volatile
 28539  006F60  0D06               	mullw	6
 28540  006F62  CFF3 F082          	movff	prodl,_fullmotorPower
 28541                           
 28542                           ; BSR set to: 0
 28543                           ;outputs_MC50.c: 421:         if(var_sys.velocityFactor>0)
 28544  006F66  0101               	movlb	1	; () banked
 28545  006F68  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 28546  006F6A  D01C               	goto	l19355
 28547  006F6C  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 28548  006F6E  E103               	bnz	u22070
 28549  006F70  050E               	decf	(_var_sys+14)& (0+255),w,b	;volatile
 28550  006F72  A0D8               	btfss	status,0,c
 28551  006F74  D017               	goto	l19355
 28552  006F76                     u22070:
 28553                           
 28554                           ; BSR set to: 1
 28555                           ;outputs_MC50.c: 422:         {;outputs_MC50.c: 423:             if(var_sys.velocityFact
      +                          or>fullmotorPower)
 28556  006F76  0100               	movlb	0	; () banked
 28557  006F78  5182               	movf	_fullmotorPower& (0+255),w,b
 28558  006F7A  6E10               	movwf	??_GetMotorPower^0,c
 28559  006F7C  6A11               	clrf	(??_GetMotorPower+1)^0,c
 28560  006F7E  0101               	movlb	1	; () banked
 28561  006F80  510E               	movf	(_var_sys+14)& (0+255),w,b	;volatile
 28562  006F82  5C10               	subwf	??_GetMotorPower^0,w,c
 28563  006F84  5011               	movf	(??_GetMotorPower+1)^0,w,c
 28564  006F86  0A80               	xorlw	128
 28565  006F88  6E12               	movwf	(??_GetMotorPower+2)^0,c
 28566  006F8A  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 28567  006F8C  0A80               	xorlw	128
 28568  006F8E  5812               	subwfb	(??_GetMotorPower+2)^0,w,c
 28569  006F90  B0D8               	btfsc	status,0,c
 28570  006F92  D002               	goto	l19353
 28571                           
 28572                           ; BSR set to: 1
 28573                           ;outputs_MC50.c: 424:             {;outputs_MC50.c: 425:                 temppower=1;
 28574  006F94  0E01               	movlw	1
 28575  006F96  D004               	goto	L109
 28576  006F98                     l19353:
 28577                           
 28578                           ; BSR set to: 1
 28579                           ;outputs_MC50.c: 428:             {;outputs_MC50.c: 430:                 temppower =full
      +                          motorPower-var_sys.velocityFactor;
 28580  006F98  510E               	movf	(_var_sys+14)& (0+255),w,b	;volatile
 28581  006F9A  0100               	movlb	0	; () banked
 28582  006F9C  5D82               	subwf	_fullmotorPower& (0+255),w,b
 28583  006F9E  D017               	goto	L110
 28584  006FA0                     L109:
 28585  006FA0  6F8E               	movwf	_temppower& (0+255),b
 28586  006FA2  D01F               	goto	l2235
 28587  006FA4                     l19355:
 28588                           
 28589                           ; BSR set to: 1
 28590  006FA4  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 28591  006FA6  D005               	goto	u22090
 28592  006FA8  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 28593  006FAA  E113               	bnz	l19365
 28594  006FAC  050E               	decf	(_var_sys+14)& (0+255),w,b	;volatile
 28595  006FAE  B0D8               	btfsc	status,0,c
 28596  006FB0  D010               	goto	l19365
 28597  006FB2                     u22090:
 28598                           
 28599                           ; BSR set to: 1
 28600  006FB2  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 28601  006FB4  D005               	goto	u22100
 28602  006FB6  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 28603  006FB8  E10C               	bnz	l19365
 28604  006FBA  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 28605  006FBC  B0D8               	btfsc	status,0,c
 28606  006FBE  D009               	goto	l19365
 28607  006FC0                     u22100:
 28608                           
 28609                           ; BSR set to: 1
 28610                           ;outputs_MC50.c: 434:         {;outputs_MC50.c: 435:             temppower =fullmotorPow
      +                          er;
 28611  006FC0  C082  F18E         	movff	_fullmotorPower,_temppower
 28612                           
 28613                           ; BSR set to: 1
 28614                           ;outputs_MC50.c: 438:             if ( var_sys_NVM.motorPower>8 )
 28615  006FC4  0E08               	movlw	8
 28616  006FC6  0100               	movlb	0	; () banked
 28617  006FC8  659A               	cpfsgt	(_var_sys_NVM+2)& (0+255),b	;volatile
 28618  006FCA  D00B               	goto	l2235
 28619                           
 28620                           ; BSR set to: 0
 28621                           ;outputs_MC50.c: 439:             {;outputs_MC50.c: 440:                 temppower = 80 
      +                          -23 +1;
 28622  006FCC  0E3A               	movlw	58
 28623  006FCE                     L110:
 28624  006FCE  0101               	movlb	1	; () banked
 28625  006FD0  D7E7               	goto	L109
 28626  006FD2                     l19365:
 28627                           
 28628                           ; BSR set to: 1
 28629  006FD2  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 28630  006FD4  D006               	goto	l2235
 28631  006FD6  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 28632  006FD8  E102               	bnz	u22120
 28633  006FDA  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 28634  006FDC  B0D8               	btfsc	status,0,c
 28635  006FDE                     u22120:
 28636                           
 28637                           ; BSR set to: 1
 28638                           ;outputs_MC50.c: 447:                 temppower = var_sys.velocityFactorstop;
 28639  006FDE  C110  F18E         	movff	_var_sys+16,_temppower	;volatile
 28640  006FE2                     l2235:
 28641                           
 28642                           ;outputs_MC50.c: 451:     if ((var_sys.velocityFactorstop > 0)&&(var_sys.velocityFactor 
      +                          <= 0 )){
 28643  006FE2  0101               	movlb	1	; () banked
 28644  006FE4  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 28645  006FE6  D00E               	goto	l19375
 28646  006FE8  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 28647  006FEA  E103               	bnz	u22130
 28648  006FEC  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 28649  006FEE  A0D8               	btfss	status,0,c
 28650  006FF0  D009               	goto	l19375
 28651  006FF2                     u22130:
 28652                           
 28653                           ; BSR set to: 1
 28654  006FF2  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 28655  006FF4  D005               	goto	u22140
 28656  006FF6  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 28657  006FF8  E105               	bnz	l19375
 28658  006FFA  050E               	decf	(_var_sys+14)& (0+255),w,b	;volatile
 28659  006FFC  B0D8               	btfsc	status,0,c
 28660  006FFE  D002               	goto	l19375
 28661  007000                     u22140:
 28662                           
 28663                           ; BSR set to: 1
 28664                           ;outputs_MC50.c: 452:     defineatraso = 5;
 28665  007000  0E05               	movlw	5
 28666  007002  D001               	goto	L108
 28667  007004                     l19375:
 28668                           
 28669                           ; BSR set to: 1
 28670                           ;outputs_MC50.c: 455:     {;outputs_MC50.c: 456:     defineatraso = 23;
 28671  007004  0E17               	movlw	23
 28672  007006                     L108:
 28673  007006  6E13               	movwf	GetMotorPower@defineatraso^0,c
 28674                           
 28675                           ; BSR set to: 1
 28676                           ;outputs_MC50.c: 459:     return temppower+defineatraso;
 28677  007008  518E               	movf	_temppower& (0+255),w,b
 28678  00700A  2413               	addwf	GetMotorPower@defineatraso^0,w,c
 28679                           
 28680                           ; BSR set to: 1
 28681  00700C  0012               	return		;funcret
 28682  00700E                     __end_of_GetMotorPower:
 28683                           	callstack 0
 28684                           
 28685 ;; *************** function _ControlCounterMoves *****************
 28686 ;; Defined at:
 28687 ;;		line 293 in file "controlMemory_MC50.c"
 28688 ;; Parameters:    Size  Location     Type
 28689 ;;		None
 28690 ;; Auto vars:     Size  Location     Type
 28691 ;;		None
 28692 ;; Return value:  Size  Location     Type
 28693 ;;                  1    wreg      void 
 28694 ;; Registers used:
 28695 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28696 ;; Tracked objects:
 28697 ;;		On entry : 3E/1
 28698 ;;		On exit  : 0/0
 28699 ;;		Unchanged: 0/0
 28700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28701 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28702 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28704 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28705 ;;Total ram usage:        0 bytes
 28706 ;; Hardware stack levels used: 1
 28707 ;; Hardware stack levels required when called: 14
 28708 ;; This function calls:
 28709 ;;		_SaveNVM_VarSystem
 28710 ;; This function is called by:
 28711 ;;		_main
 28712 ;; This function uses a non-reentrant model
 28713 ;;
 28714                           
 28715                           	psect	text126
 28716  00835E                     __ptext126:
 28717                           	callstack 0
 28718  00835E                     _ControlCounterMoves:
 28719                           	callstack 16
 28720                           
 28721                           ;controlMemory_MC50.c: 296:     if(ts_system.timeBetweenSaveCounters<=0)
 28722                           
 28723                           ; BSR set to: 1
 28724                           ;incstack = 0
 28725  00835E  0101               	movlb	1	; () banked
 28726  008360  BFC1               	btfsc	(_ts_system+39)& (0+255),7,b	;volatile
 28727  008362  D005               	goto	u27510
 28728  008364  51C1               	movf	(_ts_system+39)& (0+255),w,b	;volatile
 28729  008366  E127               	bnz	l1486
 28730  008368  05C0               	decf	(_ts_system+38)& (0+255),w,b	;volatile
 28731  00836A  B0D8               	btfsc	status,0,c
 28732  00836C  0012               	return	
 28733  00836E                     u27510:
 28734                           
 28735                           ; BSR set to: 1
 28736                           ;controlMemory_MC50.c: 297:     {;controlMemory_MC50.c: 298:        ts_system.timeBetwee
      +                          nSaveCounters=((1000/50)*60)*5;
 28737  00836E  0E17               	movlw	23
 28738  008370  6FC1               	movwf	(_ts_system+39)& (0+255),b	;volatile
 28739  008372  0E70               	movlw	112
 28740  008374  6FC0               	movwf	(_ts_system+38)& (0+255),b	;volatile
 28741                           
 28742                           ; BSR set to: 1
 28743                           ;controlMemory_MC50.c: 300:        if(var_sys.actualCounterMoves!=var_sys_NVM.counterMov
      +                          es)
 28744  008376  0100               	movlb	0	; () banked
 28745  008378  51BA               	movf	(_var_sys_NVM+34)& (0+255),w,b	;volatile
 28746  00837A  0101               	movlb	1	; () banked
 28747  00837C  193C               	xorwf	(_var_sys+60)& (0+255),w,b	;volatile
 28748  00837E  E110               	bnz	u27520
 28749  008380  0100               	movlb	0	; () banked
 28750  008382  51BB               	movf	(_var_sys_NVM+35)& (0+255),w,b	;volatile
 28751  008384  0101               	movlb	1	; () banked
 28752  008386  193D               	xorwf	(_var_sys+61)& (0+255),w,b	;volatile
 28753  008388  E10B               	bnz	u27520
 28754  00838A  0100               	movlb	0	; () banked
 28755  00838C  51BC               	movf	(_var_sys_NVM+36)& (0+255),w,b	;volatile
 28756  00838E  0101               	movlb	1	; () banked
 28757  008390  193E               	xorwf	(_var_sys+62)& (0+255),w,b	;volatile
 28758  008392  E106               	bnz	u27520
 28759  008394  0100               	movlb	0	; () banked
 28760  008396  51BD               	movf	(_var_sys_NVM+37)& (0+255),w,b	;volatile
 28761  008398  0101               	movlb	1	; () banked
 28762  00839A  193F               	xorwf	(_var_sys+63)& (0+255),w,b	;volatile
 28763  00839C  B4D8               	btfsc	status,2,c
 28764  00839E  0012               	return	
 28765  0083A0                     u27520:
 28766                           
 28767                           ; BSR set to: 1
 28768                           ;controlMemory_MC50.c: 301:        {;controlMemory_MC50.c: 302:            var_sys_NVM.c
      +                          ounterMoves=var_sys.actualCounterMoves;
 28769  0083A0  C13C  F0BA         	movff	_var_sys+60,_var_sys_NVM+34	;volatile
 28770  0083A4  C13D  F0BB         	movff	_var_sys+61,_var_sys_NVM+35	;volatile
 28771  0083A8  C13E  F0BC         	movff	_var_sys+62,_var_sys_NVM+36	;volatile
 28772  0083AC  C13F  F0BD         	movff	_var_sys+63,_var_sys_NVM+37	;volatile
 28773                           
 28774                           ; BSR set to: 1
 28775                           ;controlMemory_MC50.c: 303:            SaveNVM_VarSystem(pageMemoryCounters);
 28776  0083B0  0E02               	movlw	2
 28777  0083B2  EC06  F045         	call	_SaveNVM_VarSystem
 28778  0083B6                     l1486:
 28779  0083B6  0012               	return		;funcret
 28780  0083B8                     __end_of_ControlCounterMoves:
 28781                           	callstack 0
 28782                           
 28783 ;; *************** function _SaveNVM_VarSystem *****************
 28784 ;; Defined at:
 28785 ;;		line 175 in file "controlMemory_MC50.c"
 28786 ;; Parameters:    Size  Location     Type
 28787 ;;  page            1    wreg     unsigned char 
 28788 ;; Auto vars:     Size  Location     Type
 28789 ;;  page            1    0[BANK0 ] unsigned char 
 28790 ;;  tempAdd         2    1[BANK0 ] unsigned int 
 28791 ;;  point           1    3[BANK0 ] PTR unsigned char 
 28792 ;;		 -> var_sys_NVM(64), 
 28793 ;; Return value:  Size  Location     Type
 28794 ;;                  1    wreg      void 
 28795 ;; Registers used:
 28796 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28797 ;; Tracked objects:
 28798 ;;		On entry : 0/0
 28799 ;;		On exit  : 0/0
 28800 ;;		Unchanged: 0/0
 28801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28802 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28803 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28805 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28806 ;;Total ram usage:        4 bytes
 28807 ;; Hardware stack levels used: 1
 28808 ;; Hardware stack levels required when called: 13
 28809 ;; This function calls:
 28810 ;;		_i2c_writeNBytes
 28811 ;; This function is called by:
 28812 ;;		_loadNVM_VarSystem
 28813 ;;		_ResetDefaultMemory
 28814 ;;		_ControlCounterMoves
 28815 ;;		_checkNVM_VarSystem
 28816 ;;		_sm_execute_ControlLearning
 28817 ;;		_sm_execute_menuConfiguration
 28818 ;;		_setValueToEdit
 28819 ;;		_controlSelectRemote
 28820 ;;		_eusartparser
 28821 ;; This function uses a non-reentrant model
 28822 ;;
 28823                           
 28824                           	psect	text127
 28825  008A0C                     __ptext127:
 28826                           	callstack 0
 28827  008A0C                     _SaveNVM_VarSystem:
 28828                           	callstack 14
 28829                           
 28830                           ;incstack = 0
 28831                           ;SaveNVM_VarSystem@page stored from wreg
 28832  008A0C  0100               	movlb	0	; () banked
 28833  008A0E  6FD8               	movwf	SaveNVM_VarSystem@page& (0+255),b
 28834                           
 28835                           ;controlMemory_MC50.c: 175: void SaveNVM_VarSystem(unsigned char page);controlMemory_MC5
      +                          0.c: 176: {;controlMemory_MC50.c: 177:     unsigned int tempAdd=page*16;
 28836  008A10  0100               	movlb	0	; () banked
 28837  008A12  51D8               	movf	SaveNVM_VarSystem@page& (0+255),w,b
 28838  008A14  0D10               	mullw	16
 28839  008A16  CFF3 F0D9          	movff	prodl,SaveNVM_VarSystem@tempAdd
 28840  008A1A  CFF4 F0DA          	movff	prodh,SaveNVM_VarSystem@tempAdd+1
 28841                           
 28842                           ; BSR set to: 0
 28843                           ;controlMemory_MC50.c: 178:     char* point=(char*)&var_sys_NVM;
 28844  008A1E  0E98               	movlw	low _var_sys_NVM
 28845  008A20  6FDB               	movwf	SaveNVM_VarSystem@point& (0+255),b
 28846                           
 28847                           ; BSR set to: 0
 28848                           ;controlMemory_MC50.c: 179:     point=point+tempAdd;
 28849  008A22  51DB               	movf	SaveNVM_VarSystem@point& (0+255),w,b
 28850  008A24  25D9               	addwf	SaveNVM_VarSystem@tempAdd& (0+255),w,b
 28851  008A26  6FDB               	movwf	SaveNVM_VarSystem@point& (0+255),b
 28852                           
 28853                           ; BSR set to: 0
 28854                           ;controlMemory_MC50.c: 180:    i2c_writeNBytes(0x50, tempAdd, point, 16);
 28855  008A28  C0D9  F022         	movff	SaveNVM_VarSystem@tempAdd,i2c_writeNBytes@reg
 28856  008A2C  C0DA  F023         	movff	SaveNVM_VarSystem@tempAdd+1,i2c_writeNBytes@reg+1
 28857  008A30  C0DB  F024         	movff	SaveNVM_VarSystem@point,i2c_writeNBytes@data
 28858  008A34  0E00               	movlw	0
 28859  008A36  6E26               	movwf	(i2c_writeNBytes@len+1)^0,c
 28860  008A38  0E10               	movlw	16
 28861  008A3A  6E25               	movwf	i2c_writeNBytes@len^0,c
 28862  008A3C  0E50               	movlw	80
 28863  008A3E  EC10  F03F         	call	_i2c_writeNBytes
 28864  008A42  0012               	return		;funcret
 28865  008A44                     __end_of_SaveNVM_VarSystem:
 28866                           	callstack 0
 28867                           
 28868 ;; *************** function _i2c_writeNBytes *****************
 28869 ;; Defined at:
 28870 ;;		line 50 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 28871 ;; Parameters:    Size  Location     Type
 28872 ;;  address         1    wreg     unsigned char 
 28873 ;;  reg             2   33[COMRAM] unsigned short 
 28874 ;;  data            1   35[COMRAM] PTR void 
 28875 ;;		 -> RemoveSerial@tempSerial(4), saveNewSerial@tempSerial(4), var_sys_NVM(64), 
 28876 ;;  len             2   36[COMRAM] unsigned int 
 28877 ;; Auto vars:     Size  Location     Type
 28878 ;;  address         1   56[COMRAM] unsigned char 
 28879 ;;  dat            17   39[COMRAM] unsigned char [17]
 28880 ;; Return value:  Size  Location     Type
 28881 ;;                  1    wreg      void 
 28882 ;; Registers used:
 28883 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28884 ;; Tracked objects:
 28885 ;;		On entry : 3F/0
 28886 ;;		On exit  : 0/0
 28887 ;;		Unchanged: 0/0
 28888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28889 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28890 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28891 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28892 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28893 ;;Total ram usage:       24 bytes
 28894 ;; Hardware stack levels used: 1
 28895 ;; Hardware stack levels required when called: 12
 28896 ;; This function calls:
 28897 ;;		_I2C1_Close
 28898 ;;		_I2C1_MasterWrite
 28899 ;;		_I2C1_Open
 28900 ;;		_I2C1_SetAddressNackCallback
 28901 ;;		_I2C1_SetBuffer
 28902 ;;		_memcpy
 28903 ;; This function is called by:
 28904 ;;		_saveNewSerial
 28905 ;;		_RemoveSerial
 28906 ;;		_SaveNVM_VarSystem
 28907 ;; This function uses a non-reentrant model
 28908 ;;
 28909                           
 28910                           	psect	text128
 28911  007E20                     __ptext128:
 28912                           	callstack 0
 28913  007E20                     _i2c_writeNBytes:
 28914                           	callstack 14
 28915                           
 28916                           ;incstack = 0
 28917                           ;i2c_writeNBytes@address stored from wreg
 28918  007E20  6E39               	movwf	i2c_writeNBytes@address^0,c
 28919                           
 28920                           ;mcc_generated_files/drivers/i2c_simple_master.c: 50: void i2c_writeNBytes(i2c1_address_
      +                          t address, uint16_t reg, void* data, size_t len);mcc_generated_files/drivers/i2c_simple_
      +                          master.c: 51: {;mcc_generated_files/drivers/i2c_simple_master.c: 52:     uint8_t dat[17]
      +                          ;;mcc_generated_files/drivers/i2c_simple_master.c: 53:     dat[0] = reg;
 28921  007E22  C022  F028         	movff	i2c_writeNBytes@reg,i2c_writeNBytes@dat
 28922                           
 28923                           ;mcc_generated_files/drivers/i2c_simple_master.c: 54:     memcpy(dat + 1, data, len);
 28924  007E26  0E29               	movlw	low (i2c_writeNBytes@dat+1)
 28925  007E28  6E10               	movwf	memcpy@d1^0,c
 28926  007E2A  6A11               	clrf	(memcpy@d1+1)^0,c
 28927  007E2C  C024  F012         	movff	i2c_writeNBytes@data,memcpy@s1
 28928  007E30  6A13               	clrf	(memcpy@s1+1)^0,c
 28929  007E32  C025  F014         	movff	i2c_writeNBytes@len,memcpy@n
 28930  007E36  C026  F015         	movff	i2c_writeNBytes@len+1,memcpy@n+1
 28931  007E3A  EC08  F044         	call	_memcpy	;wreg free
 28932  007E3E                     l19399:
 28933  007E3E  5023               	movf	(i2c_writeNBytes@reg+1)^0,w,c
 28934  007E40  1039               	iorwf	i2c_writeNBytes@address^0,w,c
 28935  007E42  ECE0  F03C         	call	_I2C1_Open
 28936  007E46  0900               	iorlw	0
 28937  007E48  B4D8               	btfsc	status,2,c
 28938  007E4A  D7F9               	goto	l19399
 28939                           
 28940                           ;mcc_generated_files/drivers/i2c_simple_master.c: 56:     I2C1_SetBuffer(dat,len + 1);
 28941  007E4C  0E28               	movlw	low i2c_writeNBytes@dat
 28942  007E4E  6E10               	movwf	I2C1_SetBuffer@buffer^0,c
 28943  007E50  6A11               	clrf	(I2C1_SetBuffer@buffer+1)^0,c
 28944  007E52  0E01               	movlw	1
 28945  007E54  2425               	addwf	i2c_writeNBytes@len^0,w,c
 28946  007E56  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 28947  007E58  0E00               	movlw	0
 28948  007E5A  2026               	addwfc	(i2c_writeNBytes@len+1)^0,w,c
 28949  007E5C  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 28950  007E5E  EC04  F048         	call	_I2C1_SetBuffer	;wreg free
 28951                           
 28952                           ; BSR set to: 2
 28953                           ;mcc_generated_files/drivers/i2c_simple_master.c: 57:     I2C1_SetAddressNackCallback(((
      +                          void*)0),((void*)0));
 28954  007E62  0E00               	movlw	0
 28955  007E64  6E15               	movwf	I2C1_SetAddressNackCallback@cb^0,c
 28956  007E66  0E00               	movlw	0
 28957  007E68  6E16               	movwf	(I2C1_SetAddressNackCallback@cb+1)^0,c
 28958  007E6A  0E00               	movlw	0
 28959  007E6C  6E17               	movwf	I2C1_SetAddressNackCallback@ptr^0,c
 28960  007E6E  0E00               	movlw	0
 28961  007E70  6E18               	movwf	(I2C1_SetAddressNackCallback@ptr+1)^0,c
 28962  007E72  EC35  F048         	call	_I2C1_SetAddressNackCallback	;wreg free
 28963                           
 28964                           ;mcc_generated_files/drivers/i2c_simple_master.c: 58:     I2C1_MasterWrite();
 28965  007E76  EC03  F049         	call	_I2C1_MasterWrite	;wreg free
 28966  007E7A                     l19407:
 28967  007E7A  EC76  F047         	call	_I2C1_Close	;wreg free
 28968  007E7E  06E8               	decf	wreg,f,c
 28969  007E80  B4D8               	btfsc	status,2,c
 28970  007E82  D7FB               	goto	l19407
 28971                           
 28972                           ;mcc_generated_files/drivers/i2c_simple_master.c: 60:     _delay((unsigned long)((10)*(6
      +                          4000000/4000.0)));
 28973  007E84  0ED0               	movlw	208
 28974  007E86  6E27               	movwf	??_i2c_writeNBytes^0,c
 28975  007E88  0ECA               	movlw	202
 28976  007E8A                     u28877:
 28977  007E8A  2EE8               	decfsz	wreg,f,c
 28978  007E8C  D7FE               	bra	u28877
 28979  007E8E  2E27               	decfsz	??_i2c_writeNBytes^0,f,c
 28980  007E90  D7FC               	bra	u28877
 28981  007E92  0012               	return		;funcret
 28982  007E94                     __end_of_i2c_writeNBytes:
 28983                           	callstack 0
 28984                           
 28985 ;; *************** function _memcpy *****************
 28986 ;; Defined at:
 28987 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\memcpy.c"
 28988 ;; Parameters:    Size  Location     Type
 28989 ;;  d1              2   15[COMRAM] PTR void 
 28990 ;;		 -> controlSelectRemote@tempSerial(4), Decrypt@Buffer(4), SecureKeyGen@SKEYtemp(8), SecureKeyGen@HOPtemp(4), 
 28991 ;;		 -> SecureKeyGen@Buffer(8), NormalKeyGen@SKEYtemp(4), NormalKeyGen@SEED(4), NormalKeyGen@HOPtemp(4), 
 28992 ;;		 -> NormalKeyGen@Buffer(8), DKEY(8), classic_data(16), I2C1_WriteNBytes@dat(17), 
 28993 ;;		 -> i2c_writeNBytes@dat(17), 
 28994 ;;  s1              2   17[COMRAM] PTR const void 
 28995 ;;		 -> classic_data.raw_data(4), Decrypt@Buffer(4), SecureKeyGen@SKEYtemp(8), SecureKeyGen@HOPtemp(4), 
 28996 ;;		 -> SecureKeyGen@Buffer(8), NormalKeyGen@SKEYtemp(4), NormalKeyGen@SEED(4), NormalKeyGen@HOPtemp(4), 
 28997 ;;		 -> NormalKeyGen@Buffer(8), classic_data.serialnumber(4), classic_data(16), BufferRF(9), 
 28998 ;;		 -> RemoveSerial@tempSerial(4), saveNewSerial@tempSerial(4), var_sys_NVM(64), 
 28999 ;;  n               2   19[COMRAM] unsigned int 
 29000 ;; Auto vars:     Size  Location     Type
 29001 ;;  s               2   24[COMRAM] PTR const unsigned char 
 29002 ;;		 -> classic_data.raw_data(4), Decrypt@Buffer(4), SecureKeyGen@SKEYtemp(8), SecureKeyGen@HOPtemp(4), 
 29003 ;;		 -> SecureKeyGen@Buffer(8), NormalKeyGen@SKEYtemp(4), NormalKeyGen@SEED(4), NormalKeyGen@HOPtemp(4), 
 29004 ;;		 -> NormalKeyGen@Buffer(8), classic_data.serialnumber(4), classic_data(16), BufferRF(9), 
 29005 ;;		 -> RemoveSerial@tempSerial(4), saveNewSerial@tempSerial(4), var_sys_NVM(64), 
 29006 ;;  d               2   22[COMRAM] PTR unsigned char 
 29007 ;;		 -> controlSelectRemote@tempSerial(4), Decrypt@Buffer(4), SecureKeyGen@SKEYtemp(8), SecureKeyGen@HOPtemp(4), 
 29008 ;;		 -> SecureKeyGen@Buffer(8), NormalKeyGen@SKEYtemp(4), NormalKeyGen@SEED(4), NormalKeyGen@HOPtemp(4), 
 29009 ;;		 -> NormalKeyGen@Buffer(8), DKEY(8), classic_data(16), I2C1_WriteNBytes@dat(17), 
 29010 ;;		 -> i2c_writeNBytes@dat(17), 
 29011 ;;  tmp             1   21[COMRAM] unsigned char 
 29012 ;; Return value:  Size  Location     Type
 29013 ;;                  2   15[COMRAM] PTR void 
 29014 ;; Registers used:
 29015 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 29016 ;; Tracked objects:
 29017 ;;		On entry : 0/0
 29018 ;;		On exit  : 0/0
 29019 ;;		Unchanged: 0/0
 29020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29021 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29022 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29024 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29025 ;;Total ram usage:       11 bytes
 29026 ;; Hardware stack levels used: 1
 29027 ;; Hardware stack levels required when called: 4
 29028 ;; This function calls:
 29029 ;;		Nothing
 29030 ;; This function is called by:
 29031 ;;		_i2c_writeNBytes
 29032 ;;		_getSerialCmd
 29033 ;;		_NormalKeyGen
 29034 ;;		_Decrypt
 29035 ;;		_keeloqDecryptPacket
 29036 ;;		_DecryptPacket_12BIT
 29037 ;; This function uses a non-reentrant model
 29038 ;;
 29039                           
 29040                           	psect	text129
 29041  008810                     __ptext129:
 29042                           	callstack 0
 29043  008810                     _memcpy:
 29044                           	callstack 21
 29045                           
 29046                           ;incstack = 0
 29047  008810  C012  F019         	movff	memcpy@s1,memcpy@s
 29048  008814  C013  F01A         	movff	memcpy@s1+1,memcpy@s+1
 29049  008818  C010  F017         	movff	memcpy@d1,memcpy@d
 29050  00881C  C011  F018         	movff	memcpy@d1+1,memcpy@d+1
 29051  008820  D010               	goto	l19339
 29052  008822                     l19331:
 29053  008822  C019  FFD9         	movff	memcpy@s,fsr2l
 29054  008826  C01A  FFDA         	movff	memcpy@s+1,fsr2h
 29055  00882A  50DF               	movf	indf2,w,c
 29056  00882C  6E16               	movwf	memcpy@tmp^0,c
 29057  00882E  4A19               	infsnz	memcpy@s^0,f,c
 29058  008830  2A1A               	incf	(memcpy@s+1)^0,f,c
 29059  008832  C017  FFD9         	movff	memcpy@d,fsr2l
 29060  008836  C018  FFDA         	movff	memcpy@d+1,fsr2h
 29061  00883A  C016  FFDF         	movff	memcpy@tmp,indf2
 29062  00883E  4A17               	infsnz	memcpy@d^0,f,c
 29063  008840  2A18               	incf	(memcpy@d+1)^0,f,c
 29064  008842                     l19339:
 29065  008842  0614               	decf	memcpy@n^0,f,c
 29066  008844  A0D8               	btfss	status,0,c
 29067  008846  0615               	decf	(memcpy@n+1)^0,f,c
 29068  008848  2814               	incf	memcpy@n^0,w,c
 29069  00884A  E1EB               	bnz	l19331
 29070  00884C  2815               	incf	(memcpy@n+1)^0,w,c
 29071  00884E  B4D8               	btfsc	status,2,c
 29072  008850  0012               	return	
 29073  008852  D7E7               	goto	l19331
 29074  008854                     __end_of_memcpy:
 29075                           	callstack 0
 29076                           
 29077 ;; *************** function _I2C1_SetAddressNackCallback *****************
 29078 ;; Defined at:
 29079 ;;		line 283 in file "mcc_generated_files/i2c1_master.c"
 29080 ;; Parameters:    Size  Location     Type
 29081 ;;  cb              2   20[COMRAM] PTR FTN(PTR void ,)enum 
 29082 ;;		 -> Absolute function(1), 
 29083 ;;  ptr             2   22[COMRAM] PTR void 
 29084 ;;		 -> NULL(0), 
 29085 ;; Auto vars:     Size  Location     Type
 29086 ;;		None
 29087 ;; Return value:  Size  Location     Type
 29088 ;;                  1    wreg      void 
 29089 ;; Registers used:
 29090 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29091 ;; Tracked objects:
 29092 ;;		On entry : 3F/2
 29093 ;;		On exit  : 0/0
 29094 ;;		Unchanged: 0/0
 29095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29096 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29097 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29099 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29100 ;;Total ram usage:        4 bytes
 29101 ;; Hardware stack levels used: 1
 29102 ;; Hardware stack levels required when called: 5
 29103 ;; This function calls:
 29104 ;;		_I2C1_SetCallback
 29105 ;; This function is called by:
 29106 ;;		_i2c_writeNBytes
 29107 ;;		_i2c_readDataBlock
 29108 ;;		_I2C1_Read1ByteRegister
 29109 ;; This function uses a non-reentrant model
 29110 ;;
 29111                           
 29112                           	psect	text130
 29113  00906A                     __ptext130:
 29114                           	callstack 0
 29115  00906A                     _I2C1_SetAddressNackCallback:
 29116                           	callstack 20
 29117                           
 29118                           ; BSR set to: 2
 29119                           ;mcc_generated_files/i2c1_master.c: 283: void I2C1_SetAddressNackCallback(i2c1_callback_
      +                          t cb, void *ptr);mcc_generated_files/i2c1_master.c: 284: {;mcc_generated_files/i2c1_mast
      +                          er.c: 285:     I2C1_SetCallback(I2C1_ADDR_NACK, cb, ptr);
 29120                           
 29121                           ;incstack = 0
 29122  00906A  C015  F010         	movff	I2C1_SetAddressNackCallback@cb,I2C1_SetCallback@cb
 29123  00906E  C016  F011         	movff	I2C1_SetAddressNackCallback@cb+1,I2C1_SetCallback@cb+1
 29124  009072  C017  F012         	movff	I2C1_SetAddressNackCallback@ptr,I2C1_SetCallback@ptr
 29125  009076  C018  F013         	movff	I2C1_SetAddressNackCallback@ptr+1,I2C1_SetCallback@ptr+1
 29126  00907A  0E02               	movlw	2
 29127  00907C  ECF1  F03F         	call	_I2C1_SetCallback
 29128  009080  0012               	return		;funcret
 29129  009082                     __end_of_I2C1_SetAddressNackCallback:
 29130                           	callstack 0
 29131                           
 29132 ;; *************** function _I2C1_Open *****************
 29133 ;; Defined at:
 29134 ;;		line 176 in file "mcc_generated_files/i2c1_master.c"
 29135 ;; Parameters:    Size  Location     Type
 29136 ;;  address         1    wreg     unsigned char 
 29137 ;; Auto vars:     Size  Location     Type
 29138 ;;  address         1   15[COMRAM] unsigned char 
 29139 ;;  returnValue     1   16[COMRAM] enum E355
 29140 ;; Return value:  Size  Location     Type
 29141 ;;                  1    wreg      enum E355
 29142 ;; Registers used:
 29143 ;;		wreg, status,2, status,0, cstack
 29144 ;; Tracked objects:
 29145 ;;		On entry : 0/1
 29146 ;;		On exit  : 33/2
 29147 ;;		Unchanged: 0/0
 29148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29149 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29150 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29152 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29153 ;;Total ram usage:        2 bytes
 29154 ;; Hardware stack levels used: 1
 29155 ;; Hardware stack levels required when called: 5
 29156 ;; This function calls:
 29157 ;;		_I2C1_MasterClearIrq
 29158 ;;		_I2C1_MasterOpen
 29159 ;; This function is called by:
 29160 ;;		_i2c_writeNBytes
 29161 ;;		_i2c_readDataBlock
 29162 ;;		_I2C1_Read1ByteRegister
 29163 ;; This function uses a non-reentrant model
 29164 ;;
 29165                           
 29166                           	psect	text131
 29167  0079C0                     __ptext131:
 29168                           	callstack 0
 29169  0079C0                     _I2C1_Open:
 29170                           	callstack 20
 29171                           
 29172                           ;incstack = 0
 29173                           ;I2C1_Open@address stored from wreg
 29174  0079C0  6E10               	movwf	I2C1_Open@address^0,c
 29175                           
 29176                           ;mcc_generated_files/i2c1_master.c: 176: i2c1_error_t I2C1_Open(i2c1_address_t address);
      +                          mcc_generated_files/i2c1_master.c: 177: {;mcc_generated_files/i2c1_master.c: 178:     i2
      +                          c1_error_t returnValue = I2C1_BUSY;
 29177  0079C2  0E01               	movlw	1
 29178  0079C4  6E11               	movwf	I2C1_Open@returnValue^0,c
 29179                           
 29180                           ;mcc_generated_files/i2c1_master.c: 180:     if(!I2C1_Status.inUse)
 29181  0079C6  0102               	movlb	2	; () banked
 29182  0079C8  B55F               	btfsc	(_I2C1_Status+35)& (0+255),2,b
 29183  0079CA  D03A               	goto	l19305
 29184                           
 29185                           ; BSR set to: 2
 29186                           ;mcc_generated_files/i2c1_master.c: 181:     {;mcc_generated_files/i2c1_master.c: 182:  
      +                                 I2C1_Status.address = address;
 29187  0079CC  C010  F258         	movff	I2C1_Open@address,_I2C1_Status+28
 29188                           
 29189                           ; BSR set to: 2
 29190                           ;mcc_generated_files/i2c1_master.c: 183:         I2C1_Status.busy = 0;
 29191  0079D0  935F               	bcf	(_I2C1_Status+35)& (0+255),1,b
 29192                           
 29193                           ; BSR set to: 2
 29194                           ;mcc_generated_files/i2c1_master.c: 184:         I2C1_Status.inUse = 1;
 29195  0079D2  855F               	bsf	(_I2C1_Status+35)& (0+255),2,b
 29196                           
 29197                           ; BSR set to: 2
 29198                           ;mcc_generated_files/i2c1_master.c: 185:         I2C1_Status.addressNackCheck = 0;
 29199  0079D4  915F               	bcf	(_I2C1_Status+35)& (0+255),0,b
 29200                           
 29201                           ; BSR set to: 2
 29202                           ;mcc_generated_files/i2c1_master.c: 186:         I2C1_Status.state = I2C1_RESET;
 29203  0079D6  0E0E               	movlw	14
 29204  0079D8  6F5D               	movwf	(_I2C1_Status+33)& (0+255),b
 29205                           
 29206                           ; BSR set to: 2
 29207                           ;mcc_generated_files/i2c1_master.c: 187:         I2C1_Status.time_out_value = 500;
 29208  0079DA  0E01               	movlw	1
 29209  0079DC  6F57               	movwf	(_I2C1_Status+27)& (0+255),b
 29210  0079DE  0EF4               	movlw	244
 29211  0079E0  6F56               	movwf	(_I2C1_Status+26)& (0+255),b
 29212                           
 29213                           ; BSR set to: 2
 29214                           ;mcc_generated_files/i2c1_master.c: 188:         I2C1_Status.bufferFree = 1;
 29215  0079E2  875F               	bsf	(_I2C1_Status+35)& (0+255),3,b
 29216                           
 29217                           ; BSR set to: 2
 29218                           ;mcc_generated_files/i2c1_master.c: 191:         I2C1_Status.callbackTable[I2C1_DATA_COM
      +                          PLETE]=I2C1_CallbackReturnStop;
 29219  0079E4  0EA0               	movlw	low _I2C1_CallbackReturnStop
 29220  0079E6  6F3C               	movwf	_I2C1_Status& (0+255),b
 29221  0079E8  0E92               	movlw	high _I2C1_CallbackReturnStop
 29222  0079EA  6F3D               	movwf	(_I2C1_Status+1)& (0+255),b
 29223                           
 29224                           ; BSR set to: 2
 29225                           ;mcc_generated_files/i2c1_master.c: 192:         I2C1_Status.callbackPayload[I2C1_DATA_C
      +                          OMPLETE] = ((void*)0);
 29226  0079EC  0E00               	movlw	0
 29227  0079EE  6F48               	movwf	(_I2C1_Status+12)& (0+255),b
 29228  0079F0  0E00               	movlw	0
 29229  0079F2  6F49               	movwf	(_I2C1_Status+13)& (0+255),b
 29230                           
 29231                           ; BSR set to: 2
 29232                           ;mcc_generated_files/i2c1_master.c: 193:         I2C1_Status.callbackTable[I2C1_WRITE_CO
      +                          LLISION]=I2C1_CallbackReturnStop;
 29233  0079F4  0EA0               	movlw	low _I2C1_CallbackReturnStop
 29234  0079F6  6F3E               	movwf	(_I2C1_Status+2)& (0+255),b
 29235  0079F8  0E92               	movlw	high _I2C1_CallbackReturnStop
 29236  0079FA  6F3F               	movwf	(_I2C1_Status+3)& (0+255),b
 29237                           
 29238                           ; BSR set to: 2
 29239                           ;mcc_generated_files/i2c1_master.c: 194:         I2C1_Status.callbackPayload[I2C1_WRITE_
      +                          COLLISION] = ((void*)0);
 29240  0079FC  0E00               	movlw	0
 29241  0079FE  6F4A               	movwf	(_I2C1_Status+14)& (0+255),b
 29242  007A00  0E00               	movlw	0
 29243  007A02  6F4B               	movwf	(_I2C1_Status+15)& (0+255),b
 29244                           
 29245                           ; BSR set to: 2
 29246                           ;mcc_generated_files/i2c1_master.c: 195:         I2C1_Status.callbackTable[I2C1_ADDR_NAC
      +                          K]=I2C1_CallbackReturnStop;
 29247  007A04  0EA0               	movlw	low _I2C1_CallbackReturnStop
 29248  007A06  6F40               	movwf	(_I2C1_Status+4)& (0+255),b
 29249  007A08  0E92               	movlw	high _I2C1_CallbackReturnStop
 29250  007A0A  6F41               	movwf	(_I2C1_Status+5)& (0+255),b
 29251                           
 29252                           ; BSR set to: 2
 29253                           ;mcc_generated_files/i2c1_master.c: 196:         I2C1_Status.callbackPayload[I2C1_ADDR_N
      +                          ACK] = ((void*)0);
 29254  007A0C  0E00               	movlw	0
 29255  007A0E  6F4C               	movwf	(_I2C1_Status+16)& (0+255),b
 29256  007A10  0E00               	movlw	0
 29257  007A12  6F4D               	movwf	(_I2C1_Status+17)& (0+255),b
 29258                           
 29259                           ; BSR set to: 2
 29260                           ;mcc_generated_files/i2c1_master.c: 197:         I2C1_Status.callbackTable[I2C1_DATA_NAC
      +                          K]=I2C1_CallbackReturnStop;
 29261  007A14  0EA0               	movlw	low _I2C1_CallbackReturnStop
 29262  007A16  6F42               	movwf	(_I2C1_Status+6)& (0+255),b
 29263  007A18  0E92               	movlw	high _I2C1_CallbackReturnStop
 29264  007A1A  6F43               	movwf	(_I2C1_Status+7)& (0+255),b
 29265                           
 29266                           ; BSR set to: 2
 29267                           ;mcc_generated_files/i2c1_master.c: 198:         I2C1_Status.callbackPayload[I2C1_DATA_N
      +                          ACK] = ((void*)0);
 29268  007A1C  0E00               	movlw	0
 29269  007A1E  6F4E               	movwf	(_I2C1_Status+18)& (0+255),b
 29270  007A20  0E00               	movlw	0
 29271  007A22  6F4F               	movwf	(_I2C1_Status+19)& (0+255),b
 29272                           
 29273                           ; BSR set to: 2
 29274                           ;mcc_generated_files/i2c1_master.c: 199:         I2C1_Status.callbackTable[I2C1_TIMEOUT]
      +                          =I2C1_CallbackReturnReset;
 29275  007A24  0E9C               	movlw	low _I2C1_CallbackReturnReset
 29276  007A26  6F44               	movwf	(_I2C1_Status+8)& (0+255),b
 29277  007A28  0E92               	movlw	high _I2C1_CallbackReturnReset
 29278  007A2A  6F45               	movwf	(_I2C1_Status+9)& (0+255),b
 29279                           
 29280                           ; BSR set to: 2
 29281                           ;mcc_generated_files/i2c1_master.c: 200:         I2C1_Status.callbackPayload[I2C1_TIMEOU
      +                          T] = ((void*)0);
 29282  007A2C  0E00               	movlw	0
 29283  007A2E  6F50               	movwf	(_I2C1_Status+20)& (0+255),b
 29284  007A30  0E00               	movlw	0
 29285  007A32  6F51               	movwf	(_I2C1_Status+21)& (0+255),b
 29286                           
 29287                           ; BSR set to: 2
 29288                           ;mcc_generated_files/i2c1_master.c: 202:         I2C1_MasterClearIrq();
 29289  007A34  EC3A  F049         	call	_I2C1_MasterClearIrq	;wreg free
 29290                           
 29291                           ; BSR set to: 14
 29292                           ;mcc_generated_files/i2c1_master.c: 203:         I2C1_MasterOpen();
 29293  007A38  EC41  F048         	call	_I2C1_MasterOpen	;wreg free
 29294                           
 29295                           ; BSR set to: 14
 29296                           ;mcc_generated_files/i2c1_master.c: 204:         returnValue = I2C1_NOERR;
 29297  007A3C  0E00               	movlw	0
 29298  007A3E  6E11               	movwf	I2C1_Open@returnValue^0,c
 29299  007A40                     l19305:
 29300                           
 29301                           ;mcc_generated_files/i2c1_master.c: 206:     return returnValue;
 29302  007A40  5011               	movf	I2C1_Open@returnValue^0,w,c
 29303  007A42  0012               	return		;funcret
 29304  007A44                     __end_of_I2C1_Open:
 29305                           	callstack 0
 29306                           
 29307 ;; *************** function _I2C1_MasterOpen *****************
 29308 ;; Defined at:
 29309 ;;		line 543 in file "mcc_generated_files/i2c1_master.c"
 29310 ;; Parameters:    Size  Location     Type
 29311 ;;		None
 29312 ;; Auto vars:     Size  Location     Type
 29313 ;;		None
 29314 ;; Return value:  Size  Location     Type
 29315 ;;                  1    wreg      _Bool 
 29316 ;; Registers used:
 29317 ;;		wreg, status,2
 29318 ;; Tracked objects:
 29319 ;;		On entry : 3F/E
 29320 ;;		On exit  : 3F/E
 29321 ;;		Unchanged: 3F/0
 29322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29323 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29324 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29326 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29327 ;;Total ram usage:        0 bytes
 29328 ;; Hardware stack levels used: 1
 29329 ;; Hardware stack levels required when called: 4
 29330 ;; This function calls:
 29331 ;;		Nothing
 29332 ;; This function is called by:
 29333 ;;		_I2C1_Open
 29334 ;; This function uses a non-reentrant model
 29335 ;;
 29336                           
 29337                           	psect	text132
 29338  009082                     __ptext132:
 29339                           	callstack 0
 29340  009082                     _I2C1_MasterOpen:
 29341                           	callstack 20
 29342                           
 29343                           ; BSR set to: 14
 29344                           ;mcc_generated_files/i2c1_master.c: 545:     if(!SSP1CON1bits.SSPEN)
 29345                           
 29346                           ;incstack = 0
 29347  009082  BA96               	btfsc	150,5,c	;volatile
 29348  009084  0012               	return	
 29349                           
 29350                           ; BSR set to: 14
 29351                           ;mcc_generated_files/i2c1_master.c: 546:     {;mcc_generated_files/i2c1_master.c: 547:  
      +                                 SSP1STAT = 0x80;
 29352  009086  0E80               	movlw	128
 29353  009088  6E95               	movwf	149,c	;volatile
 29354                           
 29355                           ;mcc_generated_files/i2c1_master.c: 548:         SSP1CON1 = 0x08;
 29356  00908A  0E08               	movlw	8
 29357  00908C  6E96               	movwf	150,c	;volatile
 29358                           
 29359                           ;mcc_generated_files/i2c1_master.c: 549:         SSP1CON2 = 0x00;
 29360  00908E  0E00               	movlw	0
 29361  009090  6E97               	movwf	151,c	;volatile
 29362                           
 29363                           ;mcc_generated_files/i2c1_master.c: 550:         SSP1ADD = 0x9F;
 29364  009092  0E9F               	movlw	159
 29365  009094  6E93               	movwf	147,c	;volatile
 29366                           
 29367                           ; BSR set to: 14
 29368                           ;mcc_generated_files/i2c1_master.c: 551:         SSP1CON1bits.SSPEN = 1;
 29369  009096  8A96               	bsf	150,5,c	;volatile
 29370                           
 29371                           ; BSR set to: 14
 29372  009098  0012               	return		;funcret
 29373  00909A                     __end_of_I2C1_MasterOpen:
 29374                           	callstack 0
 29375                           
 29376 ;; *************** function _I2C1_MasterWrite *****************
 29377 ;; Defined at:
 29378 ;;		line 251 in file "mcc_generated_files/i2c1_master.c"
 29379 ;; Parameters:    Size  Location     Type
 29380 ;;		None
 29381 ;; Auto vars:     Size  Location     Type
 29382 ;;		None
 29383 ;; Return value:  Size  Location     Type
 29384 ;;                  1    wreg      enum E355
 29385 ;; Registers used:
 29386 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29387 ;; Tracked objects:
 29388 ;;		On entry : 0/2
 29389 ;;		On exit  : 3F/2
 29390 ;;		Unchanged: 0/0
 29391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29393 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29395 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29396 ;;Total ram usage:        0 bytes
 29397 ;; Hardware stack levels used: 1
 29398 ;; Hardware stack levels required when called: 11
 29399 ;; This function calls:
 29400 ;;		_I2C1_MasterOperation
 29401 ;; This function is called by:
 29402 ;;		_i2c_writeNBytes
 29403 ;;		_i2c_readDataBlock
 29404 ;;		_I2C1_Read1ByteRegister
 29405 ;; This function uses a non-reentrant model
 29406 ;;
 29407                           
 29408                           	psect	text133
 29409  009206                     __ptext133:
 29410                           	callstack 0
 29411  009206                     _I2C1_MasterWrite:
 29412                           	callstack 14
 29413                           
 29414                           ;mcc_generated_files/i2c1_master.c: 253:     return I2C1_MasterOperation(0);;	Return val
      +                          ue of _I2C1_MasterWrite is never used
 29415                           
 29416                           ; BSR set to: 14
 29417                           ;incstack = 0
 29418  009206  0E00               	movlw	0
 29419  009208  ECDF  F045         	call	_I2C1_MasterOperation
 29420                           
 29421                           ; BSR set to: 2
 29422  00920C  0012               	return		;funcret
 29423  00920E                     __end_of_I2C1_MasterWrite:
 29424                           	callstack 0
 29425                           
 29426 ;; *************** function _I2C1_MasterOperation *****************
 29427 ;; Defined at:
 29428 ;;		line 224 in file "mcc_generated_files/i2c1_master.c"
 29429 ;; Parameters:    Size  Location     Type
 29430 ;;  read            1    wreg     _Bool 
 29431 ;; Auto vars:     Size  Location     Type
 29432 ;;  read            1   31[COMRAM] _Bool 
 29433 ;;  returnValue     1   32[COMRAM] enum E355
 29434 ;; Return value:  Size  Location     Type
 29435 ;;                  1    wreg      enum E355
 29436 ;; Registers used:
 29437 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29438 ;; Tracked objects:
 29439 ;;		On entry : 0/2
 29440 ;;		On exit  : 3F/2
 29441 ;;		Unchanged: 0/0
 29442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29443 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29444 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29446 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29447 ;;Total ram usage:        2 bytes
 29448 ;; Hardware stack levels used: 1
 29449 ;; Hardware stack levels required when called: 10
 29450 ;; This function calls:
 29451 ;;		_I2C1_MasterStart
 29452 ;;		_I2C1_Poller
 29453 ;; This function is called by:
 29454 ;;		_I2C1_MasterWrite
 29455 ;; This function uses a non-reentrant model
 29456 ;;
 29457                           
 29458                           	psect	text134
 29459  008BBE                     __ptext134:
 29460                           	callstack 0
 29461  008BBE                     _I2C1_MasterOperation:
 29462                           	callstack 14
 29463                           
 29464                           ; BSR set to: 2
 29465                           ;incstack = 0
 29466                           ;I2C1_MasterOperation@read stored from wreg
 29467  008BBE  6E20               	movwf	I2C1_MasterOperation@read^0,c
 29468                           
 29469                           ;mcc_generated_files/i2c1_master.c: 224: i2c1_error_t I2C1_MasterOperation(_Bool read);m
      +                          cc_generated_files/i2c1_master.c: 225: {;mcc_generated_files/i2c1_master.c: 226:     i2c
      +                          1_error_t returnValue = I2C1_BUSY;
 29470  008BC0  0E01               	movlw	1
 29471  008BC2  6E21               	movwf	I2C1_MasterOperation@returnValue^0,c
 29472                           
 29473                           ;mcc_generated_files/i2c1_master.c: 227:     if(!I2C1_Status.busy)
 29474  008BC4  0102               	movlb	2	; () banked
 29475  008BC6  B35F               	btfsc	(_I2C1_Status+35)& (0+255),1,b
 29476  008BC8  D00E               	goto	l19257
 29477                           
 29478                           ; BSR set to: 2
 29479                           ;mcc_generated_files/i2c1_master.c: 228:     {;mcc_generated_files/i2c1_master.c: 229:  
      +                                 I2C1_Status.busy = 1;
 29480  008BCA  835F               	bsf	(_I2C1_Status+35)& (0+255),1,b
 29481                           
 29482                           ; BSR set to: 2
 29483                           ;mcc_generated_files/i2c1_master.c: 230:         returnValue = I2C1_NOERR;
 29484  008BCC  0E00               	movlw	0
 29485  008BCE  6E21               	movwf	I2C1_MasterOperation@returnValue^0,c
 29486                           
 29487                           ; BSR set to: 2
 29488                           ;mcc_generated_files/i2c1_master.c: 232:         if(read)
 29489  008BD0  5020               	movf	I2C1_MasterOperation@read^0,w,c
 29490  008BD2  B4D8               	btfsc	status,2,c
 29491  008BD4  D002               	goto	l19251
 29492                           
 29493                           ; BSR set to: 2
 29494                           ;mcc_generated_files/i2c1_master.c: 233:         {;mcc_generated_files/i2c1_master.c: 23
      +                          4:             I2C1_Status.state = I2C1_SEND_ADR_READ;
 29495  008BD6  0E01               	movlw	1
 29496  008BD8  D001               	goto	L111
 29497  008BDA                     l19251:
 29498                           
 29499                           ; BSR set to: 2
 29500                           ;mcc_generated_files/i2c1_master.c: 237:         {;mcc_generated_files/i2c1_master.c: 23
      +                          8:             I2C1_Status.state = I2C1_SEND_ADR_WRITE;
 29501  008BDA  0E02               	movlw	2
 29502  008BDC                     L111:
 29503  008BDC  6F5D               	movwf	(_I2C1_Status+33)& (0+255),b
 29504                           
 29505                           ; BSR set to: 2
 29506                           ;mcc_generated_files/i2c1_master.c: 240:         I2C1_MasterStart();
 29507  008BDE  EC56  F049         	call	_I2C1_MasterStart	;wreg free
 29508                           
 29509                           ; BSR set to: 2
 29510                           ;mcc_generated_files/i2c1_master.c: 241:         I2C1_Poller();
 29511  008BE2  EC9E  F048         	call	_I2C1_Poller	;wreg free
 29512  008BE6                     l19257:
 29513                           
 29514                           ; BSR set to: 2
 29515                           ;mcc_generated_files/i2c1_master.c: 243:     return returnValue;
 29516  008BE6  5021               	movf	I2C1_MasterOperation@returnValue^0,w,c
 29517                           
 29518                           ; BSR set to: 2
 29519  008BE8  0012               	return		;funcret
 29520  008BEA                     __end_of_I2C1_MasterOperation:
 29521                           	callstack 0
 29522                           
 29523 ;; *************** function _I2C1_Poller *****************
 29524 ;; Defined at:
 29525 ;;		line 312 in file "mcc_generated_files/i2c1_master.c"
 29526 ;; Parameters:    Size  Location     Type
 29527 ;;		None
 29528 ;; Auto vars:     Size  Location     Type
 29529 ;;		None
 29530 ;; Return value:  Size  Location     Type
 29531 ;;                  1    wreg      void 
 29532 ;; Registers used:
 29533 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29534 ;; Tracked objects:
 29535 ;;		On entry : 3F/2
 29536 ;;		On exit  : 3F/2
 29537 ;;		Unchanged: 0/0
 29538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29539 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29540 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29542 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29543 ;;Total ram usage:        0 bytes
 29544 ;; Hardware stack levels used: 1
 29545 ;; Hardware stack levels required when called: 9
 29546 ;; This function calls:
 29547 ;;		_I2C1_MasterFsm
 29548 ;;		_I2C1_MasterWaitForEvent
 29549 ;; This function is called by:
 29550 ;;		_I2C1_MasterOperation
 29551 ;; This function uses a non-reentrant model
 29552 ;;
 29553                           
 29554                           	psect	text135
 29555  00913C                     __ptext135:
 29556                           	callstack 0
 29557  00913C                     _I2C1_Poller:
 29558                           	callstack 14
 29559                           
 29560                           ; BSR set to: 2
 29561                           ;mcc_generated_files/i2c1_master.c: 314:     while(I2C1_Status.busy)
 29562                           
 29563                           ; BSR set to: 2
 29564                           ;incstack = 0
 29565  00913C  D004               	goto	l19225
 29566  00913E                     l19221:
 29567                           
 29568                           ; BSR set to: 2
 29569                           ;mcc_generated_files/i2c1_master.c: 315:     {;mcc_generated_files/i2c1_master.c: 316:  
      +                                 I2C1_MasterWaitForEvent();
 29570  00913E  EC07  F049         	call	_I2C1_MasterWaitForEvent	;wreg free
 29571                           
 29572                           ; BSR set to: 14
 29573                           ;mcc_generated_files/i2c1_master.c: 317:     I2C1_MasterFsm();
 29574  009142  EC89  F042         	call	_I2C1_MasterFsm	;wreg free
 29575  009146                     l19225:
 29576                           
 29577                           ; BSR set to: 2
 29578                           ;mcc_generated_files/i2c1_master.c: 314:     while(I2C1_Status.busy)
 29579  009146  A35F               	btfss	(_I2C1_Status+35)& (0+255),1,b
 29580  009148  0012               	return	
 29581  00914A  D7F9               	goto	l19221
 29582  00914C                     __end_of_I2C1_Poller:
 29583                           	callstack 0
 29584                           
 29585 ;; *************** function _I2C1_MasterWaitForEvent *****************
 29586 ;; Defined at:
 29587 ;;		line 650 in file "mcc_generated_files/i2c1_master.c"
 29588 ;; Parameters:    Size  Location     Type
 29589 ;;		None
 29590 ;; Auto vars:     Size  Location     Type
 29591 ;;		None
 29592 ;; Return value:  Size  Location     Type
 29593 ;;                  1    wreg      void 
 29594 ;; Registers used:
 29595 ;;		None
 29596 ;; Tracked objects:
 29597 ;;		On entry : 3F/2
 29598 ;;		On exit  : 3F/E
 29599 ;;		Unchanged: 0/0
 29600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29601 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29604 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29605 ;;Total ram usage:        0 bytes
 29606 ;; Hardware stack levels used: 1
 29607 ;; Hardware stack levels required when called: 4
 29608 ;; This function calls:
 29609 ;;		Nothing
 29610 ;; This function is called by:
 29611 ;;		_I2C1_Poller
 29612 ;; This function uses a non-reentrant model
 29613 ;;
 29614                           
 29615                           	psect	text136
 29616  00920E                     __ptext136:
 29617                           	callstack 0
 29618  00920E                     _I2C1_MasterWaitForEvent:
 29619                           	callstack 18
 29620                           
 29621                           ; BSR set to: 2
 29622                           ;mcc_generated_files/i2c1_master.c: 653:     {;mcc_generated_files/i2c1_master.c: 654:  
      +                                 if(PIR3bits.SSP1IF)
 29623                           
 29624                           ; BSR set to: 2
 29625                           ;incstack = 0
 29626                           ;mcc_generated_files/i2c1_master.c: 652:     while(1)
 29627  00920E  010E               	movlb	14	; () banked
 29628  009210  B1CD               	btfsc	205,0,b	;volatile
 29629  009212  0012               	return	
 29630  009214  D7FC               	goto	__ptext136
 29631  009216                     __end_of_I2C1_MasterWaitForEvent:
 29632                           	callstack 0
 29633                           
 29634 ;; *************** function _I2C1_MasterFsm *****************
 29635 ;; Defined at:
 29636 ;;		line 321 in file "mcc_generated_files/i2c1_master.c"
 29637 ;; Parameters:    Size  Location     Type
 29638 ;;		None
 29639 ;; Auto vars:     Size  Location     Type
 29640 ;;		None
 29641 ;; Return value:  Size  Location     Type
 29642 ;;                  1    wreg      void 
 29643 ;; Registers used:
 29644 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29645 ;; Tracked objects:
 29646 ;;		On entry : 3F/E
 29647 ;;		On exit  : 3F/2
 29648 ;;		Unchanged: 0/0
 29649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29650 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29651 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29652 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29653 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29654 ;;Total ram usage:        3 bytes
 29655 ;; Hardware stack levels used: 1
 29656 ;; Hardware stack levels required when called: 8
 29657 ;; This function calls:
 29658 ;;		_I2C1_DO_ADDRESS_NACK
 29659 ;;		_I2C1_DO_IDLE
 29660 ;;		_I2C1_DO_RCEN
 29661 ;;		_I2C1_DO_RESET
 29662 ;;		_I2C1_DO_RX
 29663 ;;		_I2C1_DO_RX_ACK
 29664 ;;		_I2C1_DO_RX_NACK_RESTART
 29665 ;;		_I2C1_DO_RX_NACK_STOP
 29666 ;;		_I2C1_DO_SEND_ADR_READ
 29667 ;;		_I2C1_DO_SEND_ADR_WRITE
 29668 ;;		_I2C1_DO_SEND_RESTART
 29669 ;;		_I2C1_DO_SEND_RESTART_READ
 29670 ;;		_I2C1_DO_SEND_RESTART_WRITE
 29671 ;;		_I2C1_DO_SEND_STOP
 29672 ;;		_I2C1_DO_TX
 29673 ;;		_I2C1_DO_TX_EMPTY
 29674 ;;		_I2C1_MasterClearIrq
 29675 ;;		_I2C1_MasterIsNack
 29676 ;; This function is called by:
 29677 ;;		_I2C1_Poller
 29678 ;; This function uses a non-reentrant model
 29679 ;;
 29680                           
 29681                           	psect	text137
 29682  008512                     __ptext137:
 29683                           	callstack 0
 29684  008512                     _I2C1_MasterFsm:
 29685                           	callstack 14
 29686                           
 29687                           ; BSR set to: 14
 29688                           ;mcc_generated_files/i2c1_master.c: 323:     I2C1_MasterClearIrq();
 29689                           
 29690                           ; BSR set to: 14
 29691                           ;incstack = 0
 29692  008512  EC3A  F049         	call	_I2C1_MasterClearIrq	;wreg free
 29693                           
 29694                           ; BSR set to: 14
 29695                           ;mcc_generated_files/i2c1_master.c: 325:     if(I2C1_Status.addressNackCheck && I2C1_Mas
      +                          terIsNack())
 29696  008516  0102               	movlb	2	; () banked
 29697  008518  A15F               	btfss	(_I2C1_Status+35)& (0+255),0,b
 29698  00851A  D007               	goto	l19215
 29699                           
 29700                           ; BSR set to: 2
 29701  00851C  ECBB  F048         	call	_I2C1_MasterIsNack	;wreg free
 29702  008520  0900               	iorlw	0
 29703  008522  B4D8               	btfsc	status,2,c
 29704  008524  D002               	goto	l19215
 29705                           
 29706                           ; BSR set to: 2
 29707                           ;mcc_generated_files/i2c1_master.c: 326:     {;mcc_generated_files/i2c1_master.c: 327:  
      +                                 I2C1_Status.state = I2C1_ADDRESS_NACK;
 29708  008526  0E0F               	movlw	15
 29709  008528  6F5D               	movwf	(_I2C1_Status+33)& (0+255),b
 29710  00852A                     l19215:
 29711                           
 29712                           ; BSR set to: 2
 29713                           ;mcc_generated_files/i2c1_master.c: 329:     I2C1_Status.state = i2c1_fsmStateTable[I2C1
      +                          _Status.state]();
 29714  00852A  515D               	movf	(_I2C1_Status+33)& (0+255),w,b
 29715  00852C  0D02               	mullw	2
 29716  00852E  50F3               	movf	243,w,c
 29717  008530  0F01               	addlw	low _i2c1_fsmStateTable
 29718  008532  6E1D               	movwf	??_I2C1_MasterFsm^0,c
 29719  008534  C01D  FFF6         	movff	??_I2C1_MasterFsm,tblptrl
 29720  008538                     	if	1	;There is more than 1 active tblptr byte
 29721  008538  0E0F               	movlw	high __smallconst
 29722  00853A  6EF7               	movwf	tblptrh,c
 29723  00853C                     	endif
 29724  00853C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 29725  00853C  6AF8               	clrf	tblptru,c
 29726  00853E                     	endif
 29727  00853E                     	if	0	;tblptru may be non-zero
 29728  00853E                     	endif
 29729  00853E  0009               	tblrd		*+
 29730  008540  CFF5 F01E          	movff	tablat,??_I2C1_MasterFsm+1
 29731  008544  0009               	tblrd		*+
 29732  008546  CFF5 F01F          	movff	tablat,??_I2C1_MasterFsm+2
 29733  00854A  D801               	call	u21988
 29734  00854C  D009               	goto	u21989
 29735  00854E                     u21988:
 29736  00854E  0005               	push	
 29737  008550  6EFA               	movwf	pclath,c
 29738  008552  501E               	movf	(??_I2C1_MasterFsm+1)^0,w,c
 29739  008554  6EFD               	movwf	tosl,c
 29740  008556  501F               	movf	(??_I2C1_MasterFsm+2)^0,w,c
 29741  008558  6EFE               	movwf	tosh,c
 29742  00855A  6AFF               	clrf	tosu,c
 29743  00855C  50FA               	movf	pclath,w,c
 29744  00855E  0012               	return		;indir
 29745  008560                     u21989:
 29746  008560  0102               	movlb	2	; () banked
 29747  008562  6F5D               	movwf	(_I2C1_Status+33)& (0+255),b
 29748                           
 29749                           ; BSR set to: 2
 29750  008564  0012               	return		;funcret
 29751  008566                     __end_of_I2C1_MasterFsm:
 29752                           	callstack 0
 29753                           
 29754 ;; *************** function _I2C1_DO_ADDRESS_NACK *****************
 29755 ;; Defined at:
 29756 ;;		line 500 in file "mcc_generated_files/i2c1_master.c"
 29757 ;; Parameters:    Size  Location     Type
 29758 ;;		None
 29759 ;; Auto vars:     Size  Location     Type
 29760 ;;		None
 29761 ;; Return value:  Size  Location     Type
 29762 ;;                  1    wreg      enum E10442
 29763 ;; Registers used:
 29764 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 29765 ;; Tracked objects:
 29766 ;;		On entry : 3F/2
 29767 ;;		On exit  : 0/0
 29768 ;;		Unchanged: 0/0
 29769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29771 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29772 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29773 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29774 ;;Total ram usage:        2 bytes
 29775 ;; Hardware stack levels used: 1
 29776 ;; Hardware stack levels required when called: 7
 29777 ;; This function calls:
 29778 ;;		Absolute function
 29779 ;;		_I2C1_CallbackReturnReset
 29780 ;;		_I2C1_CallbackReturnStop
 29781 ;;		_I2C1_DO_SEND_RESTART
 29782 ;;		_I2C1_DO_SEND_STOP
 29783 ;;		_rd1RegCompleteHandler
 29784 ;;		_rd1RegCompleteHandler@i2c1_master_example$F500
 29785 ;;		_rd2RegCompleteHandler
 29786 ;;		_rd2RegCompleteHandler@i2c1_master_example$F511
 29787 ;;		_rdBlkRegCompleteHandler
 29788 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F535
 29789 ;;		_wr1RegCompleteHandler
 29790 ;;		_wr1RegCompleteHandler@i2c1_master_example$F517
 29791 ;;		_wr2RegCompleteHandler
 29792 ;;		_wr2RegCompleteHandler@i2c1_master_example$F523
 29793 ;; This function is called by:
 29794 ;;		_I2C1_MasterFsm
 29795 ;; This function uses a non-reentrant model
 29796 ;;
 29797                           
 29798                           	psect	text138
 29799  0086A6                     __ptext138:
 29800                           	callstack 0
 29801  0086A6                     _I2C1_DO_ADDRESS_NACK:
 29802                           	callstack 14
 29803                           
 29804                           ; BSR set to: 2
 29805                           ;mcc_generated_files/i2c1_master.c: 502:     I2C1_Status.addressNackCheck = 0;
 29806                           
 29807                           ; BSR set to: 2
 29808                           ;incstack = 0
 29809  0086A6  915F               	bcf	(_I2C1_Status+35)& (0+255),0,b
 29810                           
 29811                           ; BSR set to: 2
 29812                           ;mcc_generated_files/i2c1_master.c: 503:     I2C1_Status.error = I2C1_FAIL;
 29813  0086A8  0E02               	movlw	2
 29814  0086AA  6F5E               	movwf	(_I2C1_Status+34)& (0+255),b
 29815                           
 29816                           ;mcc_generated_files/i2c1_master.c: 504:     switch(I2C1_Status.callbackTable[I2C1_ADDR_
      +                          NACK](I2C1_Status.callbackPayload[I2C1_ADDR_NACK]))
 29817  0086AC  D006               	goto	l19199
 29818  0086AE                     l19189:
 29819                           
 29820                           ;mcc_generated_files/i2c1_master.c: 508:             return I2C1_DO_SEND_RESTART();
 29821  0086AE  EC1B  F049         	call	_I2C1_DO_SEND_RESTART	;wreg free
 29822  0086B2  0012               	return	
 29823  0086B4                     l19193:
 29824                           
 29825                           ;mcc_generated_files/i2c1_master.c: 510:             return I2C1_DO_SEND_STOP();
 29826  0086B4  EC17  F049         	call	_I2C1_DO_SEND_STOP	;wreg free
 29827  0086B8  0012               	return	
 29828  0086BA                     l19199:
 29829                           
 29830                           ; BSR set to: 2
 29831  0086BA  C24C  F019         	movff	_I2C1_Status+16,I2C1_CallbackReturnReset@funPtr
 29832  0086BE  C24D  F01A         	movff	_I2C1_Status+17,I2C1_CallbackReturnReset@funPtr+1
 29833  0086C2  D801               	call	u21948
 29834  0086C4  D009               	goto	u21949
 29835  0086C6                     u21948:
 29836  0086C6  0005               	push	
 29837  0086C8  6EFA               	movwf	pclath,c
 29838  0086CA  5140               	movf	(_I2C1_Status+4)& (0+255),w,b
 29839  0086CC  6EFD               	movwf	tosl,c
 29840  0086CE  5141               	movf	(_I2C1_Status+5)& (0+255),w,b
 29841  0086D0  6EFE               	movwf	tosh,c
 29842  0086D2  6AFF               	clrf	tosu,c
 29843  0086D4  50FA               	movf	pclath,w,c
 29844  0086D6  0012               	return		;indir
 29845  0086D8                     u21949:
 29846  0086D8  6E1B               	movwf	??_I2C1_DO_ADDRESS_NACK^0,c
 29847  0086DA  6A1C               	clrf	(??_I2C1_DO_ADDRESS_NACK+1)^0,c
 29848                           
 29849                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 29850                           ; Switch size 1, requested type "simple"
 29851                           ; Number of cases is 1, Range of values is 0 to 0
 29852                           ; switch strategies available:
 29853                           ; Name         Instructions Cycles
 29854                           ; simple_byte            4     3 (average)
 29855                           ;	Chosen strategy is simple_byte
 29856  0086DC  501C               	movf	(??_I2C1_DO_ADDRESS_NACK+1)^0,w,c
 29857  0086DE  0A00               	xorlw	0	; case 0
 29858  0086E0  A4D8               	btfss	status,2,c
 29859  0086E2  D7E8               	goto	l19193
 29860                           
 29861                           ; Switch size 1, requested type "simple"
 29862                           ; Number of cases is 2, Range of values is 2 to 3
 29863                           ; switch strategies available:
 29864                           ; Name         Instructions Cycles
 29865                           ; simple_byte            7     4 (average)
 29866                           ;	Chosen strategy is simple_byte
 29867  0086E4  501B               	movf	??_I2C1_DO_ADDRESS_NACK^0,w,c
 29868  0086E6  0A02               	xorlw	2	; case 2
 29869  0086E8  B4D8               	btfsc	status,2,c
 29870  0086EA  D7E1               	goto	l19189
 29871  0086EC  0A01               	xorlw	1	; case 3
 29872  0086EE  B4D8               	btfsc	status,2,c
 29873  0086F0  D7DE               	goto	l19189
 29874  0086F2  D7E0               	goto	l19193
 29875  0086F4                     __end_of_I2C1_DO_ADDRESS_NACK:
 29876                           	callstack 0
 29877                           
 29878 ;; *************** function _I2C1_DO_RESET *****************
 29879 ;; Defined at:
 29880 ;;		line 494 in file "mcc_generated_files/i2c1_master.c"
 29881 ;; Parameters:    Size  Location     Type
 29882 ;;		None
 29883 ;; Auto vars:     Size  Location     Type
 29884 ;;		None
 29885 ;; Return value:  Size  Location     Type
 29886 ;;                  1    wreg      enum E10442
 29887 ;; Registers used:
 29888 ;;		wreg, status,2
 29889 ;; Tracked objects:
 29890 ;;		On entry : 3F/2
 29891 ;;		On exit  : 3F/2
 29892 ;;		Unchanged: 0/0
 29893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29894 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29895 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29896 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29897 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29898 ;;Total ram usage:        0 bytes
 29899 ;; Hardware stack levels used: 1
 29900 ;; Hardware stack levels required when called: 4
 29901 ;; This function calls:
 29902 ;;		Nothing
 29903 ;; This function is called by:
 29904 ;;		_I2C1_MasterFsm
 29905 ;; This function uses a non-reentrant model
 29906 ;;
 29907                           
 29908                           	psect	text139
 29909  0091E8                     __ptext139:
 29910                           	callstack 0
 29911  0091E8                     _I2C1_DO_RESET:
 29912                           	callstack 17
 29913                           
 29914                           ; BSR set to: 2
 29915                           ;mcc_generated_files/i2c1_master.c: 496:     I2C1_Status.busy = 0;
 29916                           
 29917                           ;incstack = 0
 29918  0091E8  935F               	bcf	(_I2C1_Status+35)& (0+255),1,b
 29919                           
 29920                           ; BSR set to: 2
 29921                           ;mcc_generated_files/i2c1_master.c: 497:     I2C1_Status.error = I2C1_NOERR;
 29922  0091EA  0E00               	movlw	0
 29923  0091EC  6F5E               	movwf	(_I2C1_Status+34)& (0+255),b
 29924                           
 29925                           ; BSR set to: 2
 29926                           ;mcc_generated_files/i2c1_master.c: 498:     return I2C1_RESET;
 29927  0091EE  0E0E               	movlw	14
 29928                           
 29929                           ; BSR set to: 2
 29930  0091F0  0012               	return		;funcret
 29931  0091F2                     __end_of_I2C1_DO_RESET:
 29932                           	callstack 0
 29933                           
 29934 ;; *************** function _I2C1_DO_RX_NACK_RESTART *****************
 29935 ;; Defined at:
 29936 ;;		line 488 in file "mcc_generated_files/i2c1_master.c"
 29937 ;; Parameters:    Size  Location     Type
 29938 ;;		None
 29939 ;; Auto vars:     Size  Location     Type
 29940 ;;		None
 29941 ;; Return value:  Size  Location     Type
 29942 ;;                  1    wreg      enum E10442
 29943 ;; Registers used:
 29944 ;;		wreg, cstack
 29945 ;; Tracked objects:
 29946 ;;		On entry : 0/2
 29947 ;;		On exit  : 0/0
 29948 ;;		Unchanged: 0/0
 29949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29950 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29951 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29952 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29953 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29954 ;;Total ram usage:        0 bytes
 29955 ;; Hardware stack levels used: 1
 29956 ;; Hardware stack levels required when called: 5
 29957 ;; This function calls:
 29958 ;;		_I2C1_MasterSendNack
 29959 ;; This function is called by:
 29960 ;;		_I2C1_DO_RX
 29961 ;;		_I2C1_MasterFsm
 29962 ;; This function uses a non-reentrant model
 29963 ;;
 29964                           
 29965                           	psect	text140
 29966  009216                     __ptext140:
 29967                           	callstack 0
 29968  009216                     _I2C1_DO_RX_NACK_RESTART:
 29969                           	callstack 16
 29970                           
 29971                           ;mcc_generated_files/i2c1_master.c: 490:     I2C1_MasterSendNack();
 29972                           
 29973                           ; BSR set to: 2
 29974                           ;incstack = 0
 29975  009216  EC37  F049         	call	_I2C1_MasterSendNack	;wreg free
 29976                           
 29977                           ;mcc_generated_files/i2c1_master.c: 491:     return I2C1_SEND_RESTART;
 29978  00921A  0E09               	movlw	9
 29979  00921C  0012               	return		;funcret
 29980  00921E                     __end_of_I2C1_DO_RX_NACK_RESTART:
 29981                           	callstack 0
 29982                           
 29983 ;; *************** function _I2C1_DO_RX_NACK_STOP *****************
 29984 ;; Defined at:
 29985 ;;		line 482 in file "mcc_generated_files/i2c1_master.c"
 29986 ;; Parameters:    Size  Location     Type
 29987 ;;		None
 29988 ;; Auto vars:     Size  Location     Type
 29989 ;;		None
 29990 ;; Return value:  Size  Location     Type
 29991 ;;                  1    wreg      enum E10442
 29992 ;; Registers used:
 29993 ;;		wreg, cstack
 29994 ;; Tracked objects:
 29995 ;;		On entry : 0/2
 29996 ;;		On exit  : 0/0
 29997 ;;		Unchanged: 0/0
 29998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30000 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30002 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30003 ;;Total ram usage:        0 bytes
 30004 ;; Hardware stack levels used: 1
 30005 ;; Hardware stack levels required when called: 5
 30006 ;; This function calls:
 30007 ;;		_I2C1_MasterSendNack
 30008 ;; This function is called by:
 30009 ;;		_I2C1_DO_RX
 30010 ;;		_I2C1_MasterFsm
 30011 ;; This function uses a non-reentrant model
 30012 ;;
 30013                           
 30014                           	psect	text141
 30015  00921E                     __ptext141:
 30016                           	callstack 0
 30017  00921E                     _I2C1_DO_RX_NACK_STOP:
 30018                           	callstack 16
 30019                           
 30020                           ;mcc_generated_files/i2c1_master.c: 484:     I2C1_MasterSendNack();
 30021                           
 30022                           ;incstack = 0
 30023  00921E  EC37  F049         	call	_I2C1_MasterSendNack	;wreg free
 30024                           
 30025                           ;mcc_generated_files/i2c1_master.c: 485:     return I2C1_SEND_STOP;
 30026  009222  0E0A               	movlw	10
 30027  009224  0012               	return		;funcret
 30028  009226                     __end_of_I2C1_DO_RX_NACK_STOP:
 30029                           	callstack 0
 30030                           
 30031 ;; *************** function _I2C1_DO_RX_ACK *****************
 30032 ;; Defined at:
 30033 ;;		line 475 in file "mcc_generated_files/i2c1_master.c"
 30034 ;; Parameters:    Size  Location     Type
 30035 ;;		None
 30036 ;; Auto vars:     Size  Location     Type
 30037 ;;		None
 30038 ;; Return value:  Size  Location     Type
 30039 ;;                  1    wreg      enum E10442
 30040 ;; Registers used:
 30041 ;;		wreg, cstack
 30042 ;; Tracked objects:
 30043 ;;		On entry : 3F/2
 30044 ;;		On exit  : 3F/2
 30045 ;;		Unchanged: 3F/0
 30046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30047 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30048 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30049 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30050 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30051 ;;Total ram usage:        0 bytes
 30052 ;; Hardware stack levels used: 1
 30053 ;; Hardware stack levels required when called: 5
 30054 ;; This function calls:
 30055 ;;		_I2C1_MasterSendAck
 30056 ;; This function is called by:
 30057 ;;		_I2C1_MasterFsm
 30058 ;; This function uses a non-reentrant model
 30059 ;;
 30060                           
 30061                           	psect	text142
 30062  009226                     __ptext142:
 30063                           	callstack 0
 30064  009226                     _I2C1_DO_RX_ACK:
 30065                           	callstack 16
 30066                           
 30067                           ; BSR set to: 2
 30068                           ;mcc_generated_files/i2c1_master.c: 477:     I2C1_MasterSendAck();
 30069                           
 30070                           ;incstack = 0
 30071  009226  EC34  F049         	call	_I2C1_MasterSendAck	;wreg free
 30072                           
 30073                           ; BSR set to: 2
 30074                           ;mcc_generated_files/i2c1_master.c: 478:     return I2C1_RCEN;
 30075  00922A  0E05               	movlw	5
 30076                           
 30077                           ; BSR set to: 2
 30078  00922C  0012               	return		;funcret
 30079  00922E                     __end_of_I2C1_DO_RX_ACK:
 30080                           	callstack 0
 30081                           
 30082 ;; *************** function _I2C1_DO_SEND_STOP *****************
 30083 ;; Defined at:
 30084 ;;		line 469 in file "mcc_generated_files/i2c1_master.c"
 30085 ;; Parameters:    Size  Location     Type
 30086 ;;		None
 30087 ;; Auto vars:     Size  Location     Type
 30088 ;;		None
 30089 ;; Return value:  Size  Location     Type
 30090 ;;                  1    wreg      enum E10442
 30091 ;; Registers used:
 30092 ;;		wreg, cstack
 30093 ;; Tracked objects:
 30094 ;;		On entry : 0/2
 30095 ;;		On exit  : 0/0
 30096 ;;		Unchanged: 0/0
 30097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30098 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30099 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30101 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30102 ;;Total ram usage:        0 bytes
 30103 ;; Hardware stack levels used: 1
 30104 ;; Hardware stack levels required when called: 5
 30105 ;; This function calls:
 30106 ;;		_I2C1_MasterStop
 30107 ;; This function is called by:
 30108 ;;		_I2C1_DO_TX
 30109 ;;		_I2C1_DO_TX_EMPTY
 30110 ;;		_I2C1_DO_ADDRESS_NACK
 30111 ;;		_I2C1_MasterFsm
 30112 ;; This function uses a non-reentrant model
 30113 ;;
 30114                           
 30115                           	psect	text143
 30116  00922E                     __ptext143:
 30117                           	callstack 0
 30118  00922E                     _I2C1_DO_SEND_STOP:
 30119                           	callstack 15
 30120                           
 30121                           ;mcc_generated_files/i2c1_master.c: 471:     I2C1_MasterStop();
 30122                           
 30123                           ; BSR set to: 2
 30124                           ;incstack = 0
 30125  00922E  EC52  F049         	call	_I2C1_MasterStop	;wreg free
 30126                           
 30127                           ;mcc_generated_files/i2c1_master.c: 472:     return I2C1_IDLE;
 30128  009232  0E00               	movlw	0
 30129  009234  0012               	return		;funcret
 30130  009236                     __end_of_I2C1_DO_SEND_STOP:
 30131                           	callstack 0
 30132                           
 30133 ;; *************** function _I2C1_DO_SEND_RESTART *****************
 30134 ;; Defined at:
 30135 ;;		line 463 in file "mcc_generated_files/i2c1_master.c"
 30136 ;; Parameters:    Size  Location     Type
 30137 ;;		None
 30138 ;; Auto vars:     Size  Location     Type
 30139 ;;		None
 30140 ;; Return value:  Size  Location     Type
 30141 ;;                  1    wreg      enum E10442
 30142 ;; Registers used:
 30143 ;;		wreg, cstack
 30144 ;; Tracked objects:
 30145 ;;		On entry : 0/2
 30146 ;;		On exit  : 0/0
 30147 ;;		Unchanged: 0/0
 30148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30149 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30150 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30152 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30153 ;;Total ram usage:        0 bytes
 30154 ;; Hardware stack levels used: 1
 30155 ;; Hardware stack levels required when called: 5
 30156 ;; This function calls:
 30157 ;;		_I2C1_MasterEnableRestart
 30158 ;; This function is called by:
 30159 ;;		_I2C1_DO_TX_EMPTY
 30160 ;;		_I2C1_DO_ADDRESS_NACK
 30161 ;;		_I2C1_MasterFsm
 30162 ;; This function uses a non-reentrant model
 30163 ;;
 30164                           
 30165                           	psect	text144
 30166  009236                     __ptext144:
 30167                           	callstack 0
 30168  009236                     _I2C1_DO_SEND_RESTART:
 30169                           	callstack 15
 30170                           
 30171                           ;mcc_generated_files/i2c1_master.c: 465:     I2C1_MasterEnableRestart();
 30172                           
 30173                           ;incstack = 0
 30174  009236  EC54  F049         	call	_I2C1_MasterEnableRestart	;wreg free
 30175                           
 30176                           ;mcc_generated_files/i2c1_master.c: 466:     return I2C1_SEND_ADR_READ;
 30177  00923A  0E01               	movlw	1
 30178  00923C  0012               	return		;funcret
 30179  00923E                     __end_of_I2C1_DO_SEND_RESTART:
 30180                           	callstack 0
 30181                           
 30182 ;; *************** function _I2C1_DO_SEND_RESTART_WRITE *****************
 30183 ;; Defined at:
 30184 ;;		line 456 in file "mcc_generated_files/i2c1_master.c"
 30185 ;; Parameters:    Size  Location     Type
 30186 ;;		None
 30187 ;; Auto vars:     Size  Location     Type
 30188 ;;		None
 30189 ;; Return value:  Size  Location     Type
 30190 ;;                  1    wreg      enum E10442
 30191 ;; Registers used:
 30192 ;;		wreg, cstack
 30193 ;; Tracked objects:
 30194 ;;		On entry : 0/2
 30195 ;;		On exit  : 0/0
 30196 ;;		Unchanged: 0/0
 30197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30198 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30199 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30201 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30202 ;;Total ram usage:        0 bytes
 30203 ;; Hardware stack levels used: 1
 30204 ;; Hardware stack levels required when called: 5
 30205 ;; This function calls:
 30206 ;;		_I2C1_MasterEnableRestart
 30207 ;; This function is called by:
 30208 ;;		_I2C1_DO_TX
 30209 ;;		_I2C1_MasterFsm
 30210 ;; This function uses a non-reentrant model
 30211 ;;
 30212                           
 30213                           	psect	text145
 30214  00923E                     __ptext145:
 30215                           	callstack 0
 30216  00923E                     _I2C1_DO_SEND_RESTART_WRITE:
 30217                           	callstack 15
 30218                           
 30219                           ;mcc_generated_files/i2c1_master.c: 458:     I2C1_MasterEnableRestart();
 30220                           
 30221                           ;incstack = 0
 30222  00923E  EC54  F049         	call	_I2C1_MasterEnableRestart	;wreg free
 30223                           
 30224                           ;mcc_generated_files/i2c1_master.c: 459:     return I2C1_SEND_ADR_WRITE;
 30225  009242  0E02               	movlw	2
 30226  009244  0012               	return		;funcret
 30227  009246                     __end_of_I2C1_DO_SEND_RESTART_WRITE:
 30228                           	callstack 0
 30229                           
 30230 ;; *************** function _I2C1_DO_SEND_RESTART_READ *****************
 30231 ;; Defined at:
 30232 ;;		line 450 in file "mcc_generated_files/i2c1_master.c"
 30233 ;; Parameters:    Size  Location     Type
 30234 ;;		None
 30235 ;; Auto vars:     Size  Location     Type
 30236 ;;		None
 30237 ;; Return value:  Size  Location     Type
 30238 ;;                  1    wreg      enum E10442
 30239 ;; Registers used:
 30240 ;;		wreg, cstack
 30241 ;; Tracked objects:
 30242 ;;		On entry : 0/2
 30243 ;;		On exit  : 0/0
 30244 ;;		Unchanged: 0/0
 30245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30246 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30247 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30249 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30250 ;;Total ram usage:        0 bytes
 30251 ;; Hardware stack levels used: 1
 30252 ;; Hardware stack levels required when called: 5
 30253 ;; This function calls:
 30254 ;;		_I2C1_MasterEnableRestart
 30255 ;; This function is called by:
 30256 ;;		_I2C1_DO_TX
 30257 ;;		_I2C1_MasterFsm
 30258 ;; This function uses a non-reentrant model
 30259 ;;
 30260                           
 30261                           	psect	text146
 30262  009246                     __ptext146:
 30263                           	callstack 0
 30264  009246                     _I2C1_DO_SEND_RESTART_READ:
 30265                           	callstack 15
 30266                           
 30267                           ;mcc_generated_files/i2c1_master.c: 452:     I2C1_MasterEnableRestart();
 30268                           
 30269                           ;incstack = 0
 30270  009246  EC54  F049         	call	_I2C1_MasterEnableRestart	;wreg free
 30271                           
 30272                           ;mcc_generated_files/i2c1_master.c: 453:     return I2C1_SEND_ADR_READ;
 30273  00924A  0E01               	movlw	1
 30274  00924C  0012               	return		;funcret
 30275  00924E                     __end_of_I2C1_DO_SEND_RESTART_READ:
 30276                           	callstack 0
 30277                           
 30278 ;; *************** function _I2C1_DO_RCEN *****************
 30279 ;; Defined at:
 30280 ;;		line 402 in file "mcc_generated_files/i2c1_master.c"
 30281 ;; Parameters:    Size  Location     Type
 30282 ;;		None
 30283 ;; Auto vars:     Size  Location     Type
 30284 ;;		None
 30285 ;; Return value:  Size  Location     Type
 30286 ;;                  1    wreg      enum E10442
 30287 ;; Registers used:
 30288 ;;		wreg, cstack
 30289 ;; Tracked objects:
 30290 ;;		On entry : 3F/2
 30291 ;;		On exit  : 3F/2
 30292 ;;		Unchanged: 0/0
 30293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30294 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30295 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30297 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30298 ;;Total ram usage:        0 bytes
 30299 ;; Hardware stack levels used: 1
 30300 ;; Hardware stack levels required when called: 5
 30301 ;; This function calls:
 30302 ;;		_I2C1_MasterStartRx
 30303 ;; This function is called by:
 30304 ;;		_I2C1_MasterFsm
 30305 ;; This function uses a non-reentrant model
 30306 ;;
 30307                           
 30308                           	psect	text147
 30309  0091F2                     __ptext147:
 30310                           	callstack 0
 30311  0091F2                     _I2C1_DO_RCEN:
 30312                           	callstack 16
 30313                           
 30314                           ; BSR set to: 2
 30315                           ;mcc_generated_files/i2c1_master.c: 404:     I2C1_Status.addressNackCheck = 0;
 30316                           
 30317                           ;incstack = 0
 30318  0091F2  915F               	bcf	(_I2C1_Status+35)& (0+255),0,b
 30319                           
 30320                           ; BSR set to: 2
 30321                           ;mcc_generated_files/i2c1_master.c: 405:     I2C1_MasterStartRx();
 30322  0091F4  EC4C  F049         	call	_I2C1_MasterStartRx	;wreg free
 30323                           
 30324                           ; BSR set to: 2
 30325                           ;mcc_generated_files/i2c1_master.c: 406:     return I2C1_RX;
 30326  0091F8  0E04               	movlw	4
 30327                           
 30328                           ; BSR set to: 2
 30329  0091FA  0012               	return		;funcret
 30330  0091FC                     __end_of_I2C1_DO_RCEN:
 30331                           	callstack 0
 30332                           
 30333 ;; *************** function _I2C1_DO_RX *****************
 30334 ;; Defined at:
 30335 ;;		line 378 in file "mcc_generated_files/i2c1_master.c"
 30336 ;; Parameters:    Size  Location     Type
 30337 ;;		None
 30338 ;; Auto vars:     Size  Location     Type
 30339 ;;		None
 30340 ;; Return value:  Size  Location     Type
 30341 ;;                  1    wreg      enum E10442
 30342 ;; Registers used:
 30343 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 30344 ;; Tracked objects:
 30345 ;;		On entry : 3F/2
 30346 ;;		On exit  : 0/0
 30347 ;;		Unchanged: 0/0
 30348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30349 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30350 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30351 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30352 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30353 ;;Total ram usage:        2 bytes
 30354 ;; Hardware stack levels used: 1
 30355 ;; Hardware stack levels required when called: 7
 30356 ;; This function calls:
 30357 ;;		Absolute function
 30358 ;;		_I2C1_CallbackReturnReset
 30359 ;;		_I2C1_CallbackReturnStop
 30360 ;;		_I2C1_DO_RX_NACK_RESTART
 30361 ;;		_I2C1_DO_RX_NACK_STOP
 30362 ;;		_I2C1_MasterGetRxData
 30363 ;;		_I2C1_MasterSendAck
 30364 ;;		_rd1RegCompleteHandler
 30365 ;;		_rd1RegCompleteHandler@i2c1_master_example$F500
 30366 ;;		_rd2RegCompleteHandler
 30367 ;;		_rd2RegCompleteHandler@i2c1_master_example$F511
 30368 ;;		_rdBlkRegCompleteHandler
 30369 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F535
 30370 ;;		_wr1RegCompleteHandler
 30371 ;;		_wr1RegCompleteHandler@i2c1_master_example$F517
 30372 ;;		_wr2RegCompleteHandler
 30373 ;;		_wr2RegCompleteHandler@i2c1_master_example$F523
 30374 ;; This function is called by:
 30375 ;;		_I2C1_MasterFsm
 30376 ;; This function uses a non-reentrant model
 30377 ;;
 30378                           
 30379                           	psect	text148
 30380  007C40                     __ptext148:
 30381                           	callstack 0
 30382  007C40                     _I2C1_DO_RX:
 30383                           	callstack 14
 30384                           
 30385                           ; BSR set to: 2
 30386                           ;mcc_generated_files/i2c1_master.c: 380:     *I2C1_Status.data_ptr++ = I2C1_MasterGetRxD
      +                          ata();
 30387                           
 30388                           ; BSR set to: 2
 30389                           ;incstack = 0
 30390  007C40  EC4A  F049         	call	_I2C1_MasterGetRxData	;wreg free
 30391  007C44  C259  FFD9         	movff	_I2C1_Status+29,fsr2l
 30392  007C48  C25A  FFDA         	movff	_I2C1_Status+30,fsr2h
 30393  007C4C  6EDF               	movwf	indf2,c
 30394                           
 30395                           ; BSR set to: 2
 30396  007C4E  4B59               	infsnz	(_I2C1_Status+29)& (0+255),f,b
 30397  007C50  2B5A               	incf	(_I2C1_Status+30)& (0+255),f,b
 30398                           
 30399                           ; BSR set to: 2
 30400                           ;mcc_generated_files/i2c1_master.c: 381:     if(--I2C1_Status.data_length)
 30401  007C52  075B               	decf	(_I2C1_Status+31)& (0+255),f,b
 30402  007C54  A0D8               	btfss	status,0,c
 30403  007C56  075C               	decf	(_I2C1_Status+32)& (0+255),f,b
 30404  007C58  515B               	movf	(_I2C1_Status+31)& (0+255),w,b
 30405  007C5A  115C               	iorwf	(_I2C1_Status+32)& (0+255),w,b
 30406  007C5C  B4D8               	btfsc	status,2,c
 30407  007C5E  D004               	goto	l690
 30408                           
 30409                           ; BSR set to: 2
 30410                           ;mcc_generated_files/i2c1_master.c: 382:     {;mcc_generated_files/i2c1_master.c: 383:  
      +                                 I2C1_MasterSendAck();
 30411  007C60  EC34  F049         	call	_I2C1_MasterSendAck	;wreg free
 30412                           
 30413                           ; BSR set to: 2
 30414                           ;mcc_generated_files/i2c1_master.c: 384:         return I2C1_RCEN;
 30415  007C64  0E05               	movlw	5
 30416  007C66  0012               	return	
 30417  007C68                     l690:
 30418                           
 30419                           ; BSR set to: 2
 30420                           ;mcc_generated_files/i2c1_master.c: 387:     {;mcc_generated_files/i2c1_master.c: 388:  
      +                                 I2C1_Status.bufferFree = 1;
 30421  007C68  875F               	bsf	(_I2C1_Status+35)& (0+255),3,b
 30422                           
 30423                           ;mcc_generated_files/i2c1_master.c: 389:         switch(I2C1_Status.callbackTable[I2C1_D
      +                          ATA_COMPLETE](I2C1_Status.callbackPayload[I2C1_DATA_COMPLETE]))
 30424  007C6A  D006               	goto	l19133
 30425  007C6C                     l19123:
 30426                           
 30427                           ;mcc_generated_files/i2c1_master.c: 393:                 return I2C1_DO_RX_NACK_RESTART(
      +                          );
 30428  007C6C  EC0B  F049         	call	_I2C1_DO_RX_NACK_RESTART	;wreg free
 30429  007C70  0012               	return	
 30430  007C72                     l19127:
 30431                           
 30432                           ;mcc_generated_files/i2c1_master.c: 397:                 return I2C1_DO_RX_NACK_STOP();
 30433  007C72  EC0F  F049         	call	_I2C1_DO_RX_NACK_STOP	;wreg free
 30434  007C76  0012               	return	
 30435  007C78                     l19133:
 30436                           
 30437                           ; BSR set to: 2
 30438  007C78  C248  F019         	movff	_I2C1_Status+12,I2C1_CallbackReturnReset@funPtr
 30439  007C7C  C249  F01A         	movff	_I2C1_Status+13,I2C1_CallbackReturnReset@funPtr+1
 30440  007C80  D801               	call	u21928
 30441  007C82  D009               	goto	u21929
 30442  007C84                     u21928:
 30443  007C84  0005               	push	
 30444  007C86  6EFA               	movwf	pclath,c
 30445  007C88  513C               	movf	_I2C1_Status& (0+255),w,b
 30446  007C8A  6EFD               	movwf	tosl,c
 30447  007C8C  513D               	movf	(_I2C1_Status+1)& (0+255),w,b
 30448  007C8E  6EFE               	movwf	tosh,c
 30449  007C90  6AFF               	clrf	tosu,c
 30450  007C92  50FA               	movf	pclath,w,c
 30451  007C94  0012               	return		;indir
 30452  007C96                     u21929:
 30453  007C96  6E1B               	movwf	??_I2C1_DO_RX^0,c
 30454  007C98  6A1C               	clrf	(??_I2C1_DO_RX+1)^0,c
 30455                           
 30456                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 30457                           ; Switch size 1, requested type "simple"
 30458                           ; Number of cases is 1, Range of values is 0 to 0
 30459                           ; switch strategies available:
 30460                           ; Name         Instructions Cycles
 30461                           ; simple_byte            4     3 (average)
 30462                           ;	Chosen strategy is simple_byte
 30463  007C9A  501C               	movf	(??_I2C1_DO_RX+1)^0,w,c
 30464  007C9C  0A00               	xorlw	0	; case 0
 30465  007C9E  A4D8               	btfss	status,2,c
 30466  007CA0  D7E8               	goto	l19127
 30467                           
 30468                           ; Switch size 1, requested type "simple"
 30469                           ; Number of cases is 4, Range of values is 1 to 4
 30470                           ; switch strategies available:
 30471                           ; Name         Instructions Cycles
 30472                           ; simple_byte           13     7 (average)
 30473                           ;	Chosen strategy is simple_byte
 30474  007CA2  501B               	movf	??_I2C1_DO_RX^0,w,c
 30475  007CA4  0A01               	xorlw	1	; case 1
 30476  007CA6  B4D8               	btfsc	status,2,c
 30477  007CA8  D7E4               	goto	l19127
 30478  007CAA  0A03               	xorlw	3	; case 2
 30479  007CAC  B4D8               	btfsc	status,2,c
 30480  007CAE  D7DE               	goto	l19123
 30481  007CB0  0A01               	xorlw	1	; case 3
 30482  007CB2  B4D8               	btfsc	status,2,c
 30483  007CB4  D7DB               	goto	l19123
 30484  007CB6  0A07               	xorlw	7	; case 4
 30485  007CB8  D7DC               	goto	l19127
 30486  007CBA                     __end_of_I2C1_DO_RX:
 30487                           	callstack 0
 30488                           
 30489 ;; *************** function _I2C1_DO_TX *****************
 30490 ;; Defined at:
 30491 ;;		line 354 in file "mcc_generated_files/i2c1_master.c"
 30492 ;; Parameters:    Size  Location     Type
 30493 ;;		None
 30494 ;; Auto vars:     Size  Location     Type
 30495 ;;		None
 30496 ;; Return value:  Size  Location     Type
 30497 ;;                  1    wreg      enum E10442
 30498 ;; Registers used:
 30499 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 30500 ;; Tracked objects:
 30501 ;;		On entry : 3F/2
 30502 ;;		On exit  : 0/0
 30503 ;;		Unchanged: 0/0
 30504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30505 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30506 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30507 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30508 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30509 ;;Total ram usage:        2 bytes
 30510 ;; Hardware stack levels used: 1
 30511 ;; Hardware stack levels required when called: 7
 30512 ;; This function calls:
 30513 ;;		Absolute function
 30514 ;;		_I2C1_CallbackReturnReset
 30515 ;;		_I2C1_CallbackReturnStop
 30516 ;;		_I2C1_DO_SEND_RESTART_READ
 30517 ;;		_I2C1_DO_SEND_RESTART_WRITE
 30518 ;;		_I2C1_DO_SEND_STOP
 30519 ;;		_I2C1_MasterIsNack
 30520 ;;		_I2C1_MasterSendTxData
 30521 ;;		_rd1RegCompleteHandler
 30522 ;;		_rd1RegCompleteHandler@i2c1_master_example$F500
 30523 ;;		_rd2RegCompleteHandler
 30524 ;;		_rd2RegCompleteHandler@i2c1_master_example$F511
 30525 ;;		_rdBlkRegCompleteHandler
 30526 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F535
 30527 ;;		_wr1RegCompleteHandler
 30528 ;;		_wr1RegCompleteHandler@i2c1_master_example$F517
 30529 ;;		_wr2RegCompleteHandler
 30530 ;;		_wr2RegCompleteHandler@i2c1_master_example$F523
 30531 ;; This function is called by:
 30532 ;;		_I2C1_MasterFsm
 30533 ;; This function uses a non-reentrant model
 30534 ;;
 30535                           
 30536                           	psect	text149
 30537  0077A0                     __ptext149:
 30538                           	callstack 0
 30539  0077A0                     _I2C1_DO_TX:
 30540                           	callstack 14
 30541                           
 30542                           ; BSR set to: 2
 30543                           ;mcc_generated_files/i2c1_master.c: 356:     if(I2C1_MasterIsNack())
 30544                           
 30545                           ;incstack = 0
 30546  0077A0  ECBB  F048         	call	_I2C1_MasterIsNack	;wreg free
 30547  0077A4  0900               	iorlw	0
 30548  0077A6  A4D8               	btfss	status,2,c
 30549  0077A8  D00A               	goto	l19093
 30550  0077AA  D02A               	goto	l674
 30551  0077AC                     l19079:
 30552                           
 30553                           ;mcc_generated_files/i2c1_master.c: 361:                 return I2C1_DO_SEND_RESTART_REA
      +                          D();
 30554  0077AC  EC23  F049         	call	_I2C1_DO_SEND_RESTART_READ	;wreg free
 30555  0077B0  0012               	return	
 30556  0077B2                     l19083:
 30557                           
 30558                           ;mcc_generated_files/i2c1_master.c: 363:                   return I2C1_DO_SEND_RESTART_W
      +                          RITE();
 30559  0077B2  EC1F  F049         	call	_I2C1_DO_SEND_RESTART_WRITE	;wreg free
 30560  0077B6  0012               	return	
 30561  0077B8                     l19087:
 30562                           
 30563                           ;mcc_generated_files/i2c1_master.c: 367:                 return I2C1_DO_SEND_STOP();
 30564  0077B8  EC17  F049         	call	_I2C1_DO_SEND_STOP	;wreg free
 30565  0077BC  0012               	return	
 30566  0077BE                     l19093:
 30567                           
 30568                           ; BSR set to: 2
 30569  0077BE  C24E  F019         	movff	_I2C1_Status+18,I2C1_CallbackReturnReset@funPtr
 30570  0077C2  C24F  F01A         	movff	_I2C1_Status+19,I2C1_CallbackReturnReset@funPtr+1
 30571  0077C6  D801               	call	u21898
 30572  0077C8  D009               	goto	u21899
 30573  0077CA                     u21898:
 30574  0077CA  0005               	push	
 30575  0077CC  6EFA               	movwf	pclath,c
 30576  0077CE  5142               	movf	(_I2C1_Status+6)& (0+255),w,b
 30577  0077D0  6EFD               	movwf	tosl,c
 30578  0077D2  5143               	movf	(_I2C1_Status+7)& (0+255),w,b
 30579  0077D4  6EFE               	movwf	tosh,c
 30580  0077D6  6AFF               	clrf	tosu,c
 30581  0077D8  50FA               	movf	pclath,w,c
 30582  0077DA  0012               	return		;indir
 30583  0077DC                     u21899:
 30584  0077DC  6E1B               	movwf	??_I2C1_DO_TX^0,c
 30585  0077DE  6A1C               	clrf	(??_I2C1_DO_TX+1)^0,c
 30586                           
 30587                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 30588                           ; Switch size 1, requested type "simple"
 30589                           ; Number of cases is 1, Range of values is 0 to 0
 30590                           ; switch strategies available:
 30591                           ; Name         Instructions Cycles
 30592                           ; simple_byte            4     3 (average)
 30593                           ;	Chosen strategy is simple_byte
 30594  0077E0  501C               	movf	(??_I2C1_DO_TX+1)^0,w,c
 30595  0077E2  0A00               	xorlw	0	; case 0
 30596  0077E4  A4D8               	btfss	status,2,c
 30597  0077E6  D7E8               	goto	l19087
 30598                           
 30599                           ; Switch size 1, requested type "simple"
 30600                           ; Number of cases is 4, Range of values is 1 to 4
 30601                           ; switch strategies available:
 30602                           ; Name         Instructions Cycles
 30603                           ; simple_byte           13     7 (average)
 30604                           ;	Chosen strategy is simple_byte
 30605  0077E8  501B               	movf	??_I2C1_DO_TX^0,w,c
 30606  0077EA  0A01               	xorlw	1	; case 1
 30607  0077EC  B4D8               	btfsc	status,2,c
 30608  0077EE  D7E4               	goto	l19087
 30609  0077F0  0A03               	xorlw	3	; case 2
 30610  0077F2  B4D8               	btfsc	status,2,c
 30611  0077F4  D7DB               	goto	l19079
 30612  0077F6  0A01               	xorlw	1	; case 3
 30613  0077F8  B4D8               	btfsc	status,2,c
 30614  0077FA  D7DB               	goto	l19083
 30615  0077FC  0A07               	xorlw	7	; case 4
 30616  0077FE  D7DC               	goto	l19087
 30617  007800                     l674:
 30618                           
 30619                           ; BSR set to: 2
 30620                           ;mcc_generated_files/i2c1_master.c: 371:     {;mcc_generated_files/i2c1_master.c: 372:  
      +                                 I2C1_Status.addressNackCheck = 0;
 30621  007800  915F               	bcf	(_I2C1_Status+35)& (0+255),0,b
 30622                           
 30623                           ; BSR set to: 2
 30624                           ;mcc_generated_files/i2c1_master.c: 373:         I2C1_MasterSendTxData(*I2C1_Status.data
      +                          _ptr++);
 30625  007802  C259  FFD9         	movff	_I2C1_Status+29,fsr2l
 30626  007806  C25A  FFDA         	movff	_I2C1_Status+30,fsr2h
 30627  00780A  4B59               	infsnz	(_I2C1_Status+29)& (0+255),f,b
 30628  00780C  2B5A               	incf	(_I2C1_Status+30)& (0+255),f,b
 30629  00780E  50DF               	movf	indf2,w,c
 30630  007810  EC27  F049         	call	_I2C1_MasterSendTxData
 30631                           
 30632                           ;mcc_generated_files/i2c1_master.c: 374:         return (--I2C1_Status.data_length)?I2C1
      +                          _TX:I2C1_TX_EMPTY;
 30633  007814  0102               	movlb	2	; () banked
 30634  007816  075B               	decf	(_I2C1_Status+31)& (0+255),f,b
 30635  007818  A0D8               	btfss	status,0,c
 30636  00781A  075C               	decf	(_I2C1_Status+32)& (0+255),f,b
 30637  00781C  515B               	movf	(_I2C1_Status+31)& (0+255),w,b
 30638  00781E  115C               	iorwf	(_I2C1_Status+32)& (0+255),w,b
 30639  007820  A4D8               	btfss	status,2,c
 30640  007822  D002               	goto	l19101
 30641                           
 30642                           ; BSR set to: 2
 30643  007824  0E06               	movlw	6
 30644  007826  0012               	return	
 30645  007828                     l19101:
 30646                           
 30647                           ; BSR set to: 2
 30648  007828  0E03               	movlw	3
 30649  00782A  0012               	return		;funcret
 30650  00782C                     __end_of_I2C1_DO_TX:
 30651                           	callstack 0
 30652                           
 30653 ;; *************** function _I2C1_DO_SEND_ADR_WRITE *****************
 30654 ;; Defined at:
 30655 ;;		line 347 in file "mcc_generated_files/i2c1_master.c"
 30656 ;; Parameters:    Size  Location     Type
 30657 ;;		None
 30658 ;; Auto vars:     Size  Location     Type
 30659 ;;		None
 30660 ;; Return value:  Size  Location     Type
 30661 ;;                  1    wreg      enum E10442
 30662 ;; Registers used:
 30663 ;;		wreg, status,2, status,0, cstack
 30664 ;; Tracked objects:
 30665 ;;		On entry : 3F/2
 30666 ;;		On exit  : 0/0
 30667 ;;		Unchanged: 0/0
 30668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30669 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30670 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30672 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30673 ;;Total ram usage:        0 bytes
 30674 ;; Hardware stack levels used: 1
 30675 ;; Hardware stack levels required when called: 5
 30676 ;; This function calls:
 30677 ;;		_I2C1_MasterSendTxData
 30678 ;; This function is called by:
 30679 ;;		_I2C1_MasterFsm
 30680 ;; This function uses a non-reentrant model
 30681 ;;
 30682                           
 30683                           	psect	text150
 30684  00915A                     __ptext150:
 30685                           	callstack 0
 30686  00915A                     _I2C1_DO_SEND_ADR_WRITE:
 30687                           	callstack 16
 30688                           
 30689                           ; BSR set to: 2
 30690                           ;mcc_generated_files/i2c1_master.c: 349:     I2C1_Status.addressNackCheck = 1;
 30691                           
 30692                           ;incstack = 0
 30693  00915A  815F               	bsf	(_I2C1_Status+35)& (0+255),0,b
 30694                           
 30695                           ; BSR set to: 2
 30696                           ;mcc_generated_files/i2c1_master.c: 350:     I2C1_MasterSendTxData((uint8_t) (I2C1_Statu
      +                          s.address << 1));
 30697  00915C  5158               	movf	(_I2C1_Status+28)& (0+255),w,b
 30698  00915E  2558               	addwf	(_I2C1_Status+28)& (0+255),w,b
 30699  009160  EC27  F049         	call	_I2C1_MasterSendTxData
 30700                           
 30701                           ;mcc_generated_files/i2c1_master.c: 351:     return I2C1_TX;
 30702  009164  0E03               	movlw	3
 30703  009166  0012               	return		;funcret
 30704  009168                     __end_of_I2C1_DO_SEND_ADR_WRITE:
 30705                           	callstack 0
 30706                           
 30707 ;; *************** function _I2C1_DO_SEND_ADR_READ *****************
 30708 ;; Defined at:
 30709 ;;		line 340 in file "mcc_generated_files/i2c1_master.c"
 30710 ;; Parameters:    Size  Location     Type
 30711 ;;		None
 30712 ;; Auto vars:     Size  Location     Type
 30713 ;;		None
 30714 ;; Return value:  Size  Location     Type
 30715 ;;                  1    wreg      enum E10442
 30716 ;; Registers used:
 30717 ;;		wreg, status,0, cstack
 30718 ;; Tracked objects:
 30719 ;;		On entry : 3F/2
 30720 ;;		On exit  : 0/0
 30721 ;;		Unchanged: 0/0
 30722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30723 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30724 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30726 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30727 ;;Total ram usage:        0 bytes
 30728 ;; Hardware stack levels used: 1
 30729 ;; Hardware stack levels required when called: 5
 30730 ;; This function calls:
 30731 ;;		_I2C1_MasterSendTxData
 30732 ;; This function is called by:
 30733 ;;		_I2C1_MasterFsm
 30734 ;; This function uses a non-reentrant model
 30735 ;;
 30736                           
 30737                           	psect	text151
 30738  009168                     __ptext151:
 30739                           	callstack 0
 30740  009168                     _I2C1_DO_SEND_ADR_READ:
 30741                           	callstack 16
 30742                           
 30743                           ; BSR set to: 2
 30744                           ;mcc_generated_files/i2c1_master.c: 342:     I2C1_Status.addressNackCheck = 1;
 30745                           
 30746                           ;incstack = 0
 30747  009168  815F               	bsf	(_I2C1_Status+35)& (0+255),0,b
 30748                           
 30749                           ; BSR set to: 2
 30750                           ;mcc_generated_files/i2c1_master.c: 343:     I2C1_MasterSendTxData((uint8_t) (I2C1_Statu
      +                          s.address << 1 | 1));
 30751  00916A  80D8               	bsf	status,0,c
 30752  00916C  3558               	rlcf	(_I2C1_Status+28)& (0+255),w,b
 30753  00916E  EC27  F049         	call	_I2C1_MasterSendTxData
 30754                           
 30755                           ;mcc_generated_files/i2c1_master.c: 344:     return I2C1_RCEN;
 30756  009172  0E05               	movlw	5
 30757  009174  0012               	return		;funcret
 30758  009176                     __end_of_I2C1_DO_SEND_ADR_READ:
 30759                           	callstack 0
 30760                           
 30761 ;; *************** function _I2C1_DO_IDLE *****************
 30762 ;; Defined at:
 30763 ;;		line 333 in file "mcc_generated_files/i2c1_master.c"
 30764 ;; Parameters:    Size  Location     Type
 30765 ;;		None
 30766 ;; Auto vars:     Size  Location     Type
 30767 ;;		None
 30768 ;; Return value:  Size  Location     Type
 30769 ;;                  1    wreg      enum E10442
 30770 ;; Registers used:
 30771 ;;		wreg, status,2
 30772 ;; Tracked objects:
 30773 ;;		On entry : 3F/2
 30774 ;;		On exit  : 3F/2
 30775 ;;		Unchanged: 0/0
 30776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30778 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30780 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30781 ;;Total ram usage:        0 bytes
 30782 ;; Hardware stack levels used: 1
 30783 ;; Hardware stack levels required when called: 4
 30784 ;; This function calls:
 30785 ;;		Nothing
 30786 ;; This function is called by:
 30787 ;;		_I2C1_MasterFsm
 30788 ;; This function uses a non-reentrant model
 30789 ;;
 30790                           
 30791                           	psect	text152
 30792  0091FC                     __ptext152:
 30793                           	callstack 0
 30794  0091FC                     _I2C1_DO_IDLE:
 30795                           	callstack 17
 30796                           
 30797                           ; BSR set to: 2
 30798                           ;mcc_generated_files/i2c1_master.c: 335:     I2C1_Status.busy = 0;
 30799                           
 30800                           ;incstack = 0
 30801  0091FC  935F               	bcf	(_I2C1_Status+35)& (0+255),1,b
 30802                           
 30803                           ; BSR set to: 2
 30804                           ;mcc_generated_files/i2c1_master.c: 336:     I2C1_Status.error = I2C1_NOERR;
 30805  0091FE  0E00               	movlw	0
 30806  009200  6F5E               	movwf	(_I2C1_Status+34)& (0+255),b
 30807                           
 30808                           ; BSR set to: 2
 30809                           ;mcc_generated_files/i2c1_master.c: 337:     return I2C1_RESET;
 30810  009202  0E0E               	movlw	14
 30811                           
 30812                           ; BSR set to: 2
 30813  009204  0012               	return		;funcret
 30814  009206                     __end_of_I2C1_DO_IDLE:
 30815                           	callstack 0
 30816                           
 30817 ;; *************** function _I2C1_DO_TX_EMPTY *****************
 30818 ;; Defined at:
 30819 ;;		line 409 in file "mcc_generated_files/i2c1_master.c"
 30820 ;; Parameters:    Size  Location     Type
 30821 ;;		None
 30822 ;; Auto vars:     Size  Location     Type
 30823 ;;		None
 30824 ;; Return value:  Size  Location     Type
 30825 ;;                  1    wreg      enum E10442
 30826 ;; Registers used:
 30827 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 30828 ;; Tracked objects:
 30829 ;;		On entry : 3F/2
 30830 ;;		On exit  : 0/0
 30831 ;;		Unchanged: 0/0
 30832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30833 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30834 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30835 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30836 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30837 ;;Total ram usage:        2 bytes
 30838 ;; Hardware stack levels used: 1
 30839 ;; Hardware stack levels required when called: 7
 30840 ;; This function calls:
 30841 ;;		Absolute function
 30842 ;;		_I2C1_CallbackReturnReset
 30843 ;;		_I2C1_CallbackReturnStop
 30844 ;;		_I2C1_DO_SEND_RESTART
 30845 ;;		_I2C1_DO_SEND_STOP
 30846 ;;		_I2C1_MasterSetIrq
 30847 ;;		_rd1RegCompleteHandler
 30848 ;;		_rd1RegCompleteHandler@i2c1_master_example$F500
 30849 ;;		_rd2RegCompleteHandler
 30850 ;;		_rd2RegCompleteHandler@i2c1_master_example$F511
 30851 ;;		_rdBlkRegCompleteHandler
 30852 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F535
 30853 ;;		_wr1RegCompleteHandler
 30854 ;;		_wr1RegCompleteHandler@i2c1_master_example$F517
 30855 ;;		_wr2RegCompleteHandler
 30856 ;;		_wr2RegCompleteHandler@i2c1_master_example$F523
 30857 ;; This function is called by:
 30858 ;;		_I2C1_MasterFsm
 30859 ;; This function uses a non-reentrant model
 30860 ;;
 30861                           
 30862                           	psect	text153
 30863  0081EC                     __ptext153:
 30864                           	callstack 0
 30865  0081EC                     _I2C1_DO_TX_EMPTY:
 30866                           	callstack 14
 30867                           
 30868                           ; BSR set to: 2
 30869                           ;mcc_generated_files/i2c1_master.c: 411:     I2C1_Status.bufferFree = 1;
 30870                           
 30871                           ; BSR set to: 2
 30872                           ;incstack = 0
 30873  0081EC  875F               	bsf	(_I2C1_Status+35)& (0+255),3,b
 30874                           
 30875                           ;mcc_generated_files/i2c1_master.c: 412:     switch(I2C1_Status.callbackTable[I2C1_DATA_
      +                          COMPLETE](I2C1_Status.callbackPayload[I2C1_DATA_COMPLETE]))
 30876  0081EE  D00A               	goto	l19165
 30877  0081F0                     l19149:
 30878                           
 30879                           ;mcc_generated_files/i2c1_master.c: 416:             return I2C1_DO_SEND_RESTART();
 30880  0081F0  EC1B  F049         	call	_I2C1_DO_SEND_RESTART	;wreg free
 30881  0081F4  0012               	return	
 30882  0081F6                     l19153:
 30883                           
 30884                           ;mcc_generated_files/i2c1_master.c: 418:             I2C1_MasterSetIrq();
 30885  0081F6  EC31  F049         	call	_I2C1_MasterSetIrq	;wreg free
 30886                           
 30887                           ; BSR set to: 14
 30888                           ;mcc_generated_files/i2c1_master.c: 419:             return I2C1_TX;
 30889  0081FA  0E03               	movlw	3
 30890  0081FC  0012               	return	
 30891  0081FE                     l19159:
 30892                           
 30893                           ;mcc_generated_files/i2c1_master.c: 422:             return I2C1_DO_SEND_STOP();
 30894  0081FE  EC17  F049         	call	_I2C1_DO_SEND_STOP	;wreg free
 30895  008202  0012               	return	
 30896  008204                     l19165:
 30897                           
 30898                           ; BSR set to: 2
 30899  008204  C248  F019         	movff	_I2C1_Status+12,I2C1_CallbackReturnReset@funPtr
 30900  008208  C249  F01A         	movff	_I2C1_Status+13,I2C1_CallbackReturnReset@funPtr+1
 30901  00820C  D801               	call	u21938
 30902  00820E  D009               	goto	u21939
 30903  008210                     u21938:
 30904  008210  0005               	push	
 30905  008212  6EFA               	movwf	pclath,c
 30906  008214  513C               	movf	_I2C1_Status& (0+255),w,b
 30907  008216  6EFD               	movwf	tosl,c
 30908  008218  513D               	movf	(_I2C1_Status+1)& (0+255),w,b
 30909  00821A  6EFE               	movwf	tosh,c
 30910  00821C  6AFF               	clrf	tosu,c
 30911  00821E  50FA               	movf	pclath,w,c
 30912  008220  0012               	return		;indir
 30913  008222                     u21939:
 30914  008222  6E1B               	movwf	??_I2C1_DO_TX_EMPTY^0,c
 30915  008224  6A1C               	clrf	(??_I2C1_DO_TX_EMPTY+1)^0,c
 30916                           
 30917                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 30918                           ; Switch size 1, requested type "simple"
 30919                           ; Number of cases is 1, Range of values is 0 to 0
 30920                           ; switch strategies available:
 30921                           ; Name         Instructions Cycles
 30922                           ; simple_byte            4     3 (average)
 30923                           ;	Chosen strategy is simple_byte
 30924  008226  501C               	movf	(??_I2C1_DO_TX_EMPTY+1)^0,w,c
 30925  008228  0A00               	xorlw	0	; case 0
 30926  00822A  A4D8               	btfss	status,2,c
 30927  00822C  D7E8               	goto	l19159
 30928                           
 30929                           ; Switch size 1, requested type "simple"
 30930                           ; Number of cases is 4, Range of values is 1 to 4
 30931                           ; switch strategies available:
 30932                           ; Name         Instructions Cycles
 30933                           ; simple_byte           13     7 (average)
 30934                           ;	Chosen strategy is simple_byte
 30935  00822E  501B               	movf	??_I2C1_DO_TX_EMPTY^0,w,c
 30936  008230  0A01               	xorlw	1	; case 1
 30937  008232  B4D8               	btfsc	status,2,c
 30938  008234  D7E4               	goto	l19159
 30939  008236  0A03               	xorlw	3	; case 2
 30940  008238  B4D8               	btfsc	status,2,c
 30941  00823A  D7DA               	goto	l19149
 30942  00823C  0A01               	xorlw	1	; case 3
 30943  00823E  B4D8               	btfsc	status,2,c
 30944  008240  D7D7               	goto	l19149
 30945  008242  0A07               	xorlw	7	; case 4
 30946  008244  B4D8               	btfsc	status,2,c
 30947  008246  D7D7               	goto	l19153
 30948  008248  D7DA               	goto	l19159
 30949  00824A                     __end_of_I2C1_DO_TX_EMPTY:
 30950                           	callstack 0
 30951                           
 30952 ;; *************** function _I2C1_MasterSetIrq *****************
 30953 ;; Defined at:
 30954 ;;		line 645 in file "mcc_generated_files/i2c1_master.c"
 30955 ;; Parameters:    Size  Location     Type
 30956 ;;		None
 30957 ;; Auto vars:     Size  Location     Type
 30958 ;;		None
 30959 ;; Return value:  Size  Location     Type
 30960 ;;                  1    wreg      void 
 30961 ;; Registers used:
 30962 ;;		None
 30963 ;; Tracked objects:
 30964 ;;		On entry : 0/2
 30965 ;;		On exit  : 3F/E
 30966 ;;		Unchanged: 0/0
 30967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30968 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30969 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30971 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30972 ;;Total ram usage:        0 bytes
 30973 ;; Hardware stack levels used: 1
 30974 ;; Hardware stack levels required when called: 4
 30975 ;; This function calls:
 30976 ;;		Nothing
 30977 ;; This function is called by:
 30978 ;;		_I2C1_DO_TX_EMPTY
 30979 ;; This function uses a non-reentrant model
 30980 ;;
 30981                           
 30982                           	psect	text154
 30983  009262                     __ptext154:
 30984                           	callstack 0
 30985  009262                     _I2C1_MasterSetIrq:
 30986                           	callstack 16
 30987                           
 30988                           ;mcc_generated_files/i2c1_master.c: 647:     PIR3bits.SSP1IF = 1;
 30989                           
 30990                           ;incstack = 0
 30991  009262  010E               	movlb	14	; () banked
 30992  009264  81CD               	bsf	205,0,b	;volatile
 30993                           
 30994                           ; BSR set to: 14
 30995  009266  0012               	return		;funcret
 30996  009268                     __end_of_I2C1_MasterSetIrq:
 30997                           	callstack 0
 30998                           
 30999 ;; *************** function _I2C1_MasterIsNack *****************
 31000 ;; Defined at:
 31001 ;;		line 598 in file "mcc_generated_files/i2c1_master.c"
 31002 ;; Parameters:    Size  Location     Type
 31003 ;;		None
 31004 ;; Auto vars:     Size  Location     Type
 31005 ;;		None
 31006 ;; Return value:  Size  Location     Type
 31007 ;;                  1    wreg      _Bool 
 31008 ;; Registers used:
 31009 ;;		wreg
 31010 ;; Tracked objects:
 31011 ;;		On entry : 3F/2
 31012 ;;		On exit  : 3F/2
 31013 ;;		Unchanged: 3F/0
 31014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31015 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31016 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31017 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31018 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31019 ;;Total ram usage:        0 bytes
 31020 ;; Hardware stack levels used: 1
 31021 ;; Hardware stack levels required when called: 4
 31022 ;; This function calls:
 31023 ;;		Nothing
 31024 ;; This function is called by:
 31025 ;;		_I2C1_MasterFsm
 31026 ;;		_I2C1_DO_TX
 31027 ;; This function uses a non-reentrant model
 31028 ;;
 31029                           
 31030                           	psect	text155
 31031  009176                     __ptext155:
 31032                           	callstack 0
 31033  009176                     _I2C1_MasterIsNack:
 31034                           	callstack 17
 31035                           
 31036                           ; BSR set to: 2
 31037                           ;mcc_generated_files/i2c1_master.c: 600:     return SSP1CON2bits.ACKSTAT;
 31038                           
 31039                           ; BSR set to: 14
 31040                           ;incstack = 0
 31041  009176  AC97               	btfss	151,6,c	;volatile
 31042  009178  D002               	goto	u21870
 31043  00917A  0E01               	movlw	1
 31044  00917C  0012               	return	
 31045  00917E                     u21870:
 31046  00917E  0E00               	movlw	0
 31047                           
 31048                           ; BSR set to: 2
 31049  009180  0012               	return		;funcret
 31050  009182                     __end_of_I2C1_MasterIsNack:
 31051                           	callstack 0
 31052                           
 31053 ;; *************** function _I2C1_MasterSendTxData *****************
 31054 ;; Defined at:
 31055 ;;		line 568 in file "mcc_generated_files/i2c1_master.c"
 31056 ;; Parameters:    Size  Location     Type
 31057 ;;  data            1    wreg     unsigned char 
 31058 ;; Auto vars:     Size  Location     Type
 31059 ;;  data            1   15[COMRAM] unsigned char 
 31060 ;; Return value:  Size  Location     Type
 31061 ;;                  1    wreg      void 
 31062 ;; Registers used:
 31063 ;;		wreg
 31064 ;; Tracked objects:
 31065 ;;		On entry : 3F/2
 31066 ;;		On exit  : 0/0
 31067 ;;		Unchanged: 0/0
 31068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31069 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31070 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31072 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31073 ;;Total ram usage:        1 bytes
 31074 ;; Hardware stack levels used: 1
 31075 ;; Hardware stack levels required when called: 4
 31076 ;; This function calls:
 31077 ;;		Nothing
 31078 ;; This function is called by:
 31079 ;;		_I2C1_DO_SEND_ADR_READ
 31080 ;;		_I2C1_DO_SEND_ADR_WRITE
 31081 ;;		_I2C1_DO_TX
 31082 ;; This function uses a non-reentrant model
 31083 ;;
 31084                           
 31085                           	psect	text156
 31086  00924E                     __ptext156:
 31087                           	callstack 0
 31088  00924E                     _I2C1_MasterSendTxData:
 31089                           	callstack 16
 31090                           
 31091                           ; BSR set to: 2
 31092                           ;incstack = 0
 31093                           ;I2C1_MasterSendTxData@data stored from wreg
 31094  00924E  6E10               	movwf	I2C1_MasterSendTxData@data^0,c
 31095                           
 31096                           ;mcc_generated_files/i2c1_master.c: 568: static __attribute__((inline)) void I2C1_Master
      +                          SendTxData(uint8_t data);mcc_generated_files/i2c1_master.c: 569: {;mcc_generated_files/i
      +                          2c1_master.c: 570:     SSP1BUF = data;
 31097  009250  C010  FF92         	movff	I2C1_MasterSendTxData@data,3986	;volatile
 31098  009254  0012               	return		;funcret
 31099  009256                     __end_of_I2C1_MasterSendTxData:
 31100                           	callstack 0
 31101                           
 31102 ;; *************** function _I2C1_MasterSendAck *****************
 31103 ;; Defined at:
 31104 ;;		line 603 in file "mcc_generated_files/i2c1_master.c"
 31105 ;; Parameters:    Size  Location     Type
 31106 ;;		None
 31107 ;; Auto vars:     Size  Location     Type
 31108 ;;		None
 31109 ;; Return value:  Size  Location     Type
 31110 ;;                  1    wreg      void 
 31111 ;; Registers used:
 31112 ;;		None
 31113 ;; Tracked objects:
 31114 ;;		On entry : 3F/2
 31115 ;;		On exit  : 3F/2
 31116 ;;		Unchanged: 3F/0
 31117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31118 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31119 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31121 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31122 ;;Total ram usage:        0 bytes
 31123 ;; Hardware stack levels used: 1
 31124 ;; Hardware stack levels required when called: 4
 31125 ;; This function calls:
 31126 ;;		Nothing
 31127 ;; This function is called by:
 31128 ;;		_I2C1_DO_RX
 31129 ;;		_I2C1_DO_RX_ACK
 31130 ;; This function uses a non-reentrant model
 31131 ;;
 31132                           
 31133                           	psect	text157
 31134  009268                     __ptext157:
 31135                           	callstack 0
 31136  009268                     _I2C1_MasterSendAck:
 31137                           	callstack 16
 31138                           
 31139                           ; BSR set to: 2
 31140                           ;mcc_generated_files/i2c1_master.c: 605:     SSP1CON2bits.ACKDT = 0;
 31141                           
 31142                           ;incstack = 0
 31143  009268  9A97               	bcf	151,5,c	;volatile
 31144                           
 31145                           ;mcc_generated_files/i2c1_master.c: 606:     SSP1CON2bits.ACKEN = 1;
 31146  00926A  8897               	bsf	151,4,c	;volatile
 31147                           
 31148                           ; BSR set to: 2
 31149  00926C  0012               	return		;funcret
 31150  00926E                     __end_of_I2C1_MasterSendAck:
 31151                           	callstack 0
 31152                           
 31153 ;; *************** function _I2C1_MasterGetRxData *****************
 31154 ;; Defined at:
 31155 ;;		line 563 in file "mcc_generated_files/i2c1_master.c"
 31156 ;; Parameters:    Size  Location     Type
 31157 ;;		None
 31158 ;; Auto vars:     Size  Location     Type
 31159 ;;		None
 31160 ;; Return value:  Size  Location     Type
 31161 ;;                  1    wreg      unsigned char 
 31162 ;; Registers used:
 31163 ;;		wreg, status,2
 31164 ;; Tracked objects:
 31165 ;;		On entry : 3F/2
 31166 ;;		On exit  : 3F/2
 31167 ;;		Unchanged: 3F/0
 31168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31169 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31172 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31173 ;;Total ram usage:        0 bytes
 31174 ;; Hardware stack levels used: 1
 31175 ;; Hardware stack levels required when called: 4
 31176 ;; This function calls:
 31177 ;;		Nothing
 31178 ;; This function is called by:
 31179 ;;		_I2C1_DO_RX
 31180 ;; This function uses a non-reentrant model
 31181 ;;
 31182                           
 31183                           	psect	text158
 31184  009294                     __ptext158:
 31185                           	callstack 0
 31186  009294                     _I2C1_MasterGetRxData:
 31187                           	callstack 16
 31188                           
 31189                           ; BSR set to: 2
 31190                           ;mcc_generated_files/i2c1_master.c: 565:     return SSP1BUF;
 31191                           
 31192                           ; BSR set to: 2
 31193                           ;incstack = 0
 31194  009294  5092               	movf	146,w,c	;volatile
 31195                           
 31196                           ; BSR set to: 2
 31197  009296  0012               	return		;funcret
 31198  009298                     __end_of_I2C1_MasterGetRxData:
 31199                           	callstack 0
 31200                           
 31201 ;; *************** function _I2C1_MasterSendNack *****************
 31202 ;; Defined at:
 31203 ;;		line 609 in file "mcc_generated_files/i2c1_master.c"
 31204 ;; Parameters:    Size  Location     Type
 31205 ;;		None
 31206 ;; Auto vars:     Size  Location     Type
 31207 ;;		None
 31208 ;; Return value:  Size  Location     Type
 31209 ;;                  1    wreg      void 
 31210 ;; Registers used:
 31211 ;;		None
 31212 ;; Tracked objects:
 31213 ;;		On entry : 0/2
 31214 ;;		On exit  : 0/0
 31215 ;;		Unchanged: 0/0
 31216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31220 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31221 ;;Total ram usage:        0 bytes
 31222 ;; Hardware stack levels used: 1
 31223 ;; Hardware stack levels required when called: 4
 31224 ;; This function calls:
 31225 ;;		Nothing
 31226 ;; This function is called by:
 31227 ;;		_I2C1_DO_RX_NACK_STOP
 31228 ;;		_I2C1_DO_RX_NACK_RESTART
 31229 ;; This function uses a non-reentrant model
 31230 ;;
 31231                           
 31232                           	psect	text159
 31233  00926E                     __ptext159:
 31234                           	callstack 0
 31235  00926E                     _I2C1_MasterSendNack:
 31236                           	callstack 16
 31237                           
 31238                           ;mcc_generated_files/i2c1_master.c: 611:     SSP1CON2bits.ACKDT = 1;
 31239                           
 31240                           ; BSR set to: 2
 31241                           ;incstack = 0
 31242  00926E  8A97               	bsf	151,5,c	;volatile
 31243                           
 31244                           ;mcc_generated_files/i2c1_master.c: 612:     SSP1CON2bits.ACKEN = 1;
 31245  009270  8897               	bsf	151,4,c	;volatile
 31246  009272  0012               	return		;funcret
 31247  009274                     __end_of_I2C1_MasterSendNack:
 31248                           	callstack 0
 31249                           
 31250 ;; *************** function _I2C1_MasterStartRx *****************
 31251 ;; Defined at:
 31252 ;;		line 583 in file "mcc_generated_files/i2c1_master.c"
 31253 ;; Parameters:    Size  Location     Type
 31254 ;;		None
 31255 ;; Auto vars:     Size  Location     Type
 31256 ;;		None
 31257 ;; Return value:  Size  Location     Type
 31258 ;;                  1    wreg      void 
 31259 ;; Registers used:
 31260 ;;		None
 31261 ;; Tracked objects:
 31262 ;;		On entry : 3F/2
 31263 ;;		On exit  : 3F/2
 31264 ;;		Unchanged: 3F/0
 31265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31269 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31270 ;;Total ram usage:        0 bytes
 31271 ;; Hardware stack levels used: 1
 31272 ;; Hardware stack levels required when called: 4
 31273 ;; This function calls:
 31274 ;;		Nothing
 31275 ;; This function is called by:
 31276 ;;		_I2C1_DO_RCEN
 31277 ;; This function uses a non-reentrant model
 31278 ;;
 31279                           
 31280                           	psect	text160
 31281  009298                     __ptext160:
 31282                           	callstack 0
 31283  009298                     _I2C1_MasterStartRx:
 31284                           	callstack 16
 31285                           
 31286                           ; BSR set to: 2
 31287                           ;mcc_generated_files/i2c1_master.c: 585:     SSP1CON2bits.RCEN = 1;
 31288                           
 31289                           ;incstack = 0
 31290  009298  8697               	bsf	151,3,c	;volatile
 31291                           
 31292                           ; BSR set to: 2
 31293  00929A  0012               	return		;funcret
 31294  00929C                     __end_of_I2C1_MasterStartRx:
 31295                           	callstack 0
 31296                           
 31297 ;; *************** function _I2C1_CallbackReturnReset *****************
 31298 ;; Defined at:
 31299 ;;		line 525 in file "mcc_generated_files/i2c1_master.c"
 31300 ;; Parameters:    Size  Location     Type
 31301 ;;  funPtr          2   24[COMRAM] PTR void 
 31302 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 31303 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 31304 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 31305 ;; Auto vars:     Size  Location     Type
 31306 ;;		None
 31307 ;; Return value:  Size  Location     Type
 31308 ;;                  1    wreg      enum E360
 31309 ;; Registers used:
 31310 ;;		wreg
 31311 ;; Tracked objects:
 31312 ;;		On entry : 3F/2
 31313 ;;		On exit  : 3F/2
 31314 ;;		Unchanged: 3F/0
 31315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31316 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31317 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31319 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31320 ;;Total ram usage:        2 bytes
 31321 ;; Hardware stack levels used: 1
 31322 ;; Hardware stack levels required when called: 4
 31323 ;; This function calls:
 31324 ;;		Nothing
 31325 ;; This function is called by:
 31326 ;;		_I2C1_Open
 31327 ;;		_I2C1_DO_TX
 31328 ;;		_I2C1_DO_RX
 31329 ;;		_I2C1_DO_TX_EMPTY
 31330 ;;		_I2C1_DO_ADDRESS_NACK
 31331 ;; This function uses a non-reentrant model
 31332 ;;
 31333                           
 31334                           	psect	text161
 31335  00929C                     __ptext161:
 31336                           	callstack 0
 31337  00929C                     _I2C1_CallbackReturnReset:
 31338                           	callstack 16
 31339                           
 31340                           ; BSR set to: 2
 31341                           ;mcc_generated_files/i2c1_master.c: 525: i2c1_operations_t I2C1_CallbackReturnReset(void
      +                           *funPtr);mcc_generated_files/i2c1_master.c: 526: {;mcc_generated_files/i2c1_master.c: 5
      +                          27:     return I2C1_RESET_LINK;
 31342                           
 31343                           ; BSR set to: 2
 31344                           ;incstack = 0
 31345  00929C  0E05               	movlw	5
 31346                           
 31347                           ; BSR set to: 2
 31348  00929E  0012               	return		;funcret
 31349  0092A0                     __end_of_I2C1_CallbackReturnReset:
 31350                           	callstack 0
 31351                           
 31352 ;; *************** function _I2C1_CallbackReturnStop *****************
 31353 ;; Defined at:
 31354 ;;		line 520 in file "mcc_generated_files/i2c1_master.c"
 31355 ;; Parameters:    Size  Location     Type
 31356 ;;  funPtr          2   24[COMRAM] PTR void 
 31357 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 31358 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 31359 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 31360 ;; Auto vars:     Size  Location     Type
 31361 ;;		None
 31362 ;; Return value:  Size  Location     Type
 31363 ;;                  1    wreg      enum E360
 31364 ;; Registers used:
 31365 ;;		wreg
 31366 ;; Tracked objects:
 31367 ;;		On entry : 3F/2
 31368 ;;		On exit  : 3F/2
 31369 ;;		Unchanged: 3F/0
 31370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31371 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31372 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31374 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31375 ;;Total ram usage:        2 bytes
 31376 ;; Hardware stack levels used: 1
 31377 ;; Hardware stack levels required when called: 4
 31378 ;; This function calls:
 31379 ;;		Nothing
 31380 ;; This function is called by:
 31381 ;;		_I2C1_Open
 31382 ;;		_I2C1_SetCallback
 31383 ;;		_I2C1_DO_TX
 31384 ;;		_I2C1_DO_RX
 31385 ;;		_I2C1_DO_TX_EMPTY
 31386 ;;		_I2C1_DO_ADDRESS_NACK
 31387 ;; This function uses a non-reentrant model
 31388 ;;
 31389                           
 31390                           	psect	text162
 31391  0092A0                     __ptext162:
 31392                           	callstack 0
 31393  0092A0                     _I2C1_CallbackReturnStop:
 31394                           	callstack 16
 31395                           
 31396                           ; BSR set to: 2
 31397                           ;mcc_generated_files/i2c1_master.c: 520: i2c1_operations_t I2C1_CallbackReturnStop(void 
      +                          *funPtr);mcc_generated_files/i2c1_master.c: 521: {;mcc_generated_files/i2c1_master.c: 52
      +                          2:     return I2C1_STOP;
 31398                           
 31399                           ; BSR set to: 2
 31400                           ;incstack = 0
 31401  0092A0  0E01               	movlw	1
 31402                           
 31403                           ; BSR set to: 2
 31404  0092A2  0012               	return		;funcret
 31405  0092A4                     __end_of_I2C1_CallbackReturnStop:
 31406                           	callstack 0
 31407                           
 31408 ;; *************** function _rdBlkRegCompleteHandler@i2c1_master_example$F535 *****************
 31409 ;; Defined at:
 31410 ;;		line 176 in file "mcc_generated_files/examples/i2c1_master_example.c"
 31411 ;; Parameters:    Size  Location     Type
 31412 ;;  ptr             2   24[COMRAM] PTR void 
 31413 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 31414 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 31415 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 31416 ;; Auto vars:     Size  Location     Type
 31417 ;;		None
 31418 ;; Return value:  Size  Location     Type
 31419 ;;                  1    wreg      enum E527
 31420 ;; Registers used:
 31421 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31422 ;; Tracked objects:
 31423 ;;		On entry : 3F/2
 31424 ;;		On exit  : 0/0
 31425 ;;		Unchanged: 0/0
 31426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31427 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31428 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31429 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31430 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31431 ;;Total ram usage:        2 bytes
 31432 ;; Hardware stack levels used: 1
 31433 ;; Hardware stack levels required when called: 6
 31434 ;; This function calls:
 31435 ;;		_I2C1_SetBuffer
 31436 ;;		_I2C1_SetDataCompleteCallback
 31437 ;; This function is called by:
 31438 ;;		_I2C1_DO_TX
 31439 ;;		_I2C1_DO_RX
 31440 ;;		_I2C1_DO_TX_EMPTY
 31441 ;;		_I2C1_DO_ADDRESS_NACK
 31442 ;; This function uses a non-reentrant model
 31443 ;;
 31444                           
 31445                           	psect	text163
 31446  0088D6                     __ptext163:
 31447                           	callstack 0
 31448  0088D6                     _rdBlkRegCompleteHandler@i2c1_master_example$F535:
 31449                           	callstack 14
 31450                           
 31451                           ; BSR set to: 2
 31452                           ;mcc_generated_files/examples/i2c1_master_example.c: 176: static i2c1_operations_t rdBlk
      +                          RegCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 177: {
      +                          ;mcc_generated_files/examples/i2c1_master_example.c: 178:     I2C1_SetBuffer(((i2c1_buff
      +                          er_t *)ptr)->data,((i2c1_buffer_t*)ptr)->len);
 31453                           
 31454                           ; BSR set to: 2
 31455                           ;incstack = 0
 31456  0088D6  EE20 F002          	lfsr	2,2
 31457  0088DA  5019               	movf	rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr^0,w,c
 31458  0088DC  26D9               	addwf	fsr2l,f,c
 31459  0088DE  501A               	movf	(rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr+1)^0,w,c
 31460  0088E0  22DA               	addwfc	fsr2h,f,c
 31461  0088E2  CFDE F010          	movff	postinc2,I2C1_SetBuffer@buffer
 31462  0088E6  CFDD F011          	movff	postdec2,I2C1_SetBuffer@buffer+1
 31463  0088EA  C019  FFD9         	movff	rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr,fsr2l
 31464  0088EE  C01A  FFDA         	movff	rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr+1,fsr2h
 31465  0088F2  CFDE F012          	movff	postinc2,I2C1_SetBuffer@bufferSize
 31466  0088F6  CFDD F013          	movff	postdec2,I2C1_SetBuffer@bufferSize+1
 31467  0088FA  EC04  F048         	call	_I2C1_SetBuffer	;wreg free
 31468                           
 31469                           ; BSR set to: 2
 31470                           ;mcc_generated_files/examples/i2c1_master_example.c: 179:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 31471  0088FE  0E00               	movlw	0
 31472  008900  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 31473  008902  0E00               	movlw	0
 31474  008904  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 31475  008906  0E00               	movlw	0
 31476  008908  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 31477  00890A  0E00               	movlw	0
 31478  00890C  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 31479  00890E  EC4D  F048         	call	_I2C1_SetDataCompleteCallback	;wreg free
 31480                           
 31481                           ;mcc_generated_files/examples/i2c1_master_example.c: 180:     return I2C1_RESTART_READ;
 31482  008912  0E02               	movlw	2
 31483  008914  0012               	return		;funcret
 31484  008916                     __end_of_rdBlkRegCompleteHandler@i2c1_master_example$F535:
 31485                           	callstack 0
 31486                           
 31487 ;; *************** function _wr1RegCompleteHandler@i2c1_master_example$F517 *****************
 31488 ;; Defined at:
 31489 ;;		line 162 in file "mcc_generated_files/examples/i2c1_master_example.c"
 31490 ;; Parameters:    Size  Location     Type
 31491 ;;  ptr             2   24[COMRAM] PTR void 
 31492 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 31493 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 31494 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 31495 ;; Auto vars:     Size  Location     Type
 31496 ;;		None
 31497 ;; Return value:  Size  Location     Type
 31498 ;;                  1    wreg      enum E527
 31499 ;; Registers used:
 31500 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31501 ;; Tracked objects:
 31502 ;;		On entry : 3F/2
 31503 ;;		On exit  : 0/0
 31504 ;;		Unchanged: 0/0
 31505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31506 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31509 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31510 ;;Total ram usage:        2 bytes
 31511 ;; Hardware stack levels used: 1
 31512 ;; Hardware stack levels required when called: 6
 31513 ;; This function calls:
 31514 ;;		_I2C1_SetBuffer
 31515 ;;		_I2C1_SetDataCompleteCallback
 31516 ;; This function is called by:
 31517 ;;		_I2C1_DO_TX
 31518 ;;		_I2C1_DO_RX
 31519 ;;		_I2C1_DO_TX_EMPTY
 31520 ;;		_I2C1_DO_ADDRESS_NACK
 31521 ;; This function uses a non-reentrant model
 31522 ;;
 31523                           
 31524                           	psect	text164
 31525  008BEA                     __ptext164:
 31526                           	callstack 0
 31527  008BEA                     _wr1RegCompleteHandler@i2c1_master_example$F517:
 31528                           	callstack 14
 31529                           
 31530                           ; BSR set to: 2
 31531                           ;mcc_generated_files/examples/i2c1_master_example.c: 162: static i2c1_operations_t wr1Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 163: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 164:     I2C1_SetBuffer(ptr,1);
 31532                           
 31533                           ;incstack = 0
 31534  008BEA  C019  F010         	movff	wr1RegCompleteHandler@i2c1_master_example$F517@ptr,I2C1_SetBuffer@buffer
 31535  008BEE  C01A  F011         	movff	wr1RegCompleteHandler@i2c1_master_example$F517@ptr+1,I2C1_SetBuffer@buffer+1
 31536  008BF2  0E00               	movlw	0
 31537  008BF4  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 31538  008BF6  0E01               	movlw	1
 31539  008BF8  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 31540  008BFA  EC04  F048         	call	_I2C1_SetBuffer	;wreg free
 31541                           
 31542                           ; BSR set to: 2
 31543                           ;mcc_generated_files/examples/i2c1_master_example.c: 165:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 31544  008BFE  0E00               	movlw	0
 31545  008C00  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 31546  008C02  0E00               	movlw	0
 31547  008C04  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 31548  008C06  0E00               	movlw	0
 31549  008C08  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 31550  008C0A  0E00               	movlw	0
 31551  008C0C  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 31552  008C0E  EC4D  F048         	call	_I2C1_SetDataCompleteCallback	;wreg free
 31553                           
 31554                           ;mcc_generated_files/examples/i2c1_master_example.c: 166:     return I2C1_CONTINUE;
 31555  008C12  0E04               	movlw	4
 31556  008C14  0012               	return		;funcret
 31557  008C16                     __end_of_wr1RegCompleteHandler@i2c1_master_example$F517:
 31558                           	callstack 0
 31559                           
 31560 ;; *************** function _rd2RegCompleteHandler@i2c1_master_example$F511 *****************
 31561 ;; Defined at:
 31562 ;;		line 155 in file "mcc_generated_files/examples/i2c1_master_example.c"
 31563 ;; Parameters:    Size  Location     Type
 31564 ;;  ptr             2   24[COMRAM] PTR void 
 31565 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 31566 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 31567 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 31568 ;; Auto vars:     Size  Location     Type
 31569 ;;		None
 31570 ;; Return value:  Size  Location     Type
 31571 ;;                  1    wreg      enum E527
 31572 ;; Registers used:
 31573 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31574 ;; Tracked objects:
 31575 ;;		On entry : 3F/2
 31576 ;;		On exit  : 0/0
 31577 ;;		Unchanged: 0/0
 31578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31579 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31582 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31583 ;;Total ram usage:        2 bytes
 31584 ;; Hardware stack levels used: 1
 31585 ;; Hardware stack levels required when called: 6
 31586 ;; This function calls:
 31587 ;;		_I2C1_SetBuffer
 31588 ;;		_I2C1_SetDataCompleteCallback
 31589 ;; This function is called by:
 31590 ;;		_I2C1_DO_TX
 31591 ;;		_I2C1_DO_RX
 31592 ;;		_I2C1_DO_TX_EMPTY
 31593 ;;		_I2C1_DO_ADDRESS_NACK
 31594 ;; This function uses a non-reentrant model
 31595 ;;
 31596                           
 31597                           	psect	text165
 31598  008C16                     __ptext165:
 31599                           	callstack 0
 31600  008C16                     _rd2RegCompleteHandler@i2c1_master_example$F511:
 31601                           	callstack 14
 31602                           
 31603                           ; BSR set to: 2
 31604                           ;mcc_generated_files/examples/i2c1_master_example.c: 155: static i2c1_operations_t rd2Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 156: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 157:     I2C1_SetBuffer(ptr,2);
 31605                           
 31606                           ;incstack = 0
 31607  008C16  C019  F010         	movff	rd2RegCompleteHandler@i2c1_master_example$F511@ptr,I2C1_SetBuffer@buffer
 31608  008C1A  C01A  F011         	movff	rd2RegCompleteHandler@i2c1_master_example$F511@ptr+1,I2C1_SetBuffer@buffer+1
 31609  008C1E  0E00               	movlw	0
 31610  008C20  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 31611  008C22  0E02               	movlw	2
 31612  008C24  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 31613  008C26  EC04  F048         	call	_I2C1_SetBuffer	;wreg free
 31614                           
 31615                           ; BSR set to: 2
 31616                           ;mcc_generated_files/examples/i2c1_master_example.c: 158:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 31617  008C2A  0E00               	movlw	0
 31618  008C2C  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 31619  008C2E  0E00               	movlw	0
 31620  008C30  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 31621  008C32  0E00               	movlw	0
 31622  008C34  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 31623  008C36  0E00               	movlw	0
 31624  008C38  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 31625  008C3A  EC4D  F048         	call	_I2C1_SetDataCompleteCallback	;wreg free
 31626                           
 31627                           ;mcc_generated_files/examples/i2c1_master_example.c: 159:     return I2C1_RESTART_READ;
 31628  008C3E  0E02               	movlw	2
 31629  008C40  0012               	return		;funcret
 31630  008C42                     __end_of_rd2RegCompleteHandler@i2c1_master_example$F511:
 31631                           	callstack 0
 31632                           
 31633 ;; *************** function _rd1RegCompleteHandler@i2c1_master_example$F500 *****************
 31634 ;; Defined at:
 31635 ;;		line 148 in file "mcc_generated_files/examples/i2c1_master_example.c"
 31636 ;; Parameters:    Size  Location     Type
 31637 ;;  ptr             2   24[COMRAM] PTR void 
 31638 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 31639 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 31640 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 31641 ;; Auto vars:     Size  Location     Type
 31642 ;;		None
 31643 ;; Return value:  Size  Location     Type
 31644 ;;                  1    wreg      enum E527
 31645 ;; Registers used:
 31646 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31647 ;; Tracked objects:
 31648 ;;		On entry : 3F/2
 31649 ;;		On exit  : 0/0
 31650 ;;		Unchanged: 0/0
 31651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31652 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31653 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31655 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31656 ;;Total ram usage:        2 bytes
 31657 ;; Hardware stack levels used: 1
 31658 ;; Hardware stack levels required when called: 6
 31659 ;; This function calls:
 31660 ;;		_I2C1_SetBuffer
 31661 ;;		_I2C1_SetDataCompleteCallback
 31662 ;; This function is called by:
 31663 ;;		_I2C1_Read1ByteRegister
 31664 ;;		_I2C1_DO_TX
 31665 ;;		_I2C1_DO_RX
 31666 ;;		_I2C1_DO_TX_EMPTY
 31667 ;;		_I2C1_DO_ADDRESS_NACK
 31668 ;; This function uses a non-reentrant model
 31669 ;;
 31670                           
 31671                           	psect	text166
 31672  008C42                     __ptext166:
 31673                           	callstack 0
 31674  008C42                     _rd1RegCompleteHandler@i2c1_master_example$F500:
 31675                           	callstack 14
 31676                           
 31677                           ; BSR set to: 2
 31678                           ;mcc_generated_files/examples/i2c1_master_example.c: 148: static i2c1_operations_t rd1Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 149: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 150:     I2C1_SetBuffer(ptr,1);
 31679                           
 31680                           ;incstack = 0
 31681  008C42  C019  F010         	movff	rd1RegCompleteHandler@i2c1_master_example$F500@ptr,I2C1_SetBuffer@buffer
 31682  008C46  C01A  F011         	movff	rd1RegCompleteHandler@i2c1_master_example$F500@ptr+1,I2C1_SetBuffer@buffer+1
 31683  008C4A  0E00               	movlw	0
 31684  008C4C  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 31685  008C4E  0E01               	movlw	1
 31686  008C50  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 31687  008C52  EC04  F048         	call	_I2C1_SetBuffer	;wreg free
 31688                           
 31689                           ; BSR set to: 2
 31690                           ;mcc_generated_files/examples/i2c1_master_example.c: 151:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 31691  008C56  0E00               	movlw	0
 31692  008C58  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 31693  008C5A  0E00               	movlw	0
 31694  008C5C  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 31695  008C5E  0E00               	movlw	0
 31696  008C60  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 31697  008C62  0E00               	movlw	0
 31698  008C64  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 31699  008C66  EC4D  F048         	call	_I2C1_SetDataCompleteCallback	;wreg free
 31700                           
 31701                           ;mcc_generated_files/examples/i2c1_master_example.c: 152:     return I2C1_RESTART_READ;
 31702  008C6A  0E02               	movlw	2
 31703  008C6C  0012               	return		;funcret
 31704  008C6E                     __end_of_rd1RegCompleteHandler@i2c1_master_example$F500:
 31705                           	callstack 0
 31706                           
 31707 ;; *************** function _rdBlkRegCompleteHandler *****************
 31708 ;; Defined at:
 31709 ;;		line 140 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 31710 ;; Parameters:    Size  Location     Type
 31711 ;;  p               2   24[COMRAM] PTR void 
 31712 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 31713 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 31714 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 31715 ;; Auto vars:     Size  Location     Type
 31716 ;;		None
 31717 ;; Return value:  Size  Location     Type
 31718 ;;                  1    wreg      enum E360
 31719 ;; Registers used:
 31720 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31721 ;; Tracked objects:
 31722 ;;		On entry : 3F/2
 31723 ;;		On exit  : 0/0
 31724 ;;		Unchanged: 0/0
 31725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31726 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31727 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31728 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31729 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31730 ;;Total ram usage:        2 bytes
 31731 ;; Hardware stack levels used: 1
 31732 ;; Hardware stack levels required when called: 6
 31733 ;; This function calls:
 31734 ;;		_I2C1_SetBuffer
 31735 ;;		_I2C1_SetDataCompleteCallback
 31736 ;; This function is called by:
 31737 ;;		_i2c_readDataBlock
 31738 ;;		_I2C1_DO_TX
 31739 ;;		_I2C1_DO_RX
 31740 ;;		_I2C1_DO_TX_EMPTY
 31741 ;;		_I2C1_DO_ADDRESS_NACK
 31742 ;; This function uses a non-reentrant model
 31743 ;;
 31744                           
 31745                           	psect	text167
 31746  008916                     __ptext167:
 31747                           	callstack 0
 31748  008916                     _rdBlkRegCompleteHandler:
 31749                           	callstack 14
 31750                           
 31751                           ; BSR set to: 2
 31752                           ;mcc_generated_files/drivers/i2c_simple_master.c: 140: static i2c1_operations_t rdBlkReg
      +                          CompleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 141: {;mcc_gen
      +                          erated_files/drivers/i2c_simple_master.c: 142:     I2C1_SetBuffer(((buf_t *)p)->data,((b
      +                          uf_t*)p)->len);
 31753                           
 31754                           ;incstack = 0
 31755  008916  EE20 F002          	lfsr	2,2
 31756  00891A  5019               	movf	rdBlkRegCompleteHandler@p^0,w,c
 31757  00891C  26D9               	addwf	fsr2l,f,c
 31758  00891E  501A               	movf	(rdBlkRegCompleteHandler@p+1)^0,w,c
 31759  008920  22DA               	addwfc	fsr2h,f,c
 31760  008922  CFDE F010          	movff	postinc2,I2C1_SetBuffer@buffer
 31761  008926  CFDD F011          	movff	postdec2,I2C1_SetBuffer@buffer+1
 31762  00892A  C019  FFD9         	movff	rdBlkRegCompleteHandler@p,fsr2l
 31763  00892E  C01A  FFDA         	movff	rdBlkRegCompleteHandler@p+1,fsr2h
 31764  008932  CFDE F012          	movff	postinc2,I2C1_SetBuffer@bufferSize
 31765  008936  CFDD F013          	movff	postdec2,I2C1_SetBuffer@bufferSize+1
 31766  00893A  EC04  F048         	call	_I2C1_SetBuffer	;wreg free
 31767                           
 31768                           ; BSR set to: 2
 31769                           ;mcc_generated_files/drivers/i2c_simple_master.c: 143:     I2C1_SetDataCompleteCallback(
      +                          ((void*)0),((void*)0));
 31770  00893E  0E00               	movlw	0
 31771  008940  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 31772  008942  0E00               	movlw	0
 31773  008944  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 31774  008946  0E00               	movlw	0
 31775  008948  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 31776  00894A  0E00               	movlw	0
 31777  00894C  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 31778  00894E  EC4D  F048         	call	_I2C1_SetDataCompleteCallback	;wreg free
 31779                           
 31780                           ;mcc_generated_files/drivers/i2c_simple_master.c: 144:     return I2C1_RESTART_READ;
 31781  008952  0E02               	movlw	2
 31782  008954  0012               	return		;funcret
 31783  008956                     __end_of_rdBlkRegCompleteHandler:
 31784                           	callstack 0
 31785                           
 31786 ;; *************** function _wr2RegCompleteHandler *****************
 31787 ;; Defined at:
 31788 ;;		line 116 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 31789 ;; Parameters:    Size  Location     Type
 31790 ;;  p               2   24[COMRAM] PTR void 
 31791 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 31792 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 31793 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 31794 ;; Auto vars:     Size  Location     Type
 31795 ;;		None
 31796 ;; Return value:  Size  Location     Type
 31797 ;;                  1    wreg      enum E360
 31798 ;; Registers used:
 31799 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31800 ;; Tracked objects:
 31801 ;;		On entry : 3F/2
 31802 ;;		On exit  : 0/0
 31803 ;;		Unchanged: 0/0
 31804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31805 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31806 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31807 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31808 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31809 ;;Total ram usage:        2 bytes
 31810 ;; Hardware stack levels used: 1
 31811 ;; Hardware stack levels required when called: 6
 31812 ;; This function calls:
 31813 ;;		_I2C1_SetBuffer
 31814 ;;		_I2C1_SetDataCompleteCallback
 31815 ;; This function is called by:
 31816 ;;		_I2C1_DO_TX
 31817 ;;		_I2C1_DO_RX
 31818 ;;		_I2C1_DO_TX_EMPTY
 31819 ;;		_I2C1_DO_ADDRESS_NACK
 31820 ;; This function uses a non-reentrant model
 31821 ;;
 31822                           
 31823                           	psect	text168
 31824  008C6E                     __ptext168:
 31825                           	callstack 0
 31826  008C6E                     _wr2RegCompleteHandler:
 31827                           	callstack 14
 31828                           
 31829                           ; BSR set to: 2
 31830                           ;mcc_generated_files/drivers/i2c_simple_master.c: 116: static i2c1_operations_t wr2RegCo
      +                          mpleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 117: {;mcc_gener
      +                          ated_files/drivers/i2c_simple_master.c: 118:     I2C1_SetBuffer(p,2);
 31831                           
 31832                           ;incstack = 0
 31833  008C6E  C019  F010         	movff	wr2RegCompleteHandler@p,I2C1_SetBuffer@buffer
 31834  008C72  C01A  F011         	movff	wr2RegCompleteHandler@p+1,I2C1_SetBuffer@buffer+1
 31835  008C76  0E00               	movlw	0
 31836  008C78  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 31837  008C7A  0E02               	movlw	2
 31838  008C7C  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 31839  008C7E  EC04  F048         	call	_I2C1_SetBuffer	;wreg free
 31840                           
 31841                           ; BSR set to: 2
 31842                           ;mcc_generated_files/drivers/i2c_simple_master.c: 119:     I2C1_SetDataCompleteCallback(
      +                          ((void*)0),((void*)0));
 31843  008C82  0E00               	movlw	0
 31844  008C84  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 31845  008C86  0E00               	movlw	0
 31846  008C88  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 31847  008C8A  0E00               	movlw	0
 31848  008C8C  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 31849  008C8E  0E00               	movlw	0
 31850  008C90  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 31851  008C92  EC4D  F048         	call	_I2C1_SetDataCompleteCallback	;wreg free
 31852                           
 31853                           ;mcc_generated_files/drivers/i2c_simple_master.c: 120:     return I2C1_CONTINUE;
 31854  008C96  0E04               	movlw	4
 31855  008C98  0012               	return		;funcret
 31856  008C9A                     __end_of_wr2RegCompleteHandler:
 31857                           	callstack 0
 31858                           
 31859 ;; *************** function _rd2RegCompleteHandler *****************
 31860 ;; Defined at:
 31861 ;;		line 93 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 31862 ;; Parameters:    Size  Location     Type
 31863 ;;  p               2   24[COMRAM] PTR void 
 31864 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 31865 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 31866 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 31867 ;; Auto vars:     Size  Location     Type
 31868 ;;		None
 31869 ;; Return value:  Size  Location     Type
 31870 ;;                  1    wreg      enum E360
 31871 ;; Registers used:
 31872 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31873 ;; Tracked objects:
 31874 ;;		On entry : 3F/2
 31875 ;;		On exit  : 0/0
 31876 ;;		Unchanged: 0/0
 31877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31878 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31879 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31881 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31882 ;;Total ram usage:        2 bytes
 31883 ;; Hardware stack levels used: 1
 31884 ;; Hardware stack levels required when called: 6
 31885 ;; This function calls:
 31886 ;;		_I2C1_SetBuffer
 31887 ;;		_I2C1_SetDataCompleteCallback
 31888 ;; This function is called by:
 31889 ;;		_I2C1_DO_TX
 31890 ;;		_I2C1_DO_RX
 31891 ;;		_I2C1_DO_TX_EMPTY
 31892 ;;		_I2C1_DO_ADDRESS_NACK
 31893 ;; This function uses a non-reentrant model
 31894 ;;
 31895                           
 31896                           	psect	text169
 31897  008C9A                     __ptext169:
 31898                           	callstack 0
 31899  008C9A                     _rd2RegCompleteHandler:
 31900                           	callstack 14
 31901                           
 31902                           ; BSR set to: 2
 31903                           ;mcc_generated_files/drivers/i2c_simple_master.c: 93: static i2c1_operations_t rd2RegCom
      +                          pleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 94: {;mcc_generat
      +                          ed_files/drivers/i2c_simple_master.c: 95:     I2C1_SetBuffer(p,2);
 31904                           
 31905                           ;incstack = 0
 31906  008C9A  C019  F010         	movff	rd2RegCompleteHandler@p,I2C1_SetBuffer@buffer
 31907  008C9E  C01A  F011         	movff	rd2RegCompleteHandler@p+1,I2C1_SetBuffer@buffer+1
 31908  008CA2  0E00               	movlw	0
 31909  008CA4  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 31910  008CA6  0E02               	movlw	2
 31911  008CA8  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 31912  008CAA  EC04  F048         	call	_I2C1_SetBuffer	;wreg free
 31913                           
 31914                           ; BSR set to: 2
 31915                           ;mcc_generated_files/drivers/i2c_simple_master.c: 96:     I2C1_SetDataCompleteCallback((
      +                          (void*)0),((void*)0));
 31916  008CAE  0E00               	movlw	0
 31917  008CB0  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 31918  008CB2  0E00               	movlw	0
 31919  008CB4  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 31920  008CB6  0E00               	movlw	0
 31921  008CB8  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 31922  008CBA  0E00               	movlw	0
 31923  008CBC  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 31924  008CBE  EC4D  F048         	call	_I2C1_SetDataCompleteCallback	;wreg free
 31925                           
 31926                           ;mcc_generated_files/drivers/i2c_simple_master.c: 97:     return I2C1_RESTART_READ;
 31927  008CC2  0E02               	movlw	2
 31928  008CC4  0012               	return		;funcret
 31929  008CC6                     __end_of_rd2RegCompleteHandler:
 31930                           	callstack 0
 31931                           
 31932 ;; *************** function _rd1RegCompleteHandler *****************
 31933 ;; Defined at:
 31934 ;;		line 64 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 31935 ;; Parameters:    Size  Location     Type
 31936 ;;  p               2   24[COMRAM] PTR void 
 31937 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 31938 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 31939 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 31940 ;; Auto vars:     Size  Location     Type
 31941 ;;		None
 31942 ;; Return value:  Size  Location     Type
 31943 ;;                  1    wreg      enum E360
 31944 ;; Registers used:
 31945 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31946 ;; Tracked objects:
 31947 ;;		On entry : 3F/2
 31948 ;;		On exit  : 0/0
 31949 ;;		Unchanged: 0/0
 31950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31951 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31952 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31954 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31955 ;;Total ram usage:        2 bytes
 31956 ;; Hardware stack levels used: 1
 31957 ;; Hardware stack levels required when called: 6
 31958 ;; This function calls:
 31959 ;;		_I2C1_SetBuffer
 31960 ;;		_I2C1_SetDataCompleteCallback
 31961 ;; This function is called by:
 31962 ;;		_I2C1_DO_TX
 31963 ;;		_I2C1_DO_RX
 31964 ;;		_I2C1_DO_TX_EMPTY
 31965 ;;		_I2C1_DO_ADDRESS_NACK
 31966 ;; This function uses a non-reentrant model
 31967 ;;
 31968                           
 31969                           	psect	text170
 31970  008CC6                     __ptext170:
 31971                           	callstack 0
 31972  008CC6                     _rd1RegCompleteHandler:
 31973                           	callstack 14
 31974                           
 31975                           ; BSR set to: 2
 31976                           ;mcc_generated_files/drivers/i2c_simple_master.c: 64: static i2c1_operations_t rd1RegCom
      +                          pleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 65: {;mcc_generat
      +                          ed_files/drivers/i2c_simple_master.c: 66:     I2C1_SetBuffer(p,1);
 31977                           
 31978                           ;incstack = 0
 31979  008CC6  C019  F010         	movff	rd1RegCompleteHandler@p,I2C1_SetBuffer@buffer
 31980  008CCA  C01A  F011         	movff	rd1RegCompleteHandler@p+1,I2C1_SetBuffer@buffer+1
 31981  008CCE  0E00               	movlw	0
 31982  008CD0  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 31983  008CD2  0E01               	movlw	1
 31984  008CD4  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 31985  008CD6  EC04  F048         	call	_I2C1_SetBuffer	;wreg free
 31986                           
 31987                           ; BSR set to: 2
 31988                           ;mcc_generated_files/drivers/i2c_simple_master.c: 67:     I2C1_SetDataCompleteCallback((
      +                          (void*)0),((void*)0));
 31989  008CDA  0E00               	movlw	0
 31990  008CDC  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 31991  008CDE  0E00               	movlw	0
 31992  008CE0  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 31993  008CE2  0E00               	movlw	0
 31994  008CE4  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 31995  008CE6  0E00               	movlw	0
 31996  008CE8  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 31997  008CEA  EC4D  F048         	call	_I2C1_SetDataCompleteCallback	;wreg free
 31998                           
 31999                           ;mcc_generated_files/drivers/i2c_simple_master.c: 68:     return I2C1_RESTART_READ;
 32000  008CEE  0E02               	movlw	2
 32001  008CF0  0012               	return		;funcret
 32002  008CF2                     __end_of_rd1RegCompleteHandler:
 32003                           	callstack 0
 32004                           
 32005 ;; *************** function _wr1RegCompleteHandler *****************
 32006 ;; Defined at:
 32007 ;;		line 33 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 32008 ;; Parameters:    Size  Location     Type
 32009 ;;  p               2   24[COMRAM] PTR void 
 32010 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 32011 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 32012 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 32013 ;; Auto vars:     Size  Location     Type
 32014 ;;		None
 32015 ;; Return value:  Size  Location     Type
 32016 ;;                  1    wreg      enum E360
 32017 ;; Registers used:
 32018 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32019 ;; Tracked objects:
 32020 ;;		On entry : 3F/2
 32021 ;;		On exit  : 0/0
 32022 ;;		Unchanged: 0/0
 32023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32024 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32025 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32027 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32028 ;;Total ram usage:        2 bytes
 32029 ;; Hardware stack levels used: 1
 32030 ;; Hardware stack levels required when called: 6
 32031 ;; This function calls:
 32032 ;;		_I2C1_SetBuffer
 32033 ;;		_I2C1_SetDataCompleteCallback
 32034 ;; This function is called by:
 32035 ;;		_I2C1_DO_TX
 32036 ;;		_I2C1_DO_RX
 32037 ;;		_I2C1_DO_TX_EMPTY
 32038 ;;		_I2C1_DO_ADDRESS_NACK
 32039 ;; This function uses a non-reentrant model
 32040 ;;
 32041                           
 32042                           	psect	text171
 32043  008CF2                     __ptext171:
 32044                           	callstack 0
 32045  008CF2                     _wr1RegCompleteHandler:
 32046                           	callstack 14
 32047                           
 32048                           ; BSR set to: 2
 32049                           ;mcc_generated_files/drivers/i2c_simple_master.c: 33: static i2c1_operations_t wr1RegCom
      +                          pleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 34: {;mcc_generat
      +                          ed_files/drivers/i2c_simple_master.c: 35:     I2C1_SetBuffer(p,1);
 32050                           
 32051                           ;incstack = 0
 32052  008CF2  C019  F010         	movff	wr1RegCompleteHandler@p,I2C1_SetBuffer@buffer
 32053  008CF6  C01A  F011         	movff	wr1RegCompleteHandler@p+1,I2C1_SetBuffer@buffer+1
 32054  008CFA  0E00               	movlw	0
 32055  008CFC  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 32056  008CFE  0E01               	movlw	1
 32057  008D00  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 32058  008D02  EC04  F048         	call	_I2C1_SetBuffer	;wreg free
 32059                           
 32060                           ; BSR set to: 2
 32061                           ;mcc_generated_files/drivers/i2c_simple_master.c: 36:     I2C1_SetDataCompleteCallback((
      +                          (void*)0),((void*)0));
 32062  008D06  0E00               	movlw	0
 32063  008D08  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 32064  008D0A  0E00               	movlw	0
 32065  008D0C  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 32066  008D0E  0E00               	movlw	0
 32067  008D10  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 32068  008D12  0E00               	movlw	0
 32069  008D14  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 32070  008D16  EC4D  F048         	call	_I2C1_SetDataCompleteCallback	;wreg free
 32071                           
 32072                           ;mcc_generated_files/drivers/i2c_simple_master.c: 37:     return I2C1_CONTINUE;
 32073  008D1A  0E04               	movlw	4
 32074  008D1C  0012               	return		;funcret
 32075  008D1E                     __end_of_wr1RegCompleteHandler:
 32076                           	callstack 0
 32077                           
 32078 ;; *************** function _wr2RegCompleteHandler@i2c1_master_example$F523 *****************
 32079 ;; Defined at:
 32080 ;;		line 169 in file "mcc_generated_files/examples/i2c1_master_example.c"
 32081 ;; Parameters:    Size  Location     Type
 32082 ;;  ptr             2   24[COMRAM] PTR void 
 32083 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 32084 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 32085 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 32086 ;; Auto vars:     Size  Location     Type
 32087 ;;		None
 32088 ;; Return value:  Size  Location     Type
 32089 ;;                  1    wreg      enum E527
 32090 ;; Registers used:
 32091 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32092 ;; Tracked objects:
 32093 ;;		On entry : 3F/2
 32094 ;;		On exit  : 0/0
 32095 ;;		Unchanged: 0/0
 32096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32097 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32098 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32100 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32101 ;;Total ram usage:        2 bytes
 32102 ;; Hardware stack levels used: 1
 32103 ;; Hardware stack levels required when called: 6
 32104 ;; This function calls:
 32105 ;;		_I2C1_SetBuffer
 32106 ;;		_I2C1_SetDataCompleteCallback
 32107 ;; This function is called by:
 32108 ;;		_I2C1_DO_TX
 32109 ;;		_I2C1_DO_RX
 32110 ;;		_I2C1_DO_TX_EMPTY
 32111 ;;		_I2C1_DO_ADDRESS_NACK
 32112 ;; This function uses a non-reentrant model
 32113 ;;
 32114                           
 32115                           	psect	text172
 32116  008D1E                     __ptext172:
 32117                           	callstack 0
 32118  008D1E                     _wr2RegCompleteHandler@i2c1_master_example$F523:
 32119                           	callstack 14
 32120                           
 32121                           ; BSR set to: 2
 32122                           ;mcc_generated_files/examples/i2c1_master_example.c: 169: static i2c1_operations_t wr2Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 170: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 171:     I2C1_SetBuffer(ptr,2);
 32123                           
 32124                           ;incstack = 0
 32125  008D1E  C019  F010         	movff	wr2RegCompleteHandler@i2c1_master_example$F523@ptr,I2C1_SetBuffer@buffer
 32126  008D22  C01A  F011         	movff	wr2RegCompleteHandler@i2c1_master_example$F523@ptr+1,I2C1_SetBuffer@buffer+1
 32127  008D26  0E00               	movlw	0
 32128  008D28  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 32129  008D2A  0E02               	movlw	2
 32130  008D2C  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 32131  008D2E  EC04  F048         	call	_I2C1_SetBuffer	;wreg free
 32132                           
 32133                           ; BSR set to: 2
 32134                           ;mcc_generated_files/examples/i2c1_master_example.c: 172:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 32135  008D32  0E00               	movlw	0
 32136  008D34  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 32137  008D36  0E00               	movlw	0
 32138  008D38  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 32139  008D3A  0E00               	movlw	0
 32140  008D3C  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 32141  008D3E  0E00               	movlw	0
 32142  008D40  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 32143  008D42  EC4D  F048         	call	_I2C1_SetDataCompleteCallback	;wreg free
 32144                           
 32145                           ;mcc_generated_files/examples/i2c1_master_example.c: 173:     return I2C1_CONTINUE;
 32146  008D46  0E04               	movlw	4
 32147  008D48  0012               	return		;funcret
 32148  008D4A                     __end_of_wr2RegCompleteHandler@i2c1_master_example$F523:
 32149                           	callstack 0
 32150                           
 32151 ;; *************** function _I2C1_SetDataCompleteCallback *****************
 32152 ;; Defined at:
 32153 ;;		line 273 in file "mcc_generated_files/i2c1_master.c"
 32154 ;; Parameters:    Size  Location     Type
 32155 ;;  cb              2   20[COMRAM] PTR FTN(PTR void ,)enum 
 32156 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler@i2c1_master_example$F535(1), wr2RegCompleteHandler@i2c1_master_exa
      +mple$F523(1), wr1RegCompleteHandler@i2c1_master_example$F517(1), 
 32157 ;;		 -> rd2RegCompleteHandler@i2c1_master_example$F511(1), rd1RegCompleteHandler@i2c1_master_example$F500(1), rdBlkRegCo
      +mpleteHandler(1), wr2RegCompleteHandler(1), 
 32158 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), wr1RegCompleteHandler(1), 
 32159 ;;  ptr             2   22[COMRAM] PTR void 
 32160 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 32161 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 32162 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 32163 ;; Auto vars:     Size  Location     Type
 32164 ;;		None
 32165 ;; Return value:  Size  Location     Type
 32166 ;;                  1    wreg      void 
 32167 ;; Registers used:
 32168 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32169 ;; Tracked objects:
 32170 ;;		On entry : 33/2
 32171 ;;		On exit  : 0/0
 32172 ;;		Unchanged: 0/0
 32173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32174 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32175 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32177 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32178 ;;Total ram usage:        4 bytes
 32179 ;; Hardware stack levels used: 1
 32180 ;; Hardware stack levels required when called: 5
 32181 ;; This function calls:
 32182 ;;		_I2C1_SetCallback
 32183 ;; This function is called by:
 32184 ;;		_wr1RegCompleteHandler
 32185 ;;		_rd1RegCompleteHandler
 32186 ;;		_rd2RegCompleteHandler
 32187 ;;		_wr2RegCompleteHandler
 32188 ;;		_rdBlkRegCompleteHandler
 32189 ;;		_i2c_readDataBlock
 32190 ;;		_I2C1_Read1ByteRegister
 32191 ;;		_rd1RegCompleteHandler@i2c1_master_example$F500
 32192 ;;		_rd2RegCompleteHandler@i2c1_master_example$F511
 32193 ;;		_wr1RegCompleteHandler@i2c1_master_example$F517
 32194 ;;		_wr2RegCompleteHandler@i2c1_master_example$F523
 32195 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F535
 32196 ;; This function uses a non-reentrant model
 32197 ;;
 32198                           
 32199                           	psect	text173
 32200  00909A                     __ptext173:
 32201                           	callstack 0
 32202  00909A                     _I2C1_SetDataCompleteCallback:
 32203                           	callstack 20
 32204                           
 32205                           ;mcc_generated_files/i2c1_master.c: 273: void I2C1_SetDataCompleteCallback(i2c1_callback
      +                          _t cb, void *ptr);mcc_generated_files/i2c1_master.c: 274: {;mcc_generated_files/i2c1_mas
      +                          ter.c: 275:     I2C1_SetCallback(I2C1_DATA_COMPLETE, cb, ptr);
 32206                           
 32207                           ;incstack = 0
 32208  00909A  C015  F010         	movff	I2C1_SetDataCompleteCallback@cb,I2C1_SetCallback@cb
 32209  00909E  C016  F011         	movff	I2C1_SetDataCompleteCallback@cb+1,I2C1_SetCallback@cb+1
 32210  0090A2  C017  F012         	movff	I2C1_SetDataCompleteCallback@ptr,I2C1_SetCallback@ptr
 32211  0090A6  C018  F013         	movff	I2C1_SetDataCompleteCallback@ptr+1,I2C1_SetCallback@ptr+1
 32212  0090AA  0E00               	movlw	0
 32213  0090AC  ECF1  F03F         	call	_I2C1_SetCallback
 32214  0090B0  0012               	return		;funcret
 32215  0090B2                     __end_of_I2C1_SetDataCompleteCallback:
 32216                           	callstack 0
 32217                           
 32218 ;; *************** function _I2C1_SetCallback *****************
 32219 ;; Defined at:
 32220 ;;		line 298 in file "mcc_generated_files/i2c1_master.c"
 32221 ;; Parameters:    Size  Location     Type
 32222 ;;  idx             1    wreg     enum E10460
 32223 ;;  cb              2   15[COMRAM] PTR FTN(PTR void ,)enum 
 32224 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler@i2c1_master_example$F535(1), wr2RegCompleteHandler@i2c1_master_exa
      +mple$F523(1), wr1RegCompleteHandler@i2c1_master_example$F517(1), 
 32225 ;;		 -> rd2RegCompleteHandler@i2c1_master_example$F511(1), rd1RegCompleteHandler@i2c1_master_example$F500(1), rdBlkRegCo
      +mpleteHandler(1), wr2RegCompleteHandler(1), 
 32226 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), wr1RegCompleteHandler(1), 
 32227 ;;  ptr             2   17[COMRAM] PTR void 
 32228 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 32229 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 32230 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 32231 ;; Auto vars:     Size  Location     Type
 32232 ;;  idx             1   19[COMRAM] enum E10460
 32233 ;; Return value:  Size  Location     Type
 32234 ;;                  1    wreg      void 
 32235 ;; Registers used:
 32236 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 32237 ;; Tracked objects:
 32238 ;;		On entry : 33/2
 32239 ;;		On exit  : 0/0
 32240 ;;		Unchanged: 0/0
 32241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32242 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32243 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32245 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32246 ;;Total ram usage:        5 bytes
 32247 ;; Hardware stack levels used: 1
 32248 ;; Hardware stack levels required when called: 4
 32249 ;; This function calls:
 32250 ;;		Nothing
 32251 ;; This function is called by:
 32252 ;;		_I2C1_SetDataCompleteCallback
 32253 ;;		_I2C1_SetAddressNackCallback
 32254 ;; This function uses a non-reentrant model
 32255 ;;
 32256                           
 32257                           	psect	text174
 32258  007FE2                     __ptext174:
 32259                           	callstack 0
 32260  007FE2                     _I2C1_SetCallback:
 32261                           	callstack 20
 32262                           
 32263                           ;incstack = 0
 32264                           ;I2C1_SetCallback@idx stored from wreg
 32265  007FE2  6E14               	movwf	I2C1_SetCallback@idx^0,c
 32266                           
 32267                           ;mcc_generated_files/i2c1_master.c: 298: static void I2C1_SetCallback(i2c1_callbackIndex
      +                          _t idx, i2c1_callback_t cb, void *ptr);mcc_generated_files/i2c1_master.c: 299: {;mcc_gen
      +                          erated_files/i2c1_master.c: 300:     if(cb)
 32268  007FE4  5010               	movf	I2C1_SetCallback@cb^0,w,c
 32269  007FE6  1011               	iorwf	(I2C1_SetCallback@cb+1)^0,w,c
 32270  007FE8  B4D8               	btfsc	status,2,c
 32271  007FEA  D019               	goto	l18891
 32272                           
 32273                           ;mcc_generated_files/i2c1_master.c: 301:     {;mcc_generated_files/i2c1_master.c: 302:  
      +                                 I2C1_Status.callbackTable[idx] = cb;
 32274  007FEC  5014               	movf	I2C1_SetCallback@idx^0,w,c
 32275  007FEE  0D02               	mullw	2
 32276  007FF0  0E3C               	movlw	low _I2C1_Status
 32277  007FF2  24F3               	addwf	243,w,c
 32278  007FF4  6ED9               	movwf	fsr2l,c
 32279  007FF6  0E02               	movlw	high _I2C1_Status
 32280  007FF8  20F4               	addwfc	prodh,w,c
 32281  007FFA  6EDA               	movwf	fsr2h,c
 32282  007FFC  C010  FFDE         	movff	I2C1_SetCallback@cb,postinc2
 32283  008000  C011  FFDD         	movff	I2C1_SetCallback@cb+1,postdec2
 32284                           
 32285                           ;mcc_generated_files/i2c1_master.c: 303:         I2C1_Status.callbackPayload[idx] = ptr;
 32286  008004  5014               	movf	I2C1_SetCallback@idx^0,w,c
 32287  008006  0D02               	mullw	2
 32288  008008  0E48               	movlw	low (_I2C1_Status+12)
 32289  00800A  24F3               	addwf	243,w,c
 32290  00800C  6ED9               	movwf	fsr2l,c
 32291  00800E  0E02               	movlw	high (_I2C1_Status+12)
 32292  008010  20F4               	addwfc	prodh,w,c
 32293  008012  6EDA               	movwf	fsr2h,c
 32294  008014  C012  FFDE         	movff	I2C1_SetCallback@ptr,postinc2
 32295  008018  C013  FFDD         	movff	I2C1_SetCallback@ptr+1,postdec2
 32296                           
 32297                           ;mcc_generated_files/i2c1_master.c: 304:     }
 32298  00801C  0012               	return	
 32299  00801E                     l18891:
 32300                           
 32301                           ;mcc_generated_files/i2c1_master.c: 306:     {;mcc_generated_files/i2c1_master.c: 307:  
      +                                 I2C1_Status.callbackTable[idx] = I2C1_CallbackReturnStop;
 32302  00801E  5014               	movf	I2C1_SetCallback@idx^0,w,c
 32303  008020  0D02               	mullw	2
 32304  008022  0E3C               	movlw	low _I2C1_Status
 32305  008024  24F3               	addwf	243,w,c
 32306  008026  6ED9               	movwf	fsr2l,c
 32307  008028  0E02               	movlw	high _I2C1_Status
 32308  00802A  20F4               	addwfc	prodh,w,c
 32309  00802C  6EDA               	movwf	fsr2h,c
 32310  00802E  0EA0               	movlw	low _I2C1_CallbackReturnStop
 32311  008030  6EDE               	movwf	postinc2,c
 32312  008032  0E92               	movlw	high _I2C1_CallbackReturnStop
 32313  008034  6EDD               	movwf	postdec2,c
 32314                           
 32315                           ;mcc_generated_files/i2c1_master.c: 308:         I2C1_Status.callbackPayload[idx] = ((vo
      +                          id*)0);
 32316  008036  5014               	movf	I2C1_SetCallback@idx^0,w,c
 32317  008038  0D02               	mullw	2
 32318  00803A  0E48               	movlw	low (_I2C1_Status+12)
 32319  00803C  24F3               	addwf	243,w,c
 32320  00803E  6ED9               	movwf	fsr2l,c
 32321  008040  0E02               	movlw	high (_I2C1_Status+12)
 32322  008042  20F4               	addwfc	prodh,w,c
 32323  008044  6EDA               	movwf	fsr2h,c
 32324  008046  0E00               	movlw	0
 32325  008048  6EDE               	movwf	postinc2,c
 32326  00804A  0E00               	movlw	0
 32327  00804C  6EDD               	movwf	postdec2,c
 32328  00804E  0012               	return		;funcret
 32329  008050                     __end_of_I2C1_SetCallback:
 32330                           	callstack 0
 32331                           
 32332 ;; *************** function _I2C1_SetBuffer *****************
 32333 ;; Defined at:
 32334 ;;		line 263 in file "mcc_generated_files/i2c1_master.c"
 32335 ;; Parameters:    Size  Location     Type
 32336 ;;  buffer          2   15[COMRAM] PTR void 
 32337 ;;		 -> cmdMemoryIsEmpty@tempSerial(4), memoryTEMP(16), var_sys_NVM(64), I2C1_ReadDataBlock@reg(1), 
 32338 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_WriteNBytes@dat(17), I2C1_Write2ByteRegister@reg(1), I2C1_Write2ByteRegi
      +ster@data(2), 
 32339 ;;		 -> I2C1_Write1ByteRegister@reg(1), I2C1_Write1ByteRegister@data(1), I2C1_Read2ByteRegister@reg(1), I2C1_Read2ByteRe
      +gister@returnValue(2), 
 32340 ;;		 -> I2C1_Read1ByteRegister@reg(1), I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@reg(2), i2c_readDataBloc
      +k@d(4), 
 32341 ;;		 -> i2c_write2ByteRegister@reg(1), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@reg(1), i2c_read2ByteRegist
      +er@result(2), 
 32342 ;;		 -> i2c_read1ByteRegister@reg(1), i2c_read1ByteRegister@d2(1), i2c_writeNBytes@dat(17), i2c_write1ByteRegister@reg(1
      +), 
 32343 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 32344 ;;  bufferSize      2   17[COMRAM] unsigned int 
 32345 ;; Auto vars:     Size  Location     Type
 32346 ;;		None
 32347 ;; Return value:  Size  Location     Type
 32348 ;;                  1    wreg      void 
 32349 ;; Registers used:
 32350 ;;		wreg, status,2, status,0
 32351 ;; Tracked objects:
 32352 ;;		On entry : 0/2
 32353 ;;		On exit  : 3F/2
 32354 ;;		Unchanged: 0/0
 32355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32356 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32357 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32359 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32360 ;;Total ram usage:        4 bytes
 32361 ;; Hardware stack levels used: 1
 32362 ;; Hardware stack levels required when called: 4
 32363 ;; This function calls:
 32364 ;;		Nothing
 32365 ;; This function is called by:
 32366 ;;		_wr1RegCompleteHandler
 32367 ;;		_i2c_writeNBytes
 32368 ;;		_rd1RegCompleteHandler
 32369 ;;		_rd2RegCompleteHandler
 32370 ;;		_wr2RegCompleteHandler
 32371 ;;		_rdBlkRegCompleteHandler
 32372 ;;		_i2c_readDataBlock
 32373 ;;		_I2C1_Read1ByteRegister
 32374 ;;		_rd1RegCompleteHandler@i2c1_master_example$F500
 32375 ;;		_rd2RegCompleteHandler@i2c1_master_example$F511
 32376 ;;		_wr1RegCompleteHandler@i2c1_master_example$F517
 32377 ;;		_wr2RegCompleteHandler@i2c1_master_example$F523
 32378 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F535
 32379 ;; This function uses a non-reentrant model
 32380 ;;
 32381                           
 32382                           	psect	text175
 32383  009008                     __ptext175:
 32384                           	callstack 0
 32385  009008                     _I2C1_SetBuffer:
 32386                           	callstack 21
 32387                           
 32388                           ;mcc_generated_files/i2c1_master.c: 263: void I2C1_SetBuffer(void *buffer, size_t buffer
      +                          Size);mcc_generated_files/i2c1_master.c: 264: {;mcc_generated_files/i2c1_master.c: 265: 
      +                              if(I2C1_Status.bufferFree)
 32389                           
 32390                           ;incstack = 0
 32391  009008  0102               	movlb	2	; () banked
 32392  00900A  A75F               	btfss	(_I2C1_Status+35)& (0+255),3,b
 32393  00900C  0012               	return	
 32394                           
 32395                           ; BSR set to: 2
 32396                           ;mcc_generated_files/i2c1_master.c: 266:     {;mcc_generated_files/i2c1_master.c: 267:  
      +                                 I2C1_Status.data_ptr = buffer;
 32397  00900E  C010  F259         	movff	I2C1_SetBuffer@buffer,_I2C1_Status+29
 32398  009012  C011  F25A         	movff	I2C1_SetBuffer@buffer+1,_I2C1_Status+30
 32399                           
 32400                           ; BSR set to: 2
 32401                           ;mcc_generated_files/i2c1_master.c: 268:         I2C1_Status.data_length = bufferSize;
 32402  009016  C012  F25B         	movff	I2C1_SetBuffer@bufferSize,_I2C1_Status+31
 32403  00901A  C013  F25C         	movff	I2C1_SetBuffer@bufferSize+1,_I2C1_Status+32
 32404                           
 32405                           ; BSR set to: 2
 32406                           ;mcc_generated_files/i2c1_master.c: 269:         I2C1_Status.bufferFree = 0;
 32407  00901E  975F               	bcf	(_I2C1_Status+35)& (0+255),3,b
 32408                           
 32409                           ; BSR set to: 2
 32410  009020  0012               	return		;funcret
 32411  009022                     __end_of_I2C1_SetBuffer:
 32412                           	callstack 0
 32413                           
 32414 ;; *************** function _I2C1_MasterStop *****************
 32415 ;; Defined at:
 32416 ;;		line 593 in file "mcc_generated_files/i2c1_master.c"
 32417 ;; Parameters:    Size  Location     Type
 32418 ;;		None
 32419 ;; Auto vars:     Size  Location     Type
 32420 ;;		None
 32421 ;; Return value:  Size  Location     Type
 32422 ;;                  1    wreg      void 
 32423 ;; Registers used:
 32424 ;;		None
 32425 ;; Tracked objects:
 32426 ;;		On entry : 0/2
 32427 ;;		On exit  : 0/0
 32428 ;;		Unchanged: 0/0
 32429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32430 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32431 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32432 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32433 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32434 ;;Total ram usage:        0 bytes
 32435 ;; Hardware stack levels used: 1
 32436 ;; Hardware stack levels required when called: 4
 32437 ;; This function calls:
 32438 ;;		Nothing
 32439 ;; This function is called by:
 32440 ;;		_I2C1_DO_SEND_STOP
 32441 ;; This function uses a non-reentrant model
 32442 ;;
 32443                           
 32444                           	psect	text176
 32445  0092A4                     __ptext176:
 32446                           	callstack 0
 32447  0092A4                     _I2C1_MasterStop:
 32448                           	callstack 15
 32449                           
 32450                           ;mcc_generated_files/i2c1_master.c: 595:     SSP1CON2bits.PEN = 1;
 32451                           
 32452                           ; BSR set to: 2
 32453                           ;incstack = 0
 32454  0092A4  8497               	bsf	151,2,c	;volatile
 32455  0092A6  0012               	return		;funcret
 32456  0092A8                     __end_of_I2C1_MasterStop:
 32457                           	callstack 0
 32458                           
 32459 ;; *************** function _I2C1_MasterEnableRestart *****************
 32460 ;; Defined at:
 32461 ;;		line 573 in file "mcc_generated_files/i2c1_master.c"
 32462 ;; Parameters:    Size  Location     Type
 32463 ;;		None
 32464 ;; Auto vars:     Size  Location     Type
 32465 ;;		None
 32466 ;; Return value:  Size  Location     Type
 32467 ;;                  1    wreg      void 
 32468 ;; Registers used:
 32469 ;;		None
 32470 ;; Tracked objects:
 32471 ;;		On entry : 0/2
 32472 ;;		On exit  : 0/0
 32473 ;;		Unchanged: 0/0
 32474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32478 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32479 ;;Total ram usage:        0 bytes
 32480 ;; Hardware stack levels used: 1
 32481 ;; Hardware stack levels required when called: 4
 32482 ;; This function calls:
 32483 ;;		Nothing
 32484 ;; This function is called by:
 32485 ;;		_I2C1_DO_SEND_RESTART_READ
 32486 ;;		_I2C1_DO_SEND_RESTART_WRITE
 32487 ;;		_I2C1_DO_SEND_RESTART
 32488 ;; This function uses a non-reentrant model
 32489 ;;
 32490                           
 32491                           	psect	text177
 32492  0092A8                     __ptext177:
 32493                           	callstack 0
 32494  0092A8                     _I2C1_MasterEnableRestart:
 32495                           	callstack 15
 32496                           
 32497                           ;mcc_generated_files/i2c1_master.c: 575:     SSP1CON2bits.RSEN = 1;
 32498                           
 32499                           ;incstack = 0
 32500  0092A8  8297               	bsf	151,1,c	;volatile
 32501  0092AA  0012               	return		;funcret
 32502  0092AC                     __end_of_I2C1_MasterEnableRestart:
 32503                           	callstack 0
 32504                           
 32505 ;; *************** function _I2C1_MasterStart *****************
 32506 ;; Defined at:
 32507 ;;		line 588 in file "mcc_generated_files/i2c1_master.c"
 32508 ;; Parameters:    Size  Location     Type
 32509 ;;		None
 32510 ;; Auto vars:     Size  Location     Type
 32511 ;;		None
 32512 ;; Return value:  Size  Location     Type
 32513 ;;                  1    wreg      void 
 32514 ;; Registers used:
 32515 ;;		None
 32516 ;; Tracked objects:
 32517 ;;		On entry : 3F/2
 32518 ;;		On exit  : 3F/2
 32519 ;;		Unchanged: 3F/0
 32520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32521 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32522 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32524 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32525 ;;Total ram usage:        0 bytes
 32526 ;; Hardware stack levels used: 1
 32527 ;; Hardware stack levels required when called: 4
 32528 ;; This function calls:
 32529 ;;		Nothing
 32530 ;; This function is called by:
 32531 ;;		_I2C1_MasterOperation
 32532 ;; This function uses a non-reentrant model
 32533 ;;
 32534                           
 32535                           	psect	text178
 32536  0092AC                     __ptext178:
 32537                           	callstack 0
 32538  0092AC                     _I2C1_MasterStart:
 32539                           	callstack 19
 32540                           
 32541                           ; BSR set to: 2
 32542                           ;mcc_generated_files/i2c1_master.c: 590:     SSP1CON2bits.SEN = 1;
 32543                           
 32544                           ;incstack = 0
 32545  0092AC  8097               	bsf	151,0,c	;volatile
 32546                           
 32547                           ; BSR set to: 2
 32548  0092AE  0012               	return		;funcret
 32549  0092B0                     __end_of_I2C1_MasterStart:
 32550                           	callstack 0
 32551                           
 32552 ;; *************** function _I2C1_Close *****************
 32553 ;; Defined at:
 32554 ;;		line 209 in file "mcc_generated_files/i2c1_master.c"
 32555 ;; Parameters:    Size  Location     Type
 32556 ;;		None
 32557 ;; Auto vars:     Size  Location     Type
 32558 ;;  returnValue     1   15[COMRAM] enum E355
 32559 ;; Return value:  Size  Location     Type
 32560 ;;                  1    wreg      enum E355
 32561 ;; Registers used:
 32562 ;;		wreg, status,2, cstack
 32563 ;; Tracked objects:
 32564 ;;		On entry : 0/2
 32565 ;;		On exit  : 33/2
 32566 ;;		Unchanged: 0/0
 32567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32569 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32571 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32572 ;;Total ram usage:        1 bytes
 32573 ;; Hardware stack levels used: 1
 32574 ;; Hardware stack levels required when called: 5
 32575 ;; This function calls:
 32576 ;;		_I2C1_MasterClearIrq
 32577 ;;		_I2C1_MasterClose
 32578 ;;		_I2C1_MasterDisableIrq
 32579 ;; This function is called by:
 32580 ;;		_i2c_writeNBytes
 32581 ;;		_i2c_readDataBlock
 32582 ;;		_I2C1_Read1ByteRegister
 32583 ;; This function uses a non-reentrant model
 32584 ;;
 32585                           
 32586                           	psect	text179
 32587  008EEC                     __ptext179:
 32588                           	callstack 0
 32589  008EEC                     _I2C1_Close:
 32590                           	callstack 20
 32591                           
 32592                           ;mcc_generated_files/i2c1_master.c: 211:     i2c1_error_t returnValue = I2C1_BUSY;
 32593                           
 32594                           ; BSR set to: 2
 32595                           ;incstack = 0
 32596  008EEC  0E01               	movlw	1
 32597  008EEE  6E10               	movwf	I2C1_Close@returnValue^0,c
 32598                           
 32599                           ;mcc_generated_files/i2c1_master.c: 212:     if(!I2C1_Status.busy)
 32600  008EF0  0102               	movlb	2	; () banked
 32601  008EF2  B35F               	btfsc	(_I2C1_Status+35)& (0+255),1,b
 32602  008EF4  D00A               	goto	l19325
 32603                           
 32604                           ; BSR set to: 2
 32605                           ;mcc_generated_files/i2c1_master.c: 213:     {;mcc_generated_files/i2c1_master.c: 214:  
      +                                 I2C1_Status.inUse = 0;
 32606  008EF6  955F               	bcf	(_I2C1_Status+35)& (0+255),2,b
 32607                           
 32608                           ;mcc_generated_files/i2c1_master.c: 215:         I2C1_Status.address = 0xff;
 32609  008EF8  6958               	setf	(_I2C1_Status+28)& (0+255),b
 32610                           
 32611                           ; BSR set to: 2
 32612                           ;mcc_generated_files/i2c1_master.c: 216:         I2C1_MasterClearIrq();
 32613  008EFA  EC3A  F049         	call	_I2C1_MasterClearIrq	;wreg free
 32614                           
 32615                           ;mcc_generated_files/i2c1_master.c: 217:         I2C1_MasterDisableIrq();
 32616  008EFE  EC58  F049         	call	_I2C1_MasterDisableIrq	;wreg free
 32617                           
 32618                           ;mcc_generated_files/i2c1_master.c: 218:         I2C1_MasterClose();
 32619  008F02  EC5A  F049         	call	_I2C1_MasterClose	;wreg free
 32620                           
 32621                           ; BSR set to: 14
 32622                           ;mcc_generated_files/i2c1_master.c: 219:         returnValue = I2C1_Status.error;
 32623  008F06  C25E  F010         	movff	_I2C1_Status+34,I2C1_Close@returnValue
 32624  008F0A                     l19325:
 32625                           
 32626                           ;mcc_generated_files/i2c1_master.c: 221:     return returnValue;
 32627  008F0A  5010               	movf	I2C1_Close@returnValue^0,w,c
 32628  008F0C  0012               	return		;funcret
 32629  008F0E                     __end_of_I2C1_Close:
 32630                           	callstack 0
 32631                           
 32632 ;; *************** function _I2C1_MasterDisableIrq *****************
 32633 ;; Defined at:
 32634 ;;		line 635 in file "mcc_generated_files/i2c1_master.c"
 32635 ;; Parameters:    Size  Location     Type
 32636 ;;		None
 32637 ;; Auto vars:     Size  Location     Type
 32638 ;;		None
 32639 ;; Return value:  Size  Location     Type
 32640 ;;                  1    wreg      void 
 32641 ;; Registers used:
 32642 ;;		None
 32643 ;; Tracked objects:
 32644 ;;		On entry : 3F/E
 32645 ;;		On exit  : 3F/E
 32646 ;;		Unchanged: 0/0
 32647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32648 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32649 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32651 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32652 ;;Total ram usage:        0 bytes
 32653 ;; Hardware stack levels used: 1
 32654 ;; Hardware stack levels required when called: 4
 32655 ;; This function calls:
 32656 ;;		Nothing
 32657 ;; This function is called by:
 32658 ;;		_I2C1_Close
 32659 ;; This function uses a non-reentrant model
 32660 ;;
 32661                           
 32662                           	psect	text180
 32663  0092B0                     __ptext180:
 32664                           	callstack 0
 32665  0092B0                     _I2C1_MasterDisableIrq:
 32666                           	callstack 20
 32667                           
 32668                           ; BSR set to: 14
 32669                           ;mcc_generated_files/i2c1_master.c: 637:     PIE3bits.SSP1IE = 0;
 32670                           
 32671                           ;incstack = 0
 32672  0092B0  91C5               	bcf	197,0,b	;volatile
 32673                           
 32674                           ; BSR set to: 14
 32675  0092B2  0012               	return		;funcret
 32676  0092B4                     __end_of_I2C1_MasterDisableIrq:
 32677                           	callstack 0
 32678                           
 32679 ;; *************** function _I2C1_MasterClose *****************
 32680 ;; Defined at:
 32681 ;;		line 557 in file "mcc_generated_files/i2c1_master.c"
 32682 ;; Parameters:    Size  Location     Type
 32683 ;;		None
 32684 ;; Auto vars:     Size  Location     Type
 32685 ;;		None
 32686 ;; Return value:  Size  Location     Type
 32687 ;;                  1    wreg      void 
 32688 ;; Registers used:
 32689 ;;		None
 32690 ;; Tracked objects:
 32691 ;;		On entry : 3F/E
 32692 ;;		On exit  : 3F/E
 32693 ;;		Unchanged: 3F/0
 32694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32698 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32699 ;;Total ram usage:        0 bytes
 32700 ;; Hardware stack levels used: 1
 32701 ;; Hardware stack levels required when called: 4
 32702 ;; This function calls:
 32703 ;;		Nothing
 32704 ;; This function is called by:
 32705 ;;		_I2C1_Close
 32706 ;; This function uses a non-reentrant model
 32707 ;;
 32708                           
 32709                           	psect	text181
 32710  0092B4                     __ptext181:
 32711                           	callstack 0
 32712  0092B4                     _I2C1_MasterClose:
 32713                           	callstack 20
 32714                           
 32715                           ; BSR set to: 14
 32716                           ;mcc_generated_files/i2c1_master.c: 560:     SSP1CON1bits.SSPEN = 0;
 32717                           
 32718                           ; BSR set to: 14
 32719                           ;incstack = 0
 32720  0092B4  9A96               	bcf	150,5,c	;volatile
 32721                           
 32722                           ; BSR set to: 14
 32723  0092B6  0012               	return		;funcret
 32724  0092B8                     __end_of_I2C1_MasterClose:
 32725                           	callstack 0
 32726                           
 32727 ;; *************** function _I2C1_MasterClearIrq *****************
 32728 ;; Defined at:
 32729 ;;		line 640 in file "mcc_generated_files/i2c1_master.c"
 32730 ;; Parameters:    Size  Location     Type
 32731 ;;		None
 32732 ;; Auto vars:     Size  Location     Type
 32733 ;;		None
 32734 ;; Return value:  Size  Location     Type
 32735 ;;                  1    wreg      void 
 32736 ;; Registers used:
 32737 ;;		None
 32738 ;; Tracked objects:
 32739 ;;		On entry : 33/2
 32740 ;;		On exit  : 3F/E
 32741 ;;		Unchanged: 0/0
 32742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32743 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32744 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32746 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32747 ;;Total ram usage:        0 bytes
 32748 ;; Hardware stack levels used: 1
 32749 ;; Hardware stack levels required when called: 4
 32750 ;; This function calls:
 32751 ;;		Nothing
 32752 ;; This function is called by:
 32753 ;;		_I2C1_Open
 32754 ;;		_I2C1_Close
 32755 ;;		_I2C1_MasterFsm
 32756 ;; This function uses a non-reentrant model
 32757 ;;
 32758                           
 32759                           	psect	text182
 32760  009274                     __ptext182:
 32761                           	callstack 0
 32762  009274                     _I2C1_MasterClearIrq:
 32763                           	callstack 20
 32764                           
 32765                           ;mcc_generated_files/i2c1_master.c: 642:     PIR3bits.SSP1IF = 0;
 32766                           
 32767                           ; BSR set to: 14
 32768                           ;incstack = 0
 32769  009274  010E               	movlb	14	; () banked
 32770  009276  91CD               	bcf	205,0,b	;volatile
 32771                           
 32772                           ; BSR set to: 14
 32773  009278  0012               	return		;funcret
 32774  00927A                     __end_of_I2C1_MasterClearIrq:
 32775                           	callstack 0
 32776                           
 32777 ;; *************** function _INTERRUPT_InterruptManager *****************
 32778 ;; Defined at:
 32779 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
 32780 ;; Parameters:    Size  Location     Type
 32781 ;;		None
 32782 ;; Auto vars:     Size  Location     Type
 32783 ;;		None
 32784 ;; Return value:  Size  Location     Type
 32785 ;;                  1    wreg      void 
 32786 ;; Registers used:
 32787 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 32788 ;; Tracked objects:
 32789 ;;		On entry : 0/0
 32790 ;;		On exit  : 0/0
 32791 ;;		Unchanged: 0/0
 32792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32794 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32795 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32796 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32797 ;;Total ram usage:        6 bytes
 32798 ;; Hardware stack levels used: 1
 32799 ;; Hardware stack levels required when called: 3
 32800 ;; This function calls:
 32801 ;;		Absolute function
 32802 ;;		_EUSART1_Receive_ISR
 32803 ;;		_EUSART1_Transmit_ISR
 32804 ;;		_TMR0_ISR
 32805 ;;		_TMR1_ISR
 32806 ;;		_TMR2_ISR
 32807 ;; This function is called by:
 32808 ;;		Interrupt level 2
 32809 ;; This function uses a non-reentrant model
 32810 ;;
 32811                           
 32812                           	psect	intcode
 32813  000008                     __pintcode:
 32814                           	callstack 0
 32815  000008                     _INTERRUPT_InterruptManager:
 32816                           	callstack 14
 32817                           
 32818                           ; BSR set to: 14
 32819                           ;incstack = 0
 32820  000008  8250               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 32821  00000A  CFFA F00A          	movff	pclath,??_INTERRUPT_InterruptManager
 32822  00000E  CFFB F00B          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 32823  000012  CFD9 F00C          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
 32824  000016  CFDA F00D          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
 32825  00001A  CFF3 F00E          	movff	prodl,??_INTERRUPT_InterruptManager+4
 32826  00001E  CFF4 F00F          	movff	prodh,??_INTERRUPT_InterruptManager+5
 32827                           
 32828                           ;mcc_generated_files/interrupt_manager.c: 61:     if(PIE0bits.TMR0IE == 1 && PIR0bits.TM
      +                          R0IF == 1)
 32829  000022  010E               	movlb	14	; () banked
 32830  000024  BBC2               	btfsc	194,5,b	;volatile
 32831                           
 32832                           ; BSR set to: 14
 32833  000026  ABCA               	btfss	202,5,b	;volatile
 32834  000028  D003               	goto	i2l867
 32835                           
 32836                           ; BSR set to: 14
 32837                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         TMR0_ISR();
 32838  00002A  EC1C  F047         	call	_TMR0_ISR	;wreg free
 32839                           
 32840                           ;mcc_generated_files/interrupt_manager.c: 64:     }
 32841  00002E  D028               	goto	i2l873
 32842  000030                     i2l867:
 32843                           
 32844                           ; BSR set to: 14
 32845  000030  ACF2               	btfss	242,6,c	;volatile
 32846  000032  D026               	goto	i2l873
 32847                           
 32848                           ; BSR set to: 14
 32849                           ;mcc_generated_files/interrupt_manager.c: 66:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 67:         if(PIE3bits.TX1IE == 1 && PIR3bits.TX1IF == 1)
 32850  000034  B9C5               	btfsc	197,4,b	;volatile
 32851                           
 32852                           ; BSR set to: 14
 32853  000036  A9CD               	btfss	205,4,b	;volatile
 32854  000038  D009               	goto	i2l870
 32855                           
 32856                           ; BSR set to: 14
 32857                           ;mcc_generated_files/interrupt_manager.c: 68:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 69:             EUSART1_TxDefaultInterruptHandler();
 32858  00003A  D801               	call	i2u2170_48
 32859  00003C  D021               	goto	i2l873
 32860  00003E                     i2u2170_48:
 32861  00003E  0005               	push	
 32862  000040  6EFA               	movwf	pclath,c
 32863  000042  0102               	movlb	2	; () banked
 32864  000044  51ED               	movf	_EUSART1_TxDefaultInterruptHandler& (0+255),w,b
 32865  000046  6EFD               	movwf	tosl,c
 32866  000048  51EE               	movf	(_EUSART1_TxDefaultInterruptHandler+1)& (0+255),w,b
 32867  00004A  D00B               	goto	L112
 32868  00004C                     i2l870:
 32869                           
 32870                           ; BSR set to: 14
 32871  00004C  BBC5               	btfsc	197,5,b	;volatile
 32872                           
 32873                           ; BSR set to: 14
 32874  00004E  ABCD               	btfss	205,5,b	;volatile
 32875  000050  D00C               	goto	i2l872
 32876                           
 32877                           ; BSR set to: 14
 32878                           ;mcc_generated_files/interrupt_manager.c: 72:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 73:             EUSART1_RxDefaultInterruptHandler();
 32879  000052  D801               	call	i2u2173_48
 32880  000054  D015               	goto	i2l873
 32881  000056                     i2u2173_48:
 32882  000056  0005               	push	
 32883  000058  6EFA               	movwf	pclath,c
 32884  00005A  0102               	movlb	2	; () banked
 32885  00005C  51EB               	movf	_EUSART1_RxDefaultInterruptHandler& (0+255),w,b
 32886  00005E  6EFD               	movwf	tosl,c
 32887  000060  51EC               	movf	(_EUSART1_RxDefaultInterruptHandler+1)& (0+255),w,b
 32888  000062                     L112:
 32889  000062  6EFE               	movwf	tosh,c
 32890  000064  6AFF               	clrf	tosu,c
 32891  000066  50FA               	movf	pclath,w,c
 32892  000068  0012               	return		;indir
 32893  00006A                     i2l872:
 32894                           
 32895                           ; BSR set to: 14
 32896  00006A  B1C6               	btfsc	198,0,b	;volatile
 32897                           
 32898                           ; BSR set to: 14
 32899  00006C  A1CE               	btfss	206,0,b	;volatile
 32900  00006E  D003               	goto	i2l874
 32901                           
 32902                           ; BSR set to: 14
 32903                           ;mcc_generated_files/interrupt_manager.c: 76:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 77:             TMR1_ISR();
 32904  000070  ECAB  F044         	call	_TMR1_ISR	;wreg free
 32905                           
 32906                           ;mcc_generated_files/interrupt_manager.c: 78:         }
 32907  000074  D005               	goto	i2l873
 32908  000076                     i2l874:
 32909                           
 32910                           ; BSR set to: 14
 32911  000076  B3C6               	btfsc	198,1,b	;volatile
 32912                           
 32913                           ; BSR set to: 14
 32914  000078  A3CE               	btfss	206,1,b	;volatile
 32915  00007A  D002               	goto	i2l873
 32916                           
 32917                           ; BSR set to: 14
 32918                           ;mcc_generated_files/interrupt_manager.c: 80:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 81:             TMR2_ISR();
 32919  00007C  ECEF  F02F         	call	_TMR2_ISR	;wreg free
 32920  000080                     i2l873:
 32921                           
 32922                           ; BSR set to: 14
 32923  000080  C00F  FFF4         	movff	??_INTERRUPT_InterruptManager+5,prodh
 32924  000084  C00E  FFF3         	movff	??_INTERRUPT_InterruptManager+4,prodl
 32925  000088  C00D  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
 32926  00008C  C00C  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
 32927  000090  C00B  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 32928  000094  C00A  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 32929  000098  9250               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 32930  00009A  0011               	retfie		f
 32931  00009C                     __end_of_INTERRUPT_InterruptManager:
 32932                           	callstack 0
 32933                           
 32934 ;; *************** function _TMR2_ISR *****************
 32935 ;; Defined at:
 32936 ;;		line 180 in file "mcc_generated_files/tmr2.c"
 32937 ;; Parameters:    Size  Location     Type
 32938 ;;		None
 32939 ;; Auto vars:     Size  Location     Type
 32940 ;;		None
 32941 ;; Return value:  Size  Location     Type
 32942 ;;                  1    wreg      void 
 32943 ;; Registers used:
 32944 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 32945 ;; Tracked objects:
 32946 ;;		On entry : 3F/E
 32947 ;;		On exit  : 0/0
 32948 ;;		Unchanged: 0/0
 32949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32950 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32951 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32952 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32953 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32954 ;;Total ram usage:        0 bytes
 32955 ;; Hardware stack levels used: 1
 32956 ;; Hardware stack levels required when called: 2
 32957 ;; This function calls:
 32958 ;;		Absolute function
 32959 ;;		_ReadADC
 32960 ;;		_TMR2_DefaultInterruptHandler
 32961 ;;		_controlTimeslots
 32962 ;;		_refreshSegment
 32963 ;; This function is called by:
 32964 ;;		_INTERRUPT_InterruptManager
 32965 ;; This function uses a non-reentrant model
 32966 ;;
 32967                           
 32968                           	psect	text184
 32969  005FDE                     __ptext184:
 32970                           	callstack 0
 32971  005FDE                     _TMR2_ISR:
 32972                           	callstack 14
 32973                           
 32974                           ; BSR set to: 14
 32975                           ;mcc_generated_files/tmr2.c: 184:     PIR4bits.TMR2IF = 0;
 32976                           
 32977                           ;incstack = 0
 32978  005FDE  93CE               	bcf	206,1,b	;volatile
 32979                           
 32980                           ; BSR set to: 14
 32981                           ;mcc_generated_files/tmr2.c: 188:                 ReadADC();
 32982  005FE0  EC5E  F042         	call	_ReadADC	;wreg free
 32983                           
 32984                           ;mcc_generated_files/tmr2.c: 191:             refreshSegment();
 32985  005FE4  EC5B  F03C         	call	_refreshSegment	;wreg free
 32986                           
 32987                           ;mcc_generated_files/tmr2.c: 193:             if(ts_system.ts_TimeSlotMain>0)
 32988  005FE8  0101               	movlb	1	; () banked
 32989  005FEA  519D               	movf	(_ts_system+3)& (0+255),w,b	;volatile
 32990  005FEC  A4D8               	btfss	status,2,c
 32991                           
 32992                           ; BSR set to: 1
 32993                           ;mcc_generated_files/tmr2.c: 194:                 {;mcc_generated_files/tmr2.c: 195:    
      +                                       ts_system.ts_TimeSlotMain--;
 32994  005FEE  079D               	decf	(_ts_system+3)& (0+255),f,b	;volatile
 32995                           
 32996                           ; BSR set to: 1
 32997                           ;mcc_generated_files/tmr2.c: 198:             if (ts_system.ts_TimeSlot50ms > 0)
 32998  005FF0  519B               	movf	(_ts_system+1)& (0+255),w,b	;volatile
 32999  005FF2  B4D8               	btfsc	status,2,c
 33000  005FF4  D002               	goto	i2l16277
 33001                           
 33002                           ; BSR set to: 1
 33003                           ;mcc_generated_files/tmr2.c: 199:                 {;mcc_generated_files/tmr2.c: 200:    
      +                                       ts_system.ts_TimeSlot50ms--;
 33004  005FF6  079B               	decf	(_ts_system+1)& (0+255),f,b	;volatile
 33005                           
 33006                           ;mcc_generated_files/tmr2.c: 201:                 }
 33007  005FF8  D089               	goto	i2l16349
 33008  005FFA                     i2l16277:
 33009                           
 33010                           ; BSR set to: 1
 33011                           ;mcc_generated_files/tmr2.c: 203:                 {;mcc_generated_files/tmr2.c: 204:    
      +                                       ts_system.ts_TimeSlot50ms = 50;
 33012  005FFA  0E32               	movlw	50
 33013  005FFC  6F9B               	movwf	(_ts_system+1)& (0+255),b	;volatile
 33014                           
 33015                           ; BSR set to: 1
 33016                           ;mcc_generated_files/tmr2.c: 208:                     controlTimeslots();
 33017  005FFE  EC17  F02C         	call	_controlTimeslots	;wreg free
 33018                           
 33019                           ; BSR set to: 1
 33020                           ;mcc_generated_files/tmr2.c: 210:                       if (Counterchoose == 0)
 33021  006002  0100               	movlb	0	; () banked
 33022  006004  5192               	movf	_Counterchoose& (0+255),w,b
 33023  006006  A4D8               	btfss	status,2,c
 33024  006008  D002               	goto	i2l16285
 33025                           
 33026                           ; BSR set to: 0
 33027                           ;mcc_generated_files/tmr2.c: 211:                                {;mcc_generated_files/t
      +                          mr2.c: 212:                                    Counterchoose = 1;
 33028  00600A  0E01               	movlw	1
 33029  00600C  D001               	goto	L113
 33030  00600E                     i2l16285:
 33031                           
 33032                           ; BSR set to: 0
 33033                           ;mcc_generated_files/tmr2.c: 215:                                {;mcc_generated_files/t
      +                          mr2.c: 216:                                    Counterchoose = 0;
 33034  00600E  0E00               	movlw	0
 33035  006010                     L113:
 33036  006010  6F92               	movwf	_Counterchoose& (0+255),b
 33037                           
 33038                           ; BSR set to: 0
 33039                           ;mcc_generated_files/tmr2.c: 218:                            if (var_sys.LearningIsEnabl
      +                          ed==NO)
 33040                           
 33041                           ;mcc_generated_files/tmr2.c: 217:                                }
 33042  006012  0101               	movlb	1	; () banked
 33043  006014  5126               	movf	(_var_sys+38)& (0+255),w,b	;volatile
 33044  006016  A4D8               	btfss	status,2,c
 33045  006018  D034               	goto	i2l16311
 33046                           
 33047                           ; BSR set to: 1
 33048                           ;mcc_generated_files/tmr2.c: 219:                            {;mcc_generated_files/tmr2.
      +                          c: 222:                                if (var_sys.TimeMaxMotorIsON > 0 && var_sys.Activ
      +                          atecounter != stoped)
 33049  00601A  5118               	movf	(_var_sys+24)& (0+255),w,b	;volatile
 33050  00601C  1119               	iorwf	(_var_sys+25)& (0+255),w,b	;volatile
 33051  00601E  111A               	iorwf	(_var_sys+26)& (0+255),w,b	;volatile
 33052  006020  111B               	iorwf	(_var_sys+27)& (0+255),w,b	;volatile
 33053  006022  B4D8               	btfsc	status,2,c
 33054  006024  D008               	goto	i2l1266
 33055                           
 33056                           ; BSR set to: 1
 33057  006026  5116               	movf	(_var_sys+22)& (0+255),w,b	;volatile
 33058  006028  B4D8               	btfsc	status,2,c
 33059  00602A  D005               	goto	i2l1266
 33060                           
 33061                           ; BSR set to: 1
 33062                           ;mcc_generated_files/tmr2.c: 223:                                {;mcc_generated_files/t
      +                          mr2.c: 225:                                     var_sys.TimeMaxMotorIsON--;
 33063  00602C  0718               	decf	(_var_sys+24)& (0+255),f,b	;volatile
 33064  00602E  0E00               	movlw	0
 33065  006030  5B19               	subwfb	(_var_sys+25)& (0+255),f,b	;volatile
 33066  006032  5B1A               	subwfb	(_var_sys+26)& (0+255),f,b	;volatile
 33067  006034  5B1B               	subwfb	(_var_sys+27)& (0+255),f,b	;volatile
 33068  006036                     i2l1266:
 33069                           
 33070                           ; BSR set to: 1
 33071                           ;mcc_generated_files/tmr2.c: 230:                                if (var_sys.Activatecou
      +                          nter == open)
 33072  006036  0516               	decf	(_var_sys+22)& (0+255),w,b	;volatile
 33073  006038  A4D8               	btfss	status,2,c
 33074  00603A  D00E               	goto	i2l16301
 33075                           
 33076                           ; BSR set to: 1
 33077                           ;mcc_generated_files/tmr2.c: 231:                                {;mcc_generated_files/t
      +                          mr2.c: 232:                                    {;mcc_generated_files/tmr2.c: 234:       
      +                                                            if (powerControl_st.decelarationActive==YES)
 33078  00603C  057B               	decf	_powerControl_st& (0+255),w,b
 33079  00603E  A4D8               	btfss	status,2,c
 33080  006040  D004               	goto	i2u1843_40
 33081                           
 33082                           ; BSR set to: 1
 33083                           ;mcc_generated_files/tmr2.c: 235:                                         {;mcc_generate
      +                          d_files/tmr2.c: 236:                                             if(Counterchoose ==1){
 33084  006042  0100               	movlb	0	; () banked
 33085  006044  0592               	decf	_Counterchoose& (0+255),w,b
 33086  006046  A4D8               	btfss	status,2,c
 33087  006048  D061               	goto	i2l16349
 33088  00604A                     i2u1843_40:
 33089                           
 33090                           ;mcc_generated_files/tmr2.c: 237:                                               var_sys.
      +                          PositionActual++;
 33091  00604A  0E01               	movlw	1
 33092  00604C  0101               	movlb	1	; () banked
 33093  00604E  271E               	addwf	(_var_sys+30)& (0+255),f,b	;volatile
 33094  006050  0E00               	movlw	0
 33095  006052  231F               	addwfc	(_var_sys+31)& (0+255),f,b	;volatile
 33096  006054  2320               	addwfc	(_var_sys+32)& (0+255),f,b	;volatile
 33097  006056  D013               	goto	L114
 33098  006058                     i2l16301:
 33099                           
 33100                           ; BSR set to: 1
 33101  006058  0E02               	movlw	2
 33102  00605A  1916               	xorwf	(_var_sys+22)& (0+255),w,b	;volatile
 33103  00605C  A4D8               	btfss	status,2,c
 33104  00605E  D056               	goto	i2l16349
 33105                           
 33106                           ; BSR set to: 1
 33107                           ;mcc_generated_files/tmr2.c: 250:                                {;mcc_generated_files/t
      +                          mr2.c: 251:                                        if (powerControl_st.decelarationActiv
      +                          e==YES)
 33108  006060  057B               	decf	_powerControl_st& (0+255),w,b
 33109  006062  A4D8               	btfss	status,2,c
 33110  006064  D004               	goto	i2u1846_40
 33111                           
 33112                           ; BSR set to: 1
 33113                           ;mcc_generated_files/tmr2.c: 252:                                         {;mcc_generate
      +                          d_files/tmr2.c: 253:                                             if(Counterchoose ==1){
 33114  006066  0100               	movlb	0	; () banked
 33115  006068  0592               	decf	_Counterchoose& (0+255),w,b
 33116  00606A  A4D8               	btfss	status,2,c
 33117  00606C  D04F               	goto	i2l16349
 33118  00606E                     i2u1846_40:
 33119                           
 33120                           ;mcc_generated_files/tmr2.c: 254:                                               var_sys.
      +                          PositionActual--;
 33121  00606E  0EFF               	movlw	255
 33122  006070  0101               	movlb	1	; () banked
 33123  006072  271E               	addwf	(_var_sys+30)& (0+255),f,b	;volatile
 33124  006074  0EFF               	movlw	255
 33125  006076  231F               	addwfc	(_var_sys+31)& (0+255),f,b	;volatile
 33126  006078  0EFF               	movlw	255
 33127  00607A  2320               	addwfc	(_var_sys+32)& (0+255),f,b	;volatile
 33128  00607C  0EFF               	movlw	255
 33129  00607E                     L114:
 33130  00607E  2321               	addwfc	(_var_sys+33)& (0+255),f,b	;volatile
 33131                           
 33132                           ;mcc_generated_files/tmr2.c: 263:                            }
 33133  006080  D045               	goto	i2l16349
 33134  006082                     i2l16311:
 33135                           
 33136                           ; BSR set to: 1
 33137                           ;mcc_generated_files/tmr2.c: 266:                            {;mcc_generated_files/tmr2.
      +                          c: 267:                                if (var_sys.Counter_Learning ==1)
 33138  006082  0517               	decf	(_var_sys+23)& (0+255),w,b	;volatile
 33139  006084  A4D8               	btfss	status,2,c
 33140  006086  D01C               	goto	i2l1277
 33141                           
 33142                           ; BSR set to: 1
 33143                           ;mcc_generated_files/tmr2.c: 268:                                {;mcc_generated_files/t
      +                          mr2.c: 270:                                     if (var_sys.Activatecounter == open)
 33144  006088  0516               	decf	(_var_sys+22)& (0+255),w,b	;volatile
 33145  00608A  A4D8               	btfss	status,2,c
 33146  00608C  D00B               	goto	i2l16321
 33147                           
 33148                           ; BSR set to: 1
 33149                           ;mcc_generated_files/tmr2.c: 271:                                     {;mcc_generated_fi
      +                          les/tmr2.c: 273:                                         if (var_sys.LearningDecelaratio
      +                          n ==1)
 33150  00608E  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 33151  006090  B4D8               	btfsc	status,2,c
 33152  006092  D016               	goto	i2l1277
 33153                           
 33154                           ; BSR set to: 1
 33155                           ;mcc_generated_files/tmr2.c: 282:                                            {;mcc_gener
      +                          ated_files/tmr2.c: 283:                                              learn_st.timeOpen++
      +                          ;
 33156  006094  0E01               	movlw	1
 33157  006096  0100               	movlb	0	; () banked
 33158  006098  2764               	addwf	(_learn_st+4)& (0+255),f,b	;volatile
 33159  00609A  0E00               	movlw	0
 33160  00609C  2365               	addwfc	(_learn_st+5)& (0+255),f,b	;volatile
 33161  00609E  2366               	addwfc	(_learn_st+6)& (0+255),f,b	;volatile
 33162  0060A0  2367               	addwfc	(_learn_st+7)& (0+255),f,b	;volatile
 33163  0060A2  D00E               	goto	i2l1277
 33164  0060A4                     i2l16321:
 33165                           
 33166                           ; BSR set to: 1
 33167  0060A4  0E02               	movlw	2
 33168  0060A6  1916               	xorwf	(_var_sys+22)& (0+255),w,b	;volatile
 33169  0060A8  A4D8               	btfss	status,2,c
 33170  0060AA  D00A               	goto	i2l1277
 33171                           
 33172                           ; BSR set to: 1
 33173                           ;mcc_generated_files/tmr2.c: 287:                                     {;mcc_generated_fi
      +                          les/tmr2.c: 289:                                         if (var_sys.LearningDecelaratio
      +                          n ==1)
 33174  0060AC  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 33175  0060AE  B4D8               	btfsc	status,2,c
 33176  0060B0  D007               	goto	i2l1277
 33177                           
 33178                           ; BSR set to: 1
 33179                           ;mcc_generated_files/tmr2.c: 297:                                             {;mcc_gene
      +                          rated_files/tmr2.c: 298:                                                learn_st.timeClo
      +                          se++;
 33180  0060B2  0E01               	movlw	1
 33181  0060B4  0100               	movlb	0	; () banked
 33182  0060B6  2760               	addwf	_learn_st& (0+255),f,b	;volatile
 33183  0060B8  0E00               	movlw	0
 33184  0060BA  2361               	addwfc	(_learn_st+1)& (0+255),f,b	;volatile
 33185  0060BC  2362               	addwfc	(_learn_st+2)& (0+255),f,b	;volatile
 33186  0060BE  2363               	addwfc	(_learn_st+3)& (0+255),f,b	;volatile
 33187  0060C0                     i2l1277:
 33188                           
 33189                           ;mcc_generated_files/tmr2.c: 304:                                 if (var_sys.LearningDe
      +                          celaration ==1 && var_sys.programinAutomatic == 1)
 33190  0060C0  0101               	movlb	1	; () banked
 33191  0060C2  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 33192  0060C4  A4D8               	btfss	status,2,c
 33193  0060C6  D022               	goto	i2l16349
 33194                           
 33195                           ; BSR set to: 1
 33196  0060C8  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
 33197  0060CA  A4D8               	btfss	status,2,c
 33198  0060CC  D01F               	goto	i2l16349
 33199                           
 33200                           ; BSR set to: 1
 33201                           ;mcc_generated_files/tmr2.c: 305:                                 {;mcc_generated_files/
      +                          tmr2.c: 308:                                        if ( ts_system.ts_TimeSlot500ms > 0)
 33202  0060CE  519A               	movf	_ts_system& (0+255),w,b	;volatile
 33203  0060D0  B4D8               	btfsc	status,2,c
 33204  0060D2  D002               	goto	i2l16335
 33205                           
 33206                           ; BSR set to: 1
 33207                           ;mcc_generated_files/tmr2.c: 309:                                            {;mcc_gener
      +                          ated_files/tmr2.c: 310:                                                ts_system.ts_Time
      +                          Slot500ms--;
 33208  0060D4  079A               	decf	_ts_system& (0+255),f,b	;volatile
 33209                           
 33210                           ;mcc_generated_files/tmr2.c: 311:                                            }
 33211  0060D6  D01A               	goto	i2l16349
 33212  0060D8                     i2l16335:
 33213                           
 33214                           ; BSR set to: 1
 33215                           ;mcc_generated_files/tmr2.c: 314:                                          {;mcc_generat
      +                          ed_files/tmr2.c: 315:                                             ts_system.ts_TimeSlot5
      +                          00ms = 10;
 33216  0060D8  0E0A               	movlw	10
 33217  0060DA  6F9A               	movwf	_ts_system& (0+255),b	;volatile
 33218                           
 33219                           ; BSR set to: 1
 33220                           ;mcc_generated_files/tmr2.c: 317:                                             if ( var_s
      +                          ys.Activatecounter ==open )
 33221  0060DC  0516               	decf	(_var_sys+22)& (0+255),w,b	;volatile
 33222  0060DE  A4D8               	btfss	status,2,c
 33223  0060E0  D009               	goto	i2l16343
 33224                           
 33225                           ; BSR set to: 1
 33226                           ;mcc_generated_files/tmr2.c: 318:                                                {;mcc_g
      +                          enerated_files/tmr2.c: 319:                                                  learn_st.ti
      +                          meDecelerationOpen++;
 33227  0060E2  0100               	movlb	0	; () banked
 33228  0060E4  2B69               	incf	(_learn_st+9)& (0+255),f,b	;volatile
 33229                           
 33230                           ; BSR set to: 0
 33231                           ;mcc_generated_files/tmr2.c: 320:                                                  learn
      +                          _st.timeOpen++;
 33232  0060E6  0E01               	movlw	1
 33233  0060E8  2764               	addwf	(_learn_st+4)& (0+255),f,b	;volatile
 33234  0060EA  0E00               	movlw	0
 33235  0060EC  2365               	addwfc	(_learn_st+5)& (0+255),f,b	;volatile
 33236  0060EE  2366               	addwfc	(_learn_st+6)& (0+255),f,b	;volatile
 33237  0060F0  2367               	addwfc	(_learn_st+7)& (0+255),f,b	;volatile
 33238                           
 33239                           ;mcc_generated_files/tmr2.c: 322:                                                }
 33240  0060F2  D00C               	goto	i2l16349
 33241  0060F4                     i2l16343:
 33242                           
 33243                           ; BSR set to: 1
 33244  0060F4  0E02               	movlw	2
 33245  0060F6  1916               	xorwf	(_var_sys+22)& (0+255),w,b	;volatile
 33246  0060F8  A4D8               	btfss	status,2,c
 33247  0060FA  D008               	goto	i2l16349
 33248                           
 33249                           ; BSR set to: 1
 33250                           ;mcc_generated_files/tmr2.c: 325:                                                {;mcc_g
      +                          enerated_files/tmr2.c: 326:                                                  learn_st.ti
      +                          meDecelerationClose++;
 33251  0060FC  0100               	movlb	0	; () banked
 33252  0060FE  2B68               	incf	(_learn_st+8)& (0+255),f,b	;volatile
 33253                           
 33254                           ; BSR set to: 0
 33255                           ;mcc_generated_files/tmr2.c: 327:                                                  learn
      +                          _st.timeClose++;
 33256  006100  0E01               	movlw	1
 33257  006102  2760               	addwf	_learn_st& (0+255),f,b	;volatile
 33258  006104  0E00               	movlw	0
 33259  006106  2361               	addwfc	(_learn_st+1)& (0+255),f,b	;volatile
 33260  006108  2362               	addwfc	(_learn_st+2)& (0+255),f,b	;volatile
 33261  00610A  2363               	addwfc	(_learn_st+3)& (0+255),f,b	;volatile
 33262  00610C                     i2l16349:
 33263                           
 33264                           ;mcc_generated_files/tmr2.c: 335:     if(TMR2_InterruptHandler)
 33265  00610C  0102               	movlb	2	; () banked
 33266  00610E  51DD               	movf	_TMR2_InterruptHandler& (0+255),w,b
 33267  006110  11DE               	iorwf	(_TMR2_InterruptHandler+1)& (0+255),w,b
 33268  006112  B4D8               	btfsc	status,2,c
 33269  006114  0012               	return	
 33270                           
 33271                           ; BSR set to: 2
 33272                           ;mcc_generated_files/tmr2.c: 336:     {;mcc_generated_files/tmr2.c: 337:         TMR2_In
      +                          terruptHandler();
 33273  006116  D801               	call	i2u1858_48
 33274  006118  0012               	return	
 33275  00611A                     i2u1858_48:
 33276  00611A  0005               	push	
 33277  00611C  6EFA               	movwf	pclath,c
 33278  00611E  51DD               	movf	_TMR2_InterruptHandler& (0+255),w,b
 33279  006120  6EFD               	movwf	tosl,c
 33280  006122  51DE               	movf	(_TMR2_InterruptHandler+1)& (0+255),w,b
 33281  006124  6EFE               	movwf	tosh,c
 33282  006126  6AFF               	clrf	tosu,c
 33283  006128  50FA               	movf	pclath,w,c
 33284  00612A  0012               	return		;indir
 33285  00612C                     __end_of_TMR2_ISR:
 33286                           	callstack 0
 33287                           
 33288 ;; *************** function _refreshSegment *****************
 33289 ;; Defined at:
 33290 ;;		line 50 in file "outputs_MC50.c"
 33291 ;; Parameters:    Size  Location     Type
 33292 ;;		None
 33293 ;; Auto vars:     Size  Location     Type
 33294 ;;		None
 33295 ;; Return value:  Size  Location     Type
 33296 ;;                  1    wreg      void 
 33297 ;; Registers used:
 33298 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 33299 ;; Tracked objects:
 33300 ;;		On entry : 31/E
 33301 ;;		On exit  : 3E/0
 33302 ;;		Unchanged: 0/0
 33303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33304 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33305 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33307 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33308 ;;Total ram usage:        0 bytes
 33309 ;; Hardware stack levels used: 1
 33310 ;; Hardware stack levels required when called: 1
 33311 ;; This function calls:
 33312 ;;		_Segments_Set
 33313 ;; This function is called by:
 33314 ;;		_TMR2_ISR
 33315 ;; This function uses a non-reentrant model
 33316 ;;
 33317                           
 33318                           	psect	text185
 33319  0078B6                     __ptext185:
 33320                           	callstack 0
 33321  0078B6                     _refreshSegment:
 33322                           	callstack 14
 33323                           
 33324                           ;outputs_MC50.c: 54:     if (dispStruct.intermitentFreq==0||dispStruct.upFase==1)
 33325                           
 33326                           ;incstack = 0
 33327  0078B6  0100               	movlb	0	; () banked
 33328  0078B8  5175               	movf	(_dispStruct+3)& (0+255),w,b	;volatile
 33329  0078BA  1176               	iorwf	(_dispStruct+4)& (0+255),w,b	;volatile
 33330  0078BC  B4D8               	btfsc	status,2,c
 33331  0078BE  D003               	goto	i2u1460_40
 33332                           
 33333                           ; BSR set to: 0
 33334  0078C0  0577               	decf	(_dispStruct+5)& (0+255),w,b	;volatile
 33335  0078C2  A4D8               	btfss	status,2,c
 33336  0078C4  D01F               	goto	i2l2128
 33337  0078C6                     i2u1460_40:
 33338                           
 33339                           ; BSR set to: 0
 33340                           ;outputs_MC50.c: 55:     {;outputs_MC50.c: 56:         if (dispStruct.lastDisplay==disp2
      +                          _e)
 33341  0078C6  0574               	decf	(_dispStruct+2)& (0+255),w,b	;volatile
 33342  0078C8  A4D8               	btfss	status,2,c
 33343  0078CA  D00D               	goto	i2l2123
 33344                           
 33345                           ; BSR set to: 0
 33346                           
 33347                           ;outputs_MC50.c: 57:         {;outputs_MC50.c: 58:             do { LATCbits.LATC0 = 0; 
      +                          } while(0);
 33348  0078CC  9085               	bcf	133,0,c	;volatile
 33349                           
 33350                           ; BSR set to: 0
 33351                           ;outputs_MC50.c: 59:             Segments_Set(DispTable[dispStruct.display_grp.value_dis
      +                          play1]);
 33352  0078CE  0ED2               	movlw	low _DispTable
 33353  0078D0  2572               	addwf	_dispStruct& (0+255),w,b	;volatile
 33354  0078D2  6ED9               	movwf	fsr2l,c
 33355  0078D4  6ADA               	clrf	fsr2h,c
 33356  0078D6  0E03               	movlw	high _DispTable
 33357  0078D8  22DA               	addwfc	fsr2h,f,c
 33358  0078DA  50DF               	movf	indf2,w,c
 33359  0078DC  ECC1  F048         	call	_Segments_Set
 33360  0078E0  8285               	bsf	133,1,c	;volatile
 33361                           
 33362                           ;outputs_MC50.c: 61:             dispStruct.lastDisplay=disp1_e;
 33363  0078E2  0E00               	movlw	0
 33364  0078E4  D00C               	goto	L115
 33365  0078E6                     i2l2123:
 33366                           
 33367                           ; BSR set to: 0
 33368  0078E6  9285               	bcf	133,1,c	;volatile
 33369                           
 33370                           ; BSR set to: 0
 33371                           ;outputs_MC50.c: 66:             Segments_Set(DispTable[dispStruct.display_grp.value_dis
      +                          play2]);
 33372  0078E8  0ED2               	movlw	low _DispTable
 33373  0078EA  2573               	addwf	(_dispStruct+1)& (0+255),w,b	;volatile
 33374  0078EC  6ED9               	movwf	fsr2l,c
 33375  0078EE  6ADA               	clrf	fsr2h,c
 33376  0078F0  0E03               	movlw	high _DispTable
 33377  0078F2  22DA               	addwfc	fsr2h,f,c
 33378  0078F4  50DF               	movf	indf2,w,c
 33379  0078F6  ECC1  F048         	call	_Segments_Set
 33380  0078FA  8085               	bsf	133,0,c	;volatile
 33381                           
 33382                           ;outputs_MC50.c: 68:             dispStruct.lastDisplay=disp2_e;
 33383  0078FC  0E01               	movlw	1
 33384  0078FE                     L115:
 33385  0078FE  0100               	movlb	0	; () banked
 33386  007900  6F74               	movwf	(_dispStruct+2)& (0+255),b	;volatile
 33387  007902  D002               	goto	i2l14365
 33388  007904                     i2l2128:
 33389                           
 33390                           ; BSR set to: 0
 33391  007904  9085               	bcf	133,0,c	;volatile
 33392                           
 33393                           ; BSR set to: 0
 33394                           
 33395                           ;outputs_MC50.c: 75:         do { LATCbits.LATC1 = 0; } while(0);
 33396  007906  9285               	bcf	133,1,c	;volatile
 33397  007908                     i2l14365:
 33398                           
 33399                           ; BSR set to: 0
 33400                           ;outputs_MC50.c: 79:     if(ts_system.timeFreqDigit<=0 && dispStruct.intermitentFreq!=0)
 33401  007908  0101               	movlb	1	; () banked
 33402  00790A  BFA5               	btfsc	(_ts_system+11)& (0+255),7,b	;volatile
 33403  00790C  D005               	goto	i2u1462_40
 33404  00790E  51A5               	movf	(_ts_system+11)& (0+255),w,b	;volatile
 33405  007910  E114               	bnz	i2l2135
 33406  007912  05A4               	decf	(_ts_system+10)& (0+255),w,b	;volatile
 33407  007914  B0D8               	btfsc	status,0,c
 33408  007916  0012               	return	
 33409  007918                     i2u1462_40:
 33410                           
 33411                           ; BSR set to: 1
 33412  007918  0100               	movlb	0	; () banked
 33413  00791A  5175               	movf	(_dispStruct+3)& (0+255),w,b	;volatile
 33414  00791C  1176               	iorwf	(_dispStruct+4)& (0+255),w,b	;volatile
 33415  00791E  B4D8               	btfsc	status,2,c
 33416  007920  0012               	return	
 33417                           
 33418                           ; BSR set to: 0
 33419                           ;outputs_MC50.c: 80:     {;outputs_MC50.c: 81:         ts_system.timeFreqDigit=dispStruc
      +                          t.intermitentFreq;
 33420  007922  C075  F1A4         	movff	_dispStruct+3,_ts_system+10	;volatile
 33421  007926  C076  F1A5         	movff	_dispStruct+4,_ts_system+11	;volatile
 33422                           
 33423                           ; BSR set to: 0
 33424                           ;outputs_MC50.c: 82:         if(dispStruct.upFase==1)
 33425  00792A  0577               	decf	(_dispStruct+5)& (0+255),w,b	;volatile
 33426  00792C  A4D8               	btfss	status,2,c
 33427  00792E  D003               	goto	i2l14375
 33428                           
 33429                           ; BSR set to: 0
 33430                           ;outputs_MC50.c: 83:         {;outputs_MC50.c: 84:             dispStruct.upFase = 0;
 33431  007930  0E00               	movlw	0
 33432  007932  6F77               	movwf	(_dispStruct+5)& (0+255),b	;volatile
 33433                           
 33434                           ;outputs_MC50.c: 85:         }
 33435  007934  0012               	return	
 33436  007936                     i2l14375:
 33437                           
 33438                           ; BSR set to: 0
 33439                           ;outputs_MC50.c: 87:         {;outputs_MC50.c: 88:             dispStruct.upFase = 1;
 33440  007936  0E01               	movlw	1
 33441  007938  6F77               	movwf	(_dispStruct+5)& (0+255),b	;volatile
 33442  00793A                     i2l2135:
 33443  00793A  0012               	return		;funcret
 33444  00793C                     __end_of_refreshSegment:
 33445                           	callstack 0
 33446                           
 33447 ;; *************** function _Segments_Set *****************
 33448 ;; Defined at:
 33449 ;;		line 93 in file "outputs_MC50.c"
 33450 ;; Parameters:    Size  Location     Type
 33451 ;;  value           1    wreg     unsigned char 
 33452 ;; Auto vars:     Size  Location     Type
 33453 ;;  value           1    0[COMRAM] unsigned char 
 33454 ;; Return value:  Size  Location     Type
 33455 ;;                  1    wreg      void 
 33456 ;; Registers used:
 33457 ;;		wreg, status,2, status,0
 33458 ;; Tracked objects:
 33459 ;;		On entry : 3F/0
 33460 ;;		On exit  : 0/0
 33461 ;;		Unchanged: 0/0
 33462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33464 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33466 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33467 ;;Total ram usage:        1 bytes
 33468 ;; Hardware stack levels used: 1
 33469 ;; This function calls:
 33470 ;;		Nothing
 33471 ;; This function is called by:
 33472 ;;		_refreshSegment
 33473 ;; This function uses a non-reentrant model
 33474 ;;
 33475                           
 33476                           	psect	text186
 33477  009182                     __ptext186:
 33478                           	callstack 0
 33479  009182                     _Segments_Set:
 33480                           	callstack 14
 33481                           
 33482                           ;incstack = 0
 33483                           ;Segments_Set@value stored from wreg
 33484  009182  6E01               	movwf	Segments_Set@value^0,c
 33485                           
 33486                           ;outputs_MC50.c: 93: void Segments_Set(char value);outputs_MC50.c: 94: {;outputs_MC50.c:
      +                           95:    LATD &= 0x80;
 33487  009184  0E80               	movlw	128
 33488  009186  1686               	andwf	134,f,c	;volatile
 33489                           
 33490                           ;outputs_MC50.c: 96:    LATD |= value;
 33491  009188  5001               	movf	Segments_Set@value^0,w,c	;volatile
 33492  00918A  1286               	iorwf	134,f,c	;volatile
 33493  00918C  0012               	return		;funcret
 33494  00918E                     __end_of_Segments_Set:
 33495                           	callstack 0
 33496                           
 33497 ;; *************** function _controlTimeslots *****************
 33498 ;; Defined at:
 33499 ;;		line 190 in file "main_MC50.c"
 33500 ;; Parameters:    Size  Location     Type
 33501 ;;		None
 33502 ;; Auto vars:     Size  Location     Type
 33503 ;;		None
 33504 ;; Return value:  Size  Location     Type
 33505 ;;                  1    wreg      void 
 33506 ;; Registers used:
 33507 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 33508 ;; Tracked objects:
 33509 ;;		On entry : 3F/1
 33510 ;;		On exit  : 3F/1
 33511 ;;		Unchanged: 0/0
 33512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33513 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33514 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33516 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33517 ;;Total ram usage:        0 bytes
 33518 ;; Hardware stack levels used: 1
 33519 ;; Hardware stack levels required when called: 1
 33520 ;; This function calls:
 33521 ;;		_decrementTimeslot
 33522 ;; This function is called by:
 33523 ;;		_TMR2_ISR
 33524 ;; This function uses a non-reentrant model
 33525 ;;
 33526                           
 33527                           	psect	text187
 33528  00582E                     __ptext187:
 33529                           	callstack 0
 33530  00582E                     _controlTimeslots:
 33531                           	callstack 14
 33532                           
 33533                           ; BSR set to: 1
 33534                           ;main_MC50.c: 192:  decrementTimeslot((int*)&ts_system.Debug_TS);
 33535                           
 33536                           ;incstack = 0
 33537  00582E  0EA2               	movlw	low (_ts_system+8)
 33538  005830  6E01               	movwf	decrementTimeslot@ts^0,c
 33539  005832  0E01               	movlw	high (_ts_system+8)
 33540  005834  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33541  005836  ECBA  F046         	call	_decrementTimeslot	;wreg free
 33542                           
 33543                           ;main_MC50.c: 193:     decrementTimeslot((int*)&ts_system.timewaitFlashRGB);
 33544  00583A  0EE0               	movlw	low (_ts_system+70)
 33545  00583C  6E01               	movwf	decrementTimeslot@ts^0,c
 33546  00583E  0E01               	movlw	high (_ts_system+70)
 33547  005840  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33548  005842  ECBA  F046         	call	_decrementTimeslot	;wreg free
 33549                           
 33550                           ;main_MC50.c: 194:     decrementTimeslot((int*)&ts_system.timeFreqDigit);
 33551  005846  0EA4               	movlw	low (_ts_system+10)
 33552  005848  6E01               	movwf	decrementTimeslot@ts^0,c
 33553  00584A  0E01               	movlw	high (_ts_system+10)
 33554  00584C  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33555  00584E  ECBA  F046         	call	_decrementTimeslot	;wreg free
 33556                           
 33557                           ;main_MC50.c: 195:     decrementTimeslot((int*)&ts_system.timeSinalizationDigit);
 33558  005852  0EA6               	movlw	low (_ts_system+12)
 33559  005854  6E01               	movwf	decrementTimeslot@ts^0,c
 33560  005856  0E01               	movlw	high (_ts_system+12)
 33561  005858  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33562  00585A  ECBA  F046         	call	_decrementTimeslot	;wreg free
 33563                           
 33564                           ;main_MC50.c: 196:     decrementTimeslot((int*)&ts_system.timeoutMenu);
 33565  00585E  0EA8               	movlw	low (_ts_system+14)
 33566  005860  6E01               	movwf	decrementTimeslot@ts^0,c
 33567  005862  0E01               	movlw	high (_ts_system+14)
 33568  005864  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33569  005866  ECBA  F046         	call	_decrementTimeslot	;wreg free
 33570                           
 33571                           ;main_MC50.c: 197:     decrementTimeslot((int*)&ts_system.timeOpenWalk);
 33572  00586A  0EAA               	movlw	low (_ts_system+16)
 33573  00586C  6E01               	movwf	decrementTimeslot@ts^0,c
 33574  00586E  0E01               	movlw	high (_ts_system+16)
 33575  005870  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33576  005872  ECBA  F046         	call	_decrementTimeslot	;wreg free
 33577                           
 33578                           ;main_MC50.c: 198:     decrementTimeslot((int*)&ts_system.timeWaitToClose);
 33579  005876  0EAC               	movlw	low (_ts_system+18)
 33580  005878  6E01               	movwf	decrementTimeslot@ts^0,c
 33581  00587A  0E01               	movlw	high (_ts_system+18)
 33582  00587C  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33583  00587E  ECBA  F046         	call	_decrementTimeslot	;wreg free
 33584                           
 33585                           ;main_MC50.c: 199:     decrementTimeslot((int*)&ts_system.TimeLastCommand);
 33586  005882  0EAE               	movlw	low (_ts_system+20)
 33587  005884  6E01               	movwf	decrementTimeslot@ts^0,c
 33588  005886  0E01               	movlw	high (_ts_system+20)
 33589  005888  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33590  00588A  ECBA  F046         	call	_decrementTimeslot	;wreg free
 33591                           
 33592                           ;main_MC50.c: 200:     decrementTimeslot((int*)&ts_system.timeSoftStart);
 33593  00588E  0EB0               	movlw	low (_ts_system+22)
 33594  005890  6E01               	movwf	decrementTimeslot@ts^0,c
 33595  005892  0E01               	movlw	high (_ts_system+22)
 33596  005894  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33597  005896  ECBA  F046         	call	_decrementTimeslot	;wreg free
 33598                           
 33599                           ;main_MC50.c: 201:     decrementTimeslot((int*)&ts_system.TimeChargeCondesador);
 33600  00589A  0EB4               	movlw	low (_ts_system+26)
 33601  00589C  6E01               	movwf	decrementTimeslot@ts^0,c
 33602  00589E  0E01               	movlw	high (_ts_system+26)
 33603  0058A0  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33604  0058A2  ECBA  F046         	call	_decrementTimeslot	;wreg free
 33605                           
 33606                           ;main_MC50.c: 203:     decrementTimeslot((int*)&ts_system.timeFreqRGB);
 33607  0058A6  0EB6               	movlw	low (_ts_system+28)
 33608  0058A8  6E01               	movwf	decrementTimeslot@ts^0,c
 33609  0058AA  0E01               	movlw	high (_ts_system+28)
 33610  0058AC  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33611  0058AE  ECBA  F046         	call	_decrementTimeslot	;wreg free
 33612                           
 33613                           ;main_MC50.c: 204:     decrementTimeslot((int*)&ts_system.timeFreqFlashligth);
 33614  0058B2  0EB8               	movlw	low (_ts_system+30)
 33615  0058B4  6E01               	movwf	decrementTimeslot@ts^0,c
 33616  0058B6  0E01               	movlw	high (_ts_system+30)
 33617  0058B8  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33618  0058BA  ECBA  F046         	call	_decrementTimeslot	;wreg free
 33619                           
 33620                           ;main_MC50.c: 206:     decrementTimeslot((int*)&ts_system.TimeWaitToNextState);
 33621  0058BE  0EBE               	movlw	low (_ts_system+36)
 33622  0058C0  6E01               	movwf	decrementTimeslot@ts^0,c
 33623  0058C2  0E01               	movlw	high (_ts_system+36)
 33624  0058C4  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33625  0058C6  ECBA  F046         	call	_decrementTimeslot	;wreg free
 33626                           
 33627                           ;main_MC50.c: 208:     decrementTimeslot((int*)&ts_system.timeBetweenSaveCounters);
 33628  0058CA  0EC0               	movlw	low (_ts_system+38)
 33629  0058CC  6E01               	movwf	decrementTimeslot@ts^0,c
 33630  0058CE  0E01               	movlw	high (_ts_system+38)
 33631  0058D0  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33632  0058D2  ECBA  F046         	call	_decrementTimeslot	;wreg free
 33633                           
 33634                           ;main_MC50.c: 209:     decrementTimeslot((int*)&ts_system.TimeElectricBrake);
 33635  0058D6  0EC2               	movlw	low (_ts_system+40)
 33636  0058D8  6E01               	movwf	decrementTimeslot@ts^0,c
 33637  0058DA  0E01               	movlw	high (_ts_system+40)
 33638  0058DC  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33639  0058DE  ECBA  F046         	call	_decrementTimeslot	;wreg free
 33640                           
 33641                           ;main_MC50.c: 210:     decrementTimeslot((int*)&ts_system.TimeCurrentAlarm);
 33642  0058E2  0EC4               	movlw	low (_ts_system+42)
 33643  0058E4  6E01               	movwf	decrementTimeslot@ts^0,c
 33644  0058E6  0E01               	movlw	high (_ts_system+42)
 33645  0058E8  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33646  0058EA  ECBA  F046         	call	_decrementTimeslot	;wreg free
 33647                           
 33648                           ;main_MC50.c: 212:     decrementTimeslot((int*)&ts_system.TimeStopedBeforeDecelaration);
 33649  0058EE  0EC6               	movlw	low (_ts_system+44)
 33650  0058F0  6E01               	movwf	decrementTimeslot@ts^0,c
 33651  0058F2  0E01               	movlw	high (_ts_system+44)
 33652  0058F4  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33653  0058F6  ECBA  F046         	call	_decrementTimeslot	;wreg free
 33654                           
 33655                           ;main_MC50.c: 213:     decrementTimeslot((int*)&ts_system.TimeCurrentWaitForAlarm);
 33656  0058FA  0EC8               	movlw	low (_ts_system+46)
 33657  0058FC  6E01               	movwf	decrementTimeslot@ts^0,c
 33658  0058FE  0E01               	movlw	high (_ts_system+46)
 33659  005900  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33660  005902  ECBA  F046         	call	_decrementTimeslot	;wreg free
 33661                           
 33662                           ;main_MC50.c: 214:     decrementTimeslot((int*)&ts_system.TimeInversionStart);
 33663  005906  0ECA               	movlw	low (_ts_system+48)
 33664  005908  6E01               	movwf	decrementTimeslot@ts^0,c
 33665  00590A  0E01               	movlw	high (_ts_system+48)
 33666  00590C  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33667  00590E  ECBA  F046         	call	_decrementTimeslot	;wreg free
 33668                           
 33669                           ;main_MC50.c: 215:     decrementTimeslot((int*)&ts_system.TimeReleCapacitor);
 33670  005912  0EDC               	movlw	low (_ts_system+66)
 33671  005914  6E01               	movwf	decrementTimeslot@ts^0,c
 33672  005916  0E01               	movlw	high (_ts_system+66)
 33673  005918  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33674  00591A  ECBA  F046         	call	_decrementTimeslot	;wreg free
 33675                           
 33676                           ;main_MC50.c: 216:     decrementTimeslot((int*)&ts_system.TimeWaitReleCapacitor);
 33677  00591E  0EDE               	movlw	low (_ts_system+68)
 33678  005920  6E01               	movwf	decrementTimeslot@ts^0,c
 33679  005922  0E01               	movlw	high (_ts_system+68)
 33680  005924  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33681  005926  ECBA  F046         	call	_decrementTimeslot	;wreg free
 33682                           
 33683                           ;main_MC50.c: 221:     if ( ( var_sys_NVM.electricBrake==0 ) || ( ts_system.TimeElectric
      +                          Brake<=0 ) )
 33684  00592A  0100               	movlb	0	; () banked
 33685  00592C  51AF               	movf	(_var_sys_NVM+23)& (0+255),w,b	;volatile
 33686  00592E  B4D8               	btfsc	status,2,c
 33687  005930  D008               	goto	i2u1466_40
 33688                           
 33689                           ; BSR set to: 0
 33690  005932  0101               	movlb	1	; () banked
 33691  005934  BFC3               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 33692  005936  D005               	goto	i2u1466_40
 33693  005938  51C3               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 33694  00593A  E109               	bnz	i2l2019
 33695  00593C  05C2               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 33696  00593E  B0D8               	btfsc	status,0,c
 33697  005940  D006               	goto	i2l2019
 33698  005942                     i2u1466_40:
 33699                           
 33700                           ;main_MC50.c: 222:     {;main_MC50.c: 225:         decrementTimeslot((int*)&ts_system.In
      +                          vertionTimeClosingFromOpen);
 33701  005942  0ECC               	movlw	low (_ts_system+50)
 33702  005944  6E01               	movwf	decrementTimeslot@ts^0,c
 33703  005946  0E01               	movlw	high (_ts_system+50)
 33704  005948  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33705  00594A  ECBA  F046         	call	_decrementTimeslot	;wreg free
 33706  00594E                     i2l2019:
 33707                           
 33708                           ;main_MC50.c: 228:     decrementTimeslot((int*)&ts_system.TimeWaitToGetCurrent);
 33709  00594E  0ECE               	movlw	low (_ts_system+52)
 33710  005950  6E01               	movwf	decrementTimeslot@ts^0,c
 33711  005952  0E01               	movlw	high (_ts_system+52)
 33712  005954  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33713  005956  ECBA  F046         	call	_decrementTimeslot	;wreg free
 33714                           
 33715                           ;main_MC50.c: 229:     decrementTimeslot((int*)&ts_system.TimeLearningDecelaration);
 33716  00595A  0ED0               	movlw	low (_ts_system+54)
 33717  00595C  6E01               	movwf	decrementTimeslot@ts^0,c
 33718  00595E  0E01               	movlw	high (_ts_system+54)
 33719  005960  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33720  005962  ECBA  F046         	call	_decrementTimeslot	;wreg free
 33721                           
 33722                           ;main_MC50.c: 230:     decrementTimeslot((int*)&ts_system.TimeTransitionDecelaration);
 33723  005966  0ED2               	movlw	low (_ts_system+56)
 33724  005968  6E01               	movwf	decrementTimeslot@ts^0,c
 33725  00596A  0E01               	movlw	high (_ts_system+56)
 33726  00596C  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33727  00596E  ECBA  F046         	call	_decrementTimeslot	;wreg free
 33728                           
 33729                           ;main_MC50.c: 232:     decrementTimeslot((int*)&ts_system.timewaitBeforeSoftStart);
 33730  005972  0ED4               	movlw	low (_ts_system+58)
 33731  005974  6E01               	movwf	decrementTimeslot@ts^0,c
 33732  005976  0E01               	movlw	high (_ts_system+58)
 33733  005978  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33734  00597A  ECBA  F046         	call	_decrementTimeslot	;wreg free
 33735                           
 33736                           ;main_MC50.c: 233:     decrementTimeslot((int*)&ts_system.TimeShowVersion);
 33737  00597E  0ED6               	movlw	low (_ts_system+60)
 33738  005980  6E01               	movwf	decrementTimeslot@ts^0,c
 33739  005982  0E01               	movlw	high (_ts_system+60)
 33740  005984  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33741  005986  ECBA  F046         	call	_decrementTimeslot	;wreg free
 33742                           
 33743                           ;main_MC50.c: 235:     decrementTimeslot((int*)&ts_system.TimeStopADCZeroOffsetCalc);
 33744  00598A  0ED8               	movlw	low (_ts_system+62)
 33745  00598C  6E01               	movwf	decrementTimeslot@ts^0,c
 33746  00598E  0E01               	movlw	high (_ts_system+62)
 33747  005990  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33748  005992  ECBA  F046         	call	_decrementTimeslot	;wreg free
 33749                           
 33750                           ;main_MC50.c: 237:     decrementTimeslot((int*)&ts_system.TimeStopElectricBrake);
 33751  005996  0EDA               	movlw	low (_ts_system+64)
 33752  005998  6E01               	movwf	decrementTimeslot@ts^0,c
 33753  00599A  0E01               	movlw	high (_ts_system+64)
 33754  00599C  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33755  00599E  ECBA  F046         	call	_decrementTimeslot	;wreg free
 33756                           
 33757                           ;main_MC50.c: 240:     if (ts_system.TimeOnFlashLigth>0)
 33758  0059A2  0101               	movlb	1	; () banked
 33759  0059A4  BFBD               	btfsc	(_ts_system+35)& (0+255),7,b	;volatile
 33760  0059A6  0012               	return	
 33761  0059A8  51BD               	movf	(_ts_system+35)& (0+255),w,b	;volatile
 33762  0059AA  11BC               	iorwf	(_ts_system+34)& (0+255),w,b	;volatile
 33763  0059AC  11BB               	iorwf	(_ts_system+33)& (0+255),w,b	;volatile
 33764  0059AE  E103               	bnz	i2u1467_40
 33765  0059B0  05BA               	decf	(_ts_system+32)& (0+255),w,b	;volatile
 33766  0059B2  A0D8               	btfss	status,0,c
 33767  0059B4  0012               	return	
 33768  0059B6                     i2u1467_40:
 33769                           
 33770                           ; BSR set to: 1
 33771                           ;main_MC50.c: 241:     {;main_MC50.c: 242:         ts_system.TimeOnFlashLigth--;
 33772  0059B6  0EFF               	movlw	255
 33773  0059B8  27BA               	addwf	(_ts_system+32)& (0+255),f,b	;volatile
 33774  0059BA  0EFF               	movlw	255
 33775  0059BC  23BB               	addwfc	(_ts_system+33)& (0+255),f,b	;volatile
 33776  0059BE  0EFF               	movlw	255
 33777  0059C0  23BC               	addwfc	(_ts_system+34)& (0+255),f,b	;volatile
 33778  0059C2  0EFF               	movlw	255
 33779  0059C4  23BD               	addwfc	(_ts_system+35)& (0+255),f,b	;volatile
 33780                           
 33781                           ; BSR set to: 1
 33782  0059C6  0012               	return		;funcret
 33783  0059C8                     __end_of_controlTimeslots:
 33784                           	callstack 0
 33785                           
 33786 ;; *************** function _decrementTimeslot *****************
 33787 ;; Defined at:
 33788 ;;		line 246 in file "main_MC50.c"
 33789 ;; Parameters:    Size  Location     Type
 33790 ;;  ts              2    0[COMRAM] PTR int 
 33791 ;;		 -> ts_system.TimeShowVersion(2), ts_system.TimeLearningDecelaration(2), ts_system.TimeWaitToGetCurrent(2), ts_syste
      +m.InvertionTimeClosingFromOpen(2), 
 33792 ;;		 -> ts_system.TimeWaitReleCapacitor(2), ts_system.TimeInversionStart(2), ts_system.TimeStopedBeforeDecelaration(2), 
      +ts_system.TimeWaitToNextState(2), 
 33793 ;;		 -> ts_system.timeFreqFlashligth(2), ts_system.timeFreqRGB(2), ts_system.timeWaitToClose(2), ts_system.timeOpenWalk(
      +2), 
 33794 ;;		 -> ts_system.timeoutMenu(2), ts_system.timeFreqDigit(2), ts_system.timewaitFlashRGB(2), ts_system.TimeStopElectricB
      +rake(2), 
 33795 ;;		 -> ts_system.Debug_TS(2), ts_system.timeSinalizationDigit(2), ts_system.TimeLastCommand(2), ts_system.timeBetweenSa
      +veCounters(2), 
 33796 ;;		 -> ts_system.TimeCurrentAlarm(2), ts_system.TimeCurrentWaitForAlarm(2), ts_system.TimeReleCapacitor(2), ts_system.T
      +imeChargeCondesador(2), 
 33797 ;;		 -> ts_system.TimeTransitionDecelaration(2), ts_system.timewaitBeforeSoftStart(2), ts_system.timeSoftStart(2), ts_sy
      +stem.TimeElectricBrake(2), 
 33798 ;;		 -> ts_system.TimeStopADCZeroOffsetCalc(2), ts_system(72), 
 33799 ;; Auto vars:     Size  Location     Type
 33800 ;;		None
 33801 ;; Return value:  Size  Location     Type
 33802 ;;                  1    wreg      void 
 33803 ;; Registers used:
 33804 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 33805 ;; Tracked objects:
 33806 ;;		On entry : 0/1
 33807 ;;		On exit  : 0/0
 33808 ;;		Unchanged: 0/0
 33809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33810 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33811 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33812 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33813 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33814 ;;Total ram usage:        4 bytes
 33815 ;; Hardware stack levels used: 1
 33816 ;; This function calls:
 33817 ;;		Nothing
 33818 ;; This function is called by:
 33819 ;;		_controlTimeslots
 33820 ;; This function uses a non-reentrant model
 33821 ;;
 33822                           
 33823                           	psect	text188
 33824  008D74                     __ptext188:
 33825                           	callstack 0
 33826  008D74                     _decrementTimeslot:
 33827                           	callstack 14
 33828                           
 33829                           ;main_MC50.c: 246: void decrementTimeslot(int * ts);main_MC50.c: 247: {;main_MC50.c: 248
      +                          :     if (ts[0]>0)
 33830                           
 33831                           ; BSR set to: 1
 33832                           ;incstack = 0
 33833  008D74  C001  FFD9         	movff	decrementTimeslot@ts,fsr2l
 33834  008D78  C002  FFDA         	movff	decrementTimeslot@ts+1,fsr2h
 33835  008D7C  0E01               	movlw	1
 33836  008D7E  BEDB               	btfsc	plusw2,7,c
 33837  008D80  0012               	return	
 33838  008D82  0E01               	movlw	1
 33839  008D84  50DB               	movf	plusw2,w,c
 33840  008D86  E103               	bnz	i2u1304_40
 33841  008D88  04DE               	decf	postinc2,w,c
 33842  008D8A  A0D8               	btfss	status,0,c
 33843  008D8C  0012               	return	
 33844  008D8E                     i2u1304_40:
 33845                           
 33846                           ;main_MC50.c: 249:     {;main_MC50.c: 250:         ts[0]--;
 33847  008D8E  C001  FFD9         	movff	decrementTimeslot@ts,fsr2l
 33848  008D92  C002  FFDA         	movff	decrementTimeslot@ts+1,fsr2h
 33849  008D96  06DE               	decf	postinc2,f,c
 33850  008D98  0E00               	movlw	0
 33851  008D9A  5ADD               	subwfb	postdec2,f,c
 33852  008D9C  0012               	return		;funcret
 33853  008D9E                     __end_of_decrementTimeslot:
 33854                           	callstack 0
 33855                           
 33856 ;; *************** function _TMR2_DefaultInterruptHandler *****************
 33857 ;; Defined at:
 33858 ;;		line 346 in file "mcc_generated_files/tmr2.c"
 33859 ;; Parameters:    Size  Location     Type
 33860 ;;		None
 33861 ;; Auto vars:     Size  Location     Type
 33862 ;;		None
 33863 ;; Return value:  Size  Location     Type
 33864 ;;                  1    wreg      void 
 33865 ;; Registers used:
 33866 ;;		None
 33867 ;; Tracked objects:
 33868 ;;		On entry : 3F/2
 33869 ;;		On exit  : 3F/2
 33870 ;;		Unchanged: 3F/0
 33871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33875 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33876 ;;Total ram usage:        0 bytes
 33877 ;; Hardware stack levels used: 1
 33878 ;; This function calls:
 33879 ;;		Nothing
 33880 ;; This function is called by:
 33881 ;;		_TMR2_Initialize
 33882 ;;		_TMR2_ISR
 33883 ;; This function uses a non-reentrant model
 33884 ;;
 33885                           
 33886                           	psect	text189
 33887  0092BC                     __ptext189:
 33888                           	callstack 0
 33889  0092BC                     _TMR2_DefaultInterruptHandler:
 33890                           	callstack 15
 33891                           
 33892                           ; BSR set to: 2
 33893                           
 33894                           ;incstack = 0
 33895  0092BC  0012               	return		;funcret
 33896  0092BE                     __end_of_TMR2_DefaultInterruptHandler:
 33897                           	callstack 0
 33898                           
 33899 ;; *************** function _ReadADC *****************
 33900 ;; Defined at:
 33901 ;;		line 38 in file "controlCurrent_MC50.c"
 33902 ;; Parameters:    Size  Location     Type
 33903 ;;		None
 33904 ;; Auto vars:     Size  Location     Type
 33905 ;;		None
 33906 ;; Return value:  Size  Location     Type
 33907 ;;                  1    wreg      void 
 33908 ;; Registers used:
 33909 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33910 ;; Tracked objects:
 33911 ;;		On entry : 3F/E
 33912 ;;		On exit  : 31/0
 33913 ;;		Unchanged: 0/0
 33914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33916 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33917 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33918 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33919 ;;Total ram usage:        3 bytes
 33920 ;; Hardware stack levels used: 1
 33921 ;; Hardware stack levels required when called: 1
 33922 ;; This function calls:
 33923 ;;		_ADCC_GetSingleConversion
 33924 ;; This function is called by:
 33925 ;;		_TMR2_ISR
 33926 ;; This function uses a non-reentrant model
 33927 ;;
 33928                           
 33929                           	psect	text190
 33930  0084BC                     __ptext190:
 33931                           	callstack 0
 33932  0084BC                     _ReadADC:
 33933                           	callstack 14
 33934                           
 33935                           ; BSR set to: 14
 33936                           ;controlCurrent_MC50.c: 40:      if (!ADCON0bits.GO_nDONE)
 33937                           
 33938                           ; BSR set to: 2
 33939                           ;incstack = 0
 33940  0084BC  B060               	btfsc	96,0,c	;volatile
 33941  0084BE  0012               	return	
 33942                           
 33943                           ; BSR set to: 14
 33944                           ;controlCurrent_MC50.c: 41:      {;controlCurrent_MC50.c: 42:         if ( idxAdcAquisit
      +                          ion >= 30 )
 33945  0084C0  0E1D               	movlw	29
 33946  0084C2  0100               	movlb	0	; () banked
 33947  0084C4  6591               	cpfsgt	_idxAdcAquisition& (0+255),b	;volatile
 33948  0084C6  D002               	goto	i2l14341
 33949                           
 33950                           ; BSR set to: 0
 33951                           ;controlCurrent_MC50.c: 43:         {;controlCurrent_MC50.c: 44:             idxAdcAquis
      +                          ition=0;
 33952  0084C8  0E00               	movlw	0
 33953  0084CA  6F91               	movwf	_idxAdcAquisition& (0+255),b	;volatile
 33954  0084CC                     i2l14341:
 33955                           
 33956                           ; BSR set to: 0
 33957                           ;controlCurrent_MC50.c: 47:         ADC_array[idxAdcAquisition] = ((unsigned int)((ADRES
      +                          H << 8) + ADRESL)>>6);
 33958  0084CC  5063               	movf	99,w,c	;volatile
 33959  0084CE  CF64 F002          	movff	3940,??_ReadADC	;volatile
 33960  0084D2  6A03               	clrf	(??_ReadADC+1)^0,c
 33961  0084D4  C002  F003         	movff	??_ReadADC,??_ReadADC+1
 33962  0084D8  6A02               	clrf	??_ReadADC^0,c
 33963  0084DA  2602               	addwf	??_ReadADC^0,f,c
 33964  0084DC  0E00               	movlw	0
 33965  0084DE  2203               	addwfc	(??_ReadADC+1)^0,f,c
 33966  0084E0  0E06               	movlw	6
 33967  0084E2  6E04               	movwf	(??_ReadADC+2)^0,c
 33968  0084E4                     i2u1458_45:
 33969  0084E4  90D8               	bcf	status,0,c
 33970  0084E6  3203               	rrcf	(??_ReadADC+1)^0,f,c
 33971  0084E8  3202               	rrcf	??_ReadADC^0,f,c
 33972  0084EA  2E04               	decfsz	(??_ReadADC+2)^0,f,c
 33973  0084EC  D7FB               	goto	i2u1458_45
 33974  0084EE  5191               	movf	_idxAdcAquisition& (0+255),w,b	;volatile
 33975  0084F0  0D02               	mullw	2
 33976  0084F2  0E00               	movlw	low _ADC_array
 33977  0084F4  24F3               	addwf	243,w,c
 33978  0084F6  6ED9               	movwf	fsr2l,c
 33979  0084F8  0E02               	movlw	high _ADC_array
 33980  0084FA  20F4               	addwfc	prodh,w,c
 33981  0084FC  6EDA               	movwf	fsr2h,c
 33982  0084FE  C002  FFDE         	movff	??_ReadADC,postinc2
 33983  008502  C003  FFDD         	movff	??_ReadADC+1,postdec2
 33984                           
 33985                           ; BSR set to: 0
 33986                           ;controlCurrent_MC50.c: 48:         ADCC_GetSingleConversion(0x00);
 33987  008506  0E00               	movlw	0
 33988  008508  EC64  F048         	call	_ADCC_GetSingleConversion
 33989                           
 33990                           ;controlCurrent_MC50.c: 49:         idxAdcAquisition++;
 33991  00850C  0100               	movlb	0	; () banked
 33992  00850E  2B91               	incf	_idxAdcAquisition& (0+255),f,b	;volatile
 33993  008510  0012               	return		;funcret
 33994  008512                     __end_of_ReadADC:
 33995                           	callstack 0
 33996                           
 33997 ;; *************** function _ADCC_GetSingleConversion *****************
 33998 ;; Defined at:
 33999 ;;		line 131 in file "mcc_generated_files/adcc.c"
 34000 ;; Parameters:    Size  Location     Type
 34001 ;;  channel         1    wreg     enum E10053
 34002 ;; Auto vars:     Size  Location     Type
 34003 ;;  channel         1    0[COMRAM] enum E10053
 34004 ;; Return value:  Size  Location     Type
 34005 ;;                  2  433[None  ] int 
 34006 ;; Registers used:
 34007 ;;		wreg, status,2, cstack
 34008 ;; Tracked objects:
 34009 ;;		On entry : 3F/0
 34010 ;;		On exit  : 0/0
 34011 ;;		Unchanged: 0/0
 34012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34013 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34014 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34016 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34017 ;;Total ram usage:        1 bytes
 34018 ;; Hardware stack levels used: 1
 34019 ;; This function calls:
 34020 ;;		Nothing
 34021 ;; This function is called by:
 34022 ;;		_ReadADC
 34023 ;; This function uses a non-reentrant model
 34024 ;;
 34025                           
 34026                           	psect	text191
 34027  0090C8                     __ptext191:
 34028                           	callstack 0
 34029  0090C8                     _ADCC_GetSingleConversion:
 34030                           	callstack 14
 34031                           
 34032                           ;incstack = 0
 34033                           ;ADCC_GetSingleConversion@channel stored from wreg
 34034  0090C8  6E01               	movwf	ADCC_GetSingleConversion@channel^0,c
 34035                           
 34036                           ;mcc_generated_files/adcc.c: 131: ADCC_GetSingleConversion(adcc_channel_t channel);mcc_g
      +                          enerated_files/adcc.c: 132: {;mcc_generated_files/adcc.c: 134:     ADPCH = channel;
 34037  0090CA  C001  FF5F         	movff	ADCC_GetSingleConversion@channel,3935	;volatile
 34038                           
 34039                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADON = 1;
 34040  0090CE  8E60               	bsf	96,7,c	;volatile
 34041                           
 34042                           ;mcc_generated_files/adcc.c: 139:       _delay((unsigned long)((5)*(64000000/4000000.0))
      +                          );
 34043  0090D0  0E1A               	movlw	26
 34044  0090D2                     i2u2888_47:
 34045  0090D2  2EE8               	decfsz	wreg,f,c
 34046  0090D4  D7FE               	bra	i2u2888_47
 34047  0090D6  D000               	nop2	
 34048                           
 34049                           ;mcc_generated_files/adcc.c: 142:     ADCON0bits.ADCONT = 0;
 34050  0090D8  9C60               	bcf	96,6,c	;volatile
 34051                           
 34052                           ;mcc_generated_files/adcc.c: 145:     ADCON0bits.ADGO = 1;
 34053  0090DA  8060               	bsf	96,0,c	;volatile
 34054  0090DC  0012               	return		;funcret
 34055  0090DE                     __end_of_ADCC_GetSingleConversion:
 34056                           	callstack 0
 34057                           
 34058 ;; *************** function _TMR1_ISR *****************
 34059 ;; Defined at:
 34060 ;;		line 166 in file "mcc_generated_files/tmr1.c"
 34061 ;; Parameters:    Size  Location     Type
 34062 ;;		None
 34063 ;; Auto vars:     Size  Location     Type
 34064 ;;		None
 34065 ;; Return value:  Size  Location     Type
 34066 ;;                  1    wreg      void 
 34067 ;; Registers used:
 34068 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 34069 ;; Tracked objects:
 34070 ;;		On entry : 3F/E
 34071 ;;		On exit  : 0/0
 34072 ;;		Unchanged: 0/0
 34073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34074 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34075 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34077 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34078 ;;Total ram usage:        0 bytes
 34079 ;; Hardware stack levels used: 1
 34080 ;; Hardware stack levels required when called: 2
 34081 ;; This function calls:
 34082 ;;		Absolute function
 34083 ;;		_TMR1_DefaultInterruptHandler
 34084 ;;		_TMR1_WriteTimer
 34085 ;;		_controlMotorForce
 34086 ;; This function is called by:
 34087 ;;		_INTERRUPT_InterruptManager
 34088 ;; This function uses a non-reentrant model
 34089 ;;
 34090                           
 34091                           	psect	text192
 34092  008956                     __ptext192:
 34093                           	callstack 0
 34094  008956                     _TMR1_ISR:
 34095                           	callstack 14
 34096                           
 34097                           ; BSR set to: 14
 34098                           ;mcc_generated_files/tmr1.c: 170:     PIR4bits.TMR1IF = 0;
 34099                           
 34100                           ;incstack = 0
 34101  008956  91CE               	bcf	206,0,b	;volatile
 34102                           
 34103                           ; BSR set to: 14
 34104                           ;mcc_generated_files/tmr1.c: 172:             controlMotorForce();
 34105  008958  ECC8  F024         	call	_controlMotorForce	;wreg free
 34106                           
 34107                           ;mcc_generated_files/tmr1.c: 173:             if(ts_system.ts_TimeSlotTRIAC>0)
 34108  00895C  0101               	movlb	1	; () banked
 34109  00895E  519F               	movf	(_ts_system+5)& (0+255),w,b	;volatile
 34110  008960  A4D8               	btfss	status,2,c
 34111                           
 34112                           ; BSR set to: 1
 34113                           ;mcc_generated_files/tmr1.c: 174:             {;mcc_generated_files/tmr1.c: 176:        
      +                                   ts_system.ts_TimeSlotTRIAC--;
 34114  008962  079F               	decf	(_ts_system+5)& (0+255),f,b	;volatile
 34115                           
 34116                           ; BSR set to: 1
 34117                           ;mcc_generated_files/tmr1.c: 178:             if (ts_system.ts_TimeSlot1ms > 0 )
 34118  008964  519C               	movf	(_ts_system+2)& (0+255),w,b	;volatile
 34119  008966  A4D8               	btfss	status,2,c
 34120                           
 34121                           ; BSR set to: 1
 34122                           ;mcc_generated_files/tmr1.c: 179:             {;mcc_generated_files/tmr1.c: 180:        
      +                               ts_system.ts_TimeSlot1ms--;
 34123  008968  079C               	decf	(_ts_system+2)& (0+255),f,b	;volatile
 34124                           
 34125                           ; BSR set to: 1
 34126                           ;mcc_generated_files/tmr1.c: 183:     TMR1_WriteTimer(timer1ReloadVal);
 34127  00896A  C2E1  F001         	movff	_timer1ReloadVal,TMR1_WriteTimer@timerVal	;volatile
 34128  00896E  C2E2  F002         	movff	_timer1ReloadVal+1,TMR1_WriteTimer@timerVal+1	;volatile
 34129  008972  ECC2  F047         	call	_TMR1_WriteTimer	;wreg free
 34130                           
 34131                           ; BSR set to: 1
 34132                           ;mcc_generated_files/tmr1.c: 185:     if(TMR1_InterruptHandler)
 34133  008976  0102               	movlb	2	; () banked
 34134  008978  51DF               	movf	_TMR1_InterruptHandler& (0+255),w,b
 34135  00897A  11E0               	iorwf	(_TMR1_InterruptHandler+1)& (0+255),w,b
 34136  00897C  B4D8               	btfsc	status,2,c
 34137  00897E  0012               	return	
 34138                           
 34139                           ; BSR set to: 2
 34140                           ;mcc_generated_files/tmr1.c: 186:     {;mcc_generated_files/tmr1.c: 187:         TMR1_In
      +                          terruptHandler();
 34141  008980  D801               	call	i2u1834_48
 34142  008982  0012               	return	
 34143  008984                     i2u1834_48:
 34144  008984  0005               	push	
 34145  008986  6EFA               	movwf	pclath,c
 34146  008988  51DF               	movf	_TMR1_InterruptHandler& (0+255),w,b
 34147  00898A  6EFD               	movwf	tosl,c
 34148  00898C  51E0               	movf	(_TMR1_InterruptHandler+1)& (0+255),w,b
 34149  00898E  6EFE               	movwf	tosh,c
 34150  008990  6AFF               	clrf	tosu,c
 34151  008992  50FA               	movf	pclath,w,c
 34152  008994  0012               	return		;indir
 34153  008996                     __end_of_TMR1_ISR:
 34154                           	callstack 0
 34155                           
 34156 ;; *************** function _controlMotorForce *****************
 34157 ;; Defined at:
 34158 ;;		line 213 in file "outputs_MC50.c"
 34159 ;; Parameters:    Size  Location     Type
 34160 ;;		None
 34161 ;; Auto vars:     Size  Location     Type
 34162 ;;		None
 34163 ;; Return value:  Size  Location     Type
 34164 ;;                  1    wreg      void 
 34165 ;; Registers used:
 34166 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 34167 ;; Tracked objects:
 34168 ;;		On entry : 3F/E
 34169 ;;		On exit  : 3E/0
 34170 ;;		Unchanged: 0/0
 34171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34174 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34175 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34176 ;;Total ram usage:        5 bytes
 34177 ;; Hardware stack levels used: 1
 34178 ;; Hardware stack levels required when called: 1
 34179 ;; This function calls:
 34180 ;;		i2_GetMotorPower
 34181 ;;		i2_VerifyElectricalBrake
 34182 ;; This function is called by:
 34183 ;;		_TMR1_ISR
 34184 ;; This function uses a non-reentrant model
 34185 ;;
 34186                           
 34187                           	psect	text193
 34188  004990                     __ptext193:
 34189                           	callstack 0
 34190  004990                     _controlMotorForce:
 34191                           	callstack 14
 34192                           
 34193                           ; BSR set to: 14
 34194                           ;outputs_MC50.c: 217:     difTime=GetMotorPower();
 34195                           
 34196                           ;incstack = 0
 34197  004990  EC07  F038         	call	i2_GetMotorPower	;wreg free
 34198  004994  6F8F               	movwf	_difTime& (0+255),b
 34199                           
 34200                           ; BSR set to: 1
 34201                           ;outputs_MC50.c: 218:     if(powerControl_st.decelarationActive==YES)
 34202  004996  057B               	decf	_powerControl_st& (0+255),w,b
 34203  004998  A4D8               	btfss	status,2,c
 34204  00499A  D00F               	goto	i2l2186
 34205                           
 34206                           ; BSR set to: 1
 34207                           ;outputs_MC50.c: 219:     {;outputs_MC50.c: 220:         if(ts_system.TimeStopedBeforeDe
      +                          celaration>0)
 34208  00499C  BFC7               	btfsc	(_ts_system+45)& (0+255),7,b	;volatile
 34209  00499E  D008               	goto	i2l14229
 34210  0049A0  51C7               	movf	(_ts_system+45)& (0+255),w,b	;volatile
 34211  0049A2  E103               	bnz	i2u1418_40
 34212  0049A4  05C6               	decf	(_ts_system+44)& (0+255),w,b	;volatile
 34213  0049A6  A0D8               	btfss	status,0,c
 34214  0049A8  D003               	goto	i2l14229
 34215  0049AA                     i2u1418_40:
 34216                           
 34217                           ; BSR set to: 1
 34218                           ;outputs_MC50.c: 221:         {;outputs_MC50.c: 222:             StateTRIAC=0;
 34219  0049AA  0E00               	movlw	0
 34220  0049AC  6F90               	movwf	_StateTRIAC& (0+255),b
 34221                           
 34222                           ;outputs_MC50.c: 223:         }
 34223  0049AE  D005               	goto	i2l2186
 34224  0049B0                     i2l14229:
 34225                           
 34226                           ; BSR set to: 1
 34227  0049B0  517D               	movf	(_powerControl_st+2)& (0+255),w,b
 34228  0049B2  5D7F               	subwf	(_powerControl_st+4)& (0+255),w,b
 34229  0049B4  A0D8               	btfss	status,0,c
 34230                           
 34231                           ; BSR set to: 1
 34232                           ;outputs_MC50.c: 225:         {;outputs_MC50.c: 227:             difTime=powerControl_st
      +                          .decelarationPower;
 34233  0049B6  C17E  F18F         	movff	_powerControl_st+3,_difTime
 34234  0049BA                     i2l2186:
 34235                           
 34236                           ; BSR set to: 1
 34237                           ;outputs_MC50.c: 242:     if(PORTAbits.RA3==1 && zeroCrossing==0)
 34238  0049BA  A68D               	btfss	141,3,c	;volatile
 34239  0049BC  D071               	goto	i2l2190
 34240                           
 34241                           ; BSR set to: 1
 34242  0049BE  5192               	movf	_zeroCrossing& (0+255),w,b
 34243  0049C0  A4D8               	btfss	status,2,c
 34244  0049C2  D06E               	goto	i2l2190
 34245                           
 34246                           ; BSR set to: 1
 34247                           ;outputs_MC50.c: 243:     {;outputs_MC50.c: 257:         if ( waitZeroPeak == 0 )
 34248  0049C4  5191               	movf	_waitZeroPeak& (0+255),w,b
 34249  0049C6  A4D8               	btfss	status,2,c
 34250  0049C8  D016               	goto	i2l14245
 34251                           
 34252                           ; BSR set to: 1
 34253                           ;outputs_MC50.c: 258:         {;outputs_MC50.c: 260:             zeroCrossingWaitTime[ze
      +                          roCrossingWaitTimeIdx] = (zeroCrossingLength>>1);
 34254  0049CA  0EEF               	movlw	low _zeroCrossingWaitTime
 34255  0049CC  0100               	movlb	0	; () banked
 34256  0049CE  2584               	addwf	_zeroCrossingWaitTimeIdx& (0+255),w,b
 34257  0049D0  6ED9               	movwf	fsr2l,c
 34258  0049D2  6ADA               	clrf	fsr2h,c
 34259  0049D4  0E02               	movlw	high _zeroCrossingWaitTime
 34260  0049D6  22DA               	addwfc	fsr2h,f,c
 34261  0049D8  0101               	movlb	1	; () banked
 34262  0049DA  90D8               	bcf	status,0,c
 34263  0049DC  3193               	rrcf	_zeroCrossingLength& (0+255),w,b
 34264  0049DE  6EDF               	movwf	indf2,c
 34265                           
 34266                           ; BSR set to: 1
 34267                           ;outputs_MC50.c: 261:             if ( zeroCrossingWaitTimeIdx == 0 )
 34268  0049E0  0100               	movlb	0	; () banked
 34269  0049E2  5184               	movf	_zeroCrossingWaitTimeIdx& (0+255),w,b
 34270  0049E4  A4D8               	btfss	status,2,c
 34271  0049E6  D002               	goto	i2l14243
 34272                           
 34273                           ; BSR set to: 0
 34274                           ;outputs_MC50.c: 262:             {;outputs_MC50.c: 263:                 zeroCrossingWai
      +                          tTimeIdx = 1;
 34275  0049E8  0E01               	movlw	1
 34276  0049EA  D001               	goto	L116
 34277  0049EC                     i2l14243:
 34278                           
 34279                           ; BSR set to: 0
 34280                           ;outputs_MC50.c: 266:             {;outputs_MC50.c: 267:                 zeroCrossingWai
      +                          tTimeIdx = 0;
 34281  0049EC  0E00               	movlw	0
 34282  0049EE                     L116:
 34283  0049EE  6F84               	movwf	_zeroCrossingWaitTimeIdx& (0+255),b
 34284                           
 34285                           ; BSR set to: 0
 34286                           ;outputs_MC50.c: 270:             zeroCrossingLength = 0;
 34287                           
 34288                           ;outputs_MC50.c: 268:             }
 34289  0049F0  0E00               	movlw	0
 34290  0049F2  0101               	movlb	1	; () banked
 34291  0049F4  6F93               	movwf	_zeroCrossingLength& (0+255),b
 34292  0049F6                     i2l14245:
 34293                           
 34294                           ; BSR set to: 1
 34295                           ;outputs_MC50.c: 273:         if ( (difTime<=80) || (ts_system.TimeElectricBrake>0) )
 34296  0049F6  0E50               	movlw	80
 34297  0049F8  658F               	cpfsgt	_difTime& (0+255),b
 34298  0049FA  D007               	goto	i2u1425_40
 34299                           
 34300                           ; BSR set to: 1
 34301  0049FC  BFC3               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 34302  0049FE  D008               	goto	i2l14251
 34303  004A00  51C3               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 34304  004A02  E103               	bnz	i2u1425_40
 34305  004A04  05C2               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 34306  004A06  A0D8               	btfss	status,0,c
 34307  004A08  D003               	goto	i2l14251
 34308  004A0A                     i2u1425_40:
 34309                           
 34310                           ; BSR set to: 1
 34311                           
 34312                           ;outputs_MC50.c: 274:         {;outputs_MC50.c: 275:             do { LATDbits.LATD7 = 0
      +                          ; } while(0);
 34313  004A0A  9E86               	bcf	134,7,c	;volatile
 34314                           
 34315                           ; BSR set to: 1
 34316                           ;outputs_MC50.c: 276:             var_sys.TriacON=NO;
 34317  004A0C  0E00               	movlw	0
 34318  004A0E  6F0C               	movwf	(_var_sys+12)& (0+255),b	;volatile
 34319  004A10                     i2l14251:
 34320                           
 34321                           ; BSR set to: 1
 34322                           ;outputs_MC50.c: 280:         waitZeroPeak++;
 34323  004A10  2B91               	incf	_waitZeroPeak& (0+255),f,b
 34324                           
 34325                           ; BSR set to: 1
 34326                           ;outputs_MC50.c: 282:         if ( waitZeroPeak > zeroCrossingWaitTime[zeroCrossingWaitT
      +                          imeIdx] )
 34327  004A12  0EEF               	movlw	low _zeroCrossingWaitTime
 34328  004A14  0100               	movlb	0	; () banked
 34329  004A16  2584               	addwf	_zeroCrossingWaitTimeIdx& (0+255),w,b
 34330  004A18  6ED9               	movwf	fsr2l,c
 34331  004A1A  6ADA               	clrf	fsr2h,c
 34332  004A1C  0E02               	movlw	high _zeroCrossingWaitTime
 34333  004A1E  22DA               	addwfc	fsr2h,f,c
 34334  004A20  0101               	movlb	1	; () banked
 34335  004A22  5191               	movf	_waitZeroPeak& (0+255),w,b
 34336  004A24  5CDE               	subwf	postinc2,w,c
 34337  004A26  B0D8               	btfsc	status,0,c
 34338  004A28  D044               	goto	i2l14281
 34339                           
 34340                           ; BSR set to: 1
 34341                           ;outputs_MC50.c: 284:         {;outputs_MC50.c: 286:             if ((var_sys.Control50o
      +                          r60hz >= 90)&&(var_sys.Control50or60hz <= 105)){
 34342  004A2A  0E59               	movlw	89
 34343  004A2C  654D               	cpfsgt	(_var_sys+77)& (0+255),b	;volatile
 34344  004A2E  D005               	goto	i2l14261
 34345                           
 34346                           ; BSR set to: 1
 34347  004A30  0E6A               	movlw	106
 34348  004A32  614D               	cpfslt	(_var_sys+77)& (0+255),b	;volatile
 34349  004A34  D002               	goto	i2l14261
 34350                           
 34351                           ; BSR set to: 1
 34352                           ;outputs_MC50.c: 287:                 var_sys.Torquerelanty = 1;
 34353  004A36  0E01               	movlw	1
 34354  004A38  D001               	goto	L117
 34355  004A3A                     i2l14261:
 34356                           
 34357                           ; BSR set to: 1
 34358                           ;outputs_MC50.c: 290:             {;outputs_MC50.c: 291:                var_sys.Torquere
      +                          lanty = 0;
 34359  004A3A  0E00               	movlw	0
 34360  004A3C                     L117:
 34361  004A3C  6F15               	movwf	(_var_sys+21)& (0+255),b	;volatile
 34362                           
 34363                           ; BSR set to: 1
 34364                           ;outputs_MC50.c: 294:             ts_system.ts_TimeSlotTRIAC=80;
 34365                           
 34366                           ;outputs_MC50.c: 292:             }
 34367  004A3E  0E50               	movlw	80
 34368  004A40  6F9F               	movwf	(_ts_system+5)& (0+255),b	;volatile
 34369                           
 34370                           ;outputs_MC50.c: 295:             var_sys.Control50or60hz = 0;
 34371  004A42  0E00               	movlw	0
 34372  004A44  6F4D               	movwf	(_var_sys+77)& (0+255),b	;volatile
 34373                           
 34374                           ;outputs_MC50.c: 296:             StateTRIAC=1;
 34375  004A46  0E01               	movlw	1
 34376  004A48  6F90               	movwf	_StateTRIAC& (0+255),b
 34377                           
 34378                           ;outputs_MC50.c: 297:             zeroCrossing=1;
 34379  004A4A  0E01               	movlw	1
 34380  004A4C  6F92               	movwf	_zeroCrossing& (0+255),b
 34381                           
 34382                           ; BSR set to: 1
 34383                           ;outputs_MC50.c: 298:             powerControl_st.actualCycle++;
 34384  004A4E  2B7F               	incf	(_powerControl_st+4)& (0+255),f,b
 34385                           
 34386                           ; BSR set to: 1
 34387                           ;outputs_MC50.c: 304:             if ( var_sys_NVM.electricBrake==1 && ts_system.TimeEle
      +                          ctricBrake>0 )
 34388  004A50  0100               	movlb	0	; () banked
 34389  004A52  05AF               	decf	(_var_sys_NVM+23)& (0+255),w,b	;volatile
 34390  004A54  A4D8               	btfss	status,2,c
 34391  004A56  D00E               	goto	i2l14273
 34392                           
 34393                           ; BSR set to: 0
 34394  004A58  0101               	movlb	1	; () banked
 34395  004A5A  BFC3               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 34396  004A5C  D00B               	goto	i2l14273
 34397  004A5E  51C3               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 34398  004A60  E103               	bnz	i2u1430_40
 34399  004A62  05C2               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 34400  004A64  A0D8               	btfss	status,0,c
 34401  004A66  D006               	goto	i2l14273
 34402  004A68                     i2u1430_40:
 34403                           
 34404                           ; BSR set to: 1
 34405                           ;outputs_MC50.c: 305:             {;outputs_MC50.c: 307:                 if ( powerContr
      +                          ol_st.actualCycle>=2 )
 34406  004A68  0E01               	movlw	1
 34407  004A6A  657F               	cpfsgt	(_powerControl_st+4)& (0+255),b
 34408  004A6C  D022               	goto	i2l14281
 34409  004A6E                     i2u1431_40:
 34410                           
 34411                           ; BSR set to: 1
 34412                           ;outputs_MC50.c: 308:                 {;outputs_MC50.c: 309:                     powerCo
      +                          ntrol_st.actualCycle=0;
 34413  004A6E  0E00               	movlw	0
 34414  004A70  6F7F               	movwf	(_powerControl_st+4)& (0+255),b
 34415  004A72  D01F               	goto	i2l14281
 34416  004A74                     i2l14273:
 34417                           
 34418                           ;outputs_MC50.c: 313:             {;outputs_MC50.c: 314:                 if ( powerContr
      +                          ol_st.actualCycle>=(powerControl_st.decelarationCyclesOff+powerControl_st.decelarationCy
      +                          clesOn) )
 34419  004A74  0101               	movlb	1	; () banked
 34420  004A76  517C               	movf	(_powerControl_st+1)& (0+255),w,b
 34421  004A78  C17D  F005         	movff	_powerControl_st+2,??_controlMotorForce
 34422  004A7C  6A06               	clrf	(??_controlMotorForce+1)^0,c
 34423  004A7E  2605               	addwf	??_controlMotorForce^0,f,c
 34424  004A80  0E00               	movlw	0
 34425  004A82  2206               	addwfc	(??_controlMotorForce+1)^0,f,c
 34426  004A84  517F               	movf	(_powerControl_st+4)& (0+255),w,b
 34427  004A86  6E07               	movwf	(??_controlMotorForce+2)^0,c
 34428  004A88  6A08               	clrf	(??_controlMotorForce+3)^0,c
 34429  004A8A  5005               	movf	??_controlMotorForce^0,w,c
 34430  004A8C  5C07               	subwf	(??_controlMotorForce+2)^0,w,c
 34431  004A8E  5008               	movf	(??_controlMotorForce+3)^0,w,c
 34432  004A90  0A80               	xorlw	128
 34433  004A92  6E09               	movwf	(??_controlMotorForce+4)^0,c
 34434  004A94  5006               	movf	(??_controlMotorForce+1)^0,w,c
 34435  004A96  0A80               	xorlw	128
 34436  004A98  5809               	subwfb	(??_controlMotorForce+4)^0,w,c
 34437  004A9A  B0D8               	btfsc	status,0,c
 34438  004A9C  D7E8               	goto	i2u1431_40
 34439  004A9E  D009               	goto	i2l14281
 34440  004AA0                     i2l2190:
 34441                           
 34442                           ; BSR set to: 1
 34443  004AA0  B68D               	btfsc	141,3,c	;volatile
 34444  004AA2  D007               	goto	i2l14281
 34445                           
 34446                           ; BSR set to: 1
 34447  004AA4  5192               	movf	_zeroCrossing& (0+255),w,b
 34448  004AA6  B4D8               	btfsc	status,2,c
 34449  004AA8  D004               	goto	i2l14281
 34450                           
 34451                           ; BSR set to: 1
 34452                           ;outputs_MC50.c: 328:     {;outputs_MC50.c: 330:         zeroCrossing=0;
 34453  004AAA  0E00               	movlw	0
 34454  004AAC  6F92               	movwf	_zeroCrossing& (0+255),b
 34455                           
 34456                           ;outputs_MC50.c: 331:         waitZeroPeak=0;
 34457  004AAE  0E00               	movlw	0
 34458  004AB0  6F91               	movwf	_waitZeroPeak& (0+255),b
 34459  004AB2                     i2l14281:
 34460                           
 34461                           ; BSR set to: 1
 34462                           ;outputs_MC50.c: 336:     if ( PORTAbits.RA3!=0 )
 34463  004AB2  B68D               	btfsc	141,3,c	;volatile
 34464                           
 34465                           ; BSR set to: 1
 34466                           ;outputs_MC50.c: 337:     {;outputs_MC50.c: 339:         zeroCrossingLength++;
 34467  004AB4  2B93               	incf	_zeroCrossingLength& (0+255),f,b
 34468                           
 34469                           ; BSR set to: 1
 34470                           ;outputs_MC50.c: 342:    var_sys.Control50or60hz ++;
 34471                           
 34472                           ;outputs_MC50.c: 340:     }
 34473  004AB6  2B4D               	incf	(_var_sys+77)& (0+255),f,b	;volatile
 34474                           
 34475                           ; BSR set to: 1
 34476                           ;outputs_MC50.c: 352:     stateMotor = VerifyElectricalBrake(var_sys.StateMotor);
 34477  004AB8  5100               	movf	_var_sys& (0+255),w,b	;volatile
 34478  004ABA  EC99  F03E         	call	i2_VerifyElectricalBrake
 34479  004ABE  0100               	movlb	0	; () banked
 34480  004AC0  6F83               	movwf	_stateMotor& (0+255),b
 34481                           
 34482                           ; BSR set to: 0
 34483                           ;outputs_MC50.c: 354:     if ( var_sys_NVM.electricBrake==1 && ts_system.TimeElectricBra
      +                          ke>0 && ts_system.TimeStopElectricBrake<=0 )
 34484  004AC2  05AF               	decf	(_var_sys_NVM+23)& (0+255),w,b	;volatile
 34485  004AC4  A4D8               	btfss	status,2,c
 34486  004AC6  D02E               	goto	i2l14305
 34487                           
 34488                           ; BSR set to: 0
 34489  004AC8  0101               	movlb	1	; () banked
 34490  004ACA  BFC3               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 34491  004ACC  D02B               	goto	i2l14305
 34492  004ACE  51C3               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 34493  004AD0  E103               	bnz	i2u1437_40
 34494  004AD2  05C2               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 34495  004AD4  A0D8               	btfss	status,0,c
 34496  004AD6  D026               	goto	i2l14305
 34497  004AD8                     i2u1437_40:
 34498                           
 34499                           ; BSR set to: 1
 34500  004AD8  BFDB               	btfsc	(_ts_system+65)& (0+255),7,b	;volatile
 34501  004ADA  D005               	goto	i2u1438_40
 34502  004ADC  51DB               	movf	(_ts_system+65)& (0+255),w,b	;volatile
 34503  004ADE  E122               	bnz	i2l14305
 34504  004AE0  05DA               	decf	(_ts_system+64)& (0+255),w,b	;volatile
 34505  004AE2  B0D8               	btfsc	status,0,c
 34506  004AE4  D01F               	goto	i2l14305
 34507  004AE6                     i2u1438_40:
 34508                           
 34509                           ; BSR set to: 1
 34510                           ;outputs_MC50.c: 355:     {;outputs_MC50.c: 357:         if(stateMotor !=0 && StateTRIAC
      +                          ==1 && ts_system.ts_TRIACWait<=0 && powerControl_st.actualCycle==0 && ts_system.TimeElec
      +                          tricBrake<(((5+6)*( 100/50))-(5*( 100/50))) )
 34511  004AE6  0100               	movlb	0	; () banked
 34512  004AE8  5183               	movf	_stateMotor& (0+255),w,b
 34513  004AEA  B4D8               	btfsc	status,2,c
 34514  004AEC  D03A               	goto	i2l14317
 34515                           
 34516                           ; BSR set to: 0
 34517  004AEE  0101               	movlb	1	; () banked
 34518  004AF0  0590               	decf	_StateTRIAC& (0+255),w,b
 34519  004AF2  A4D8               	btfss	status,2,c
 34520  004AF4  D036               	goto	i2l14317
 34521                           
 34522                           ; BSR set to: 1
 34523  004AF6  BFA1               	btfsc	(_ts_system+7)& (0+255),7,b	;volatile
 34524  004AF8  D005               	goto	i2u1441_40
 34525  004AFA  51A1               	movf	(_ts_system+7)& (0+255),w,b	;volatile
 34526  004AFC  E132               	bnz	i2l14317
 34527  004AFE  05A0               	decf	(_ts_system+6)& (0+255),w,b	;volatile
 34528  004B00  B0D8               	btfsc	status,0,c
 34529  004B02  D02F               	goto	i2l14317
 34530  004B04                     i2u1441_40:
 34531                           
 34532                           ; BSR set to: 1
 34533  004B04  517F               	movf	(_powerControl_st+4)& (0+255),w,b
 34534  004B06  A4D8               	btfss	status,2,c
 34535  004B08  D02C               	goto	i2l14317
 34536                           
 34537                           ; BSR set to: 1
 34538  004B0A  BFC3               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 34539  004B0C  D006               	goto	i2u1443_40
 34540  004B0E  51C3               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 34541  004B10  E128               	bnz	i2l14317
 34542  004B12  0E0C               	movlw	12
 34543  004B14  5DC2               	subwf	(_ts_system+40)& (0+255),w,b	;volatile
 34544  004B16  B0D8               	btfsc	status,0,c
 34545  004B18  D024               	goto	i2l14317
 34546  004B1A                     i2u1443_40:
 34547                           
 34548                           ; BSR set to: 1
 34549                           
 34550                           ;outputs_MC50.c: 358:         {;outputs_MC50.c: 359:            do { LATDbits.LATD7 = 1;
      +                           } while(0);
 34551  004B1A  8E86               	bsf	134,7,c	;volatile
 34552                           
 34553                           ; BSR set to: 1
 34554                           ;outputs_MC50.c: 360:            ts_system.ts_TRIACWait=-(25*200);
 34555  004B1C  0EEC               	movlw	236
 34556  004B1E  6FA1               	movwf	(_ts_system+7)& (0+255),b	;volatile
 34557  004B20  0E78               	movlw	120
 34558  004B22  D01A               	goto	L118
 34559  004B24                     i2l14305:
 34560                           
 34561                           ;outputs_MC50.c: 366:     {;outputs_MC50.c: 368:         if(stateMotor !=0 && ts_system.
      +                          ts_TimeSlotTRIAC<difTime && StateTRIAC==1 && ts_system.ts_TRIACWait<=0 && var_sys.InStop
      +                          ing==NO)
 34562  004B24  0100               	movlb	0	; () banked
 34563  004B26  5183               	movf	_stateMotor& (0+255),w,b
 34564  004B28  B4D8               	btfsc	status,2,c
 34565  004B2A  D01B               	goto	i2l14317
 34566                           
 34567                           ; BSR set to: 0
 34568  004B2C  0101               	movlb	1	; () banked
 34569  004B2E  518F               	movf	_difTime& (0+255),w,b
 34570  004B30  5D9F               	subwf	(_ts_system+5)& (0+255),w,b	;volatile
 34571  004B32  B0D8               	btfsc	status,0,c
 34572  004B34  D016               	goto	i2l14317
 34573                           
 34574                           ; BSR set to: 1
 34575  004B36  0590               	decf	_StateTRIAC& (0+255),w,b
 34576  004B38  A4D8               	btfss	status,2,c
 34577  004B3A  D013               	goto	i2l14317
 34578                           
 34579                           ; BSR set to: 1
 34580  004B3C  BFA1               	btfsc	(_ts_system+7)& (0+255),7,b	;volatile
 34581  004B3E  D005               	goto	i2u1447_40
 34582  004B40  51A1               	movf	(_ts_system+7)& (0+255),w,b	;volatile
 34583  004B42  E10F               	bnz	i2l14317
 34584  004B44  05A0               	decf	(_ts_system+6)& (0+255),w,b	;volatile
 34585  004B46  B0D8               	btfsc	status,0,c
 34586  004B48  D00C               	goto	i2l14317
 34587  004B4A                     i2u1447_40:
 34588                           
 34589                           ; BSR set to: 1
 34590  004B4A  510D               	movf	(_var_sys+13)& (0+255),w,b	;volatile
 34591  004B4C  A4D8               	btfss	status,2,c
 34592  004B4E  D009               	goto	i2l14317
 34593                           
 34594                           ; BSR set to: 1
 34595                           
 34596                           ;outputs_MC50.c: 369:         {;outputs_MC50.c: 370:            do { LATDbits.LATD7 = 1;
      +                           } while(0);
 34597  004B50  8E86               	bsf	134,7,c	;volatile
 34598                           
 34599                           ; BSR set to: 1
 34600                           ;outputs_MC50.c: 371:            ts_system.ts_TRIACWait=-200;
 34601  004B52  0EFF               	movlw	255
 34602  004B54  6FA1               	movwf	(_ts_system+7)& (0+255),b	;volatile
 34603  004B56  0E38               	movlw	56
 34604  004B58                     L118:
 34605  004B58  6FA0               	movwf	(_ts_system+6)& (0+255),b	;volatile
 34606                           
 34607                           ;outputs_MC50.c: 372:            var_sys.TriacON=YES;
 34608  004B5A  0E01               	movlw	1
 34609  004B5C  6F0C               	movwf	(_var_sys+12)& (0+255),b	;volatile
 34610                           
 34611                           ;outputs_MC50.c: 373:            StateTRIAC=0;
 34612  004B5E  0E00               	movlw	0
 34613  004B60  6F90               	movwf	_StateTRIAC& (0+255),b
 34614  004B62                     i2l14317:
 34615                           
 34616                           ;outputs_MC50.c: 377:     if (((ts_system.ts_TimeSlotTRIAC <= 20 )&& ts_system.TimeElect
      +                          ricBrake<0) || (stateMotor==0))
 34617  004B62  0E15               	movlw	21
 34618  004B64  0101               	movlb	1	; () banked
 34619  004B66  619F               	cpfslt	(_ts_system+5)& (0+255),b	;volatile
 34620  004B68  D002               	goto	i2u1450_40
 34621                           
 34622                           ; BSR set to: 1
 34623  004B6A  BFC3               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 34624  004B6C  D004               	goto	i2u1451_40
 34625  004B6E                     i2u1450_40:
 34626                           
 34627                           ; BSR set to: 1
 34628  004B6E  0100               	movlb	0	; () banked
 34629  004B70  5183               	movf	_stateMotor& (0+255),w,b
 34630  004B72  A4D8               	btfss	status,2,c
 34631  004B74  D004               	goto	i2l2217
 34632  004B76                     i2u1451_40:
 34633                           
 34634                           ;outputs_MC50.c: 378:     {;outputs_MC50.c: 384:             do { LATDbits.LATD7 = 0; } 
      +                          while(0);
 34635  004B76  9E86               	bcf	134,7,c	;volatile
 34636                           
 34637                           ;outputs_MC50.c: 385:             var_sys.TriacON=NO;
 34638  004B78  0E00               	movlw	0
 34639  004B7A  0101               	movlb	1	; () banked
 34640  004B7C  6F0C               	movwf	(_var_sys+12)& (0+255),b	;volatile
 34641  004B7E                     i2l2217:
 34642                           
 34643                           ;outputs_MC50.c: 396:     if(stateMotor !=0 && ts_system.ts_TRIACWait>0)
 34644  004B7E  0100               	movlb	0	; () banked
 34645  004B80  5183               	movf	_stateMotor& (0+255),w,b
 34646  004B82  B4D8               	btfsc	status,2,c
 34647  004B84  D00C               	goto	i2l14329
 34648                           
 34649                           ; BSR set to: 0
 34650  004B86  0101               	movlb	1	; () banked
 34651  004B88  BFA1               	btfsc	(_ts_system+7)& (0+255),7,b	;volatile
 34652  004B8A  D009               	goto	i2l14329
 34653  004B8C  51A1               	movf	(_ts_system+7)& (0+255),w,b	;volatile
 34654  004B8E  E103               	bnz	i2u1453_40
 34655  004B90  05A0               	decf	(_ts_system+6)& (0+255),w,b	;volatile
 34656  004B92  A0D8               	btfss	status,0,c
 34657  004B94  D004               	goto	i2l14329
 34658  004B96                     i2u1453_40:
 34659                           
 34660                           ; BSR set to: 1
 34661                           ;outputs_MC50.c: 397:     {;outputs_MC50.c: 398:         ts_system.ts_TRIACWait--;
 34662  004B96  07A0               	decf	(_ts_system+6)& (0+255),f,b	;volatile
 34663  004B98  A0D8               	btfss	status,0,c
 34664  004B9A  07A1               	decf	(_ts_system+7)& (0+255),f,b	;volatile
 34665                           
 34666                           ;outputs_MC50.c: 399:     }
 34667  004B9C  0012               	return	
 34668  004B9E                     i2l14329:
 34669  004B9E  0100               	movlb	0	; () banked
 34670  004BA0  5183               	movf	_stateMotor& (0+255),w,b
 34671  004BA2  A4D8               	btfss	status,2,c
 34672  004BA4  0012               	return	
 34673                           
 34674                           ; BSR set to: 0
 34675  004BA6  0101               	movlb	1	; () banked
 34676  004BA8  AFA1               	btfss	(_ts_system+7)& (0+255),7,b	;volatile
 34677  004BAA  0012               	return	
 34678                           
 34679                           ; BSR set to: 1
 34680                           ;outputs_MC50.c: 401:     {;outputs_MC50.c: 402:         ts_system.ts_TRIACWait++;
 34681  004BAC  4BA0               	infsnz	(_ts_system+6)& (0+255),f,b	;volatile
 34682  004BAE  2BA1               	incf	(_ts_system+7)& (0+255),f,b	;volatile
 34683  004BB0  0012               	return		;funcret
 34684  004BB2                     __end_of_controlMotorForce:
 34685                           	callstack 0
 34686                           
 34687 ;; *************** function i2_VerifyElectricalBrake *****************
 34688 ;; Defined at:
 34689 ;;		line 658 in file "outputs_MC50.c"
 34690 ;; Parameters:    Size  Location     Type
 34691 ;;  actualState     1    wreg     enum E10381
 34692 ;; Auto vars:     Size  Location     Type
 34693 ;;  actualState     1    1[COMRAM] enum E10381
 34694 ;;  tempState       1    0[COMRAM] enum E10381
 34695 ;; Return value:  Size  Location     Type
 34696 ;;                  1    wreg      enum E10381
 34697 ;; Registers used:
 34698 ;;		wreg, status,2, status,0
 34699 ;; Tracked objects:
 34700 ;;		On entry : 3F/1
 34701 ;;		On exit  : 3E/0
 34702 ;;		Unchanged: 0/0
 34703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34704 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34705 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34707 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34708 ;;Total ram usage:        2 bytes
 34709 ;; Hardware stack levels used: 1
 34710 ;; This function calls:
 34711 ;;		Nothing
 34712 ;; This function is called by:
 34713 ;;		_controlMotorForce
 34714 ;; This function uses a non-reentrant model
 34715 ;;
 34716                           
 34717                           	psect	text194
 34718  007D32                     __ptext194:
 34719                           	callstack 0
 34720  007D32                     i2_VerifyElectricalBrake:
 34721                           	callstack 14
 34722                           
 34723                           ;incstack = 0
 34724                           ;i2VerifyElectricalBrake@actualState stored from wreg
 34725  007D32  6E02               	movwf	i2VerifyElectricalBrake@actualState^0,c
 34726                           
 34727                           ;outputs_MC50.c: 658: stateMotor_enum VerifyElectricalBrake(stateMotor_enum actualState)
      +                          ;outputs_MC50.c: 659: {;outputs_MC50.c: 660:     stateMotor_enum tempState;;outputs_MC50
      +                          .c: 661:     tempState=actualState;
 34728  007D34  C002  F001         	movff	i2VerifyElectricalBrake@actualState,i2VerifyElectricalBrake@tempState
 34729                           
 34730                           ;outputs_MC50.c: 662:     if(var_sys_NVM.electricBrake==1 && actualState==Stopped && ts_
      +                          system.TimeStopElectricBrake<=0)
 34731  007D38  0100               	movlb	0	; () banked
 34732  007D3A  05AF               	decf	(_var_sys_NVM+23)& (0+255),w,b	;volatile
 34733  007D3C  A4D8               	btfss	status,2,c
 34734  007D3E  D02E               	goto	i2l2318
 34735                           
 34736                           ; BSR set to: 0
 34737  007D40  5002               	movf	i2VerifyElectricalBrake@actualState^0,w,c
 34738  007D42  A4D8               	btfss	status,2,c
 34739  007D44  D02B               	goto	i2l2318
 34740                           
 34741                           ; BSR set to: 0
 34742  007D46  0101               	movlb	1	; () banked
 34743  007D48  BFDB               	btfsc	(_ts_system+65)& (0+255),7,b	;volatile
 34744  007D4A  D005               	goto	i2u1384_40
 34745  007D4C  51DB               	movf	(_ts_system+65)& (0+255),w,b	;volatile
 34746  007D4E  E126               	bnz	i2l2318
 34747  007D50  05DA               	decf	(_ts_system+64)& (0+255),w,b	;volatile
 34748  007D52  B0D8               	btfsc	status,0,c
 34749  007D54  D023               	goto	i2l2318
 34750  007D56                     i2u1384_40:
 34751                           
 34752                           ; BSR set to: 1
 34753                           ;outputs_MC50.c: 663:     {;outputs_MC50.c: 664:         if(actualState!=brakeElectric_s
      +                          t.lastState && brakeElectric_st.ElectricBrakeIsActive==NO )
 34754  007D56  5002               	movf	i2VerifyElectricalBrake@actualState^0,w,c
 34755  007D58  0100               	movlb	0	; () banked
 34756  007D5A  1978               	xorwf	_brakeElectric_st& (0+255),w,b
 34757  007D5C  B4D8               	btfsc	status,2,c
 34758  007D5E  D00B               	goto	i2l13947
 34759                           
 34760                           ; BSR set to: 0
 34761  007D60  5179               	movf	(_brakeElectric_st+1)& (0+255),w,b
 34762  007D62  A4D8               	btfss	status,2,c
 34763  007D64  D008               	goto	i2l13947
 34764                           
 34765                           ; BSR set to: 0
 34766                           ;outputs_MC50.c: 665:         {;outputs_MC50.c: 666:             brakeElectric_st.Electr
      +                          icBrakeIsActive=YES;
 34767  007D66  0E01               	movlw	1
 34768  007D68  6F79               	movwf	(_brakeElectric_st+1)& (0+255),b
 34769                           
 34770                           ;outputs_MC50.c: 668:             ts_system.TimeElectricBrake=((5+6)*( 100/50));
 34771  007D6A  0E00               	movlw	0
 34772  007D6C  0101               	movlb	1	; () banked
 34773  007D6E  6FC3               	movwf	(_ts_system+41)& (0+255),b	;volatile
 34774  007D70  0E16               	movlw	22
 34775  007D72  6FC2               	movwf	(_ts_system+40)& (0+255),b	;volatile
 34776                           
 34777                           ;outputs_MC50.c: 670:         }
 34778  007D74  D018               	goto	i2l2323
 34779  007D76                     i2l13947:
 34780                           
 34781                           ; BSR set to: 0
 34782  007D76  0579               	decf	(_brakeElectric_st+1)& (0+255),w,b
 34783  007D78  A4D8               	btfss	status,2,c
 34784  007D7A  D00B               	goto	i2l13953
 34785                           
 34786                           ; BSR set to: 0
 34787  007D7C  0101               	movlb	1	; () banked
 34788  007D7E  BFC3               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 34789  007D80  D008               	goto	i2l13953
 34790  007D82  51C3               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 34791  007D84  E103               	bnz	i2u1388_40
 34792  007D86  05C2               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 34793  007D88  A0D8               	btfss	status,0,c
 34794  007D8A  D003               	goto	i2l13953
 34795  007D8C                     i2u1388_40:
 34796                           
 34797                           ; BSR set to: 1
 34798                           ;outputs_MC50.c: 672:         {;outputs_MC50.c: 673:             tempState=InOpenFull;
 34799  007D8C  0E01               	movlw	1
 34800  007D8E  6E01               	movwf	i2VerifyElectricalBrake@tempState^0,c
 34801                           
 34802                           ;outputs_MC50.c: 686:         }
 34803  007D90  D00A               	goto	i2l2323
 34804  007D92                     i2l13953:
 34805                           
 34806                           ;outputs_MC50.c: 688:         {;outputs_MC50.c: 689:             brakeElectric_st.lastSt
      +                          ate=Stopped;
 34807  007D92  0E00               	movlw	0
 34808  007D94  0100               	movlb	0	; () banked
 34809  007D96  6F78               	movwf	_brakeElectric_st& (0+255),b
 34810                           
 34811                           ;outputs_MC50.c: 690:             brakeElectric_st.ElectricBrakeIsActive=NO;
 34812  007D98  0E00               	movlw	0
 34813  007D9A  D004               	goto	L119
 34814  007D9C                     i2l2318:
 34815                           
 34816                           ;outputs_MC50.c: 695:     {;outputs_MC50.c: 696:         brakeElectric_st.lastState=actu
      +                          alState;
 34817  007D9C  C002  F078         	movff	i2VerifyElectricalBrake@actualState,_brakeElectric_st
 34818                           
 34819                           ;outputs_MC50.c: 697:         brakeElectric_st.ElectricBrakeIsActive=NO;
 34820  007DA0  0E00               	movlw	0
 34821  007DA2  0100               	movlb	0	; () banked
 34822  007DA4                     L119:
 34823  007DA4  6F79               	movwf	(_brakeElectric_st+1)& (0+255),b
 34824  007DA6                     i2l2323:
 34825                           
 34826                           ;outputs_MC50.c: 700:     return tempState;
 34827  007DA6  5001               	movf	i2VerifyElectricalBrake@tempState^0,w,c
 34828  007DA8  0012               	return		;funcret
 34829  007DAA                     __end_ofi2_VerifyElectricalBrake:
 34830                           	callstack 0
 34831                           
 34832 ;; *************** function i2_GetMotorPower *****************
 34833 ;; Defined at:
 34834 ;;		line 405 in file "outputs_MC50.c"
 34835 ;; Parameters:    Size  Location     Type
 34836 ;;		None
 34837 ;; Auto vars:     Size  Location     Type
 34838 ;;  defineatraso    1    3[COMRAM] unsigned char 
 34839 ;; Return value:  Size  Location     Type
 34840 ;;                  1    wreg      unsigned char 
 34841 ;; Registers used:
 34842 ;;		wreg, status,2, status,0, prodl, prodh
 34843 ;; Tracked objects:
 34844 ;;		On entry : 3F/E
 34845 ;;		On exit  : 3F/1
 34846 ;;		Unchanged: 0/0
 34847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34848 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34849 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34850 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34851 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34852 ;;Total ram usage:        4 bytes
 34853 ;; Hardware stack levels used: 1
 34854 ;; This function calls:
 34855 ;;		Nothing
 34856 ;; This function is called by:
 34857 ;;		_controlMotorForce
 34858 ;; This function uses a non-reentrant model
 34859 ;;
 34860                           
 34861                           	psect	text195
 34862  00700E                     __ptext195:
 34863                           	callstack 0
 34864  00700E                     i2_GetMotorPower:
 34865                           	callstack 14
 34866                           
 34867                           ; BSR set to: 14
 34868                           ;outputs_MC50.c: 408:     unsigned char defineatraso;;outputs_MC50.c: 413:     if(powerC
      +                          ontrol_st.decelarationActive==YES)
 34869                           
 34870                           ;incstack = 0
 34871  00700E  0101               	movlb	1	; () banked
 34872  007010  057B               	decf	_powerControl_st& (0+255),w,b
 34873  007012  A4D8               	btfss	status,2,c
 34874  007014  D006               	goto	i2l13897
 34875                           
 34876                           ; BSR set to: 1
 34877                           ;outputs_MC50.c: 414:     {;outputs_MC50.c: 415:        temppower=(var_sys_NVM.motorPowe
      +                          r*6);
 34878  007016  0100               	movlb	0	; () banked
 34879  007018  519A               	movf	(_var_sys_NVM+2)& (0+255),w,b	;volatile
 34880  00701A  0D06               	mullw	6
 34881  00701C  CFF3 F18E          	movff	prodl,_temppower
 34882                           
 34883                           ;outputs_MC50.c: 416:     }
 34884  007020  D043               	goto	i2l2235
 34885  007022                     i2l13897:
 34886                           
 34887                           ; BSR set to: 1
 34888                           ;outputs_MC50.c: 418:     {;outputs_MC50.c: 419:         fullmotorPower=(var_sys_NVM.mot
      +                          orPower*6);
 34889  007022  0100               	movlb	0	; () banked
 34890  007024  519A               	movf	(_var_sys_NVM+2)& (0+255),w,b	;volatile
 34891  007026  0D06               	mullw	6
 34892  007028  CFF3 F082          	movff	prodl,_fullmotorPower
 34893                           
 34894                           ; BSR set to: 0
 34895                           ;outputs_MC50.c: 421:         if(var_sys.velocityFactor>0)
 34896  00702C  0101               	movlb	1	; () banked
 34897  00702E  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 34898  007030  D01C               	goto	i2l13907
 34899  007032  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 34900  007034  E103               	bnz	i2u1374_40
 34901  007036  050E               	decf	(_var_sys+14)& (0+255),w,b	;volatile
 34902  007038  A0D8               	btfss	status,0,c
 34903  00703A  D017               	goto	i2l13907
 34904  00703C                     i2u1374_40:
 34905                           
 34906                           ; BSR set to: 1
 34907                           ;outputs_MC50.c: 422:         {;outputs_MC50.c: 423:             if(var_sys.velocityFact
      +                          or>fullmotorPower)
 34908  00703C  0100               	movlb	0	; () banked
 34909  00703E  5182               	movf	_fullmotorPower& (0+255),w,b
 34910  007040  6E01               	movwf	??i2_GetMotorPower^0,c
 34911  007042  6A02               	clrf	(??i2_GetMotorPower+1)^0,c
 34912  007044  0101               	movlb	1	; () banked
 34913  007046  510E               	movf	(_var_sys+14)& (0+255),w,b	;volatile
 34914  007048  5C01               	subwf	??i2_GetMotorPower^0,w,c
 34915  00704A  5002               	movf	(??i2_GetMotorPower+1)^0,w,c
 34916  00704C  0A80               	xorlw	128
 34917  00704E  6E03               	movwf	(??i2_GetMotorPower+2)^0,c
 34918  007050  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 34919  007052  0A80               	xorlw	128
 34920  007054  5803               	subwfb	(??i2_GetMotorPower+2)^0,w,c
 34921  007056  B0D8               	btfsc	status,0,c
 34922  007058  D002               	goto	i2l13905
 34923                           
 34924                           ; BSR set to: 1
 34925                           ;outputs_MC50.c: 424:             {;outputs_MC50.c: 425:                 temppower=1;
 34926  00705A  0E01               	movlw	1
 34927  00705C  D004               	goto	L121
 34928  00705E                     i2l13905:
 34929                           
 34930                           ; BSR set to: 1
 34931                           ;outputs_MC50.c: 428:             {;outputs_MC50.c: 430:                 temppower =full
      +                          motorPower-var_sys.velocityFactor;
 34932  00705E  510E               	movf	(_var_sys+14)& (0+255),w,b	;volatile
 34933  007060  0100               	movlb	0	; () banked
 34934  007062  5D82               	subwf	_fullmotorPower& (0+255),w,b
 34935  007064  D017               	goto	L122
 34936  007066                     L121:
 34937  007066  6F8E               	movwf	_temppower& (0+255),b
 34938  007068  D01F               	goto	i2l2235
 34939  00706A                     i2l13907:
 34940                           
 34941                           ; BSR set to: 1
 34942  00706A  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 34943  00706C  D005               	goto	i2u1376_40
 34944  00706E  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 34945  007070  E113               	bnz	i2l13917
 34946  007072  050E               	decf	(_var_sys+14)& (0+255),w,b	;volatile
 34947  007074  B0D8               	btfsc	status,0,c
 34948  007076  D010               	goto	i2l13917
 34949  007078                     i2u1376_40:
 34950                           
 34951                           ; BSR set to: 1
 34952  007078  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 34953  00707A  D005               	goto	i2u1377_40
 34954  00707C  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 34955  00707E  E10C               	bnz	i2l13917
 34956  007080  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 34957  007082  B0D8               	btfsc	status,0,c
 34958  007084  D009               	goto	i2l13917
 34959  007086                     i2u1377_40:
 34960                           
 34961                           ; BSR set to: 1
 34962                           ;outputs_MC50.c: 434:         {;outputs_MC50.c: 435:             temppower =fullmotorPow
      +                          er;
 34963  007086  C082  F18E         	movff	_fullmotorPower,_temppower
 34964                           
 34965                           ; BSR set to: 1
 34966                           ;outputs_MC50.c: 438:             if ( var_sys_NVM.motorPower>8 )
 34967  00708A  0E08               	movlw	8
 34968  00708C  0100               	movlb	0	; () banked
 34969  00708E  659A               	cpfsgt	(_var_sys_NVM+2)& (0+255),b	;volatile
 34970  007090  D00B               	goto	i2l2235
 34971                           
 34972                           ; BSR set to: 0
 34973                           ;outputs_MC50.c: 439:             {;outputs_MC50.c: 440:                 temppower = 80 
      +                          -23 +1;
 34974  007092  0E3A               	movlw	58
 34975  007094                     L122:
 34976  007094  0101               	movlb	1	; () banked
 34977  007096  D7E7               	goto	L121
 34978  007098                     i2l13917:
 34979                           
 34980                           ; BSR set to: 1
 34981  007098  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 34982  00709A  D006               	goto	i2l2235
 34983  00709C  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 34984  00709E  E102               	bnz	i2u1379_40
 34985  0070A0  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 34986  0070A2  B0D8               	btfsc	status,0,c
 34987  0070A4                     i2u1379_40:
 34988                           
 34989                           ; BSR set to: 1
 34990                           ;outputs_MC50.c: 447:                 temppower = var_sys.velocityFactorstop;
 34991  0070A4  C110  F18E         	movff	_var_sys+16,_temppower	;volatile
 34992  0070A8                     i2l2235:
 34993                           
 34994                           ;outputs_MC50.c: 451:     if ((var_sys.velocityFactorstop > 0)&&(var_sys.velocityFactor 
      +                          <= 0 )){
 34995  0070A8  0101               	movlb	1	; () banked
 34996  0070AA  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 34997  0070AC  D00E               	goto	i2l13927
 34998  0070AE  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 34999  0070B0  E103               	bnz	i2u1380_40
 35000  0070B2  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 35001  0070B4  A0D8               	btfss	status,0,c
 35002  0070B6  D009               	goto	i2l13927
 35003  0070B8                     i2u1380_40:
 35004                           
 35005                           ; BSR set to: 1
 35006  0070B8  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 35007  0070BA  D005               	goto	i2u1381_40
 35008  0070BC  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 35009  0070BE  E105               	bnz	i2l13927
 35010  0070C0  050E               	decf	(_var_sys+14)& (0+255),w,b	;volatile
 35011  0070C2  B0D8               	btfsc	status,0,c
 35012  0070C4  D002               	goto	i2l13927
 35013  0070C6                     i2u1381_40:
 35014                           
 35015                           ; BSR set to: 1
 35016                           ;outputs_MC50.c: 452:     defineatraso = 5;
 35017  0070C6  0E05               	movlw	5
 35018  0070C8  D001               	goto	L120
 35019  0070CA                     i2l13927:
 35020                           
 35021                           ; BSR set to: 1
 35022                           ;outputs_MC50.c: 455:     {;outputs_MC50.c: 456:     defineatraso = 23;
 35023  0070CA  0E17               	movlw	23
 35024  0070CC                     L120:
 35025  0070CC  6E04               	movwf	i2GetMotorPower@defineatraso^0,c
 35026                           
 35027                           ; BSR set to: 1
 35028                           ;outputs_MC50.c: 459:     return temppower+defineatraso;
 35029  0070CE  518E               	movf	_temppower& (0+255),w,b
 35030  0070D0  2404               	addwf	i2GetMotorPower@defineatraso^0,w,c
 35031                           
 35032                           ; BSR set to: 1
 35033  0070D2  0012               	return		;funcret
 35034  0070D4                     __end_ofi2_GetMotorPower:
 35035                           	callstack 0
 35036                           
 35037 ;; *************** function _TMR1_WriteTimer *****************
 35038 ;; Defined at:
 35039 ;;		line 129 in file "mcc_generated_files/tmr1.c"
 35040 ;; Parameters:    Size  Location     Type
 35041 ;;  timerVal        2    0[COMRAM] unsigned short 
 35042 ;; Auto vars:     Size  Location     Type
 35043 ;;		None
 35044 ;; Return value:  Size  Location     Type
 35045 ;;                  1    wreg      void 
 35046 ;; Registers used:
 35047 ;;		None
 35048 ;; Tracked objects:
 35049 ;;		On entry : 3F/1
 35050 ;;		On exit  : 3F/1
 35051 ;;		Unchanged: 3F/0
 35052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35053 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35054 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35056 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35057 ;;Total ram usage:        2 bytes
 35058 ;; Hardware stack levels used: 1
 35059 ;; This function calls:
 35060 ;;		Nothing
 35061 ;; This function is called by:
 35062 ;;		_TMR1_ISR
 35063 ;; This function uses a non-reentrant model
 35064 ;;
 35065                           
 35066                           	psect	text196
 35067  008F84                     __ptext196:
 35068                           	callstack 0
 35069  008F84                     _TMR1_WriteTimer:
 35070                           	callstack 15
 35071                           
 35072                           ; BSR set to: 1
 35073                           ;mcc_generated_files/tmr1.c: 129: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 130: {;mcc_generated_files/tmr1.c: 131:     if (T1CONbits.nT1SYNC == 1)
 35074                           
 35075                           ; BSR set to: 1
 35076                           ;incstack = 0
 35077  008F84  A4CF               	btfss	207,2,c	;volatile
 35078  008F86  D007               	goto	i2l1147
 35079                           
 35080                           ; BSR set to: 1
 35081                           ;mcc_generated_files/tmr1.c: 132:     {;mcc_generated_files/tmr1.c: 134:         T1CONbi
      +                          ts.TMR1ON = 0;
 35082  008F88  90CF               	bcf	207,0,c	;volatile
 35083                           
 35084                           ;mcc_generated_files/tmr1.c: 137:         TMR1H = (uint8_t)(timerVal >> 8);
 35085  008F8A  C002  FFCE         	movff	TMR1_WriteTimer@timerVal+1,4046	;volatile
 35086                           
 35087                           ;mcc_generated_files/tmr1.c: 138:         TMR1L = (uint8_t)timerVal;
 35088  008F8E  C001  FFCD         	movff	TMR1_WriteTimer@timerVal,4045	;volatile
 35089                           
 35090                           ;mcc_generated_files/tmr1.c: 141:         T1CONbits.TMR1ON =1;
 35091  008F92  80CF               	bsf	207,0,c	;volatile
 35092                           
 35093                           ;mcc_generated_files/tmr1.c: 142:     }
 35094  008F94  0012               	return	
 35095  008F96                     i2l1147:
 35096                           
 35097                           ; BSR set to: 1
 35098                           ;mcc_generated_files/tmr1.c: 144:     {;mcc_generated_files/tmr1.c: 146:         TMR1H =
      +                           (uint8_t)(timerVal >> 8);
 35099  008F96  C002  FFCE         	movff	TMR1_WriteTimer@timerVal+1,4046	;volatile
 35100                           
 35101                           ;mcc_generated_files/tmr1.c: 147:         TMR1L = (uint8_t)timerVal;
 35102  008F9A  C001  FFCD         	movff	TMR1_WriteTimer@timerVal,4045	;volatile
 35103                           
 35104                           ; BSR set to: 1
 35105  008F9E  0012               	return		;funcret
 35106  008FA0                     __end_of_TMR1_WriteTimer:
 35107                           	callstack 0
 35108                           
 35109 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 35110 ;; Defined at:
 35111 ;;		line 196 in file "mcc_generated_files/tmr1.c"
 35112 ;; Parameters:    Size  Location     Type
 35113 ;;		None
 35114 ;; Auto vars:     Size  Location     Type
 35115 ;;		None
 35116 ;; Return value:  Size  Location     Type
 35117 ;;                  1    wreg      void 
 35118 ;; Registers used:
 35119 ;;		None
 35120 ;; Tracked objects:
 35121 ;;		On entry : 3F/2
 35122 ;;		On exit  : 3F/2
 35123 ;;		Unchanged: 3F/0
 35124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35125 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35126 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35128 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35129 ;;Total ram usage:        0 bytes
 35130 ;; Hardware stack levels used: 1
 35131 ;; This function calls:
 35132 ;;		Nothing
 35133 ;; This function is called by:
 35134 ;;		_TMR1_Initialize
 35135 ;;		_TMR1_ISR
 35136 ;; This function uses a non-reentrant model
 35137 ;;
 35138                           
 35139                           	psect	text197
 35140  0092BE                     __ptext197:
 35141                           	callstack 0
 35142  0092BE                     _TMR1_DefaultInterruptHandler:
 35143                           	callstack 15
 35144                           
 35145                           ; BSR set to: 2
 35146                           
 35147                           ; BSR set to: 1
 35148                           ;incstack = 0
 35149  0092BE  0012               	return		;funcret
 35150  0092C0                     __end_of_TMR1_DefaultInterruptHandler:
 35151                           	callstack 0
 35152                           
 35153 ;; *************** function _TMR0_ISR *****************
 35154 ;; Defined at:
 35155 ;;		line 127 in file "mcc_generated_files/tmr0.c"
 35156 ;; Parameters:    Size  Location     Type
 35157 ;;		None
 35158 ;; Auto vars:     Size  Location     Type
 35159 ;;		None
 35160 ;; Return value:  Size  Location     Type
 35161 ;;                  1    wreg      void 
 35162 ;; Registers used:
 35163 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 35164 ;; Tracked objects:
 35165 ;;		On entry : 3F/E
 35166 ;;		On exit  : 0/0
 35167 ;;		Unchanged: 0/0
 35168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35169 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35172 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35173 ;;Total ram usage:        0 bytes
 35174 ;; Hardware stack levels used: 1
 35175 ;; Hardware stack levels required when called: 1
 35176 ;; This function calls:
 35177 ;;		Absolute function
 35178 ;;		_TMR0_DefaultInterruptHandler
 35179 ;;		_rxi
 35180 ;; This function is called by:
 35181 ;;		_INTERRUPT_InterruptManager
 35182 ;; This function uses a non-reentrant model
 35183 ;;
 35184                           
 35185                           	psect	text198
 35186  008E38                     __ptext198:
 35187                           	callstack 0
 35188  008E38                     _TMR0_ISR:
 35189                           	callstack 15
 35190                           
 35191                           ; BSR set to: 14
 35192                           ;mcc_generated_files/tmr0.c: 130:     PIR0bits.TMR0IF = 0;
 35193                           
 35194                           ; BSR set to: 2
 35195                           ;incstack = 0
 35196  008E38  9BCA               	bcf	202,5,b	;volatile
 35197                           
 35198                           ; BSR set to: 14
 35199                           ;mcc_generated_files/tmr0.c: 132:     rxi();
 35200  008E3A  EC3E  F021         	call	_rxi	;wreg free
 35201                           
 35202                           ;mcc_generated_files/tmr0.c: 134:     if(TMR0_InterruptHandler)
 35203  008E3E  0102               	movlb	2	; () banked
 35204  008E40  51E3               	movf	_TMR0_InterruptHandler& (0+255),w,b
 35205  008E42  11E4               	iorwf	(_TMR0_InterruptHandler+1)& (0+255),w,b
 35206  008E44  B4D8               	btfsc	status,2,c
 35207  008E46  0012               	return	
 35208                           
 35209                           ; BSR set to: 2
 35210                           ;mcc_generated_files/tmr0.c: 135:     {;mcc_generated_files/tmr0.c: 136:         TMR0_In
      +                          terruptHandler();
 35211  008E48  D801               	call	i2u1830_48
 35212  008E4A  0012               	return	
 35213  008E4C                     i2u1830_48:
 35214  008E4C  0005               	push	
 35215  008E4E  6EFA               	movwf	pclath,c
 35216  008E50  51E3               	movf	_TMR0_InterruptHandler& (0+255),w,b
 35217  008E52  6EFD               	movwf	tosl,c
 35218  008E54  51E4               	movf	(_TMR0_InterruptHandler+1)& (0+255),w,b
 35219  008E56  6EFE               	movwf	tosh,c
 35220  008E58  6AFF               	clrf	tosu,c
 35221  008E5A  50FA               	movf	pclath,w,c
 35222  008E5C  0012               	return		;indir
 35223  008E5E                     __end_of_TMR0_ISR:
 35224                           	callstack 0
 35225                           
 35226 ;; *************** function _rxi *****************
 35227 ;; Defined at:
 35228 ;;		line 41 in file "inputs_MC50.c"
 35229 ;; Parameters:    Size  Location     Type
 35230 ;;		None
 35231 ;; Auto vars:     Size  Location     Type
 35232 ;;		None
 35233 ;; Return value:  Size  Location     Type
 35234 ;;                  1    wreg      void 
 35235 ;; Registers used:
 35236 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 35237 ;; Tracked objects:
 35238 ;;		On entry : 3F/E
 35239 ;;		On exit  : 3C/0
 35240 ;;		Unchanged: 0/0
 35241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35244 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35245 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35246 ;;Total ram usage:        2 bytes
 35247 ;; Hardware stack levels used: 1
 35248 ;; This function calls:
 35249 ;;		Nothing
 35250 ;; This function is called by:
 35251 ;;		_TMR0_ISR
 35252 ;; This function uses a non-reentrant model
 35253 ;;
 35254                           
 35255                           	psect	text199
 35256  00427C                     __ptext199:
 35257                           	callstack 0
 35258  00427C                     _rxi:
 35259                           	callstack 15
 35260                           
 35261                           ; BSR set to: 14
 35262                           ;inputs_MC50.c: 43:     RFBit = PORTBbits.RB3;
 35263                           
 35264                           ;incstack = 0
 35265  00427C  0E00               	movlw	0
 35266  00427E  B68E               	btfsc	142,3,c	;volatile
 35267  004280  0E01               	movlw	1
 35268  004282  0100               	movlb	0	; () banked
 35269  004284  6F89               	movwf	_RFBit& (0+255),b	;volatile
 35270                           
 35271                           ; BSR set to: 0
 35272                           ;inputs_MC50.c: 47:     if (RFFull)
 35273  004286  518B               	movf	_RFFull& (0+255),w,b	;volatile
 35274  004288  A4D8               	btfss	status,2,c
 35275  00428A  0012               	return	
 35276  00428C  D116               	goto	i2l14211
 35277  00428E                     i2l14101:
 35278                           
 35279                           ; BSR set to: 1
 35280                           ;inputs_MC50.c: 53:             if (RFBit == 0) {
 35281  00428E  0100               	movlb	0	; () banked
 35282  004290  5189               	movf	_RFBit& (0+255),w,b	;volatile
 35283  004292  A4D8               	btfss	status,2,c
 35284  004294  D004               	goto	i2l14105
 35285                           
 35286                           ; BSR set to: 0
 35287                           ;inputs_MC50.c: 56:                 RFstate = 3;
 35288  004296  0E03               	movlw	3
 35289  004298  0101               	movlb	1	; () banked
 35290  00429A  6F98               	movwf	_RFstate& (0+255),b
 35291                           
 35292                           ;inputs_MC50.c: 57:             } else {
 35293  00429C  0012               	return	
 35294  00429E                     i2l14105:
 35295                           
 35296                           ; BSR set to: 0
 35297                           ;inputs_MC50.c: 58:                 RFcount--;
 35298  00429E  077E               	decf	_RFcount& (0+255),f,b
 35299  0042A0  A0D8               	btfss	status,0,c
 35300  0042A2  077F               	decf	(_RFcount+1)& (0+255),f,b
 35301                           
 35302                           ; BSR set to: 0
 35303                           ;inputs_MC50.c: 59:                 if (RFcount < -10)
 35304  0042A4  AF7F               	btfss	(_RFcount+1)& (0+255),7,b
 35305  0042A6  0012               	return	
 35306  0042A8  0EF6               	movlw	246
 35307  0042AA  5D7E               	subwf	_RFcount& (0+255),w,b
 35308  0042AC  0EFF               	movlw	255
 35309  0042AE  597F               	subwfb	(_RFcount+1)& (0+255),w,b
 35310  0042B0  B0D8               	btfsc	status,0,c
 35311  0042B2  0012               	return	
 35312  0042B4                     i2u1395_40:
 35313  0042B4                     i2l14109:
 35314                           
 35315                           ; BSR set to: 0
 35316                           ;inputs_MC50.c: 60:                 {;inputs_MC50.c: 62:                     RFstate = 0
      +                          ;
 35317  0042B4  0E00               	movlw	0
 35318  0042B6  0101               	movlb	1	; () banked
 35319  0042B8  6F98               	movwf	_RFstate& (0+255),b
 35320  0042BA  0012               	return	
 35321  0042BC                     i2l14111:
 35322                           
 35323                           ; BSR set to: 1
 35324                           ;inputs_MC50.c: 67:             if (RFBit) {
 35325  0042BC  0100               	movlb	0	; () banked
 35326  0042BE  5189               	movf	_RFBit& (0+255),w,b	;volatile
 35327  0042C0  B4D8               	btfsc	status,2,c
 35328  0042C2  D02C               	goto	i2l14131
 35329                           
 35330                           ; BSR set to: 0
 35331                           ;inputs_MC50.c: 71:                 RFstate = 2;
 35332  0042C4  0E02               	movlw	2
 35333  0042C6  0101               	movlb	1	; () banked
 35334  0042C8  6F98               	movwf	_RFstate& (0+255),b
 35335                           
 35336                           ; BSR set to: 1
 35337                           ;inputs_MC50.c: 72:                 BufferRF[Bptr] >>= 1;
 35338  0042CA  0EC8               	movlw	low _BufferRF
 35339  0042CC  0100               	movlb	0	; () banked
 35340  0042CE  258D               	addwf	_Bptr& (0+255),w,b
 35341  0042D0  6ED9               	movwf	fsr2l,c
 35342  0042D2  6ADA               	clrf	fsr2h,c
 35343  0042D4  0E02               	movlw	high _BufferRF
 35344  0042D6  22DA               	addwfc	fsr2h,f,c
 35345  0042D8  90D8               	bcf	status,0,c
 35346  0042DA  32DF               	rrcf	indf2,f,c
 35347                           
 35348                           ; BSR set to: 0
 35349                           ;inputs_MC50.c: 73:                 if (RFcount >= 0) {
 35350  0042DC  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 35351  0042DE  D008               	goto	i2l14121
 35352                           
 35353                           ; BSR set to: 0
 35354                           ;inputs_MC50.c: 74:                     BufferRF[Bptr] += 0x80;
 35355  0042E0  0EC8               	movlw	low _BufferRF
 35356  0042E2  258D               	addwf	_Bptr& (0+255),w,b
 35357  0042E4  6ED9               	movwf	fsr2l,c
 35358  0042E6  6ADA               	clrf	fsr2h,c
 35359  0042E8  0E02               	movlw	high _BufferRF
 35360  0042EA  22DA               	addwfc	fsr2h,f,c
 35361  0042EC  0E80               	movlw	128
 35362  0042EE  26DF               	addwf	indf2,f,c
 35363  0042F0                     i2l14121:
 35364                           
 35365                           ; BSR set to: 0
 35366                           ;inputs_MC50.c: 81:                 RFcount = 0;
 35367  0042F0  0E00               	movlw	0
 35368  0042F2  6F7F               	movwf	(_RFcount+1)& (0+255),b
 35369  0042F4  0E00               	movlw	0
 35370  0042F6  6F7E               	movwf	_RFcount& (0+255),b
 35371                           
 35372                           ; BSR set to: 0
 35373                           ;inputs_MC50.c: 83:                 if ((++BitCount & 7) == 0)
 35374  0042F8  2B8C               	incf	_BitCount& (0+255),f,b
 35375  0042FA  C08C  F001         	movff	_BitCount,??_rxi
 35376  0042FE  0E07               	movlw	7
 35377  004300  1601               	andwf	??_rxi^0,f,c
 35378  004302  B4D8               	btfsc	status,2,c
 35379                           
 35380                           ; BSR set to: 0
 35381                           ;inputs_MC50.c: 84:                     Bptr++;
 35382  004304  2B8D               	incf	_Bptr& (0+255),f,b
 35383                           
 35384                           ; BSR set to: 0
 35385                           ;inputs_MC50.c: 85:                 if (BitCount == 65) {
 35386  004306  0E41               	movlw	65
 35387  004308  198C               	xorwf	_BitCount& (0+255),w,b
 35388  00430A  A4D8               	btfss	status,2,c
 35389  00430C  0012               	return	
 35390                           
 35391                           ; BSR set to: 0
 35392                           ;inputs_MC50.c: 86:                     RFstate = 0;
 35393  00430E  0E00               	movlw	0
 35394  004310  0101               	movlb	1	; () banked
 35395  004312  6F98               	movwf	_RFstate& (0+255),b
 35396                           
 35397                           ;inputs_MC50.c: 87:                     RFFull = 1;
 35398  004314  0E01               	movlw	1
 35399  004316  0100               	movlb	0	; () banked
 35400  004318  6F8B               	movwf	_RFFull& (0+255),b	;volatile
 35401  00431A  0012               	return	
 35402  00431C                     i2l14131:
 35403                           
 35404                           ; BSR set to: 0
 35405                           ;inputs_MC50.c: 92:                 RFcount++;
 35406  00431C  4B7E               	infsnz	_RFcount& (0+255),f,b
 35407  00431E  2B7F               	incf	(_RFcount+1)& (0+255),f,b
 35408                           
 35409                           ; BSR set to: 0
 35410                           ;inputs_MC50.c: 93:                 if (RFcount >= 10)
 35411  004320  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 35412  004322  0012               	return	
 35413  004324  517F               	movf	(_RFcount+1)& (0+255),w,b
 35414  004326  E104               	bnz	i2u1400_40
 35415  004328  0E0A               	movlw	10
 35416  00432A  5D7E               	subwf	_RFcount& (0+255),w,b
 35417  00432C  A0D8               	btfss	status,0,c
 35418  00432E  0012               	return	
 35419  004330                     i2u1400_40:
 35420                           
 35421                           ; BSR set to: 0
 35422                           ;inputs_MC50.c: 94:                 {;inputs_MC50.c: 96:                     RFstate = 1
      +                          ;
 35423  004330  0E01               	movlw	1
 35424  004332  0101               	movlb	1	; () banked
 35425  004334  6F98               	movwf	_RFstate& (0+255),b
 35426                           
 35427                           ;inputs_MC50.c: 97:                     Bptr = 0;
 35428  004336  0E00               	movlw	0
 35429  004338  0100               	movlb	0	; () banked
 35430  00433A  6F8D               	movwf	_Bptr& (0+255),b
 35431                           
 35432                           ;inputs_MC50.c: 98:                     BitCount = 0;
 35433  00433C  0E00               	movlw	0
 35434  00433E  6F8C               	movwf	_BitCount& (0+255),b
 35435  004340  0012               	return	
 35436  004342                     i2l14137:
 35437                           
 35438                           ; BSR set to: 1
 35439                           ;inputs_MC50.c: 103:             if (RFBit) {
 35440  004342  0100               	movlb	0	; () banked
 35441  004344  5189               	movf	_RFBit& (0+255),w,b	;volatile
 35442  004346  B4D8               	btfsc	status,2,c
 35443  004348  D030               	goto	i2l14153
 35444                           
 35445                           ; BSR set to: 0
 35446                           ;inputs_MC50.c: 106:                 if ((RFcount < 20) || (RFcount >= 45)) {
 35447  00434A  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 35448  00434C  D00E               	goto	i2u1403_40
 35449  00434E  517F               	movf	(_RFcount+1)& (0+255),w,b
 35450  004350  E104               	bnz	i2u1402_40
 35451  004352  0E14               	movlw	20
 35452  004354  5D7E               	subwf	_RFcount& (0+255),w,b
 35453  004356  A0D8               	btfss	status,0,c
 35454  004358  D008               	goto	i2u1403_40
 35455  00435A                     i2u1402_40:
 35456                           
 35457                           ; BSR set to: 0
 35458  00435A  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 35459  00435C  D01E               	goto	i2l14151
 35460  00435E  517F               	movf	(_RFcount+1)& (0+255),w,b
 35461  004360  E104               	bnz	i2u1403_40
 35462  004362  0E2D               	movlw	45
 35463  004364  5D7E               	subwf	_RFcount& (0+255),w,b
 35464  004366  A0D8               	btfss	status,0,c
 35465  004368  D018               	goto	i2l14151
 35466  00436A                     i2u1403_40:
 35467                           
 35468                           ; BSR set to: 0
 35469                           ;inputs_MC50.c: 107:                     if((RFcount < 80) || RFcount>=100)
 35470  00436A  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 35471  00436C  D7A3               	goto	i2u1395_40
 35472  00436E  517F               	movf	(_RFcount+1)& (0+255),w,b
 35473  004370  E104               	bnz	i2u1404_40
 35474  004372  0E50               	movlw	80
 35475  004374  5D7E               	subwf	_RFcount& (0+255),w,b
 35476  004376  A0D8               	btfss	status,0,c
 35477  004378  D79D               	goto	i2u1395_40
 35478  00437A                     i2u1404_40:
 35479                           
 35480                           ; BSR set to: 0
 35481  00437A  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 35482  00437C  D006               	goto	i2l14149
 35483  00437E  517F               	movf	(_RFcount+1)& (0+255),w,b
 35484  004380  E199               	bnz	i2l14109
 35485  004382  0E64               	movlw	100
 35486  004384  5D7E               	subwf	_RFcount& (0+255),w,b
 35487  004386  B0D8               	btfsc	status,0,c
 35488  004388  D795               	goto	i2u1395_40
 35489  00438A                     i2l14149:
 35490                           
 35491                           ; BSR set to: 0
 35492                           ;inputs_MC50.c: 112:                     {;inputs_MC50.c: 113:                         R
      +                          Fcount = -10;
 35493  00438A  0EFF               	movlw	255
 35494  00438C  6F7F               	movwf	(_RFcount+1)& (0+255),b
 35495  00438E  0EF6               	movlw	246
 35496  004390  6F7E               	movwf	_RFcount& (0+255),b
 35497                           
 35498                           ;inputs_MC50.c: 114:                         RFstate = 4;
 35499  004392  0E04               	movlw	4
 35500  004394  0101               	movlb	1	; () banked
 35501  004396  6F98               	movwf	_RFstate& (0+255),b
 35502  004398  0012               	return	
 35503  00439A                     i2l14151:
 35504                           
 35505                           ; BSR set to: 0
 35506                           ;inputs_MC50.c: 118:                     RFcount = 0;
 35507  00439A  0E00               	movlw	0
 35508  00439C  6F7F               	movwf	(_RFcount+1)& (0+255),b
 35509  00439E  0E00               	movlw	0
 35510  0043A0  6F7E               	movwf	_RFcount& (0+255),b
 35511                           
 35512                           ;inputs_MC50.c: 119:                     RFstate = 2;
 35513  0043A2  0E02               	movlw	2
 35514  0043A4  0101               	movlb	1	; () banked
 35515  0043A6  6F98               	movwf	_RFstate& (0+255),b
 35516  0043A8  0012               	return	
 35517  0043AA                     i2l14153:
 35518                           
 35519                           ; BSR set to: 0
 35520                           ;inputs_MC50.c: 122:                 RFcount++;
 35521  0043AA  4B7E               	infsnz	_RFcount& (0+255),f,b
 35522  0043AC  2B7F               	incf	(_RFcount+1)& (0+255),f,b
 35523  0043AE  0012               	return	
 35524  0043B0                     i2l14155:
 35525                           
 35526                           ; BSR set to: 1
 35527                           ;inputs_MC50.c: 127:             if (RFBit == 0) {
 35528  0043B0  0100               	movlb	0	; () banked
 35529  0043B2  5189               	movf	_RFBit& (0+255),w,b	;volatile
 35530  0043B4  A4D8               	btfss	status,2,c
 35531  0043B6  D056               	goto	i2l14191
 35532                           
 35533                           ; BSR set to: 0
 35534                           ;inputs_MC50.c: 130:                 RFstate = 5;
 35535  0043B8  0E05               	movlw	5
 35536  0043BA  0101               	movlb	1	; () banked
 35537  0043BC  6F98               	movwf	_RFstate& (0+255),b
 35538                           
 35539                           ; BSR set to: 1
 35540                           ;inputs_MC50.c: 131:                 BufferRF[Bptr] >>= 1;
 35541  0043BE  0EC8               	movlw	low _BufferRF
 35542  0043C0  0100               	movlb	0	; () banked
 35543  0043C2  258D               	addwf	_Bptr& (0+255),w,b
 35544  0043C4  6ED9               	movwf	fsr2l,c
 35545  0043C6  6ADA               	clrf	fsr2h,c
 35546  0043C8  0E02               	movlw	high _BufferRF
 35547  0043CA  22DA               	addwfc	fsr2h,f,c
 35548  0043CC  90D8               	bcf	status,0,c
 35549  0043CE  32DF               	rrcf	indf2,f,c
 35550                           
 35551                           ; BSR set to: 0
 35552                           ;inputs_MC50.c: 132:                 if (RFcount >= 0) {
 35553  0043D0  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 35554  0043D2  D008               	goto	i2l14165
 35555                           
 35556                           ; BSR set to: 0
 35557                           ;inputs_MC50.c: 133:                     BufferRF[Bptr] += 0x80;
 35558  0043D4  0EC8               	movlw	low _BufferRF
 35559  0043D6  258D               	addwf	_Bptr& (0+255),w,b
 35560  0043D8  6ED9               	movwf	fsr2l,c
 35561  0043DA  6ADA               	clrf	fsr2h,c
 35562  0043DC  0E02               	movlw	high _BufferRF
 35563  0043DE  22DA               	addwfc	fsr2h,f,c
 35564  0043E0  0E80               	movlw	128
 35565  0043E2  26DF               	addwf	indf2,f,c
 35566  0043E4                     i2l14165:
 35567                           
 35568                           ; BSR set to: 0
 35569                           ;inputs_MC50.c: 136:                 RFcount = 0;
 35570  0043E4  0E00               	movlw	0
 35571  0043E6  6F7F               	movwf	(_RFcount+1)& (0+255),b
 35572  0043E8  0E00               	movlw	0
 35573  0043EA  6F7E               	movwf	_RFcount& (0+255),b
 35574                           
 35575                           ; BSR set to: 0
 35576                           ;inputs_MC50.c: 138:                 if ((++BitCount & 7) == 0)
 35577  0043EC  2B8C               	incf	_BitCount& (0+255),f,b
 35578  0043EE  C08C  F001         	movff	_BitCount,??_rxi
 35579  0043F2  0E07               	movlw	7
 35580  0043F4  1601               	andwf	??_rxi^0,f,c
 35581  0043F6  A4D8               	btfss	status,2,c
 35582  0043F8  D009               	goto	i2l14173
 35583                           
 35584                           ; BSR set to: 0
 35585                           ;inputs_MC50.c: 139:                 {;inputs_MC50.c: 140:                     Bptr++;
 35586  0043FA  2B8D               	incf	_Bptr& (0+255),f,b
 35587                           
 35588                           ; BSR set to: 0
 35589                           ;inputs_MC50.c: 141:                     BufferRF[Bptr]=0;
 35590  0043FC  0EC8               	movlw	low _BufferRF
 35591  0043FE  258D               	addwf	_Bptr& (0+255),w,b
 35592  004400  6ED9               	movwf	fsr2l,c
 35593  004402  6ADA               	clrf	fsr2h,c
 35594  004404  0E02               	movlw	high _BufferRF
 35595  004406  22DA               	addwfc	fsr2h,f,c
 35596  004408  0E00               	movlw	0
 35597  00440A  6EDF               	movwf	indf2,c
 35598  00440C                     i2l14173:
 35599                           
 35600                           ; BSR set to: 0
 35601                           ;inputs_MC50.c: 143:                 if (BitCount == 13) {
 35602  00440C  0E0D               	movlw	13
 35603  00440E  198C               	xorwf	_BitCount& (0+255),w,b
 35604  004410  A4D8               	btfss	status,2,c
 35605  004412  0012               	return	
 35606                           
 35607                           ; BSR set to: 0
 35608                           ;inputs_MC50.c: 144:                     RFstate = 0;
 35609  004414  0E00               	movlw	0
 35610  004416  0101               	movlb	1	; () banked
 35611  004418  6F98               	movwf	_RFstate& (0+255),b
 35612                           
 35613                           ; BSR set to: 1
 35614                           ;inputs_MC50.c: 145:                     if(RFFull_12BIT==1)
 35615  00441A  0100               	movlb	0	; () banked
 35616  00441C  058A               	decf	_RFFull_12BIT& (0+255),w,b	;volatile
 35617  00441E  A4D8               	btfss	status,2,c
 35618  004420  D01A               	goto	i2l14185
 35619                           
 35620                           ; BSR set to: 0
 35621                           ;inputs_MC50.c: 146:                     {;inputs_MC50.c: 147:                         i
      +                          f(BufferRF_12BIT[0]==BufferRF[0] && BufferRF_12BIT[1]==BufferRF[1])
 35622  004422  0102               	movlb	2	; () banked
 35623  004424  51C8               	movf	_BufferRF& (0+255),w,b
 35624  004426  0101               	movlb	1	; () banked
 35625  004428  1987               	xorwf	_BufferRF_12BIT& (0+255),w,b
 35626  00442A  A4D8               	btfss	status,2,c
 35627  00442C  D00F               	goto	i2l1615
 35628                           
 35629                           ; BSR set to: 1
 35630  00442E  0102               	movlb	2	; () banked
 35631  004430  51C9               	movf	(_BufferRF+1)& (0+255),w,b
 35632  004432  0101               	movlb	1	; () banked
 35633  004434  1988               	xorwf	(_BufferRF_12BIT+1)& (0+255),w,b
 35634  004436  A4D8               	btfss	status,2,c
 35635  004438  D009               	goto	i2l1615
 35636                           
 35637                           ; BSR set to: 1
 35638                           ;inputs_MC50.c: 148:                         {;inputs_MC50.c: 149:                      
      +                                 RFFull = 1;
 35639  00443A  0E01               	movlw	1
 35640  00443C  0100               	movlb	0	; () banked
 35641  00443E  6F8B               	movwf	_RFFull& (0+255),b	;volatile
 35642                           
 35643                           ;inputs_MC50.c: 150:                             BufferRF[2]=0;
 35644  004440  0E00               	movlw	0
 35645  004442  0102               	movlb	2	; () banked
 35646  004444  6FCA               	movwf	(_BufferRF+2)& (0+255),b
 35647                           
 35648                           ;inputs_MC50.c: 151:                             BufferRF[3]=0;
 35649  004446  0E00               	movlw	0
 35650  004448  6FCB               	movwf	(_BufferRF+3)& (0+255),b
 35651                           
 35652                           ;inputs_MC50.c: 152:                         }
 35653  00444A  0012               	return	
 35654  00444C                     i2l1615:
 35655                           
 35656                           ; BSR set to: 1
 35657                           ;inputs_MC50.c: 154:                         {;inputs_MC50.c: 155:                      
      +                                 BufferRF_12BIT[0]=BufferRF[0];
 35658  00444C  C2C8  F187         	movff	_BufferRF,_BufferRF_12BIT
 35659                           
 35660                           ;inputs_MC50.c: 156:                             BufferRF_12BIT[1]=BufferRF[1];
 35661  004450  C2C9  F188         	movff	_BufferRF+1,_BufferRF_12BIT+1
 35662  004454  0012               	return	
 35663  004456                     i2l14185:
 35664                           
 35665                           ; BSR set to: 0
 35666                           ;inputs_MC50.c: 161:                     {;inputs_MC50.c: 162:                         R
      +                          FFull_12BIT=1;
 35667  004456  0E01               	movlw	1
 35668  004458  6F8A               	movwf	_RFFull_12BIT& (0+255),b	;volatile
 35669                           
 35670                           ; BSR set to: 0
 35671                           ;inputs_MC50.c: 163:                         BufferRF_12BIT[0]=BufferRF[0];
 35672  00445A  C2C8  F187         	movff	_BufferRF,_BufferRF_12BIT
 35673                           
 35674                           ; BSR set to: 0
 35675                           ;inputs_MC50.c: 164:                         BufferRF_12BIT[1]=BufferRF[1];
 35676  00445E  C2C9  F188         	movff	_BufferRF+1,_BufferRF_12BIT+1
 35677  004462  0012               	return	
 35678  004464                     i2l14191:
 35679                           
 35680                           ; BSR set to: 0
 35681                           ;inputs_MC50.c: 168:                 RFcount++;
 35682  004464  4B7E               	infsnz	_RFcount& (0+255),f,b
 35683  004466  2B7F               	incf	(_RFcount+1)& (0+255),f,b
 35684                           
 35685                           ; BSR set to: 0
 35686                           ;inputs_MC50.c: 169:                 if (RFcount >= 10)
 35687  004468  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 35688  00446A  0012               	return	
 35689  00446C  517F               	movf	(_RFcount+1)& (0+255),w,b
 35690  00446E  E104               	bnz	i2u1413_40
 35691  004470  0E0A               	movlw	10
 35692  004472  5D7E               	subwf	_RFcount& (0+255),w,b
 35693  004474  A0D8               	btfss	status,0,c
 35694  004476  0012               	return	
 35695  004478                     i2u1413_40:
 35696  004478  D71D               	goto	i2u1395_40
 35697  00447A                     i2l14197:
 35698                           
 35699                           ; BSR set to: 1
 35700                           ;inputs_MC50.c: 177:             if (RFBit) {
 35701  00447A  0100               	movlb	0	; () banked
 35702  00447C  5189               	movf	_RFBit& (0+255),w,b	;volatile
 35703  00447E  B4D8               	btfsc	status,2,c
 35704  004480  D004               	goto	i2l14201
 35705                           
 35706                           ; BSR set to: 0
 35707                           ;inputs_MC50.c: 181:                 RFstate = 4;
 35708  004482  0E04               	movlw	4
 35709  004484  0101               	movlb	1	; () banked
 35710  004486  6F98               	movwf	_RFstate& (0+255),b
 35711                           
 35712                           ;inputs_MC50.c: 183:             } else {
 35713  004488  0012               	return	
 35714  00448A                     i2l14201:
 35715                           
 35716                           ; BSR set to: 0
 35717                           ;inputs_MC50.c: 184:                 RFcount--;
 35718  00448A  077E               	decf	_RFcount& (0+255),f,b
 35719  00448C  A0D8               	btfss	status,0,c
 35720  00448E  077F               	decf	(_RFcount+1)& (0+255),f,b
 35721                           
 35722                           ; BSR set to: 0
 35723                           ;inputs_MC50.c: 185:                 if (RFcount < -10)
 35724  004490  AF7F               	btfss	(_RFcount+1)& (0+255),7,b
 35725  004492  0012               	return	
 35726  004494  0EF6               	movlw	246
 35727  004496  5D7E               	subwf	_RFcount& (0+255),w,b
 35728  004498  0EFF               	movlw	255
 35729  00449A  597F               	subwfb	(_RFcount+1)& (0+255),w,b
 35730  00449C  B0D8               	btfsc	status,0,c
 35731  00449E  0012               	return	
 35732  0044A0  D747               	goto	i2u1400_40
 35733  0044A2                     i2l14207:
 35734                           
 35735                           ; BSR set to: 1
 35736                           ;inputs_MC50.c: 197:             RFstate = 1;
 35737  0044A2  0E01               	movlw	1
 35738  0044A4  6F98               	movwf	_RFstate& (0+255),b
 35739                           
 35740                           ;inputs_MC50.c: 198:             RFcount = 0;
 35741  0044A6  0E00               	movlw	0
 35742  0044A8  0100               	movlb	0	; () banked
 35743  0044AA  6F7F               	movwf	(_RFcount+1)& (0+255),b
 35744  0044AC  0E00               	movlw	0
 35745  0044AE  6F7E               	movwf	_RFcount& (0+255),b
 35746                           
 35747                           ;inputs_MC50.c: 199:             Bptr = 0;
 35748  0044B0  0E00               	movlw	0
 35749  0044B2  6F8D               	movwf	_Bptr& (0+255),b
 35750                           
 35751                           ;inputs_MC50.c: 200:             BitCount = 0;
 35752  0044B4  0E00               	movlw	0
 35753  0044B6  6F8C               	movwf	_BitCount& (0+255),b
 35754                           
 35755                           ;inputs_MC50.c: 201:             break;
 35756  0044B8  0012               	return	
 35757  0044BA                     i2l14211:
 35758                           
 35759                           ; BSR set to: 0
 35760  0044BA  0101               	movlb	1	; () banked
 35761  0044BC  5198               	movf	_RFstate& (0+255),w,b
 35762  0044BE  6E01               	movwf	??_rxi^0,c
 35763  0044C0  6A02               	clrf	(??_rxi+1)^0,c
 35764                           
 35765                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 35766                           ; Switch size 1, requested type "simple"
 35767                           ; Number of cases is 1, Range of values is 0 to 0
 35768                           ; switch strategies available:
 35769                           ; Name         Instructions Cycles
 35770                           ; simple_byte            4     3 (average)
 35771                           ;	Chosen strategy is simple_byte
 35772  0044C2  5002               	movf	(??_rxi+1)^0,w,c
 35773  0044C4  0A00               	xorlw	0	; case 0
 35774  0044C6  A4D8               	btfss	status,2,c
 35775  0044C8  D7EC               	goto	i2l14207
 35776                           
 35777                           ; BSR set to: 1
 35778                           ; Switch size 1, requested type "simple"
 35779                           ; Number of cases is 6, Range of values is 0 to 5
 35780                           ; switch strategies available:
 35781                           ; Name         Instructions Cycles
 35782                           ; simple_byte           19    10 (average)
 35783                           ;	Chosen strategy is simple_byte
 35784  0044CA  5001               	movf	??_rxi^0,w,c
 35785  0044CC  0A00               	xorlw	0	; case 0
 35786  0044CE  B4D8               	btfsc	status,2,c
 35787  0044D0  D7E8               	goto	i2l14207
 35788  0044D2  0A01               	xorlw	1	; case 1
 35789  0044D4  B4D8               	btfsc	status,2,c
 35790  0044D6  D735               	goto	i2l14137
 35791  0044D8  0A03               	xorlw	3	; case 2
 35792  0044DA  B4D8               	btfsc	status,2,c
 35793  0044DC  D6D8               	goto	i2l14101
 35794  0044DE  0A01               	xorlw	1	; case 3
 35795  0044E0  B4D8               	btfsc	status,2,c
 35796  0044E2  D6EC               	goto	i2l14111
 35797  0044E4  0A07               	xorlw	7	; case 4
 35798  0044E6  B4D8               	btfsc	status,2,c
 35799  0044E8  D763               	goto	i2l14155
 35800  0044EA  0A01               	xorlw	1	; case 5
 35801  0044EC  B4D8               	btfsc	status,2,c
 35802  0044EE  D7C5               	goto	i2l14197
 35803  0044F0  D7D8               	goto	i2l14207
 35804  0044F2                     __end_of_rxi:
 35805                           	callstack 0
 35806                           
 35807 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 35808 ;; Defined at:
 35809 ;;		line 147 in file "mcc_generated_files/tmr0.c"
 35810 ;; Parameters:    Size  Location     Type
 35811 ;;		None
 35812 ;; Auto vars:     Size  Location     Type
 35813 ;;		None
 35814 ;; Return value:  Size  Location     Type
 35815 ;;                  1    wreg      void 
 35816 ;; Registers used:
 35817 ;;		None
 35818 ;; Tracked objects:
 35819 ;;		On entry : 3F/2
 35820 ;;		On exit  : 3F/2
 35821 ;;		Unchanged: 3F/0
 35822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35823 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35824 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35826 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35827 ;;Total ram usage:        0 bytes
 35828 ;; Hardware stack levels used: 1
 35829 ;; This function calls:
 35830 ;;		Nothing
 35831 ;; This function is called by:
 35832 ;;		_TMR0_Initialize
 35833 ;;		_TMR0_ISR
 35834 ;; This function uses a non-reentrant model
 35835 ;;
 35836                           
 35837                           	psect	text200
 35838  0092C0                     __ptext200:
 35839                           	callstack 0
 35840  0092C0                     _TMR0_DefaultInterruptHandler:
 35841                           	callstack 15
 35842                           
 35843                           ; BSR set to: 2
 35844                           
 35845                           ;incstack = 0
 35846  0092C0  0012               	return		;funcret
 35847  0092C2                     __end_of_TMR0_DefaultInterruptHandler:
 35848                           	callstack 0
 35849                           
 35850 ;; *************** function _EUSART1_Transmit_ISR *****************
 35851 ;; Defined at:
 35852 ;;		line 197 in file "mcc_generated_files/eusart1.c"
 35853 ;; Parameters:    Size  Location     Type
 35854 ;;		None
 35855 ;; Auto vars:     Size  Location     Type
 35856 ;;		None
 35857 ;; Return value:  Size  Location     Type
 35858 ;;                  1    wreg      void 
 35859 ;; Registers used:
 35860 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 35861 ;; Tracked objects:
 35862 ;;		On entry : 3F/2
 35863 ;;		On exit  : 30/0
 35864 ;;		Unchanged: 0/0
 35865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35867 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35869 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35870 ;;Total ram usage:        0 bytes
 35871 ;; Hardware stack levels used: 1
 35872 ;; This function calls:
 35873 ;;		Nothing
 35874 ;; This function is called by:
 35875 ;;		_EUSART1_Initialize
 35876 ;;		_INTERRUPT_InterruptManager
 35877 ;; This function uses a non-reentrant model
 35878 ;;
 35879                           
 35880                           	psect	text201
 35881  008AAA                     __ptext201:
 35882                           	callstack 0
 35883  008AAA                     _EUSART1_Transmit_ISR:
 35884                           	callstack 16
 35885                           
 35886                           ; BSR set to: 2
 35887                           ;mcc_generated_files/eusart1.c: 201:     if(sizeof(eusart1TxBuffer) > eusart1TxBufferRem
      +                          aining)
 35888                           
 35889                           ; BSR set to: 2
 35890                           ;incstack = 0
 35891  008AAA  0E08               	movlw	8
 35892  008AAC  0101               	movlb	1	; () banked
 35893  008AAE  61FE               	cpfslt	_eusart1TxBufferRemaining& (0+255),b
 35894  008AB0  D012               	goto	i2l106
 35895                           
 35896                           ; BSR set to: 1
 35897                           ;mcc_generated_files/eusart1.c: 202:     {;mcc_generated_files/eusart1.c: 203:         T
      +                          X1REG = eusart1TxBuffer[eusart1TxTail++];
 35898  008AB2  0E84               	movlw	low _eusart1TxBuffer
 35899  008AB4  0100               	movlb	0	; () banked
 35900  008AB6  2596               	addwf	_eusart1TxTail& (0+255),w,b	;volatile
 35901  008AB8  6ED9               	movwf	fsr2l,c
 35902  008ABA  6ADA               	clrf	fsr2h,c
 35903  008ABC  0E02               	movlw	high _eusart1TxBuffer
 35904  008ABE  22DA               	addwfc	fsr2h,f,c
 35905  008AC0  50DF               	movf	indf2,w,c
 35906  008AC2  6E9A               	movwf	154,c	;volatile
 35907                           
 35908                           ; BSR set to: 0
 35909  008AC4  2B96               	incf	_eusart1TxTail& (0+255),f,b	;volatile
 35910                           
 35911                           ; BSR set to: 0
 35912                           ;mcc_generated_files/eusart1.c: 204:         if(sizeof(eusart1TxBuffer) <= eusart1TxTail
      +                          )
 35913  008AC6  0E07               	movlw	7
 35914  008AC8  6596               	cpfsgt	_eusart1TxTail& (0+255),b
 35915  008ACA  D002               	goto	i2l16215
 35916                           
 35917                           ; BSR set to: 0
 35918                           ;mcc_generated_files/eusart1.c: 205:         {;mcc_generated_files/eusart1.c: 206:      
      +                                 eusart1TxTail = 0;
 35919  008ACC  0E00               	movlw	0
 35920  008ACE  6F96               	movwf	_eusart1TxTail& (0+255),b	;volatile
 35921  008AD0                     i2l16215:
 35922                           
 35923                           ; BSR set to: 0
 35924                           ;mcc_generated_files/eusart1.c: 208:         eusart1TxBufferRemaining++;
 35925  008AD0  0101               	movlb	1	; () banked
 35926  008AD2  2BFE               	incf	_eusart1TxBufferRemaining& (0+255),f,b	;volatile
 35927                           
 35928                           ;mcc_generated_files/eusart1.c: 209:     }
 35929  008AD4  0012               	return	
 35930  008AD6                     i2l106:
 35931                           
 35932                           ; BSR set to: 1
 35933                           ;mcc_generated_files/eusart1.c: 211:     {;mcc_generated_files/eusart1.c: 212:         P
      +                          IE3bits.TX1IE = 0;
 35934  008AD6  010E               	movlb	14	; () banked
 35935  008AD8  99C5               	bcf	197,4,b	;volatile
 35936  008ADA  0012               	return		;funcret
 35937  008ADC                     __end_of_EUSART1_Transmit_ISR:
 35938                           	callstack 0
 35939                           
 35940 ;; *************** function _EUSART1_Receive_ISR *****************
 35941 ;; Defined at:
 35942 ;;		line 216 in file "mcc_generated_files/eusart1.c"
 35943 ;; Parameters:    Size  Location     Type
 35944 ;;		None
 35945 ;; Auto vars:     Size  Location     Type
 35946 ;;		None
 35947 ;; Return value:  Size  Location     Type
 35948 ;;                  1    wreg      void 
 35949 ;; Registers used:
 35950 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 35951 ;; Tracked objects:
 35952 ;;		On entry : 3F/2
 35953 ;;		On exit  : 0/0
 35954 ;;		Unchanged: 0/0
 35955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35956 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35957 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35959 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35960 ;;Total ram usage:        0 bytes
 35961 ;; Hardware stack levels used: 1
 35962 ;; Hardware stack levels required when called: 2
 35963 ;; This function calls:
 35964 ;;		Absolute function
 35965 ;;		_EUSART1_DefaultErrorHandler
 35966 ;;		_EUSART1_DefaultFramingErrorHandler
 35967 ;;		_EUSART1_DefaultOverrunErrorHandler
 35968 ;;		_EUSART1_RxDataHandler
 35969 ;; This function is called by:
 35970 ;;		_EUSART1_Initialize
 35971 ;;		_INTERRUPT_InterruptManager
 35972 ;; This function uses a non-reentrant model
 35973 ;;
 35974                           
 35975                           	psect	text202
 35976  007434                     __ptext202:
 35977                           	callstack 0
 35978  007434                     _EUSART1_Receive_ISR:
 35979                           	callstack 14
 35980                           
 35981                           ; BSR set to: 2
 35982                           ;mcc_generated_files/eusart1.c: 219:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
 35983                           
 35984                           ;incstack = 0
 35985  007434  0E74               	movlw	low _eusart1RxStatusBuffer
 35986  007436  0100               	movlb	0	; () banked
 35987  007438  2595               	addwf	_eusart1RxHead& (0+255),w,b	;volatile
 35988  00743A  6ED9               	movwf	fsr2l,c
 35989  00743C  6ADA               	clrf	fsr2h,c
 35990  00743E  0E02               	movlw	high _eusart1RxStatusBuffer
 35991  007440  22DA               	addwfc	fsr2h,f,c
 35992  007442  0E00               	movlw	0
 35993  007444  6EDF               	movwf	indf2,c
 35994                           
 35995                           ; BSR set to: 0
 35996                           ;mcc_generated_files/eusart1.c: 221:     if(RC1STAbits.FERR){
 35997  007446  A49D               	btfss	157,2,c	;volatile
 35998  007448  D013               	goto	i2u1824_49
 35999                           
 36000                           ; BSR set to: 0
 36001                           ;mcc_generated_files/eusart1.c: 222:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
 36002  00744A  0E74               	movlw	low _eusart1RxStatusBuffer
 36003  00744C  2595               	addwf	_eusart1RxHead& (0+255),w,b	;volatile
 36004  00744E  6ED9               	movwf	fsr2l,c
 36005  007450  6ADA               	clrf	fsr2h,c
 36006  007452  0E02               	movlw	high _eusart1RxStatusBuffer
 36007  007454  22DA               	addwfc	fsr2h,f,c
 36008  007456  0102               	movlb	2	; () banked
 36009  007458  82DF               	bsf	indf2,1,c
 36010                           
 36011                           ; BSR set to: 2
 36012                           ;mcc_generated_files/eusart1.c: 223:         EUSART1_FramingErrorHandler();
 36013  00745A  D801               	call	i2u1824_48
 36014  00745C  D009               	goto	i2u1824_49
 36015  00745E                     i2u1824_48:
 36016  00745E  0005               	push	
 36017  007460  6EFA               	movwf	pclath,c
 36018  007462  51E9               	movf	_EUSART1_FramingErrorHandler& (0+255),w,b
 36019  007464  6EFD               	movwf	tosl,c
 36020  007466  51EA               	movf	(_EUSART1_FramingErrorHandler+1)& (0+255),w,b
 36021  007468  6EFE               	movwf	tosh,c
 36022  00746A  6AFF               	clrf	tosu,c
 36023  00746C  50FA               	movf	pclath,w,c
 36024  00746E  0012               	return		;indir
 36025  007470                     i2u1824_49:
 36026                           
 36027                           ;mcc_generated_files/eusart1.c: 226:     if(RC1STAbits.OERR){
 36028  007470  A29D               	btfss	157,1,c	;volatile
 36029  007472  D014               	goto	i2u1826_49
 36030                           
 36031                           ;mcc_generated_files/eusart1.c: 227:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
 36032  007474  0E74               	movlw	low _eusart1RxStatusBuffer
 36033  007476  0100               	movlb	0	; () banked
 36034  007478  2595               	addwf	_eusart1RxHead& (0+255),w,b	;volatile
 36035  00747A  6ED9               	movwf	fsr2l,c
 36036  00747C  6ADA               	clrf	fsr2h,c
 36037  00747E  0E02               	movlw	high _eusart1RxStatusBuffer
 36038  007480  22DA               	addwfc	fsr2h,f,c
 36039  007482  0102               	movlb	2	; () banked
 36040  007484  84DF               	bsf	indf2,2,c
 36041                           
 36042                           ; BSR set to: 2
 36043                           ;mcc_generated_files/eusart1.c: 228:         EUSART1_OverrunErrorHandler();
 36044  007486  D801               	call	i2u1826_48
 36045  007488  D009               	goto	i2u1826_49
 36046  00748A                     i2u1826_48:
 36047  00748A  0005               	push	
 36048  00748C  6EFA               	movwf	pclath,c
 36049  00748E  51E7               	movf	_EUSART1_OverrunErrorHandler& (0+255),w,b
 36050  007490  6EFD               	movwf	tosl,c
 36051  007492  51E8               	movf	(_EUSART1_OverrunErrorHandler+1)& (0+255),w,b
 36052  007494  6EFE               	movwf	tosh,c
 36053  007496  6AFF               	clrf	tosu,c
 36054  007498  50FA               	movf	pclath,w,c
 36055  00749A  0012               	return		;indir
 36056  00749C                     i2u1826_49:
 36057                           
 36058                           ;mcc_generated_files/eusart1.c: 231:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
 36059  00749C  0E74               	movlw	low _eusart1RxStatusBuffer
 36060  00749E  0100               	movlb	0	; () banked
 36061  0074A0  2595               	addwf	_eusart1RxHead& (0+255),w,b	;volatile
 36062  0074A2  6ED9               	movwf	fsr2l,c
 36063  0074A4  6ADA               	clrf	fsr2h,c
 36064  0074A6  0E02               	movlw	high _eusart1RxStatusBuffer
 36065  0074A8  22DA               	addwfc	fsr2h,f,c
 36066  0074AA  50DF               	movf	indf2,w,c
 36067  0074AC  B4D8               	btfsc	status,2,c
 36068  0074AE  D00C               	goto	i2l16235
 36069                           
 36070                           ; BSR set to: 0
 36071                           ;mcc_generated_files/eusart1.c: 232:         EUSART1_ErrorHandler();
 36072  0074B0  D801               	call	i2u1828_48
 36073  0074B2  0012               	return	
 36074  0074B4                     i2u1828_48:
 36075  0074B4  0005               	push	
 36076  0074B6  6EFA               	movwf	pclath,c
 36077  0074B8  0102               	movlb	2	; () banked
 36078  0074BA  51E5               	movf	_EUSART1_ErrorHandler& (0+255),w,b
 36079  0074BC  6EFD               	movwf	tosl,c
 36080  0074BE  51E6               	movf	(_EUSART1_ErrorHandler+1)& (0+255),w,b
 36081  0074C0  6EFE               	movwf	tosh,c
 36082  0074C2  6AFF               	clrf	tosu,c
 36083  0074C4  50FA               	movf	pclath,w,c
 36084  0074C6  0012               	return		;indir
 36085  0074C8                     i2l16235:
 36086                           
 36087                           ; BSR set to: 0
 36088                           ;mcc_generated_files/eusart1.c: 234:         EUSART1_RxDataHandler();
 36089  0074C8  EC87  F047         	call	_EUSART1_RxDataHandler	;wreg free
 36090  0074CC  0012               	return		;funcret
 36091  0074CE                     __end_of_EUSART1_Receive_ISR:
 36092                           	callstack 0
 36093                           
 36094 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
 36095 ;; Defined at:
 36096 ;;		line 252 in file "mcc_generated_files/eusart1.c"
 36097 ;; Parameters:    Size  Location     Type
 36098 ;;		None
 36099 ;; Auto vars:     Size  Location     Type
 36100 ;;		None
 36101 ;; Return value:  Size  Location     Type
 36102 ;;                  1    wreg      void 
 36103 ;; Registers used:
 36104 ;;		None
 36105 ;; Tracked objects:
 36106 ;;		On entry : 3F/2
 36107 ;;		On exit  : 3F/2
 36108 ;;		Unchanged: 3F/0
 36109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36113 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36114 ;;Total ram usage:        0 bytes
 36115 ;; Hardware stack levels used: 1
 36116 ;; This function calls:
 36117 ;;		Nothing
 36118 ;; This function is called by:
 36119 ;;		_EUSART1_Initialize
 36120 ;;		_EUSART1_Receive_ISR
 36121 ;; This function uses a non-reentrant model
 36122 ;;
 36123                           
 36124                           	psect	text203
 36125  00927A                     __ptext203:
 36126                           	callstack 0
 36127  00927A                     _EUSART1_DefaultOverrunErrorHandler:
 36128                           	callstack 15
 36129                           
 36130                           ; BSR set to: 2
 36131                           ;mcc_generated_files/eusart1.c: 255:     RC1STAbits.CREN = 0;
 36132                           
 36133                           ;incstack = 0
 36134  00927A  989D               	bcf	157,4,c	;volatile
 36135                           
 36136                           ;mcc_generated_files/eusart1.c: 256:     RC1STAbits.CREN = 1;
 36137  00927C  889D               	bsf	157,4,c	;volatile
 36138                           
 36139                           ; BSR set to: 2
 36140  00927E  0012               	return		;funcret
 36141  009280                     __end_of_EUSART1_DefaultOverrunErrorHandler:
 36142                           	callstack 0
 36143                           
 36144 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
 36145 ;; Defined at:
 36146 ;;		line 250 in file "mcc_generated_files/eusart1.c"
 36147 ;; Parameters:    Size  Location     Type
 36148 ;;		None
 36149 ;; Auto vars:     Size  Location     Type
 36150 ;;		None
 36151 ;; Return value:  Size  Location     Type
 36152 ;;                  1    wreg      void 
 36153 ;; Registers used:
 36154 ;;		None
 36155 ;; Tracked objects:
 36156 ;;		On entry : 3F/2
 36157 ;;		On exit  : 3F/2
 36158 ;;		Unchanged: 3F/0
 36159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36161 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36163 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36164 ;;Total ram usage:        0 bytes
 36165 ;; Hardware stack levels used: 1
 36166 ;; This function calls:
 36167 ;;		Nothing
 36168 ;; This function is called by:
 36169 ;;		_EUSART1_Initialize
 36170 ;;		_EUSART1_Receive_ISR
 36171 ;; This function uses a non-reentrant model
 36172 ;;
 36173                           
 36174                           	psect	text204
 36175  0092C2                     __ptext204:
 36176                           	callstack 0
 36177  0092C2                     _EUSART1_DefaultFramingErrorHandler:
 36178                           	callstack 15
 36179                           
 36180                           ; BSR set to: 2
 36181                           
 36182                           ; BSR set to: 2
 36183                           ;incstack = 0
 36184  0092C2  0012               	return		;funcret
 36185  0092C4                     __end_of_EUSART1_DefaultFramingErrorHandler:
 36186                           	callstack 0
 36187                           
 36188 ;; *************** function _EUSART1_DefaultErrorHandler *****************
 36189 ;; Defined at:
 36190 ;;		line 260 in file "mcc_generated_files/eusart1.c"
 36191 ;; Parameters:    Size  Location     Type
 36192 ;;		None
 36193 ;; Auto vars:     Size  Location     Type
 36194 ;;		None
 36195 ;; Return value:  Size  Location     Type
 36196 ;;                  1    wreg      void 
 36197 ;; Registers used:
 36198 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 36199 ;; Tracked objects:
 36200 ;;		On entry : 3F/2
 36201 ;;		On exit  : 3F/0
 36202 ;;		Unchanged: 0/0
 36203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36207 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36208 ;;Total ram usage:        0 bytes
 36209 ;; Hardware stack levels used: 1
 36210 ;; Hardware stack levels required when called: 1
 36211 ;; This function calls:
 36212 ;;		_EUSART1_RxDataHandler
 36213 ;; This function is called by:
 36214 ;;		_EUSART1_Initialize
 36215 ;;		_EUSART1_Receive_ISR
 36216 ;; This function uses a non-reentrant model
 36217 ;;
 36218                           
 36219                           	psect	text205
 36220  009280                     __ptext205:
 36221                           	callstack 0
 36222  009280                     _EUSART1_DefaultErrorHandler:
 36223                           	callstack 14
 36224                           
 36225                           ; BSR set to: 2
 36226                           ;mcc_generated_files/eusart1.c: 261:     EUSART1_RxDataHandler();
 36227                           
 36228                           ; BSR set to: 2
 36229                           ;incstack = 0
 36230  009280  EC87  F047         	call	_EUSART1_RxDataHandler	;wreg free
 36231                           
 36232                           ; BSR set to: 0
 36233  009284  0012               	return		;funcret
 36234  009286                     __end_of_EUSART1_DefaultErrorHandler:
 36235                           	callstack 0
 36236                           
 36237 ;; *************** function _EUSART1_RxDataHandler *****************
 36238 ;; Defined at:
 36239 ;;		line 240 in file "mcc_generated_files/eusart1.c"
 36240 ;; Parameters:    Size  Location     Type
 36241 ;;		None
 36242 ;; Auto vars:     Size  Location     Type
 36243 ;;		None
 36244 ;; Return value:  Size  Location     Type
 36245 ;;                  1    wreg      void 
 36246 ;; Registers used:
 36247 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 36248 ;; Tracked objects:
 36249 ;;		On entry : 3D/0
 36250 ;;		On exit  : 3F/0
 36251 ;;		Unchanged: 0/0
 36252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36256 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36257 ;;Total ram usage:        0 bytes
 36258 ;; Hardware stack levels used: 1
 36259 ;; This function calls:
 36260 ;;		Nothing
 36261 ;; This function is called by:
 36262 ;;		_EUSART1_Receive_ISR
 36263 ;;		_EUSART1_DefaultErrorHandler
 36264 ;; This function uses a non-reentrant model
 36265 ;;
 36266                           
 36267                           	psect	text206
 36268  008F0E                     __ptext206:
 36269                           	callstack 0
 36270  008F0E                     _EUSART1_RxDataHandler:
 36271                           	callstack 15
 36272                           
 36273                           ;mcc_generated_files/eusart1.c: 242:     eusart1RxBuffer[eusart1RxHead++] = RC1REG;
 36274                           
 36275                           ; BSR set to: 0
 36276                           ;incstack = 0
 36277  008F0E  0E7C               	movlw	low _eusart1RxBuffer
 36278  008F10  0100               	movlb	0	; () banked
 36279  008F12  2595               	addwf	_eusart1RxHead& (0+255),w,b	;volatile
 36280  008F14  6ED9               	movwf	fsr2l,c
 36281  008F16  6ADA               	clrf	fsr2h,c
 36282  008F18  0E02               	movlw	high _eusart1RxBuffer
 36283  008F1A  22DA               	addwfc	fsr2h,f,c
 36284  008F1C  CF99 FFDF          	movff	3993,indf2	;volatile
 36285                           
 36286                           ; BSR set to: 0
 36287  008F20  2B95               	incf	_eusart1RxHead& (0+255),f,b	;volatile
 36288                           
 36289                           ; BSR set to: 0
 36290                           ;mcc_generated_files/eusart1.c: 243:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
 36291  008F22  0E07               	movlw	7
 36292  008F24  6595               	cpfsgt	_eusart1RxHead& (0+255),b
 36293  008F26  D002               	goto	i2l12551
 36294                           
 36295                           ; BSR set to: 0
 36296                           ;mcc_generated_files/eusart1.c: 244:     {;mcc_generated_files/eusart1.c: 245:         e
      +                          usart1RxHead = 0;
 36297  008F28  0E00               	movlw	0
 36298  008F2A  6F95               	movwf	_eusart1RxHead& (0+255),b	;volatile
 36299  008F2C                     i2l12551:
 36300                           
 36301                           ; BSR set to: 0
 36302                           ;mcc_generated_files/eusart1.c: 247:     eusart1RxCount++;
 36303  008F2C  2B93               	incf	_eusart1RxCount& (0+255),f,b	;volatile
 36304                           
 36305                           ; BSR set to: 0
 36306  008F2E  0012               	return		;funcret
 36307  008F30                     __end_of_EUSART1_RxDataHandler:
 36308                           	callstack 0
 36309                           
 36310                           	psect	text207
 36311  000000                     __ptext207:
 36312                           	callstack 0
 36313                           
 36314                           	psect	rparam
 36315  0000                     
 36316                           	psect	temp
 36317  000050                     btemp:
 36318                           	callstack 0
 36319  000050                     	ds	1
 36320  0000                     int$flags	set	btemp
 36321  0000                     wtemp8	set	btemp+1
 36322  0000                     ttemp5	set	btemp+1
 36323  0000                     ttemp6	set	btemp+4
 36324  0000                     ttemp7	set	btemp+8
 36325                           
 36326                           	psect	idloc
 36327                           
 36328                           ;Config register IDLOC0 @ 0x200000
 36329                           ;	unspecified, using default values
 36330  200000                     	org	2097152
 36331  200000  0FFF               	dw	4095
 36332                           
 36333                           ;Config register IDLOC1 @ 0x200002
 36334                           ;	unspecified, using default values
 36335  200002                     	org	2097154
 36336  200002  0FFF               	dw	4095
 36337                           
 36338                           ;Config register IDLOC2 @ 0x200004
 36339                           ;	unspecified, using default values
 36340  200004                     	org	2097156
 36341  200004  0FFF               	dw	4095
 36342                           
 36343                           ;Config register IDLOC3 @ 0x200006
 36344                           ;	unspecified, using default values
 36345  200006                     	org	2097158
 36346  200006  0FFF               	dw	4095
 36347                           
 36348                           ;Config register IDLOC4 @ 0x200008
 36349                           ;	unspecified, using default values
 36350  200008                     	org	2097160
 36351  200008  0FFF               	dw	4095
 36352                           
 36353                           ;Config register IDLOC5 @ 0x20000A
 36354                           ;	unspecified, using default values
 36355  20000A                     	org	2097162
 36356  20000A  0FFF               	dw	4095
 36357                           
 36358                           ;Config register IDLOC6 @ 0x20000C
 36359                           ;	unspecified, using default values
 36360  20000C                     	org	2097164
 36361  20000C  0FFF               	dw	4095
 36362                           
 36363                           ;Config register IDLOC7 @ 0x20000E
 36364                           ;	unspecified, using default values
 36365  20000E                     	org	2097166
 36366  20000E  0FFF               	dw	4095
 36367                           
 36368                           	psect	config
 36369                           
 36370                           ;Config register CONFIG1L @ 0x300000
 36371                           ;	External Oscillator mode Selection bits
 36372                           ;	FEXTOSC = OFF, Oscillator not enabled
 36373                           ;	Power-up default value for COSC bits
 36374                           ;	RSTOSC = HFINTOSC_64MHZ, HFINTOSC with HFFRQ = 64 MHz and CDIV = 1:1
 36375  300000                     	org	3145728
 36376  300000  8C                 	db	140
 36377                           
 36378                           ;Config register CONFIG1H @ 0x300001
 36379                           ;	Clock Out Enable bit
 36380                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
 36381                           ;	Clock Switch Enable bit
 36382                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 36383                           ;	Fail-Safe Clock Monitor Enable bit
 36384                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
 36385  300001                     	org	3145729
 36386  300001  FF                 	db	255
 36387                           
 36388                           ;Config register CONFIG2L @ 0x300002
 36389                           ;	Master Clear Enable bit
 36390                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
 36391                           ;	Power-up Timer Enable bit
 36392                           ;	PWRTE = ON, Power up timer enabled
 36393                           ;	Low-power BOR enable bit
 36394                           ;	LPBOREN = OFF, ULPBOR disabled
 36395                           ;	Brown-out Reset Enable bits
 36396                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
 36397  300002                     	org	3145730
 36398  300002  FD                 	db	253
 36399                           
 36400                           ;Config register CONFIG2H @ 0x300003
 36401                           ;	Brown Out Reset Voltage selection bits
 36402                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
 36403                           ;	ZCD Disable bit
 36404                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
 36405                           ;	PPSLOCK bit One-Way Set Enable bit
 36406                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
 36407                           ;	Stack Full/Underflow Reset Enable bit
 36408                           ;	STVREN = ON, Stack full/underflow will cause Reset
 36409                           ;	Debugger Enable bit
 36410                           ;	DEBUG = OFF, Background debugger disabled
 36411                           ;	Extended Instruction Set Enable bit
 36412                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
 36413  300003                     	org	3145731
 36414  300003  FF                 	db	255
 36415                           
 36416                           ;Config register CONFIG3L @ 0x300004
 36417                           ;	WDT Period Select bits
 36418                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 36419                           ;	WDT operating mode
 36420                           ;	WDTE = SWDTEN, WDT enabled/disabled by SWDTEN bit
 36421  300004                     	org	3145732
 36422  300004  BF                 	db	191
 36423                           
 36424                           ;Config register CONFIG3H @ 0x300005
 36425                           ;	WDT Window Select bits
 36426                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 36427                           ;	WDT input clock selector
 36428                           ;	WDTCCS = SC, Software Control
 36429  300005                     	org	3145733
 36430  300005  FF                 	db	255
 36431                           
 36432                           ;Config register CONFIG4L @ 0x300006
 36433                           ;	Write Protection Block 0
 36434                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
 36435                           ;	Write Protection Block 1
 36436                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
 36437                           ;	Write Protection Block 2
 36438                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
 36439                           ;	Write Protection Block 3
 36440                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
 36441  300006                     	org	3145734
 36442  300006  FF                 	db	255
 36443                           
 36444                           ;Config register CONFIG4H @ 0x300007
 36445                           ;	Configuration Register Write Protection bit
 36446                           ;	WRTC = OFF, Configuration registers (300000-30000Bh) not write-protected
 36447                           ;	Boot Block Write Protection bit
 36448                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 36449                           ;	Data EEPROM Write Protection bit
 36450                           ;	WRTD = OFF, Data EEPROM not write-protected
 36451                           ;	Scanner Enable bit
 36452                           ;	SCANE = ON, Scanner module is available for use, SCANMD bit can control the module
 36453                           ;	Low Voltage Programming Enable bit
 36454                           ;	LVP = OFF, HV on MCLR/VPP must be used for programming
 36455  300007                     	org	3145735
 36456  300007  DF                 	db	223
 36457                           
 36458                           ;Config register CONFIG5L @ 0x300008
 36459                           ;	UserNVM Program Memory Code Protection bit
 36460                           ;	CP = ON, UserNVM code protection enabled
 36461                           ;	DataNVM Memory Code Protection bit
 36462                           ;	CPD = ON, DataNVM code protection enabled
 36463  300008                     	org	3145736
 36464  300008  FC                 	db	252
 36465                           
 36466                           ;Config register CONFIG5H @ 0x300009
 36467                           ;	unspecified, using default values
 36468  300009                     	org	3145737
 36469  300009  FF                 	db	255
 36470                           
 36471                           ;Config register CONFIG6L @ 0x30000A
 36472                           ;	Table Read Protection Block 0
 36473                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
 36474                           ;	Table Read Protection Block 1
 36475                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
 36476                           ;	Table Read Protection Block 2
 36477                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
 36478                           ;	Table Read Protection Block 3
 36479                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
 36480  30000A                     	org	3145738
 36481  30000A  FF                 	db	255
 36482                           
 36483                           ;Config register CONFIG6H @ 0x30000B
 36484                           ;	Boot Block Table Read Protection bit
 36485                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 36486  30000B                     	org	3145739
 36487  30000B  FF                 	db	255
 36488                           tosu	equ	0xFFF
 36489                           tosh	equ	0xFFE
 36490                           tosl	equ	0xFFD
 36491                           stkptr	equ	0xFFC
 36492                           pclatu	equ	0xFFB
 36493                           pclath	equ	0xFFA
 36494                           pcl	equ	0xFF9
 36495                           tblptru	equ	0xFF8
 36496                           tblptrh	equ	0xFF7
 36497                           tblptrl	equ	0xFF6
 36498                           tablat	equ	0xFF5
 36499                           prodh	equ	0xFF4
 36500                           prodl	equ	0xFF3
 36501                           indf0	equ	0xFEF
 36502                           postinc0	equ	0xFEE
 36503                           postdec0	equ	0xFED
 36504                           preinc0	equ	0xFEC
 36505                           plusw0	equ	0xFEB
 36506                           fsr0h	equ	0xFEA
 36507                           fsr0l	equ	0xFE9
 36508                           wreg	equ	0xFE8
 36509                           indf1	equ	0xFE7
 36510                           postinc1	equ	0xFE6
 36511                           postdec1	equ	0xFE5
 36512                           preinc1	equ	0xFE4
 36513                           plusw1	equ	0xFE3
 36514                           fsr1h	equ	0xFE2
 36515                           fsr1l	equ	0xFE1
 36516                           bsr	equ	0xFE0
 36517                           indf2	equ	0xFDF
 36518                           postinc2	equ	0xFDE
 36519                           postdec2	equ	0xFDD
 36520                           preinc2	equ	0xFDC
 36521                           plusw2	equ	0xFDB
 36522                           fsr2h	equ	0xFDA
 36523                           fsr2l	equ	0xFD9
 36524                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    32
    Data        46
    BSS         821
    Persistent  19
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     58      79
    BANK0           160     32     154
    BANK1           256      0     255
    BANK2           256      0     241
    BANK3           256      0     247
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          136      0       0

Pointer List with Targets:

    i2c_write1ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0
		 -> cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    i2c_read1ByteRegister@d2.data	PTR unsigned char  size(2) Largest target is 0
		 -> cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    i2c_read2ByteRegister@result.data	PTR unsigned char  size(2) Largest target is 0
		 -> cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    i2c_write2ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0
		 -> cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    I2C1_Read1ByteRegister@returnValue.data	PTR unsigned char  size(2) Largest target is 0
		 -> cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    I2C1_Read2ByteRegister@returnValue.data	PTR unsigned char  size(2) Largest target is 0
		 -> cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    I2C1_Write1ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0
		 -> cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    I2C1_Write2ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0
		 -> cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    I2C1_DO_TX$8214$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_DO_RX$8220$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_DO_TX_EMPTY$8226$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_DO_RX_EMPTY$8232$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_DO_TX_EMPTY$8231	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_DO_TX_EMPTY$8226	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F535(), 
		 -> wr2RegCompleteHandler@i2c1_master_example$F523(), wr1RegCompleteHandler@i2c1_master_example$F517(), rd2RegCompleteHandler@i2c1_master_example$F511(), rd1RegCompleteHandler@i2c1_master_example$F500(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), 

    I2C1_DO_RX$8225	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_DO_RX$8220	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F535(), 
		 -> wr2RegCompleteHandler@i2c1_master_example$F523(), wr1RegCompleteHandler@i2c1_master_example$F517(), rd2RegCompleteHandler@i2c1_master_example$F511(), rd1RegCompleteHandler@i2c1_master_example$F500(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), 

    I2C1_DO_TX$8219	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_DO_TX$8214	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F535(), 
		 -> wr2RegCompleteHandler@i2c1_master_example$F523(), wr1RegCompleteHandler@i2c1_master_example$F517(), rd2RegCompleteHandler@i2c1_master_example$F511(), rd1RegCompleteHandler@i2c1_master_example$F500(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), 

    I2C1_MasterFsm$8213	const PTR FTN()enum E10442 size(2) Largest target is 1
		 -> I2C1_DO_ADDRESS_NACK(), I2C1_DO_RESET(), I2C1_DO_RX_NACK_RESTART(), I2C1_DO_RX_NACK_STOP(), 
		 -> I2C1_DO_RX_ACK(), I2C1_DO_SEND_STOP(), I2C1_DO_SEND_RESTART(), I2C1_DO_SEND_RESTART_WRITE(), 
		 -> I2C1_DO_SEND_RESTART_READ(), I2C1_DO_TX_EMPTY(), I2C1_DO_RCEN(), I2C1_DO_RX(), 
		 -> I2C1_DO_TX(), I2C1_DO_SEND_ADR_WRITE(), I2C1_DO_SEND_ADR_READ(), I2C1_DO_IDLE(), 

    I2C1_CallbackReturnStop@funPtr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_CallbackReturnReset@funPtr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    Absolute function$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    S935$0$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    memcpy@d1	PTR void  size(2) Largest target is 17
		 -> controlSelectRemote@tempSerial(BANK0[4]), Decrypt@Buffer(COMRAM[4]), SecureKeyGen@SKEYtemp(COMRAM[8]), SecureKeyGen@HOPtemp(COMRAM[4]), 
		 -> SecureKeyGen@Buffer(COMRAM[8]), NormalKeyGen@SKEYtemp(COMRAM[4]), NormalKeyGen@SEED(BANK2[4]), NormalKeyGen@HOPtemp(COMRAM[4]), 
		 -> NormalKeyGen@Buffer(COMRAM[8]), DKEY(BANK2[8]), classic_data(BANK2[16]), I2C1_WriteNBytes@dat(COMRAM[17]), 
		 -> i2c_writeNBytes@dat(COMRAM[17]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 17
		 -> controlSelectRemote@tempSerial(BANK0[4]), Decrypt@Buffer(COMRAM[4]), SecureKeyGen@SKEYtemp(COMRAM[8]), SecureKeyGen@HOPtemp(COMRAM[4]), 
		 -> SecureKeyGen@Buffer(COMRAM[8]), NormalKeyGen@SKEYtemp(COMRAM[4]), NormalKeyGen@SEED(BANK2[4]), NormalKeyGen@HOPtemp(COMRAM[4]), 
		 -> NormalKeyGen@Buffer(COMRAM[8]), DKEY(BANK2[8]), classic_data(BANK2[16]), I2C1_WriteNBytes@dat(COMRAM[17]), 
		 -> i2c_writeNBytes@dat(COMRAM[17]), 

    memcpy@s1	PTR const void  size(2) Largest target is 64
		 -> classic_data.raw_data(BANK2[4]), Decrypt@Buffer(COMRAM[4]), SecureKeyGen@SKEYtemp(COMRAM[8]), SecureKeyGen@HOPtemp(COMRAM[4]), 
		 -> SecureKeyGen@Buffer(COMRAM[8]), NormalKeyGen@SKEYtemp(COMRAM[4]), NormalKeyGen@SEED(BANK2[4]), NormalKeyGen@HOPtemp(COMRAM[4]), 
		 -> NormalKeyGen@Buffer(COMRAM[8]), classic_data.serialnumber(BANK2[4]), classic_data(BANK2[16]), BufferRF(BANK2[9]), 
		 -> RemoveSerial@tempSerial(BANK0[4]), saveNewSerial@tempSerial(BANK0[4]), var_sys_NVM(BANK0[64]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 64
		 -> classic_data.raw_data(BANK2[4]), Decrypt@Buffer(COMRAM[4]), SecureKeyGen@SKEYtemp(COMRAM[8]), SecureKeyGen@HOPtemp(COMRAM[4]), 
		 -> SecureKeyGen@Buffer(COMRAM[8]), NormalKeyGen@SKEYtemp(COMRAM[4]), NormalKeyGen@SEED(BANK2[4]), NormalKeyGen@HOPtemp(COMRAM[4]), 
		 -> NormalKeyGen@Buffer(COMRAM[8]), classic_data.serialnumber(BANK2[4]), classic_data(BANK2[16]), BufferRF(BANK2[9]), 
		 -> RemoveSerial@tempSerial(BANK0[4]), saveNewSerial@tempSerial(BANK0[4]), var_sys_NVM(BANK0[64]), 

    eusartparser@package	PTR struct package_t size(1) Largest target is 7
		 -> main@package(BANK0[7]), 

    read_eusartparser@package	PTR struct package_t size(1) Largest target is 7
		 -> main@package(BANK0[7]), 

    sm_send_event@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_send_event@psm	PTR struct . size(2) Largest target is 12
		 -> controlLearning_stateMachine(BANK2[11]), controlGate_stateMachine(BANK1[11]), main_stateMachine(BANK1[11]), menuConfiguration_stateMachine(BANK2[11]), 

    sm_get_current_state@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_get_current_state@psm	PTR struct . size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_restart@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_restart@psm	PTR struct . size(2) Largest target is 12
		 -> controlLearning_stateMachine(BANK2[11]), controlGate_stateMachine(BANK1[11]), main_stateMachine(BANK1[11]), menuConfiguration_stateMachine(BANK2[11]), 

    sm_init@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_init@psm	PTR struct . size(2) Largest target is 12
		 -> controlLearning_stateMachine(BANK2[11]), controlGate_stateMachine(BANK1[11]), main_stateMachine(BANK1[11]), menuConfiguration_stateMachine(BANK2[11]), 

    sm_execute_menuConfiguration@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_execute_menuConfiguration@psm	PTR struct . size(2) Largest target is 12
		 -> menuConfiguration_stateMachine(BANK2[11]), 

    S6605$Value	PTR unsigned char  size(2) Largest target is 64
		 -> setValueToEdit@value(BANK1[1]), var_sys_NVM(BANK0[64]), NULL(NULL[0]), 

    edit_Param.Value	PTR unsigned char  size(2) Largest target is 64
		 -> setValueToEdit@value(BANK1[1]), var_sys_NVM.walkTime(BANK0[1]), var_sys_NVM.softStart(BANK0[1]), var_sys_NVM.softstop(BANK0[1]), 
		 -> var_sys_NVM.flashRGBMode(BANK0[1]), var_sys_NVM.velocityDecelaration(BANK0[1]), var_sys_NVM.operationMode(BANK0[1]), var_sys_NVM.autoTimeFullClose(BANK0[1]), 
		 -> var_sys_NVM.Stopboton(BANK0[1]), var_sys_NVM.logicDigital(BANK0[1]), var_sys_NVM.Direction_motor(BANK0[1]), var_sys_NVM.folow_me(BANK0[1]), 
		 -> var_sys_NVM.ligthTime(BANK0[1]), var_sys_NVM.autoTimeWalkClose(BANK0[1]), var_sys_NVM.programmingDistance(BANK0[1]), var_sys_NVM.flashLightMode(BANK0[1]), 
		 -> var_sys_NVM.securityBandInOpen(BANK0[1]), var_sys_NVM.securityBandType(BANK0[1]), var_sys_NVM.securityBandIsON(BANK0[1]), var_sys_NVM.photoCellInOpen(BANK0[1]), 
		 -> var_sys_NVM.photoCellIsON(BANK0[1]), var_sys_NVM.decelarationClose(BANK0[1]), var_sys_NVM.motorPower(BANK0[1]), var_sys_NVM.decelarationOpen(BANK0[1]), 
		 -> var_sys_NVM.homemPresente(BANK0[1]), var_sys_NVM.TypeofMotor(BANK0[1]), var_sys_NVM.positionRemotesWalk(BANK0[1]), var_sys_NVM.decelarationSensivity(BANK0[1]), 
		 -> var_sys_NVM.motorSensitivity(BANK0[1]), var_sys_NVM.electricBrake(BANK0[1]), var_sys_NVM(BANK0[64]), NULL(NULL[0]), 

    sm_execute_main@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_execute_main@psm	PTR struct . size(2) Largest target is 12
		 -> main_stateMachine(BANK1[11]), 

    sm_execute_ControlLearning@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_execute_ControlLearning@psm	PTR struct . size(2) Largest target is 12
		 -> controlLearning_stateMachine(BANK2[11]), 

    sm_execute_ControlGate@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_execute_ControlGate@psm	PTR struct . size(2) Largest target is 12
		 -> controlGate_stateMachine(BANK1[11]), 

    decrementTimeslot@ts	PTR int  size(2) Largest target is 72
		 -> ts_system.TimeShowVersion(BANK1[2]), ts_system.TimeLearningDecelaration(BANK1[2]), ts_system.TimeWaitToGetCurrent(BANK1[2]), ts_system.InvertionTimeClosingFromOpen(BANK1[2]), 
		 -> ts_system.TimeWaitReleCapacitor(BANK1[2]), ts_system.TimeInversionStart(BANK1[2]), ts_system.TimeStopedBeforeDecelaration(BANK1[2]), ts_system.TimeWaitToNextState(BANK1[2]), 
		 -> ts_system.timeFreqFlashligth(BANK1[2]), ts_system.timeFreqRGB(BANK1[2]), ts_system.timeWaitToClose(BANK1[2]), ts_system.timeOpenWalk(BANK1[2]), 
		 -> ts_system.timeoutMenu(BANK1[2]), ts_system.timeFreqDigit(BANK1[2]), ts_system.timewaitFlashRGB(BANK1[2]), ts_system.TimeStopElectricBrake(BANK1[2]), 
		 -> ts_system.Debug_TS(BANK1[2]), ts_system.timeSinalizationDigit(BANK1[2]), ts_system.TimeLastCommand(BANK1[2]), ts_system.timeBetweenSaveCounters(BANK1[2]), 
		 -> ts_system.TimeCurrentAlarm(BANK1[2]), ts_system.TimeCurrentWaitForAlarm(BANK1[2]), ts_system.TimeReleCapacitor(BANK1[2]), ts_system.TimeChargeCondesador(BANK1[2]), 
		 -> ts_system.TimeTransitionDecelaration(BANK1[2]), ts_system.timewaitBeforeSoftStart(BANK1[2]), ts_system.timeSoftStart(BANK1[2]), ts_system.TimeElectricBrake(BANK1[2]), 
		 -> ts_system.TimeStopADCZeroOffsetCalc(BANK1[2]), ts_system(BANK1[72]), 

    controlLearning_stateMachine.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    controlGate_stateMachine.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    main_stateMachine.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S4643$parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    menuConfiguration_stateMachine.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    verifyProgramingMode@classic_data	PTR struct . size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    keeloq_classic_decrypt_packet@data	PTR struct . size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    DecryptPacket_12BIT@data	PTR unsigned char  size(2) Largest target is 9
		 -> BufferRF(BANK2[9]), 

    DecryptPacket_12BIT@classic_data	PTR struct . size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    keeloqDecryptPacket@data	PTR unsigned char  size(2) Largest target is 9
		 -> BufferRF(BANK2[9]), 

    keeloqDecryptPacket@classic_data	PTR struct . size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    getHopCode@data	PTR struct . size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    HopCHK@data	PTR struct . size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    DecCHK@data	PTR struct . size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    Decrypt@packet	PTR unsigned char  size(2) Largest target is 16
		 -> SecureKeyGen@HOPtemp(COMRAM[4]), NormalKeyGen@Buffer(COMRAM[8]), classic_data(BANK2[16]), 

    NormalKeyGen@serial	PTR unsigned long  size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    sp__getClassicManufCode	PTR void  size(2) Largest target is 8
		 -> DKEY(BANK2[8]), 

    getSerialCmd@serial	PTR unsigned long  size(1) Largest target is 4
		 -> controlSelectRemote@tempSerial(BANK0[4]), 

    SaveNVM_VarSystem@point	PTR unsigned char  size(1) Largest target is 64
		 -> var_sys_NVM(BANK0[64]), 

    validateRemoteSerialNumber@position	PTR unsigned char  size(2) Largest target is 16
		 -> controlSelectRemote@pos(BANK0[1]), classic_data(BANK2[16]), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), Absolute function(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), Absolute function(), 

    I2C1_SetCallback@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_SetCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F535(), wr2RegCompleteHandler@i2c1_master_example$F523(), wr1RegCompleteHandler@i2c1_master_example$F517(), 
		 -> rd2RegCompleteHandler@i2c1_master_example$F511(), rd1RegCompleteHandler@i2c1_master_example$F500(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), wr1RegCompleteHandler(), 

    I2C1_SetAddressNackCallback@ptr	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    I2C1_SetAddressNackCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), 

    I2C1_SetDataCompleteCallback@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_SetDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F535(), wr2RegCompleteHandler@i2c1_master_example$F523(), wr1RegCompleteHandler@i2c1_master_example$F517(), 
		 -> rd2RegCompleteHandler@i2c1_master_example$F511(), rd1RegCompleteHandler@i2c1_master_example$F500(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), wr1RegCompleteHandler(), 

    I2C1_SetBuffer@buffer	PTR void  size(2) Largest target is 64
		 -> cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), I2C1_ReadDataBlock@reg(COMRAM[1]), 
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_WriteNBytes@dat(COMRAM[17]), I2C1_Write2ByteRegister@reg(COMRAM[1]), I2C1_Write2ByteRegister@data(COMRAM[2]), 
		 -> I2C1_Write1ByteRegister@reg(COMRAM[1]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@reg(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@reg(COMRAM[1]), I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@reg(COMRAM[2]), i2c_readDataBlock@d(COMRAM[4]), 
		 -> i2c_write2ByteRegister@reg(COMRAM[1]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@reg(COMRAM[1]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@reg(COMRAM[1]), i2c_read1ByteRegister@d2(COMRAM[1]), i2c_writeNBytes@dat(COMRAM[17]), i2c_write1ByteRegister@reg(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    S935$data_ptr	PTR unsigned char  size(2) Largest target is 64
		 -> cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), I2C1_ReadDataBlock@reg(COMRAM[1]), 
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_WriteNBytes@dat(COMRAM[17]), I2C1_Write2ByteRegister@reg(COMRAM[1]), I2C1_Write2ByteRegister@data(COMRAM[2]), 
		 -> I2C1_Write1ByteRegister@reg(COMRAM[1]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@reg(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@reg(COMRAM[1]), I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@reg(COMRAM[2]), i2c_readDataBlock@d(COMRAM[4]), 
		 -> i2c_write2ByteRegister@reg(COMRAM[1]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@reg(COMRAM[1]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@reg(COMRAM[1]), i2c_read1ByteRegister@d2(COMRAM[1]), i2c_writeNBytes@dat(COMRAM[17]), i2c_write1ByteRegister@reg(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_Status.data_ptr	PTR unsigned char  size(2) Largest target is 64
		 -> cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), I2C1_ReadDataBlock@reg(COMRAM[1]), 
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_WriteNBytes@dat(COMRAM[17]), I2C1_Write2ByteRegister@reg(COMRAM[1]), I2C1_Write2ByteRegister@data(COMRAM[2]), 
		 -> I2C1_Write1ByteRegister@reg(COMRAM[1]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@reg(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@reg(COMRAM[1]), I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@reg(COMRAM[2]), i2c_readDataBlock@d(COMRAM[4]), 
		 -> i2c_write2ByteRegister@reg(COMRAM[1]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@reg(COMRAM[1]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@reg(COMRAM[1]), i2c_read1ByteRegister@d2(COMRAM[1]), i2c_writeNBytes@dat(COMRAM[17]), i2c_write1ByteRegister@reg(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    S935$callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_Status.callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    S935$callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F535(), 
		 -> wr2RegCompleteHandler@i2c1_master_example$F523(), wr1RegCompleteHandler@i2c1_master_example$F517(), rd2RegCompleteHandler@i2c1_master_example$F511(), rd1RegCompleteHandler@i2c1_master_example$F500(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), 

    I2C1_Status.callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F535(), 
		 -> wr2RegCompleteHandler@i2c1_master_example$F523(), wr1RegCompleteHandler@i2c1_master_example$F517(), rd2RegCompleteHandler@i2c1_master_example$F511(), rd1RegCompleteHandler@i2c1_master_example$F500(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), 

    i2c1_fsmStateTable	const PTR FTN()enum E10442[16] size(2) Largest target is 1
		 -> I2C1_DO_ADDRESS_NACK(), I2C1_DO_RESET(), I2C1_DO_RX_NACK_RESTART(), I2C1_DO_RX_NACK_STOP(), 
		 -> I2C1_DO_RX_ACK(), I2C1_DO_SEND_STOP(), I2C1_DO_SEND_RESTART(), I2C1_DO_SEND_RESTART_WRITE(), 
		 -> I2C1_DO_SEND_RESTART_READ(), I2C1_DO_TX_EMPTY(), I2C1_DO_RCEN(), I2C1_DO_RX(), 
		 -> I2C1_DO_TX(), I2C1_DO_SEND_ADR_WRITE(), I2C1_DO_SEND_ADR_READ(), I2C1_DO_IDLE(), 

    rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr.data	PTR unsigned char  size(2) Largest target is 64
		 -> cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    wr2RegCompleteHandler@i2c1_master_example$F523@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    wr1RegCompleteHandler@i2c1_master_example$F517@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    rd2RegCompleteHandler@i2c1_master_example$F511@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    rd1RegCompleteHandler@i2c1_master_example$F500@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    bufferBlock.data	PTR unsigned char  size(2) Largest target is 64
		 -> cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    i2c_readDataBlock@data	PTR void  size(2) Largest target is 64
		 -> var_sys_NVM.homemPresente(BANK0[1]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), var_sys_NVM.positionRemotesFull(BANK0[1]), memoryTEMP(BANK2[16]), 
		 -> var_sys_NVM.learningCurrentNormalClose(BANK0[2]), var_sys_NVM(BANK0[64]), 

    d.data	PTR unsigned char  size(2) Largest target is 64
		 -> var_sys_NVM.homemPresente(BANK0[1]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), var_sys_NVM.positionRemotesFull(BANK0[1]), memoryTEMP(BANK2[16]), 
		 -> var_sys_NVM.learningCurrentNormalClose(BANK0[2]), var_sys_NVM(BANK0[64]), 

    S429$data	PTR unsigned char  size(2) Largest target is 64
		 -> cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    rdBlkRegCompleteHandler@p.data	PTR unsigned char  size(2) Largest target is 64
		 -> cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    rdBlkRegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    wr2RegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    rd2RegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    rd1RegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    sp__memcpy	PTR void  size(2) Largest target is 17
		 -> controlSelectRemote@tempSerial(BANK0[4]), Decrypt@Buffer(COMRAM[4]), SecureKeyGen@SKEYtemp(COMRAM[8]), SecureKeyGen@HOPtemp(COMRAM[4]), 
		 -> SecureKeyGen@Buffer(COMRAM[8]), NormalKeyGen@SKEYtemp(COMRAM[4]), NormalKeyGen@SEED(BANK2[4]), NormalKeyGen@HOPtemp(COMRAM[4]), 
		 -> NormalKeyGen@Buffer(COMRAM[8]), DKEY(BANK2[8]), classic_data(BANK2[16]), I2C1_WriteNBytes@dat(COMRAM[17]), 
		 -> i2c_writeNBytes@dat(COMRAM[17]), 

    i2c_writeNBytes@data	PTR void  size(1) Largest target is 64
		 -> RemoveSerial@tempSerial(BANK0[4]), saveNewSerial@tempSerial(BANK0[4]), var_sys_NVM(BANK0[64]), 

    wr1RegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Receive_ISR(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Transmit_ISR(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMRAM

    _main->_eusartparser
    _sm_execute_menuConfiguration->_ResetDefaultMemory
    _sm_execute_menuConfiguration->_setValueToEdit
    _load_New_Menu->_SetSegmentValueIntermitentMain
    _controlSelectRemote->_RemoveSerial
    _controlSelectRemote->_saveNewSerial
    _controlSelectRemote->_validateRemoteSerialNumber
    _saveNewSerial->_i2c_writeNBytes
    _getSerialCmd->_memcpy
    _cmdMemoryIsEmpty->_i2c_readDataBlock
    _RemoveSerial->_i2c_writeNBytes
    _controlSaveRemote->_SetSegmentValueIntermitentMain
    ___awdiv->___lbmod
    _SetSegmentValueMain->___awdiv
    _controlLearnDigit->_SetSegmentValueLearn
    _sm_execute_ControlGate->_sm_execute_ControlLearning
    _generateErrorLearnig->_sm_init
    _sm_init->_sm_restart
    _setPositionInvertionInOpening->_getTimeDecelaration
    _controlVelocity->_getStateOpenPosition
    _getStateOpenPosition->_getTimeDecelaration
    _InitSoftStop->_GetMotorPower
    _CloseOrder->_sm_send_event
    _setPositionInvertionInClosing->_getTimeDecelaration
    _getTimeDecelaration->___lmul
    ___lmul->___lldiv
    _StopOrder->_sm_send_event
    _GetSecurityStateInClosing->_SetSegmentValueIntermitent
    _WaitPreFlash->_sm_send_event
    _OpenFullOrder->_sm_send_event
    _OpenWalkOrder->_sm_send_event
    _sm_send_event->_sm_get_current_state
    _InitSoftStart->_GetMotorPower
    _GetSecurityStateInOpening->_SetSegmentValueIntermitent
    _GetOpenOrder->_SetSegmentValueIntermitentMain
    _SetSegmentValueIntermitentMain->___awdiv
    _read_package->_EUSART1_Read
    _keeloqDecryptPacket->_validateRemoteSerialNumber
    _keeloq_classic_decrypt_packet->_NormalKeyGen
    _NormalKeyGen->_Decrypt
    _Decrypt->_memcpy
    _HopCHK->_getHopCode
    _getHopCode->___wmul
    _DecryptPacket_12BIT->_validateRemoteSerialNumber
    _validateRemoteSerialNumber->_i2c_readDataBlock
    _loadNVM_VarSystem->_ResetDefaultMemory
    _loadNVM_VarSystem->_checkNVM_VarSystem
    _read_eusartparser->_write_package
    _write_package->_EUSART1_Write
    _ShowVersion->_SetSegmentValue
    _SetSegmentValue->___awdiv
    _SYSTEM_Initialize->_TMR1_Initialize
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler
    _ControlMotor->_VerifyElectricalBrake
    _ControlLights->_setRGB_ON
    _setRGB_ON->_RGB_Set
    _ControlCurrent->_getCurrentComparator
    _refreshCurrent->_sumHIST
    _refreshADCZeroOffset->___lwdiv
    _getCurrentComparator->___wmul
    _SaveNVM_VarSystem->_i2c_writeNBytes
    _I2C1_SetAddressNackCallback->_I2C1_SetCallback
    _I2C1_MasterWrite->_I2C1_MasterOperation
    _I2C1_Poller->_I2C1_MasterFsm
    _I2C1_MasterFsm->_I2C1_DO_ADDRESS_NACK
    _I2C1_MasterFsm->_I2C1_DO_RX
    _I2C1_MasterFsm->_I2C1_DO_TX
    _I2C1_MasterFsm->_I2C1_DO_TX_EMPTY
    _I2C1_DO_TX_EMPTY->_I2C1_CallbackReturnReset
    _I2C1_DO_TX_EMPTY->_I2C1_CallbackReturnStop
    _I2C1_DO_TX_EMPTY->_rd1RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_rd1RegCompleteHandler@i2c1_master_example$F500
    _I2C1_DO_TX_EMPTY->_rd2RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_rd2RegCompleteHandler@i2c1_master_example$F511
    _I2C1_DO_TX_EMPTY->_rdBlkRegCompleteHandler
    _I2C1_DO_TX_EMPTY->_rdBlkRegCompleteHandler@i2c1_master_example$F535
    _I2C1_DO_TX_EMPTY->_wr1RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_wr1RegCompleteHandler@i2c1_master_example$F517
    _I2C1_DO_TX_EMPTY->_wr2RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_wr2RegCompleteHandler@i2c1_master_example$F523
    _I2C1_DO_TX->_I2C1_CallbackReturnReset
    _I2C1_DO_TX->_I2C1_CallbackReturnStop
    _I2C1_DO_TX->_rd1RegCompleteHandler
    _I2C1_DO_TX->_rd1RegCompleteHandler@i2c1_master_example$F500
    _I2C1_DO_TX->_rd2RegCompleteHandler
    _I2C1_DO_TX->_rd2RegCompleteHandler@i2c1_master_example$F511
    _I2C1_DO_TX->_rdBlkRegCompleteHandler
    _I2C1_DO_TX->_rdBlkRegCompleteHandler@i2c1_master_example$F535
    _I2C1_DO_TX->_wr1RegCompleteHandler
    _I2C1_DO_TX->_wr1RegCompleteHandler@i2c1_master_example$F517
    _I2C1_DO_TX->_wr2RegCompleteHandler
    _I2C1_DO_TX->_wr2RegCompleteHandler@i2c1_master_example$F523
    _I2C1_DO_SEND_ADR_WRITE->_I2C1_MasterSendTxData
    _I2C1_DO_RX->_I2C1_CallbackReturnReset
    _I2C1_DO_RX->_I2C1_CallbackReturnStop
    _I2C1_DO_RX->_rd1RegCompleteHandler
    _I2C1_DO_RX->_rd1RegCompleteHandler@i2c1_master_example$F500
    _I2C1_DO_RX->_rd2RegCompleteHandler
    _I2C1_DO_RX->_rd2RegCompleteHandler@i2c1_master_example$F511
    _I2C1_DO_RX->_rdBlkRegCompleteHandler
    _I2C1_DO_RX->_rdBlkRegCompleteHandler@i2c1_master_example$F535
    _I2C1_DO_RX->_wr1RegCompleteHandler
    _I2C1_DO_RX->_wr1RegCompleteHandler@i2c1_master_example$F517
    _I2C1_DO_RX->_wr2RegCompleteHandler
    _I2C1_DO_RX->_wr2RegCompleteHandler@i2c1_master_example$F523
    _I2C1_DO_ADDRESS_NACK->_I2C1_CallbackReturnReset
    _I2C1_DO_ADDRESS_NACK->_I2C1_CallbackReturnStop
    _I2C1_DO_ADDRESS_NACK->_rd1RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_rd1RegCompleteHandler@i2c1_master_example$F500
    _I2C1_DO_ADDRESS_NACK->_rd2RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_rd2RegCompleteHandler@i2c1_master_example$F511
    _I2C1_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler@i2c1_master_example$F535
    _I2C1_DO_ADDRESS_NACK->_wr1RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_wr1RegCompleteHandler@i2c1_master_example$F517
    _I2C1_DO_ADDRESS_NACK->_wr2RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_wr2RegCompleteHandler@i2c1_master_example$F523
    _wr2RegCompleteHandler@i2c1_master_example$F523->_I2C1_SetDataCompleteCallback
    _wr2RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _wr1RegCompleteHandler@i2c1_master_example$F517->_I2C1_SetDataCompleteCallback
    _wr1RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rdBlkRegCompleteHandler@i2c1_master_example$F535->_I2C1_SetDataCompleteCallback
    _rdBlkRegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rd2RegCompleteHandler@i2c1_master_example$F511->_I2C1_SetDataCompleteCallback
    _rd2RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rd1RegCompleteHandler@i2c1_master_example$F500->_I2C1_SetDataCompleteCallback
    _rd1RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _I2C1_SetDataCompleteCallback->_I2C1_SetCallback

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR2_ISR->_ReadADC
    _refreshSegment->_Segments_Set
    _controlTimeslots->_decrementTimeslot
    _ReadADC->_ADCC_GetSingleConversion
    _TMR1_ISR->_controlMotorForce
    _controlMotorForce->i2_GetMotorPower
    _TMR0_ISR->_rxi

Critical Paths under _main in BANK0

    _main->_sm_execute_main
    _sm_execute_main->_sm_execute_menuConfiguration
    _sm_execute_menuConfiguration->_controlSelectRemote
    _setValueToEdit->_SaveNVM_VarSystem
    _controlSelectRemote->_validateRemoteSerialNumber
    _sm_execute_ControlGate->_actionZone_Opening
    _sm_execute_ControlLearning->_SaveNVM_VarSystem
    _actionZone_Opening->_setPositionInvertionInClosing
    _controlVelocity->_getStateOpenPosition
    _actionZone_Closing->_setPositionInvertionInClosing
    _readRFButtons->_keeloqDecryptPacket
    _keeloqDecryptPacket->_validateRemoteSerialNumber
    _DecryptPacket_12BIT->_validateRemoteSerialNumber
    _loadNVM_VarSystem->_SaveNVM_VarSystem
    _checkNVM_VarSystem->_SaveNVM_VarSystem
    _ResetDefaultMemory->_SaveNVM_VarSystem
    _eusartparser->_SaveNVM_VarSystem
    _ControlCounterMoves->_SaveNVM_VarSystem

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0 7104586
                                             25 BANK0      7     7      0
                _ControlCounterMoves
                     _ControlCurrent
                      _ControlInputs
                      _ControlLights
                       _ControlMotor
                _EUSART1_is_rx_ready
                       _InitReceiver
                  _SYSTEM_Initialize
                    _SetSegmentValue
                        _ShowVersion
                    _WWDT_SoftEnable
                    _WWDT_TimerClear
                    _controlVelocity
                       _eusartparser
                      _getKeyPressed
                  _loadNVM_VarSystem
                         _readInputs
                      _readRFButtons
                       _read_package
                         _readbutton
             _sm_execute_ControlGate
                    _sm_execute_main
                            _sm_init
 ---------------------------------------------------------------------------------
 (1) _sm_execute_main                                      4     2      2 3265240
                                             21 BANK0      4     2      2
     _SetSegmentValueIntermitentMain
                _SetSegmentValueMain
                      _load_New_Menu
       _sm_execute_menuConfiguration
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (2) _sm_execute_menuConfiguration                         4     2      2 3239816
                                             17 BANK0      4     2      2
                    _ClearFlag_rfCMD
                 _ResetDefaultMemory
                  _SaveNVM_VarSystem
     _SetSegmentValueIntermitentMain
                _SetSegmentValueMain
                            ___lbdiv
                            ___lldiv
                             ___lmul
                            ___lwdiv
                  _controlLearnDigit
                  _controlSaveRemote
                _controlSelectRemote
                      _load_New_Menu
                     _setValueToEdit
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _setValueToEdit                                       6     5      1  716791
                                             57 COMRAM     1     0      1
                                              4 BANK0      5     5      0
                       _InitReceiver
                  _SaveNVM_VarSystem
                   _cmdMemoryIsEmpty
                      _load_New_Menu
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (4) _load_New_Menu                                        4     4      0    7093
                                             31 COMRAM     4     4      0
     _SetSegmentValueIntermitentMain
                _SetSegmentValueMain
 ---------------------------------------------------------------------------------
 (4) _InitReceiver                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _controlSelectRemote                                  9     9      0 1773799
                                              8 BANK0      9     9      0
                    _ClearFlag_rfCMD
                       _RemoveSerial
                  _SaveNVM_VarSystem
                    _SetSegmentValue
     _SetSegmentValueIntermitentMain
                _SetSegmentValueMain
                            ___awdiv
                            ___lbmod
                   _cmdMemoryIsEmpty
                       _getSerialCmd
                      _getTypeRemote
                      _saveNewSerial
                      _sm_send_event
         _validateRemoteSerialNumber
 ---------------------------------------------------------------------------------
 (4) _saveNewSerial                                        8     3      5  349450
                                             57 COMRAM     1     1      0
                                              0 BANK0      7     2      5
                    _i2c_writeNBytes
 ---------------------------------------------------------------------------------
 (4) _getTypeRemote                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _getSerialCmd                                         2     1      1    6667
                                             26 COMRAM     2     1      1
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _cmdMemoryIsEmpty                                     8     7      1  348241
                                             45 COMRAM     8     7      1
                  _i2c_readDataBlock
 ---------------------------------------------------------------------------------
 (4) _RemoveSerial                                         8     7      1  349363
                                             57 COMRAM     1     0      1
                                              0 BANK0      7     7      0
                    _i2c_writeNBytes
 ---------------------------------------------------------------------------------
 (3) _controlSaveRemote                                    1     1      0   20456
                                             31 COMRAM     1     1      0
                    _ClearFlag_rfCMD
     _SetSegmentValueIntermitentMain
                _SetSegmentValueMain
                            ___awdiv
                            ___lbmod
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (4) ___lbmod                                              4     3      1    1223
                                             15 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4    1364
                                             19 COMRAM     8     4      4
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (5) _SetSegmentValueMain                                  2     1      1    2020
                                             27 COMRAM     2     1      1
                            ___awdiv (ARG)
                            ___lbdiv (ARG)
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (4) _ClearFlag_rfCMD                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _controlLearnDigit                                    0     0      0      22
               _SetSegmentValueLearn
 ---------------------------------------------------------------------------------
 (4) _SetSegmentValueLearn                                 3     3      0      22
                                             15 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     466
                                             15 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _sm_execute_ControlGate                               5     3      2  633789
                                             15 BANK0      5     3      2
                       _GetOpenOrder
         _SetSegmentValueIntermitent
                       _WaitPreFlash
                  _actionZone_Closed
                 _actionZone_Closing
                  _actionZone_Opened
                 _actionZone_Opening
         _sm_execute_ControlLearning
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (2) _sm_execute_ControlLearning                           5     3      2  372027
                                             57 COMRAM     1     1      0
                                              4 BANK0      4     2      2
                       _GetOpenOrder
                  _SaveNVM_VarSystem
                      _calculateMean
                 _clearLearningValue
               _generateErrorLearnig
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _generateErrorLearnig                                 0     0      0    2622
                            _sm_init
 ---------------------------------------------------------------------------------
 (1) _sm_init                                              5     0      5    2622
                                             17 COMRAM     5     0      5
                         _sm_restart
 ---------------------------------------------------------------------------------
 (2) _sm_restart                                           2     0      2     214
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _clearLearningValue                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _calculateMean                                       12     4      8    1241
                                             15 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) _actionZone_Opening                                   3     3      0   52477
                                             12 BANK0      3     3      0
                         _CloseOrder
                       _GetOpenOrder
          _GetSecurityStateInClosing
          _GetSecurityStateInOpening
                   _InitFullAutoTime
                   _InitWalkAutoTime
         _SetSegmentValueIntermitent
                          _StopOrder
                     _VerifyFollowMe
                    _controlVelocity
      _setPositionInvertionInClosing
      _setPositionInvertionInOpening
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _setPositionInvertionInOpening                        8     8      0    1207
                                             49 COMRAM     8     8      0
                _getTimeDecelaration
 ---------------------------------------------------------------------------------
 (3) _controlVelocity                                      1     1      0    3806
                                              2 BANK0      1     1      0
          _ControlDecelarationFactor
                       _InitSoftStop
               _getStateOpenPosition
                _getTimeDecelaration
 ---------------------------------------------------------------------------------
 (4) _getStateOpenPosition                                11    11      0    2562
                                             49 COMRAM     9     9      0
                                              0 BANK0      2     2      0
                             ___lmul
                _getTimeDecelaration
 ---------------------------------------------------------------------------------
 (4) _InitSoftStop                                         1     1      0      37
                                             19 COMRAM     1     1      0
                      _GetMotorPower
 ---------------------------------------------------------------------------------
 (4) _ControlDecelarationFactor                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _actionZone_Opened                                    2     2      0   42796
                                             31 COMRAM     2     2      0
                         _CloseOrder
                       _GetOpenOrder
          _GetSecurityStateInClosing
                   _InitFullAutoTime
                   _InitWalkAutoTime
                      _OpenFullOrder
                      _OpenWalkOrder
                     _VerifyFollowMe
 ---------------------------------------------------------------------------------
 (3) _VerifyFollowMe                                       1     1      0      31
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _CloseOrder                                           0     0      0   11293
                      _InitSoftStart
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (2) _actionZone_Closing                                   2     2      0   58040
                                             49 COMRAM     2     2      0
                       _GetOpenOrder
          _GetSecurityStateInClosing
                   _InitFullAutoTime
                   _InitWalkAutoTime
                      _OpenFullOrder
                      _OpenWalkOrder
         _SetSegmentValueIntermitent
                          _StopOrder
                             ___lmul
      _setPositionInvertionInClosing
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _setPositionInvertionInClosing                       12    12      0    1207
                                              0 BANK0     12    12      0
                _getTimeDecelaration
 ---------------------------------------------------------------------------------
 (4) _getTimeDecelaration                                  9     5      4    1207
                                             40 COMRAM     9     5      4
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8    1176
                                             28 COMRAM    12     4      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) _StopOrder                                            0     0      0   11256
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _GetSecurityStateInClosing                            0     0      0    1893
         _SetSegmentValueIntermitent
 ---------------------------------------------------------------------------------
 (2) _actionZone_Closed                                    2     2      0   65057
                                             31 COMRAM     2     2      0
                       _GetOpenOrder
          _GetSecurityStateInOpening
                   _InitFullAutoTime
                   _InitWalkAutoTime
                      _OpenFullOrder
                      _OpenWalkOrder
                       _WaitPreFlash
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _WaitPreFlash                                         0     0      0   22549
                   _InitFullAutoTime
                      _OpenFullOrder
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _OpenFullOrder                                        0     0      0   11293
                      _InitSoftStart
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _InitFullAutoTime                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _OpenWalkOrder                                        4     4      0   11389
                                             23 COMRAM     4     4      0
                      _InitSoftStart
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (2) _sm_send_event                                        6     2      4   11256
                                             17 COMRAM     6     2      4
               _sm_get_current_state
 ---------------------------------------------------------------------------------
 (3) _sm_get_current_state                                 2     0      2     121
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _InitSoftStart                                        1     1      0      37
                                             19 COMRAM     1     1      0
                      _GetMotorPower
 ---------------------------------------------------------------------------------
 (3) _InitWalkAutoTime                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _GetSecurityStateInOpening                            0     0      0    1893
         _SetSegmentValueIntermitent
 ---------------------------------------------------------------------------------
 (3) _SetSegmentValueIntermitent                           4     1      3    1893
                                             15 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (3) _GetOpenOrder                                         0     0      0    6454
     _SetSegmentValueIntermitentMain
                            ___lbdiv
 ---------------------------------------------------------------------------------
 (3) ___lbdiv                                              4     3      1    1861
                                             15 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (5) _SetSegmentValueIntermitentMain                       4     1      3    4593
                                             27 COMRAM     4     1      3
                            ___awdiv (ARG)
                            ___lbdiv (ARG)
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _readbutton                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _read_package                                        14     7      7     283
                                             16 COMRAM    14     7      7
                       _EUSART1_Read
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Read                                         1     1      0      24
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _readRFButtons                                        0     0      0  740427
                _DecryptPacket_12BIT
                _keeloqDecryptPacket
 ---------------------------------------------------------------------------------
 (2) _keeloqDecryptPacket                                 10     6      4  384102
                                              8 BANK0     10     6      4
                             _DecCHK
                             _HopCHK
      _keeloq_classic_decrypt_packet
                             _memcpy
         _validateRemoteSerialNumber
               _verifyProgramingMode
 ---------------------------------------------------------------------------------
 (3) _verifyProgramingMode                                 3     1      2     152
                                             15 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _keeloq_classic_decrypt_packet                        5     3      2   23218
                                             55 COMRAM     2     0      2
                                              0 BANK0      3     3      0
                            _Decrypt
                       _NormalKeyGen
 ---------------------------------------------------------------------------------
 (4) _NormalKeyGen                                        18    16      2   15069
                                             37 COMRAM    18    16      2
                            _Decrypt
                      _LoadManufCode
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _LoadManufCode                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _Decrypt                                             11     9      2    7935
                                             26 COMRAM    11     9      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _HopCHK                                               4     2      2    3536
                                             35 COMRAM     4     2      2
                          _ReqResync
                         _getHopCode
 ---------------------------------------------------------------------------------
 (4) _getHopCode                                          14    12      2    3145
                                             21 COMRAM    14    12      2
                          _ReqResync
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) _ReqResync                                            2     0      2     174
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _DecCHK                                               4     2      2     242
                                             15 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _DecryptPacket_12BIT                                  5     1      4  356325
                                              8 BANK0      5     1      4
                             _memcpy
         _validateRemoteSerialNumber
 ---------------------------------------------------------------------------------
 (4) _validateRemoteSerialNumber                          21    14      7  349416
                                             45 COMRAM    13     6      7
                                              0 BANK0      8     8      0
                  _i2c_readDataBlock
 ---------------------------------------------------------------------------------
 (1) _readInputs                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _loadNVM_VarSystem                                    0     0      0 1741500
             _I2C1_Read1ByteRegister
                 _ResetDefaultMemory
                  _SaveNVM_VarSystem
                 _checkNVM_VarSystem
                  _i2c_readDataBlock
 ---------------------------------------------------------------------------------
 (5) _i2c_readDataBlock                                   12     6      6  347773
                                             33 COMRAM    12     6      6
                         _I2C1_Close
                   _I2C1_MasterWrite
                          _I2C1_Open
        _I2C1_SetAddressNackCallback
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (2) _checkNVM_VarSystem                                   1     1      0  349391
                                             57 COMRAM     1     1      0
                  _SaveNVM_VarSystem
 ---------------------------------------------------------------------------------
 (3) _ResetDefaultMemory                                   1     1      0  349369
                                             57 COMRAM     1     1      0
                  _SaveNVM_VarSystem
 ---------------------------------------------------------------------------------
 (2) _I2C1_Read1ByteRegister                               3     2      1  345691
                                             33 COMRAM     3     2      1
                         _I2C1_Close
                   _I2C1_MasterWrite
                          _I2C1_Open
        _I2C1_SetAddressNackCallback
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (1) _getKeyPressed                                        1     1      0      24
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _eusartparser                                        10     9      1  359320
                                             57 COMRAM     1     0      1
                                              4 BANK0      2     2      0
                  _SaveNVM_VarSystem
                  _read_eusartparser
                 _write_eusartparser
                      _write_package
 ---------------------------------------------------------------------------------
 (2) _write_eusartparser                                  19    12      7    1343
                                             15 COMRAM    19    12      7
 ---------------------------------------------------------------------------------
 (2) _read_eusartparser                                    3     2      1    5302
                                             23 COMRAM     3     2      1
                      _write_package
 ---------------------------------------------------------------------------------
 (2) _write_package                                        7     0      7    3092
                                             16 COMRAM     7     0      7
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (3) _EUSART1_Write                                        1     1      0      44
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _WWDT_TimerClear                                      2     2      0      25
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _WWDT_SoftEnable                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ShowVersion                                          0     0      0     500
                    _SetSegmentValue
 ---------------------------------------------------------------------------------
 (4) _SetSegmentValue                                      2     1      1     500
                                             27 COMRAM     2     1      1
                            ___awdiv (ARG)
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     784
                    _ADCC_Initialize
                 _EUSART1_Initialize
                    _I2C1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                    _WWDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WWDT_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0      98
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR2_SetInterruptHandler                             2     0      2      98
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      2     2      0      98
                                             17 COMRAM     2     2      0
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR1_SetInterruptHandler                             2     0      2      98
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0      98
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2      98
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     490
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        2     0      2      98
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2      98
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ControlMotor                                         7     7      0     223
                                             17 COMRAM     7     7      0
              _VerifyElectricalBrake
 ---------------------------------------------------------------------------------
 (2) _VerifyElectricalBrake                                2     2      0     112
                                             15 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ControlLights                                        0     0      0    1620
                   _setFlashLigth_ON
                          _setRGB_ON
 ---------------------------------------------------------------------------------
 (2) _setRGB_ON                                            5     3      2    1022
                                             16 COMRAM     5     3      2
                            _RGB_Set
 ---------------------------------------------------------------------------------
 (3) _RGB_Set                                              1     1      0      22
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _setFlashLigth_ON                                     2     0      2     598
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _ControlInputs                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ControlCurrent                                       4     4      0    4118
                                             34 COMRAM     4     4      0
                      _GetMotorPower
               _getCurrentComparator
               _refreshADCZeroOffset
                     _refreshCurrent
 ---------------------------------------------------------------------------------
 (2) _refreshCurrent                                       0     0      0     576
                  _saveEnergyADCHist
                       _sumEnergyADC
                            _sumHIST
 ---------------------------------------------------------------------------------
 (3) _sumHIST                                             17    13      4     317
                                             15 COMRAM    17    13      4
 ---------------------------------------------------------------------------------
 (3) _sumEnergyADC                                         9     7      2     161
                                             15 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 (3) _saveEnergyADCHist                                    2     0      2      98
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _refreshADCZeroOffset                                 3     3      0     893
                                             22 COMRAM     3     3      0
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     618
                                             15 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _getCurrentComparator                                13     9      4    2612
                                             21 COMRAM    13     9      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    2519
                                             15 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) _GetMotorPower                                        4     4      0      37
                                             15 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (1) _ControlCounterMoves                                  0     0      0  349276
                  _SaveNVM_VarSystem
 ---------------------------------------------------------------------------------
 (4) _SaveNVM_VarSystem                                    4     4      0  349276
                                              0 BANK0      4     4      0
                    _i2c_writeNBytes
 ---------------------------------------------------------------------------------
 (5) _i2c_writeNBytes                                     24    19      5  349112
                                             33 COMRAM    24    19      5
                         _I2C1_Close
                   _I2C1_MasterWrite
                          _I2C1_Open
        _I2C1_SetAddressNackCallback
                     _I2C1_SetBuffer
                             _memcpy
 ---------------------------------------------------------------------------------
 (6) _memcpy                                              11     5      6    6478
                                             15 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (6) _I2C1_SetAddressNackCallback                          4     0      4    2859
                                             20 COMRAM     4     0      4
                   _I2C1_SetCallback
 ---------------------------------------------------------------------------------
 (6) _I2C1_Open                                            2     2      0      68
                                             15 COMRAM     2     2      0
                _I2C1_MasterClearIrq
                    _I2C1_MasterOpen
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterOpen                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterWrite                                     0     0      0  334109
               _I2C1_MasterOperation
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterOperation                                 2     2      0  334109
                                             31 COMRAM     2     2      0
                   _I2C1_MasterStart
                        _I2C1_Poller
 ---------------------------------------------------------------------------------
 (8) _I2C1_Poller                                          0     0      0  334041
                     _I2C1_MasterFsm
            _I2C1_MasterWaitForEvent
 ---------------------------------------------------------------------------------
 (9) _I2C1_MasterWaitForEvent                              0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_MasterFsm                                       3     3      0  334041
                                             28 COMRAM     3     3      0
               _I2C1_DO_ADDRESS_NACK *
                       _I2C1_DO_IDLE *
                       _I2C1_DO_RCEN *
                      _I2C1_DO_RESET *
                         _I2C1_DO_RX *
                     _I2C1_DO_RX_ACK *
            _I2C1_DO_RX_NACK_RESTART *
               _I2C1_DO_RX_NACK_STOP *
              _I2C1_DO_SEND_ADR_READ *
             _I2C1_DO_SEND_ADR_WRITE *
               _I2C1_DO_SEND_RESTART *
          _I2C1_DO_SEND_RESTART_READ *
         _I2C1_DO_SEND_RESTART_WRITE *
                  _I2C1_DO_SEND_STOP *
                         _I2C1_DO_TX *
                   _I2C1_DO_TX_EMPTY *
                _I2C1_MasterClearIrq
                  _I2C1_MasterIsNack
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_TX_EMPTY                                    2     2      0   83487
                                             26 COMRAM     2     2      0
                   Absolute function *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
               _I2C1_DO_SEND_RESTART
                  _I2C1_DO_SEND_STOP
                  _I2C1_MasterSetIrq
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterSetIrq                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_TX                                          2     2      0   83518
                                             26 COMRAM     2     2      0
                   Absolute function *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
          _I2C1_DO_SEND_RESTART_READ
         _I2C1_DO_SEND_RESTART_WRITE
                  _I2C1_DO_SEND_STOP
                  _I2C1_MasterIsNack
              _I2C1_MasterSendTxData
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterIsNack                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C1_DO_SEND_RESTART_WRITE                          0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (11) _I2C1_DO_SEND_RESTART_READ                           0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_SEND_ADR_WRITE                              0     0      0      31
              _I2C1_MasterSendTxData
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_SEND_ADR_READ                               0     0      0      31
              _I2C1_MasterSendTxData
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterSendTxData                               1     1      0      31
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_RX_ACK                                      0     0      0       0
                 _I2C1_MasterSendAck
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_RX                                          2     2      0   83487
                                             26 COMRAM     2     2      0
                   Absolute function *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
            _I2C1_DO_RX_NACK_RESTART
               _I2C1_DO_RX_NACK_STOP
               _I2C1_MasterGetRxData
                 _I2C1_MasterSendAck
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterSendAck                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterGetRxData                                0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_RX_NACK_STOP                                0     0      0       0
                _I2C1_MasterSendNack
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_RX_NACK_RESTART                             0     0      0       0
                _I2C1_MasterSendNack
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterSendNack                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_RESET                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_RCEN                                        0     0      0       0
                 _I2C1_MasterStartRx
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterStartRx                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_IDLE                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_ADDRESS_NACK                                2     2      0   83487
                                             26 COMRAM     2     2      0
                   Absolute function *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
               _I2C1_DO_SEND_RESTART
                  _I2C1_DO_SEND_STOP
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (11) _wr2RegCompleteHandler@i2c1_master_example$F523      2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _wr2RegCompleteHandler                               2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _wr1RegCompleteHandler@i2c1_master_example$F517      2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _wr1RegCompleteHandler                               2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rdBlkRegCompleteHandler@i2c1_master_example$F535    2     0      2    8343
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rdBlkRegCompleteHandler                             2     0      2    8343
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rd2RegCompleteHandler@i2c1_master_example$F511      2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rd2RegCompleteHandler                               2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rd1RegCompleteHandler@i2c1_master_example$F500      2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rd1RegCompleteHandler                               2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (6) _I2C1_SetDataCompleteCallback                         4     0      4    4339
                                             20 COMRAM     4     0      4
                   _I2C1_SetCallback
 ---------------------------------------------------------------------------------
 (7) _I2C1_SetCallback                                     5     1      4     997
                                             15 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (6) _I2C1_SetBuffer                                       4     0      4    3942
                                             15 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (11) _I2C1_DO_SEND_STOP                                   0     0      0       0
                    _I2C1_MasterStop
 ---------------------------------------------------------------------------------
 (12) _I2C1_MasterStop                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C1_DO_SEND_RESTART                                0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (12) _I2C1_MasterEnableRestart                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C1_CallbackReturnStop                             2     0      2       0
                                             24 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (11) _I2C1_CallbackReturnReset                            2     0      2     305
                                             24 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (16) Absolute function(Fake)                              2     0      2       0
 ---------------------------------------------------------------------------------
 (8) _I2C1_MasterStart                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C1_Close                                           1     1      0      37
                                             15 COMRAM     1     1      0
                _I2C1_MasterClearIrq
                   _I2C1_MasterClose
              _I2C1_MasterDisableIrq
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterDisableIrq                                0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterClose                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterClearIrq                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _INTERRUPT_InterruptManager                          6     6      0    2657
                                              9 COMRAM     6     6      0
                   Absolute function *
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
                           _TMR0_ISR
                           _TMR1_ISR
                           _TMR2_ISR
 ---------------------------------------------------------------------------------
 (15) _TMR2_ISR                                            0     0      0    2292
                   Absolute function *
                            _ReadADC
       _TMR2_DefaultInterruptHandler *
                   _controlTimeslots
                     _refreshSegment
 ---------------------------------------------------------------------------------
 (16) _refreshSegment                                      0     0      0      22
                       _Segments_Set
 ---------------------------------------------------------------------------------
 (17) _Segments_Set                                        1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (16) _controlTimeslots                                    0     0      0    2248
                  _decrementTimeslot
 ---------------------------------------------------------------------------------
 (17) _decrementTimeslot                                   4     2      2    2248
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (16) _TMR2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _ReadADC                                             3     3      0      22
                                              1 COMRAM     3     3      0
           _ADCC_GetSingleConversion
 ---------------------------------------------------------------------------------
 (17) _ADCC_GetSingleConversion                            1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (15) _TMR1_ISR                                            0     0      0     365
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                    _TMR1_WriteTimer
                  _controlMotorForce
 ---------------------------------------------------------------------------------
 (16) _controlMotorForce                                   5     5      0     136
                                              4 COMRAM     5     5      0
                    i2_GetMotorPower
            i2_VerifyElectricalBrake
 ---------------------------------------------------------------------------------
 (17) i2_VerifyElectricalBrake                             2     2      0     112
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (17) i2_GetMotorPower                                     4     4      0      24
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (16) _TMR1_WriteTimer                                     2     0      2     229
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (16) _TMR1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _TMR0_ISR                                            0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                                _rxi
 ---------------------------------------------------------------------------------
 (16) _rxi                                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (16) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _EUSART1_Transmit_ISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _EUSART1_Receive_ISR                                 0     0      0       0
                   Absolute function *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (16) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _EUSART1_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _EUSART1_DefaultErrorHandler                         0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (16) _EUSART1_RxDataHandler                               0     0      0       0
 ---------------------------------------------------------------------------------
 (16) Absolute function(Fake)                              2     0      2       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ControlCounterMoves
     _SaveNVM_VarSystem
       _i2c_writeNBytes
         _I2C1_Close
           _I2C1_MasterClearIrq
           _I2C1_MasterClose
           _I2C1_MasterDisableIrq
         _I2C1_MasterWrite
           _I2C1_MasterOperation
             _I2C1_MasterStart
             _I2C1_Poller
               _I2C1_MasterFsm
                 _I2C1_DO_ADDRESS_NACK *
                   Absolute function(Fake) *
                   _I2C1_CallbackReturnReset *
                   _I2C1_CallbackReturnStop *
                   _I2C1_DO_SEND_RESTART *
                     _I2C1_MasterEnableRestart
                   _I2C1_DO_SEND_STOP *
                     _I2C1_MasterStop
                   _rd1RegCompleteHandler *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                       _I2C1_SetCallback
                   _rd1RegCompleteHandler@i2c1_master_example$F500 *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _rd2RegCompleteHandler *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _rd2RegCompleteHandler@i2c1_master_example$F511 *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _rdBlkRegCompleteHandler *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _rdBlkRegCompleteHandler@i2c1_master_example$F535 *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _wr1RegCompleteHandler *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _wr1RegCompleteHandler@i2c1_master_example$F517 *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _wr2RegCompleteHandler *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _wr2RegCompleteHandler@i2c1_master_example$F523 *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                 _I2C1_DO_IDLE *
                 _I2C1_DO_RCEN *
                   _I2C1_MasterStartRx
                 _I2C1_DO_RESET *
                 _I2C1_DO_RX *
                   Absolute function(Fake) *
                   _I2C1_CallbackReturnReset *
                   _I2C1_CallbackReturnStop *
                   _I2C1_DO_RX_NACK_RESTART *
                     _I2C1_MasterSendNack
                   _I2C1_DO_RX_NACK_STOP *
                     _I2C1_MasterSendNack
                   _I2C1_MasterGetRxData *
                   _I2C1_MasterSendAck *
                   _rd1RegCompleteHandler *
                   _rd1RegCompleteHandler@i2c1_master_example$F500 *
                   _rd2RegCompleteHandler *
                   _rd2RegCompleteHandler@i2c1_master_example$F511 *
                   _rdBlkRegCompleteHandler *
                   _rdBlkRegCompleteHandler@i2c1_master_example$F535 *
                   _wr1RegCompleteHandler *
                   _wr1RegCompleteHandler@i2c1_master_example$F517 *
                   _wr2RegCompleteHandler *
                   _wr2RegCompleteHandler@i2c1_master_example$F523 *
                 _I2C1_DO_RX_ACK *
                   _I2C1_MasterSendAck
                 _I2C1_DO_RX_NACK_RESTART *
                 _I2C1_DO_RX_NACK_STOP *
                 _I2C1_DO_SEND_ADR_READ *
                   _I2C1_MasterSendTxData
                 _I2C1_DO_SEND_ADR_WRITE *
                   _I2C1_MasterSendTxData
                 _I2C1_DO_SEND_RESTART *
                 _I2C1_DO_SEND_RESTART_READ *
                   _I2C1_MasterEnableRestart
                 _I2C1_DO_SEND_RESTART_WRITE *
                   _I2C1_MasterEnableRestart
                 _I2C1_DO_SEND_STOP *
                 _I2C1_DO_TX *
                   Absolute function(Fake) *
                   _I2C1_CallbackReturnReset *
                   _I2C1_CallbackReturnStop *
                   _I2C1_DO_SEND_RESTART_READ *
                   _I2C1_DO_SEND_RESTART_WRITE *
                   _I2C1_DO_SEND_STOP *
                   _I2C1_MasterIsNack *
                   _I2C1_MasterSendTxData *
                   _rd1RegCompleteHandler *
                   _rd1RegCompleteHandler@i2c1_master_example$F500 *
                   _rd2RegCompleteHandler *
                   _rd2RegCompleteHandler@i2c1_master_example$F511 *
                   _rdBlkRegCompleteHandler *
                   _rdBlkRegCompleteHandler@i2c1_master_example$F535 *
                   _wr1RegCompleteHandler *
                   _wr1RegCompleteHandler@i2c1_master_example$F517 *
                   _wr2RegCompleteHandler *
                   _wr2RegCompleteHandler@i2c1_master_example$F523 *
                 _I2C1_DO_TX_EMPTY *
                   Absolute function(Fake) *
                   _I2C1_CallbackReturnReset *
                   _I2C1_CallbackReturnStop *
                   _I2C1_DO_SEND_RESTART *
                   _I2C1_DO_SEND_STOP *
                   _I2C1_MasterSetIrq *
                   _rd1RegCompleteHandler *
                   _rd1RegCompleteHandler@i2c1_master_example$F500 *
                   _rd2RegCompleteHandler *
                   _rd2RegCompleteHandler@i2c1_master_example$F511 *
                   _rdBlkRegCompleteHandler *
                   _rdBlkRegCompleteHandler@i2c1_master_example$F535 *
                   _wr1RegCompleteHandler *
                   _wr1RegCompleteHandler@i2c1_master_example$F517 *
                   _wr2RegCompleteHandler *
                   _wr2RegCompleteHandler@i2c1_master_example$F523 *
                 _I2C1_MasterClearIrq *
                 _I2C1_MasterIsNack *
               _I2C1_MasterWaitForEvent
         _I2C1_Open
           _I2C1_MasterClearIrq
           _I2C1_MasterOpen
         _I2C1_SetAddressNackCallback
           _I2C1_SetCallback
         _I2C1_SetBuffer
         _memcpy
   _ControlCurrent
     _GetMotorPower
     _getCurrentComparator
       ___wmul
     _refreshADCZeroOffset
       ___lwdiv
     _refreshCurrent
       _saveEnergyADCHist
       _sumEnergyADC
       _sumHIST
   _ControlInputs
   _ControlLights
     _setFlashLigth_ON
     _setRGB_ON
       _RGB_Set
   _ControlMotor
     _VerifyElectricalBrake
   _EUSART1_is_rx_ready
   _InitReceiver
   _SYSTEM_Initialize
     _ADCC_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _I2C1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
     _WWDT_Initialize
   _SetSegmentValue
     ___awdiv (ARG)
       ___lbmod (ARG)
     ___lbmod (ARG)
   _ShowVersion
     _SetSegmentValue
   _WWDT_SoftEnable
   _WWDT_TimerClear
   _controlVelocity
     _ControlDecelarationFactor
     _InitSoftStop
       _GetMotorPower
     _getStateOpenPosition
       ___lmul
         ___lldiv (ARG)
       _getTimeDecelaration
         ___lmul
     _getTimeDecelaration
   _eusartparser
     _SaveNVM_VarSystem
     _read_eusartparser
       _write_package
         _EUSART1_Write
     _write_eusartparser
     _write_package
   _getKeyPressed
   _loadNVM_VarSystem
     _I2C1_Read1ByteRegister
       _I2C1_Close
       _I2C1_MasterWrite
       _I2C1_Open
       _I2C1_SetAddressNackCallback
       _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
     _ResetDefaultMemory
       _SaveNVM_VarSystem
     _SaveNVM_VarSystem
     _checkNVM_VarSystem
       _SaveNVM_VarSystem
     _i2c_readDataBlock
       _I2C1_Close
       _I2C1_MasterWrite
       _I2C1_Open
       _I2C1_SetAddressNackCallback
       _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
   _readInputs
   _readRFButtons
     _DecryptPacket_12BIT
       _memcpy
       _validateRemoteSerialNumber
         _i2c_readDataBlock
     _keeloqDecryptPacket
       _DecCHK
       _HopCHK
         _ReqResync
         _getHopCode
           _ReqResync
           ___wmul
       _keeloq_classic_decrypt_packet
         _Decrypt
           _memcpy
         _NormalKeyGen
           _Decrypt
           _LoadManufCode
           _memcpy
       _memcpy
       _validateRemoteSerialNumber
       _verifyProgramingMode
   _read_package
     _EUSART1_Read
   _readbutton
   _sm_execute_ControlGate
     _GetOpenOrder
       _SetSegmentValueIntermitentMain
         ___awdiv (ARG)
         ___lbdiv (ARG)
         ___lbmod (ARG)
       ___lbdiv
     _SetSegmentValueIntermitent
     _WaitPreFlash
       _InitFullAutoTime
       _OpenFullOrder
         _InitSoftStart
           _GetMotorPower
         _sm_send_event
           _sm_get_current_state
       _sm_send_event
     _actionZone_Closed
       _GetOpenOrder
       _GetSecurityStateInOpening
         _SetSegmentValueIntermitent
       _InitFullAutoTime
       _InitWalkAutoTime
       _OpenFullOrder
       _OpenWalkOrder
         _InitSoftStart
         _sm_send_event
       _WaitPreFlash
       _sm_send_event
     _actionZone_Closing
       _GetOpenOrder
       _GetSecurityStateInClosing
         _SetSegmentValueIntermitent
       _InitFullAutoTime
       _InitWalkAutoTime
       _OpenFullOrder
       _OpenWalkOrder
       _SetSegmentValueIntermitent
       _StopOrder
         _sm_send_event
       ___lmul
       _setPositionInvertionInClosing
         _getTimeDecelaration
       _sm_send_event
     _actionZone_Opened
       _CloseOrder
         _InitSoftStart
         _sm_send_event
       _GetOpenOrder
       _GetSecurityStateInClosing
       _InitFullAutoTime
       _InitWalkAutoTime
       _OpenFullOrder
       _OpenWalkOrder
       _VerifyFollowMe
     _actionZone_Opening
       _CloseOrder
       _GetOpenOrder
       _GetSecurityStateInClosing
       _GetSecurityStateInOpening
       _InitFullAutoTime
       _InitWalkAutoTime
       _SetSegmentValueIntermitent
       _StopOrder
       _VerifyFollowMe
       _controlVelocity
       _setPositionInvertionInClosing
       _setPositionInvertionInOpening
         _getTimeDecelaration
       _sm_send_event
     _sm_execute_ControlLearning
       _GetOpenOrder
       _SaveNVM_VarSystem
       _calculateMean
       _clearLearningValue
       _generateErrorLearnig
         _sm_init
           _sm_restart
       _sm_send_event
     _sm_send_event
   _sm_execute_main
     _SetSegmentValueIntermitentMain
     _SetSegmentValueMain
       ___awdiv (ARG)
       ___lbdiv (ARG)
       ___lbmod (ARG)
     _load_New_Menu
       _SetSegmentValueIntermitentMain
       _SetSegmentValueMain
     _sm_execute_menuConfiguration
       _ClearFlag_rfCMD
       _ResetDefaultMemory
       _SaveNVM_VarSystem
       _SetSegmentValueIntermitentMain
       _SetSegmentValueMain
       ___lbdiv
       ___lldiv
       ___lmul
       ___lwdiv
       _controlLearnDigit
         _SetSegmentValueLearn
       _controlSaveRemote
         _ClearFlag_rfCMD
         _SetSegmentValueIntermitentMain
         _SetSegmentValueMain
         ___awdiv
         ___lbmod
         _sm_send_event
       _controlSelectRemote
         _ClearFlag_rfCMD
         _RemoveSerial
           _i2c_writeNBytes
         _SaveNVM_VarSystem
         _SetSegmentValue
         _SetSegmentValueIntermitentMain
         _SetSegmentValueMain
         ___awdiv
         ___lbmod
         _cmdMemoryIsEmpty
           _i2c_readDataBlock
         _getSerialCmd
           _memcpy
         _getTypeRemote
         _saveNewSerial
           _i2c_writeNBytes
         _sm_send_event
         _validateRemoteSerialNumber
       _load_New_Menu
       _setValueToEdit
         _InitReceiver
         _SaveNVM_VarSystem
         _cmdMemoryIsEmpty
         _load_New_Menu
         _sm_send_event
       _sm_send_event
     _sm_send_event
   _sm_init

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART1_Receive_ISR *
     Absolute function(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _EUSART1_Transmit_ISR *
   _TMR0_ISR *
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     _rxi *
   _TMR1_ISR *
     Absolute function(Fake) *
     _TMR1_DefaultInterruptHandler *
     _TMR1_WriteTimer *
     _controlMotorForce *
       i2_GetMotorPower
       i2_VerifyElectricalBrake
   _TMR2_ISR *
     Absolute function(Fake) *
     _ReadADC *
       _ADCC_GetSingleConversion
     _TMR2_DefaultInterruptHandler *
     _controlTimeslots *
       _decrementTimeslot
     _refreshSegment *
       _Segments_Set

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E87      0       0      61        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      F7      11       96.5%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      F1       9       94.1%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      FF       7       99.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     20      9A       5       96.2%
BITBANK14           88      0       0      32        0.0%
BANK14              88      0       0      33        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     3A      4F       1       84.0%
BITBIGSFRllll       28      0       0      59        0.0%
BITBIGSFRhlllll     27      0       0      42        0.0%
BITBIGSFRhhllll     1B      0       0      37        0.0%
BITBIGSFRhhlh       1A      0       0      35        0.0%
BITBIGSFRhlllll     13      0       0      48        0.0%
BITBIGSFRhlllhh      F      0       0      41        0.0%
BITBIGSFRhlllll      E      0       0      46        0.0%
BITBIGSFRhhh         D      0       0      34        0.0%
BITBIGSFRhhllll      C      0       0      36        0.0%
BITBIGSFRllh         9      0       0      57        0.0%
BITBIGSFRhlllll      4      0       0      52        0.0%
BITBIGSFRhlllll      3      0       0      44        0.0%
BITBIGSFRhlllll      3      0       0      43        0.0%
BITBIGSFRhlllll      3      0       0      53        0.0%
BITBIGSFRhlllll      3      0       0      55        0.0%
BITBIGSFRhlllll      2      0       0      47        0.0%
BITBIGSFRhlllhh      2      0       0      40        0.0%
BITBIGSFRhlllll      2      0       0      49        0.0%
BITBIGSFRhlllll      2      0       0      54        0.0%
BITBIGSFRlh          2      0       0      56        0.0%
BITBIGSFRlllh        1      0       0      58        0.0%
BITBIGSFRhlllll      1      0       0      45        0.0%
BITBIGSFRhlllll      1      0       0      50        0.0%
BITBIGSFRhlllll      1      0       0      51        0.0%
BITBIGSFRhlllhh      1      0       0      39        0.0%
BITBIGSFRhlllhh      1      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     3D0      60        0.0%
DATA                 0      0     3D0       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Mon Jul 18 11:14:07 2022

                                        ?_ClearFlag_rfCMD 0001  
                              cmdMemoryIsEmpty@tempSerial 0032  
                                           _Counterchoose 0092  
                        __end_of_TMR2_SetInterruptHandler 91A2  
                                _eusart1TxBufferRemaining 01FE  
                            SetSegmentValueIntermitent@d1 0013  
                            SetSegmentValueIntermitent@d2 0010  
                                    ??_checkNVM_VarSystem 003A  
                                            ___awdiv@sign 0019  
                                     ___wmul@multiplicand 0012  
                           __end_of_VerifyElectricalBrake 7D32  
                                           _LoadManufCode 8EA8  
                                        ?_SetSegmentValue 001C  
                                                     l100 88AC  
                            ??_sm_execute_ControlLearning 00DE  
                                                     l674 7800  
                                                     l690 7C68  
                                                     _GIE 007F97  
                                                     _Hop 007C  
                                   ?_I2C1_MasterOperation 0001  
                                         _timer1ReloadVal 02E1  
                                 keeloqDecryptPacket@data 00E0  
                                                     _rxi 427C  
                                  ControlMotor@stateMotor 0018  
                                         _TMR2_Initialize 8B92  
                                                     prod 000FF3  
                                                     tosl 000FFD  
                                                     wreg 000FE8  
                                  ?_I2C1_MasterSendTxData 0001  
                                       load_New_Menu@Menu 0022  
                                    _I2C1_DO_RX_NACK_STOP 921E  
                               ?_I2C1_MasterEnableRestart 0001  
                                       _SaveNVM_VarSystem 8A0C  
                        validateRemoteSerialNumber@serial 002E  
                                    I2C1_SetBuffer@buffer 0010  
                                       getKeyPressed@temp 0010  
                                     eusartparser@package 003A  
                                   getCurrentComparator@x 0022  
                                      ?_SaveNVM_VarSystem 0001  
                                 ??_rd2RegCompleteHandler 001B  
                                                    l2034 817C  
                                                    l1405 5FDC  
                                       readRFButtons@key1 0088  
                                                    l2039 8188  
                                                    l1512 5498  
                                                    l2410 3A0A  
                                                    l2306 4DCE  
                                                    l2235 6FE2  
                                                    l2323 7D2E  
                                                    l1372 87AA  
                                                    l1436 5514  
                                                    l3060 26D2  
                                                    l1357 69F6  
                                                    l1366 6B78  
                                                    l2502 7686  
                                                    l2318 7D24  
                                                    l1383 5718  
                                                    l2511 89AA  
                                                    l1519 54E4  
                                                    l3048 2546  
                                                    l2249 66E0  
                                                    l2514 89D0  
                                                    l1490 537A  
                                                    l2371 48BC  
                                                    l1731 6856  
                                                    l3083 2718  
                                                    l1388 57A0  
                                                    l2348 48B0  
                                                    l1740 68C2  
                                                    l1732 685E  
                                                    l1652 5AD6  
                                                    l3228 1066  
                                                    l2365 48A8  
                                                    l1741 68CA  
                                                    l1486 83B6  
                                                    l2438 3B7C  
                                                    l1734 687A  
                                                    l1726 681C  
                                                    l1662 5B1E  
                                                    l2375 4980  
                                                    l1743 68F4  
                                                    l1735 6882  
                                                    l1727 6824  
                                                    l2472 3C92  
                                                    l2392 4978  
                                                    l3600 2F10  
                                                    l3601 2F16  
                                                    l1737 689E  
                                                    l1649 5A60  
                                                    l3433 23C8  
                                                    l3353 1FA0  
                                                    l3097 27F2  
                                                    l3610 2F3E  
                                                    l1738 68A6  
                                                    l2722 4DFA  
                                                    l4139 85AE  
                                                    l3611 2F44  
                                                    l3603 2F1C  
                                                    l3507 82A4  
                                                    l3604 2F22  
                                                    l2580 7F72  
                                                    l2724 4E30  
                                                    l3613 2F4A  
                                                    l2805 427A  
                                                    l2725 4EF0  
                                                    l2398 498C  
                                                    l3614 2F50  
                                                    l3606 2F2C  
                                                    l1854 6DF2  
                                                    l2718 4744  
                                                    l3615 2F56  
                                                    l3375 209A  
                                                    l3367 2060  
                                                    l3624 31AC  
                                                    l3616 2F5C  
                                                    l3608 2F32  
                                                    l1864 6E26  
                                                    l1856 6E02  
                                                    l2648 3844  
                                                    l3625 31B6  
                                                    l3609 2F38  
                                                    l3385 21DE  
                                                    l3386 21FE  
                                                    l3619 3026  
                                                    l2907 19FC  
                                                    l3483 723C  
                                                    l3590 2ED4  
                                                    l3592 2EDA  
                                                    l2768 4096  
                                                    l3489 8B0A  
                                                    l3594 2EE4  
                                                    l3595 2EEE  
                                                    l3587 2EC0  
                                                    l3675 7AB4  
                                                    l3596 2EF8  
                                                    l3597 2EFE  
                                                    l3589 2ECA  
                                                    l3598 2F04  
                                                    l3599 2F0A  
                                                    ?_rxi 0001  
                                                    _DKEY 02D1  
                                                    _LATA 000F83  
                                                    _LATB 000F84  
                                                    _LATC 000F85  
                                                    _LATD 000F86  
                                                    _LATE 000F87  
                                             main@package 00F1  
                                                    _T2PR 000FBC  
                                                    _PMD0 000EE1  
                                                    _PMD1 000EE2  
                                                    _PMD2 000EE3  
                                                    _PMD3 000EE4  
                                                    _PMD4 000EE5  
                                                    _PMD5 000EE6  
                                                    _EHop 028C  
                                                    _WPUA 000F10  
                                                    _WPUB 000F18  
                                                    _WPUC 000F20  
                                                    _WPUD 000F25  
                                                    _WPUE 000F2D  
                                         __end_of_RGB_Set 915A  
                                 ??_wr2RegCompleteHandler 001B  
                                                    _Bptr 008D  
                                        ??_I2C1_MasterFsm 001D  
                                           _EUSART1_Write 8896  
                               ??_I2C1_CallbackReturnStop 001B  
                                __end_of_controlTimeslots 59C8  
                                                    _main 5CE8  
                                           ?_EUSART1_Read 0001  
                                                    _temp 0080  
                                                    fsr1h 000FE2  
                                                    fsr2h 000FDA  
                                                    indf1 000FE7  
                                                    indf2 000FDF  
                                                    fsr1l 000FE1  
                                                    fsr2l 000FD9  
                                                    btemp 0050  
                                    saveNewSerial@cmdType 003A  
                                     ??_SaveNVM_VarSystem 003A  
                                                    prodh 000FF4  
                                                    prodl 000FF3  
                                                    start 009C  
                                        ??_I2C1_SetBuffer 0014  
                                          ??_ControlMotor 0012  
                                         __end_of_Decrypt 6E7E  
                                ?i2_VerifyElectricalBrake 0001  
                                        getSerialCmd@temp 001C  
                                           ?_InitReceiver 0001  
                              ??_TMR1_SetInterruptHandler 0012  
                                            ___param_bank 000000  
                                         i2_GetMotorPower 700E  
                                         __end_of_ReadADC 8512  
                           I2C1_CallbackReturnStop@funPtr 0019  
                                         ??_getTypeRemote 0010  
                                                   ??_rxi 0001  
                                    __end_of_GetOpenOrder 5358  
                                 __end_of_TMR0_Initialize 8EEC  
                                          ?_LoadManufCode 0001  
                          ??_TMR0_DefaultInterruptHandler 0001  
                                           ?_InitSoftStop 0001  
                           sm_execute_ControlLearning@psm 00DC  
                           __end_of_OSCILLATOR_Initialize 90C8  
                      SetSegmentValueIntermitentMain@time 001D  
                                                   l20011 5268  
                                                   l20005 5260  
                                                   l12023 88CC  
                                                   l12025 88D0  
                                                   l12009 8898  
                                                   l20033 52A2  
                                                   l20211 7898  
                                                   l20203 787C  
                                                   l20027 529A  
                                                   l20123 7430  
                                                   l20107 73FA  
                                                   l20301 4CAC  
                                                   l20231 8A5C  
                                                   l20071 5354  
                                                   l20047 52C8  
                                                   l20063 5318  
                                                   l20145 7326  
                                                   l21203 54C8  
                                                   l21131 53C6  
                                                   l21123 53AA  
                                                   l21115 538E  
                                                   l21107 536C  
                                                   l20059 5314  
                                                   l20139 7322  
                                                   l20315 4CDA  
                                                   l22003 1C3A  
                                                   l12251 6A3E  
                                                   l20093 73CC  
                                                   l20261 4BE8  
                                                   l12245 6A24  
                                                   l21053 3620  
                                                   l21207 54D6  
                                                   l21151 540C  
                                                   l21143 53F0  
                                                   l21135 53D4  
                                                   l21127 53B8  
                                                   l21119 539C  
                                                   l20239 8A74  
                                                   l21223 5066  
                                                   l20087 73C8  
                                                   l20423 7FD8  
                                                   l20175 738A  
                                                   l20159 7354  
                                                   l20335 4D3C  
                                                   l20343 4D5A  
                                                   l20255 4BD6  
                                                   l22023 1C8A  
                                                   l12271 6A8C  
                                                   l12263 6A68  
                                                   l12255 6A50  
                                                   l12239 6A0A  
                                                   l21047 360A  
                                                   l20511 1FBA  
                                                   l20185 8AA6  
                                                   l20417 7FC4  
                                                   l21401 45E0  
                                                   l12281 6AB4  
                                                   l12265 6A72  
                                                   l20521 1FD6  
                                                   l20513 1FC2  
                                                   l22201 0FCC  
                                                   l12603 6B14  
                                                   l21171 5452  
                                                   l21163 5436  
                                                   l21155 541A  
                                                   l21147 53FE  
                                                   l21139 53E2  
                                                   l21227 5070  
                                                   l20419 7FD0  
                                                   l21331 72BE  
                                                   l21315 7276  
                                                   l20363 4D90  
                                                   l20291 4C8E  
                                                   l20267 4C02  
                                                   l22115 1E76  
                                                   l22035 1CE0  
                                                   l12259 6A5C  
                                                   l21075 71FC  
                                                   l20611 216A  
                                                   l20523 1FDE  
                                                   l20507 1FAA  
                                                   l21085 8308  
                                                   l21237 50E4  
                                                   l21245 50F8  
                                                   l21317 728C  
                                                   l20373 4DBA  
                                                   l20365 4D96  
                                                   l20357 4D6C  
                                                   l21421 4638  
                                                   l22117 1E80  
                                                   l22061 1D50  
                                                   l12285 6AC0  
                                                   l12277 6AA6  
                                                   l12293 6AD6  
                                                   l12461 7960  
                                                   l20525 1FE6  
                                                   l20509 1FB2  
                                                   l23021 283A  
                                                   l21095 8350  
                                                   l21183 547C  
                                                   l21175 5460  
                                                   l21167 5444  
                                                   l21159 5428  
                                                   l20199 7878  
                                                   l21271 516A  
                                                   l21255 513E  
                                                   l21239 50F4  
                                                   l20455 6D2C  
                                                   l21415 4620  
                                                   l23111 36B0  
                                                   l12455 7950  
                                                   l12527 8D6C  
                                                   l12519 8D54  
                                                   l20711 2326  
                                                   l20703 2304  
                                                   l20543 2006  
                                                   l20535 1FFA  
                                                   l20527 1FEE  
                                                   l22311 12D8  
                                                   l23031 285C  
                                                   l12609 6BAC  
                                                   l20385 7F36  
                                                   l21337 72C8  
                                                   l20473 63EC  
                                                   l20465 63A0  
                                                   l20449 6CF2  
                                                   l21433 465C  
                                                   l22137 1ED8  
                                                   l12289 6ACC  
                                                   l20713 232A  
                                                   l20561 207E  
                                                   l20609 211C  
                                                   l20553 2012  
                                                   l22401 147C  
                                                   l22233 1044  
                                                   l22225 101E  
                                                   l22217 0FFC  
                                                   l22209 0FE4  
                                                   l22241 10AC  
                                                   l23017 282A  
                                                   l21195 54AC  
                                                   l21187 548A  
                                                   l21179 546E  
                                                   l20459 6D66  
                                                   l21507 4722  
                                                   l21451 4696  
                                                   l22155 1F06  
                                                   l22091 1DEC  
                                                   l22083 1D9E  
                                                   l22075 1D80  
                                                   l23115 36D2  
                                                   l23107 36A2  
                                                   l12467 7976  
                                                   l12483 79A8  
                                                   l20731 2366  
                                                   l20715 232E  
                                                   l20651 2242  
                                                   l20619 21A4  
                                                   l22403 147E  
                                                   l22307 12B6  
                                                   l22243 10C2  
                                                   l14413 6978  
                                                   l21613 4F0A  
                                                   l21605 4EEC  
                                                   l21381 4570  
                                                   l21365 452C  
                                                   l22149 1EF0  
                                                   l22165 1F54  
                                                   l12469 797E  
                                                   l20725 235C  
                                                   l20709 2322  
                                                   l20653 2246  
                                                   l20581 20A2  
                                                   l20557 206E  
                                                   l22501 16BC  
                                                   l22413 14F2  
                                                   l22253 112A  
                                                   l22181 0F24  
                                                   l23037 2880  
                                                   l14431 69B2  
                                                   l14415 6980  
                                                   l12591 8DAA  
                                                   l12575 7720  
                                                   l16111 2B66  
                                                   l16103 2B46  
                                                   l16031 29E0  
                                                   l21199 54BA  
                                                   l20479 6430  
                                                   l21623 4F30  
                                                   l21527 4DEA  
                                                   l21471 46B0  
                                                   l21367 4542  
                                                   l23231 3970  
                                                   l23207 3906  
                                                   l23143 3766  
                                                   l23127 370C  
                                                   l23119 36EA  
                                                   l12487 79B6  
                                                   l12479 799E  
                                                   l20751 2398  
                                                   l20719 2332  
                                                   l20663 2284  
                                                   l20559 2076  
                                                   l22271 11AC  
                                                   l22263 1190  
                                                   l22239 1068  
                                                   l23063 28EE  
                                                   l21801 4216  
                                                   l21449 4690  
                                                   l20497 81A8  
                                                   l23241 3988  
                                                   l23233 397C  
                                                   l20745 238E  
                                                   l20673 22A0  
                                                   l20665 228E  
                                                   l20657 224E  
                                                   l20649 2218  
                                                   l20569 208A  
                                                   l22433 1584  
                                                   l22409 14D0  
                                                   l22361 13CC  
                                                   l22337 1344  
                                                   l22329 1328  
                                                   l22345 1360  
                                                   l22273 11D6  
                                                   l22193 0F88  
                                                   l22185 0F44  
                                                   l23081 294E  
                                                   l23065 2902  
                                                   l14419 698C  
                                                   l12579 7762  
                                                   l22611 5F76  
                                                   l17011 3B48  
                                                   l16115 2B76  
                                                   l16107 2B56  
                                                   l16051 2A68  
                                                   l16043 2A2C  
                                                   l16035 29FE  
                                                   l16027 29AA  
                                                   l21635 4F5E  
                                                   l20499 81DA  
                                                   l23227 3966  
                                                   l23171 3806  
                                                   l23155 37A2  
                                                   l23139 3744  
                                                   l20739 2370  
                                                   l20691 22DC  
                                                   l20675 22A4  
                                                   l20659 226A  
                                                   l20595 20FA  
                                                   l22507 16CE  
                                                   l22275 11DC  
                                                   l23091 297A  
                                                   l23315 5DF6  
                                                   l14701 7CFE  
                                                   l16141 2CCC  
                                                   l16125 2BF2  
                                                   l16029 29C6  
                                                   l21741 416C  
                                                   l21709 40FC  
                                                   l21653 4F9A  
                                                   l21581 4EAE  
                                                   l21573 4E92  
                                                   l21485 46DC  
                                                   l23237 3982  
                                                   l23229 396C  
                                                   l23181 3846  
                                                   l20765 23BA  
                                                   l20693 22F8  
                                                   l20685 22D0  
                                                   l20669 2298  
                                                   l20589 20B2  
                                                   l22533 17EE  
                                                   l22509 16D6  
                                                   l22461 160A  
                                                   l22429 1562  
                                                   l22285 11FA  
                                                   l22269 11AA  
                                                   l22197 0FAA  
                                                   l22189 0F66  
                                                   l23085 2962  
                                                   l23325 5E14  
                                                   l23309 5DD2  
                                                   l14455 56AC  
                                                   l14447 879E  
                                                   l17015 3B5E  
                                                   l17023 3B88  
                                                   l16135 2C6E  
                                                   l16119 2B94  
                                                   l16071 2AB8  
                                                   l16063 2A98  
                                                   l16055 2A78  
                                                   l16047 2A4A  
                                                   l16039 2A0E  
                                                   l21751 418E  
                                                   l21559 4E64  
                                                   l21495 46F8  
                                                   l21487 46E0  
                                                   l21911 1A54  
                                                   l23247 3996  
                                                   l23167 37E4  
                                                   l23183 3886  
                                                   l20943 3346  
                                                   l20775 23E2  
                                                   l20759 239C  
                                                   l20687 22D4  
                                                   l20679 22AC  
                                                   l20599 210C  
                                                   l22535 17F4  
                                                   l22519 1710  
                                                   l22375 1412  
                                                   l23087 296E  
                                                   l14465 56E2  
                                                   l22609 5F60  
                                                   l17041 3BD4  
                                                   l17009 3B38  
                                                   l16145 2CE0  
                                                   l16129 2C10  
                                                   l22721 5AC0  
                                                   l21825 4262  
                                                   l21809 4230  
                                                   l21729 4148  
                                                   l21649 4F8E  
                                                   l21569 4E88  
                                                   l21489 46E6  
                                                   l21841 18BE  
                                                   l21833 188E  
                                                   l23185 389C  
                                                   l20961 33C4  
                                                   l20953 3368  
                                                   l20785 2404  
                                                   l20697 22FC  
                                                   l22537 17FA  
                                                   l22529 17DE  
                                                   l22473 164E  
                                                   l22449 15D0  
                                                   l22393 145E  
                                                   l22377 1416  
                                                   l22289 1226  
                                                   l22553 1840  
                                                   l22801 250C  
                                                   l14483 57D2  
                                                   l14475 5786  
                                                   l14459 56C2  
                                                   l14731 7616  
                                                   l17051 3C0E  
                                                   l14707 7D1A  
                                                   l16155 2D52  
                                                   l16091 2B16  
                                                   l16083 2AF6  
                                                   l16075 2AC8  
                                                   l16067 2AA8  
                                                   l16059 2A88  
                                                   l16163 2DB0  
                                                   l22715 5A94  
                                                   l22707 5A66  
                                                   l21747 4186  
                                                   l21675 4016  
                                                   l21579 4EA6  
                                                   l21907 19FE  
                                                   l20963 33FC  
                                                   l20955 336A  
                                                   l20779 23F4  
                                                   l20787 2420  
                                                   l20699 2300  
                                                   l22491 1694  
                                                   l22379 1422  
                                                   l22811 2548  
                                                   l14717 89AC  
                                                   l14733 761E  
                                                   l14741 7656  
                                                   l17045 3BEC  
                                                   l16149 2CF4  
                                                   l16181 30EC  
                                                   l16173 2F66  
                                                   l21773 41D4  
                                                   l21757 41A2  
                                                   l21677 402C  
                                                   l21589 4EC4  
                                                   l21861 1938  
                                                   l21853 1914  
                                                   l21909 1A3E  
                                                   l20965 3402  
                                                   l20797 2448  
                                                   l22821 259C  
                                                   l22805 252E  
                                                   l22813 2574  
                                                   l23285 5D2E  
                                                   l14479 57B0  
                                                   l14399 6924  
                                                   l14751 7682  
                                                   l14735 7626  
                                                   l17063 3C40  
                                                   l17047 3BFA  
                                                   l16095 2B26  
                                                   l16087 2B06  
                                                   l16079 2AD8  
                                                   l16183 315E  
                                                   l16175 2FD8  
                                                   l22751 6E80  
                                                   l16503 9066  
                                                   l22743 5B4E  
                                                   l22719 5ABA  
                                                   l21791 41F8  
                                                   l21775 41DC  
                                                   l21759 41A8  
                                                   l21599 4ED6  
                                                   l21935 1AF0  
                                                   l21927 1AB2  
                                                   l13855 7A66  
                                                   l13839 8B04  
                                                   l20983 347E  
                                                   l20799 249A  
                                                   l22487 1688  
                                                   l22479 1666  
                                                   l22911 26C8  
                                                   l22815 258A  
                                                   l23295 5D44  
                                                   l22577 5EB6  
                                                   l14729 760E  
                                                   l17057 3C1E  
                                                   l16177 302C  
                                                   l22657 6302  
                                                   l22737 5B3A  
                                                   l16601 80B0  
                                                   l21769 41CC  
                                                   l21689 4084  
                                                   l21929 1AD0  
                                                   l21881 199A  
                                                   l21873 1978  
                                                   l21849 18F0  
                                                   l13857 7A72  
                                                   l22913 26D4  
                                                   l22905 26A8  
                                                   l22595 5F28  
                                                   l14739 762E  
                                                   l17083 3CAE  
                                                   l17067 3C54  
                                                   l16099 2B36  
                                                   l16179 309E  
                                                   l16195 31C0  
                                                   l22771 6EE8  
                                                   l22755 6E90  
                                                   l16611 6810  
                                                   l22739 5B42  
                                                   l21787 41EE  
                                                   l21963 1B5C  
                                                   l13867 7AA6  
                                                   l20995 34DE  
                                                   l20987 34B8  
                                                   l22915 26E2  
                                                   l22835 25D8  
                                                   l22827 25BC  
                                                   l19101 7828  
                                                   l13877 857C  
                                                   l22597 5F2C  
                                                   l17085 3CBC  
                                                   l22773 6F02  
                                                   l22765 6EC6  
                                                   l22685 59EC  
                                                   l21789 41F2  
                                                   l21869 195E  
                                                   l20997 34F2  
                                                   l22925 2708  
                                                   l22845 25E6  
                                                   l13879 8584  
                                                   l17095 3CEC  
                                                   l17079 3C96  
                                                   l22759 6EB0  
                                                   l16623 6840  
                                                   l21991 1BE4  
                                                   l21967 1B6A  
                                                   l13889 85A4  
                                                   l17089 3CD2  
                                                   l22769 6ED6  
                                                   l16625 684A  
                                                   l16609 6806  
                                                   l21969 1B74  
                                                   l21897 19DA  
                                                   l21889 19B2  
                                                   l22961 278A  
                                                   l22953 2770  
                                                   l22881 2642  
                                                   l22865 261A  
                                                   l22857 25FC  
                                                   l22793 24CA  
                                                   l19123 7C6C  
                                                   l16715 654C  
                                                   l22779 6F1C  
                                                   l13995 8776  
                                                   l22947 2752  
                                                   l22891 266E  
                                                   l22875 262A  
                                                   l22787 24A2  
                                                   l19133 7C78  
                                                   l19221 913E  
                                                   l16725 6578  
                                                   l16581 8074  
                                                   l22797 24EC  
                                                   l19127 7C72  
                                                   l19215 852A  
                                                   l16911 489C  
                                                   l16831 8156  
                                                   l16671 68EE  
                                                   l16591 8096  
                                                   l16583 8078  
                                                   l22975 27AE  
                                                   l22887 265C  
                                                   l19153 81F6  
                                                   l19225 9146  
                                                   l19305 7A40  
                                                   l16913 48AA  
                                                   l19083 77B2  
                                                   l19251 8BDA  
                                                   l19331 8822  
                                                   l16739 65AC  
                                                   l16915 48C0  
                                                   l16835 816A  
                                                   l16827 8144  
                                                   l22995 27E2  
                                                   l22987 27C4  
                                                   l19325 8F0A  
                                                   l19149 81F0  
                                                   l19165 8204  
                                                   l19093 77BE  
                                                   l16685 64DE  
                                                   l16941 497A  
                                                   l16909 4898  
                                                   l16853 476E  
                                                   l19413 7DBC  
                                                   l19501 6C5E  
                                                   l19159 81FE  
                                                   l19087 77B8  
                                                   l19079 77AC  
                                                   l19407 7E7A  
                                                   l19423 7E06  
                                                   l16759 85DA  
                                                   l16599 80AC  
                                                   l19193 86B4  
                                                   l19257 8BE6  
                                                   l19353 6F98  
                                                   l19345 6F5C  
                                                   l16953 3A0C  
                                                   l16937 4968  
                                                   l19601 7B14  
                                                   l19339 8842  
                                                   l19355 6FA4  
                                                   l16699 6512  
                                                   l16947 39EC  
                                                   l16939 496C  
                                                   l16867 479A  
                                                   l16859 477E  
                                                   l19451 6DEE  
                                                   l19443 6DD4  
                                                   l19531 82EA  
                                                   l19611 75E4  
                                    write_package@package 0011  
                                   _eusart1RxStatusBuffer 0274  
                                                   l19189 86AE  
                                                   l19365 6FD2  
                                                   l16981 3AA4  
                                                   l16965 3A56  
                                                   l16885 47EC  
                                                   l16869 47A0  
                                                   l19461 6DFE  
                                                   l19509 6CA2  
                                                   l19199 86BA  
                                                   l19375 7004  
                                                   l19711 6222  
                                                   l19391 848A  
                                                   l16993 3AF0  
                                                   l16977 3A90  
                                                   l19561 55CA  
                                                   l19553 5566  
                                                   l19545 551C  
                                                   l19473 6E1E  
                                                   l19465 6E0A  
                                                   l19537 87FA  
                                                   l19609 75B2  
                                                   l19641 869E  
                                                   l16987 3ACC  
                                                   l16995 3AFE  
                                                   l19547 5522  
                                                   l19563 55CE  
                                                   l19387 8476  
                                                   l19619 75F4  
                                                   l19643 86A2  
                                                   l19811 3D24  
                                                   l16989 3ADA  
                                                   l19581 5684  
                                                   l19573 5620  
                                                   l19717 6238  
                                                   l19901 8A08  
                                                   l19741 65EA  
                                                   l19813 3D2A  
                                                   l19399 7E3E  
                                                   l19911 5BD8  
                                                   l19567 55DC  
                                                   l19583 5688  
                                                   l19639 8684  
                                                   l19831 3D7C  
                                                   l19807 3D1A  
                                                   l19497 6C32  
                                                   l19593 7ED0  
                                                   l19841 3DF6  
                                                   l19825 3D6C  
                                                   l18891 801E  
                                                   l19915 5C14  
                                                   l19691 613A  
                                                   l19755 667C  
                                                   l19851 3E9C  
                                                   l19843 3E1A  
                                                   l19819 3D3A  
                                                   l19933 5CDA  
                                                   l19749 6628  
                                                   l19853 3EB8  
                                                   l19845 3E36  
                                                   l19837 3DAE  
                                                   l19919 5C4C  
                                                   l19855 3ED0  
                                                   l19847 3E52  
                                                   l19839 3DDA  
                                                   l19863 3F16  
                                                   l19697 618C  
                                                   l19873 3FC4  
                                                   l19857 3EEA  
                                                   l19849 3E80  
                                                   l19865 3F7A  
                                                   l19955 51CE  
                                                   l19859 3F04  
                                                   l19885 89E4  
                                                   l19973 520C  
                                                   l19949 51CA  
                                                   l19869 3F88  
                                                   l19967 5208  
                                                   l19897 8A00  
                                                   l19889 89EA  
                                                   l19979 5230  
                                                   l19989 5234  
                                                   _ADACQ 000F5C  
                                       __end_of_I2C1_Open 7A44  
                                                   _ADCAP 000F5D  
                                                   _ADACT 000F56  
                                   __end_of_saveNewSerial 7F04  
                                                   ?_main 0001  
                                                   _ADCLK 000F57  
                                                   _ADCNT 000F67  
                                                   _ADPCH 000F5F  
                                                   _ADREF 000F58  
                                         __end_of___awdiv 79C0  
                          ?_keeloq_classic_decrypt_packet 0038  
                                         __end_of___lbdiv 8A0C  
                                                   _ADPRE 000F5E  
                                                   _ADRPT 000F66  
                                         __end_of___lbmod 8D74  
                                            _zeroCrossing 0192  
                                         __end_of___lldiv 7AC6  
                                                   u20000 4850  
                                                   u20100 48F2  
                                                   _T1CLK 000FD2  
                                                   u20120 48FC  
                                                   u20210 3A1E  
                                                   u20300 3ABC  
                                                   u20220 3A2C  
                                                   u20140 4920  
                                                   u20060 48DC  
                                         ___awdiv@divisor 0016  
                                                   u20230 3A3C  
                                                   u20080 48E8  
                                                   _T1CON 000FCF  
                                                   u12090 7982  
                                                   u22100 6FC0  
                                                   u20510 3C0A  
                                                   u20430 3B9E  
                                                   u22120 6FDE  
                                                   u20600 3C7C  
                                                   u20280 3AA0  
                                                   _T2CON 000FBD  
                                                   u22130 6FF2  
                                                   u20610 3C84  
                                                   u20370 3B28  
                                                   u22140 7000  
                                                   u20460 3BB6  
                                                   u22070 6F76  
                                                   u20560 3C50  
                                                   u24000 343C  
                                                   u22090 6FB2  
                                                   u20650 3CE0  
                                                   u22325 6C3E  
                                                   u13710 8588  
                                                   u15310 7D14  
                                                   u22600 621A  
                                                   u22360 8290  
                                                   u25000 46C4  
                                                   u13640 8AEC  
                                                   u24120 3558  
                                                   u22345 6CAE  
                                                   u15330 89A6  
                                                   u22610 65E6  
                                                   u23410 4C48  
                                                   u23315 83FE  
                                                   u15340 89BC  
                                                   u23420 4C58  
                                                   u24220 719A  
                                                   _T2HLT 000FBE  
                                                   u15270 7CDE  
                                                   u22390 82E2  
                                                   u22710 8700  
                                                   u23430 4C60  
                                                   u24150 35F2  
                                                   u23280 78A8  
                                                   u23520 4CF6  
                                                   u23360 4BF4  
                                                   u13680 7A76  
                                                   u14810 56FE  
                                                   u23610 4D7C  
                                                   u23530 4D06  
                                                   u24090 351E  
                                                   u14820 5710  
                                                   u15380 7666  
                                                   u24500 54A4  
                                                   u22820 89EE  
                                                   u23540 4D0E  
                                                   u26100 1A8E  
                                                   u18101 2BE4  
                                                   u21870 917E  
                                                   u23710 7F9E  
                                                   u25310 4EA2  
                                                   u22670 668A  
                                                   u23630 4DA4  
                                                   u23470 4CBC  
                                                   u23390 4C38  
                                                   u18111 2C32  
                                                   u23471 4CBA  
                                                   u21928 7C84  
                                                   u22920 51A6  
                                                   u25240 4E5E  
                                                   u21929 7C96  
                                                   u18121 2C60  
                                                   u21938 8210  
                                                   u14770 56A2  
                                                   u14690 6918  
                                                   u24290 5386  
                                                   u24610 5108  
                                                   u25090 473A  
                                                   u26210 1B88  
                                                   u21939 8222  
                                                   u18131 2C90  
                                                   u21948 86C6  
                                                   u14780 56BA  
                                                   u26220 1B90  
                                                   u26140 1B0C  
                                                   u23900 32F6  
                                                   u21949 86D8  
                                                   u18141 2CBE  
                                                   u22950 5204  
                                                   u23670 7F24  
                                                   u25430 4F3E  
                                                   u26310 1CA8  
                                                   u26230 1BAA  
                                                   u26150 1B14  
                                                   u18151 2D16  
                                                   u26311 1CA6  
                                                   u26231 1BA8  
                                                   u24720 729A  
                                                   u25280 4E82  
                                                   u26320 1CB6  
                                                   u26160 1B2E  
                                                   u27200 1630  
                                                   u27040 1430  
                                                   u18161 2D44  
                                                   u18081 29D2  
                                                   u26161 1B2C  
                                                   u21898 77CA  
                                                   u23690 7F46  
                                                   u25610 4110  
                                                   u25530 4FB8  
                                                   u24810 4558  
                                                   u26250 1C02  
                                                   u27210 1644  
                                                   u27130 1536  
                                                   u27050 1436  
                                                   u21899 77DC  
                                                   u18171 2D74  
                                                   u18091 2BB6  
                                                   u25531 4FB6  
                                                   u26251 1C00  
                                                   u21988 854E  
                                                   u19060 808E  
                                                   u24900 460C  
                                                   u26420 1D62  
                                                   u26260 1C10  
                                                   u21989 8560  
                                                   u18181 2DA2  
                                                   u27125 1520  
                                                   u18190 9138  
                                                   u25630 4124  
                                                   u25470 4F6E  
                                                   u26190 1B64  
                                                   u23950 3382  
                                                   u27230 165E  
                                                   u28030 267E  
                                                   u27215 1640  
                                                   u27135 1532  
                                                   u25720 41C0  
                                                   u26600 1F04  
                                                   u26520 1E06  
                                                   u26440 1D6E  
                                                   u26280 1C4A  
                                                   u23880 23EE  
                                                   u27160 15E0  
                                                   u27410 5F44  
                                                   u24930 4646  
                                                   u26610 1F20  
                                                   u26530 1E0C  
                                                   u26370 1D04  
                                                   u26290 1C64  
                                                   u23890 32F0  
                                                   u27170 15E6  
                                                   u27090 14A4  
                                                   u28050 26B6  
                                         __end_of___lwdiv 85B8  
                                                   u26611 1F1E  
                                                   u26291 1C62  
                                                   u19500 6586  
                                                   u19340 64FA  
                                                   u25660 4156  
                                                   u25580 404A  
                                                   u24860 4596  
                                                   u26620 1F2E  
                                                   u26460 1D9C  
                                                   u26380 1D0A  
                                                   u27180 161A  
                                                   u28140 2730  
                                                   u27181 1618  
                                                   u27085 148E  
                                                   u27510 836E  
                                                   u19430 653E  
                                                   u19270 64C6  
                                                   u26470 1DB8  
                                                   u26390 1D2E  
                                                   u25910 18E4  
                                                   u26471 1DB6  
                                                   u26391 1D2C  
                                                   u27095 14A0  
                                                   u27520 83A0  
                                                   u27440 5F98  
                                                   u27360 5EF2  
                                                   u19360 6506  
                                                   u25760 4206  
                                                   u25680 4162  
                                                   u24960 466A  
                                                   u24880 45F8  
                                                   u26480 1DC6  
                                                   u28400 28AE  
                                                   u28320 2848  
                                                   u28160 2740  
                                                   u19601 85D0  
                                                   u27450 5FA6  
                                                   u19290 64D2  
                                                   u25690 417A  
                                                   u26570 1EEA  
                                                   u27290 16E6  
                                                   u28090 2702  
                                                   u27291 16E4  
                                                   u27380 5F0A  
                                                   u27620 5A86  
                                                   u26900 128A  
                                                   u27470 5FC0  
                                                   u19470 656E  
                                                   u27710 5B1E  
                                                   u27630 5A94  
                                                   u25790 4226  
                                                   u26910 12E6  
                                                   u28510 2932  
                                                   u28270 2802  
                                                   u28271 2800  
                                                   u19560 65BC  
                                                   u25880 18B2  
                                                   u26920 12EC  
                                                   u26760 105A  
                                                   u28440 28CC  
                                                   u27801 6EF4  
                                                   u26905 1286  
                                                   u19570 65C4  
                                                   u27650 5ABA  
                                                   u28610 3738  
                                                   u18595 8F64  
                                                   u19580 65CC  
                                                   u18596 8F66  
                                                   u27660 5ACE  
                                                   u26940 1336  
                                                   u27820 24BE  
                                                   _T2TMR 000FBB  
                                                   u19590 85C2  
                                                   u28630 375A  
                                                   u26950 133C  
                                                   u19920 480E  
                                                   u19680 8132  
                                                   u28560 36C6  
                                                   u26960 1352  
                                                   u28480 291A  
                                                   u26961 1350  
                                                   u19850 47C8  
                                                   u27850 2522  
                                                   _T2RST 000FC0  
                                                   u27771 6EA2  
                                                   u19940 481A  
                                                   u19860 47D6  
                                                   u28740 38B8  
                                                   u28580 3700  
                                                   u28821 5DE6  
                                                   u19870 47E6  
                                                   u19871 47E4  
                                                   u26895 1274  
                                                   u19960 4824  
                                                   i2l106 8AD6  
                                                   u19890 47FA  
                                                   u19980 482E  
                                                   u28780 38F6  
                                                   u28867 7E16  
                                                   u28877 7E8A  
                                                   i2l870 004C  
                                                   i2l872 006A  
                                                   i2l873 0080  
                                                   i2l874 0076  
                                                   i2l867 0030  
                                         ___awdiv@counter 0018  
                                              _CloseOrder 8DC6  
                              __end_of_i2c1_fsmStateTable 0F21  
                                                   _OSCEN 000EDC  
                                                   _TMR0H 000FD4  
                                                   _TMR1H 000FCE  
                                                   _TMR0L 000FD3  
                                                   _TMR1L 000FCD  
                                                   _RFBit 0089  
                                                   _PORTB 000F8E  
                               __end_of_SaveNVM_VarSystem 8A44  
                          DecryptPacket_12BIT@commandType 00E4  
                                                   _TRISA 000F88  
                                                   _TRISB 000F89  
                                                   _TRISC 000F8A  
                                                   _TRISD 000F8B  
                                                   _TRISE 000F8C  
                                  ??_I2C1_MasterGetRxData 0010  
                                   ?_I2C1_DO_RX_NACK_STOP 0001  
                             validateRemoteSerialNumber@i 003A  
                             validateRemoteSerialNumber@j 0039  
                                     ___lmul@multiplicand 0021  
                               ?_TMR0_SetInterruptHandler 0010  
                                           _InitSoftStart 82A6  
                              ??_I2C1_CallbackReturnReset 001B  
                                       ??_I2C1_MasterOpen 0010  
                                        _idxAdcAquisition 0091  
                                    _EUSART1_Transmit_ISR 8AAA  
                                       ??_I2C1_MasterStop 0010  
                                       ??_I2C1_Initialize 0010  
                               GetMotorPower@defineatraso 0013  
                                        __end_of_TMR0_ISR 8E5E  
                                        __end_of_TMR1_ISR 8996  
                                        __end_of_TMR2_ISR 612C  
                                    _idxSaveEnergyADCHist 0090  
                                                   _rfCMD 003B  
                                                   _aux_i 018C  
                          actionZone_Closed@typeOpenOrder 0021  
                                        _setFlashLigth_ON 8996  
                                          ?_EUSART1_Write 0001  
                                          readbutton@key1 0086  
                                   SetSegmentValueMain@d1 001D  
                                          readbutton@key2 0196  
                                   SetSegmentValueMain@d2 001C  
                                 __end_of_TMR1_Initialize 8896  
                                    setFlashLigth_ON@Freq 0010  
                                                   pclath 000FFA  
       rd1RegCompleteHandler@i2c1_master_example$F500@ptr 0019  
                                                   pclatu 000FFB  
                                         __end_of_sumHIST 6BEE  
                                         __end_of_sm_init 8466  
                                                   tablat 000FF5  
       rd2RegCompleteHandler@i2c1_master_example$F511@ptr 0019  
       wr2RegCompleteHandler@i2c1_master_example$F523@ptr 0019  
       wr1RegCompleteHandler@i2c1_master_example$F517@ptr 0019  
     rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr 0019  
                                          ??_EUSART1_Read 0010  
                                                   plusw0 000FEB  
                                                   plusw2 000FDB  
                                 __end_of_sm_execute_main 29A8  
                                                   ttemp5 0051  
                                                   ttemp6 0054  
                                                   ttemp7 0058  
                                                   status 000FD8  
                                         ??_ControlLights 0016  
                                                   wtemp8 0051  
                                            ??_I2C1_DO_RX 001B  
                                            ??_I2C1_DO_TX 001B  
                                         ??_ControlInputs 0010  
                                         ___lbdiv@divisor 0010  
              __end_of_EUSART1_DefaultFramingErrorHandler 92C4  
                    ??_EUSART1_DefaultFramingErrorHandler 0001  
                     ?_EUSART1_DefaultFramingErrorHandler 0001  
                      _EUSART1_DefaultFramingErrorHandler 92C2  
                                         _TMR1_WriteTimer 8F84  
                                  ??_I2C1_DO_ADDRESS_NACK 001B  
                                         ___lbdiv@counter 0012  
                            __end_of_getStateOpenPosition 66E4  
                                            ??_I2C1_Close 0010  
                                          ??_InitReceiver 0010  
                        VerifyElectricalBrake@actualState 0011  
                      i2VerifyElectricalBrake@actualState 0002  
                                         __initialization 70D4  
                                 cmdMemoryIsEmpty@cmdType 0031  
                             ?_SetSegmentValueIntermitent 0010  
                              __end_of_EUSART1_Initialize 7BC4  
                                            __end_of_main 5E6A  
                         sm_execute_menuConfiguration@psm 00E9  
                             __end_of_DecryptPacket_12BIT 7714  
                                          _refreshCurrent 8786  
                                          ??_InitSoftStop 0014  
                      validateRemoteSerialNumber@position 0033  
                                 __end_of_TMR2_Initialize 8BBE  
                             ?_INTERRUPT_InterruptManager 0001  
                                          _refreshSegment 78B6  
                                  ??_I2C1_MasterOperation 0020  
                                _TMR2_SetInterruptHandler 9198  
                                                  ??_main 003B  
                                       ??_WWDT_Initialize 0010  
                                           __activetblptr 000003  
                                       Segments_Set@value 0001  
                                   saveNewSerial@position 00DC  
                      __end_of_validateRemoteSerialNumber 5694  
                              _validateRemoteSerialNumber 54F8  
                                          ?_InitSoftStart 0001  
                                   ?_EUSART1_Transmit_ISR 0001  
                                           sumEnergyADC@i 0018  
                                      __end_of_I2C1_DO_RX 7CBA  
                                      __end_of_I2C1_DO_TX 782C  
                                       ?_InitWalkAutoTime 0001  
                                       ??_controlVelocity 00DA  
                                               ??_RGB_Set 0010  
                              ?_ControlDecelarationFactor 0001  
                                    __end_of_getSerialCmd 86A6  
                  __end_of_SetSegmentValueIntermitentMain 9106  
                          _SetSegmentValueIntermitentMain 90F2  
                                      __end_of_I2C1_Close 8F0E  
                                                  _ADACCH 000F71  
                                                  _ADACCL 000F70  
                                 ?_I2C1_Read1ByteRegister 0022  
                                      ??_InitWalkAutoTime 0010  
                                                  _ADCON0 000F60  
                                                  _ADCON1 000F59  
                                                  _ADCON2 000F5A  
                                                  _ADCON3 000F5B  
                                                  _ADERRH 000F6F  
                                                  _ADERRL 000F6E  
                                                  _ADLTHH 000F6B  
                                                  _ADLTHL 000F6A  
                                                  _ADRESH 000F64  
                                                  _ADRESL 000F63  
                                                  _ADSTAT 000F65  
                                                  _ADUTHH 000F6D  
                                        ___awdiv@dividend 0014  
                                                  _ADUTHL 000F6C  
                                                  _ANSELA 000F11  
                                                  _ANSELB 000F19  
                                                  _ANSELC 000F21  
                                                  _ANSELD 000F26  
                                                  _ANSELE 000F2E  
                                                  _T0CON0 000FD5  
                                                  _T0CON1 000FD6  
                                                  _T1GATE 000FD1  
                                                  _T1GCON 000FD0  
                                     readRFButtons@serial 0181  
                                                  _IOCBN3 00789B  
                                                  _IOCBP3 0078A3  
                                                  _RC1REG 000F99  
                                           _readRFButtons 59C8  
                                                  _RC1STA 000F9D  
                                                  _RC3PPS 000EFA  
                                 TMR1_WriteTimer@timerVal 0001  
                                                  _RC4PPS 000EFB  
                                                  _ODCONA 000F0F  
                                                  _ODCONB 000F17  
                                                  _ODCONC 000F1F  
                                                  _ODCOND 000F24  
                                                  _ODCONE 000F2C  
                                                  _RC7PPS 000EFE  
                                   __end_of_GetMotorPower 700E  
                                                  i2l1147 8F96  
                                                  i2l2019 594E  
                                                  i2l2123 78E6  
                                                  i2l2135 793A  
                                                  i2l2128 7904  
                                                  i2l2217 4B7E  
                                                  i2l1266 6036  
                                                  i2l2235 70A8  
                                                  i2l2323 7DA6  
                                                  i2l1277 60C0  
                                                  i2l2318 7D9C  
                                                  i2l2190 4AA0  
                                                  i2l1615 444C  
                                                  i2l2186 49BA  
                                                  _INLVLA 000F0D  
                                                  _INLVLB 000F15  
                                                  _INLVLC 000F1D  
                                                  _INLVLD 000F22  
                                                  _INLVLE 000F2A  
                                               ??_Decrypt 001D  
                                  calculateMean@meanValue 0010  
                                                  _OSCFRQ 000EDE  
                         __end_ofi2_VerifyElectricalBrake 7DAA  
                                                  _TMR0IE 007615  
                                                  _TMR0IF 007655  
                                                  _RX1PPS 000EB5  
                            __end_of_refreshADCZeroOffset 69F8  
                                                  _TX1REG 000F9A  
                                                  _TX1STA 000F9E  
                                __end_of_cmdMemoryIsEmpty 75F8  
                                       ?_I2C1_MasterClose 0001  
                                                  _DecCHK 8A78  
                                 __end_ofi2_GetMotorPower 70D4  
                                                  _RFFull 008B  
                                rdBlkRegCompleteHandler@p 0019  
                                               ??_ReadADC 0002  
                                 ??_I2C1_MasterDisableIrq 0010  
                                       ?_I2C1_MasterStart 0001  
                    __end_of_sm_execute_menuConfiguration 1886  
                            _sm_execute_menuConfiguration 0F22  
                                       ?_I2C1_MasterWrite 0001  
                                                  _HopCHK 782C  
                                ?_I2C1_MasterWaitForEvent 0001  
                                      ??_I2C1_MasterClose 0010  
                                        _I2C1_DO_TX_EMPTY 81EC  
                                 controlSelectRemote@temp 00E8  
                                  _SumEnergyADCHist_array 0260  
                                      ??_I2C1_MasterStart 0010  
                                      ??_I2C1_MasterWrite 0022  
                                       _decrementTimeslot 8D74  
                    __end_of_TMR1_DefaultInterruptHandler 92C0  
                            _TMR1_DefaultInterruptHandler 92BE  
                                  __end_of_refreshCurrent 87CC  
                                           ?_read_package 0011  
                                                  ___lmul 8466  
                                         ??_LoadManufCode 0010  
                                                  ___wmul 8E12  
                                  __end_of_refreshSegment 793C  
                                               ??___awdiv 0018  
                                               ??___lbdiv 0011  
                                               ??___lbmod 0011  
                                               ??___lldiv 0018  
                                      ?_decrementTimeslot 0001  
                                               ??___lwdiv 0014  
                                       ??_i2c_writeNBytes 0027  
                                           _load_New_Menu 3CFA  
                             __end_of_keeloqDecryptPacket 5190  
                                ?_EUSART1_SetErrorHandler 0010  
                                                  _memcpy 8810  
                                        ?_TMR0_Initialize 0001  
                                                  clear_0 714A  
                                                  clear_1 7156  
                                                  clear_2 7162  
                                                  clear_3 716E  
                                                  clear_4 717A  
                                        ___awdiv@quotient 001A  
                                       ??_WWDT_TimerClear 0010  
                      __end_of_sm_execute_ControlLearning 1F94  
                              _sm_execute_ControlLearning 1886  
                                                  isa$std 000001  
                        ??_EUSART1_SetOverrunErrorHandler 0012  
                         ?_EUSART1_SetOverrunErrorHandler 0010  
                                       ??_WWDT_SoftEnable 0010  
                                ??_I2C1_DO_SEND_ADR_WRITE 0011  
                          SetSegmentValueIntermitent@time 0011  
                                  setValueToEdit@menuType 00DE  
                                       ?_I2C1_SetCallback 0010  
                                  ??_I2C1_DO_RX_NACK_STOP 0010  
                                           ??_ShowVersion 001E  
                                         _ADCC_Initialize 8608  
                                     ??_decrementTimeslot 0003  
                                             ?_CloseOrder 0001  
                                   _I2C1_DO_SEND_ADR_READ 9168  
                                          _PMD_Initialize 8F68  
                                              _StateTRIAC 0190  
                                           ?_eusartparser 003A  
                           ?_I2C1_SetDataCompleteCallback 0015  
                                      ??_I2C1_SetCallback 0014  
                                            __mediumconst 0000  
                          __end_of_I2C1_Read1ByteRegister 835E  
                                    __end_of_ControlMotor 4990  
                                                  tblptrh 000FF7  
                                                  tblptrl 000FF6  
                                           Decrypt@Buffer 0022  
                                                  tblptru 000FF8  
                                               ??_sumHIST 0014  
                                               ??_sm_init 0017  
                                   SaveNVM_VarSystem@page 00D8  
                              __end_of_actionZone_Closing 427C  
                               ?_ADCC_GetSingleConversion 0001  
                                         ??_EUSART1_Write 0010  
                       __end_of_ControlDecelarationFactor 903A  
                TMR2_SetInterruptHandler@InterruptHandler 0010  
                TMR1_SetInterruptHandler@InterruptHandler 0010  
                TMR0_SetInterruptHandler@InterruptHandler 0010  
                                        ??_ControlCurrent 0023  
                                  setValueToEdit@posindex 00DF  
                                 __end_of_TMR1_WriteTimer 8FA0  
                                         _eusart1RxBuffer 027C  
                                          ?_readRFButtons 0001  
                                        ___lbdiv@dividend 0011  
                                 _I2C1_DO_RX_NACK_RESTART 9216  
                                         _eusart1TxBuffer 0284  
                                     _SetSegmentValueMain 8FBA  
                                        ?_TMR1_Initialize 0001  
                                       _SYSTEM_Initialize 8B0C  
                              __end_of_actionZone_Opening 4746  
                          I2C1_SetDataCompleteCallback@cb 0015  
                                         ___lbmod@divisor 0010  
                                              __accesstop 0060  
                                 __end_of__initialization 7180  
                                         ___lbmod@counter 0012  
                                           Decrypt@packet 001B  
                           setValueToEdit@haveValueToEdit 00E0  
                                        ?_sm_execute_main 00ED  
                                          _setValueToEdit 1F94  
                                      getSerialCmd@serial 001B  
                         I2C1_MasterOperation@returnValue 0021  
                                      ?_SYSTEM_Initialize 0001  
                                           ___rparam_used 000001  
                               __end_of_decrementTimeslot 8D9E  
                                           ??_I2C1_Poller 0020  
                                           ?_Segments_Set 0001  
                                          ??_read_package 0018  
                         ??_setPositionInvertionInClosing 00D8  
                           ?_sm_execute_menuConfiguration 00E9  
                           __end_of_EUSART1_RxDataHandler 8F30  
                                 _rdBlkRegCompleteHandler 8916  
                                          __pcstackCOMRAM 0001  
                                         ?_refreshCurrent 0001  
                                   __end_of_getKeyPressed 906A  
                                            __pidataBANK0 92B8  
                                            __pidataBANK1 9286  
                                            __pidataBANK2 92BA  
                                            __pidataBANK3 8E5E  
                                     ??_SYSTEM_Initialize 0014  
                        __end_of_I2C1_MasterEnableRestart 92AC  
                                          ?_load_New_Menu 0001  
                               sm_execute_ControlGate@psm 00E7  
                                               ?_TMR0_ISR 0001  
                                         ?_refreshSegment 0001  
                                               ?_TMR1_ISR 0001  
                                               ?_TMR2_ISR 0001  
                           ?_TMR1_DefaultInterruptHandler 0001  
                         ??_setPositionInvertionInOpening 0032  
                                    ?_SetSegmentValueMain 001C  
                                        ?_TMR2_Initialize 0001  
                                        ___lbdiv@quotient 0013  
                                  __end_of_PMD_Initialize 8F84  
                            ??_I2C1_DO_SEND_RESTART_WRITE 0010  
                                 ??_I2C1_MasterSendTxData 0010  
                                         ??_InitSoftStart 0014  
                                    __end_of_EUSART1_Read 8786  
                                          ??_eusartparser 00DC  
                                  ??_EUSART1_Transmit_ISR 0001  
                                    _getStateOpenPosition 65D4  
                               write_eusartparser@package 0010  
                                           ?_RemoveSerial 003A  
                                    __end_of_InitReceiver 8FBA  
                         actionZone_Closing@typeOpenOrder 0033  
                             __end_of_EUSART1_Receive_ISR 74CE  
                                   __end_of_I2C1_DO_RESET 91F2  
                          keeloqDecryptPacket@commandType 00E9  
                                        sumEnergyADC@sumE 0014  
                        verifyProgramingMode@classic_data 0010  
                                       __end_of_ReqResync 9052  
                             VerifyFollowMe@securityClose 0010  
                               __end_of_SYSTEM_Initialize 8B3A  
                                     __end_of_ShowVersion 818A  
                                           _eusart1RxHead 0095  
                                           _eusart1TxHead 0097  
                                           _eusart1RxTail 0094  
                                              __pbssBANK0 0060  
                                              __pbssBANK1 0100  
                                              __pbssBANK2 0200  
                                              __pbssBANK3 0300  
                                  __end_of_setValueToEdit 24A0  
                                           _eusart1TxTail 0096  
                         __end_of_I2C1_MasterWaitForEvent 9216  
                       _EUSART1_TxDefaultInterruptHandler 02ED  
                                            _GetOpenOrder 5190  
                                    __end_of_InitSoftStop 873E  
                         ??_EUSART1_SetRxInterruptHandler 0012  
                          validateRemoteSerialNumber@mask 0035  
                                cmdMemoryIsEmpty@position 002E  
                           __end_of_rd2RegCompleteHandler 8CC6  
                                    I2C1_Open@returnValue 0011  
                                                 ?_DecCHK 0010  
                                           ?_WaitPreFlash 0001  
                                        ?i2_GetMotorPower 0001  
                            __end_of_SetSegmentValueLearn 6AF4  
                                       ?_controlTimeslots 0001  
                           __end_of_wr2RegCompleteHandler 8C9A  
                                           ?_NormalKeyGen 0026  
                                   __end_of_sm_send_event 82A6  
                                   _rd1RegCompleteHandler 8CC6  
                                                 ?_HopCHK 0024  
                                          ??_Segments_Set 0001  
              validateRemoteSerialNumber@VerifyOnlySerial 0032  
                                              _edit_Param 0046  
                                       _I2C1_DO_SEND_STOP 922E  
                                      ??_controlTimeslots 0005  
                                           _button_struct 004C  
                                   _wr1RegCompleteHandler 8CF2  
                         __end_of_EUSART1_SetErrorHandler 91E8  
                                       getHopCode@tempHop 0020  
                                       getHopCode@tempPos 0022  
                        __end_of_TMR0_SetInterruptHandler 91B6  
                                                 ?___lmul 001D  
                                      ?_I2C1_DO_SEND_STOP 0001  
                                                 ?___wmul 0010  
                                              ??_TMR0_ISR 0003  
                                              _getHopCode 612C  
                                              ??_TMR1_ISR 000A  
                                              ??_TMR2_ISR 0005  
                                 __end_of_ADCC_Initialize 8658  
                                         _I2C1_MasterOpen 9082  
                                   ??_SetSegmentValueMain 001D  
                                         _I2C1_MasterStop 92A4  
                                         _I2C1_Initialize 9106  
                                     __end_of_I2C1_Poller 914C  
                                __end_of_setFlashLigth_ON 89D2  
                                                 _ADFLTRH 000F73  
                                                 _ADFLTRL 000F72  
                                                 ?_memcpy 0010  
                                    readRFButtons@keyType 0087  
                                       __end_of_StopOrder 8F4C  
                                          ___lmul@product 0025  
                                                 _ADPREVH 000F62  
                                                 _ADPREVL 000F61  
                                write_eusartparser@debug2 0021  
                              __end_of_ResetDefaultMemory 5CE8  
                                                 _ADSTPTH 000F69  
                                                 _ADSTPTL 000F68  
                          _menuConfiguration_stateMachine 02BD  
                                         ?_PMD_Initialize 0001  
                       keeloq_classic_decrypt_packet@data 0038  
                                  ?_I2C1_DO_SEND_ADR_READ 0001  
                                           _erroranterior 0189  
                                     ??_I2C1_DO_SEND_STOP 0010  
                  __end_of_EUSART1_SetFramingErrorHandler 91DE  
                          _EUSART1_SetFramingErrorHandler 91D4  
                                    _refreshADCZeroOffset 68FA  
                                ??_sm_execute_ControlGate 00E9  
                                   i2c_readDataBlock@data 0024  
                                   _VerifyElectricalBrake 7CBA  
                                                 i2l14101 428E  
                                                 i2l14111 42BC  
                                                 i2l14201 448A  
                                                 i2l14121 42F0  
                                                 i2l14105 429E  
                                                 i2l14131 431C  
                                                 i2l14211 44BA  
                                                 i2l14109 42B4  
                                                 i2l12551 8F2C  
                                                 i2l14207 44A2  
                                                 i2l14151 439A  
                                                 i2l14153 43AA  
                                                 i2l14137 4342  
                                                 i2l14305 4B24  
                                                 i2l14155 43B0  
                                                 i2l14251 4A10  
                                                 i2l14243 49EC  
                                                 i2l14173 440C  
                                                 i2l14165 43E4  
                                                 i2l14149 438A  
                                                 i2l14317 4B62  
                                                 i2l14261 4A3A  
                                                 i2l14245 49F6  
                                                 i2l14229 49B0  
                                                 i2l14341 84CC  
                                                 i2l14191 4464  
                                                 i2l14185 4456  
                                                 i2l14329 4B9E  
                                                 i2l14273 4A74  
                                                 i2l14281 4AB2  
                                                 i2l14197 447A  
                                                 i2l14365 7908  
                                                 i2l16301 6058  
                                                 i2l16215 8AD0  
                                                 i2l14375 7936  
                                                 i2l16311 6082  
                                                 i2l13905 705E  
                                                 i2l16321 60A4  
                                                 i2l16235 74C8  
                                                 i2l13907 706A  
                                                 i2l13917 7098  
                                                 i2l13927 70CA  
                                                 i2l16343 60F4  
                                                 i2l16335 60D8  
                                                 i2l13953 7D92  
                                                 i2l13947 7D76  
                                                 i2l16285 600E  
                                                 i2l16349 610C  
                                                 i2l16277 5FFA  
                                                 i2l13897 7022  
                          actionZone_Opened@typeOpenOrder 0021  
                                   ?_getStateOpenPosition 0001  
                                          ??_RemoveSerial 00D8  
                                              _fimdecurso 0175  
                            ?_EUSART1_DefaultErrorHandler 0001  
                                       _I2C1_MasterIsNack 9176  
                                                 _SP1BRGH 000F9C  
                                                 _SP1BRGL 000F9B  
                                              _dispStruct 0072  
                                                 _OSCCON1 000ED8  
                                                 _OSCCON3 000EDA  
                                               _I2C1_Open 79C0  
                               ??_I2C1_DO_RX_NACK_RESTART 0010  
                                                 _RGB_Set 914C  
                                              _auxCounter 00F8  
                                         ??_readRFButtons 003B  
                                                 _OSCTUNE 000EDD  
                                       _I2C1_MasterSetIrq 9262  
                                                 _SSP1ADD 000F93  
                                                 _SLRCONA 000F0E  
                                                 _SLRCONB 000F16  
                                                 _SLRCONC 000F1E  
                                                 _SLRCOND 000F23  
                                                 _SLRCONE 000F2B  
                                                 _WDTCON0 000ED2  
                                                 _SSP1BUF 000F92  
                                                 _WDTCON1 000ED3  
                                      ?_I2C1_MasterIsNack 0001  
                              ?_I2C1_DO_SEND_RESTART_READ 0001  
                          ??_I2C1_SetDataCompleteCallback 0019  
                                        ?_TMR1_WriteTimer 0001  
                                      ?_I2C1_MasterSetIrq 0001  
                            __end_of_generateErrorLearnig 8124  
                                            _classic_data 0292  
                                          load_New_Menu@i 0023  
                                         ?_setValueToEdit 003A  
                                                 _RFcount 007E  
                         ??_keeloq_classic_decrypt_packet 00D8  
                                                 _Decrypt 6DB2  
                                          ??_WaitPreFlash 0018  
                                                 _RFstate 0198  
                                      _i2c1_fsmStateTable 0F01  
                                          ??_NormalKeyGen 0028  
                                     ??_I2C1_MasterIsNack 0010  
  __end_of_rd1RegCompleteHandler@i2c1_master_example$F500 8C6E  
          _rd1RegCompleteHandler@i2c1_master_example$F500 8C42  
  __end_of_rd2RegCompleteHandler@i2c1_master_example$F511 8C42  
          _rd2RegCompleteHandler@i2c1_master_example$F511 8C16  
  __end_of_wr2RegCompleteHandler@i2c1_master_example$F523 8D4A  
          _wr2RegCompleteHandler@i2c1_master_example$F523 8D1E  
  __end_of_wr1RegCompleteHandler@i2c1_master_example$F517 8C16  
                               __end_of_I2C1_DO_SEND_STOP 9236  
          _wr1RegCompleteHandler@i2c1_master_example$F517 8BEA  
__end_of_rdBlkRegCompleteHandler@i2c1_master_example$F535 8916  
        _rdBlkRegCompleteHandler@i2c1_master_example$F535 88D6  
                               ??_rdBlkRegCompleteHandler 001B  
                          getCurrentComparator@tempOffset 0020  
                                                 _ReadADC 84BC  
                                      I2C1_SetCallback@cb 0010  
                                           _write_package 8B66  
                                     ??_I2C1_MasterSetIrq 0010  
                                     _controlSelectRemote 32D4  
                              __end_of_clearLearningValue 7C40  
                                                 _NextHop 028E  
                                                 __Hparam 0000  
                              __end_of_write_eusartparser 32D4  
                                                 __Lparam 0000  
                                         _WWDT_Initialize 918E  
                                         ??_load_New_Menu 0020  
                              ??_TMR2_SetInterruptHandler 0012  
                                               _ADC_array 0200  
                                            _getSerialCmd 8658  
                                                 ___awdiv 793C  
                                                 ___lbdiv 89D2  
                                                 ___lbmod 8D4A  
                                                 ___lldiv 7A44  
                                              _readInputs 67F2  
                                         _controlVelocity 4BB2  
                                                 ___lwdiv 8566  
                                           _OpenFullOrder 8DEC  
                                            __psmallconst 0F00  
                                     RemoveSerial@cmdType 00DA  
                   __end_of_setPositionInvertionInClosing 64B0  
                           _setPositionInvertionInClosing 6388  
                          ??_sm_execute_menuConfiguration 00EB  
                                     _EUSART1_is_rx_ready 912C  
                                          getHopCode@data 0016  
                                                 _difTime 018F  
                                                 __pcinit 70D4  
                                           ?_I2C1_DO_IDLE 0001  
                                           ?_I2C1_DO_RCEN 0001  
                                                 __ramtop 0F00  
                                  i2c_writeNBytes@address 0039  
                                   __end_of_getTypeRemote 925C  
                                                 __ptext0 5CE8  
                                                 __ptext1 24A0  
                                                 __ptext2 0F22  
                                                 __ptext3 1F94  
                                                 __ptext4 3CFA  
                                                 __ptext5 8FA0  
                                                 __ptext6 32D4  
                                                 __ptext7 7E94  
                                                 __ptext8 9256  
                                                 __ptext9 8658  
                                   ?_refreshADCZeroOffset 0001  
                                              _memoryTEMP 02A2  
                                      i2c_readDataBlock@d 002A  
                                _I2C1_MasterEnableRestart 92A8  
                          ??_TMR1_DefaultInterruptHandler 0001  
                               __end_of_I2C1_MasterIsNack 9182  
                            ?_I2C1_SetAddressNackCallback 0015  
                                               _T1CONbits 000FCF  
                   __end_of_setPositionInvertionInOpening 6DB2  
                           _setPositionInvertionInOpening 6CD6  
                                                 _lastKey 0194  
                                              _readbutton 8050  
                                   _OSCILLATOR_Initialize 90B2  
                                   OpenWalkOrder@diffTime 001A  
                                             _ShowVersion 8124  
                                    ?_controlSelectRemote 0001  
                             ?_validateRemoteSerialNumber 002E  
                                        _InitFullAutoTime 8FD4  
                               __end_of_I2C1_MasterSetIrq 9268  
                             checkNVM_VarSystem@saveParam 003A  
                                                 _menu_st 0151  
                                __end_of_I2C1_DO_TX_EMPTY 824A  
                                  RemoveSerial@tempSerial 00DB  
                                       __end_of_setRGB_ON 7688  
                                      _EUSART1_Initialize 7B46  
                                ??_PIN_MANAGER_Initialize 0010  
                               ?_TMR1_SetInterruptHandler 0010  
                                              ?_I2C1_Open 0001  
                                                 _sumHIST 6AF4  
                                                 _sm_init 8410  
                                          _BufferRF_12BIT 0187  
                                             sumHIST@sumH 001C  
                                    __end_of_read_package 8608  
                                                 _var_sys 0100  
                           ??_EUSART1_DefaultErrorHandler 0001  
                             ??_ControlDecelarationFactor 0010  
                                ?_I2C1_CallbackReturnStop 0019  
                                           _OpenWalkOrder 7F74  
                                    _zeroCrossingWaitTime 02EF  
                                       SetSegmentValue@d1 001D  
                                       SetSegmentValue@d2 001C  
                       __end_of_I2C1_DO_SEND_RESTART_READ 924E  
                                    end_of_initialization 7180  
                              __end_of_I2C1_MasterSendAck 926E  
                                    ?_EUSART1_is_rx_ready 0001  
                                     _I2C1_MasterClearIrq 9274  
                                     ?_EUSART1_Initialize 0001  
                                               _PCON0bits 000FD7  
                                                 memcpy@d 0017  
                                                 memcpy@n 0014  
                                                 memcpy@s 0019  
                              __end_of_I2C1_MasterStartRx 929C  
                             _EUSART1_OverrunErrorHandler 02E7  
                                  ?_rd1RegCompleteHandler 0019  
                                         _i2c_writeNBytes 7E20  
                              ?_GetSecurityStateInClosing 0001  
                                  _I2C1_DO_SEND_ADR_WRITE 915A  
                                       ?_cmdMemoryIsEmpty 002E  
                                          ?_write_package 0011  
                                           _calculateMean 818A  
                            __end_of_sm_get_current_state 912C  
                                               i2u1400_40 4330  
                                               i2u1304_40 8D8E  
                                               i2u1402_40 435A  
                                               i2u1403_40 436A  
                                               i2u1404_40 437A  
                                               i2u1413_40 4478  
                                               i2u1430_40 4A68  
                                               i2u1431_40 4A6E  
                                               i2u1441_40 4B04  
                                               i2u1425_40 4A0A  
                                               i2u1450_40 4B6E  
                                               i2u1418_40 49AA  
                                               i2u1451_40 4B76  
                                               i2u1443_40 4B1A  
                                               i2u2170_48 003E  
                                               i2u1380_40 70B8  
                                               i2u1460_40 78C6  
                                               i2u1381_40 70C6  
                                               i2u1453_40 4B96  
                                               i2u1437_40 4AD8  
                                               i2u1374_40 703C  
                                               i2u1438_40 4AE6  
                                               i2u1462_40 7918  
                                               i2u2173_48 0056  
                                               i2u1447_40 4B4A  
                            __end_of_I2C1_DO_SEND_RESTART 923E  
                                               i2u1376_40 7078  
                                               i2u1384_40 7D56  
                                               i2u1377_40 7086  
                                               i2u1466_40 5942  
                                               i2u1458_45 84E4  
                                               i2u1395_40 42B4  
                                               i2u1379_40 70A4  
                                               i2u1467_40 59B6  
                                    __end_of_eusartparser 6F48  
                                               i2u1388_40 7D8C  
                                         _WWDT_TimerClear 8F4C  
                                 __end_of_I2C1_MasterOpen 909A  
                                  ?_wr1RegCompleteHandler 0019  
                                               i2u1830_48 8E4C  
                                               i2u1824_48 745E  
                                   __end_of_ControlLights 3CFA  
                                               i2u1824_49 7470  
                                               i2u1826_48 748A  
                                               i2u1834_48 8984  
                                               i2u1843_40 604A  
                                               i2u1826_49 749C  
                                               i2u1828_48 74B4  
                                 __end_of_I2C1_MasterStop 92A8  
                                               i2u1846_40 606E  
                                 __end_of_I2C1_Initialize 911A  
                                         ___lldiv@divisor 0014  
                                               i2u1858_48 611A  
                                   __end_of_ControlInputs 65D4  
                   __end_of_EUSART1_SetRxInterruptHandler 91CA  
                           _EUSART1_SetRxInterruptHandler 91C0  
                                             _I2C1_Poller 913C  
                                               i2u2888_47 90D2  
                        ??_SetSegmentValueIntermitentMain 001F  
                         ?_SetSegmentValueIntermitentMain 001C  
                                         _WWDT_SoftEnable 928C  
                                         ___lldiv@counter 001C  
                                      ??_cmdMemoryIsEmpty 002F  
                               ?_I2C1_CallbackReturnReset 0019  
                           __end_of_I2C1_MasterDisableIrq 92B4  
                                             _I2C1_Status 023C  
                              ?_GetSecurityStateInOpening 0001  
                                            _ControlMotor 4746  
                                  SaveNVM_VarSystem@point 00DB  
                                                 postdec1 000FE5  
                                                 postdec2 000FDD  
                                                 postinc0 000FEE  
                                                 postinc1 000FE6  
                                                 postinc2 000FDE  
                                             ?_getHopCode 0016  
                                          ?_OpenFullOrder 0001  
                        SetSegmentValueIntermitentMain@d1 001F  
                        SetSegmentValueIntermitentMain@d2 001C  
                                     _I2C1_MasterSendNack 926E  
                                           HopCHK@hopDiff 0026  
                     __end_of_I2C1_SetAddressNackCallback 9082  
                             _I2C1_SetAddressNackCallback 906A  
                                        ?_ADCC_Initialize 0001  
                                     _getTimeDecelaration 6BEE  
                                              _sm_restart 87CC  
                        __end_of_ADCC_GetSingleConversion 90DE  
                                    ?_I2C1_MasterClearIrq 0001  
                                          ??_I2C1_DO_IDLE 0010  
                                    ??_EUSART1_Initialize 0012  
                                        NormalKeyGen@SEED 02D9  
                                          ??_I2C1_DO_RCEN 0010  
                      __end_of_I2C1_DO_SEND_RESTART_WRITE 9246  
                              _I2C1_DO_SEND_RESTART_WRITE 923E  
                       actionZone_Closing@securityClosing 0032  
                             ?_sm_execute_ControlLearning 00DC  
                                _TMR0_SetInterruptHandler 91AC  
                                               _PORTAbits 000F8D  
                                               _PORTBbits 000F8E  
                                  ?_VerifyElectricalBrake 0001  
                                               _PORTEbits 000F91  
                         __end_of_rdBlkRegCompleteHandler 8956  
                                  ??_getStateOpenPosition 0032  
                                            ??_CloseOrder 0018  
                                   ??_controlSelectRemote 00E0  
                                    _SetSegmentValueLearn 69F8  
                           ??_I2C1_SetAddressNackCallback 0019  
                               I2C1_Read1ByteRegister@reg 0022  
                                        ___lbmod@dividend 0011  
                                    __end_of_Segments_Set 918E  
                                     _ControlCounterMoves 835E  
                            _controlLearning_stateMachine 02B2  
                         I2C1_SetDataCompleteCallback@ptr 0017  
                                          ?_OpenWalkOrder 0001  
                                              _stateMotor 0083  
                                           ?_sumEnergyADC 0010  
                          I2C1_CallbackReturnReset@funPtr 0019  
                       actionZone_Opening@securityClosing 00E4  
                                    ?_I2C1_MasterSendNack 0001  
                         keeloqDecryptPacket@classic_data 00E2  
                                     EUSART1_Write@txData 0010  
                                       ??_ClearFlag_rfCMD 0010  
                                    ?_getTimeDecelaration 0029  
                                   ??_EUSART1_is_rx_ready 0010  
                                       _saveEnergyADCHist 8D9E  
                                 __end_of_WWDT_Initialize 9198  
                                             ___lbmod@rem 0013  
                       actionZone_Opening@securityOpening 00E5  
                                          ?_calculateMean 0010  
                                        ??_refreshCurrent 0021  
                                       ??_SetSegmentValue 001D  
                                            _EUSART1_Read 873E  
                                      ?_saveEnergyADCHist 0010  
                       __end_of_GetSecurityStateInClosing 738E  
                                        ??_refreshSegment 0002  
                                          __end_of_DecCHK 8AAA  
                                       _controlLearnDigit 8ADC  
                                 __end_of_controlVelocity 4DD0  
                                    ?_ControlCounterMoves 0001  
                                     setValueToEdit@value 01F8  
                                      _actionZone_Closing 3FF0  
                                    __end_of_RemoveSerial 7B46  
                                          __end_of_HopCHK 78B6  
                                      __end_of_CloseOrder 8DEC  
                                 _zeroCrossingWaitTimeIdx 0084  
                                            _InitReceiver 8FA0  
                               _ControlDecelarationFactor 9022  
                                      ?_controlLearnDigit 0001  
                                    _timer0ReloadVal16bit 0290  
                       __end_of_GetSecurityStateInOpening 7434  
                                       setRGB_ON@RGBLigth 0015  
                                     ??_saveEnergyADCHist 0012  
                            __end_of_INTERRUPT_Initialize 9294  
                                      _actionZone_Opening 44F2  
                                   ??_I2C1_MasterClearIrq 0010  
                    __end_of_TMR2_DefaultInterruptHandler 92BE  
                            _TMR2_DefaultInterruptHandler 92BC  
                                             ?_readInputs 0001  
                                               _DispTable 03D2  
                                          __end_of___lmul 84BC  
                                   __end_of_LoadManufCode 8ECA  
                                     ?_actionZone_Closing 0001  
                                          __end_of___wmul 8E38  
                                          _I2C1_DO_RX_ACK 9226  
                                  ??_refreshADCZeroOffset 0017  
                                    _generateErrorLearnig 80BC  
                                            _InitSoftStop 86F4  
                                     ??_controlLearnDigit 0013  
                                 i2_VerifyElectricalBrake 7D32  
                                          __end_of_memcpy 8854  
                                  ?_OSCILLATOR_Initialize 0001  
                                    __end_of_WaitPreFlash 7F74  
                            __end_of_getCurrentComparator 582E  
                                      sm_send_event@event 0014  
                                    __end_of_NormalKeyGen 67F2  
                                           _saveNewSerial 7E94  
                                             ?_readbutton 0001  
                                     ?_actionZone_Opening 0001  
                                   ?_SetSegmentValueLearn 0001  
                         __end_of_I2C1_CallbackReturnStop 92A4  
                          ?_setPositionInvertionInClosing 0001  
                           __end_of_I2C1_MasterSendTxData 9256  
                                       _read_eusartparser 29A8  
                                   refreshADCZeroOffset@i 0017  
                                     start_initialization 70D4  
                             i2GetMotorPower@defineatraso 0004  
                                             ??_I2C1_Open 0010  
                                          ??_sumEnergyADC 0012  
                                      ?_read_eusartparser 0018  
                                             __end_of_rxi 44F2  
                                   ??_I2C1_MasterSendNack 0010  
                                 __end_of_i2c_writeNBytes 7E94  
                          ?_setPositionInvertionInOpening 0001  
                                   ??_getTimeDecelaration 002D  
           EUSART1_SetRxInterruptHandler@interruptHandler 0010  
           EUSART1_SetTxInterruptHandler@interruptHandler 0010  
                               __end_of_saveEnergyADCHist 8DC6  
                                 __end_of_WWDT_TimerClear 8F68  
                                    ??_actionZone_Closing 0032  
                                   __end_of_EUSART1_Write 88D6  
                                 __end_of_WWDT_SoftEnable 9290  
                                         ??_write_package 0018  
                                  rd1RegCompleteHandler@p 0019  
                            __end_of_verifyProgramingMode 8A78  
                                               _ReqResync 903A  
                               __end_of_controlLearnDigit 8B0C  
                                     ??_read_eusartparser 0019  
                                                ??_DecCHK 0012  
                                       _programmer_enable 0085  
                                    ??_actionZone_Opening 003B  
                                  _sm_execute_ControlGate 368C  
                 sm_execute_ControlLearning@typeOpenOrder 003A  
                                                ??_HopCHK 0026  
                               refreshADCZeroOffset@media 0018  
                                I2C1_SetBuffer@bufferSize 0012  
                                   ??_ControlCounterMoves 003A  
                                       _controlSaveRemote 718A  
                                        ?_I2C1_MasterOpen 0001  
                            keeloqDecryptPacket@hop_error 00E8  
                                        ?_I2C1_MasterStop 0001  
                                        ?_I2C1_Initialize 0001  
                                 saveNewSerial@tempSerial 00D8  
                                  controlSelectRemote@pos 00E2  
                                         ??_OpenFullOrder 0018  
                                   calculateMean@newValue 0014  
                                      ?_controlSaveRemote 0001  
                                 sm_get_current_state@psm 0010  
                                        ??_PMD_Initialize 0010  
                                                ??___lmul 0025  
                                  __end_of_I2C1_DO_RX_ACK 922E  
                                                ??___wmul 0014  
                                      _zeroCrossingLength 0193  
                                          _VerifyFollowMe 8E84  
                                  wr1RegCompleteHandler@p 0019  
                                   _EUSART1_RxDataHandler 8F0E  
                                 ??_I2C1_DO_SEND_ADR_READ 0010  
                          ?_EUSART1_SetRxInterruptHandler 0010  
                                             ?_sm_restart 0010  
                                             __pdataBANK0 00F8  
                                             __pdataBANK1 01F9  
                                             __pdataBANK2 02EF  
                                             __pdataBANK3 03D2  
                                   ?_generateErrorLearnig 0001  
                                                ??_memcpy 0016  
                                       ?_setFlashLigth_ON 0010  
                           ?_TMR2_DefaultInterruptHandler 0001  
                                       _controlMotorForce 4990  
                                     ??_controlSaveRemote 0020  
                               __end_of_read_eusartparser 2EB0  
                                          ?_saveNewSerial 00D8  
                                        I2C1_Open@address 0010  
                                          _eusart1RxCount 0093  
                                      ??_setFlashLigth_ON 0012  
                                _ADCC_GetSingleConversion 90C8  
                                      ?_controlMotorForce 0001  
                                   __end_of_InitSoftStart 8302  
                                               _StopOrder 8F30  
                                    _sm_get_current_state 911A  
                                             __pbssCOMRAM 003B  
                                         ??_OpenWalkOrder 0018  
                                    _I2C1_DO_SEND_RESTART 9236  
                                getTimeDecelaration@state 0031  
                       _EUSART1_RxDefaultInterruptHandler 02EB  
                                           __pcstackBANK0 00D8  
                                        ??_setValueToEdit 00DC  
                                                ?_RGB_Set 0001  
                                        _brakeElectric_st 0078  
                             ??_I2C1_DO_SEND_RESTART_READ 0010  
                                     ??_controlMotorForce 0005  
                                      _ResetDefaultMemory 5B5E  
                                         ??_calculateMean 0018  
                         ??_EUSART1_SetTxInterruptHandler 0012  
                                    __end_of_I2C1_DO_IDLE 9206  
                        ??_EUSART1_SetFramingErrorHandler 0012  
                         ?_EUSART1_SetFramingErrorHandler 0010  
                                                ?_Decrypt 001B  
                                    __end_of_I2C1_DO_RCEN 91FC  
                                           _GetMotorPower 6F48  
                                        ?_WWDT_Initialize 0001  
                                              ?_ReqResync 0010  
                               __end_of_controlSaveRemote 723E  
                           I2C1_SetAddressNackCallback@cb 0015  
                                      sm_execute_main@psm 00ED  
                                                ?_ReadADC 0001  
                                            RGB_Set@value 0010  
                                   _TMR0_InterruptHandler 02E3  
                                     ?_ResetDefaultMemory 0001  
                                               __pnvBANK1 01FE  
                                               __pnvBANK2 02DD  
                                   _rd2RegCompleteHandler 8C9A  
                                        _InitWalkAutoTime 90DE  
                                        ?_controlVelocity 0001  
                                __end_of_InitFullAutoTime 8FEE  
                             __end_of_SetSegmentValueMain 8FD4  
                          VerifyElectricalBrake@tempState 0010  
                        i2VerifyElectricalBrake@tempState 0001  
                                        ___lwdiv@dividend 0010  
                                  _PIN_MANAGER_Initialize 74CE  
                                  __end_of_VerifyFollowMe 8EA8  
                                   _wr2RegCompleteHandler 8C6E  
                              ??_I2C1_MasterEnableRestart 0010  
                                               __pintcode 0008  
                                            _read_package 85B8  
                                          _I2C1_MasterFsm 8512  
                              __end_of_checkNVM_VarSystem 54F8  
                        __end_of_TMR1_SetInterruptHandler 91AC  
                         ADCC_GetSingleConversion@channel 0001  
                                         ?_I2C1_DO_RX_ACK 0001  
                                                ?___awdiv 0014  
                                               __ptext100 9106  
                                               __ptext101 7B46  
                                                ?___lbdiv 0010  
                                               __ptext110 7CBA  
                                               __ptext102 91B6  
                                               __ptext111 39D6  
                                               __ptext103 91C0  
                                               __ptext200 92C0  
                                               __ptext120 8D9E  
                                               __ptext112 75F8  
                                               __ptext104 91CA  
                                               __ptext201 8AAA  
                                               __ptext121 68FA  
                                               __ptext113 914C  
                                               __ptext105 91D4  
                                               __ptext202 7434  
                                               __ptext130 906A  
                                               __ptext122 8566  
                                               __ptext114 8996  
                                               __ptext106 91DE  
                                               __ptext203 927A  
                                               __ptext131 79C0  
                                               __ptext123 5694  
                                               __ptext115 64B0  
                                               __ptext107 8608  
                                               __ptext204 92C2  
                                               __ptext140 9216  
                                               __ptext132 9082  
                                               __ptext124 8E12  
                                               __ptext116 5E6A  
                                               __ptext108 912C  
                                               __ptext205 9280  
                                               __ptext141 921E  
                                               __ptext133 9206  
                                               __ptext125 6F48  
                                               __ptext117 8786  
                                               __ptext109 4746  
                                               __ptext206 8F0E  
                                               __ptext150 915A  
                                               __ptext142 9226  
                                               __ptext134 8BBE  
                                               __ptext126 835E  
                                               __ptext118 6AF4  
                                               __ptext207 0000  
                                               __ptext151 9168  
                                               __ptext143 922E  
                                               __ptext135 913C  
                                               __ptext127 8A0C  
                                               __ptext119 7714  
                                               __ptext160 9298  
                                               __ptext152 91FC  
                                               __ptext144 9236  
                                               __ptext136 920E  
                                               __ptext128 7E20  
                                               __ptext161 929C  
                                               __ptext153 81EC  
                                               __ptext145 923E  
                                               __ptext137 8512  
                                               __ptext129 8810  
                                               __ptext170 8CC6  
                                               __ptext162 92A0  
                                               __ptext154 9262  
                                               __ptext146 9246  
                                               __ptext138 86A6  
                                               __ptext171 8CF2  
                                               __ptext163 88D6  
                                               __ptext155 9176  
                                               __ptext147 91F2  
                                               __ptext139 91E8  
                                               __ptext180 92B0  
                                               __ptext172 8D1E  
                                               __ptext164 8BEA  
                                               __ptext156 924E  
                                               __ptext148 7C40  
                                               __ptext181 92B4  
                                               __ptext173 909A  
                                               __ptext165 8C16  
                                               __ptext157 9268  
                                               __ptext149 77A0  
                                               __ptext190 84BC  
                                               __ptext182 9274  
                                               __ptext174 7FE2  
                                               __ptext166 8C42  
                                               __ptext158 9294  
                                               __ptext191 90C8  
                                               __ptext175 9008  
                                               __ptext167 8916  
                                               __ptext159 926E  
                                               __ptext192 8956  
                                               __ptext184 5FDE  
                                               __ptext176 92A4  
                                               __ptext168 8C6E  
                                               __ptext193 4990  
                                               __ptext185 78B6  
                                               __ptext177 92A8  
                                               __ptext169 8C9A  
                                               __ptext194 7D32  
                                               __ptext186 9182  
                                               __ptext178 92AC  
                                               __ptext195 700E  
                                               __ptext187 582E  
                                               __ptext179 8EEC  
                                               __ptext196 8F84  
                                               __ptext188 8D74  
                                               __ptext197 92BE  
                                               __ptext189 92BC  
                                               __ptext198 8E38  
                                               __ptext199 427C  
                                                ?___lbmod 0010  
                                 write_eusartparser@debug 001F  
                            ??_SetSegmentValueIntermitent 0013  
                                                ?___lldiv 0010  
                               ??i2_VerifyElectricalBrake 0001  
                               __end_of_controlMotorForce 4BB2  
                                                ?___lwdiv 0010  
                                    i2c_readDataBlock@len 0026  
                                    i2c_readDataBlock@reg 0022  
                                 _I2C1_MasterWaitForEvent 920E  
                                        _I2C1_MasterClose 92B4  
                         DecryptPacket_12BIT@classic_data 00E2  
                                ??_I2C1_Read1ByteRegister 0023  
                                          _I2C1_SetBuffer 9008  
                            ??_INTERRUPT_InterruptManager 000A  
                                  ??_SetSegmentValueLearn 0010  
                                        _I2C1_MasterStart 92AC  
                                    NormalKeyGen@SKEYtemp 002C  
                                        _I2C1_MasterWrite 9206  
                                      _clearLearningValue 7BC4  
                                      _write_eusartparser 2EB0  
                                    ??_ResetDefaultMemory 003A  
                                                _BAUD1CON 000F9F  
                                             __smallconst 0F00  
                                   ?_sm_get_current_state 0010  
                                            ?_ShowVersion 0001  
                                                _F2Chance 0195  
                                              ?_StopOrder 0001  
              __end_of_EUSART1_DefaultOverrunErrorHandler 9280  
                    ??_EUSART1_DefaultOverrunErrorHandler 0001  
                     ?_EUSART1_DefaultOverrunErrorHandler 0001  
                      _EUSART1_DefaultOverrunErrorHandler 927A  
                                   ?_I2C1_DO_SEND_RESTART 0001  
                                       _i2c_readDataBlock 7DAA  
                                            _eusartparser 6E7E  
                                    _EUSART1_ErrorHandler 02E5  
                                       ?_I2C1_DO_TX_EMPTY 0001  
                                                ?_sumHIST 0010  
                                                ?_sm_init 0012  
                                 _EUSART1_SetErrorHandler 91DE  
                                      ?_i2c_readDataBlock 0022  
                                     ReqResync@CurrentHop 0010  
                        __end_of_I2C1_CallbackReturnReset 92A0  
                                     ?_clearLearningValue 0001  
                                        ___lwdiv@quotient 0014  
                                     ?_write_eusartparser 0010  
                                        ?_i2c_writeNBytes 0022  
                                      ??_I2C1_DO_TX_EMPTY 001B  
                                                _T2CLKCON 000FBF  
                                   __end_of_readRFButtons 5B5E  
                                 ??_rd1RegCompleteHandler 001B  
                                 ?_I2C1_DO_SEND_ADR_WRITE 0001  
                                               _setRGB_ON 75F8  
                               I2C1_MasterSendTxData@data 0010  
                                        ?_WWDT_TimerClear 0001  
                                    _INTERRUPT_Initialize 9290  
                                          ?_GetMotorPower 0001  
                                 ??_wr1RegCompleteHandler 001B  
                                        ?_WWDT_SoftEnable 0001  
                                              sumHIST@max 0018  
                                              sumHIST@min 001A  
                                       ??_TMR0_Initialize 0012  
                                     ??_i2c_readDataBlock 0028  
                                        _I2C1_SetCallback 7FE2  
                                              sm_init@psm 0012  
                                          ___wmul@product 0014  
                                                _LATAbits 000F83  
                 EUSART1_SetErrorHandler@interruptHandler 0010  
                                                _LATCbits 000F85  
                                read_eusartparser@package 0018  
                                                _LATDbits 000F86  
                                                _LATEbits 000F87  
                                              _I2C1_DO_RX 7C40  
                                              _I2C1_DO_TX 77A0  
                             ??_GetSecurityStateInClosing 0014  
                                                _PIE0bits 000EC2  
                                    _getCurrentComparator 5694  
                                                _PIE3bits 000EC5  
                                                _PIE4bits 000EC6  
                                              DecCHK@data 0010  
                                                Decrypt@i 001E  
                                                Decrypt@j 001F  
                                                Decrypt@p 0020  
                                         _firstselectflag 01FD  
                                     _DecryptPacket_12BIT 7688  
                                              _I2C1_Close 8EEC  
                         setValueToEdit@ParameterSelected 003A  
                                            ?_I2C1_Poller 0001  
                                  __end_of_I2C1_MasterFsm 8566  
                            __end_of_I2C1_MasterGetRxData 9298  
                              ??_TMR0_SetInterruptHandler 0012  
                                                _PIR0bits 000ECA  
                                            _Segments_Set 9182  
                                                _PIR3bits 000ECD  
                                         ?_VerifyFollowMe 0001  
                                                _PIR4bits 000ECE  
                                readRFButtons@rollingCode 0185  
                             ??_GetSecurityStateInOpening 0014  
                                  ?_EUSART1_RxDataHandler 0001  
                                    ??_clearLearningValue 0010  
                                      _I2C1_MasterSendAck 9268  
                                    ??_write_eusartparser 0017  
                                    __end_of_sumEnergyADC 77A0  
                               _I2C1_DO_SEND_RESTART_READ 9246  
                                            ??_getHopCode 0018  
                                               _pointSync 007A  
                                   __end_of_load_New_Menu 3FF0  
                                                _SSP1CON1 000F96  
                                                _SSP1CON2 000F97  
                                  ??_generateErrorLearnig 0017  
                                                _TMR0_ISR 8E38  
                                                _TMR1_ISR 8956  
                                                _TMR2_ISR 5FDE  
                                           _getKeyPressed 9052  
                                 ??_VerifyElectricalBrake 0010  
                                  __end_of_I2C1_SetBuffer 9022  
                                               _temppower 018E  
                                         _powerControl_st 017B  
                                                _SSP1STAT 000F95  
                    __end_of_I2C1_SetDataCompleteCallback 90B2  
                            _I2C1_SetDataCompleteCallback 909A  
                                      _I2C1_MasterStartRx 9298  
                                         ??_saveNewSerial 00DD  
                             ?_I2C1_DO_SEND_RESTART_WRITE 0001  
                                       ??_TMR1_Initialize 0012  
                                         _ClearFlag_rfCMD 925C  
                                     ?_I2C1_MasterSendAck 0001  
                                              _ADCON0bits 000F60  
                               __end_of_i2c_readDataBlock 7E20  
                                       ___wmul@multiplier 0010  
                                ?_I2C1_DO_RX_NACK_RESTART 0001  
                                    _verifyProgramingMode 8A44  
                                       ??_sm_execute_main 00EF  
                                    _numberOfErrorCurrent 008E  
                                    ?_DecryptPacket_12BIT 00E0  
                                               _ts_system 019A  
                                                _BitCount 008C  
                                     ?_I2C1_MasterStartRx 0001  
                            __end_of_I2C1_DO_ADDRESS_NACK 86F4  
                          controlSelectRemote@validSerial 00E1  
                          ??_TMR2_DefaultInterruptHandler 0001  
                                       _actionZone_Closed 723E  
                               ?_TMR2_SetInterruptHandler 0010  
                                    _idxAdcZeroAquisition 008F  
                                         _SetSegmentValue 8FEE  
                                            _RemoveSerial 7AC6  
                          getStateOpenPosition@stateMotor 00D9  
                          __end_of_I2C1_DO_SEND_ADR_WRITE 9168  
                                       _actionZone_Opened 4DD0  
                                           _I2C1_DO_RESET 91E8  
                                      ?_actionZone_Closed 0001  
                                                _BufferRF 02C8  
                                     read_package@package 0018  
                                       ___lmul@multiplier 001D  
                                               copy_data0 70E8  
                                               copy_data1 7120  
                                   ?_INTERRUPT_Initialize 0001  
                                              ?_setRGB_ON 0011  
                                   I2C1_Close@returnValue 0010  
                                ?_rdBlkRegCompleteHandler 0019  
                                      ?_actionZone_Opened 0001  
                                        _Abertura_pedonal 018D  
                                     I2C1_SetCallback@idx 0014  
                                     I2C1_SetCallback@ptr 0012  
                                      __end_of_getHopCode 625A  
                                             ??_ReqResync 0012  
                                    ??_I2C1_MasterSendAck 0010  
                                       ??_TMR2_Initialize 0012  
                                   EUSART1_Read@readValue 0010  
                                  ?_rd2RegCompleteHandler 0019  
                                     ??_actionZone_Closed 0020  
                                            _WaitPreFlash 7F04  
                                   ?_getCurrentComparator 0016  
                            __end_of_I2C1_MasterOperation 8BEA  
                                            _NormalKeyGen 66E4  
                     sm_execute_ControlGate@typeOpenOrder 00EB  
                                  ?_wr2RegCompleteHandler 0019  
                                    ??_I2C1_MasterStartRx 0010  
                                     ??_actionZone_Opened 0020  
                            saveEnergyADCHist@valueToSave 0010  
                   __end_of_EUSART1_SetTxInterruptHandler 91C0  
                           _EUSART1_SetTxInterruptHandler 91B6  
                                           _sm_send_event 824A  
                                     _keeloqDecryptPacket 4FBE  
                                                __Hrparam 0000  
                                         ?_I2C1_MasterFsm 0001  
                                               memcpy@tmp 0016  
                                                __Lrparam 0000  
                                    sumEnergyADC@auxValue 0016  
                                     i2c_writeNBytes@data 0024  
                         actionZone_Opening@typeOpenOrder 00E6  
                                          ?_getKeyPressed 0001  
                               ??_I2C1_MasterWaitForEvent 0010  
                                       _main_stateMachine 01ED  
                                   _I2C1_MasterDisableIrq 92B0  
                                            ??_readInputs 0010  
                                 ??_OSCILLATOR_Initialize 0010  
                             __end_of_controlSelectRemote 368C  
                                         ?_I2C1_SetBuffer 0010  
                                          _fullmotorPower 0082  
                                  ResetDefaultMemory@type 003A  
                                        _controlTimeslots 582E  
                                _TMR1_SetInterruptHandler 91A2  
                                  ??_sm_get_current_state 0012  
                                   ?_verifyProgramingMode 0010  
                               _GetSecurityStateInClosing 72E8  
                       I2C1_Read1ByteRegister@returnValue 0024  
                                  ??_I2C1_DO_SEND_RESTART 0010  
                                            ??_readbutton 0010  
                               __end_of_actionZone_Closed 72E8  
                                   ??_DecryptPacket_12BIT 003B  
                                   _TMR1_InterruptHandler 02DF  
                               ??_EUSART1_SetErrorHandler 0012  
                                       ??i2_GetMotorPower 0001  
                     __end_of_EUSART1_DefaultErrorHandler 9286  
                             _EUSART1_DefaultErrorHandler 9280  
                                             ??_StopOrder 0018  
                             __end_of_EUSART1_is_rx_ready 913C  
                                    ?_keeloqDecryptPacket 00E0  
                               __end_of_actionZone_Opened 4FBE  
                               getStateOpenPosition@state 00D8  
                               _GetSecurityStateInOpening 738E  
                                         ___lwdiv@divisor 0012  
                                          ?_I2C1_DO_RESET 0001  
                                         ___lwdiv@counter 0016  
                                                __ptext10 7566  
                                                __ptext11 7AC6  
                                                __ptext20 368C  
                                                __ptext12 718A  
                                                __ptext21 1886  
                                                __ptext13 8D4A  
                                                __ptext30 65D4  
                                                __ptext22 80BC  
                                                __ptext14 793C  
                                                __ptext31 86F4  
                                                __ptext23 8410  
                                                __ptext15 8FBA  
                                                __ptext40 8F30  
                                                __ptext32 9022  
                                                __ptext24 87CC  
                                                __ptext16 925C  
                                                __ptext41 72E8  
                                                __ptext33 4DD0  
                                                __ptext25 7BC4  
                                                __ptext17 8ADC  
                                                __ptext50 90DE  
                                                __ptext42 723E  
                                                __ptext34 8E84  
                                                __ptext26 818A  
                                                __ptext18 69F8  
                                                __ptext51 738E  
                                                __ptext43 7F04  
                                                __ptext35 8DC6  
                                                __ptext27 44F2  
                                                __ptext19 7A44  
                                                __ptext60 4FBE  
                                                __ptext52 8B3A  
                                                __ptext44 8DEC  
                                                __ptext36 3FF0  
                                                __ptext28 6CD6  
                                                __ptext61 8A44  
                                                __ptext53 5190  
                                                __ptext45 8FD4  
                                                __ptext37 6388  
                                                __ptext29 4BB2  
                                                __ptext70 7688  
                                                __ptext62 83B8  
                                                __ptext54 89D2  
                                                __ptext46 7F74  
                                                __ptext38 6BEE  
                                                __ptext71 54F8  
                                                __ptext63 66E4  
                                                __ptext55 90F2  
                                                __ptext47 824A  
                                                __ptext39 8466  
                                                __ptext80 2EB0  
                                                __ptext72 67F2  
                                                __ptext64 8EA8  
                                                __ptext56 8050  
                                                __ptext48 911A  
                                                __ptext81 29A8  
                                                __ptext73 625A  
                                                __ptext65 6DB2  
                                                __ptext57 85B8  
                                                __ptext49 82A6  
                                                __ptext90 8B92  
                                                __ptext82 8B66  
                                                __ptext74 7DAA  
                                                __ptext66 782C  
                                                __ptext58 873E  
                                                __ptext91 9198  
                                                __ptext83 8896  
                                                __ptext75 5358  
                                                __ptext67 612C  
                                                __ptext59 59C8  
                                                __ptext92 8854  
                                                __ptext84 8F4C  
                                                __ptext76 5B5E  
                                                __ptext68 903A  
                                                __ptext93 91A2  
                                                __ptext85 928C  
                                                __ptext77 8302  
                                                __ptext69 8A78  
                                                __ptext94 8ECA  
                                                __ptext86 8124  
                                                __ptext78 9052  
                                                __ptext95 91AC  
                                                __ptext87 8FEE  
                                                __ptext79 6E7E  
                                                __ptext96 8F68  
                                                __ptext88 8B0C  
                                                __ptext97 74CE  
                                                __ptext89 918E  
                                                __ptext98 90B2  
                                                __ptext99 9290  
                                            _SSP1CON1bits 000F96  
                                            _SSP1CON2bits 000F97  
                                     NormalKeyGen@HOPtemp 0028  
                                         ??_GetMotorPower 0010  
                                _controlGate_stateMachine 01E2  
                                           ?_GetOpenOrder 0001  
                                 ?_sm_execute_ControlGate 00E7  
                                 DecryptPacket_12BIT@data 00E0  
              ?_rdBlkRegCompleteHandler@pic18f46k40$F7701 0019  
             ??_rdBlkRegCompleteHandler@pic18f46k40$F7703 001B  
                                                _learn_st 0060  
               ??_rd2RegCompleteHandler@pic18f46k40$F7691 001B  
                ?_rd1RegCompleteHandler@pic18f46k40$F7683 0019  
                ?_wr1RegCompleteHandler@pic18f46k40$F7675 0019  
               ??_rd1RegCompleteHandler@pic18f46k40$F7685 001B  
               ??_wr1RegCompleteHandler@pic18f46k40$F7677 001B  
                ?_wr2RegCompleteHandler@pic18f46k40$F7695 0019  
               ??_wr2RegCompleteHandler@pic18f46k40$F7697 001B  
                ?_rd2RegCompleteHandler@pic18f46k40$F7689 0019  
                                      __end_of_readInputs 68FA  
                                _I2C1_CallbackReturnReset 929C  
                                             ?_I2C1_DO_RX 0001  
                                             ?_I2C1_DO_TX 0001  
                                          ?_sm_send_event 0012  
                    __end_of_TMR0_DefaultInterruptHandler 92C2  
                            _TMR0_DefaultInterruptHandler 92C0  
                                i2c_readDataBlock@address 0029  
                             __end_of_I2C1_MasterClearIrq 927A  
                            __end_of_I2C1_DO_RX_NACK_STOP 9226  
                                             ?_I2C1_Close 0001  
                                          _ControlCurrent 5E6A  
                                                _security 016A  
                                    RemoveSerial@position 003A  
                                      __end_of_readbutton 80BC  
                                              _RC1STAbits 000F9D  
          EUSART1_SetOverrunErrorHandler@interruptHandler 0010  
                                 __end_of_ClearFlag_rfCMD 9262  
                                    sm_init@initial_state 0014  
                      __end_of_SetSegmentValueIntermitent 8B66  
                              _SetSegmentValueIntermitent 8B3A  
                                                isa$xinst 000000  
                              ??_ADCC_GetSingleConversion 0001  
                                                int$flags 0050  
                         __end_of_I2C1_DO_RX_NACK_RESTART 921E  
                           SetSegmentValueLearn@direction 0012  
                                            ??_sm_restart 0012  
                                I2C1_MasterOperation@read 0020  
                      __end_of_INTERRUPT_InterruptManager 009C  
                              _INTERRUPT_InterruptManager 0008  
                                       _loadNVM_VarSystem 625A  
                                SaveNVM_VarSystem@tempAdd 00D9  
                                       ??_TMR1_WriteTimer 0003  
                                 __end_of_SetSegmentValue 9008  
                           __end_of_I2C1_DO_SEND_ADR_READ 9176  
                             _EUSART1_FramingErrorHandler 02E9  
                                            _I2C1_DO_IDLE 91FC  
                                     _EUSART1_Receive_ISR 7434  
                                            _I2C1_DO_RCEN 91F2  
                                     decrementTimeslot@ts 0001  
                                      ?_loadNVM_VarSystem 0001  
                           controlSelectRemote@tempSerial 00E4  
                                           _getTypeRemote 9256  
                             __end_of_I2C1_MasterSendNack 9274  
                                        sm_send_event@psm 0012  
                             __end_of_getTimeDecelaration 6CD6  
                                   ??_keeloqDecryptPacket 00E4  
                                            _waitZeroPeak 0191  
                                __end_of_InitWalkAutoTime 90F2  
                                              _INTCONbits 000FF2  
                                       _aux_in_auto_close 018B  
                                                memcpy@d1 0010  
                                                memcpy@s1 0012  
                          I2C1_SetAddressNackCallback@ptr 0017  
                                      i2c_writeNBytes@dat 0028  
                                      i2c_writeNBytes@len 0025  
                                      i2c_writeNBytes@reg 0022  
                                    _I2C1_MasterGetRxData 9294  
                                   _I2C1_MasterSendTxData 924E  
                                     ??_loadNVM_VarSystem 003B  
                                           sm_restart@psm 0010  
                                  ??_INTERRUPT_Initialize 0010  
                                            _RFFull_12BIT 008A  
                                    _control_limit_switch 0081  
                          __end_of_sm_execute_ControlGate 39D6  
                                              Decrypt@aux 0021  
                                              Decrypt@key 001D  
                                          ??_GetOpenOrder 0020  
                                             ??_setRGB_ON 0013  
                             __end_of_ControlCounterMoves 83B8  
                                                intlevel2 0000  
                        actionZone_Opened@securityClosing 0020  
                        actionZone_Closed@securityOpening 0020  
                                __end_of_I2C1_MasterClose 92B8  
                                    ?_EUSART1_Receive_ISR 0001  
                                  _I2C1_Read1ByteRegister 8302  
                                 readRFButtons@typeRemote 0197  
                                  ??_getCurrentComparator 001A  
                                  rd2RegCompleteHandler@p 0019  
                                      __end_of_sm_restart 8810  
                                        ___lldiv@dividend 0010  
                                 ?_PIN_MANAGER_Initialize 0001  
                                  __end_of_ControlCurrent 5FDE  
                           I2C1_Read1ByteRegister@address 0023  
                                __end_of_I2C1_MasterStart 92B0  
                                __end_of_I2C1_MasterWrite 920E  
                                   __end_of_write_package 8B92  
                                             _tempCounter 01F9  
                  __end_of_EUSART1_SetOverrunErrorHandler 91D4  
                          _EUSART1_SetOverrunErrorHandler 91CA  
                                        ??_I2C1_DO_RX_ACK 0010  
                                             _WDTCON0bits 000ED2  
                                             getHopCode@i 0023  
                                 _I2C1_CallbackReturnStop 92A0  
                            __end_of_EUSART1_Transmit_ISR 8ADC  
                                      NormalKeyGen@Buffer 0030  
                                                sumHIST@i 0020  
                                         ??_getKeyPressed 0010  
                                           _ControlLights 39D6  
                                       ?_InitFullAutoTime 0001  
                                           _ControlInputs 64B0  
                           ?_TMR0_DefaultInterruptHandler 0001  
                                    _I2C1_DO_ADDRESS_NACK 86A6  
                                              HopCHK@data 0024  
                                  ?_I2C1_MasterDisableIrq 0001  
                                           ?_getSerialCmd 001B  
                                          _ADC_zero_array 0396  
                               __end_of_loadNVM_VarSystem 6388  
                                      ??_InitFullAutoTime 0010  
                   __end_of_keeloq_classic_decrypt_packet 8410  
                           _keeloq_classic_decrypt_packet 83B8  
                                   __end_of_OpenFullOrder 8E12  
                                  wr2RegCompleteHandler@p 0019  
          EUSART1_SetFramingErrorHandler@interruptHandler 0010  
                          ?_EUSART1_SetTxInterruptHandler 0010  
                                  ??_verifyProgramingMode 0012  
                                      _eusart1RxLastError 0199  
                                          ?_getTypeRemote 0001  
                                        _cmdMemoryIsEmpty 7566  
                                      NormalKeyGen@serial 0026  
                                __end_of_I2C1_SetCallback 8050  
                                             _var_sys_NVM 0098  
                                              _SSP1DATPPS 000EB8  
                                              _SSP1CLKPPS 000EB7  
                                         ??_I2C1_DO_RESET 0010  
                                    WWDT_TimerClear@state 0010  
                                        ___lldiv@quotient 0018  
                                    _I2C1_MasterOperation 8BBE  
                                         _TMR0_Initialize 8ECA  
                            ??_validateRemoteSerialNumber 00D8  
                                      _checkNVM_VarSystem 5358  
                                   ?_I2C1_MasterGetRxData 0001  
                           controlSelectRemote@typeRemote 00E3  
                                   __end_of_OpenWalkOrder 7FE2  
                                            _sumEnergyADC 7714  
                                          _listSyncValues 0300  
                                           setRGB_ON@Freq 0011  
                                     ?_checkNVM_VarSystem 0001  
                                   ??_EUSART1_Receive_ISR 0001  
                          __end_of_PIN_MANAGER_Initialize 7566  
                                       ??_ADCC_Initialize 0010  
                           __end_of_rd1RegCompleteHandler 8CF2  
                                         ??_sm_send_event 0016  
                                        ??_VerifyFollowMe 0010  
                                   __end_of_calculateMean 81EC  
                                        sm_init@hist_mode 0016  
                                         ?_ControlCurrent 0001  
                           __end_of_wr1RegCompleteHandler 8D1E  
                                   _TMR2_InterruptHandler 02DD  
                                 ??_EUSART1_RxDataHandler 0001  
                                          ?_ControlLights 0001  
                                         _TMR1_Initialize 8854  
                                          ?_ControlInputs 0001  
                                   ?_I2C1_DO_ADDRESS_NACK 0001  
                                          ??_getSerialCmd 001C  
                                           ?_ControlMotor 0001  
                                         _sm_execute_main 24A0  
