

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Tue Jul 19 13:37:25 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og9 
     1                           	processor	18F46K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
     9                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    10                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    12                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    13                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    19                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    21                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    22                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    23                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    24                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    25                           	psect	text0,global,reloc=2,class=CODE,delta=1
    26                           	psect	text1,global,reloc=2,class=CODE,delta=1
    27                           	psect	text2,global,reloc=2,class=CODE,delta=1
    28                           	psect	text3,global,reloc=2,class=CODE,delta=1
    29                           	psect	text4,global,reloc=2,class=CODE,delta=1
    30                           	psect	text5,global,reloc=2,class=CODE,delta=1
    31                           	psect	text6,global,reloc=2,class=CODE,delta=1
    32                           	psect	text7,global,reloc=2,class=CODE,delta=1
    33                           	psect	text8,global,reloc=2,class=CODE,delta=1
    34                           	psect	text9,global,reloc=2,class=CODE,delta=1
    35                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text12,global,reloc=2,class=CODE,delta=1
    38                           	psect	text13,global,reloc=2,class=CODE,delta=1
    39                           	psect	text14,global,reloc=2,class=CODE,delta=1
    40                           	psect	text15,global,reloc=2,class=CODE,delta=1
    41                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text17,global,reloc=2,class=CODE,delta=1
    43                           	psect	text18,global,reloc=2,class=CODE,delta=1
    44                           	psect	text19,global,reloc=2,class=CODE,delta=1
    45                           	psect	text20,global,reloc=2,class=CODE,delta=1
    46                           	psect	text21,global,reloc=2,class=CODE,delta=1
    47                           	psect	text22,global,reloc=2,class=CODE,delta=1
    48                           	psect	text23,global,reloc=2,class=CODE,delta=1
    49                           	psect	text24,global,reloc=2,class=CODE,delta=1
    50                           	psect	text25,global,reloc=2,class=CODE,delta=1
    51                           	psect	text26,global,reloc=2,class=CODE,delta=1
    52                           	psect	text27,global,reloc=2,class=CODE,delta=1
    53                           	psect	text28,global,reloc=2,class=CODE,delta=1
    54                           	psect	text29,global,reloc=2,class=CODE,delta=1
    55                           	psect	text30,global,reloc=2,class=CODE,delta=1
    56                           	psect	text31,global,reloc=2,class=CODE,delta=1
    57                           	psect	text32,global,reloc=2,class=CODE,delta=1
    58                           	psect	text33,global,reloc=2,class=CODE,delta=1
    59                           	psect	text34,global,reloc=2,class=CODE,delta=1
    60                           	psect	text35,global,reloc=2,class=CODE,delta=1
    61                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    62                           	psect	text37,global,reloc=2,class=CODE,delta=1
    63                           	psect	text38,global,reloc=2,class=CODE,delta=1
    64                           	psect	text39,global,reloc=2,class=CODE,delta=1
    65                           	psect	text40,global,reloc=2,class=CODE,delta=1
    66                           	psect	text41,global,reloc=2,class=CODE,delta=1
    67                           	psect	text42,global,reloc=2,class=CODE,delta=1
    68                           	psect	text43,global,reloc=2,class=CODE,delta=1
    69                           	psect	text44,global,reloc=2,class=CODE,delta=1
    70                           	psect	text45,global,reloc=2,class=CODE,delta=1
    71                           	psect	text46,global,reloc=2,class=CODE,delta=1
    72                           	psect	text47,global,reloc=2,class=CODE,delta=1
    73                           	psect	text48,global,reloc=2,class=CODE,delta=1
    74                           	psect	text49,global,reloc=2,class=CODE,delta=1
    75                           	psect	text50,global,reloc=2,class=CODE,delta=1
    76                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    77                           	psect	text52,global,reloc=2,class=CODE,delta=1
    78                           	psect	text53,global,reloc=2,class=CODE,delta=1
    79                           	psect	text54,global,reloc=2,class=CODE,delta=1
    80                           	psect	text55,global,reloc=2,class=CODE,delta=1
    81                           	psect	text56,global,reloc=2,class=CODE,delta=1
    82                           	psect	text57,global,reloc=2,class=CODE,delta=1
    83                           	psect	text58,global,reloc=2,class=CODE,delta=1
    84                           	psect	text59,global,reloc=2,class=CODE,delta=1
    85                           	psect	text60,global,reloc=2,class=CODE,delta=1
    86                           	psect	text61,global,reloc=2,class=CODE,delta=1
    87                           	psect	text62,global,reloc=2,class=CODE,delta=1
    88                           	psect	text63,global,reloc=2,class=CODE,delta=1
    89                           	psect	text64,global,reloc=2,class=CODE,delta=1
    90                           	psect	text65,global,reloc=2,class=CODE,delta=1
    91                           	psect	text66,global,reloc=2,class=CODE,delta=1
    92                           	psect	text67,global,reloc=2,class=CODE,delta=1
    93                           	psect	text68,global,reloc=2,class=CODE,delta=1
    94                           	psect	text69,global,reloc=2,class=CODE,delta=1
    95                           	psect	text70,global,reloc=2,class=CODE,delta=1
    96                           	psect	text71,global,reloc=2,class=CODE,delta=1
    97                           	psect	text72,global,reloc=2,class=CODE,delta=1
    98                           	psect	text73,global,reloc=2,class=CODE,delta=1
    99                           	psect	text74,global,reloc=2,class=CODE,delta=1
   100                           	psect	text75,global,reloc=2,class=CODE,delta=1
   101                           	psect	text76,global,reloc=2,class=CODE,delta=1
   102                           	psect	text77,global,reloc=2,class=CODE,delta=1
   103                           	psect	text78,global,reloc=2,class=CODE,delta=1
   104                           	psect	text79,global,reloc=2,class=CODE,delta=1
   105                           	psect	text80,global,reloc=2,class=CODE,delta=1
   106                           	psect	text81,global,reloc=2,class=CODE,delta=1
   107                           	psect	text82,global,reloc=2,class=CODE,delta=1
   108                           	psect	text83,global,reloc=2,class=CODE,delta=1
   109                           	psect	text84,global,reloc=2,class=CODE,delta=1
   110                           	psect	text85,global,reloc=2,class=CODE,delta=1
   111                           	psect	text86,global,reloc=2,class=CODE,delta=1
   112                           	psect	text87,global,reloc=2,class=CODE,delta=1
   113                           	psect	text88,global,reloc=2,class=CODE,delta=1
   114                           	psect	text89,global,reloc=2,class=CODE,delta=1
   115                           	psect	text90,global,reloc=2,class=CODE,delta=1
   116                           	psect	text91,global,reloc=2,class=CODE,delta=1
   117                           	psect	text92,global,reloc=2,class=CODE,delta=1
   118                           	psect	text93,global,reloc=2,class=CODE,delta=1
   119                           	psect	text94,global,reloc=2,class=CODE,delta=1
   120                           	psect	text95,global,reloc=2,class=CODE,delta=1
   121                           	psect	text96,global,reloc=2,class=CODE,delta=1
   122                           	psect	text97,global,reloc=2,class=CODE,delta=1
   123                           	psect	text98,global,reloc=2,class=CODE,delta=1
   124                           	psect	text99,global,reloc=2,class=CODE,delta=1
   125                           	psect	text100,global,reloc=2,class=CODE,delta=1
   126                           	psect	text101,global,reloc=2,class=CODE,delta=1
   127                           	psect	text102,global,reloc=2,class=CODE,delta=1
   128                           	psect	text103,global,reloc=2,class=CODE,delta=1
   129                           	psect	text104,global,reloc=2,class=CODE,delta=1
   130                           	psect	text105,global,reloc=2,class=CODE,delta=1
   131                           	psect	text106,global,reloc=2,class=CODE,delta=1
   132                           	psect	text107,global,reloc=2,class=CODE,delta=1
   133                           	psect	text108,global,reloc=2,class=CODE,delta=1
   134                           	psect	text109,global,reloc=2,class=CODE,delta=1
   135                           	psect	text110,global,reloc=2,class=CODE,delta=1
   136                           	psect	text111,global,reloc=2,class=CODE,delta=1
   137                           	psect	text112,global,reloc=2,class=CODE,delta=1
   138                           	psect	text113,global,reloc=2,class=CODE,delta=1
   139                           	psect	text114,global,reloc=2,class=CODE,delta=1
   140                           	psect	text115,global,reloc=2,class=CODE,delta=1
   141                           	psect	text116,global,reloc=2,class=CODE,delta=1
   142                           	psect	text117,global,reloc=2,class=CODE,delta=1
   143                           	psect	text118,global,reloc=2,class=CODE,delta=1
   144                           	psect	text119,global,reloc=2,class=CODE,delta=1
   145                           	psect	text120,global,reloc=2,class=CODE,delta=1
   146                           	psect	text121,global,reloc=2,class=CODE,delta=1
   147                           	psect	text122,global,reloc=2,class=CODE,delta=1
   148                           	psect	text123,global,reloc=2,class=CODE,delta=1
   149                           	psect	text124,global,reloc=2,class=CODE,delta=1
   150                           	psect	text125,global,reloc=2,class=CODE,delta=1,group=1
   151                           	psect	text126,global,reloc=2,class=CODE,delta=1
   152                           	psect	text127,global,reloc=2,class=CODE,delta=1,group=1
   153                           	psect	text128,global,reloc=2,class=CODE,delta=1
   154                           	psect	text129,global,reloc=2,class=CODE,delta=1
   155                           	psect	text130,global,reloc=2,class=CODE,delta=1
   156                           	psect	text131,global,reloc=2,class=CODE,delta=1
   157                           	psect	text132,global,reloc=2,class=CODE,delta=1,group=2
   158                           	psect	text133,global,reloc=2,class=CODE,delta=1
   159                           	psect	text134,global,reloc=2,class=CODE,delta=1
   160                           	psect	text135,global,reloc=2,class=CODE,delta=1,inline
   161                           	psect	text136,global,reloc=2,class=CODE,delta=1
   162                           	psect	text137,global,reloc=2,class=CODE,delta=1
   163                           	psect	text138,global,reloc=2,class=CODE,delta=1
   164                           	psect	text139,global,reloc=2,class=CODE,delta=1,inline
   165                           	psect	text140,global,reloc=2,class=CODE,delta=1,inline
   166                           	psect	text141,global,reloc=2,class=CODE,delta=1
   167                           	psect	text142,global,reloc=2,class=CODE,delta=1
   168                           	psect	text143,global,reloc=2,class=CODE,delta=1
   169                           	psect	text144,global,reloc=2,class=CODE,delta=1
   170                           	psect	text145,global,reloc=2,class=CODE,delta=1
   171                           	psect	text146,global,reloc=2,class=CODE,delta=1
   172                           	psect	text147,global,reloc=2,class=CODE,delta=1
   173                           	psect	text148,global,reloc=2,class=CODE,delta=1
   174                           	psect	text149,global,reloc=2,class=CODE,delta=1
   175                           	psect	text150,global,reloc=2,class=CODE,delta=1
   176                           	psect	text151,global,reloc=2,class=CODE,delta=1
   177                           	psect	text152,global,reloc=2,class=CODE,delta=1
   178                           	psect	text153,global,reloc=2,class=CODE,delta=1
   179                           	psect	text154,global,reloc=2,class=CODE,delta=1
   180                           	psect	text155,global,reloc=2,class=CODE,delta=1
   181                           	psect	text156,global,reloc=2,class=CODE,delta=1
   182                           	psect	text157,global,reloc=2,class=CODE,delta=1,inline
   183                           	psect	text158,global,reloc=2,class=CODE,delta=1,inline
   184                           	psect	text159,global,reloc=2,class=CODE,delta=1,inline
   185                           	psect	text160,global,reloc=2,class=CODE,delta=1,inline
   186                           	psect	text161,global,reloc=2,class=CODE,delta=1,inline
   187                           	psect	text162,global,reloc=2,class=CODE,delta=1,inline
   188                           	psect	text163,global,reloc=2,class=CODE,delta=1,inline
   189                           	psect	text164,global,reloc=2,class=CODE,delta=1
   190                           	psect	text165,global,reloc=2,class=CODE,delta=1
   191                           	psect	text166,global,reloc=2,class=CODE,delta=1
   192                           	psect	text167,global,reloc=2,class=CODE,delta=1
   193                           	psect	text168,global,reloc=2,class=CODE,delta=1
   194                           	psect	text169,global,reloc=2,class=CODE,delta=1
   195                           	psect	text170,global,reloc=2,class=CODE,delta=1
   196                           	psect	text171,global,reloc=2,class=CODE,delta=1
   197                           	psect	text172,global,reloc=2,class=CODE,delta=1
   198                           	psect	text173,global,reloc=2,class=CODE,delta=1
   199                           	psect	text174,global,reloc=2,class=CODE,delta=1
   200                           	psect	text175,global,reloc=2,class=CODE,delta=1
   201                           	psect	text176,global,reloc=2,class=CODE,delta=1
   202                           	psect	text177,global,reloc=2,class=CODE,delta=1
   203                           	psect	text178,global,reloc=2,class=CODE,delta=1
   204                           	psect	text179,global,reloc=2,class=CODE,delta=1,inline
   205                           	psect	text180,global,reloc=2,class=CODE,delta=1,inline
   206                           	psect	text181,global,reloc=2,class=CODE,delta=1,inline
   207                           	psect	text182,global,reloc=2,class=CODE,delta=1
   208                           	psect	text183,global,reloc=2,class=CODE,delta=1,inline
   209                           	psect	text184,global,reloc=2,class=CODE,delta=1,inline
   210                           	psect	text185,global,reloc=2,class=CODE,delta=1,inline
   211                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   212                           	psect	text187,global,reloc=2,class=CODE,delta=1
   213                           	psect	text188,global,reloc=2,class=CODE,delta=1
   214                           	psect	text189,global,reloc=2,class=CODE,delta=1
   215                           	psect	text190,global,reloc=2,class=CODE,delta=1
   216                           	psect	text191,global,reloc=2,class=CODE,delta=1
   217                           	psect	text192,global,reloc=2,class=CODE,delta=1
   218                           	psect	text193,global,reloc=2,class=CODE,delta=1
   219                           	psect	text194,global,reloc=2,class=CODE,delta=1
   220                           	psect	text195,global,reloc=2,class=CODE,delta=1
   221                           	psect	text196,global,reloc=2,class=CODE,delta=1
   222                           	psect	text197,global,reloc=2,class=CODE,delta=1
   223                           	psect	text198,global,reloc=2,class=CODE,delta=1
   224                           	psect	text199,global,reloc=2,class=CODE,delta=1
   225                           	psect	text200,global,reloc=2,class=CODE,delta=1
   226                           	psect	text201,global,reloc=2,class=CODE,delta=1
   227                           	psect	text202,global,reloc=2,class=CODE,delta=1
   228                           	psect	text203,global,reloc=2,class=CODE,delta=1
   229                           	psect	text204,global,reloc=2,class=CODE,delta=1
   230                           	psect	text205,global,reloc=2,class=CODE,delta=1
   231                           	psect	text206,global,reloc=2,class=CODE,delta=1
   232                           	psect	text207,global,reloc=2,class=CODE,delta=1
   233                           	psect	text208,global,reloc=2,class=CODE,delta=1
   234                           	psect	text209,global,reloc=2,class=CODE,delta=1
   235                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   236                           	psect	text210,global,reloc=2,class=CODE,delta=1
   237                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   238                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   239                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   240                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   241  0000                     
   242                           ; Version 2.36
   243                           ; Generated 28/01/2022 GMT
   244                           ; 
   245                           ; Copyright © 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
   246                           ; All rights reserved.
   247                           ; 
   248                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   249                           ; 
   250                           ; Redistribution and use in source and binary forms, with or without modification, are
   251                           ; permitted provided that the following conditions are met:
   252                           ; 
   253                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   254                           ;        conditions and the following disclaimer.
   255                           ; 
   256                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   257                           ;        of conditions and the following disclaimer in the documentation and/or other
   258                           ;        materials provided with the distribution. Publication is not required when
   259                           ;        this file is used in an embedded application.
   260                           ; 
   261                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   262                           ;        software without specific prior written permission.
   263                           ; 
   264                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   265                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   266                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   267                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   268                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   269                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   270                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   271                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   272                           ; 
   273                           ; 
   274                           ; Code-generator required, PIC18F46K40 Definitions
   275                           ; 
   276                           ; SFR Addresses
   277  0000                     
   278                           	psect	idataBANK0
   279  009E92                     __pidataBANK0:
   280                           	callstack 0
   281                           
   282                           ;initializer for _auxCounter
   283  009E92  03E8               	dw	1000
   284                           
   285                           	psect	idataBANK1
   286  009E9C                     __pidataBANK1:
   287                           	callstack 0
   288                           
   289                           ;initializer for _firstselectflag
   290  009E9C  01                 	db	1
   291                           
   292                           	psect	idataBANK2
   293  009E30                     __pidataBANK2:
   294                           	callstack 0
   295                           
   296                           ;initializer for _tempCounter
   297  009E30  3DDD               	dw	15837
   298  009E32  000F               	dw	15
   299                           
   300                           ;initializer for _zeroCrossingWaitTime
   301  009E34  19                 	db	25
   302  009E35  19                 	db	25
   303                           
   304                           	psect	idataBANK3
   305  009A3A                     __pidataBANK3:
   306                           	callstack 0
   307                           
   308                           ;initializer for _DispTable
   309  009A3A  6F                 	db	111
   310  009A3B  21                 	db	33
   311  009A3C  76                 	db	118
   312  009A3D  73                 	db	115
   313  009A3E  39                 	db	57
   314  009A3F  5B                 	db	91
   315  009A40  5F                 	db	95
   316  009A41  61                 	db	97
   317  009A42  7F                 	db	127
   318  009A43  7B                 	db	123
   319  009A44  7D                 	db	125
   320  009A45  7F                 	db	127
   321  009A46  4E                 	db	78
   322  009A47  37                 	db	55
   323  009A48  5E                 	db	94
   324  009A49  5C                 	db	92
   325  009A4A  7C                 	db	124
   326  009A4B  3D                 	db	61
   327  009A4C  0E                 	db	14
   328  009A4D  2F                 	db	47
   329  009A4E  14                 	db	20
   330  009A4F  1E                 	db	30
   331  009A50  07                 	db	7
   332  009A51  45                 	db	69
   333  009A52  10                 	db	16
   334  009A53  0C                 	db	12
   335  009A54  40                 	db	64
   336  009A55  20                 	db	32
   337  009A56  01                 	db	1
   338  009A57  02                 	db	2
   339  009A58  04                 	db	4
   340  009A59  08                 	db	8
   341  009A5A  00                 	db	0
   342  009A5B  3B                 	db	59
   343  009A5C  1F                 	db	31
   344  009A5D  16                 	db	22
   345  009A5E  17                 	db	23
   346                           
   347                           	psect	smallconst
   348  000F00                     __psmallconst:
   349                           	callstack 0
   350  000F00  00                 	db	0
   351  000F01                     _i2c1_fsmStateTable:
   352                           	callstack 0
   353  000F01  D6                 	db	low _I2C1_DO_IDLE
   354  000F02  9D                 	db	high _I2C1_DO_IDLE
   355  000F03  42                 	db	low _I2C1_DO_SEND_ADR_READ
   356  000F04  9D                 	db	high _I2C1_DO_SEND_ADR_READ
   357  000F05  34                 	db	low _I2C1_DO_SEND_ADR_WRITE
   358  000F06  9D                 	db	high _I2C1_DO_SEND_ADR_WRITE
   359  000F07  82                 	db	low _I2C1_DO_TX
   360  000F08  82                 	db	high _I2C1_DO_TX
   361  000F09  20                 	db	low _I2C1_DO_RX
   362  000F0A  87                 	db	high _I2C1_DO_RX
   363  000F0B  CC                 	db	low _I2C1_DO_RCEN
   364  000F0C  9D                 	db	high _I2C1_DO_RCEN
   365  000F0D  3C                 	db	low _I2C1_DO_TX_EMPTY
   366  000F0E  8D                 	db	high _I2C1_DO_TX_EMPTY
   367  000F0F  20                 	db	low _I2C1_DO_SEND_RESTART_READ
   368  000F10  9E                 	db	high _I2C1_DO_SEND_RESTART_READ
   369  000F11  18                 	db	low _I2C1_DO_SEND_RESTART_WRITE
   370  000F12  9E                 	db	high _I2C1_DO_SEND_RESTART_WRITE
   371  000F13  10                 	db	low _I2C1_DO_SEND_RESTART
   372  000F14  9E                 	db	high _I2C1_DO_SEND_RESTART
   373  000F15  08                 	db	low _I2C1_DO_SEND_STOP
   374  000F16  9E                 	db	high _I2C1_DO_SEND_STOP
   375  000F17  00                 	db	low _I2C1_DO_RX_ACK
   376  000F18  9E                 	db	high _I2C1_DO_RX_ACK
   377  000F19  F8                 	db	low _I2C1_DO_RX_NACK_STOP
   378  000F1A  9D                 	db	high _I2C1_DO_RX_NACK_STOP
   379  000F1B  F0                 	db	low _I2C1_DO_RX_NACK_RESTART
   380  000F1C  9D                 	db	high _I2C1_DO_RX_NACK_RESTART
   381  000F1D  C2                 	db	low _I2C1_DO_RESET
   382  000F1E  9D                 	db	high _I2C1_DO_RESET
   383  000F1F  50                 	db	low _I2C1_DO_ADDRESS_NACK
   384  000F20  92                 	db	high _I2C1_DO_ADDRESS_NACK
   385  000F21                     __end_of_i2c1_fsmStateTable:
   386                           	callstack 0
   387  0000                     _T2CON	set	4029
   388  0000                     _T1CON	set	4047
   389  0000                     _T1CLK	set	4050
   390  0000                     _T1GATE	set	4049
   391  0000                     _T0CON0	set	4053
   392  0000                     _INLVLD	set	3874
   393  0000                     _SLRCOND	set	3875
   394  0000                     _ODCOND	set	3876
   395  0000                     _WPUD	set	3877
   396  0000                     _TRISD	set	3979
   397  0000                     _TRISC	set	3978
   398  0000                     _TRISB	set	3977
   399  0000                     _TRISA	set	3976
   400  0000                     _TRISE	set	3980
   401  0000                     _LATC	set	3973
   402  0000                     _LATB	set	3972
   403  0000                     _OSCTUNE	set	3805
   404  0000                     _OSCFRQ	set	3806
   405  0000                     _ADERRL	set	3950
   406  0000                     _ADERRH	set	3951
   407  0000                     _ADPREVL	set	3937
   408  0000                     _ADPREVH	set	3938
   409  0000                     _ADFLTRL	set	3954
   410  0000                     _ADFLTRH	set	3955
   411  0000                     _ADACCL	set	3952
   412  0000                     _ADACCH	set	3953
   413  0000                     _ADCNT	set	3943
   414  0000                     _ADRESL	set	3939
   415  0000                     _ADRESH	set	3940
   416  0000                     _ADACQ	set	3932
   417  0000                     _ADCON0	set	3936
   418  0000                     _ADCLK	set	3927
   419  0000                     _ADSTAT	set	3941
   420  0000                     _ADCON3	set	3931
   421  0000                     _ADCON2	set	3930
   422  0000                     _ADPRE	set	3934
   423  0000                     _ADSTPTH	set	3945
   424  0000                     _ADUTHH	set	3949
   425  0000                     _ADUTHL	set	3948
   426  0000                     _ADLTHH	set	3947
   427  0000                     _SP1BRGH	set	3996
   428  0000                     _TX1STA	set	3998
   429  000F21  00                 	db	0	; dummy byte at the end
   430  0000                     
   431                           	psect	nvBANK1
   432  0001FE                     __pnvBANK1:
   433                           	callstack 0
   434  0001FE                     _eusart1TxBufferRemaining:
   435                           	callstack 0
   436  0001FE                     	ds	1
   437                           
   438                           	psect	nvBANK2
   439  0002DB                     __pnvBANK2:
   440                           	callstack 0
   441  0002DB                     _TMR2_InterruptHandler:
   442                           	callstack 0
   443  0002DB                     	ds	2
   444  0002DD                     _TMR1_InterruptHandler:
   445                           	callstack 0
   446  0002DD                     	ds	2
   447  0002DF                     _timer1ReloadVal:
   448                           	callstack 0
   449  0002DF                     	ds	2
   450  0002E1                     _TMR0_InterruptHandler:
   451                           	callstack 0
   452  0002E1                     	ds	2
   453  0002E3                     _EUSART1_ErrorHandler:
   454                           	callstack 0
   455  0002E3                     	ds	2
   456  0002E5                     _EUSART1_OverrunErrorHandler:
   457                           	callstack 0
   458  0002E5                     	ds	2
   459  0002E7                     _EUSART1_FramingErrorHandler:
   460                           	callstack 0
   461  0002E7                     	ds	2
   462  0002E9                     _EUSART1_RxDefaultInterruptHandler:
   463                           	callstack 0
   464  0002E9                     	ds	2
   465  0002EB                     _EUSART1_TxDefaultInterruptHandler:
   466                           	callstack 0
   467  0002EB                     	ds	2
   468  0000                     _WDTCON0bits	set	3794
   469  0000                     _TMR0IE	set	30229
   470  0000                     _TMR0IF	set	30293
   471  0000                     _LATEbits	set	3975
   472  0000                     _LATDbits	set	3974
   473  0000                     _LATAbits	set	3971
   474  0000                     _LATCbits	set	3973
   475  0000                     _PORTB	set	3982
   476  0000                     _T1CONbits	set	4047
   477  0000                     _SSP1CON2bits	set	3991
   478  0000                     _SSP1CON1bits	set	3990
   479  0000                     _ADCON0bits	set	3936
   480  0000                     _RC1STAbits	set	3997
   481  0000                     _GIE	set	32663
   482  0000                     _RX1PPS	set	3765
   483  0000                     _SSP1CLKPPS	set	3767
   484  0000                     _PIE0bits	set	3778
   485  0000                     _PIE3bits	set	3781
   486  0000                     _PIE4bits	set	3782
   487  0000                     _PIR0bits	set	3786
   488  0000                     _PIR3bits	set	3789
   489  0000                     _ADACT	set	3926
   490  0000                     _ADREF	set	3928
   491  0000                     _ADCON1	set	3929
   492  0000                     _ADCAP	set	3933
   493  0000                     _ADPCH	set	3935
   494  0000                     _ADRPT	set	3942
   495  0000                     _ADSTPTL	set	3944
   496  0000                     _ADLTHL	set	3946
   497  0000                     _RC1REG	set	3993
   498  0000                     _TX1REG	set	3994
   499  0000                     _SP1BRGL	set	3995
   500  0000                     _RC1STA	set	3997
   501  0000                     _BAUD1CON	set	3999
   502  0000                     _T2TMR	set	4027
   503  0000                     _T2PR	set	4028
   504  0000                     _T2HLT	set	4030
   505  0000                     _T2CLKCON	set	4031
   506  0000                     _TMR1L	set	4045
   507  0000                     _TMR1H	set	4046
   508  0000                     _T1GCON	set	4048
   509  0000                     _TMR0L	set	4051
   510  0000                     _TMR0H	set	4052
   511  0000                     _T0CON1	set	4054
   512  0000                     _PCON0bits	set	4055
   513  0000                     _INTCONbits	set	4082
   514  0000                     _LATA	set	3971
   515  0000                     _LATD	set	3974
   516  0000                     _LATE	set	3975
   517  0000                     _SSP1BUF	set	3986
   518  0000                     _SSP1ADD	set	3987
   519  0000                     _SSP1STAT	set	3989
   520  0000                     _SSP1CON2	set	3991
   521  0000                     _SSP1CON1	set	3990
   522  0000                     _WDTCON0	set	3794
   523  0000                     _OSCCON1	set	3800
   524  0000                     _PIR4bits	set	3790
   525  0000                     _OSCCON3	set	3802
   526  0000                     _OSCEN	set	3804
   527  0000                     _PMD0	set	3809
   528  0000                     _RC3PPS	set	3834
   529  0000                     _INLVLA	set	3853
   530  0000                     _SLRCONA	set	3854
   531  0000                     _ODCONA	set	3855
   532  0000                     _WPUA	set	3856
   533  0000                     _ANSELA	set	3857
   534  0000                     _ANSELB	set	3865
   535  0000                     _ANSELC	set	3873
   536  0000                     _ANSELD	set	3878
   537  0000                     _PMD5	set	3814
   538  0000                     _PMD4	set	3813
   539  0000                     _PMD3	set	3812
   540  0000                     _PMD2	set	3811
   541  0000                     _PMD1	set	3810
   542  0000                     _WDTCON1	set	3795
   543  0000                     _PORTEbits	set	3985
   544  0000                     _PORTBbits	set	3982
   545  0000                     _PORTAbits	set	3981
   546  0000                     _INLVLE	set	3882
   547  0000                     _SLRCONE	set	3883
   548  0000                     _ODCONE	set	3884
   549  0000                     _WPUE	set	3885
   550  0000                     _ANSELE	set	3886
   551  0000                     _INLVLC	set	3869
   552  0000                     _SLRCONC	set	3870
   553  0000                     _ODCONC	set	3871
   554  0000                     _WPUC	set	3872
   555  0000                     _INLVLB	set	3861
   556  0000                     _SLRCONB	set	3862
   557  0000                     _ODCONB	set	3863
   558  0000                     _WPUB	set	3864
   559  0000                     _IOCBN3	set	30875
   560  0000                     _IOCBP3	set	30883
   561  0000                     _SSP1DATPPS	set	3768
   562  0000                     _RC7PPS	set	3838
   563  0000                     _RC4PPS	set	3835
   564  0000                     _T2RST	set	4032
   565                           
   566                           ; #config settings
   567                           
   568                           	psect	cinit
   569  007C70                     __pcinit:
   570                           	callstack 0
   571  007C70                     start_initialization:
   572                           	callstack 0
   573  007C70                     __initialization:
   574                           	callstack 0
   575                           
   576                           ; Initialize objects allocated to BANK3 (37 bytes)
   577                           ; load TBLPTR registers with __pidataBANK3
   578  007C70  0E3A               	movlw	low __pidataBANK3
   579  007C72  6EF6               	movwf	tblptrl,c
   580  007C74  0E9A               	movlw	high __pidataBANK3
   581  007C76  6EF7               	movwf	tblptrh,c
   582  007C78  0E00               	movlw	low (__pidataBANK3 shr (0+16))
   583  007C7A  6EF8               	movwf	tblptru,c
   584  007C7C  EE03  F0D2         	lfsr	0,__pdataBANK3
   585  007C80  EE10 F025          	lfsr	1,37
   586  007C84                     copy_data0:
   587  007C84  0009               	tblrd		*+
   588  007C86  CFF5 FFEE          	movff	tablat,postinc0
   589  007C8A  50E5               	movf	postdec1,w,c
   590  007C8C  50E1               	movf	fsr1l,w,c
   591  007C8E  E1FA               	bnz	copy_data0
   592                           
   593                           ; Initialize objects allocated to BANK2 (6 bytes)
   594                           ; load TBLPTR registers with __pidataBANK2
   595  007C90  0E30               	movlw	low __pidataBANK2
   596  007C92  6EF6               	movwf	tblptrl,c
   597  007C94  0E9E               	movlw	high __pidataBANK2
   598  007C96  6EF7               	movwf	tblptrh,c
   599  007C98  0E00               	movlw	low (__pidataBANK2 shr (0+16))
   600  007C9A  6EF8               	movwf	tblptru,c
   601  007C9C  EE02  F0F4         	lfsr	0,__pdataBANK2
   602  007CA0  EE10 F006          	lfsr	1,6
   603  007CA4                     copy_data1:
   604  007CA4  0009               	tblrd		*+
   605  007CA6  CFF5 FFEE          	movff	tablat,postinc0
   606  007CAA  50E5               	movf	postdec1,w,c
   607  007CAC  50E1               	movf	fsr1l,w,c
   608  007CAE  E1FA               	bnz	copy_data1
   609                           
   610                           ; Initialize objects allocated to BANK1 (1 bytes)
   611                           ; load TBLPTR registers with __pidataBANK1
   612  007CB0  0E9C               	movlw	low __pidataBANK1
   613  007CB2  6EF6               	movwf	tblptrl,c
   614  007CB4  0E9E               	movlw	high __pidataBANK1
   615  007CB6  6EF7               	movwf	tblptrh,c
   616  007CB8  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   617  007CBA  6EF8               	movwf	tblptru,c
   618  007CBC  0009               	tblrd		*+	;fetch initializer
   619  007CBE  CFF5 F1FF          	movff	tablat,__pdataBANK1
   620                           
   621                           ; Initialize objects allocated to BANK0 (2 bytes)
   622                           ; load TBLPTR registers with __pidataBANK0
   623  007CC2  0E92               	movlw	low __pidataBANK0
   624  007CC4  6EF6               	movwf	tblptrl,c
   625  007CC6  0E9E               	movlw	high __pidataBANK0
   626  007CC8  6EF7               	movwf	tblptrh,c
   627  007CCA  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   628  007CCC  6EF8               	movwf	tblptru,c
   629  007CCE  0009               	tblrd		*+	;fetch initializer
   630  007CD0  CFF5 F0FC          	movff	tablat,__pdataBANK0
   631  007CD4  0009               	tblrd		*+	;fetch initializer
   632  007CD6  CFF5 F0FD          	movff	tablat,__pdataBANK0+1
   633                           
   634                           ; Clear objects allocated to BANK3 (210 bytes)
   635  007CDA  EE03  F000         	lfsr	0,__pbssBANK3
   636  007CDE  0ED2               	movlw	210
   637  007CE0                     clear_0:
   638  007CE0  6AEE               	clrf	postinc0,c
   639  007CE2  06E8               	decf	wreg,f,c
   640  007CE4  E1FD               	bnz	clear_0
   641                           
   642                           ; Clear objects allocated to BANK2 (219 bytes)
   643  007CE6  EE02  F000         	lfsr	0,__pbssBANK2
   644  007CEA  0EDB               	movlw	219
   645  007CEC                     clear_1:
   646  007CEC  6AEE               	clrf	postinc0,c
   647  007CEE  06E8               	decf	wreg,f,c
   648  007CF0  E1FD               	bnz	clear_1
   649                           
   650                           ; Clear objects allocated to BANK1 (254 bytes)
   651  007CF2  EE01  F000         	lfsr	0,__pbssBANK1
   652  007CF6  0EFE               	movlw	254
   653  007CF8                     clear_2:
   654  007CF8  6AEE               	clrf	postinc0,c
   655  007CFA  06E8               	decf	wreg,f,c
   656  007CFC  E1FD               	bnz	clear_2
   657                           
   658                           ; Clear objects allocated to BANK0 (120 bytes)
   659  007CFE  EE00  F060         	lfsr	0,__pbssBANK0
   660  007D02  0E78               	movlw	120
   661  007D04                     clear_3:
   662  007D04  6AEE               	clrf	postinc0,c
   663  007D06  06E8               	decf	wreg,f,c
   664  007D08  E1FD               	bnz	clear_3
   665                           
   666                           ; Clear objects allocated to COMRAM (21 bytes)
   667  007D0A  EE00  F03B         	lfsr	0,__pbssCOMRAM
   668  007D0E  0E15               	movlw	21
   669  007D10                     clear_4:
   670  007D10  6AEE               	clrf	postinc0,c
   671  007D12  06E8               	decf	wreg,f,c
   672  007D14  E1FD               	bnz	clear_4
   673  007D16                     end_of_initialization:
   674                           	callstack 0
   675  007D16                     __end_of__initialization:
   676                           	callstack 0
   677  007D16  9050               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   678  007D18  9250               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   679  007D1A  0100               	movlb	0
   680  007D1C  EF4A  F034         	goto	_main	;jump to C main() function
   681                           
   682                           	psect	bssCOMRAM
   683  00003B                     __pbssCOMRAM:
   684                           	callstack 0
   685  00003B                     _rfCMD:
   686                           	callstack 0
   687  00003B                     	ds	11
   688  000046                     _edit_Param:
   689                           	callstack 0
   690  000046                     	ds	6
   691  00004C                     _button_struct:
   692                           	callstack 0
   693  00004C                     	ds	4
   694                           
   695                           	psect	bssBANK0
   696  000060                     __pbssBANK0:
   697                           	callstack 0
   698  000060                     _learn_st:
   699                           	callstack 0
   700  000060                     	ds	18
   701  000072                     _dispStruct:
   702                           	callstack 0
   703  000072                     	ds	6
   704  000078                     _brakeElectric_st:
   705                           	callstack 0
   706  000078                     	ds	2
   707  00007A                     _pointSync:
   708                           	callstack 0
   709  00007A                     	ds	2
   710  00007C                     _Hop:
   711                           	callstack 0
   712  00007C                     	ds	2
   713  00007E                     _RFcount:
   714                           	callstack 0
   715  00007E                     	ds	2
   716  000080                     _temp:
   717                           	callstack 0
   718  000080                     	ds	1
   719  000081                     _control_limit_switch:
   720                           	callstack 0
   721  000081                     	ds	1
   722  000082                     _fullmotorPower:
   723                           	callstack 0
   724  000082                     	ds	1
   725  000083                     _stateMotor:
   726                           	callstack 0
   727  000083                     	ds	1
   728  000084                     _zeroCrossingWaitTimeIdx:
   729                           	callstack 0
   730  000084                     	ds	1
   731  000085                     _programmer_enable:
   732                           	callstack 0
   733  000085                     	ds	1
   734  000086                     readbutton@key1:
   735                           	callstack 0
   736  000086                     	ds	1
   737  000087                     readRFButtons@keyType:
   738                           	callstack 0
   739  000087                     	ds	1
   740  000088                     readRFButtons@key1:
   741                           	callstack 0
   742  000088                     	ds	1
   743  000089                     _RFBit:
   744                           	callstack 0
   745  000089                     	ds	1
   746  00008A                     _RFFull_12BIT:
   747                           	callstack 0
   748  00008A                     	ds	1
   749  00008B                     _RFFull:
   750                           	callstack 0
   751  00008B                     	ds	1
   752  00008C                     _BitCount:
   753                           	callstack 0
   754  00008C                     	ds	1
   755  00008D                     _Bptr:
   756                           	callstack 0
   757  00008D                     	ds	1
   758  00008E                     _numberOfErrorCurrent:
   759                           	callstack 0
   760  00008E                     	ds	1
   761  00008F                     _idxAdcZeroAquisition:
   762                           	callstack 0
   763  00008F                     	ds	1
   764  000090                     _idxSaveEnergyADCHist:
   765                           	callstack 0
   766  000090                     	ds	1
   767  000091                     _idxAdcAquisition:
   768                           	callstack 0
   769  000091                     	ds	1
   770  000092                     _Counterchoose:
   771                           	callstack 0
   772  000092                     	ds	1
   773  000093                     _eusart1RxCount:
   774                           	callstack 0
   775  000093                     	ds	1
   776  000094                     _eusart1RxTail:
   777                           	callstack 0
   778  000094                     	ds	1
   779  000095                     _eusart1RxHead:
   780                           	callstack 0
   781  000095                     	ds	1
   782  000096                     _eusart1TxTail:
   783                           	callstack 0
   784  000096                     	ds	1
   785  000097                     _eusart1TxHead:
   786                           	callstack 0
   787  000097                     	ds	1
   788  000098                     _var_sys_NVM:
   789                           	callstack 0
   790  000098                     	ds	64
   791                           
   792                           	psect	dataBANK0
   793  0000FC                     __pdataBANK0:
   794                           	callstack 0
   795  0000FC                     _auxCounter:
   796                           	callstack 0
   797  0000FC                     	ds	2
   798                           
   799                           	psect	bssBANK1
   800  000100                     __pbssBANK1:
   801                           	callstack 0
   802  000100                     _var_sys:
   803                           	callstack 0
   804  000100                     	ds	81
   805  000151                     _menu_st:
   806                           	callstack 0
   807  000151                     	ds	25
   808  00016A                     _security:
   809                           	callstack 0
   810  00016A                     	ds	11
   811  000175                     _fimdecurso:
   812                           	callstack 0
   813  000175                     	ds	6
   814  00017B                     _powerControl_st:
   815                           	callstack 0
   816  00017B                     	ds	6
   817  000181                     readRFButtons@serial:
   818                           	callstack 0
   819  000181                     	ds	4
   820  000185                     eusartparser@buffer:
   821                           	callstack 0
   822  000185                     	ds	2
   823  000187                     _NextHop:
   824                           	callstack 0
   825  000187                     	ds	2
   826  000189                     readRFButtons@rollingCode:
   827                           	callstack 0
   828  000189                     	ds	2
   829  00018B                     _BufferRF_12BIT:
   830                           	callstack 0
   831  00018B                     	ds	2
   832  00018D                     _erroranterior:
   833                           	callstack 0
   834  00018D                     	ds	2
   835  00018F                     eusartparser@save_f:
   836                           	callstack 0
   837  00018F                     	ds	1
   838  000190                     _aux_in_auto_close:
   839                           	callstack 0
   840  000190                     	ds	1
   841  000191                     _aux_i:
   842                           	callstack 0
   843  000191                     	ds	1
   844  000192                     _Abertura_pedonal:
   845                           	callstack 0
   846  000192                     	ds	1
   847  000193                     _temppower:
   848                           	callstack 0
   849  000193                     	ds	1
   850  000194                     _difTime:
   851                           	callstack 0
   852  000194                     	ds	1
   853  000195                     _StateTRIAC:
   854                           	callstack 0
   855  000195                     	ds	1
   856  000196                     _waitZeroPeak:
   857                           	callstack 0
   858  000196                     	ds	1
   859  000197                     _zeroCrossing:
   860                           	callstack 0
   861  000197                     	ds	1
   862  000198                     _zeroCrossingLength:
   863                           	callstack 0
   864  000198                     	ds	1
   865  000199                     _lastKey:
   866                           	callstack 0
   867  000199                     	ds	1
   868  00019A                     _F2Chance:
   869                           	callstack 0
   870  00019A                     	ds	1
   871  00019B                     readbutton@key2:
   872                           	callstack 0
   873  00019B                     	ds	1
   874  00019C                     readRFButtons@typeRemote:
   875                           	callstack 0
   876  00019C                     	ds	1
   877  00019D                     _RFstate:
   878                           	callstack 0
   879  00019D                     	ds	1
   880  00019E                     _eusart1RxLastError:
   881                           	callstack 0
   882  00019E                     	ds	1
   883  00019F                     _ts_system:
   884                           	callstack 0
   885  00019F                     	ds	72
   886  0001E7                     _controlGate_stateMachine:
   887                           	callstack 0
   888  0001E7                     	ds	11
   889  0001F2                     _main_stateMachine:
   890                           	callstack 0
   891  0001F2                     	ds	11
   892  0001FD                     setValueToEdit@value:
   893                           	callstack 0
   894  0001FD                     	ds	1
   895                           
   896                           	psect	dataBANK1
   897  0001FF                     __pdataBANK1:
   898                           	callstack 0
   899  0001FF                     _firstselectflag:
   900                           	callstack 0
   901  0001FF                     	ds	1
   902                           
   903                           	psect	bssBANK2
   904  000200                     __pbssBANK2:
   905                           	callstack 0
   906  000200                     _ADC_array:
   907                           	callstack 0
   908  000200                     	ds	60
   909  00023C                     _I2C1_Status:
   910                           	callstack 0
   911  00023C                     	ds	36
   912  000260                     _SumEnergyADCHist_array:
   913                           	callstack 0
   914  000260                     	ds	20
   915  000274                     _eusart1RxStatusBuffer:
   916                           	callstack 0
   917  000274                     	ds	8
   918  00027C                     _eusart1RxBuffer:
   919                           	callstack 0
   920  00027C                     	ds	8
   921  000284                     _eusart1TxBuffer:
   922                           	callstack 0
   923  000284                     	ds	8
   924  00028C                     _EHop:
   925                           	callstack 0
   926  00028C                     	ds	2
   927  00028E                     _timer0ReloadVal16bit:
   928                           	callstack 0
   929  00028E                     	ds	2
   930  000290                     _classic_data:
   931                           	callstack 0
   932  000290                     	ds	16
   933  0002A0                     _memoryTEMP:
   934                           	callstack 0
   935  0002A0                     	ds	16
   936  0002B0                     _controlLearning_stateMachine:
   937                           	callstack 0
   938  0002B0                     	ds	11
   939  0002BB                     _menuConfiguration_stateMachine:
   940                           	callstack 0
   941  0002BB                     	ds	11
   942  0002C6                     _BufferRF:
   943                           	callstack 0
   944  0002C6                     	ds	9
   945  0002CF                     _DKEY:
   946                           	callstack 0
   947  0002CF                     	ds	8
   948  0002D7                     NormalKeyGen@SEED:
   949                           	callstack 0
   950  0002D7                     	ds	4
   951                           
   952                           	psect	dataBANK2
   953  0002F4                     __pdataBANK2:
   954                           	callstack 0
   955  0002F4                     _tempCounter:
   956                           	callstack 0
   957  0002F4                     	ds	4
   958  0002F8                     _zeroCrossingWaitTime:
   959                           	callstack 0
   960  0002F8                     	ds	2
   961                           
   962                           	psect	bssBANK3
   963  000300                     __pbssBANK3:
   964                           	callstack 0
   965  000300                     _listSyncValues:
   966                           	callstack 0
   967  000300                     	ds	150
   968  000396                     _ADC_zero_array:
   969                           	callstack 0
   970  000396                     	ds	60
   971                           
   972                           	psect	dataBANK3
   973  0003D2                     __pdataBANK3:
   974                           	callstack 0
   975  0003D2                     _DispTable:
   976                           	callstack 0
   977  0003D2                     	ds	37
   978                           
   979                           	psect	cstackBANK2
   980  0002ED                     __pcstackBANK2:
   981                           	callstack 0
   982  0002ED                     main@package:
   983                           	callstack 0
   984                           
   985                           ; 7 bytes @ 0x0
   986  0002ED                     	ds	7
   987                           
   988                           	psect	cstackBANK0
   989  0000D8                     __pcstackBANK0:
   990                           	callstack 0
   991  0000D8                     ??_keeloq_classic_decrypt_packet:
   992  0000D8                     ??_setPositionInvertionInClosing:
   993  0000D8                     ??_validateRemoteSerialNumber:
   994  0000D8                     ??_RemoveSerial:
   995  0000D8                     SaveNVM_VarSystem@page:
   996                           	callstack 0
   997  0000D8                     getStateOpenPosition@state:
   998                           	callstack 0
   999  0000D8                     saveNewSerial@tempSerial:
  1000                           	callstack 0
  1001                           
  1002                           ; 4 bytes @ 0x0
  1003  0000D8                     	ds	1
  1004  0000D9                     getStateOpenPosition@stateMotor:
  1005                           	callstack 0
  1006  0000D9                     SaveNVM_VarSystem@tempAdd:
  1007                           	callstack 0
  1008                           
  1009                           ; 2 bytes @ 0x1
  1010  0000D9                     	ds	1
  1011  0000DA                     ??_controlVelocity:
  1012  0000DA                     RemoveSerial@cmdType:
  1013                           	callstack 0
  1014                           
  1015                           ; 1 bytes @ 0x2
  1016  0000DA                     	ds	1
  1017  0000DB                     SaveNVM_VarSystem@point:
  1018                           	callstack 0
  1019  0000DB                     RemoveSerial@tempSerial:
  1020                           	callstack 0
  1021                           
  1022                           ; 4 bytes @ 0x3
  1023  0000DB                     	ds	1
  1024  0000DC                     ??_setValueToEdit:
  1025  0000DC                     saveNewSerial@position:
  1026                           	callstack 0
  1027  0000DC                     sm_execute_ControlLearning@psm:
  1028                           	callstack 0
  1029                           
  1030                           ; 2 bytes @ 0x4
  1031  0000DC                     	ds	1
  1032  0000DD                     ??_saveNewSerial:
  1033                           
  1034                           ; 1 bytes @ 0x5
  1035  0000DD                     	ds	1
  1036  0000DE                     ??_sm_execute_ControlLearning:
  1037  0000DE                     setValueToEdit@menuType:
  1038                           	callstack 0
  1039                           
  1040                           ; 1 bytes @ 0x6
  1041  0000DE                     	ds	1
  1042  0000DF                     setValueToEdit@posindex:
  1043                           	callstack 0
  1044                           
  1045                           ; 1 bytes @ 0x7
  1046  0000DF                     	ds	1
  1047  0000E0                     ??_controlSelectRemote:
  1048  0000E0                     setValueToEdit@posindex_6979:
  1049                           	callstack 0
  1050  0000E0                     keeloqDecryptPacket@data:
  1051                           	callstack 0
  1052  0000E0                     DecryptPacket_12BIT@data:
  1053                           	callstack 0
  1054  0000E0                     eusartparser@package:
  1055                           	callstack 0
  1056                           
  1057                           ; 2 bytes @ 0x8
  1058  0000E0                     	ds	1
  1059  0000E1                     setValueToEdit@haveValueToEdit:
  1060                           	callstack 0
  1061  0000E1                     controlSelectRemote@validSerial:
  1062                           	callstack 0
  1063                           
  1064                           ; 1 bytes @ 0x9
  1065  0000E1                     	ds	1
  1066  0000E2                     ??_eusartparser:
  1067  0000E2                     controlSelectRemote@pos:
  1068                           	callstack 0
  1069  0000E2                     keeloqDecryptPacket@classic_data:
  1070                           	callstack 0
  1071  0000E2                     DecryptPacket_12BIT@classic_data:
  1072                           	callstack 0
  1073                           
  1074                           ; 2 bytes @ 0xA
  1075  0000E2                     	ds	1
  1076  0000E3                     controlSelectRemote@typeRemote:
  1077                           	callstack 0
  1078                           
  1079                           ; 1 bytes @ 0xB
  1080  0000E3                     	ds	1
  1081  0000E4                     ??_keeloqDecryptPacket:
  1082  0000E4                     DecryptPacket_12BIT@commandType:
  1083                           	callstack 0
  1084  0000E4                     actionZone_Opening@securityClosing:
  1085                           	callstack 0
  1086  0000E4                     controlSelectRemote@tempSerial:
  1087                           	callstack 0
  1088                           
  1089                           ; 4 bytes @ 0xC
  1090  0000E4                     	ds	1
  1091  0000E5                     actionZone_Opening@securityOpening:
  1092                           	callstack 0
  1093                           
  1094                           ; 1 bytes @ 0xD
  1095  0000E5                     	ds	1
  1096  0000E6                     actionZone_Opening@typeOpenOrder:
  1097                           	callstack 0
  1098                           
  1099                           ; 1 bytes @ 0xE
  1100  0000E6                     	ds	1
  1101  0000E7                     sm_execute_ControlGate@psm:
  1102                           	callstack 0
  1103                           
  1104                           ; 2 bytes @ 0xF
  1105  0000E7                     	ds	1
  1106  0000E8                     keeloqDecryptPacket@hop_error:
  1107                           	callstack 0
  1108  0000E8                     controlSelectRemote@temp:
  1109                           	callstack 0
  1110  0000E8                     eusartparser@i:
  1111                           	callstack 0
  1112                           
  1113                           ; 1 bytes @ 0x10
  1114  0000E8                     	ds	1
  1115  0000E9                     ??_sm_execute_ControlGate:
  1116  0000E9                     keeloqDecryptPacket@commandType:
  1117                           	callstack 0
  1118  0000E9                     eusartparser@i_7303:
  1119                           	callstack 0
  1120  0000E9                     sm_execute_menuConfiguration@psm:
  1121                           	callstack 0
  1122                           
  1123                           ; 2 bytes @ 0x11
  1124  0000E9                     	ds	1
  1125  0000EA                     eusartparser@i_7310:
  1126                           	callstack 0
  1127                           
  1128                           ; 1 bytes @ 0x12
  1129  0000EA                     	ds	1
  1130  0000EB                     ??_sm_execute_menuConfiguration:
  1131  0000EB                     sm_execute_ControlGate@typeOpenOrder:
  1132                           	callstack 0
  1133  0000EB                     eusartparser@i_7311:
  1134                           	callstack 0
  1135                           
  1136                           ; 1 bytes @ 0x13
  1137  0000EB                     	ds	1
  1138  0000EC                     eusartparser@pos:
  1139                           	callstack 0
  1140                           
  1141                           ; 1 bytes @ 0x14
  1142  0000EC                     	ds	1
  1143  0000ED                     eusartparser@i_7304:
  1144                           	callstack 0
  1145  0000ED                     sm_execute_main@psm:
  1146                           	callstack 0
  1147                           
  1148                           ; 2 bytes @ 0x15
  1149  0000ED                     	ds	1
  1150  0000EE                     eusartparser@i_7305:
  1151                           	callstack 0
  1152                           
  1153                           ; 1 bytes @ 0x16
  1154  0000EE                     	ds	1
  1155  0000EF                     ??_sm_execute_main:
  1156  0000EF                     eusartparser@i_7312:
  1157                           	callstack 0
  1158                           
  1159                           ; 1 bytes @ 0x17
  1160  0000EF                     	ds	1
  1161  0000F0                     eusartparser@i_7313:
  1162                           	callstack 0
  1163                           
  1164                           ; 1 bytes @ 0x18
  1165  0000F0                     	ds	1
  1166  0000F1                     eusartparser@i_7306:
  1167                           	callstack 0
  1168                           
  1169                           ; 1 bytes @ 0x19
  1170  0000F1                     	ds	1
  1171  0000F2                     eusartparser@i_7307:
  1172                           	callstack 0
  1173                           
  1174                           ; 1 bytes @ 0x1A
  1175  0000F2                     	ds	1
  1176  0000F3                     eusartparser@i_7308:
  1177                           	callstack 0
  1178                           
  1179                           ; 1 bytes @ 0x1B
  1180  0000F3                     	ds	1
  1181  0000F4                     eusartparser@i_7314:
  1182                           	callstack 0
  1183                           
  1184                           ; 1 bytes @ 0x1C
  1185  0000F4                     	ds	1
  1186  0000F5                     eusartparser@i_7315:
  1187                           	callstack 0
  1188                           
  1189                           ; 1 bytes @ 0x1D
  1190  0000F5                     	ds	1
  1191  0000F6                     eusartparser@i_7316:
  1192                           	callstack 0
  1193                           
  1194                           ; 1 bytes @ 0x1E
  1195  0000F6                     	ds	1
  1196  0000F7                     eusartparser@relcounter:
  1197                           	callstack 0
  1198                           
  1199                           ; 1 bytes @ 0x1F
  1200  0000F7                     	ds	1
  1201  0000F8                     eusartparser@serial:
  1202                           	callstack 0
  1203                           
  1204                           ; 4 bytes @ 0x20
  1205  0000F8                     	ds	4
  1206                           
  1207                           	psect	cstackCOMRAM
  1208  000001                     __pcstackCOMRAM:
  1209                           	callstack 0
  1210  000001                     ??_rxi:
  1211  000001                     ??i2_GetMotorPower:
  1212  000001                     ADCC_GetSingleConversion@channel:
  1213                           	callstack 0
  1214  000001                     Segments_Set@value:
  1215                           	callstack 0
  1216  000001                     i2VerifyElectricalBrake@tempState:
  1217                           	callstack 0
  1218  000001                     TMR1_WriteTimer@timerVal:
  1219                           	callstack 0
  1220  000001                     decrementTimeslot@ts:
  1221                           	callstack 0
  1222                           
  1223                           ; 2 bytes @ 0x0
  1224  000001                     	ds	1
  1225  000002                     ??_ReadADC:
  1226  000002                     i2VerifyElectricalBrake@actualState:
  1227                           	callstack 0
  1228                           
  1229                           ; 1 bytes @ 0x1
  1230  000002                     	ds	1
  1231  000003                     
  1232                           ; 1 bytes @ 0x2
  1233  000003                     	ds	1
  1234  000004                     i2GetMotorPower@defineatraso:
  1235                           	callstack 0
  1236                           
  1237                           ; 1 bytes @ 0x3
  1238  000004                     	ds	1
  1239  000005                     ??_controlMotorForce:
  1240  000005                     
  1241                           ; 1 bytes @ 0x4
  1242  000005                     	ds	5
  1243  00000A                     ??_INTERRUPT_InterruptManager:
  1244                           
  1245                           ; 1 bytes @ 0x9
  1246  00000A                     	ds	6
  1247  000010                     ??_GetMotorPower:
  1248  000010                     ??_SetSegmentValueLearn:
  1249  000010                     ?_sumEnergyADC:
  1250                           	callstack 0
  1251  000010                     ?_sm_get_current_state:
  1252                           	callstack 0
  1253  000010                     ?___wmul:
  1254                           	callstack 0
  1255  000010                     ?___lwdiv:
  1256                           	callstack 0
  1257  000010                     ?_calculateMean:
  1258                           	callstack 0
  1259  000010                     ?_sumHIST:
  1260                           	callstack 0
  1261  000010                     ?___lldiv:
  1262                           	callstack 0
  1263  000010                     EUSART1_Read@readValue:
  1264                           	callstack 0
  1265  000010                     EUSART1_Write@txData:
  1266                           	callstack 0
  1267  000010                     I2C1_Open@address:
  1268                           	callstack 0
  1269  000010                     I2C1_Close@returnValue:
  1270                           	callstack 0
  1271  000010                     I2C1_MasterSendTxData@data:
  1272                           	callstack 0
  1273  000010                     WWDT_TimerClear@state:
  1274                           	callstack 0
  1275  000010                     getKeyPressed@temp:
  1276                           	callstack 0
  1277  000010                     RGB_Set@value:
  1278                           	callstack 0
  1279  000010                     SetSegmentValueIntermitent@d2:
  1280                           	callstack 0
  1281  000010                     VerifyElectricalBrake@tempState:
  1282                           	callstack 0
  1283  000010                     VerifyFollowMe@securityClose:
  1284                           	callstack 0
  1285  000010                     ___lbdiv@divisor:
  1286                           	callstack 0
  1287  000010                     ___lbmod@divisor:
  1288                           	callstack 0
  1289  000010                     EUSART1_SetFramingErrorHandler@interruptHandler:
  1290                           	callstack 0
  1291  000010                     EUSART1_SetOverrunErrorHandler@interruptHandler:
  1292                           	callstack 0
  1293  000010                     EUSART1_SetErrorHandler@interruptHandler:
  1294                           	callstack 0
  1295  000010                     EUSART1_SetTxInterruptHandler@interruptHandler:
  1296                           	callstack 0
  1297  000010                     EUSART1_SetRxInterruptHandler@interruptHandler:
  1298                           	callstack 0
  1299  000010                     I2C1_SetBuffer@buffer:
  1300                           	callstack 0
  1301  000010                     I2C1_SetCallback@cb:
  1302                           	callstack 0
  1303  000010                     TMR0_SetInterruptHandler@InterruptHandler:
  1304                           	callstack 0
  1305  000010                     TMR1_SetInterruptHandler@InterruptHandler:
  1306                           	callstack 0
  1307  000010                     TMR2_SetInterruptHandler@InterruptHandler:
  1308                           	callstack 0
  1309  000010                     saveEnergyADCHist@valueToSave:
  1310                           	callstack 0
  1311  000010                     DecCHK@data:
  1312                           	callstack 0
  1313  000010                     ReqResync@CurrentHop:
  1314                           	callstack 0
  1315  000010                     verifyProgramingMode@classic_data:
  1316                           	callstack 0
  1317  000010                     setFlashLigth_ON@Freq:
  1318                           	callstack 0
  1319  000010                     sm_restart@psm:
  1320                           	callstack 0
  1321  000010                     sm_get_current_state@psm:
  1322                           	callstack 0
  1323  000010                     init_package@package:
  1324                           	callstack 0
  1325  000010                     ___wmul@multiplier:
  1326                           	callstack 0
  1327  000010                     ___lwdiv@dividend:
  1328                           	callstack 0
  1329  000010                     memcpy@d1:
  1330                           	callstack 0
  1331  000010                     calculateMean@meanValue:
  1332                           	callstack 0
  1333  000010                     ___lldiv@dividend:
  1334                           	callstack 0
  1335  000010                     write_eusartparser@package:
  1336                           	callstack 0
  1337                           
  1338                           ; 7 bytes @ 0xF
  1339  000010                     	ds	1
  1340  000011                     ?_read_package:
  1341                           	callstack 0
  1342  000011                     I2C1_Open@returnValue:
  1343                           	callstack 0
  1344  000011                     VerifyElectricalBrake@actualState:
  1345                           	callstack 0
  1346  000011                     ___lbdiv@dividend:
  1347                           	callstack 0
  1348  000011                     ___lbmod@dividend:
  1349                           	callstack 0
  1350  000011                     SetSegmentValueIntermitent@time:
  1351                           	callstack 0
  1352  000011                     setRGB_ON@Freq:
  1353                           	callstack 0
  1354  000011                     write_package@package:
  1355                           	callstack 0
  1356                           
  1357                           ; 7 bytes @ 0x10
  1358  000011                     	ds	1
  1359  000012                     ??_TMR1_Initialize:
  1360  000012                     ??_ControlMotor:
  1361  000012                     ??_sumEnergyADC:
  1362  000012                     ??_DecCHK:
  1363  000012                     SetSegmentValueLearn@direction:
  1364                           	callstack 0
  1365  000012                     ___lbdiv@counter:
  1366                           	callstack 0
  1367  000012                     ___lbmod@counter:
  1368                           	callstack 0
  1369  000012                     I2C1_SetBuffer@bufferSize:
  1370                           	callstack 0
  1371  000012                     I2C1_SetCallback@ptr:
  1372                           	callstack 0
  1373  000012                     sm_init@psm:
  1374                           	callstack 0
  1375  000012                     sm_send_event@psm:
  1376                           	callstack 0
  1377  000012                     confirmpackage@package:
  1378                           	callstack 0
  1379  000012                     ___wmul@multiplicand:
  1380                           	callstack 0
  1381  000012                     ___lwdiv@divisor:
  1382                           	callstack 0
  1383  000012                     memcpy@s1:
  1384                           	callstack 0
  1385                           
  1386                           ; 2 bytes @ 0x11
  1387  000012                     	ds	1
  1388  000013                     ??_setRGB_ON:
  1389  000013                     SetSegmentValueIntermitent@d1:
  1390                           	callstack 0
  1391  000013                     GetMotorPower@defineatraso:
  1392                           	callstack 0
  1393  000013                     ___lbdiv@quotient:
  1394                           	callstack 0
  1395  000013                     ___lbmod@rem:
  1396                           	callstack 0
  1397                           
  1398                           ; 1 bytes @ 0x12
  1399  000013                     	ds	1
  1400  000014                     ??_InitSoftStop:
  1401  000014                     ??_InitSoftStart:
  1402  000014                     ??_sumHIST:
  1403  000014                     ?___awdiv:
  1404                           	callstack 0
  1405  000014                     I2C1_SetCallback@idx:
  1406                           	callstack 0
  1407  000014                     confirmpackage@confirm:
  1408                           	callstack 0
  1409  000014                     ___lwdiv@counter:
  1410                           	callstack 0
  1411  000014                     sumEnergyADC@sumE:
  1412                           	callstack 0
  1413  000014                     sm_init@initial_state:
  1414                           	callstack 0
  1415  000014                     sm_send_event@event:
  1416                           	callstack 0
  1417  000014                     ___wmul@product:
  1418                           	callstack 0
  1419  000014                     ___awdiv@dividend:
  1420                           	callstack 0
  1421  000014                     memcpy@n:
  1422                           	callstack 0
  1423  000014                     calculateMean@newValue:
  1424                           	callstack 0
  1425  000014                     ___lldiv@divisor:
  1426                           	callstack 0
  1427                           
  1428                           ; 4 bytes @ 0x13
  1429  000014                     	ds	1
  1430  000015                     setRGB_ON@RGBLigth:
  1431                           	callstack 0
  1432  000015                     I2C1_SetDataCompleteCallback@cb:
  1433                           	callstack 0
  1434  000015                     I2C1_SetAddressNackCallback@cb:
  1435                           	callstack 0
  1436  000015                     ___lwdiv@quotient:
  1437                           	callstack 0
  1438                           
  1439                           ; 2 bytes @ 0x14
  1440  000015                     	ds	1
  1441  000016                     ?_getHopCode:
  1442                           	callstack 0
  1443  000016                     ?_getCurrentComparator:
  1444                           	callstack 0
  1445  000016                     sm_init@hist_mode:
  1446                           	callstack 0
  1447  000016                     memcpy@tmp:
  1448                           	callstack 0
  1449  000016                     sumEnergyADC@auxValue:
  1450                           	callstack 0
  1451  000016                     getHopCode@data:
  1452                           	callstack 0
  1453  000016                     ___awdiv@divisor:
  1454                           	callstack 0
  1455                           
  1456                           ; 2 bytes @ 0x15
  1457  000016                     	ds	1
  1458  000017                     ??_write_eusartparser:
  1459  000017                     refreshADCZeroOffset@i:
  1460                           	callstack 0
  1461  000017                     I2C1_SetDataCompleteCallback@ptr:
  1462                           	callstack 0
  1463  000017                     I2C1_SetAddressNackCallback@ptr:
  1464                           	callstack 0
  1465  000017                     memcpy@d:
  1466                           	callstack 0
  1467                           
  1468                           ; 2 bytes @ 0x16
  1469  000017                     	ds	1
  1470  000018                     ??_getHopCode:
  1471  000018                     ??_calculateMean:
  1472  000018                     ??_OpenWalkOrder:
  1473  000018                     sumEnergyADC@i:
  1474                           	callstack 0
  1475  000018                     ControlMotor@stateMotor:
  1476                           	callstack 0
  1477  000018                     ___awdiv@counter:
  1478                           	callstack 0
  1479  000018                     refreshADCZeroOffset@media:
  1480                           	callstack 0
  1481  000018                     sumHIST@max:
  1482                           	callstack 0
  1483  000018                     read_eusartparser@package:
  1484                           	callstack 0
  1485  000018                     ___lldiv@quotient:
  1486                           	callstack 0
  1487  000018                     read_package@package:
  1488                           	callstack 0
  1489                           
  1490                           ; 7 bytes @ 0x17
  1491  000018                     	ds	1
  1492  000019                     ___awdiv@sign:
  1493                           	callstack 0
  1494  000019                     wr1RegCompleteHandler@p:
  1495                           	callstack 0
  1496  000019                     rd1RegCompleteHandler@p:
  1497                           	callstack 0
  1498  000019                     rd2RegCompleteHandler@p:
  1499                           	callstack 0
  1500  000019                     wr2RegCompleteHandler@p:
  1501                           	callstack 0
  1502  000019                     rdBlkRegCompleteHandler@p:
  1503                           	callstack 0
  1504  000019                     rd1RegCompleteHandler@i2c1_master_example$F500@ptr:
  1505                           	callstack 0
  1506  000019                     rd2RegCompleteHandler@i2c1_master_example$F511@ptr:
  1507                           	callstack 0
  1508  000019                     wr1RegCompleteHandler@i2c1_master_example$F517@ptr:
  1509                           	callstack 0
  1510  000019                     wr2RegCompleteHandler@i2c1_master_example$F523@ptr:
  1511                           	callstack 0
  1512  000019                     rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr:
  1513                           	callstack 0
  1514  000019                     I2C1_CallbackReturnReset@funPtr:
  1515                           	callstack 0
  1516  000019                     memcpy@s:
  1517                           	callstack 0
  1518                           
  1519                           ; 2 bytes @ 0x18
  1520  000019                     	ds	1
  1521  00001A                     ??_getCurrentComparator:
  1522  00001A                     ??_read_eusartparser:
  1523  00001A                     sumHIST@min:
  1524                           	callstack 0
  1525  00001A                     OpenWalkOrder@diffTime:
  1526                           	callstack 0
  1527  00001A                     ___awdiv@quotient:
  1528                           	callstack 0
  1529                           
  1530                           ; 2 bytes @ 0x19
  1531  00001A                     	ds	1
  1532  00001B                     ??_I2C1_DO_TX:
  1533  00001B                     ??_I2C1_DO_RX:
  1534  00001B                     ??_I2C1_DO_TX_EMPTY:
  1535  00001B                     ??_I2C1_DO_ADDRESS_NACK:
  1536  00001B                     getSerialCmd@serial:
  1537                           	callstack 0
  1538  00001B                     Decrypt@packet:
  1539                           	callstack 0
  1540                           
  1541                           ; 2 bytes @ 0x1A
  1542  00001B                     	ds	1
  1543  00001C                     getSerialCmd@temp:
  1544                           	callstack 0
  1545  00001C                     SetSegmentValueMain@d2:
  1546                           	callstack 0
  1547  00001C                     SetSegmentValue@d2:
  1548                           	callstack 0
  1549  00001C                     SetSegmentValueIntermitentMain@d2:
  1550                           	callstack 0
  1551  00001C                     ___lldiv@counter:
  1552                           	callstack 0
  1553  00001C                     sumHIST@sumH:
  1554                           	callstack 0
  1555                           
  1556                           ; 4 bytes @ 0x1B
  1557  00001C                     	ds	1
  1558  00001D                     ??_I2C1_MasterFsm:
  1559  00001D                     ?___lmul:
  1560                           	callstack 0
  1561  00001D                     Decrypt@key:
  1562                           	callstack 0
  1563  00001D                     SetSegmentValueMain@d1:
  1564                           	callstack 0
  1565  00001D                     SetSegmentValue@d1:
  1566                           	callstack 0
  1567  00001D                     SetSegmentValueIntermitentMain@time:
  1568                           	callstack 0
  1569  00001D                     ___lmul@multiplier:
  1570                           	callstack 0
  1571                           
  1572                           ; 4 bytes @ 0x1C
  1573  00001D                     	ds	1
  1574  00001E                     Decrypt@i:
  1575                           	callstack 0
  1576                           
  1577                           ; 1 bytes @ 0x1D
  1578  00001E                     	ds	1
  1579  00001F                     Decrypt@j:
  1580                           	callstack 0
  1581  00001F                     SetSegmentValueIntermitentMain@d1:
  1582                           	callstack 0
  1583  00001F                     write_eusartparser@debug:
  1584                           	callstack 0
  1585                           
  1586                           ; 2 bytes @ 0x1E
  1587  00001F                     	ds	1
  1588  000020                     ??_load_New_Menu:
  1589  000020                     ??_controlSaveRemote:
  1590  000020                     I2C1_MasterOperation@read:
  1591                           	callstack 0
  1592  000020                     sumHIST@i:
  1593                           	callstack 0
  1594  000020                     Decrypt@p:
  1595                           	callstack 0
  1596  000020                     actionZone_Closed@securityOpening:
  1597                           	callstack 0
  1598  000020                     actionZone_Opened@securityClosing:
  1599                           	callstack 0
  1600  000020                     getCurrentComparator@tempOffset:
  1601                           	callstack 0
  1602  000020                     getHopCode@tempHop:
  1603                           	callstack 0
  1604                           
  1605                           ; 2 bytes @ 0x1F
  1606  000020                     	ds	1
  1607  000021                     I2C1_MasterOperation@returnValue:
  1608                           	callstack 0
  1609  000021                     Decrypt@aux:
  1610                           	callstack 0
  1611  000021                     actionZone_Closed@typeOpenOrder:
  1612                           	callstack 0
  1613  000021                     actionZone_Opened@typeOpenOrder:
  1614                           	callstack 0
  1615  000021                     write_eusartparser@debug2:
  1616                           	callstack 0
  1617  000021                     ___lmul@multiplicand:
  1618                           	callstack 0
  1619                           
  1620                           ; 4 bytes @ 0x20
  1621  000021                     	ds	1
  1622  000022                     I2C1_Read1ByteRegister@reg:
  1623                           	callstack 0
  1624  000022                     getCurrentComparator@x:
  1625                           	callstack 0
  1626  000022                     getHopCode@tempPos:
  1627                           	callstack 0
  1628  000022                     load_New_Menu@Menu:
  1629                           	callstack 0
  1630  000022                     i2c_writeNBytes@reg:
  1631                           	callstack 0
  1632  000022                     i2c_readDataBlock@reg:
  1633                           	callstack 0
  1634  000022                     Decrypt@Buffer:
  1635                           	callstack 0
  1636                           
  1637                           ; 4 bytes @ 0x21
  1638  000022                     	ds	1
  1639  000023                     ??_ControlCurrent:
  1640  000023                     I2C1_Read1ByteRegister@address:
  1641                           	callstack 0
  1642  000023                     getHopCode@i:
  1643                           	callstack 0
  1644  000023                     load_New_Menu@i:
  1645                           	callstack 0
  1646                           
  1647                           ; 1 bytes @ 0x22
  1648  000023                     	ds	1
  1649  000024                     i2c_writeNBytes@data:
  1650                           	callstack 0
  1651  000024                     I2C1_Read1ByteRegister@returnValue:
  1652                           	callstack 0
  1653  000024                     i2c_readDataBlock@data:
  1654                           	callstack 0
  1655  000024                     HopCHK@data:
  1656                           	callstack 0
  1657                           
  1658                           ; 2 bytes @ 0x23
  1659  000024                     	ds	1
  1660  000025                     i2c_writeNBytes@len:
  1661                           	callstack 0
  1662  000025                     ___lmul@product:
  1663                           	callstack 0
  1664                           
  1665                           ; 4 bytes @ 0x24
  1666  000025                     	ds	1
  1667  000026                     i2c_readDataBlock@len:
  1668                           	callstack 0
  1669  000026                     NormalKeyGen@serial:
  1670                           	callstack 0
  1671  000026                     HopCHK@hopDiff:
  1672                           	callstack 0
  1673                           
  1674                           ; 2 bytes @ 0x25
  1675  000026                     	ds	1
  1676  000027                     ??_i2c_writeNBytes:
  1677                           
  1678                           ; 1 bytes @ 0x26
  1679  000027                     	ds	1
  1680  000028                     ??_i2c_readDataBlock:
  1681  000028                     NormalKeyGen@HOPtemp:
  1682                           	callstack 0
  1683  000028                     i2c_writeNBytes@dat:
  1684                           	callstack 0
  1685                           
  1686                           ; 17 bytes @ 0x27
  1687  000028                     	ds	1
  1688  000029                     ?_getTimeDecelaration:
  1689                           	callstack 0
  1690  000029                     i2c_readDataBlock@address:
  1691                           	callstack 0
  1692                           
  1693                           ; 1 bytes @ 0x28
  1694  000029                     	ds	1
  1695  00002A                     i2c_readDataBlock@d:
  1696                           	callstack 0
  1697                           
  1698                           ; 4 bytes @ 0x29
  1699  00002A                     	ds	2
  1700  00002C                     NormalKeyGen@SKEYtemp:
  1701                           	callstack 0
  1702                           
  1703                           ; 4 bytes @ 0x2B
  1704  00002C                     	ds	1
  1705  00002D                     ??_getTimeDecelaration:
  1706                           
  1707                           ; 1 bytes @ 0x2C
  1708  00002D                     	ds	1
  1709  00002E                     ReadSerial@tempSerial:
  1710                           	callstack 0
  1711  00002E                     cmdMemoryIsEmpty@position:
  1712                           	callstack 0
  1713  00002E                     validateRemoteSerialNumber@serial:
  1714                           	callstack 0
  1715                           
  1716                           ; 4 bytes @ 0x2D
  1717  00002E                     	ds	1
  1718  00002F                     ??_cmdMemoryIsEmpty:
  1719  00002F                     ReadSerial@position:
  1720                           	callstack 0
  1721                           
  1722                           ; 1 bytes @ 0x2E
  1723  00002F                     	ds	1
  1724  000030                     ??_ReadSerial:
  1725  000030                     NormalKeyGen@Buffer:
  1726                           	callstack 0
  1727                           
  1728                           ; 8 bytes @ 0x2F
  1729  000030                     	ds	1
  1730  000031                     cmdMemoryIsEmpty@cmdType:
  1731                           	callstack 0
  1732  000031                     getTimeDecelaration@state:
  1733                           	callstack 0
  1734                           
  1735                           ; 1 bytes @ 0x30
  1736  000031                     	ds	1
  1737  000032                     ??_setPositionInvertionInOpening:
  1738  000032                     ??_getStateOpenPosition:
  1739  000032                     validateRemoteSerialNumber@VerifyOnlySerial:
  1740                           	callstack 0
  1741  000032                     ReadSerial@cmdType:
  1742                           	callstack 0
  1743  000032                     actionZone_Closing@securityClosing:
  1744                           	callstack 0
  1745  000032                     cmdMemoryIsEmpty@tempSerial:
  1746                           	callstack 0
  1747                           
  1748                           ; 4 bytes @ 0x31
  1749  000032                     	ds	1
  1750  000033                     actionZone_Closing@typeOpenOrder:
  1751                           	callstack 0
  1752  000033                     validateRemoteSerialNumber@position:
  1753                           	callstack 0
  1754                           
  1755                           ; 2 bytes @ 0x32
  1756  000033                     	ds	2
  1757  000035                     validateRemoteSerialNumber@mask:
  1758                           	callstack 0
  1759                           
  1760                           ; 4 bytes @ 0x34
  1761  000035                     	ds	3
  1762  000038                     keeloq_classic_decrypt_packet@data:
  1763                           	callstack 0
  1764                           
  1765                           ; 2 bytes @ 0x37
  1766  000038                     	ds	1
  1767  000039                     i2c_writeNBytes@address:
  1768                           	callstack 0
  1769  000039                     validateRemoteSerialNumber@j:
  1770                           	callstack 0
  1771                           
  1772                           ; 1 bytes @ 0x38
  1773  000039                     	ds	1
  1774  00003A                     validateRemoteSerialNumber@i:
  1775                           	callstack 0
  1776  00003A                     saveNewSerial@cmdType:
  1777                           	callstack 0
  1778  00003A                     RemoveSerial@position:
  1779                           	callstack 0
  1780  00003A                     ResetDefaultMemory@type:
  1781                           	callstack 0
  1782  00003A                     checkNVM_VarSystem@saveParam:
  1783                           	callstack 0
  1784  00003A                     sm_execute_ControlLearning@typeOpenOrder:
  1785                           	callstack 0
  1786  00003A                     setValueToEdit@ParameterSelected:
  1787                           	callstack 0
  1788                           
  1789                           ; 1 bytes @ 0x39
  1790  00003A                     	ds	1
  1791  00003B                     
  1792                           ; 1 bytes @ 0x3A
  1793 ;;
  1794 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1795 ;;
  1796 ;; *************** function _main *****************
  1797 ;; Defined at:
  1798 ;;		line 63 in file "main_MC50.c"
  1799 ;; Parameters:    Size  Location     Type
  1800 ;;		None
  1801 ;; Auto vars:     Size  Location     Type
  1802 ;;  package         7    0[BANK2 ] struct package_t
  1803 ;; Return value:  Size  Location     Type
  1804 ;;                  1    wreg      void 
  1805 ;; Registers used:
  1806 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  1807 ;; Tracked objects:
  1808 ;;		On entry : 0/0
  1809 ;;		On exit  : 3F/1
  1810 ;;		Unchanged: 0/0
  1811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1813 ;;      Locals:         0       0       0       7       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1815 ;;      Totals:         0       0       0       7       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1816 ;;Total ram usage:        7 bytes
  1817 ;; Hardware stack levels required when called: 17
  1818 ;; This function calls:
  1819 ;;		_ControlCounterMoves
  1820 ;;		_ControlCurrent
  1821 ;;		_ControlInputs
  1822 ;;		_ControlLights
  1823 ;;		_ControlMotor
  1824 ;;		_EUSART1_is_rx_ready
  1825 ;;		_InitReceiver
  1826 ;;		_SYSTEM_Initialize
  1827 ;;		_SetSegmentValue
  1828 ;;		_ShowVersion
  1829 ;;		_WWDT_SoftEnable
  1830 ;;		_WWDT_TimerClear
  1831 ;;		_controlVelocity
  1832 ;;		_eusartparser
  1833 ;;		_getKeyPressed
  1834 ;;		_loadNVM_VarSystem
  1835 ;;		_readInputs
  1836 ;;		_readRFButtons
  1837 ;;		_read_package
  1838 ;;		_readbutton
  1839 ;;		_sm_execute_ControlGate
  1840 ;;		_sm_execute_main
  1841 ;;		_sm_init
  1842 ;; This function is called by:
  1843 ;;		Startup code after reset
  1844 ;; This function uses a non-reentrant model
  1845 ;;
  1846                           
  1847                           	psect	text0
  1848  006894                     __ptext0:
  1849                           	callstack 0
  1850  006894                     _main:
  1851                           	callstack 14
  1852                           
  1853                           ;main_MC50.c: 70:     dispStruct.display_grp.value_display1=dMinus;
  1854                           
  1855                           ;incstack = 0
  1856  006894  0E18               	movlw	24
  1857  006896  0100               	movlb	0	; () banked
  1858  006898  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  1859                           
  1860                           ;main_MC50.c: 71:     dispStruct.display_grp.value_display1=dMinus;
  1861  00689A  0E18               	movlw	24
  1862  00689C  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  1863                           
  1864                           ;main_MC50.c: 72:     dispStruct.intermitentFreq=0;
  1865  00689E  0E00               	movlw	0
  1866  0068A0  6F76               	movwf	(_dispStruct+4)& (0+255),b	;volatile
  1867  0068A2  0E00               	movlw	0
  1868  0068A4  6F75               	movwf	(_dispStruct+3)& (0+255),b	;volatile
  1869                           
  1870                           ;main_MC50.c: 73:     dispStruct.upFase=1;
  1871  0068A6  0E01               	movlw	1
  1872  0068A8  6F77               	movwf	(_dispStruct+5)& (0+255),b	;volatile
  1873                           
  1874                           ; BSR set to: 0
  1875                           ;main_MC50.c: 76:     SYSTEM_Initialize();
  1876  0068AA  EC74  F04B         	call	_SYSTEM_Initialize	;wreg free
  1877                           
  1878                           ; BSR set to: 14
  1879                           ;main_MC50.c: 77:     WWDT_SoftEnable();
  1880  0068AE  EC33  F04F         	call	_WWDT_SoftEnable	;wreg free
  1881                           
  1882                           ; BSR set to: 14
  1883                           ;main_MC50.c: 80:       (INTCONbits.GIE = 1);
  1884  0068B2  8EF2               	bsf	242,7,c	;volatile
  1885                           
  1886                           ; BSR set to: 14
  1887                           ;main_MC50.c: 83:      (INTCONbits.PEIE = 1);
  1888  0068B4  8CF2               	bsf	242,6,c	;volatile
  1889                           
  1890                           ; BSR set to: 14
  1891                           ;main_MC50.c: 86:     IOCBP3=1;
  1892  0068B6  010F               	movlb	15	; () banked
  1893  0068B8  8714               	bsf	20,3,b	;volatile
  1894                           
  1895                           ; BSR set to: 15
  1896                           ;main_MC50.c: 87:     IOCBN3=1;
  1897  0068BA  8713               	bsf	19,3,b	;volatile
  1898                           
  1899                           ; BSR set to: 15
  1900                           ;main_MC50.c: 94:     InitReceiver();
  1901  0068BC  ECBE  F04D         	call	_InitReceiver	;wreg free
  1902                           
  1903                           ; BSR set to: 0
  1904                           ;main_MC50.c: 95:     loadNVM_VarSystem();
  1905  0068C0  EC06  F037         	call	_loadNVM_VarSystem	;wreg free
  1906                           
  1907                           ;main_MC50.c: 97:     WWDT_TimerClear();
  1908  0068C4  EC94  F04D         	call	_WWDT_TimerClear	;wreg free
  1909                           
  1910                           ;main_MC50.c: 99:     SetSegmentValue(dMinus,dMinus);
  1911  0068C8  0E18               	movlw	24
  1912  0068CA  6E1C               	movwf	SetSegmentValue@d2^0,c
  1913  0068CC  0E18               	movlw	24
  1914  0068CE  ECE5  F04D         	call	_SetSegmentValue
  1915                           
  1916                           ; BSR set to: 0
  1917                           ;main_MC50.c: 100:     ts_system.ts_TimeSlot1ms = ( 100/50);
  1918  0068D2  0E02               	movlw	2
  1919  0068D4  0101               	movlb	1	; () banked
  1920  0068D6  6FA1               	movwf	(_ts_system+2)& (0+255),b	;volatile
  1921                           
  1922                           ;main_MC50.c: 101:     while ( ts_system.ts_TimeSlot1ms > 0 )
  1923  0068D8  D00B               	goto	l27859
  1924  0068DA                     l27849:
  1925                           
  1926                           ; BSR set to: 1
  1927                           ;main_MC50.c: 102:     {;main_MC50.c: 103:         if ( ts_system.ts_TimeSlotMain<=0 )
  1928  0068DA  51A2               	movf	(_ts_system+3)& (0+255),w,b	;volatile
  1929  0068DC  A4D8               	btfss	status,2,c
  1930  0068DE  D008               	goto	l27859
  1931                           
  1932                           ; BSR set to: 1
  1933                           ;main_MC50.c: 104:         {;main_MC50.c: 105:             WWDT_TimerClear();
  1934  0068E0  EC94  F04D         	call	_WWDT_TimerClear	;wreg free
  1935                           
  1936                           ;main_MC50.c: 106:             ts_system.ts_TimeSlotMain = 50;
  1937  0068E4  0E32               	movlw	50
  1938  0068E6  0101               	movlb	1	; () banked
  1939  0068E8  6FA2               	movwf	(_ts_system+3)& (0+255),b	;volatile
  1940                           
  1941                           ; BSR set to: 1
  1942                           ;main_MC50.c: 108:             ts_system.ts_TimeSlot1ms--;
  1943  0068EA  07A1               	decf	(_ts_system+2)& (0+255),f,b	;volatile
  1944                           
  1945                           ; BSR set to: 1
  1946                           ;main_MC50.c: 109:             readInputs();
  1947  0068EC  ECD2  F039         	call	_readInputs	;wreg free
  1948  0068F0                     l27859:
  1949                           
  1950                           ;main_MC50.c: 101:     while ( ts_system.ts_TimeSlot1ms > 0 )
  1951  0068F0  0101               	movlb	1	; () banked
  1952  0068F2  51A1               	movf	(_ts_system+2)& (0+255),w,b	;volatile
  1953  0068F4  A4D8               	btfss	status,2,c
  1954  0068F6  D7F1               	goto	l27849
  1955                           
  1956                           ; BSR set to: 1
  1957                           ;main_MC50.c: 117:     sm_init(&menuConfiguration_stateMachine,st_MainMenu,HIST_NONE);
  1958  0068F8  0EBB               	movlw	low _menuConfiguration_stateMachine
  1959  0068FA  6E12               	movwf	sm_init@psm^0,c
  1960  0068FC  0E02               	movlw	high _menuConfiguration_stateMachine
  1961  0068FE  6E13               	movwf	(sm_init@psm+1)^0,c
  1962  006900  0E00               	movlw	0
  1963  006902  6E15               	movwf	(sm_init@initial_state+1)^0,c
  1964  006904  0E00               	movlw	0
  1965  006906  6E14               	movwf	sm_init@initial_state^0,c
  1966  006908  0E00               	movlw	0
  1967  00690A  6E16               	movwf	sm_init@hist_mode^0,c
  1968  00690C  ECDD  F047         	call	_sm_init	;wreg free
  1969                           
  1970                           ;main_MC50.c: 118:     sm_init(&main_stateMachine,st_standBy,HIST_NONE);
  1971  006910  0EF2               	movlw	low _main_stateMachine
  1972  006912  6E12               	movwf	sm_init@psm^0,c
  1973  006914  0E01               	movlw	high _main_stateMachine
  1974  006916  6E13               	movwf	(sm_init@psm+1)^0,c
  1975  006918  0E00               	movlw	0
  1976  00691A  6E15               	movwf	(sm_init@initial_state+1)^0,c
  1977  00691C  0E00               	movlw	0
  1978  00691E  6E14               	movwf	sm_init@initial_state^0,c
  1979  006920  0E00               	movlw	0
  1980  006922  6E16               	movwf	sm_init@hist_mode^0,c
  1981  006924  ECDD  F047         	call	_sm_init	;wreg free
  1982                           
  1983                           ;main_MC50.c: 119:     sm_init(&controlGate_stateMachine,st_Idle,HIST_NONE);
  1984  006928  0EE7               	movlw	low _controlGate_stateMachine
  1985  00692A  6E12               	movwf	sm_init@psm^0,c
  1986  00692C  0E01               	movlw	high _controlGate_stateMachine
  1987  00692E  6E13               	movwf	(sm_init@psm+1)^0,c
  1988  006930  0E00               	movlw	0
  1989  006932  6E15               	movwf	(sm_init@initial_state+1)^0,c
  1990  006934  0E00               	movlw	0
  1991  006936  6E14               	movwf	sm_init@initial_state^0,c
  1992  006938  0E00               	movlw	0
  1993  00693A  6E16               	movwf	sm_init@hist_mode^0,c
  1994  00693C  ECDD  F047         	call	_sm_init	;wreg free
  1995                           
  1996                           ;main_MC50.c: 120:     sm_init(&controlLearning_stateMachine,st_InitLearning,HIST_NONE);
  1997  006940  0EB0               	movlw	low _controlLearning_stateMachine
  1998  006942  6E12               	movwf	sm_init@psm^0,c
  1999  006944  0E02               	movlw	high _controlLearning_stateMachine
  2000  006946  6E13               	movwf	(sm_init@psm+1)^0,c
  2001  006948  0E00               	movlw	0
  2002  00694A  6E15               	movwf	(sm_init@initial_state+1)^0,c
  2003  00694C  0E00               	movlw	0
  2004  00694E  6E14               	movwf	sm_init@initial_state^0,c
  2005  006950  0E00               	movlw	0
  2006  006952  6E16               	movwf	sm_init@hist_mode^0,c
  2007  006954  ECDD  F047         	call	_sm_init	;wreg free
  2008                           
  2009                           ;main_MC50.c: 122:     ts_system.Debug_TS=(1000/50);
  2010  006958  0E00               	movlw	0
  2011  00695A  0101               	movlb	1	; () banked
  2012  00695C  6FA8               	movwf	(_ts_system+9)& (0+255),b	;volatile
  2013  00695E  0E14               	movlw	20
  2014  006960  6FA7               	movwf	(_ts_system+8)& (0+255),b	;volatile
  2015                           
  2016                           ; BSR set to: 1
  2017                           ;main_MC50.c: 124:     var_sys.ADCZeroOffset = 510;
  2018  006962  0E01               	movlw	1
  2019  006964  6F4C               	movwf	(_var_sys+76)& (0+255),b	;volatile
  2020  006966  0EFE               	movlw	254
  2021  006968  6F4B               	movwf	(_var_sys+75)& (0+255),b	;volatile
  2022                           
  2023                           ; BSR set to: 1
  2024                           ;main_MC50.c: 125:     ts_system.TimeStopADCZeroOffsetCalc = (5*(1000/50));
  2025  00696A  0E00               	movlw	0
  2026  00696C  6FDE               	movwf	(_ts_system+63)& (0+255),b	;volatile
  2027  00696E  0E64               	movlw	100
  2028  006970  6FDD               	movwf	(_ts_system+62)& (0+255),b	;volatile
  2029                           
  2030                           ; BSR set to: 1
  2031                           ;main_MC50.c: 126:     ts_system.TimeStopElectricBrake = 0;
  2032  006972  0E00               	movlw	0
  2033  006974  6FE0               	movwf	(_ts_system+65)& (0+255),b	;volatile
  2034  006976  0E00               	movlw	0
  2035  006978  6FDF               	movwf	(_ts_system+64)& (0+255),b	;volatile
  2036                           
  2037                           ; BSR set to: 1
  2038                           ;main_MC50.c: 129:     var_sys.StateMotor = Stopped;
  2039  00697A  0E00               	movlw	0
  2040  00697C  6F00               	movwf	_var_sys& (0+255),b	;volatile
  2041  00697E                     l27873:
  2042                           
  2043                           ;main_MC50.c: 136:     {;main_MC50.c: 140:         struct package_t package;;main_MC50.c
      +                          : 141:         if(EUSART1_is_rx_ready()){
  2044  00697E  EC83  F04E         	call	_EUSART1_is_rx_ready	;wreg free
  2045  006982  0900               	iorlw	0
  2046  006984  B4D8               	btfsc	status,2,c
  2047  006986  D010               	goto	l27879
  2048                           
  2049                           ; BSR set to: 0
  2050                           ;main_MC50.c: 142:             package=read_package();
  2051  006988  ECB1  F048         	call	_read_package	;wreg free
  2052  00698C  EE22  F0ED         	lfsr	2,main@package
  2053  006990  0E06               	movlw	6
  2054  006992                     u34051:
  2055  006992  CFEB FFDB          	movff	plusw0,plusw2
  2056  006996  06E8               	decf	wreg,f,c
  2057  006998  E2FC               	bc	u34051
  2058                           
  2059                           ; BSR set to: 14
  2060                           ;main_MC50.c: 143:             eusartparser(&package);
  2061  00699A  0EED               	movlw	low main@package
  2062  00699C  0100               	movlb	0	; () banked
  2063  00699E  6FE0               	movwf	eusartparser@package& (0+255),b
  2064  0069A0  0E02               	movlw	high main@package
  2065  0069A2  6FE1               	movwf	(eusartparser@package+1)& (0+255),b
  2066  0069A4  EC43  F00C         	call	_eusartparser	;wreg free
  2067  0069A8                     l27879:
  2068                           
  2069                           ;main_MC50.c: 147:         if ( ts_system.ts_TimeSlotMain<=0 )
  2070  0069A8  0101               	movlb	1	; () banked
  2071  0069AA  51A2               	movf	(_ts_system+3)& (0+255),w,b	;volatile
  2072  0069AC  A4D8               	btfss	status,2,c
  2073  0069AE  D7E7               	goto	l27873
  2074                           
  2075                           ; BSR set to: 1
  2076                           ;main_MC50.c: 148:         {;main_MC50.c: 149:              ts_system.ts_TimeSlotMain = 
      +                          50;
  2077  0069B0  0E32               	movlw	50
  2078  0069B2  6FA2               	movwf	(_ts_system+3)& (0+255),b	;volatile
  2079                           
  2080                           ; BSR set to: 1
  2081                           ;main_MC50.c: 150:             WWDT_TimerClear();
  2082  0069B4  EC94  F04D         	call	_WWDT_TimerClear	;wreg free
  2083                           
  2084                           ;main_MC50.c: 152:             if(var_sys.StateVersion<4)
  2085  0069B8  0E04               	movlw	4
  2086  0069BA  0101               	movlb	1	; () banked
  2087  0069BC  6149               	cpfslt	(_var_sys+73)& (0+255),b	;volatile
  2088  0069BE  D003               	goto	l27889
  2089                           
  2090                           ; BSR set to: 1
  2091                           ;main_MC50.c: 154:             {;main_MC50.c: 155:                 ShowVersion();
  2092  0069C0  EC3A  F046         	call	_ShowVersion	;wreg free
  2093                           
  2094                           ;main_MC50.c: 156:             }
  2095  0069C4  D7DC               	goto	l27873
  2096  0069C6                     l27889:
  2097                           
  2098                           ; BSR set to: 1
  2099                           ;main_MC50.c: 158:             {;main_MC50.c: 160:                 readbutton();
  2100  0069C6  ECD0  F045         	call	_readbutton	;wreg free
  2101                           
  2102                           ; BSR set to: 1
  2103                           ;main_MC50.c: 162:                 readRFButtons();
  2104  0069CA  ECBA  F032         	call	_readRFButtons	;wreg free
  2105                           
  2106                           ;main_MC50.c: 163:                lastKey=getKeyPressed();
  2107  0069CE  EC0B  F04E         	call	_getKeyPressed	;wreg free
  2108  0069D2  0101               	movlb	1	; () banked
  2109  0069D4  6F99               	movwf	_lastKey& (0+255),b
  2110                           
  2111                           ; BSR set to: 1
  2112                           ;main_MC50.c: 165:                 readInputs();
  2113  0069D6  ECD2  F039         	call	_readInputs	;wreg free
  2114                           
  2115                           ;main_MC50.c: 166:                 ControlInputs();
  2116  0069DA  EC31  F038         	call	_ControlInputs	;wreg free
  2117                           
  2118                           ;main_MC50.c: 167:                 ControlCurrent();
  2119  0069DE  EC0E  F035         	call	_ControlCurrent	;wreg free
  2120                           
  2121                           ;main_MC50.c: 168:                 controlVelocity();
  2122  0069E2  ECAF  F02B         	call	_controlVelocity	;wreg free
  2123                           
  2124                           ;main_MC50.c: 169:                 ControlMotor();
  2125  0069E6  EC79  F029         	call	_ControlMotor	;wreg free
  2126                           
  2127                           ;main_MC50.c: 170:                 ControlLights();
  2128  0069EA  ECC1  F022         	call	_ControlLights	;wreg free
  2129                           
  2130                           ;main_MC50.c: 171:                 ControlCounterMoves();
  2131  0069EE  EC84  F047         	call	_ControlCounterMoves	;wreg free
  2132                           
  2133                           ;main_MC50.c: 173:                 sm_execute_main(&main_stateMachine);
  2134  0069F2  0EF2               	movlw	low _main_stateMachine
  2135  0069F4  0100               	movlb	0	; () banked
  2136  0069F6  6FED               	movwf	sm_execute_main@psm& (0+255),b
  2137  0069F8  0E01               	movlw	high _main_stateMachine
  2138  0069FA  6FEE               	movwf	(sm_execute_main@psm+1)& (0+255),b
  2139  0069FC  ECA7  F01C         	call	_sm_execute_main	;wreg free
  2140                           
  2141                           ;main_MC50.c: 174:                 sm_execute_ControlGate(&controlGate_stateMachine);
  2142  006A00  0EE7               	movlw	low _controlGate_stateMachine
  2143  006A02  0100               	movlb	0	; () banked
  2144  006A04  6FE7               	movwf	sm_execute_ControlGate@psm& (0+255),b
  2145  006A06  0E01               	movlw	high _controlGate_stateMachine
  2146  006A08  6FE8               	movwf	(sm_execute_ControlGate@psm+1)& (0+255),b
  2147  006A0A  EC1C  F021         	call	_sm_execute_ControlGate	;wreg free
  2148                           
  2149                           ;main_MC50.c: 177:                 if(lastKey!=0xff)
  2150  006A0E  0101               	movlb	1	; () banked
  2151  006A10  2999               	incf	_lastKey& (0+255),w,b
  2152  006A12  B4D8               	btfsc	status,2,c
  2153  006A14  D7B4               	goto	l27873
  2154                           
  2155                           ; BSR set to: 1
  2156                           ;main_MC50.c: 178:                 {;main_MC50.c: 180:                       InitReceive
      +                          r();
  2157  006A16  ECBE  F04D         	call	_InitReceiver	;wreg free
  2158                           
  2159                           ; BSR set to: 1
  2160                           
  2161                           ;main_MC50.c: 185:         }
  2162  006A1A  D7B1               	goto	l27873
  2163  006A1C                     __end_of_main:
  2164                           	callstack 0
  2165                           
  2166 ;; *************** function _sm_execute_main *****************
  2167 ;; Defined at:
  2168 ;;		line 26 in file "sm_Main_MC50.c"
  2169 ;; Parameters:    Size  Location     Type
  2170 ;;  psm             2   21[BANK0 ] PTR struct .
  2171 ;;		 -> main_stateMachine(11), 
  2172 ;; Auto vars:     Size  Location     Type
  2173 ;;		None
  2174 ;; Return value:  Size  Location     Type
  2175 ;;                  1    wreg      void 
  2176 ;; Registers used:
  2177 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2178 ;; Tracked objects:
  2179 ;;		On entry : 3F/0
  2180 ;;		On exit  : 0/0
  2181 ;;		Unchanged: 0/0
  2182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2183 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2185 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2186 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2187 ;;Total ram usage:        4 bytes
  2188 ;; Hardware stack levels used: 1
  2189 ;; Hardware stack levels required when called: 16
  2190 ;; This function calls:
  2191 ;;		_SetSegmentValueIntermitentMain
  2192 ;;		_SetSegmentValueMain
  2193 ;;		_load_New_Menu
  2194 ;;		_sm_execute_menuConfiguration
  2195 ;;		_sm_send_event
  2196 ;; This function is called by:
  2197 ;;		_main
  2198 ;; This function uses a non-reentrant model
  2199 ;;
  2200                           
  2201                           	psect	text1
  2202  00394E                     __ptext1:
  2203                           	callstack 0
  2204  00394E                     _sm_execute_main:
  2205                           	callstack 14
  2206                           
  2207                           ; BSR set to: 0
  2208                           ;sm_Main_MC50.c: 29:     switch((sm_state_Main_t) psm->current_state)
  2209                           
  2210                           ; BSR set to: 1
  2211                           ;incstack = 0
  2212  00394E  D053               	goto	l25645
  2213  003950                     l25621:
  2214                           
  2215                           ; BSR set to: 0
  2216                           ;sm_Main_MC50.c: 32:         {;sm_Main_MC50.c: 33:             if(programmer_enable==0)
  2217  003950  5185               	movf	_programmer_enable& (0+255),w,b
  2218  003952  A4D8               	btfss	status,2,c
  2219  003954  D066               	goto	l25647
  2220                           
  2221                           ; BSR set to: 0
  2222                           ;sm_Main_MC50.c: 34:                 if(psm->last_event==ev_goto_MenuConfig)
  2223  003956  EE20 F004          	lfsr	2,4
  2224  00395A  51ED               	movf	sm_execute_main@psm& (0+255),w,b
  2225  00395C  26D9               	addwf	fsr2l,f,c
  2226  00395E  51EE               	movf	(sm_execute_main@psm+1)& (0+255),w,b
  2227  003960  22DA               	addwfc	fsr2h,f,c
  2228  003962  0E06               	movlw	6
  2229  003964  18DE               	xorwf	postinc2,w,c
  2230  003966  10DE               	iorwf	postinc2,w,c
  2231  003968  A4D8               	btfss	status,2,c
  2232  00396A  D006               	goto	l25627
  2233  00396C                     u32240:
  2234                           
  2235                           ; BSR set to: 0
  2236                           ;sm_Main_MC50.c: 35:                 {;sm_Main_MC50.c: 37:                     psm->curr
      +                          ent_state = st_MenuConfiguration;
  2237  00396C  C0ED  FFD9         	movff	sm_execute_main@psm,fsr2l
  2238  003970  C0EE  FFDA         	movff	sm_execute_main@psm+1,fsr2h
  2239  003974  0E01               	movlw	1
  2240  003976  D01D               	goto	L2
  2241  003978                     l25627:
  2242                           
  2243                           ; BSR set to: 0
  2244  003978  EE20 F004          	lfsr	2,4
  2245  00397C  51ED               	movf	sm_execute_main@psm& (0+255),w,b
  2246  00397E  26D9               	addwf	fsr2l,f,c
  2247  003980  51EE               	movf	(sm_execute_main@psm+1)& (0+255),w,b
  2248  003982  22DA               	addwfc	fsr2h,f,c
  2249  003984  0E11               	movlw	17
  2250  003986  18DE               	xorwf	postinc2,w,c
  2251  003988  10DE               	iorwf	postinc2,w,c
  2252  00398A  A4D8               	btfss	status,2,c
  2253  00398C  D04A               	goto	l25647
  2254                           
  2255                           ; BSR set to: 0
  2256                           ;sm_Main_MC50.c: 40:                 {;sm_Main_MC50.c: 41:                     psm->curr
      +                          ent_state = st_MotorON;
  2257  00398E  C0ED  FFD9         	movff	sm_execute_main@psm,fsr2l
  2258  003992  C0EE  FFDA         	movff	sm_execute_main@psm+1,fsr2h
  2259  003996  0E02               	movlw	2
  2260  003998  D00C               	goto	L2
  2261  00399A                     l25631:
  2262                           
  2263                           ; BSR set to: 0
  2264                           ;sm_Main_MC50.c: 46:         {;sm_Main_MC50.c: 47:             if(psm->last_event==ev_go
      +                          to_StandBy)
  2265  00399A  EE20 F004          	lfsr	2,4
  2266  00399E  51ED               	movf	sm_execute_main@psm& (0+255),w,b
  2267  0039A0  26D9               	addwf	fsr2l,f,c
  2268  0039A2  51EE               	movf	(sm_execute_main@psm+1)& (0+255),w,b
  2269  0039A4  22DA               	addwfc	fsr2h,f,c
  2270  0039A6  0E07               	movlw	7
  2271  0039A8  18DE               	xorwf	postinc2,w,c
  2272  0039AA  10DE               	iorwf	postinc2,w,c
  2273  0039AC  A4D8               	btfss	status,2,c
  2274  0039AE  D039               	goto	l25647
  2275  0039B0  D00F               	goto	u32270
  2276  0039B2                     L2:
  2277  0039B2  6EDE               	movwf	postinc2,c
  2278  0039B4  0E00               	movlw	0
  2279  0039B6  6EDD               	movwf	postdec2,c
  2280  0039B8  D034               	goto	l25647
  2281  0039BA                     l25635:
  2282                           
  2283                           ; BSR set to: 0
  2284                           ;sm_Main_MC50.c: 54:         {;sm_Main_MC50.c: 55:             if(psm->last_event==ev_go
      +                          to_StandBy)
  2285  0039BA  EE20 F004          	lfsr	2,4
  2286  0039BE  51ED               	movf	sm_execute_main@psm& (0+255),w,b
  2287  0039C0  26D9               	addwf	fsr2l,f,c
  2288  0039C2  51EE               	movf	(sm_execute_main@psm+1)& (0+255),w,b
  2289  0039C4  22DA               	addwfc	fsr2h,f,c
  2290  0039C6  0E07               	movlw	7
  2291  0039C8  18DE               	xorwf	postinc2,w,c
  2292  0039CA  10DE               	iorwf	postinc2,w,c
  2293  0039CC  A4D8               	btfss	status,2,c
  2294  0039CE  D006               	goto	l25639
  2295  0039D0                     u32270:
  2296                           
  2297                           ; BSR set to: 0
  2298                           ;sm_Main_MC50.c: 56:             {;sm_Main_MC50.c: 57:                 psm->current_stat
      +                          e = st_standBy;
  2299  0039D0  C0ED  FFD9         	movff	sm_execute_main@psm,fsr2l
  2300  0039D4  C0EE  FFDA         	movff	sm_execute_main@psm+1,fsr2h
  2301  0039D8  0E00               	movlw	0
  2302  0039DA  D7EB               	goto	L2
  2303  0039DC                     l25639:
  2304                           
  2305                           ; BSR set to: 0
  2306  0039DC  EE20 F004          	lfsr	2,4
  2307  0039E0  51ED               	movf	sm_execute_main@psm& (0+255),w,b
  2308  0039E2  26D9               	addwf	fsr2l,f,c
  2309  0039E4  51EE               	movf	(sm_execute_main@psm+1)& (0+255),w,b
  2310  0039E6  22DA               	addwfc	fsr2h,f,c
  2311  0039E8  0E06               	movlw	6
  2312  0039EA  18DE               	xorwf	postinc2,w,c
  2313  0039EC  10DE               	iorwf	postinc2,w,c
  2314  0039EE  A4D8               	btfss	status,2,c
  2315  0039F0  D018               	goto	l25647
  2316  0039F2  D7BC               	goto	u32240
  2317  0039F4                     l3053:
  2318                           
  2319                           ; BSR set to: 0
  2320  0039F4  D7FF               	goto	l3053
  2321  0039F6                     l25645:
  2322                           
  2323                           ; BSR set to: 0
  2324  0039F6  C0ED  FFD9         	movff	sm_execute_main@psm,fsr2l
  2325  0039FA  C0EE  FFDA         	movff	sm_execute_main@psm+1,fsr2h
  2326  0039FE  50DF               	movf	indf2,w,c
  2327  003A00  6FEF               	movwf	??_sm_execute_main& (0+255),b
  2328  003A02  6BF0               	clrf	(??_sm_execute_main+1)& (0+255),b
  2329                           
  2330                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2331                           ; Switch size 1, requested type "simple"
  2332                           ; Number of cases is 1, Range of values is 0 to 0
  2333                           ; switch strategies available:
  2334                           ; Name         Instructions Cycles
  2335                           ; simple_byte            4     3 (average)
  2336                           ;	Chosen strategy is simple_byte
  2337  003A04  51F0               	movf	(??_sm_execute_main+1)& (0+255),w,b
  2338  003A06  0A00               	xorlw	0	; case 0
  2339  003A08  A4D8               	btfss	status,2,c
  2340  003A0A  D7F4               	goto	l3053
  2341                           
  2342                           ; BSR set to: 0
  2343                           ; Switch size 1, requested type "simple"
  2344                           ; Number of cases is 3, Range of values is 0 to 2
  2345                           ; switch strategies available:
  2346                           ; Name         Instructions Cycles
  2347                           ; simple_byte           10     6 (average)
  2348                           ;	Chosen strategy is simple_byte
  2349  003A0C  51EF               	movf	??_sm_execute_main& (0+255),w,b
  2350  003A0E  0A00               	xorlw	0	; case 0
  2351  003A10  B4D8               	btfsc	status,2,c
  2352  003A12  D79E               	goto	l25621
  2353  003A14  0A01               	xorlw	1	; case 1
  2354  003A16  B4D8               	btfsc	status,2,c
  2355  003A18  D7C0               	goto	l25631
  2356  003A1A  0A03               	xorlw	3	; case 2
  2357  003A1C  B4D8               	btfsc	status,2,c
  2358  003A1E  D7CD               	goto	l25635
  2359  003A20  D7E9               	goto	l3053
  2360  003A22                     l25647:
  2361                           
  2362                           ; BSR set to: 0
  2363                           ;sm_Main_MC50.c: 77:     sm_send_event(&main_stateMachine, ev_NULL);
  2364  003A22  0EF2               	movlw	low _main_stateMachine
  2365  003A24  6E12               	movwf	sm_send_event@psm^0,c
  2366  003A26  0E01               	movlw	high _main_stateMachine
  2367  003A28  6E13               	movwf	(sm_send_event@psm+1)^0,c
  2368  003A2A  0E00               	movlw	0
  2369  003A2C  6E15               	movwf	(sm_send_event@event+1)^0,c
  2370  003A2E  0E00               	movlw	0
  2371  003A30  6E14               	movwf	sm_send_event@event^0,c
  2372  003A32  ECCD  F046         	call	_sm_send_event	;wreg free
  2373                           
  2374                           ;sm_Main_MC50.c: 82:     switch((sm_state_Main_t) psm->current_state)
  2375  003A36  D1F8               	goto	l25925
  2376  003A38                     l25649:
  2377                           
  2378                           ; BSR set to: 0
  2379                           ;sm_Main_MC50.c: 85:         {;sm_Main_MC50.c: 86:             if (button_struct.current
      +                          ==0 && button_struct.timer>((1000/50)*5))
  2380  003A38  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  2381  003A3A  A4D8               	btfss	status,2,c
  2382  003A3C  D016               	goto	l25661
  2383                           
  2384                           ; BSR set to: 0
  2385  003A3E  0E64               	movlw	100
  2386  003A40  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2387  003A42  D013               	goto	l25661
  2388                           
  2389                           ; BSR set to: 0
  2390                           ;sm_Main_MC50.c: 87:             {;sm_Main_MC50.c: 88:                 load_New_Menu(E_M
      +                          enu);
  2391  003A44  0E01               	movlw	1
  2392  003A46  EC53  F024         	call	_load_New_Menu
  2393  003A4A                     l25655:
  2394                           
  2395                           ;sm_Main_MC50.c: 89:                 sm_send_event(&main_stateMachine, ev_goto_MenuConfi
      +                          g);
  2396  003A4A  0EF2               	movlw	low _main_stateMachine
  2397  003A4C  6E12               	movwf	sm_send_event@psm^0,c
  2398  003A4E  0E01               	movlw	high _main_stateMachine
  2399  003A50  6E13               	movwf	(sm_send_event@psm+1)^0,c
  2400  003A52  0E00               	movlw	0
  2401  003A54  6E15               	movwf	(sm_send_event@event+1)^0,c
  2402  003A56  0E06               	movlw	6
  2403  003A58  6E14               	movwf	sm_send_event@event^0,c
  2404  003A5A  ECCD  F046         	call	_sm_send_event	;wreg free
  2405                           
  2406                           ;sm_Main_MC50.c: 90:                 button_struct.processed=1;
  2407  003A5E  0E01               	movlw	1
  2408  003A60  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  2409                           
  2410                           ;sm_Main_MC50.c: 91:                 temp=0;
  2411  003A62  0E00               	movlw	0
  2412  003A64  0100               	movlb	0	; () banked
  2413  003A66  6F80               	movwf	_temp& (0+255),b
  2414                           
  2415                           ;sm_Main_MC50.c: 92:             }
  2416  003A68  0012               	return	
  2417  003A6A                     l25661:
  2418                           
  2419                           ; BSR set to: 0
  2420  003A6A  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  2421  003A6C  A4D8               	btfss	status,2,c
  2422  003A6E  D00B               	goto	l25669
  2423                           
  2424                           ; BSR set to: 0
  2425  003A70  0E14               	movlw	20
  2426  003A72  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2427  003A74  D008               	goto	l25669
  2428                           
  2429                           ; BSR set to: 0
  2430                           ;sm_Main_MC50.c: 94:             {;sm_Main_MC50.c: 97:                 SetSegmentValueMa
      +                          in(dP,d0);
  2431  003A76  0E00               	movlw	0
  2432  003A78  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  2433  003A7A  0E10               	movlw	16
  2434  003A7C  ECCB  F04D         	call	_SetSegmentValueMain
  2435                           
  2436                           ; BSR set to: 0
  2437                           ;sm_Main_MC50.c: 98:                 temp=1;
  2438  003A80  0E01               	movlw	1
  2439  003A82  6F80               	movwf	_temp& (0+255),b
  2440                           
  2441                           ;sm_Main_MC50.c: 99:             }
  2442  003A84  0012               	return	
  2443  003A86                     l25669:
  2444                           
  2445                           ; BSR set to: 0
  2446  003A86  0580               	decf	_temp& (0+255),w,b
  2447  003A88  A4D8               	btfss	status,2,c
  2448  003A8A  D004               	goto	l25679
  2449                           
  2450                           ; BSR set to: 0
  2451                           ;sm_Main_MC50.c: 101:             {;sm_Main_MC50.c: 102:                 load_New_Menu(P
      +                          _Menu);
  2452  003A8C  0E00               	movlw	0
  2453  003A8E  EC53  F024         	call	_load_New_Menu
  2454  003A92  D7DB               	goto	l25655
  2455  003A94                     l25679:
  2456                           
  2457                           ; BSR set to: 0
  2458  003A94  0E27               	movlw	39
  2459  003A96  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  2460  003A98  A4D8               	btfss	status,2,c
  2461  003A9A  D007               	goto	l25691
  2462                           
  2463                           ; BSR set to: 0
  2464  003A9C  0E78               	movlw	120
  2465  003A9E  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2466  003AA0  D004               	goto	l25691
  2467                           
  2468                           ; BSR set to: 0
  2469                           ;sm_Main_MC50.c: 108:             {;sm_Main_MC50.c: 110:                 load_New_Menu(D
      +                          el_Menu);
  2470  003AA2  0E0D               	movlw	13
  2471  003AA4  EC53  F024         	call	_load_New_Menu
  2472  003AA8  D7D0               	goto	l25655
  2473  003AAA                     l25691:
  2474                           
  2475                           ; BSR set to: 0
  2476  003AAA  0E27               	movlw	39
  2477  003AAC  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  2478  003AAE  A4D8               	btfss	status,2,c
  2479  003AB0  D00B               	goto	l25699
  2480                           
  2481                           ; BSR set to: 0
  2482  003AB2  0E14               	movlw	20
  2483  003AB4  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2484  003AB6  D008               	goto	l25699
  2485                           
  2486                           ; BSR set to: 0
  2487                           ;sm_Main_MC50.c: 116:             {;sm_Main_MC50.c: 118:                 SetSegmentValue
      +                          Main(d5,dU);
  2488  003AB8  0E13               	movlw	19
  2489  003ABA  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  2490  003ABC  0E05               	movlw	5
  2491  003ABE  ECCB  F04D         	call	_SetSegmentValueMain
  2492                           
  2493                           ; BSR set to: 0
  2494                           ;sm_Main_MC50.c: 119:                 temp=2;
  2495  003AC2  0E02               	movlw	2
  2496  003AC4  6F80               	movwf	_temp& (0+255),b
  2497                           
  2498                           ;sm_Main_MC50.c: 120:             }
  2499  003AC6  0012               	return	
  2500  003AC8                     l25699:
  2501                           
  2502                           ; BSR set to: 0
  2503  003AC8  0E02               	movlw	2
  2504  003ACA  1980               	xorwf	_temp& (0+255),w,b
  2505  003ACC  A4D8               	btfss	status,2,c
  2506  003ACE  D004               	goto	l25709
  2507                           
  2508                           ; BSR set to: 0
  2509                           ;sm_Main_MC50.c: 122:             {;sm_Main_MC50.c: 123:                 load_New_Menu(S
      +                          _Menu);
  2510  003AD0  0E0C               	movlw	12
  2511  003AD2  EC53  F024         	call	_load_New_Menu
  2512  003AD6  D7B9               	goto	l25655
  2513  003AD8                     l25709:
  2514                           
  2515                           ; BSR set to: 0
  2516  003AD8  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  2517  003ADA  A4D8               	btfss	status,2,c
  2518  003ADC  D009               	goto	l25715
  2519                           
  2520                           ; BSR set to: 0
  2521  003ADE  0101               	movlb	1	; () banked
  2522  003AE0  5103               	movf	(_var_sys+3)& (0+255),w,b	;volatile
  2523  003AE2  A4D8               	btfss	status,2,c
  2524  003AE4  D005               	goto	l25715
  2525                           
  2526                           ; BSR set to: 1
  2527                           ;sm_Main_MC50.c: 129:             {;sm_Main_MC50.c: 130:                 var_sys.StartFr
      +                          omButton=YES;
  2528  003AE6  0E01               	movlw	1
  2529  003AE8  6F09               	movwf	(_var_sys+9)& (0+255),b	;volatile
  2530                           
  2531                           ;sm_Main_MC50.c: 131:                 var_sys.StateMotor=InClose;
  2532  003AEA  0E03               	movlw	3
  2533  003AEC  6F00               	movwf	_var_sys& (0+255),b	;volatile
  2534                           
  2535                           ;sm_Main_MC50.c: 132:             }
  2536  003AEE  0012               	return	
  2537  003AF0                     l25715:
  2538  003AF0  0E17               	movlw	23
  2539  003AF2  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  2540  003AF4  A4D8               	btfss	status,2,c
  2541  003AF6  D009               	goto	l25721
  2542  003AF8  0101               	movlb	1	; () banked
  2543  003AFA  5104               	movf	(_var_sys+4)& (0+255),w,b	;volatile
  2544  003AFC  A4D8               	btfss	status,2,c
  2545  003AFE  D005               	goto	l25721
  2546                           
  2547                           ; BSR set to: 1
  2548                           ;sm_Main_MC50.c: 134:             {;sm_Main_MC50.c: 135:                 var_sys.StartFr
      +                          omButton=YES;
  2549  003B00  0E01               	movlw	1
  2550  003B02  6F09               	movwf	(_var_sys+9)& (0+255),b	;volatile
  2551                           
  2552                           ;sm_Main_MC50.c: 136:                 var_sys.StateMotor=InOpenFull;
  2553  003B04  0E01               	movlw	1
  2554  003B06  6F00               	movwf	_var_sys& (0+255),b	;volatile
  2555                           
  2556                           ;sm_Main_MC50.c: 137:             }
  2557  003B08  0012               	return	
  2558  003B0A                     l25721:
  2559  003B0A  0101               	movlb	1	; () banked
  2560  003B0C  0509               	decf	(_var_sys+9)& (0+255),w,b	;volatile
  2561  003B0E  A4D8               	btfss	status,2,c
  2562  003B10  D005               	goto	l25725
  2563                           
  2564                           ; BSR set to: 1
  2565                           ;sm_Main_MC50.c: 139:             {;sm_Main_MC50.c: 140:                 var_sys.StartFr
      +                          omButton=NO;
  2566  003B12  0E00               	movlw	0
  2567  003B14  6F09               	movwf	(_var_sys+9)& (0+255),b	;volatile
  2568                           
  2569                           ;sm_Main_MC50.c: 141:                 var_sys.StateMotor = Stopped;
  2570  003B16  0E00               	movlw	0
  2571  003B18  6F00               	movwf	_var_sys& (0+255),b	;volatile
  2572                           
  2573                           ;sm_Main_MC50.c: 142:             }
  2574  003B1A  0012               	return	
  2575  003B1C                     l25725:
  2576                           
  2577                           ; BSR set to: 1
  2578  003B1C  0E06               	movlw	6
  2579  003B1E  183B               	xorwf	_rfCMD^0,w,c	;volatile
  2580  003B20  B4D8               	btfsc	status,2,c
  2581  003B22  D004               	goto	u32450
  2582                           
  2583                           ; BSR set to: 1
  2584  003B24  0E05               	movlw	5
  2585  003B26  183B               	xorwf	_rfCMD^0,w,c	;volatile
  2586  003B28  A4D8               	btfss	status,2,c
  2587  003B2A  D015               	goto	l25739
  2588  003B2C                     u32450:
  2589                           
  2590                           ; BSR set to: 1
  2591  003B2C  0E63               	movlw	99
  2592  003B2E  6444               	cpfsgt	(_rfCMD+9)^0,c	;volatile
  2593  003B30  D012               	goto	l25739
  2594                           
  2595                           ; BSR set to: 1
  2596                           ;sm_Main_MC50.c: 144:             {;sm_Main_MC50.c: 145:                 load_New_Menu(S
      +                          _Menu);
  2597  003B32  0E0C               	movlw	12
  2598  003B34  EC53  F024         	call	_load_New_Menu
  2599                           
  2600                           ;sm_Main_MC50.c: 146:                 sm_send_event(&main_stateMachine, ev_goto_MenuConf
      +                          ig);
  2601  003B38  0EF2               	movlw	low _main_stateMachine
  2602  003B3A  6E12               	movwf	sm_send_event@psm^0,c
  2603  003B3C  0E01               	movlw	high _main_stateMachine
  2604  003B3E  6E13               	movwf	(sm_send_event@psm+1)^0,c
  2605  003B40  0E00               	movlw	0
  2606  003B42  6E15               	movwf	(sm_send_event@event+1)^0,c
  2607  003B44  0E06               	movlw	6
  2608  003B46  6E14               	movwf	sm_send_event@event^0,c
  2609  003B48  ECCD  F046         	call	_sm_send_event	;wreg free
  2610                           
  2611                           ;sm_Main_MC50.c: 147:                 var_sys.ProgrammingDistanceIs=rfCMD.currentType;
  2612  003B4C  C03B  F13B         	movff	_rfCMD,_var_sys+59	;volatile
  2613                           
  2614                           ;sm_Main_MC50.c: 148:                 rfCMD.processed=1;
  2615  003B50  0E01               	movlw	1
  2616  003B52  6E45               	movwf	(_rfCMD+10)^0,c	;volatile
  2617                           
  2618                           ;sm_Main_MC50.c: 149:             }
  2619  003B54  0012               	return	
  2620  003B56                     l25739:
  2621                           
  2622                           ; BSR set to: 1
  2623  003B56  BFAC               	btfsc	(_ts_system+13)& (0+255),7,b	;volatile
  2624  003B58  D005               	goto	u32470
  2625  003B5A  51AC               	movf	(_ts_system+13)& (0+255),w,b	;volatile
  2626  003B5C  E111               	bnz	l3065
  2627  003B5E  05AB               	decf	(_ts_system+12)& (0+255),w,b	;volatile
  2628  003B60  B0D8               	btfsc	status,0,c
  2629  003B62  0012               	return	
  2630  003B64                     u32470:
  2631                           
  2632                           ; BSR set to: 1
  2633                           ;sm_Main_MC50.c: 151:             {;sm_Main_MC50.c: 152:                 if(var_sys.FimC
      +                          urso_CloseIsEnabled == YES)
  2634  003B64  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
  2635  003B66  A4D8               	btfss	status,2,c
  2636  003B68  D006               	goto	l25745
  2637                           
  2638                           ; BSR set to: 1
  2639                           ;sm_Main_MC50.c: 154:                     {;sm_Main_MC50.c: 156:                        
      +                           SetSegmentValueMain(dF,dC);
  2640  003B6A  0E0C               	movlw	12
  2641  003B6C  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  2642  003B6E  0E0F               	movlw	15
  2643  003B70  ECCB  F04D         	call	_SetSegmentValueMain
  2644                           
  2645                           ;sm_Main_MC50.c: 157:                     }
  2646  003B74  0012               	return	
  2647  003B76                     l25745:
  2648                           
  2649                           ; BSR set to: 1
  2650                           ;sm_Main_MC50.c: 160:                 SetSegmentValueMain(dMinus,dMinus);
  2651  003B76  0E18               	movlw	24
  2652  003B78  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  2653  003B7A  0E18               	movlw	24
  2654  003B7C  ECCB  F04D         	call	_SetSegmentValueMain
  2655  003B80                     l3065:
  2656                           
  2657                           ; BSR set to: 1
  2658  003B80  0012               	return	
  2659  003B82                     l25747:
  2660                           
  2661                           ; BSR set to: 0
  2662                           ;sm_Main_MC50.c: 167:         {;sm_Main_MC50.c: 168:             sm_execute_menuConfigur
      +                          ation(&menuConfiguration_stateMachine);
  2663  003B82  0EBB               	movlw	low _menuConfiguration_stateMachine
  2664  003B84  6FE9               	movwf	sm_execute_menuConfiguration@psm& (0+255),b
  2665  003B86  0E02               	movlw	high _menuConfiguration_stateMachine
  2666  003B88  6FEA               	movwf	(sm_execute_menuConfiguration@psm+1)& (0+255),b
  2667  003B8A  EC91  F007         	call	_sm_execute_menuConfiguration	;wreg free
  2668                           
  2669                           ;sm_Main_MC50.c: 169:         };sm_Main_MC50.c: 170:         break;
  2670  003B8E  0012               	return	
  2671  003B90                     l25749:
  2672                           
  2673                           ; BSR set to: 0
  2674                           ;sm_Main_MC50.c: 172:         {;sm_Main_MC50.c: 175:             aux_in_auto_close = NO;
  2675  003B90  0E00               	movlw	0
  2676  003B92  0101               	movlb	1	; () banked
  2677  003B94  6F90               	movwf	_aux_in_auto_close& (0+255),b
  2678                           
  2679                           ; BSR set to: 1
  2680                           ;sm_Main_MC50.c: 176:             if ( controlGate_stateMachine.current_state == st_Open
      +                          ed )
  2681  003B96  0E04               	movlw	4
  2682  003B98  19E7               	xorwf	_controlGate_stateMachine& (0+255),w,b
  2683  003B9A  11E8               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
  2684  003B9C  A4D8               	btfss	status,2,c
  2685  003B9E  D013               	goto	l3088
  2686                           
  2687                           ; BSR set to: 1
  2688                           ;sm_Main_MC50.c: 177:             {;sm_Main_MC50.c: 179:                 if ( var_sys_NV
      +                          M.operationMode == ModoPassoPasso && var_sys.passoAPassoAutoClose == YES )
  2689  003BA0  0100               	movlb	0	; () banked
  2690  003BA2  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
  2691  003BA4  A4D8               	btfss	status,2,c
  2692  003BA6  D007               	goto	l25759
  2693                           
  2694                           ; BSR set to: 0
  2695  003BA8  0101               	movlb	1	; () banked
  2696  003BAA  0550               	decf	(_var_sys+80)& (0+255),w,b	;volatile
  2697  003BAC  A4D8               	btfss	status,2,c
  2698  003BAE  D003               	goto	l25759
  2699  003BB0                     u32510:
  2700                           
  2701                           ; BSR set to: 1
  2702                           ;sm_Main_MC50.c: 180:                 {;sm_Main_MC50.c: 181:                     aux_in_
      +                          auto_close = YES;
  2703  003BB0  0E01               	movlw	1
  2704  003BB2  6F90               	movwf	_aux_in_auto_close& (0+255),b
  2705                           
  2706                           ;sm_Main_MC50.c: 182:                 }
  2707  003BB4  D008               	goto	l3088
  2708  003BB6                     l25759:
  2709  003BB6  0100               	movlb	0	; () banked
  2710  003BB8  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
  2711  003BBA  B4D8               	btfsc	status,2,c
  2712  003BBC  D004               	goto	l3088
  2713                           
  2714                           ; BSR set to: 0
  2715  003BBE  0101               	movlb	1	; () banked
  2716  003BC0  5123               	movf	(_var_sys+35)& (0+255),w,b	;volatile
  2717  003BC2  A4D8               	btfss	status,2,c
  2718  003BC4  D7F5               	goto	u32510
  2719  003BC6                     l3088:
  2720                           
  2721                           ;sm_Main_MC50.c: 193:             if(var_sys.StateMotor==Stopped && ( (controlGate_state
      +                          Machine.current_state==st_Opened && aux_in_auto_close==NO) || controlGate_stateMachine.c
      +                          urrent_state==st_Closed || controlGate_stateMachine.current_state==st_Idle ) )
  2722  003BC6  0101               	movlb	1	; () banked
  2723  003BC8  5100               	movf	_var_sys& (0+255),w,b	;volatile
  2724  003BCA  A4D8               	btfss	status,2,c
  2725  003BCC  D069               	goto	l3102
  2726                           
  2727                           ; BSR set to: 1
  2728  003BCE  0E04               	movlw	4
  2729  003BD0  19E7               	xorwf	_controlGate_stateMachine& (0+255),w,b
  2730  003BD2  11E8               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
  2731  003BD4  A4D8               	btfss	status,2,c
  2732  003BD6  D003               	goto	u32560
  2733                           
  2734                           ; BSR set to: 1
  2735  003BD8  5190               	movf	_aux_in_auto_close& (0+255),w,b
  2736  003BDA  B4D8               	btfsc	status,2,c
  2737  003BDC  D008               	goto	u32580
  2738  003BDE                     u32560:
  2739                           
  2740                           ; BSR set to: 1
  2741  003BDE  05E7               	decf	_controlGate_stateMachine& (0+255),w,b
  2742  003BE0  11E8               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
  2743  003BE2  B4D8               	btfsc	status,2,c
  2744  003BE4  D004               	goto	u32580
  2745                           
  2746                           ; BSR set to: 1
  2747  003BE6  51E7               	movf	_controlGate_stateMachine& (0+255),w,b
  2748  003BE8  11E8               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
  2749  003BEA  A4D8               	btfss	status,2,c
  2750  003BEC  D059               	goto	l3102
  2751  003BEE                     u32580:
  2752                           
  2753                           ; BSR set to: 1
  2754                           ;sm_Main_MC50.c: 194:             {;sm_Main_MC50.c: 195:                 if (button_stru
      +                          ct.current==0 && button_struct.timer>((1000/50)*5))
  2755  003BEE  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  2756  003BF0  A4D8               	btfss	status,2,c
  2757  003BF2  D015               	goto	l25787
  2758                           
  2759                           ; BSR set to: 1
  2760  003BF4  0E64               	movlw	100
  2761  003BF6  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2762  003BF8  D012               	goto	l25787
  2763                           
  2764                           ; BSR set to: 1
  2765                           ;sm_Main_MC50.c: 196:                 {;sm_Main_MC50.c: 197:                     load_Ne
      +                          w_Menu(E_Menu);
  2766  003BFA  0E01               	movlw	1
  2767  003BFC  EC53  F024         	call	_load_New_Menu
  2768  003C00                     l25781:
  2769                           
  2770                           ;sm_Main_MC50.c: 198:                     sm_send_event(&main_stateMachine, ev_goto_Menu
      +                          Config);
  2771  003C00  0EF2               	movlw	low _main_stateMachine
  2772  003C02  6E12               	movwf	sm_send_event@psm^0,c
  2773  003C04  0E01               	movlw	high _main_stateMachine
  2774  003C06  6E13               	movwf	(sm_send_event@psm+1)^0,c
  2775  003C08  0E00               	movlw	0
  2776  003C0A  6E15               	movwf	(sm_send_event@event+1)^0,c
  2777  003C0C  0E06               	movlw	6
  2778  003C0E  6E14               	movwf	sm_send_event@event^0,c
  2779  003C10  ECCD  F046         	call	_sm_send_event	;wreg free
  2780                           
  2781                           ;sm_Main_MC50.c: 199:                     button_struct.processed=1;
  2782  003C14  0E01               	movlw	1
  2783  003C16  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  2784                           
  2785                           ;sm_Main_MC50.c: 200:                     temp=0;
  2786  003C18  0E00               	movlw	0
  2787  003C1A  0100               	movlb	0	; () banked
  2788  003C1C  D037               	goto	L4
  2789  003C1E                     l25787:
  2790                           
  2791                           ; BSR set to: 1
  2792  003C1E  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  2793  003C20  A4D8               	btfss	status,2,c
  2794  003C22  D00A               	goto	l25795
  2795                           
  2796                           ; BSR set to: 1
  2797  003C24  0E14               	movlw	20
  2798  003C26  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2799  003C28  D007               	goto	l25795
  2800                           
  2801                           ; BSR set to: 1
  2802                           ;sm_Main_MC50.c: 203:                 {;sm_Main_MC50.c: 205:                     SetSegm
      +                          entValueMain(dP,d0);
  2803  003C2A  0E00               	movlw	0
  2804  003C2C  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  2805  003C2E  0E10               	movlw	16
  2806  003C30  ECCB  F04D         	call	_SetSegmentValueMain
  2807                           
  2808                           ; BSR set to: 0
  2809                           ;sm_Main_MC50.c: 206:                     temp=1;
  2810  003C34  0E01               	movlw	1
  2811  003C36  D02A               	goto	L4
  2812  003C38                     l25795:
  2813                           
  2814                           ; BSR set to: 1
  2815  003C38  0100               	movlb	0	; () banked
  2816  003C3A  0580               	decf	_temp& (0+255),w,b
  2817  003C3C  A4D8               	btfss	status,2,c
  2818  003C3E  D00E               	goto	l25809
  2819                           
  2820                           ; BSR set to: 0
  2821                           ;sm_Main_MC50.c: 209:                 {;sm_Main_MC50.c: 210:                     load_Ne
      +                          w_Menu(P_Menu);
  2822  003C40  0E00               	movlw	0
  2823  003C42  EC53  F024         	call	_load_New_Menu
  2824                           
  2825                           ;sm_Main_MC50.c: 212:                     button_struct.processed=1;
  2826  003C46  0E01               	movlw	1
  2827  003C48  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  2828                           
  2829                           ;sm_Main_MC50.c: 213:                     temp=0;
  2830  003C4A  0E00               	movlw	0
  2831  003C4C  0100               	movlb	0	; () banked
  2832  003C4E  6F80               	movwf	_temp& (0+255),b
  2833                           
  2834                           ; BSR set to: 0
  2835                           ;sm_Main_MC50.c: 214:                     main_stateMachine.current_state = st_MenuConfi
      +                          guration;
  2836  003C50  0E00               	movlw	0
  2837  003C52  0101               	movlb	1	; () banked
  2838  003C54  6FF3               	movwf	(_main_stateMachine+1)& (0+255),b
  2839  003C56  0E01               	movlw	1
  2840  003C58  6FF2               	movwf	_main_stateMachine& (0+255),b
  2841  003C5A  0012               	return	
  2842  003C5C                     l25809:
  2843                           
  2844                           ; BSR set to: 0
  2845  003C5C  0E27               	movlw	39
  2846  003C5E  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  2847  003C60  A4D8               	btfss	status,2,c
  2848  003C62  D007               	goto	l25821
  2849                           
  2850                           ; BSR set to: 0
  2851  003C64  0E78               	movlw	120
  2852  003C66  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2853  003C68  D004               	goto	l25821
  2854                           
  2855                           ; BSR set to: 0
  2856                           ;sm_Main_MC50.c: 218:             {;sm_Main_MC50.c: 220:                 load_New_Menu(D
      +                          el_Menu);
  2857  003C6A  0E0D               	movlw	13
  2858  003C6C  EC53  F024         	call	_load_New_Menu
  2859  003C70  D7C7               	goto	l25781
  2860  003C72                     l25821:
  2861                           
  2862                           ; BSR set to: 0
  2863  003C72  0E27               	movlw	39
  2864  003C74  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  2865  003C76  A4D8               	btfss	status,2,c
  2866  003C78  D00B               	goto	l25829
  2867                           
  2868                           ; BSR set to: 0
  2869  003C7A  0E14               	movlw	20
  2870  003C7C  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2871  003C7E  D008               	goto	l25829
  2872                           
  2873                           ; BSR set to: 0
  2874                           ;sm_Main_MC50.c: 226:             {;sm_Main_MC50.c: 228:                 SetSegmentValue
      +                          Main(d5,dU);
  2875  003C80  0E13               	movlw	19
  2876  003C82  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  2877  003C84  0E05               	movlw	5
  2878  003C86  ECCB  F04D         	call	_SetSegmentValueMain
  2879                           
  2880                           ; BSR set to: 0
  2881                           ;sm_Main_MC50.c: 229:                 temp=2;
  2882  003C8A  0E02               	movlw	2
  2883  003C8C                     L4:
  2884  003C8C  6F80               	movwf	_temp& (0+255),b
  2885                           
  2886                           ;sm_Main_MC50.c: 230:             }
  2887  003C8E  D008               	goto	l3102
  2888  003C90                     l25829:
  2889                           
  2890                           ; BSR set to: 0
  2891  003C90  0E02               	movlw	2
  2892  003C92  1980               	xorwf	_temp& (0+255),w,b
  2893  003C94  A4D8               	btfss	status,2,c
  2894  003C96  D004               	goto	l3102
  2895                           
  2896                           ; BSR set to: 0
  2897                           ;sm_Main_MC50.c: 232:             {;sm_Main_MC50.c: 233:                 load_New_Menu(S
      +                          _Menu);
  2898  003C98  0E0C               	movlw	12
  2899  003C9A  EC53  F024         	call	_load_New_Menu
  2900  003C9E  D6D5               	goto	l25655
  2901  003CA0                     l3102:
  2902                           
  2903                           ;sm_Main_MC50.c: 243:             if( ts_system.timeSinalizationDigit<=0 && (button_stru
      +                          ct.current!=0 && button_struct.current!=0x27) )
  2904                           
  2905                           ; BSR set to: 0
  2906  003CA0  0101               	movlb	1	; () banked
  2907  003CA2  BFAC               	btfsc	(_ts_system+13)& (0+255),7,b	;volatile
  2908  003CA4  D005               	goto	u32690
  2909  003CA6  51AC               	movf	(_ts_system+13)& (0+255),w,b	;volatile
  2910  003CA8  E102               	bnz	u32691
  2911  003CAA  05AB               	decf	(_ts_system+12)& (0+255),w,b	;volatile
  2912  003CAC  B0D8               	btfsc	status,0,c
  2913  003CAE                     u32691:
  2914  003CAE  0012               	return	
  2915  003CB0                     u32690:
  2916                           
  2917                           ; BSR set to: 1
  2918  003CB0  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  2919  003CB2  B4D8               	btfsc	status,2,c
  2920  003CB4  0012               	return	
  2921                           
  2922                           ; BSR set to: 1
  2923  003CB6  0E27               	movlw	39
  2924  003CB8  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  2925  003CBA  B4D8               	btfsc	status,2,c
  2926  003CBC  0012               	return	
  2927                           
  2928                           ; BSR set to: 1
  2929                           ;sm_Main_MC50.c: 244:             {;sm_Main_MC50.c: 245:                 if(var_sys.Stat
      +                          eMotor==InClose )
  2930  003CBE  0E03               	movlw	3
  2931  003CC0  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
  2932  003CC2  A4D8               	btfss	status,2,c
  2933  003CC4  D011               	goto	l25855
  2934                           
  2935                           ; BSR set to: 1
  2936                           ;sm_Main_MC50.c: 246:                 {;sm_Main_MC50.c: 248:                    SetSegme
      +                          ntValueIntermitentMain(dC,dL,( 500/50));
  2937  003CC6  0E12               	movlw	18
  2938  003CC8  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  2939  003CCA  0E00               	movlw	0
  2940  003CCC  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  2941  003CCE  0E0A               	movlw	10
  2942  003CD0  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  2943  003CD2  0E0C               	movlw	12
  2944  003CD4  EC66  F04E         	call	_SetSegmentValueIntermitentMain
  2945  003CD8                     l25851:
  2946                           
  2947                           ;sm_Main_MC50.c: 249:                    ts_system.timeSinalizationDigit=( 200/50);
  2948  003CD8  0E00               	movlw	0
  2949  003CDA  0101               	movlb	1	; () banked
  2950  003CDC  6FAC               	movwf	(_ts_system+13)& (0+255),b	;volatile
  2951  003CDE  0E04               	movlw	4
  2952  003CE0  6FAB               	movwf	(_ts_system+12)& (0+255),b	;volatile
  2953                           
  2954                           ; BSR set to: 1
  2955                           ;sm_Main_MC50.c: 251:                     var_sys.showAP = NO;
  2956  003CE2  0E00               	movlw	0
  2957  003CE4  6F4F               	movwf	(_var_sys+79)& (0+255),b	;volatile
  2958                           
  2959                           ;sm_Main_MC50.c: 252:                 }
  2960  003CE6  0012               	return	
  2961  003CE8                     l25855:
  2962                           
  2963                           ; BSR set to: 1
  2964  003CE8  0E02               	movlw	2
  2965  003CEA  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
  2966  003CEC  B4D8               	btfsc	status,2,c
  2967  003CEE  D003               	goto	u32740
  2968                           
  2969                           ; BSR set to: 1
  2970  003CF0  0500               	decf	_var_sys& (0+255),w,b	;volatile
  2971  003CF2  A4D8               	btfss	status,2,c
  2972  003CF4  D00A               	goto	l25865
  2973  003CF6                     u32740:
  2974                           
  2975                           ; BSR set to: 1
  2976                           ;sm_Main_MC50.c: 254:                 {;sm_Main_MC50.c: 256:                     SetSegm
      +                          entValueIntermitentMain(d0,dP,( 500/50));
  2977  003CF6  0E10               	movlw	16
  2978  003CF8  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  2979  003CFA  0E00               	movlw	0
  2980  003CFC  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  2981  003CFE  0E0A               	movlw	10
  2982  003D00  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  2983  003D02  0E00               	movlw	0
  2984  003D04  EC66  F04E         	call	_SetSegmentValueIntermitentMain
  2985  003D08  D7E7               	goto	l25851
  2986  003D0A                     l25865:
  2987                           
  2988                           ; BSR set to: 1
  2989  003D0A  5100               	movf	_var_sys& (0+255),w,b	;volatile
  2990  003D0C  A4D8               	btfss	status,2,c
  2991  003D0E  D00F               	goto	l25871
  2992                           
  2993                           ; BSR set to: 1
  2994  003D10  05E7               	decf	_controlGate_stateMachine& (0+255),w,b
  2995  003D12  11E8               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
  2996  003D14  A4D8               	btfss	status,2,c
  2997  003D16  D00B               	goto	l25871
  2998                           
  2999                           ; BSR set to: 1
  3000                           ;sm_Main_MC50.c: 262:                 {;sm_Main_MC50.c: 263:                     sm_send
      +                          _event(&main_stateMachine, ev_goto_StandBy);
  3001  003D18  0EF2               	movlw	low _main_stateMachine
  3002  003D1A  6E12               	movwf	sm_send_event@psm^0,c
  3003  003D1C  0E01               	movlw	high _main_stateMachine
  3004  003D1E  6E13               	movwf	(sm_send_event@psm+1)^0,c
  3005  003D20  0E00               	movlw	0
  3006  003D22  6E15               	movwf	(sm_send_event@event+1)^0,c
  3007  003D24  0E07               	movlw	7
  3008  003D26  6E14               	movwf	sm_send_event@event^0,c
  3009  003D28  ECCD  F046         	call	_sm_send_event	;wreg free
  3010                           
  3011                           ;sm_Main_MC50.c: 264:                 }
  3012  003D2C  0012               	return	
  3013  003D2E                     l25871:
  3014                           
  3015                           ; BSR set to: 1
  3016  003D2E  5100               	movf	_var_sys& (0+255),w,b	;volatile
  3017  003D30  A4D8               	btfss	status,2,c
  3018  003D32  D074               	goto	l25921
  3019                           
  3020                           ; BSR set to: 1
  3021  003D34  0E04               	movlw	4
  3022  003D36  19E7               	xorwf	_controlGate_stateMachine& (0+255),w,b
  3023  003D38  11E8               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
  3024  003D3A  A4D8               	btfss	status,2,c
  3025  003D3C  D06F               	goto	l25921
  3026                           
  3027                           ; BSR set to: 1
  3028                           ;sm_Main_MC50.c: 266:                 {;sm_Main_MC50.c: 268:                     if
  3029  003D3E  0100               	movlb	0	; () banked
  3030  003D40  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
  3031  003D42  B4D8               	btfsc	status,2,c
  3032  003D44  D00B               	goto	u32820
  3033                           
  3034                           ; BSR set to: 0
  3035  003D46  0101               	movlb	1	; () banked
  3036  003D48  5123               	movf	(_var_sys+35)& (0+255),w,b	;volatile
  3037  003D4A  B4D8               	btfsc	status,2,c
  3038  003D4C  D007               	goto	u32820
  3039                           
  3040                           ; BSR set to: 1
  3041  003D4E  050B               	decf	(_var_sys+11)& (0+255),w,b	;volatile
  3042  003D50  B4D8               	btfsc	status,2,c
  3043  003D52  D013               	goto	u32860
  3044                           
  3045                           ; BSR set to: 1
  3046  003D54  0E03               	movlw	3
  3047  003D56  190B               	xorwf	(_var_sys+11)& (0+255),w,b	;volatile
  3048  003D58  B4D8               	btfsc	status,2,c
  3049  003D5A  D00F               	goto	u32860
  3050  003D5C                     u32820:
  3051  003D5C  0100               	movlb	0	; () banked
  3052  003D5E  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
  3053  003D60  A4D8               	btfss	status,2,c
  3054  003D62  D026               	goto	l25899
  3055                           
  3056                           ; BSR set to: 0
  3057  003D64  0101               	movlb	1	; () banked
  3058  003D66  0550               	decf	(_var_sys+80)& (0+255),w,b	;volatile
  3059  003D68  A4D8               	btfss	status,2,c
  3060  003D6A  D022               	goto	l25899
  3061                           
  3062                           ; BSR set to: 1
  3063  003D6C  0E02               	movlw	2
  3064  003D6E  190B               	xorwf	(_var_sys+11)& (0+255),w,b	;volatile
  3065  003D70  B4D8               	btfsc	status,2,c
  3066  003D72  D01E               	goto	l25899
  3067                           
  3068                           ; BSR set to: 1
  3069  003D74  5123               	movf	(_var_sys+35)& (0+255),w,b	;volatile
  3070  003D76  B4D8               	btfsc	status,2,c
  3071  003D78  D01B               	goto	l25899
  3072  003D7A                     u32860:
  3073                           
  3074                           ; BSR set to: 1
  3075                           ;sm_Main_MC50.c: 273:                     {;sm_Main_MC50.c: 274:                        
      +                           ts_system.timeSinalizationDigit=( 500/50);
  3076  003D7A  0E00               	movlw	0
  3077  003D7C  6FAC               	movwf	(_ts_system+13)& (0+255),b	;volatile
  3078  003D7E  0E0A               	movlw	10
  3079  003D80  6FAB               	movwf	(_ts_system+12)& (0+255),b	;volatile
  3080                           
  3081                           ; BSR set to: 1
  3082                           ;sm_Main_MC50.c: 279:                         if ( var_sys.showAP == YES )
  3083  003D82  054F               	decf	(_var_sys+79)& (0+255),w,b	;volatile
  3084  003D84  A4D8               	btfss	status,2,c
  3085  003D86  D00A               	goto	l25897
  3086                           
  3087                           ; BSR set to: 1
  3088                           ;sm_Main_MC50.c: 280:                         {;sm_Main_MC50.c: 281:                    
      +                                   SetSegmentValueIntermitentMain(dA,dP,( 500/50));
  3089  003D88  0E10               	movlw	16
  3090  003D8A  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  3091  003D8C  0E00               	movlw	0
  3092  003D8E  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  3093  003D90  0E0A               	movlw	10
  3094  003D92  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  3095  003D94  0E0A               	movlw	10
  3096  003D96  EC66  F04E         	call	_SetSegmentValueIntermitentMain
  3097                           
  3098                           ;sm_Main_MC50.c: 282:                         }
  3099  003D9A  0012               	return	
  3100  003D9C                     l25897:
  3101                           
  3102                           ; BSR set to: 1
  3103                           ;sm_Main_MC50.c: 284:                         {;sm_Main_MC50.c: 285:                    
      +                                   SetSegmentValueIntermitentMain(dA,dF,( 500/50));
  3104  003D9C  0E0F               	movlw	15
  3105  003D9E  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  3106  003DA0  0E00               	movlw	0
  3107  003DA2  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  3108  003DA4  0E0A               	movlw	10
  3109  003DA6  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  3110  003DA8  0E0A               	movlw	10
  3111  003DAA  EC66  F04E         	call	_SetSegmentValueIntermitentMain
  3112  003DAE  0012               	return	
  3113  003DB0                     l25899:
  3114  003DB0  0100               	movlb	0	; () banked
  3115  003DB2  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
  3116  003DB4  B4D8               	btfsc	status,2,c
  3117  003DB6  D008               	goto	u32900
  3118                           
  3119                           ; BSR set to: 0
  3120  003DB8  0101               	movlb	1	; () banked
  3121  003DBA  5123               	movf	(_var_sys+35)& (0+255),w,b	;volatile
  3122  003DBC  B4D8               	btfsc	status,2,c
  3123  003DBE  D004               	goto	u32900
  3124                           
  3125                           ; BSR set to: 1
  3126  003DC0  0E02               	movlw	2
  3127  003DC2  190B               	xorwf	(_var_sys+11)& (0+255),w,b	;volatile
  3128  003DC4  B4D8               	btfsc	status,2,c
  3129  003DC6  D00C               	goto	u32930
  3130  003DC8                     u32900:
  3131  003DC8  0100               	movlb	0	; () banked
  3132  003DCA  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
  3133  003DCC  A4D8               	btfss	status,2,c
  3134  003DCE  D016               	goto	l25915
  3135                           
  3136                           ; BSR set to: 0
  3137  003DD0  0101               	movlb	1	; () banked
  3138  003DD2  0550               	decf	(_var_sys+80)& (0+255),w,b	;volatile
  3139  003DD4  A4D8               	btfss	status,2,c
  3140  003DD6  D012               	goto	l25915
  3141                           
  3142                           ; BSR set to: 1
  3143  003DD8  0E02               	movlw	2
  3144  003DDA  190B               	xorwf	(_var_sys+11)& (0+255),w,b	;volatile
  3145  003DDC  A4D8               	btfss	status,2,c
  3146  003DDE  D00E               	goto	l25915
  3147  003DE0                     u32930:
  3148                           
  3149                           ; BSR set to: 1
  3150                           ;sm_Main_MC50.c: 294:                     {;sm_Main_MC50.c: 295:                        
      +                           ts_system.timeSinalizationDigit=( 500/50);
  3151  003DE0  0E00               	movlw	0
  3152  003DE2  6FAC               	movwf	(_ts_system+13)& (0+255),b	;volatile
  3153  003DE4  0E0A               	movlw	10
  3154  003DE6  6FAB               	movwf	(_ts_system+12)& (0+255),b	;volatile
  3155                           
  3156                           ; BSR set to: 1
  3157                           ;sm_Main_MC50.c: 297:                         SetSegmentValueIntermitentMain(dA,dP,( 500
      +                          /50));
  3158  003DE8  0E10               	movlw	16
  3159  003DEA  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  3160  003DEC  0E00               	movlw	0
  3161  003DEE  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  3162  003DF0  0E0A               	movlw	10
  3163  003DF2  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  3164  003DF4  0E0A               	movlw	10
  3165  003DF6  EC66  F04E         	call	_SetSegmentValueIntermitentMain
  3166                           
  3167                           ;sm_Main_MC50.c: 298:                     }
  3168  003DFA  0012               	return	
  3169  003DFC                     l25915:
  3170  003DFC  0101               	movlb	1	; () banked
  3171  003DFE  0504               	decf	(_var_sys+4)& (0+255),w,b	;volatile
  3172  003E00  A4D8               	btfss	status,2,c
  3173  003E02  D006               	goto	l25919
  3174                           
  3175                           ; BSR set to: 1
  3176                           ;sm_Main_MC50.c: 301:                     {;sm_Main_MC50.c: 303:                        
      +                           SetSegmentValueMain(dF,d0);
  3177  003E04  0E00               	movlw	0
  3178  003E06  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3179  003E08  0E0F               	movlw	15
  3180  003E0A  ECCB  F04D         	call	_SetSegmentValueMain
  3181                           
  3182                           ;sm_Main_MC50.c: 304:                     }
  3183  003E0E  0012               	return	
  3184  003E10                     l25919:
  3185                           
  3186                           ; BSR set to: 1
  3187                           ;sm_Main_MC50.c: 306:                     {;sm_Main_MC50.c: 307:                       S
      +                          etSegmentValueMain(dMinus,dMinus);
  3188  003E10  0E18               	movlw	24
  3189  003E12  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3190  003E14  0E18               	movlw	24
  3191  003E16  ECCB  F04D         	call	_SetSegmentValueMain
  3192  003E1A  0012               	return	
  3193  003E1C                     l25921:
  3194                           
  3195                           ; BSR set to: 1
  3196                           ;sm_Main_MC50.c: 311:                 {;sm_Main_MC50.c: 313:                     SetSegm
      +                          entValueMain(dMinus,dMinus);
  3197  003E1C  0E18               	movlw	24
  3198  003E1E  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3199  003E20  0E18               	movlw	24
  3200  003E22  ECCB  F04D         	call	_SetSegmentValueMain
  3201  003E26  0012               	return	
  3202  003E28                     l25925:
  3203  003E28  C0ED  FFD9         	movff	sm_execute_main@psm,fsr2l
  3204  003E2C  C0EE  FFDA         	movff	sm_execute_main@psm+1,fsr2h
  3205  003E30  50DF               	movf	indf2,w,c
  3206  003E32  0100               	movlb	0	; () banked
  3207  003E34  6FEF               	movwf	??_sm_execute_main& (0+255),b
  3208  003E36  6BF0               	clrf	(??_sm_execute_main+1)& (0+255),b
  3209                           
  3210                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3211                           ; Switch size 1, requested type "simple"
  3212                           ; Number of cases is 1, Range of values is 0 to 0
  3213                           ; switch strategies available:
  3214                           ; Name         Instructions Cycles
  3215                           ; simple_byte            4     3 (average)
  3216                           ;	Chosen strategy is simple_byte
  3217  003E38  51F0               	movf	(??_sm_execute_main+1)& (0+255),w,b
  3218  003E3A  0A00               	xorlw	0	; case 0
  3219  003E3C  A4D8               	btfss	status,2,c
  3220  003E3E  0012               	return	
  3221                           
  3222                           ; BSR set to: 0
  3223                           ; Switch size 1, requested type "simple"
  3224                           ; Number of cases is 3, Range of values is 0 to 2
  3225                           ; switch strategies available:
  3226                           ; Name         Instructions Cycles
  3227                           ; simple_byte           10     6 (average)
  3228                           ;	Chosen strategy is simple_byte
  3229  003E40  51EF               	movf	??_sm_execute_main& (0+255),w,b
  3230  003E42  0A00               	xorlw	0	; case 0
  3231  003E44  B4D8               	btfsc	status,2,c
  3232  003E46  D5F8               	goto	l25649
  3233  003E48  0A01               	xorlw	1	; case 1
  3234  003E4A  B4D8               	btfsc	status,2,c
  3235  003E4C  D69A               	goto	l25747
  3236  003E4E  0A03               	xorlw	3	; case 2
  3237  003E50  A4D8               	btfss	status,2,c
  3238  003E52  0012               	return	
  3239  003E54  D69D               	goto	l25749
  3240  003E56                     __end_of_sm_execute_main:
  3241                           	callstack 0
  3242                           
  3243 ;; *************** function _sm_execute_menuConfiguration *****************
  3244 ;; Defined at:
  3245 ;;		line 33 in file "sm_MenuConfiguration_MC50.c"
  3246 ;; Parameters:    Size  Location     Type
  3247 ;;  psm             2   17[BANK0 ] PTR struct .
  3248 ;;		 -> menuConfiguration_stateMachine(11), 
  3249 ;; Auto vars:     Size  Location     Type
  3250 ;;		None
  3251 ;; Return value:  Size  Location     Type
  3252 ;;                  1    wreg      void 
  3253 ;; Registers used:
  3254 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3255 ;; Tracked objects:
  3256 ;;		On entry : 3F/0
  3257 ;;		On exit  : 0/0
  3258 ;;		Unchanged: 0/0
  3259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3260 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3261 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3262 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3263 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3264 ;;Total ram usage:        4 bytes
  3265 ;; Hardware stack levels used: 1
  3266 ;; Hardware stack levels required when called: 15
  3267 ;; This function calls:
  3268 ;;		_ClearFlag_rfCMD
  3269 ;;		_ResetDefaultMemory
  3270 ;;		_SaveNVM_VarSystem
  3271 ;;		_SetSegmentValueIntermitentMain
  3272 ;;		_SetSegmentValueMain
  3273 ;;		___lbdiv
  3274 ;;		___lldiv
  3275 ;;		___lmul
  3276 ;;		___lwdiv
  3277 ;;		_controlLearnDigit
  3278 ;;		_controlSaveRemote
  3279 ;;		_controlSelectRemote
  3280 ;;		_load_New_Menu
  3281 ;;		_setValueToEdit
  3282 ;;		_sm_send_event
  3283 ;; This function is called by:
  3284 ;;		_sm_execute_main
  3285 ;; This function uses a non-reentrant model
  3286 ;;
  3287                           
  3288                           	psect	text2
  3289  000F22                     __ptext2:
  3290                           	callstack 0
  3291  000F22                     _sm_execute_menuConfiguration:
  3292                           	callstack 14
  3293                           
  3294                           ; BSR set to: 0
  3295                           ;sm_MenuConfiguration_MC50.c: 36:     switch((sm_state_Menu_t) psm->current_state)
  3296                           
  3297                           ;incstack = 0
  3298  000F22  D0A2               	goto	l23939
  3299  000F24                     l23881:
  3300                           
  3301                           ; BSR set to: 0
  3302                           ;sm_MenuConfiguration_MC50.c: 39:         {;sm_MenuConfiguration_MC50.c: 40:            
      +                           if(psm->last_event==ev_ParameterIsSelected)
  3303  000F24  EE20 F004          	lfsr	2,4
  3304  000F28  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3305  000F2A  26D9               	addwf	fsr2l,f,c
  3306  000F2C  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3307  000F2E  22DA               	addwfc	fsr2h,f,c
  3308  000F30  04DE               	decf	postinc2,w,c
  3309  000F32  10DE               	iorwf	postinc2,w,c
  3310  000F34  A4D8               	btfss	status,2,c
  3311  000F36  D006               	goto	l23885
  3312                           
  3313                           ; BSR set to: 0
  3314                           ;sm_MenuConfiguration_MC50.c: 41:             {;sm_MenuConfiguration_MC50.c: 42:        
      +                                   psm->current_state = st_EditParameter;
  3315  000F38  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3316  000F3C  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3317  000F40  0E01               	movlw	1
  3318  000F42  D04C               	goto	L9
  3319  000F44                     l23885:
  3320                           
  3321                           ; BSR set to: 0
  3322  000F44  EE20 F004          	lfsr	2,4
  3323  000F48  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3324  000F4A  26D9               	addwf	fsr2l,f,c
  3325  000F4C  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3326  000F4E  22DA               	addwfc	fsr2h,f,c
  3327  000F50  0E05               	movlw	5
  3328  000F52  18DE               	xorwf	postinc2,w,c
  3329  000F54  10DE               	iorwf	postinc2,w,c
  3330  000F56  A4D8               	btfss	status,2,c
  3331  000F58  D006               	goto	l23889
  3332                           
  3333                           ; BSR set to: 0
  3334                           ;sm_MenuConfiguration_MC50.c: 45:             {;sm_MenuConfiguration_MC50.c: 46:        
      +                                   psm->current_state = st_Counter;
  3335  000F5A  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3336  000F5E  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3337  000F62  0E03               	movlw	3
  3338  000F64  D03B               	goto	L9
  3339  000F66                     l23889:
  3340                           
  3341                           ; BSR set to: 0
  3342  000F66  EE20 F004          	lfsr	2,4
  3343  000F6A  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3344  000F6C  26D9               	addwf	fsr2l,f,c
  3345  000F6E  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3346  000F70  22DA               	addwfc	fsr2h,f,c
  3347  000F72  0E08               	movlw	8
  3348  000F74  18DE               	xorwf	postinc2,w,c
  3349  000F76  10DE               	iorwf	postinc2,w,c
  3350  000F78  A4D8               	btfss	status,2,c
  3351  000F7A  D006               	goto	l23893
  3352                           
  3353                           ; BSR set to: 0
  3354                           ;sm_MenuConfiguration_MC50.c: 49:             {;sm_MenuConfiguration_MC50.c: 50:        
      +                                   psm->current_state = st_SelectRemote;
  3355  000F7C  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3356  000F80  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3357  000F84  0E04               	movlw	4
  3358  000F86  D02A               	goto	L9
  3359  000F88                     l23893:
  3360                           
  3361                           ; BSR set to: 0
  3362  000F88  EE20 F004          	lfsr	2,4
  3363  000F8C  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3364  000F8E  26D9               	addwf	fsr2l,f,c
  3365  000F90  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3366  000F92  22DA               	addwfc	fsr2h,f,c
  3367  000F94  0E14               	movlw	20
  3368  000F96  18DE               	xorwf	postinc2,w,c
  3369  000F98  10DE               	iorwf	postinc2,w,c
  3370  000F9A  A4D8               	btfss	status,2,c
  3371  000F9C  D087               	goto	l23941
  3372                           
  3373                           ; BSR set to: 0
  3374                           ;sm_MenuConfiguration_MC50.c: 53:             {;sm_MenuConfiguration_MC50.c: 55:        
      +                                   psm->current_state = st_LearningMode;
  3375  000F9E  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3376  000FA2  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3377  000FA6  0E06               	movlw	6
  3378  000FA8  D019               	goto	L9
  3379  000FAA                     l23897:
  3380                           
  3381                           ; BSR set to: 0
  3382                           ;sm_MenuConfiguration_MC50.c: 65:         {;sm_MenuConfiguration_MC50.c: 66:            
      +                           if(psm->last_event==ev_ParameterIsEdited)
  3383  000FAA  EE20 F004          	lfsr	2,4
  3384  000FAE  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3385  000FB0  26D9               	addwf	fsr2l,f,c
  3386  000FB2  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3387  000FB4  22DA               	addwfc	fsr2h,f,c
  3388  000FB6  0E02               	movlw	2
  3389  000FB8  18DE               	xorwf	postinc2,w,c
  3390  000FBA  10DE               	iorwf	postinc2,w,c
  3391  000FBC  A4D8               	btfss	status,2,c
  3392  000FBE  D006               	goto	l23901
  3393                           
  3394                           ; BSR set to: 0
  3395                           ;sm_MenuConfiguration_MC50.c: 67:             {;sm_MenuConfiguration_MC50.c: 68:        
      +                                   psm->current_state = st_SaveParameter;
  3396  000FC0  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3397  000FC4  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3398  000FC8  0E02               	movlw	2
  3399  000FCA  D008               	goto	L9
  3400  000FCC                     l23901:
  3401                           
  3402                           ; BSR set to: 0
  3403  000FCC  EE20 F004          	lfsr	2,4
  3404  000FD0  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3405  000FD2  26D9               	addwf	fsr2l,f,c
  3406  000FD4  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3407  000FD6  22DA               	addwfc	fsr2h,f,c
  3408  000FD8  0E03               	movlw	3
  3409  000FDA  D03B               	goto	L123
  3410  000FDC                     L9:
  3411  000FDC  6EDE               	movwf	postinc2,c
  3412  000FDE  0E00               	movlw	0
  3413  000FE0  6EDD               	movwf	postdec2,c
  3414  000FE2  D064               	goto	l23941
  3415  000FE4                     l23909:
  3416                           
  3417                           ; BSR set to: 0
  3418                           ;sm_MenuConfiguration_MC50.c: 85:         {;sm_MenuConfiguration_MC50.c: 86:            
      +                           if(psm->last_event==ev_ParameterIsSaved)
  3419  000FE4  EE20 F004          	lfsr	2,4
  3420  000FE8  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3421  000FEA  26D9               	addwf	fsr2l,f,c
  3422  000FEC  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3423  000FEE  22DA               	addwfc	fsr2h,f,c
  3424  000FF0  0E04               	movlw	4
  3425  000FF2  18DE               	xorwf	postinc2,w,c
  3426  000FF4  10DE               	iorwf	postinc2,w,c
  3427  000FF6  A4D8               	btfss	status,2,c
  3428  000FF8  D7E9               	goto	l23901
  3429  000FFA  D02F               	goto	u28880
  3430  000FFC                     l23917:
  3431                           
  3432                           ; BSR set to: 0
  3433                           ;sm_MenuConfiguration_MC50.c: 97:         {;sm_MenuConfiguration_MC50.c: 98:            
      +                           if(psm->last_event==ev_addRemotes)
  3434  000FFC  EE20 F004          	lfsr	2,4
  3435  001000  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3436  001002  26D9               	addwf	fsr2l,f,c
  3437  001004  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3438  001006  22DA               	addwfc	fsr2h,f,c
  3439  001008  0E08               	movlw	8
  3440  00100A  18DE               	xorwf	postinc2,w,c
  3441  00100C  10DE               	iorwf	postinc2,w,c
  3442  00100E  A4D8               	btfss	status,2,c
  3443  001010  D7DD               	goto	l23901
  3444                           
  3445                           ; BSR set to: 0
  3446                           ;sm_MenuConfiguration_MC50.c: 99:             {;sm_MenuConfiguration_MC50.c: 100:       
      +                                    psm->current_state = st_SaveRemotes;
  3447  001012  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3448  001016  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3449  00101A  0E05               	movlw	5
  3450  00101C  D7DF               	goto	L9
  3451  00101E                     l23925:
  3452                           
  3453                           ; BSR set to: 0
  3454                           ;sm_MenuConfiguration_MC50.c: 109:         {;sm_MenuConfiguration_MC50.c: 110:          
      +                             if(psm->last_event==ev_NextRemote)
  3455  00101E  EE20 F004          	lfsr	2,4
  3456  001022  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3457  001024  26D9               	addwf	fsr2l,f,c
  3458  001026  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3459  001028  22DA               	addwfc	fsr2h,f,c
  3460  00102A  0E09               	movlw	9
  3461  00102C  18DE               	xorwf	postinc2,w,c
  3462  00102E  10DE               	iorwf	postinc2,w,c
  3463  001030  A4D8               	btfss	status,2,c
  3464  001032  D008               	goto	l23933
  3465                           
  3466                           ; BSR set to: 0
  3467                           ;sm_MenuConfiguration_MC50.c: 111:             {;sm_MenuConfiguration_MC50.c: 112:      
      +                                     psm->current_state = st_SelectRemote;
  3468  001034  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3469  001038  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3470  00103C  0E04               	movlw	4
  3471  00103E  6EDE               	movwf	postinc2,c
  3472  001040  0E00               	movlw	0
  3473  001042  6EDD               	movwf	postdec2,c
  3474  001044                     l23933:
  3475                           
  3476                           ; BSR set to: 0
  3477                           ;sm_MenuConfiguration_MC50.c: 121:         {;sm_MenuConfiguration_MC50.c: 122:          
      +                             if(psm->last_event==ev_ParameterIsSaved)
  3478  001044  EE20 F004          	lfsr	2,4
  3479  001048  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3480  00104A  26D9               	addwf	fsr2l,f,c
  3481  00104C  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3482  00104E  22DA               	addwfc	fsr2h,f,c
  3483  001050  0E04               	movlw	4
  3484  001052                     L123:
  3485  001052  18DE               	xorwf	postinc2,w,c
  3486  001054  10DE               	iorwf	postinc2,w,c
  3487  001056  A4D8               	btfss	status,2,c
  3488  001058  D029               	goto	l23941
  3489  00105A                     u28880:
  3490                           
  3491                           ; BSR set to: 0
  3492                           ;sm_MenuConfiguration_MC50.c: 123:             {;sm_MenuConfiguration_MC50.c: 124:      
      +                                     psm->current_state = st_MainMenu;
  3493  00105A  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3494  00105E  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3495  001062  0E00               	movlw	0
  3496  001064  D7BB               	goto	L9
  3497  001066                     l3233:
  3498                           
  3499                           ; BSR set to: 0
  3500  001066  D7FF               	goto	l3233
  3501  001068                     l23939:
  3502                           
  3503                           ; BSR set to: 0
  3504  001068  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3505  00106C  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3506  001070  50DF               	movf	indf2,w,c
  3507  001072  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  3508  001074  6BEC               	clrf	(??_sm_execute_menuConfiguration+1)& (0+255),b
  3509                           
  3510                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3511                           ; Switch size 1, requested type "simple"
  3512                           ; Number of cases is 1, Range of values is 0 to 0
  3513                           ; switch strategies available:
  3514                           ; Name         Instructions Cycles
  3515                           ; simple_byte            4     3 (average)
  3516                           ;	Chosen strategy is simple_byte
  3517  001076  51EC               	movf	(??_sm_execute_menuConfiguration+1)& (0+255),w,b
  3518  001078  0A00               	xorlw	0	; case 0
  3519  00107A  A4D8               	btfss	status,2,c
  3520  00107C  D7F4               	goto	l3233
  3521                           
  3522                           ; BSR set to: 0
  3523                           ; Switch size 1, requested type "simple"
  3524                           ; Number of cases is 7, Range of values is 0 to 6
  3525                           ; switch strategies available:
  3526                           ; Name         Instructions Cycles
  3527                           ; simple_byte           22    12 (average)
  3528                           ;	Chosen strategy is simple_byte
  3529  00107E  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  3530  001080  0A00               	xorlw	0	; case 0
  3531  001082  B4D8               	btfsc	status,2,c
  3532  001084  D74F               	goto	l23881
  3533  001086  0A01               	xorlw	1	; case 1
  3534  001088  B4D8               	btfsc	status,2,c
  3535  00108A  D78F               	goto	l23897
  3536  00108C  0A03               	xorlw	3	; case 2
  3537  00108E  B4D8               	btfsc	status,2,c
  3538  001090  D7D9               	goto	l23933
  3539  001092  0A01               	xorlw	1	; case 3
  3540  001094  B4D8               	btfsc	status,2,c
  3541  001096  D7A6               	goto	l23909
  3542  001098  0A07               	xorlw	7	; case 4
  3543  00109A  B4D8               	btfsc	status,2,c
  3544  00109C  D7AF               	goto	l23917
  3545  00109E  0A01               	xorlw	1	; case 5
  3546  0010A0  B4D8               	btfsc	status,2,c
  3547  0010A2  D7BD               	goto	l23925
  3548  0010A4  0A03               	xorlw	3	; case 6
  3549  0010A6  B4D8               	btfsc	status,2,c
  3550  0010A8  D7CD               	goto	l23933
  3551  0010AA  D7DD               	goto	l3233
  3552  0010AC                     l23941:
  3553                           
  3554                           ; BSR set to: 0
  3555                           ;sm_MenuConfiguration_MC50.c: 137:     sm_send_event(&menuConfiguration_stateMachine, ev
      +                          _NULL);
  3556  0010AC  0EBB               	movlw	low _menuConfiguration_stateMachine
  3557  0010AE  6E12               	movwf	sm_send_event@psm^0,c
  3558  0010B0  0E02               	movlw	high _menuConfiguration_stateMachine
  3559  0010B2  6E13               	movwf	(sm_send_event@psm+1)^0,c
  3560  0010B4  0E00               	movlw	0
  3561  0010B6  6E15               	movwf	(sm_send_event@event+1)^0,c
  3562  0010B8  0E00               	movlw	0
  3563  0010BA  6E14               	movwf	sm_send_event@event^0,c
  3564  0010BC  ECCD  F046         	call	_sm_send_event	;wreg free
  3565                           
  3566                           ;sm_MenuConfiguration_MC50.c: 142:     switch((sm_state_Menu_t) psm->current_state)
  3567  0010C0  D3BF               	goto	l24253
  3568  0010C2                     l23943:
  3569                           
  3570                           ; BSR set to: 0
  3571                           ;sm_MenuConfiguration_MC50.c: 145:         {;sm_MenuConfiguration_MC50.c: 146:          
      +                             if(var_sys.ProgrammingDistanceIs==TypeProgrammingModeFull)
  3572  0010C2  0E06               	movlw	6
  3573  0010C4  0101               	movlb	1	; () banked
  3574  0010C6  193B               	xorwf	(_var_sys+59)& (0+255),w,b	;volatile
  3575  0010C8  A4D8               	btfss	status,2,c
  3576  0010CA  D02F               	goto	l23953
  3577                           
  3578                           ; BSR set to: 1
  3579                           ;sm_MenuConfiguration_MC50.c: 147:             {;sm_MenuConfiguration_MC50.c: 148:      
      +                                     ts_system.timeoutMenu=10*(1000/50);
  3580  0010CC  0E00               	movlw	0
  3581  0010CE  6FAE               	movwf	(_ts_system+15)& (0+255),b	;volatile
  3582  0010D0  0EC8               	movlw	200
  3583  0010D2  6FAD               	movwf	(_ts_system+14)& (0+255),b	;volatile
  3584                           
  3585                           ;sm_MenuConfiguration_MC50.c: 149:                 var_sys.DistanceProgrammingActive=YES
      +                          ;
  3586  0010D4  0E01               	movlw	1
  3587  0010D6  6F40               	movwf	(_var_sys+64)& (0+255),b	;volatile
  3588                           
  3589                           ;sm_MenuConfiguration_MC50.c: 150:                 menu_st.parameterSelected=0;
  3590  0010D8  0E00               	movlw	0
  3591  0010DA  6F68               	movwf	(_menu_st+23)& (0+255),b
  3592                           
  3593                           ; BSR set to: 1
  3594                           ;sm_MenuConfiguration_MC50.c: 151:                 if (setValueToEdit(menu_st.actualMenu
      +                          ,menu_st.parameterSelected)) {
  3595  0010DC  C168  F03A         	movff	_menu_st+23,setValueToEdit@ParameterSelected
  3596  0010E0  5166               	movf	(_menu_st+21)& (0+255),w,b
  3597  0010E2  EC0E  F01A         	call	_setValueToEdit
  3598  0010E6  0900               	iorlw	0
  3599  0010E8  B4D8               	btfsc	status,2,c
  3600  0010EA  0012               	return	
  3601                           
  3602                           ; BSR set to: 0
  3603                           ;sm_MenuConfiguration_MC50.c: 153:                      sm_send_event(&menuConfiguration
      +                          _stateMachine, ev_addRemotes);
  3604  0010EC  0EBB               	movlw	low _menuConfiguration_stateMachine
  3605  0010EE  6E12               	movwf	sm_send_event@psm^0,c
  3606  0010F0  0E02               	movlw	high _menuConfiguration_stateMachine
  3607  0010F2  6E13               	movwf	(sm_send_event@psm+1)^0,c
  3608  0010F4  0E00               	movlw	0
  3609  0010F6  6E15               	movwf	(sm_send_event@event+1)^0,c
  3610  0010F8  0E08               	movlw	8
  3611  0010FA  6E14               	movwf	sm_send_event@event^0,c
  3612  0010FC  ECCD  F046         	call	_sm_send_event	;wreg free
  3613                           
  3614                           ;sm_MenuConfiguration_MC50.c: 154:                      SetSegmentValueIntermitentMain(e
      +                          dit_Param.tempValue/10, edit_Param.tempValue-((edit_Param.tempValue/10)*10),(1000/50));
  3615  001100  0E0A               	movlw	10
  3616  001102  6E10               	movwf	___lbdiv@divisor^0,c
  3617  001104  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3618  001106  ECBE  F04A         	call	___lbdiv
  3619  00110A  0DF6               	mullw	246
  3620  00110C  50F3               	movf	243,w,c
  3621  00110E  2449               	addwf	(_edit_Param+3)^0,w,c	;volatile
  3622  001110  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  3623  001112  0E00               	movlw	0
  3624  001114  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  3625  001116  0E14               	movlw	20
  3626  001118  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  3627  00111A  0E0A               	movlw	10
  3628  00111C  6E10               	movwf	___lbdiv@divisor^0,c
  3629  00111E  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3630  001120  ECBE  F04A         	call	___lbdiv
  3631  001124  EC66  F04E         	call	_SetSegmentValueIntermitentMain
  3632  001128  0012               	return	
  3633  00112A                     l23953:
  3634                           
  3635                           ; BSR set to: 1
  3636  00112A  0E05               	movlw	5
  3637  00112C  193B               	xorwf	(_var_sys+59)& (0+255),w,b	;volatile
  3638  00112E  A4D8               	btfss	status,2,c
  3639  001130  D02F               	goto	l23963
  3640                           
  3641                           ; BSR set to: 1
  3642                           ;sm_MenuConfiguration_MC50.c: 158:             {;sm_MenuConfiguration_MC50.c: 159:      
      +                                     ts_system.timeoutMenu=10*(1000/50);
  3643  001132  0E00               	movlw	0
  3644  001134  6FAE               	movwf	(_ts_system+15)& (0+255),b	;volatile
  3645  001136  0EC8               	movlw	200
  3646  001138  6FAD               	movwf	(_ts_system+14)& (0+255),b	;volatile
  3647                           
  3648                           ;sm_MenuConfiguration_MC50.c: 160:                 var_sys.DistanceProgrammingActive=YES
      +                          ;
  3649  00113A  0E01               	movlw	1
  3650  00113C  6F40               	movwf	(_var_sys+64)& (0+255),b	;volatile
  3651                           
  3652                           ;sm_MenuConfiguration_MC50.c: 161:                 menu_st.parameterSelected=1;
  3653  00113E  0E01               	movlw	1
  3654  001140  6F68               	movwf	(_menu_st+23)& (0+255),b
  3655                           
  3656                           ; BSR set to: 1
  3657                           ;sm_MenuConfiguration_MC50.c: 162:                 if (setValueToEdit(menu_st.actualMenu
      +                          ,menu_st.parameterSelected)) {
  3658  001142  C168  F03A         	movff	_menu_st+23,setValueToEdit@ParameterSelected
  3659  001146  5166               	movf	(_menu_st+21)& (0+255),w,b
  3660  001148  EC0E  F01A         	call	_setValueToEdit
  3661  00114C  0900               	iorlw	0
  3662  00114E  B4D8               	btfsc	status,2,c
  3663  001150  0012               	return	
  3664                           
  3665                           ; BSR set to: 0
  3666                           ;sm_MenuConfiguration_MC50.c: 164:                      sm_send_event(&menuConfiguration
      +                          _stateMachine, ev_addRemotes);
  3667  001152  0EBB               	movlw	low _menuConfiguration_stateMachine
  3668  001154  6E12               	movwf	sm_send_event@psm^0,c
  3669  001156  0E02               	movlw	high _menuConfiguration_stateMachine
  3670  001158  6E13               	movwf	(sm_send_event@psm+1)^0,c
  3671  00115A  0E00               	movlw	0
  3672  00115C  6E15               	movwf	(sm_send_event@event+1)^0,c
  3673  00115E  0E08               	movlw	8
  3674  001160  6E14               	movwf	sm_send_event@event^0,c
  3675  001162  ECCD  F046         	call	_sm_send_event	;wreg free
  3676                           
  3677                           ;sm_MenuConfiguration_MC50.c: 165:                      SetSegmentValueIntermitentMain(e
      +                          dit_Param.tempValue/10, edit_Param.tempValue-((edit_Param.tempValue/10)*10),(1000/50));
  3678  001166  0E0A               	movlw	10
  3679  001168  6E10               	movwf	___lbdiv@divisor^0,c
  3680  00116A  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3681  00116C  ECBE  F04A         	call	___lbdiv
  3682  001170  0DF6               	mullw	246
  3683  001172  50F3               	movf	243,w,c
  3684  001174  2449               	addwf	(_edit_Param+3)^0,w,c	;volatile
  3685  001176  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  3686  001178  0E00               	movlw	0
  3687  00117A  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  3688  00117C  0E14               	movlw	20
  3689  00117E  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  3690  001180  0E0A               	movlw	10
  3691  001182  6E10               	movwf	___lbdiv@divisor^0,c
  3692  001184  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3693  001186  ECBE  F04A         	call	___lbdiv
  3694  00118A  EC66  F04E         	call	_SetSegmentValueIntermitentMain
  3695                           
  3696                           ; BSR set to: 1
  3697                           ;sm_MenuConfiguration_MC50.c: 167:             }
  3698                           
  3699                           ;sm_MenuConfiguration_MC50.c: 166:                 }
  3700  00118E  0012               	return	
  3701  001190                     l23963:
  3702                           
  3703                           ; BSR set to: 1
  3704  001190  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  3705  001192  A4D8               	btfss	status,2,c
  3706  001194  D023               	goto	l23975
  3707                           
  3708                           ; BSR set to: 1
  3709                           ;sm_MenuConfiguration_MC50.c: 169:             {;sm_MenuConfiguration_MC50.c: 170:      
      +                                     ts_system.timeoutMenu= ((1000/50)*5) ;
  3710  001196  0E00               	movlw	0
  3711  001198  6FAE               	movwf	(_ts_system+15)& (0+255),b	;volatile
  3712  00119A  0E64               	movlw	100
  3713  00119C  6FAD               	movwf	(_ts_system+14)& (0+255),b	;volatile
  3714                           
  3715                           ;sm_MenuConfiguration_MC50.c: 171:                 if(menu_st.parameterSelected==0)
  3716  00119E  5168               	movf	(_menu_st+23)& (0+255),w,b
  3717  0011A0  A4D8               	btfss	status,2,c
  3718  0011A2  D003               	goto	l23969
  3719                           
  3720                           ; BSR set to: 1
  3721                           ;sm_MenuConfiguration_MC50.c: 172:                 {;sm_MenuConfiguration_MC50.c: 173:  
      +                                             menu_st.parameterSelected=menu_st.menuSize-1;
  3722  0011A4  0567               	decf	(_menu_st+22)& (0+255),w,b
  3723  0011A6  6F68               	movwf	(_menu_st+23)& (0+255),b
  3724                           
  3725                           ;sm_MenuConfiguration_MC50.c: 174:                 }
  3726  0011A8  D001               	goto	l23971
  3727  0011AA                     l23969:
  3728                           
  3729                           ; BSR set to: 1
  3730                           ;sm_MenuConfiguration_MC50.c: 176:                 {;sm_MenuConfiguration_MC50.c: 177:  
      +                                             menu_st.parameterSelected--;
  3731  0011AA  0768               	decf	(_menu_st+23)& (0+255),f,b
  3732  0011AC                     l23971:
  3733                           
  3734                           ; BSR set to: 1
  3735                           ;sm_MenuConfiguration_MC50.c: 179:                 SetSegmentValueMain(menu_st.menuList[
      +                          menu_st.parameterSelected].value_display1, menu_st.menuList[menu_st.parameterSelected].v
      +                          alue_display2);
  3736  0011AC  5168               	movf	(_menu_st+23)& (0+255),w,b
  3737  0011AE  0D02               	mullw	2
  3738  0011B0  0E52               	movlw	low (_menu_st+1)
  3739  0011B2  24F3               	addwf	243,w,c
  3740  0011B4  6ED9               	movwf	fsr2l,c
  3741  0011B6  0E01               	movlw	high (_menu_st+1)
  3742  0011B8  20F4               	addwfc	prodh,w,c
  3743  0011BA  6EDA               	movwf	fsr2h,c
  3744  0011BC  50DF               	movf	indf2,w,c
  3745  0011BE  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3746  0011C0  5168               	movf	(_menu_st+23)& (0+255),w,b
  3747  0011C2  0D02               	mullw	2
  3748  0011C4  0E51               	movlw	low _menu_st
  3749  0011C6  24F3               	addwf	243,w,c
  3750  0011C8  6ED9               	movwf	fsr2l,c
  3751  0011CA  0E01               	movlw	high _menu_st
  3752  0011CC  20F4               	addwfc	prodh,w,c
  3753  0011CE  6EDA               	movwf	fsr2h,c
  3754  0011D0  50DF               	movf	indf2,w,c
  3755  0011D2  ECCB  F04D         	call	_SetSegmentValueMain
  3756  0011D6                     l23973:
  3757                           
  3758                           ;sm_MenuConfiguration_MC50.c: 180:                 button_struct.processed=1;
  3759  0011D6  0E01               	movlw	1
  3760  0011D8  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  3761                           
  3762                           ;sm_MenuConfiguration_MC50.c: 181:             }
  3763  0011DA  0012               	return	
  3764  0011DC                     l23975:
  3765                           
  3766                           ; BSR set to: 1
  3767  0011DC  0E17               	movlw	23
  3768  0011DE  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  3769  0011E0  A4D8               	btfss	status,2,c
  3770  0011E2  D021               	goto	l23989
  3771                           
  3772                           ; BSR set to: 1
  3773                           ;sm_MenuConfiguration_MC50.c: 183:             {;sm_MenuConfiguration_MC50.c: 184:      
      +                                     ts_system.timeoutMenu=((1000/50)*5) ;
  3774  0011E4  0E00               	movlw	0
  3775  0011E6  6FAE               	movwf	(_ts_system+15)& (0+255),b	;volatile
  3776  0011E8  0E64               	movlw	100
  3777  0011EA  6FAD               	movwf	(_ts_system+14)& (0+255),b	;volatile
  3778                           
  3779                           ; BSR set to: 1
  3780                           ;sm_MenuConfiguration_MC50.c: 185:                 menu_st.parameterSelected++;
  3781  0011EC  2B68               	incf	(_menu_st+23)& (0+255),f,b
  3782                           
  3783                           ; BSR set to: 1
  3784                           ;sm_MenuConfiguration_MC50.c: 186:                 if(menu_st.parameterSelected>=menu_st
      +                          .menuSize)
  3785  0011EE  5167               	movf	(_menu_st+22)& (0+255),w,b
  3786  0011F0  5D68               	subwf	(_menu_st+23)& (0+255),w,b
  3787  0011F2  A0D8               	btfss	status,0,c
  3788  0011F4  D002               	goto	l23985
  3789                           
  3790                           ; BSR set to: 1
  3791                           ;sm_MenuConfiguration_MC50.c: 187:                 {;sm_MenuConfiguration_MC50.c: 188:  
      +                                             menu_st.parameterSelected=0;
  3792  0011F6  0E00               	movlw	0
  3793  0011F8  6F68               	movwf	(_menu_st+23)& (0+255),b
  3794  0011FA                     l23985:
  3795                           
  3796                           ; BSR set to: 1
  3797                           ;sm_MenuConfiguration_MC50.c: 190:                 SetSegmentValueMain(menu_st.menuList[
      +                          menu_st.parameterSelected].value_display1, menu_st.menuList[menu_st.parameterSelected].v
      +                          alue_display2);
  3798  0011FA  5168               	movf	(_menu_st+23)& (0+255),w,b
  3799  0011FC  0D02               	mullw	2
  3800  0011FE  0E52               	movlw	low (_menu_st+1)
  3801  001200  24F3               	addwf	243,w,c
  3802  001202  6ED9               	movwf	fsr2l,c
  3803  001204  0E01               	movlw	high (_menu_st+1)
  3804  001206  20F4               	addwfc	prodh,w,c
  3805  001208  6EDA               	movwf	fsr2h,c
  3806  00120A  50DF               	movf	indf2,w,c
  3807  00120C  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3808  00120E  5168               	movf	(_menu_st+23)& (0+255),w,b
  3809  001210  0D02               	mullw	2
  3810  001212  0E51               	movlw	low _menu_st
  3811  001214  24F3               	addwf	243,w,c
  3812  001216  6ED9               	movwf	fsr2l,c
  3813  001218  0E01               	movlw	high _menu_st
  3814  00121A  20F4               	addwfc	prodh,w,c
  3815  00121C  6EDA               	movwf	fsr2h,c
  3816  00121E  50DF               	movf	indf2,w,c
  3817  001220  ECCB  F04D         	call	_SetSegmentValueMain
  3818  001224  D7D8               	goto	l23973
  3819  001226                     l23989:
  3820                           
  3821                           ; BSR set to: 1
  3822  001226  0E0C               	movlw	12
  3823  001228  6166               	cpfslt	(_menu_st+21)& (0+255),b
  3824  00122A  D09A               	goto	l24045
  3825                           
  3826                           ; BSR set to: 1
  3827                           ;sm_MenuConfiguration_MC50.c: 194:             {;sm_MenuConfiguration_MC50.c: 195:      
      +                                     if (button_struct.current==0 && button_struct.timer>(( 500/50)) )
  3828  00122C  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  3829  00122E  A4D8               	btfss	status,2,c
  3830  001230  D053               	goto	l24011
  3831                           
  3832                           ; BSR set to: 1
  3833  001232  0E0A               	movlw	10
  3834  001234  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  3835  001236  D050               	goto	l24011
  3836                           
  3837                           ; BSR set to: 1
  3838                           ;sm_MenuConfiguration_MC50.c: 196:                 {;sm_MenuConfiguration_MC50.c: 197:  
      +                                             ts_system.timeoutMenu=((1000/50)*5) ;
  3839  001238  0E00               	movlw	0
  3840  00123A  6FAE               	movwf	(_ts_system+15)& (0+255),b	;volatile
  3841  00123C  0E64               	movlw	100
  3842  00123E  6FAD               	movwf	(_ts_system+14)& (0+255),b	;volatile
  3843                           
  3844                           ; BSR set to: 1
  3845                           ;sm_MenuConfiguration_MC50.c: 199:                     if (setValueToEdit(menu_st.actual
      +                          Menu,menu_st.parameterSelected))
  3846  001240  C168  F03A         	movff	_menu_st+23,setValueToEdit@ParameterSelected
  3847  001244  5166               	movf	(_menu_st+21)& (0+255),w,b
  3848  001246  EC0E  F01A         	call	_setValueToEdit
  3849  00124A  0900               	iorlw	0
  3850  00124C  B4D8               	btfsc	status,2,c
  3851  00124E  D7C3               	goto	l23973
  3852                           
  3853                           ; BSR set to: 0
  3854                           ;sm_MenuConfiguration_MC50.c: 200:                     {;sm_MenuConfiguration_MC50.c: 20
      +                          2:                          sm_send_event(&menuConfiguration_stateMachine, ev_ParameterI
      +                          sSelected);
  3855  001250  0EBB               	movlw	low _menuConfiguration_stateMachine
  3856  001252  6E12               	movwf	sm_send_event@psm^0,c
  3857  001254  0E02               	movlw	high _menuConfiguration_stateMachine
  3858  001256  6E13               	movwf	(sm_send_event@psm+1)^0,c
  3859  001258  0E00               	movlw	0
  3860  00125A  6E15               	movwf	(sm_send_event@event+1)^0,c
  3861  00125C  0E01               	movlw	1
  3862  00125E  6E14               	movwf	sm_send_event@event^0,c
  3863  001260  ECCD  F046         	call	_sm_send_event	;wreg free
  3864                           
  3865                           ;sm_MenuConfiguration_MC50.c: 203:                          if((edit_Param.Value==(unsig
      +                          ned char*)&var_sys_NVM.TypeofMotor)||(edit_Param.Value==(unsigned char*)&var_sys_NVM.Dir
      +                          ection_motor)){
  3866  001264  0E98               	movlw	_var_sys_NVM& (0+255)
  3867  001266  0F1C               	addlw	28
  3868  001268  0100               	movlb	0	; () banked
  3869  00126A  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  3870  00126C  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  3871  00126E  1847               	xorwf	(_edit_Param+1)^0,w,c	;volatile
  3872  001270  E101               	bnz	u29015
  3873  001272  5248               	movf	(_edit_Param+2)^0,f,c	;volatile
  3874  001274                     u29015:
  3875  001274  B4D8               	btfsc	status,2,c
  3876  001276  D009               	goto	u29020
  3877                           
  3878                           ; BSR set to: 0
  3879  001278  0E98               	movlw	_var_sys_NVM& (0+255)
  3880  00127A  0F1B               	addlw	27
  3881  00127C  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  3882  00127E  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  3883  001280  1847               	xorwf	(_edit_Param+1)^0,w,c	;volatile
  3884  001282  E101               	bnz	u29025
  3885  001284  5248               	movf	(_edit_Param+2)^0,f,c	;volatile
  3886  001286                     u29025:
  3887  001286  A4D8               	btfss	status,2,c
  3888  001288  D016               	goto	l24007
  3889  00128A                     u29020:
  3890                           
  3891                           ; BSR set to: 0
  3892                           ;sm_MenuConfiguration_MC50.c: 204:                            SetSegmentValueMain(menu_s
      +                          t.menuList[edit_Param.tempValue].value_display1, menu_st.menuList[edit_Param.tempValue].
      +                          value_display2);
  3893  00128A  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3894  00128C  0D02               	mullw	2
  3895  00128E  0E52               	movlw	low (_menu_st+1)
  3896  001290  24F3               	addwf	243,w,c
  3897  001292  6ED9               	movwf	fsr2l,c
  3898  001294  0E01               	movlw	high (_menu_st+1)
  3899  001296  20F4               	addwfc	prodh,w,c
  3900  001298  6EDA               	movwf	fsr2h,c
  3901  00129A  50DF               	movf	indf2,w,c
  3902  00129C  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3903  00129E  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3904  0012A0  0D02               	mullw	2
  3905  0012A2  0E51               	movlw	low _menu_st
  3906  0012A4  24F3               	addwf	243,w,c
  3907  0012A6  6ED9               	movwf	fsr2l,c
  3908  0012A8  0E01               	movlw	high _menu_st
  3909  0012AA  20F4               	addwfc	prodh,w,c
  3910  0012AC  6EDA               	movwf	fsr2h,c
  3911  0012AE  50DF               	movf	indf2,w,c
  3912  0012B0  ECCB  F04D         	call	_SetSegmentValueMain
  3913                           
  3914                           ;sm_MenuConfiguration_MC50.c: 206:                          }
  3915  0012B4  D790               	goto	l23973
  3916  0012B6                     l24007:
  3917                           
  3918                           ; BSR set to: 0
  3919                           ;sm_MenuConfiguration_MC50.c: 208:                          SetSegmentValueMain(edit_Par
      +                          am.tempValue/10, edit_Param.tempValue-((edit_Param.tempValue/10)*10));
  3920  0012B6  0E0A               	movlw	10
  3921  0012B8  6E10               	movwf	___lbdiv@divisor^0,c
  3922  0012BA  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3923  0012BC  ECBE  F04A         	call	___lbdiv
  3924  0012C0  0DF6               	mullw	246
  3925  0012C2  50F3               	movf	243,w,c
  3926  0012C4  2449               	addwf	(_edit_Param+3)^0,w,c	;volatile
  3927  0012C6  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3928  0012C8  0E0A               	movlw	10
  3929  0012CA  6E10               	movwf	___lbdiv@divisor^0,c
  3930  0012CC  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3931  0012CE  ECBE  F04A         	call	___lbdiv
  3932  0012D2  ECCB  F04D         	call	_SetSegmentValueMain
  3933  0012D6  D77F               	goto	l23973
  3934  0012D8                     l24011:
  3935                           
  3936                           ; BSR set to: 1
  3937  0012D8  BFAE               	btfsc	(_ts_system+15)& (0+255),7,b	;volatile
  3938  0012DA  D008               	goto	u29040
  3939  0012DC  51AE               	movf	(_ts_system+15)& (0+255),w,b	;volatile
  3940  0012DE  E103               	bnz	u29030
  3941  0012E0  05AD               	decf	(_ts_system+14)& (0+255),w,b	;volatile
  3942  0012E2  A0D8               	btfss	status,0,c
  3943  0012E4  D003               	goto	u29040
  3944  0012E6                     u29030:
  3945                           
  3946                           ; BSR set to: 1
  3947  0012E6  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  3948  0012E8  A4D8               	btfss	status,2,c
  3949  0012EA  D01E               	goto	l24029
  3950  0012EC                     u29040:
  3951                           
  3952                           ; BSR set to: 1
  3953  0012EC  0E02               	movlw	2
  3954  0012EE  6166               	cpfslt	(_menu_st+21)& (0+255),b
  3955  0012F0  D01B               	goto	l24029
  3956                           
  3957                           ; BSR set to: 1
  3958                           ;sm_MenuConfiguration_MC50.c: 216:                 {;sm_MenuConfiguration_MC50.c: 217:  
      +                                             ts_system.timeoutMenu=0;
  3959  0012F2  0E00               	movlw	0
  3960  0012F4  6FAE               	movwf	(_ts_system+15)& (0+255),b	;volatile
  3961  0012F6  0E00               	movlw	0
  3962  0012F8  6FAD               	movwf	(_ts_system+14)& (0+255),b	;volatile
  3963                           
  3964                           ; BSR set to: 1
  3965                           ;sm_MenuConfiguration_MC50.c: 218:                     sm_send_event(&main_stateMachine,
      +                           ev_goto_StandBy);
  3966  0012FA  0EF2               	movlw	low _main_stateMachine
  3967  0012FC  6E12               	movwf	sm_send_event@psm^0,c
  3968  0012FE  0E01               	movlw	high _main_stateMachine
  3969  001300  6E13               	movwf	(sm_send_event@psm+1)^0,c
  3970  001302  0E00               	movlw	0
  3971  001304  6E15               	movwf	(sm_send_event@event+1)^0,c
  3972  001306  0E07               	movlw	7
  3973  001308  6E14               	movwf	sm_send_event@event^0,c
  3974  00130A  ECCD  F046         	call	_sm_send_event	;wreg free
  3975                           
  3976                           ;sm_MenuConfiguration_MC50.c: 219:                     SetSegmentValueMain(dMinus,dMinus
      +                          );
  3977  00130E  0E18               	movlw	24
  3978  001310  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3979  001312  0E18               	movlw	24
  3980  001314  ECCB  F04D         	call	_SetSegmentValueMain
  3981                           
  3982                           ; BSR set to: 0
  3983                           ;sm_MenuConfiguration_MC50.c: 220:                     menu_st.lastMainParameterSelected
      +                           = 0;
  3984  001318  0E00               	movlw	0
  3985  00131A  0101               	movlb	1	; () banked
  3986  00131C  6F69               	movwf	(_menu_st+24)& (0+255),b
  3987                           
  3988                           ; BSR set to: 1
  3989                           ;sm_MenuConfiguration_MC50.c: 221:                     button_struct.processed=1;
  3990  00131E  0E01               	movlw	1
  3991  001320  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  3992                           
  3993                           ; BSR set to: 1
  3994                           ;sm_MenuConfiguration_MC50.c: 222:                     ClearFlag_rfCMD();
  3995  001322  EC1E  F04F         	call	_ClearFlag_rfCMD	;wreg free
  3996                           
  3997                           ;sm_MenuConfiguration_MC50.c: 224:                 }
  3998  001326  0012               	return	
  3999  001328                     l24029:
  4000                           
  4001                           ; BSR set to: 1
  4002  001328  BFAE               	btfsc	(_ts_system+15)& (0+255),7,b	;volatile
  4003  00132A  D008               	goto	u29070
  4004  00132C  51AE               	movf	(_ts_system+15)& (0+255),w,b	;volatile
  4005  00132E  E103               	bnz	u29060
  4006  001330  05AD               	decf	(_ts_system+14)& (0+255),w,b	;volatile
  4007  001332  A0D8               	btfss	status,0,c
  4008  001334  D003               	goto	u29070
  4009  001336                     u29060:
  4010                           
  4011                           ; BSR set to: 1
  4012  001336  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  4013  001338  A4D8               	btfss	status,2,c
  4014  00133A  D004               	goto	l24037
  4015  00133C                     u29070:
  4016                           
  4017                           ; BSR set to: 1
  4018                           ;sm_MenuConfiguration_MC50.c: 226:                 {;sm_MenuConfiguration_MC50.c: 228:  
      +                                             load_New_Menu(menu_st.lastMenu);
  4019  00133C  5165               	movf	(_menu_st+20)& (0+255),w,b
  4020  00133E  EC53  F024         	call	_load_New_Menu
  4021  001342  D749               	goto	l23973
  4022  001344                     l24037:
  4023                           
  4024                           ; BSR set to: 1
  4025  001344  BFAE               	btfsc	(_ts_system+15)& (0+255),7,b	;volatile
  4026  001346  D005               	goto	u29080
  4027  001348  51AE               	movf	(_ts_system+15)& (0+255),w,b	;volatile
  4028  00134A  E102               	bnz	u29081
  4029  00134C  05AD               	decf	(_ts_system+14)& (0+255),w,b	;volatile
  4030  00134E  B0D8               	btfsc	status,0,c
  4031  001350                     u29081:
  4032  001350  0012               	return	
  4033  001352                     u29080:
  4034                           
  4035                           ; BSR set to: 1
  4036  001352  0E01               	movlw	1
  4037  001354  6566               	cpfsgt	(_menu_st+21)& (0+255),b
  4038  001356  0012               	return	
  4039                           
  4040                           ; BSR set to: 1
  4041                           ;sm_MenuConfiguration_MC50.c: 232:                 {;sm_MenuConfiguration_MC50.c: 234:  
      +                                             load_New_Menu(menu_st.lastMenu);
  4042  001358  5165               	movf	(_menu_st+20)& (0+255),w,b
  4043  00135A  EC53  F024         	call	_load_New_Menu
  4044  00135E  D73B               	goto	l23973
  4045  001360                     l24045:
  4046                           
  4047                           ; BSR set to: 1
  4048  001360  0E27               	movlw	39
  4049  001362  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  4050  001364  A4D8               	btfss	status,2,c
  4051  001366  D032               	goto	l24061
  4052                           
  4053                           ; BSR set to: 1
  4054  001368  0E0A               	movlw	10
  4055  00136A  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  4056  00136C  D02F               	goto	l24061
  4057                           
  4058                           ; BSR set to: 1
  4059  00136E  0E0D               	movlw	13
  4060  001370  1966               	xorwf	(_menu_st+21)& (0+255),w,b
  4061  001372  B4D8               	btfsc	status,2,c
  4062  001374  D02B               	goto	l24061
  4063                           
  4064                           ; BSR set to: 1
  4065                           ;sm_MenuConfiguration_MC50.c: 239:             {;sm_MenuConfiguration_MC50.c: 240:      
      +                                         ts_system.timeoutMenu=((1000/50)*5);
  4066  001376  0E00               	movlw	0
  4067  001378  6FAE               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4068  00137A  0E64               	movlw	100
  4069  00137C  6FAD               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4070                           
  4071                           ; BSR set to: 1
  4072                           ;sm_MenuConfiguration_MC50.c: 241:                     if (setValueToEdit(menu_st.actual
      +                          Menu,menu_st.parameterSelected))
  4073  00137E  C168  F03A         	movff	_menu_st+23,setValueToEdit@ParameterSelected
  4074  001382  5166               	movf	(_menu_st+21)& (0+255),w,b
  4075  001384  EC0E  F01A         	call	_setValueToEdit
  4076  001388  0900               	iorlw	0
  4077  00138A  B4D8               	btfsc	status,2,c
  4078  00138C  D724               	goto	l23973
  4079                           
  4080                           ; BSR set to: 0
  4081                           ;sm_MenuConfiguration_MC50.c: 243:                     {;sm_MenuConfiguration_MC50.c: 24
      +                          4:                         sm_send_event(&menuConfiguration_stateMachine, ev_addRemotes)
      +                          ;
  4082  00138E  0EBB               	movlw	low _menuConfiguration_stateMachine
  4083  001390  6E12               	movwf	sm_send_event@psm^0,c
  4084  001392  0E02               	movlw	high _menuConfiguration_stateMachine
  4085  001394  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4086  001396  0E00               	movlw	0
  4087  001398  6E15               	movwf	(sm_send_event@event+1)^0,c
  4088  00139A  0E08               	movlw	8
  4089  00139C  6E14               	movwf	sm_send_event@event^0,c
  4090  00139E  ECCD  F046         	call	_sm_send_event	;wreg free
  4091                           
  4092                           ;sm_MenuConfiguration_MC50.c: 245:                         SetSegmentValueIntermitentMai
      +                          n(edit_Param.tempValue/10, edit_Param.tempValue-((edit_Param.tempValue/10)*10),(1000/50)
      +                          );
  4093  0013A2  0E0A               	movlw	10
  4094  0013A4  6E10               	movwf	___lbdiv@divisor^0,c
  4095  0013A6  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4096  0013A8  ECBE  F04A         	call	___lbdiv
  4097  0013AC  0DF6               	mullw	246
  4098  0013AE  50F3               	movf	243,w,c
  4099  0013B0  2449               	addwf	(_edit_Param+3)^0,w,c	;volatile
  4100  0013B2  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  4101  0013B4  0E00               	movlw	0
  4102  0013B6  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  4103  0013B8  0E14               	movlw	20
  4104  0013BA  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  4105  0013BC  0E0A               	movlw	10
  4106  0013BE  6E10               	movwf	___lbdiv@divisor^0,c
  4107  0013C0  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4108  0013C2  ECBE  F04A         	call	___lbdiv
  4109  0013C6  EC66  F04E         	call	_SetSegmentValueIntermitentMain
  4110  0013CA  D705               	goto	l23973
  4111  0013CC                     l24061:
  4112                           
  4113                           ; BSR set to: 1
  4114  0013CC  0E0D               	movlw	13
  4115  0013CE  1966               	xorwf	(_menu_st+21)& (0+255),w,b
  4116  0013D0  A4D8               	btfss	status,2,c
  4117  0013D2  D027               	goto	l24079
  4118                           
  4119                           ; BSR set to: 1
  4120  0013D4  51AB               	movf	(_ts_system+12)& (0+255),w,b	;volatile
  4121  0013D6  11AC               	iorwf	(_ts_system+13)& (0+255),w,b	;volatile
  4122  0013D8  A4D8               	btfss	status,2,c
  4123  0013DA  D023               	goto	l24079
  4124                           
  4125                           ; BSR set to: 1
  4126                           ;sm_MenuConfiguration_MC50.c: 250:             {;sm_MenuConfiguration_MC50.c: 251:      
      +                                     var_sys_NVM.positionRemotesFull=0;
  4127  0013DC  0E00               	movlw	0
  4128  0013DE  0100               	movlb	0	; () banked
  4129  0013E0  6FB8               	movwf	(_var_sys_NVM+32)& (0+255),b	;volatile
  4130                           
  4131                           ;sm_MenuConfiguration_MC50.c: 252:                 var_sys_NVM.positionRemotesWalk=0;
  4132  0013E2  0E00               	movlw	0
  4133  0013E4  6FB9               	movwf	(_var_sys_NVM+33)& (0+255),b	;volatile
  4134                           
  4135                           ;sm_MenuConfiguration_MC50.c: 253:                 var_sys_NVM.OnlyRollingCode=NO;
  4136  0013E6  0E00               	movlw	0
  4137  0013E8  6FBE               	movwf	(_var_sys_NVM+38)& (0+255),b	;volatile
  4138                           
  4139                           ; BSR set to: 0
  4140                           ;sm_MenuConfiguration_MC50.c: 254:                 SaveNVM_VarSystem(pageMemoryCounters)
      +                          ;
  4141  0013EA  0E02               	movlw	2
  4142  0013EC  ECDB  F04A         	call	_SaveNVM_VarSystem
  4143                           
  4144                           ;sm_MenuConfiguration_MC50.c: 255:                 sm_send_event(&main_stateMachine, ev_
      +                          goto_StandBy);
  4145  0013F0  0EF2               	movlw	low _main_stateMachine
  4146  0013F2  6E12               	movwf	sm_send_event@psm^0,c
  4147  0013F4  0E01               	movlw	high _main_stateMachine
  4148  0013F6  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4149  0013F8  0E00               	movlw	0
  4150  0013FA  6E15               	movwf	(sm_send_event@event+1)^0,c
  4151  0013FC  0E07               	movlw	7
  4152  0013FE  6E14               	movwf	sm_send_event@event^0,c
  4153  001400  ECCD  F046         	call	_sm_send_event	;wreg free
  4154                           
  4155                           ;sm_MenuConfiguration_MC50.c: 256:                 SetSegmentValueMain(dMinus,dMinus);
  4156  001404  0E18               	movlw	24
  4157  001406  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4158  001408  0E18               	movlw	24
  4159  00140A  ECCB  F04D         	call	_SetSegmentValueMain
  4160                           
  4161                           ; BSR set to: 0
  4162                           ;sm_MenuConfiguration_MC50.c: 257:                 button_struct.processed=1;
  4163  00140E  0E01               	movlw	1
  4164  001410  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  4165  001412                     l24075:
  4166                           
  4167                           ;sm_MenuConfiguration_MC50.c: 258:                 ClearFlag_rfCMD();
  4168  001412  EC1E  F04F         	call	_ClearFlag_rfCMD	;wreg free
  4169  001416                     l24077:
  4170                           
  4171                           ;sm_MenuConfiguration_MC50.c: 259:                  ts_system.timeoutMenu=0;
  4172  001416  0E00               	movlw	0
  4173  001418  0101               	movlb	1	; () banked
  4174  00141A  6FAE               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4175  00141C  0E00               	movlw	0
  4176  00141E  6FAD               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4177                           
  4178                           ;sm_MenuConfiguration_MC50.c: 260:             }
  4179  001420  0012               	return	
  4180  001422                     l24079:
  4181                           
  4182                           ; BSR set to: 1
  4183  001422  BFAE               	btfsc	(_ts_system+15)& (0+255),7,b	;volatile
  4184  001424  D008               	goto	u29170
  4185  001426  51AE               	movf	(_ts_system+15)& (0+255),w,b	;volatile
  4186  001428  E103               	bnz	u29160
  4187  00142A  05AD               	decf	(_ts_system+14)& (0+255),w,b	;volatile
  4188  00142C  A0D8               	btfss	status,0,c
  4189  00142E  D003               	goto	u29170
  4190  001430                     u29160:
  4191                           
  4192                           ; BSR set to: 1
  4193  001430  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  4194  001432  A4D8               	btfss	status,2,c
  4195  001434  0012               	return	
  4196  001436                     u29170:
  4197                           
  4198                           ; BSR set to: 1
  4199                           ;sm_MenuConfiguration_MC50.c: 262:             {;sm_MenuConfiguration_MC50.c: 263:      
      +                                      sm_send_event(&main_stateMachine, ev_goto_StandBy);
  4200  001436  0EF2               	movlw	low _main_stateMachine
  4201  001438  6E12               	movwf	sm_send_event@psm^0,c
  4202  00143A  0E01               	movlw	high _main_stateMachine
  4203  00143C  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4204  00143E  0E00               	movlw	0
  4205  001440  6E15               	movwf	(sm_send_event@event+1)^0,c
  4206  001442  0E07               	movlw	7
  4207  001444  6E14               	movwf	sm_send_event@event^0,c
  4208  001446  ECCD  F046         	call	_sm_send_event	;wreg free
  4209                           
  4210                           ;sm_MenuConfiguration_MC50.c: 264:                  SetSegmentValueMain(dMinus,dMinus);
  4211  00144A  0E18               	movlw	24
  4212  00144C  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4213  00144E  0E18               	movlw	24
  4214  001450  ECCB  F04D         	call	_SetSegmentValueMain
  4215                           
  4216                           ; BSR set to: 0
  4217                           ;sm_MenuConfiguration_MC50.c: 265:                  ClearFlag_rfCMD();
  4218  001454  EC1E  F04F         	call	_ClearFlag_rfCMD	;wreg free
  4219                           
  4220                           ;sm_MenuConfiguration_MC50.c: 266:                  button_struct.processed=1;
  4221  001458  0E01               	movlw	1
  4222  00145A  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  4223  00145C  D7DC               	goto	l24077
  4224  00145E                     l24093:
  4225                           
  4226                           ; BSR set to: 0
  4227                           ;sm_MenuConfiguration_MC50.c: 272:         {;sm_MenuConfiguration_MC50.c: 273:          
      +                             if (button_struct.current==0x00)
  4228  00145E  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  4229  001460  A4D8               	btfss	status,2,c
  4230  001462  D047               	goto	l24113
  4231                           
  4232                           ; BSR set to: 0
  4233                           ;sm_MenuConfiguration_MC50.c: 274:             {;sm_MenuConfiguration_MC50.c: 275:      
      +                                     ts_system.timeoutMenu=((1000/50)*5);
  4234  001464  0E00               	movlw	0
  4235  001466  0101               	movlb	1	; () banked
  4236  001468  6FAE               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4237  00146A  0E64               	movlw	100
  4238  00146C  6FAD               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4239                           
  4240                           ; BSR set to: 1
  4241                           ;sm_MenuConfiguration_MC50.c: 276:                 if(edit_Param.tempValue<=edit_Param.M
      +                          in)
  4242  00146E  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4243  001470  5C4B               	subwf	(_edit_Param+5)^0,w,c	;volatile
  4244  001472  A0D8               	btfss	status,0,c
  4245  001474  D003               	goto	l24101
  4246                           
  4247                           ; BSR set to: 1
  4248                           ;sm_MenuConfiguration_MC50.c: 277:                 {;sm_MenuConfiguration_MC50.c: 278:  
      +                                             edit_Param.tempValue=edit_Param.Max;
  4249  001476  C04A  F049         	movff	_edit_Param+4,_edit_Param+3	;volatile
  4250                           
  4251                           ;sm_MenuConfiguration_MC50.c: 279:                 }
  4252  00147A  D001               	goto	l24103
  4253  00147C                     l24101:
  4254                           
  4255                           ; BSR set to: 1
  4256                           ;sm_MenuConfiguration_MC50.c: 281:                 {;sm_MenuConfiguration_MC50.c: 282:  
      +                                             edit_Param.tempValue--;
  4257  00147C  0649               	decf	(_edit_Param+3)^0,f,c	;volatile
  4258  00147E                     l24103:
  4259                           
  4260                           ; BSR set to: 1
  4261                           ;sm_MenuConfiguration_MC50.c: 284:                 if ((edit_Param.Value==(unsigned char
      +                          *)&var_sys_NVM.TypeofMotor)||(edit_Param.Value==(unsigned char*)&var_sys_NVM.Direction_m
      +                          otor)){
  4262  00147E  0E98               	movlw	_var_sys_NVM& (0+255)
  4263  001480  0F1C               	addlw	28
  4264  001482  0100               	movlb	0	; () banked
  4265  001484  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  4266  001486  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  4267  001488  1847               	xorwf	(_edit_Param+1)^0,w,c	;volatile
  4268  00148A  E101               	bnz	u29205
  4269  00148C  5248               	movf	(_edit_Param+2)^0,f,c	;volatile
  4270  00148E                     u29205:
  4271  00148E  B4D8               	btfsc	status,2,c
  4272  001490  D009               	goto	u29210
  4273                           
  4274                           ; BSR set to: 0
  4275  001492  0E98               	movlw	_var_sys_NVM& (0+255)
  4276  001494  0F1B               	addlw	27
  4277  001496  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  4278  001498  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  4279  00149A  1847               	xorwf	(_edit_Param+1)^0,w,c	;volatile
  4280  00149C  E101               	bnz	u29215
  4281  00149E  5248               	movf	(_edit_Param+2)^0,f,c	;volatile
  4282  0014A0                     u29215:
  4283  0014A0  A4D8               	btfss	status,2,c
  4284  0014A2  D016               	goto	l24109
  4285  0014A4                     u29210:
  4286                           
  4287                           ; BSR set to: 0
  4288                           ;sm_MenuConfiguration_MC50.c: 285:                 SetSegmentValueMain(menu_st.menuList[
      +                          edit_Param.tempValue].value_display1, menu_st.menuList[edit_Param.tempValue].value_displ
      +                          ay2);
  4289  0014A4  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4290  0014A6  0D02               	mullw	2
  4291  0014A8  0E52               	movlw	low (_menu_st+1)
  4292  0014AA  24F3               	addwf	243,w,c
  4293  0014AC  6ED9               	movwf	fsr2l,c
  4294  0014AE  0E01               	movlw	high (_menu_st+1)
  4295  0014B0  20F4               	addwfc	prodh,w,c
  4296  0014B2  6EDA               	movwf	fsr2h,c
  4297  0014B4  50DF               	movf	indf2,w,c
  4298  0014B6  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4299  0014B8  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4300  0014BA  0D02               	mullw	2
  4301  0014BC  0E51               	movlw	low _menu_st
  4302  0014BE  24F3               	addwf	243,w,c
  4303  0014C0  6ED9               	movwf	fsr2l,c
  4304  0014C2  0E01               	movlw	high _menu_st
  4305  0014C4  20F4               	addwfc	prodh,w,c
  4306  0014C6  6EDA               	movwf	fsr2h,c
  4307  0014C8  50DF               	movf	indf2,w,c
  4308  0014CA  ECCB  F04D         	call	_SetSegmentValueMain
  4309                           
  4310                           ;sm_MenuConfiguration_MC50.c: 286:                 }
  4311  0014CE  D683               	goto	l23973
  4312  0014D0                     l24109:
  4313                           
  4314                           ; BSR set to: 0
  4315                           ;sm_MenuConfiguration_MC50.c: 289:                 SetSegmentValueMain(edit_Param.tempVa
      +                          lue/10, edit_Param.tempValue-((edit_Param.tempValue/10)*10));
  4316  0014D0  0E0A               	movlw	10
  4317  0014D2  6E10               	movwf	___lbdiv@divisor^0,c
  4318  0014D4  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4319  0014D6  ECBE  F04A         	call	___lbdiv
  4320  0014DA  0DF6               	mullw	246
  4321  0014DC  50F3               	movf	243,w,c
  4322  0014DE  2449               	addwf	(_edit_Param+3)^0,w,c	;volatile
  4323  0014E0  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4324  0014E2  0E0A               	movlw	10
  4325  0014E4  6E10               	movwf	___lbdiv@divisor^0,c
  4326  0014E6  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4327  0014E8  ECBE  F04A         	call	___lbdiv
  4328  0014EC  ECCB  F04D         	call	_SetSegmentValueMain
  4329  0014F0  D672               	goto	l23973
  4330  0014F2                     l24113:
  4331                           
  4332                           ; BSR set to: 0
  4333  0014F2  0E17               	movlw	23
  4334  0014F4  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  4335  0014F6  A4D8               	btfss	status,2,c
  4336  0014F8  D045               	goto	l24133
  4337                           
  4338                           ; BSR set to: 0
  4339                           ;sm_MenuConfiguration_MC50.c: 294:             {;sm_MenuConfiguration_MC50.c: 295:      
      +                                     ts_system.timeoutMenu=((1000/50)*5) ;
  4340  0014FA  0E00               	movlw	0
  4341  0014FC  0101               	movlb	1	; () banked
  4342  0014FE  6FAE               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4343  001500  0E64               	movlw	100
  4344  001502  6FAD               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4345                           
  4346                           ; BSR set to: 1
  4347                           ;sm_MenuConfiguration_MC50.c: 296:                 edit_Param.tempValue++;
  4348  001504  2A49               	incf	(_edit_Param+3)^0,f,c	;volatile
  4349                           
  4350                           ; BSR set to: 1
  4351                           ;sm_MenuConfiguration_MC50.c: 297:                 if(edit_Param.tempValue>edit_Param.Ma
      +                          x)
  4352  001506  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4353  001508  5C4A               	subwf	(_edit_Param+4)^0,w,c	;volatile
  4354  00150A  A0D8               	btfss	status,0,c
  4355                           
  4356                           ; BSR set to: 1
  4357                           ;sm_MenuConfiguration_MC50.c: 298:                 {;sm_MenuConfiguration_MC50.c: 299:  
      +                                              edit_Param.tempValue=edit_Param.Min;
  4358  00150C  C04B  F049         	movff	_edit_Param+5,_edit_Param+3	;volatile
  4359                           
  4360                           ; BSR set to: 1
  4361                           ;sm_MenuConfiguration_MC50.c: 301:                 if ((edit_Param.Value==(unsigned char
      +                          *)&var_sys_NVM.TypeofMotor)||(edit_Param.Value==(unsigned char*)&var_sys_NVM.Direction_m
      +                          otor)){
  4362  001510  0E98               	movlw	_var_sys_NVM& (0+255)
  4363  001512  0F1C               	addlw	28
  4364  001514  0100               	movlb	0	; () banked
  4365  001516  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  4366  001518  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  4367  00151A  1847               	xorwf	(_edit_Param+1)^0,w,c	;volatile
  4368  00151C  E101               	bnz	u29245
  4369  00151E  5248               	movf	(_edit_Param+2)^0,f,c	;volatile
  4370  001520                     u29245:
  4371  001520  B4D8               	btfsc	status,2,c
  4372  001522  D009               	goto	u29250
  4373                           
  4374                           ; BSR set to: 0
  4375  001524  0E98               	movlw	_var_sys_NVM& (0+255)
  4376  001526  0F1B               	addlw	27
  4377  001528  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  4378  00152A  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  4379  00152C  1847               	xorwf	(_edit_Param+1)^0,w,c	;volatile
  4380  00152E  E101               	bnz	u29255
  4381  001530  5248               	movf	(_edit_Param+2)^0,f,c	;volatile
  4382  001532                     u29255:
  4383  001532  A4D8               	btfss	status,2,c
  4384  001534  D016               	goto	l24129
  4385  001536                     u29250:
  4386                           
  4387                           ; BSR set to: 0
  4388                           ;sm_MenuConfiguration_MC50.c: 302:                     SetSegmentValueMain(menu_st.menuL
      +                          ist[edit_Param.tempValue].value_display1, menu_st.menuList[edit_Param.tempValue].value_d
      +                          isplay2);
  4389  001536  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4390  001538  0D02               	mullw	2
  4391  00153A  0E52               	movlw	low (_menu_st+1)
  4392  00153C  24F3               	addwf	243,w,c
  4393  00153E  6ED9               	movwf	fsr2l,c
  4394  001540  0E01               	movlw	high (_menu_st+1)
  4395  001542  20F4               	addwfc	prodh,w,c
  4396  001544  6EDA               	movwf	fsr2h,c
  4397  001546  50DF               	movf	indf2,w,c
  4398  001548  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4399  00154A  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4400  00154C  0D02               	mullw	2
  4401  00154E  0E51               	movlw	low _menu_st
  4402  001550  24F3               	addwf	243,w,c
  4403  001552  6ED9               	movwf	fsr2l,c
  4404  001554  0E01               	movlw	high _menu_st
  4405  001556  20F4               	addwfc	prodh,w,c
  4406  001558  6EDA               	movwf	fsr2h,c
  4407  00155A  50DF               	movf	indf2,w,c
  4408  00155C  ECCB  F04D         	call	_SetSegmentValueMain
  4409                           
  4410                           ;sm_MenuConfiguration_MC50.c: 303:                 }
  4411  001560  D63A               	goto	l23973
  4412  001562                     l24129:
  4413                           
  4414                           ; BSR set to: 0
  4415                           ;sm_MenuConfiguration_MC50.c: 306:                 SetSegmentValueMain(edit_Param.tempVa
      +                          lue/10, edit_Param.tempValue-((edit_Param.tempValue/10)*10));
  4416  001562  0E0A               	movlw	10
  4417  001564  6E10               	movwf	___lbdiv@divisor^0,c
  4418  001566  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4419  001568  ECBE  F04A         	call	___lbdiv
  4420  00156C  0DF6               	mullw	246
  4421  00156E  50F3               	movf	243,w,c
  4422  001570  2449               	addwf	(_edit_Param+3)^0,w,c	;volatile
  4423  001572  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4424  001574  0E0A               	movlw	10
  4425  001576  6E10               	movwf	___lbdiv@divisor^0,c
  4426  001578  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4427  00157A  ECBE  F04A         	call	___lbdiv
  4428  00157E  ECCB  F04D         	call	_SetSegmentValueMain
  4429  001582  D629               	goto	l23973
  4430  001584                     l24133:
  4431                           
  4432                           ; BSR set to: 0
  4433  001584  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  4434  001586  A4D8               	btfss	status,2,c
  4435  001588  D023               	goto	l24149
  4436                           
  4437                           ; BSR set to: 0
  4438  00158A  0E09               	movlw	9
  4439  00158C  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  4440  00158E  D020               	goto	l24149
  4441                           
  4442                           ; BSR set to: 0
  4443                           ;sm_MenuConfiguration_MC50.c: 312:             {;sm_MenuConfiguration_MC50.c: 313:      
      +                                     ts_system.timeoutMenu=((1000/50)*5) ;
  4444  001590  0E00               	movlw	0
  4445  001592  0101               	movlb	1	; () banked
  4446  001594  6FAE               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4447  001596  0E64               	movlw	100
  4448  001598  6FAD               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4449                           
  4450                           ; BSR set to: 1
  4451                           ;sm_MenuConfiguration_MC50.c: 315:                 edit_Param.Value[0]=edit_Param.tempVa
      +                          lue;
  4452  00159A  C047  FFD9         	movff	_edit_Param+1,fsr2l	;volatile
  4453  00159E  C048  FFDA         	movff	_edit_Param+2,fsr2h	;volatile
  4454  0015A2  C049  FFDF         	movff	_edit_Param+3,indf2	;volatile
  4455                           
  4456                           ; BSR set to: 1
  4457                           ;sm_MenuConfiguration_MC50.c: 316:                 sm_send_event(&menuConfiguration_stat
      +                          eMachine, ev_ParameterIsEdited);
  4458  0015A6  0EBB               	movlw	low _menuConfiguration_stateMachine
  4459  0015A8  6E12               	movwf	sm_send_event@psm^0,c
  4460  0015AA  0E02               	movlw	high _menuConfiguration_stateMachine
  4461  0015AC  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4462  0015AE  0E00               	movlw	0
  4463  0015B0  6E15               	movwf	(sm_send_event@event+1)^0,c
  4464  0015B2  0E02               	movlw	2
  4465  0015B4  6E14               	movwf	sm_send_event@event^0,c
  4466  0015B6  ECCD  F046         	call	_sm_send_event	;wreg free
  4467                           
  4468                           ;sm_MenuConfiguration_MC50.c: 317:                 SetSegmentValueMain(dBar,d1);
  4469  0015BA  0E01               	movlw	1
  4470  0015BC  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4471  0015BE  0E19               	movlw	25
  4472  0015C0  ECCB  F04D         	call	_SetSegmentValueMain
  4473                           
  4474                           ; BSR set to: 0
  4475                           ;sm_MenuConfiguration_MC50.c: 318:                 ts_system.timeSinalizationDigit=((100
      +                          0/50)*2);
  4476  0015C4  0E00               	movlw	0
  4477  0015C6  0101               	movlb	1	; () banked
  4478  0015C8  6FAC               	movwf	(_ts_system+13)& (0+255),b	;volatile
  4479  0015CA  0E28               	movlw	40
  4480  0015CC  6FAB               	movwf	(_ts_system+12)& (0+255),b	;volatile
  4481  0015CE  D603               	goto	l23973
  4482  0015D0                     l24149:
  4483                           
  4484                           ; BSR set to: 0
  4485  0015D0  0101               	movlb	1	; () banked
  4486  0015D2  BFAE               	btfsc	(_ts_system+15)& (0+255),7,b	;volatile
  4487  0015D4  D008               	goto	u29290
  4488  0015D6  51AE               	movf	(_ts_system+15)& (0+255),w,b	;volatile
  4489  0015D8  E103               	bnz	u29280
  4490  0015DA  05AD               	decf	(_ts_system+14)& (0+255),w,b	;volatile
  4491  0015DC  A0D8               	btfss	status,0,c
  4492  0015DE  D003               	goto	u29290
  4493  0015E0                     u29280:
  4494                           
  4495                           ; BSR set to: 1
  4496  0015E0  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  4497  0015E2  A4D8               	btfss	status,2,c
  4498  0015E4  0012               	return	
  4499  0015E6                     u29290:
  4500                           
  4501                           ; BSR set to: 1
  4502                           ;sm_MenuConfiguration_MC50.c: 323:             {;sm_MenuConfiguration_MC50.c: 324:      
      +                                     ts_system.timeoutMenu=((1000/50)*5) ;
  4503  0015E6  0E00               	movlw	0
  4504  0015E8  6FAE               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4505  0015EA  0E64               	movlw	100
  4506  0015EC  6FAD               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4507                           
  4508                           ; BSR set to: 1
  4509                           ;sm_MenuConfiguration_MC50.c: 325:                 load_New_Menu(menu_st.actualMenu);
  4510  0015EE  5166               	movf	(_menu_st+21)& (0+255),w,b
  4511  0015F0  EC53  F024         	call	_load_New_Menu
  4512                           
  4513                           ;sm_MenuConfiguration_MC50.c: 326:                 sm_send_event(&menuConfiguration_stat
      +                          eMachine, ev_CancelEdition);
  4514  0015F4  0EBB               	movlw	low _menuConfiguration_stateMachine
  4515  0015F6  6E12               	movwf	sm_send_event@psm^0,c
  4516  0015F8  0E02               	movlw	high _menuConfiguration_stateMachine
  4517  0015FA  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4518  0015FC  0E00               	movlw	0
  4519  0015FE  6E15               	movwf	(sm_send_event@event+1)^0,c
  4520  001600  0E03               	movlw	3
  4521  001602  6E14               	movwf	sm_send_event@event^0,c
  4522  001604  ECCD  F046         	call	_sm_send_event	;wreg free
  4523  001608  D5E6               	goto	l23973
  4524  00160A                     l24161:
  4525                           
  4526                           ; BSR set to: 0
  4527                           ;sm_MenuConfiguration_MC50.c: 332:         {;sm_MenuConfiguration_MC50.c: 333:          
      +                             if (ts_system.timeSinalizationDigit<=0)
  4528  00160A  0101               	movlb	1	; () banked
  4529  00160C  BFAC               	btfsc	(_ts_system+13)& (0+255),7,b	;volatile
  4530  00160E  D005               	goto	u29300
  4531  001610  51AC               	movf	(_ts_system+13)& (0+255),w,b	;volatile
  4532  001612  E102               	bnz	u29301
  4533  001614  05AB               	decf	(_ts_system+12)& (0+255),w,b	;volatile
  4534  001616  B0D8               	btfsc	status,0,c
  4535  001618                     u29301:
  4536  001618  0012               	return	
  4537  00161A                     u29300:
  4538                           
  4539                           ; BSR set to: 1
  4540                           ;sm_MenuConfiguration_MC50.c: 334:             {;sm_MenuConfiguration_MC50.c: 335:      
      +                                     ts_system.timeoutMenu=((1000/50)*5) ;
  4541  00161A  0E00               	movlw	0
  4542  00161C  6FAE               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4543  00161E  0E64               	movlw	100
  4544  001620  6FAD               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4545                           
  4546                           ; BSR set to: 1
  4547                           ;sm_MenuConfiguration_MC50.c: 337:                 if((menu_st.actualMenu==E_Menu && men
      +                          u_st.parameterSelected==8)||(edit_Param.Value==(unsigned char*)&var_sys_NVM.TypeofMotor)
      +                          )
  4548  001622  0566               	decf	(_menu_st+21)& (0+255),w,b
  4549  001624  A4D8               	btfss	status,2,c
  4550  001626  D004               	goto	u29320
  4551                           
  4552                           ; BSR set to: 1
  4553  001628  0E08               	movlw	8
  4554  00162A  1968               	xorwf	(_menu_st+23)& (0+255),w,b
  4555  00162C  B4D8               	btfsc	status,2,c
  4556  00162E  D00A               	goto	u29330
  4557  001630                     u29320:
  4558                           
  4559                           ; BSR set to: 1
  4560  001630  0E98               	movlw	_var_sys_NVM& (0+255)
  4561  001632  0F1C               	addlw	28
  4562  001634  0100               	movlb	0	; () banked
  4563  001636  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  4564  001638  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  4565  00163A  1847               	xorwf	(_edit_Param+1)^0,w,c	;volatile
  4566  00163C  E101               	bnz	u29335
  4567  00163E  5248               	movf	(_edit_Param+2)^0,f,c	;volatile
  4568  001640                     u29335:
  4569  001640  A4D8               	btfss	status,2,c
  4570  001642  D005               	goto	l24173
  4571  001644                     u29330:
  4572                           
  4573                           ;sm_MenuConfiguration_MC50.c: 338:                 {;sm_MenuConfiguration_MC50.c: 341:  
      +                                             ResetDefaultMemory(var_sys_NVM.TypeofMotor);
  4574  001644  0100               	movlb	0	; () banked
  4575  001646  51B4               	movf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
  4576  001648  EC85  F033         	call	_ResetDefaultMemory
  4577                           
  4578                           ;sm_MenuConfiguration_MC50.c: 343:                 }
  4579  00164C  D023               	goto	l24191
  4580  00164E                     l24173:
  4581                           
  4582                           ; BSR set to: 0
  4583  00164E  0101               	movlb	1	; () banked
  4584  001650  0566               	decf	(_menu_st+21)& (0+255),w,b
  4585  001652  B4D8               	btfsc	status,2,c
  4586  001654  D004               	goto	u29350
  4587                           
  4588                           ; BSR set to: 1
  4589  001656  0E0A               	movlw	10
  4590  001658  1966               	xorwf	(_menu_st+21)& (0+255),w,b
  4591  00165A  A4D8               	btfss	status,2,c
  4592  00165C  D004               	goto	l24179
  4593  00165E                     u29350:
  4594                           
  4595                           ; BSR set to: 1
  4596                           ;sm_MenuConfiguration_MC50.c: 345:                 {;sm_MenuConfiguration_MC50.c: 346:  
      +                                             SaveNVM_VarSystem(pageMemoryE);
  4597  00165E  0E01               	movlw	1
  4598  001660  ECDB  F04A         	call	_SaveNVM_VarSystem
  4599                           
  4600                           ;sm_MenuConfiguration_MC50.c: 347:                 }
  4601  001664  D017               	goto	l24191
  4602  001666                     l24179:
  4603                           
  4604                           ; BSR set to: 1
  4605                           ;sm_MenuConfiguration_MC50.c: 349:                 {;sm_MenuConfiguration_MC50.c: 350:  
      +                                             if (menu_st.parameterSelected == 1 && edit_Param.Value[0] >=1 && menu
      +                          _st.actualMenu == P2_SMenu )
  4606  001666  0568               	decf	(_menu_st+23)& (0+255),w,b
  4607  001668  A4D8               	btfss	status,2,c
  4608  00166A  D00E               	goto	l24187
  4609                           
  4610                           ; BSR set to: 1
  4611  00166C  C047  FFD9         	movff	_edit_Param+1,fsr2l	;volatile
  4612  001670  C048  FFDA         	movff	_edit_Param+2,fsr2h	;volatile
  4613  001674  50DF               	movf	indf2,w,c
  4614  001676  B4D8               	btfsc	status,2,c
  4615  001678  D007               	goto	l24187
  4616                           
  4617                           ; BSR set to: 1
  4618  00167A  0E06               	movlw	6
  4619  00167C  1966               	xorwf	(_menu_st+21)& (0+255),w,b
  4620  00167E  A4D8               	btfss	status,2,c
  4621  001680  D003               	goto	l24187
  4622                           
  4623                           ; BSR set to: 1
  4624                           ;sm_MenuConfiguration_MC50.c: 351:                     {;sm_MenuConfiguration_MC50.c: 35
      +                          2:                       var_sys_NVM.motorPower = 9;
  4625  001682  0E09               	movlw	9
  4626  001684  0100               	movlb	0	; () banked
  4627  001686  6F9A               	movwf	(_var_sys_NVM+2)& (0+255),b	;volatile
  4628  001688                     l24187:
  4629                           
  4630                           ;sm_MenuConfiguration_MC50.c: 355:                       SaveNVM_VarSystem(pageMemoryE);
  4631  001688  0E01               	movlw	1
  4632  00168A  ECDB  F04A         	call	_SaveNVM_VarSystem
  4633                           
  4634                           ;sm_MenuConfiguration_MC50.c: 356:                       SaveNVM_VarSystem(pageMemoryP);
  4635  00168E  0E00               	movlw	0
  4636  001690  ECDB  F04A         	call	_SaveNVM_VarSystem
  4637  001694                     l24191:
  4638                           
  4639                           ;sm_MenuConfiguration_MC50.c: 360:                 sm_send_event(&menuConfiguration_stat
      +                          eMachine, ev_ParameterIsSaved);
  4640  001694  0EBB               	movlw	low _menuConfiguration_stateMachine
  4641  001696  6E12               	movwf	sm_send_event@psm^0,c
  4642  001698  0E02               	movlw	high _menuConfiguration_stateMachine
  4643  00169A  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4644  00169C  0E00               	movlw	0
  4645  00169E  6E15               	movwf	(sm_send_event@event+1)^0,c
  4646  0016A0  0E04               	movlw	4
  4647  0016A2  6E14               	movwf	sm_send_event@event^0,c
  4648  0016A4  ECCD  F046         	call	_sm_send_event	;wreg free
  4649                           
  4650                           ;sm_MenuConfiguration_MC50.c: 363:                 menu_st.parameterSelected++;
  4651  0016A8  0101               	movlb	1	; () banked
  4652  0016AA  2B68               	incf	(_menu_st+23)& (0+255),f,b
  4653                           
  4654                           ; BSR set to: 1
  4655                           ;sm_MenuConfiguration_MC50.c: 364:                 if(menu_st.actualMenu<=E_Menu)
  4656  0016AC  0E02               	movlw	2
  4657  0016AE  6166               	cpfslt	(_menu_st+21)& (0+255),b
  4658  0016B0  D005               	goto	l24201
  4659                           
  4660                           ; BSR set to: 1
  4661                           ;sm_MenuConfiguration_MC50.c: 365:                 {;sm_MenuConfiguration_MC50.c: 366:  
      +                                             menu_st.lastMainParameterSelected++;
  4662  0016B2  2B69               	incf	(_menu_st+24)& (0+255),f,b
  4663                           
  4664                           ; BSR set to: 1
  4665                           ;sm_MenuConfiguration_MC50.c: 367:                     load_New_Menu(menu_st.actualMenu)
      +                          ;
  4666  0016B4  5166               	movf	(_menu_st+21)& (0+255),w,b
  4667  0016B6  EC53  F024         	call	_load_New_Menu
  4668                           
  4669                           ;sm_MenuConfiguration_MC50.c: 368:                 }
  4670  0016BA  0012               	return	
  4671  0016BC                     l24201:
  4672                           
  4673                           ; BSR set to: 1
  4674  0016BC  5167               	movf	(_menu_st+22)& (0+255),w,b
  4675  0016BE  5D68               	subwf	(_menu_st+23)& (0+255),w,b
  4676  0016C0  A0D8               	btfss	status,0,c
  4677  0016C2  D005               	goto	l24207
  4678                           
  4679                           ; BSR set to: 1
  4680                           ;sm_MenuConfiguration_MC50.c: 370:                 {;sm_MenuConfiguration_MC50.c: 371:  
      +                                             menu_st.lastMainParameterSelected++;
  4681  0016C4  2B69               	incf	(_menu_st+24)& (0+255),f,b
  4682                           
  4683                           ; BSR set to: 1
  4684                           ;sm_MenuConfiguration_MC50.c: 372:                     load_New_Menu(menu_st.lastMenu);
  4685  0016C6  5165               	movf	(_menu_st+20)& (0+255),w,b
  4686  0016C8  EC53  F024         	call	_load_New_Menu
  4687                           
  4688                           ;sm_MenuConfiguration_MC50.c: 373:                 }
  4689  0016CC  0012               	return	
  4690  0016CE                     l24207:
  4691                           
  4692                           ; BSR set to: 1
  4693                           ;sm_MenuConfiguration_MC50.c: 375:                 {;sm_MenuConfiguration_MC50.c: 376:  
      +                                             load_New_Menu(menu_st.actualMenu);
  4694  0016CE  5166               	movf	(_menu_st+21)& (0+255),w,b
  4695  0016D0  EC53  F024         	call	_load_New_Menu
  4696  0016D4  0012               	return	
  4697  0016D6                     l24209:
  4698                           
  4699                           ; BSR set to: 0
  4700                           ;sm_MenuConfiguration_MC50.c: 382:         {;sm_MenuConfiguration_MC50.c: 383:          
      +                             if(ts_system.timeoutMenu<=0)
  4701  0016D6  0101               	movlb	1	; () banked
  4702  0016D8  BFAE               	btfsc	(_ts_system+15)& (0+255),7,b	;volatile
  4703  0016DA  D005               	goto	u29410
  4704  0016DC  51AE               	movf	(_ts_system+15)& (0+255),w,b	;volatile
  4705  0016DE  E102               	bnz	u29411
  4706  0016E0  05AD               	decf	(_ts_system+14)& (0+255),w,b	;volatile
  4707  0016E2  B0D8               	btfsc	status,0,c
  4708  0016E4                     u29411:
  4709  0016E4  0012               	return	
  4710  0016E6                     u29410:
  4711                           
  4712                           ; BSR set to: 1
  4713                           ;sm_MenuConfiguration_MC50.c: 384:             {;sm_MenuConfiguration_MC50.c: 386:      
      +                                     if(auxCounter<=0){
  4714  0016E6  0100               	movlb	0	; () banked
  4715  0016E8  51FC               	movf	_auxCounter& (0+255),w,b
  4716  0016EA  11FD               	iorwf	(_auxCounter+1)& (0+255),w,b
  4717  0016EC  A4D8               	btfss	status,2,c
  4718  0016EE  D010               	goto	l24219
  4719                           
  4720                           ; BSR set to: 0
  4721                           ;sm_MenuConfiguration_MC50.c: 387:                     menu_st.lastMainParameterSelected
      +                          ++;
  4722  0016F0  0101               	movlb	1	; () banked
  4723  0016F2  2B69               	incf	(_menu_st+24)& (0+255),f,b
  4724                           
  4725                           ; BSR set to: 1
  4726                           ;sm_MenuConfiguration_MC50.c: 388:                     load_New_Menu(menu_st.actualMenu)
      +                          ;
  4727  0016F4  5166               	movf	(_menu_st+21)& (0+255),w,b
  4728  0016F6  EC53  F024         	call	_load_New_Menu
  4729                           
  4730                           ;sm_MenuConfiguration_MC50.c: 389:                     sm_send_event(&menuConfiguration_
      +                          stateMachine, ev_ParameterIsSaved);
  4731  0016FA  0EBB               	movlw	low _menuConfiguration_stateMachine
  4732  0016FC  6E12               	movwf	sm_send_event@psm^0,c
  4733  0016FE  0E02               	movlw	high _menuConfiguration_stateMachine
  4734  001700  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4735  001702  0E00               	movlw	0
  4736  001704  6E15               	movwf	(sm_send_event@event+1)^0,c
  4737  001706  0E04               	movlw	4
  4738  001708  6E14               	movwf	sm_send_event@event^0,c
  4739  00170A  ECCD  F046         	call	_sm_send_event	;wreg free
  4740                           
  4741                           ;sm_MenuConfiguration_MC50.c: 390:                 }
  4742  00170E  0012               	return	
  4743  001710                     l24219:
  4744                           
  4745                           ; BSR set to: 0
  4746                           ;sm_MenuConfiguration_MC50.c: 392:                 {;sm_MenuConfiguration_MC50.c: 393:  
      +                                             ts_system.timeoutMenu=(1000/50)*3;
  4747  001710  0E00               	movlw	0
  4748  001712  0101               	movlb	1	; () banked
  4749  001714  6FAE               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4750  001716  0E3C               	movlw	60
  4751  001718  6FAD               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4752                           
  4753                           ; BSR set to: 1
  4754                           ;sm_MenuConfiguration_MC50.c: 394:                     edit_Param.tempValue=(unsigned ch
      +                          ar)(tempCounter/auxCounter);
  4755  00171A  C2F4  F010         	movff	_tempCounter,___lldiv@dividend
  4756  00171E  C2F5  F011         	movff	_tempCounter+1,___lldiv@dividend+1
  4757  001722  C2F6  F012         	movff	_tempCounter+2,___lldiv@dividend+2
  4758  001726  C2F7  F013         	movff	_tempCounter+3,___lldiv@dividend+3
  4759  00172A  C0FC  F014         	movff	_auxCounter,___lldiv@divisor
  4760  00172E  C0FD  F015         	movff	_auxCounter+1,___lldiv@divisor+1
  4761  001732  6A16               	clrf	(___lldiv@divisor+2)^0,c
  4762  001734  6A17               	clrf	(___lldiv@divisor+3)^0,c
  4763  001736  EC92  F042         	call	___lldiv	;wreg free
  4764  00173A  5010               	movf	?___lldiv^0,w,c
  4765  00173C  6E49               	movwf	(_edit_Param+3)^0,c	;volatile
  4766                           
  4767                           ;sm_MenuConfiguration_MC50.c: 395:                     tempCounter=tempCounter-(tempCoun
      +                          ter/auxCounter*auxCounter);
  4768  00173E  C0FC  F014         	movff	_auxCounter,___lldiv@divisor
  4769  001742  C0FD  F015         	movff	_auxCounter+1,___lldiv@divisor+1
  4770  001746  6A16               	clrf	(___lldiv@divisor+2)^0,c
  4771  001748  6A17               	clrf	(___lldiv@divisor+3)^0,c
  4772  00174A  C2F4  F010         	movff	_tempCounter,___lldiv@dividend
  4773  00174E  C2F5  F011         	movff	_tempCounter+1,___lldiv@dividend+1
  4774  001752  C2F6  F012         	movff	_tempCounter+2,___lldiv@dividend+2
  4775  001756  C2F7  F013         	movff	_tempCounter+3,___lldiv@dividend+3
  4776  00175A  EC92  F042         	call	___lldiv	;wreg free
  4777  00175E  C010  F01D         	movff	?___lldiv,___lmul@multiplier
  4778  001762  C011  F01E         	movff	?___lldiv+1,___lmul@multiplier+1
  4779  001766  C012  F01F         	movff	?___lldiv+2,___lmul@multiplier+2
  4780  00176A  C013  F020         	movff	?___lldiv+3,___lmul@multiplier+3
  4781  00176E  C0FC  F021         	movff	_auxCounter,___lmul@multiplicand
  4782  001772  C0FD  F022         	movff	_auxCounter+1,___lmul@multiplicand+1
  4783  001776  6A23               	clrf	(___lmul@multiplicand+2)^0,c
  4784  001778  6A24               	clrf	(___lmul@multiplicand+3)^0,c
  4785  00177A  EC08  F048         	call	___lmul	;wreg free
  4786  00177E  501D               	movf	?___lmul^0,w,c
  4787  001780  0102               	movlb	2	; () banked
  4788  001782  5DF4               	subwf	_tempCounter& (0+255),w,b
  4789  001784  6FF4               	movwf	_tempCounter& (0+255),b
  4790  001786  501E               	movf	(?___lmul+1)^0,w,c
  4791  001788  59F5               	subwfb	(_tempCounter+1)& (0+255),w,b
  4792  00178A  6FF5               	movwf	(_tempCounter+1)& (0+255),b
  4793  00178C  501F               	movf	(?___lmul+2)^0,w,c
  4794  00178E  59F6               	subwfb	(_tempCounter+2)& (0+255),w,b
  4795  001790  6FF6               	movwf	(_tempCounter+2)& (0+255),b
  4796  001792  5020               	movf	(?___lmul+3)^0,w,c
  4797  001794  59F7               	subwfb	(_tempCounter+3)& (0+255),w,b
  4798  001796  6FF7               	movwf	(_tempCounter+3)& (0+255),b
  4799                           
  4800                           ; BSR set to: 2
  4801                           ;sm_MenuConfiguration_MC50.c: 396:                     auxCounter=auxCounter/100;
  4802  001798  C0FC  F010         	movff	_auxCounter,___lwdiv@dividend
  4803  00179C  C0FD  F011         	movff	_auxCounter+1,___lwdiv@dividend+1
  4804  0017A0  0E00               	movlw	0
  4805  0017A2  6E13               	movwf	(___lwdiv@divisor+1)^0,c
  4806  0017A4  0E64               	movlw	100
  4807  0017A6  6E12               	movwf	___lwdiv@divisor^0,c
  4808  0017A8  EC88  F048         	call	___lwdiv	;wreg free
  4809  0017AC  C010  F0FC         	movff	?___lwdiv,_auxCounter
  4810  0017B0  C011  F0FD         	movff	?___lwdiv+1,_auxCounter+1
  4811                           
  4812                           ;sm_MenuConfiguration_MC50.c: 397:                     SetSegmentValueIntermitentMain(ed
      +                          it_Param.tempValue/10, edit_Param.tempValue-((edit_Param.tempValue/10)*10),( 500/50));
  4813  0017B4  0E0A               	movlw	10
  4814  0017B6  6E10               	movwf	___lbdiv@divisor^0,c
  4815  0017B8  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4816  0017BA  ECBE  F04A         	call	___lbdiv
  4817  0017BE  0DF6               	mullw	246
  4818  0017C0  50F3               	movf	243,w,c
  4819  0017C2  2449               	addwf	(_edit_Param+3)^0,w,c	;volatile
  4820  0017C4  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  4821  0017C6  0E00               	movlw	0
  4822  0017C8  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  4823  0017CA  0E0A               	movlw	10
  4824  0017CC  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  4825  0017CE  0E0A               	movlw	10
  4826  0017D0  6E10               	movwf	___lbdiv@divisor^0,c
  4827  0017D2  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4828  0017D4  ECBE  F04A         	call	___lbdiv
  4829  0017D8  EC66  F04E         	call	_SetSegmentValueIntermitentMain
  4830  0017DC  0012               	return	
  4831  0017DE                     l24229:
  4832                           
  4833                           ; BSR set to: 0
  4834                           ;sm_MenuConfiguration_MC50.c: 403:         {;sm_MenuConfiguration_MC50.c: 404:          
      +                             if(firstselectflag==1){
  4835  0017DE  0101               	movlb	1	; () banked
  4836  0017E0  05FF               	decf	_firstselectflag& (0+255),w,b
  4837  0017E2  A4D8               	btfss	status,2,c
  4838  0017E4  D004               	goto	l24233
  4839                           
  4840                           ; BSR set to: 1
  4841                           ;sm_MenuConfiguration_MC50.c: 405:                 edit_Param.tempValue=0;
  4842  0017E6  0E00               	movlw	0
  4843  0017E8  6E49               	movwf	(_edit_Param+3)^0,c	;volatile
  4844                           
  4845                           ;sm_MenuConfiguration_MC50.c: 406:                 firstselectflag=0;
  4846  0017EA  0E00               	movlw	0
  4847  0017EC  6FFF               	movwf	_firstselectflag& (0+255),b
  4848  0017EE                     l24233:
  4849                           
  4850                           ; BSR set to: 1
  4851                           ;sm_MenuConfiguration_MC50.c: 408:             controlSelectRemote();
  4852  0017EE  EC2B  F01F         	call	_controlSelectRemote	;wreg free
  4853                           
  4854                           ;sm_MenuConfiguration_MC50.c: 409:         };sm_MenuConfiguration_MC50.c: 410:         b
      +                          reak;
  4855  0017F2  0012               	return	
  4856  0017F4                     l24235:
  4857                           
  4858                           ; BSR set to: 0
  4859                           ;sm_MenuConfiguration_MC50.c: 412:         {;sm_MenuConfiguration_MC50.c: 413:          
      +                             controlSaveRemote();
  4860  0017F4  ECDE  F03D         	call	_controlSaveRemote	;wreg free
  4861                           
  4862                           ;sm_MenuConfiguration_MC50.c: 414:         };sm_MenuConfiguration_MC50.c: 415:         b
      +                          reak;
  4863  0017F8  0012               	return	
  4864  0017FA                     l24237:
  4865                           
  4866                           ; BSR set to: 0
  4867                           ;sm_MenuConfiguration_MC50.c: 417:         {;sm_MenuConfiguration_MC50.c: 418:          
      +                             controlLearnDigit();
  4868  0017FA  EC5C  F04B         	call	_controlLearnDigit	;wreg free
  4869                           
  4870                           ;sm_MenuConfiguration_MC50.c: 419:             if(var_sys.LearningIsEnabled==NO)
  4871  0017FE  0101               	movlb	1	; () banked
  4872  001800  5126               	movf	(_var_sys+38)& (0+255),w,b	;volatile
  4873  001802  A4D8               	btfss	status,2,c
  4874  001804  0012               	return	
  4875                           
  4876                           ; BSR set to: 1
  4877                           ;sm_MenuConfiguration_MC50.c: 420:             {;sm_MenuConfiguration_MC50.c: 421:      
      +                                     sm_send_event(&main_stateMachine, ev_goto_StandBy);
  4878  001806  0EF2               	movlw	low _main_stateMachine
  4879  001808  6E12               	movwf	sm_send_event@psm^0,c
  4880  00180A  0E01               	movlw	high _main_stateMachine
  4881  00180C  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4882  00180E  0E00               	movlw	0
  4883  001810  6E15               	movwf	(sm_send_event@event+1)^0,c
  4884  001812  0E07               	movlw	7
  4885  001814  6E14               	movwf	sm_send_event@event^0,c
  4886  001816  ECCD  F046         	call	_sm_send_event	;wreg free
  4887                           
  4888                           ;sm_MenuConfiguration_MC50.c: 422:                 sm_send_event(&menuConfiguration_stat
      +                          eMachine, ev_ParameterIsSaved);
  4889  00181A  0EBB               	movlw	low _menuConfiguration_stateMachine
  4890  00181C  6E12               	movwf	sm_send_event@psm^0,c
  4891  00181E  0E02               	movlw	high _menuConfiguration_stateMachine
  4892  001820  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4893  001822  0E00               	movlw	0
  4894  001824  6E15               	movwf	(sm_send_event@event+1)^0,c
  4895  001826  0E04               	movlw	4
  4896  001828  6E14               	movwf	sm_send_event@event^0,c
  4897  00182A  ECCD  F046         	call	_sm_send_event	;wreg free
  4898                           
  4899                           ;sm_MenuConfiguration_MC50.c: 423:                 SetSegmentValueMain(dMinus,dMinus);
  4900  00182E  0E18               	movlw	24
  4901  001830  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4902  001832  0E18               	movlw	24
  4903  001834  ECCB  F04D         	call	_SetSegmentValueMain
  4904                           
  4905                           ; BSR set to: 0
  4906                           ;sm_MenuConfiguration_MC50.c: 424:                 SaveNVM_VarSystem(pageMemoryCounters)
      +                          ;
  4907  001838  0E02               	movlw	2
  4908  00183A  ECDB  F04A         	call	_SaveNVM_VarSystem
  4909  00183E  D5E9               	goto	l24075
  4910  001840                     l24253:
  4911  001840  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  4912  001844  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  4913  001848  50DF               	movf	indf2,w,c
  4914  00184A  0100               	movlb	0	; () banked
  4915  00184C  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  4916  00184E  6BEC               	clrf	(??_sm_execute_menuConfiguration+1)& (0+255),b
  4917                           
  4918                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4919                           ; Switch size 1, requested type "simple"
  4920                           ; Number of cases is 1, Range of values is 0 to 0
  4921                           ; switch strategies available:
  4922                           ; Name         Instructions Cycles
  4923                           ; simple_byte            4     3 (average)
  4924                           ;	Chosen strategy is simple_byte
  4925  001850  51EC               	movf	(??_sm_execute_menuConfiguration+1)& (0+255),w,b
  4926  001852  0A00               	xorlw	0	; case 0
  4927  001854  A4D8               	btfss	status,2,c
  4928  001856  0012               	return	
  4929                           
  4930                           ; BSR set to: 0
  4931                           ; Switch size 1, requested type "simple"
  4932                           ; Number of cases is 7, Range of values is 0 to 6
  4933                           ; switch strategies available:
  4934                           ; Name         Instructions Cycles
  4935                           ; simple_byte           22    12 (average)
  4936                           ;	Chosen strategy is simple_byte
  4937  001858  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  4938  00185A  0A00               	xorlw	0	; case 0
  4939  00185C  B4D8               	btfsc	status,2,c
  4940  00185E  D431               	goto	l23943
  4941  001860  0A01               	xorlw	1	; case 1
  4942  001862  B4D8               	btfsc	status,2,c
  4943  001864  D5FC               	goto	l24093
  4944  001866  0A03               	xorlw	3	; case 2
  4945  001868  B4D8               	btfsc	status,2,c
  4946  00186A  D6CF               	goto	l24161
  4947  00186C  0A01               	xorlw	1	; case 3
  4948  00186E  B4D8               	btfsc	status,2,c
  4949  001870  D732               	goto	l24209
  4950  001872  0A07               	xorlw	7	; case 4
  4951  001874  B4D8               	btfsc	status,2,c
  4952  001876  D7B3               	goto	l24229
  4953  001878  0A01               	xorlw	1	; case 5
  4954  00187A  B4D8               	btfsc	status,2,c
  4955  00187C  D7BB               	goto	l24235
  4956  00187E  0A03               	xorlw	3	; case 6
  4957  001880  A4D8               	btfss	status,2,c
  4958  001882  0012               	return	
  4959  001884  D7BA               	goto	l24237
  4960  001886                     __end_of_sm_execute_menuConfiguration:
  4961                           	callstack 0
  4962                           
  4963 ;; *************** function _setValueToEdit *****************
  4964 ;; Defined at:
  4965 ;;		line 648 in file "sm_MenuConfiguration_MC50.c"
  4966 ;; Parameters:    Size  Location     Type
  4967 ;;  menuType        1    wreg     enum E10813
  4968 ;;  ParameterSel    1   57[COMRAM] unsigned char 
  4969 ;; Auto vars:     Size  Location     Type
  4970 ;;  menuType        1    6[BANK0 ] enum E10813
  4971 ;;  posindex        1    8[BANK0 ] unsigned char 
  4972 ;;  posindex        1    7[BANK0 ] unsigned char 
  4973 ;;  haveValueToE    1    9[BANK0 ] unsigned char 
  4974 ;; Return value:  Size  Location     Type
  4975 ;;                  1    wreg      unsigned char 
  4976 ;; Registers used:
  4977 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4978 ;; Tracked objects:
  4979 ;;		On entry : 3F/1
  4980 ;;		On exit  : 3F/0
  4981 ;;		Unchanged: 0/0
  4982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4983 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4984 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4985 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4986 ;;      Totals:         1       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4987 ;;Total ram usage:        7 bytes
  4988 ;; Hardware stack levels used: 1
  4989 ;; Hardware stack levels required when called: 14
  4990 ;; This function calls:
  4991 ;;		_InitReceiver
  4992 ;;		_SaveNVM_VarSystem
  4993 ;;		_cmdMemoryIsEmpty
  4994 ;;		_load_New_Menu
  4995 ;;		_sm_send_event
  4996 ;; This function is called by:
  4997 ;;		_sm_execute_menuConfiguration
  4998 ;; This function uses a non-reentrant model
  4999 ;;
  5000                           
  5001                           	psect	text3
  5002  00341C                     __ptext3:
  5003                           	callstack 0
  5004  00341C                     _setValueToEdit:
  5005                           	callstack 14
  5006                           
  5007                           ;incstack = 0
  5008                           ;setValueToEdit@menuType stored from wreg
  5009  00341C  0100               	movlb	0	; () banked
  5010  00341E  6FDE               	movwf	setValueToEdit@menuType& (0+255),b
  5011                           
  5012                           ;sm_MenuConfiguration_MC50.c: 649:     char haveValueToEdit=0;
  5013  003420  0E00               	movlw	0
  5014  003422  0100               	movlb	0	; () banked
  5015  003424  6FE1               	movwf	setValueToEdit@haveValueToEdit& (0+255),b
  5016                           
  5017                           ;sm_MenuConfiguration_MC50.c: 652:     switch (menuType)
  5018  003426  D267               	goto	l22129
  5019  003428                     l3358:
  5020                           
  5021                           ; BSR set to: 0
  5022                           ;sm_MenuConfiguration_MC50.c: 655:         {;sm_MenuConfiguration_MC50.c: 656:          
      +                             menu_st.lastMainParameterSelected= menu_st.parameterSelected;
  5023  003428  C168  F169         	movff	_menu_st+23,_menu_st+24
  5024                           
  5025                           ; BSR set to: 0
  5026                           ;sm_MenuConfiguration_MC50.c: 657:             edit_Param.Min=0;
  5027  00342C  0E00               	movlw	0
  5028  00342E  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5029                           
  5030                           ;sm_MenuConfiguration_MC50.c: 658:             switch (ParameterSelected)
  5031  003430  D034               	goto	l21877
  5032  003432                     l21831:
  5033                           
  5034                           ; BSR set to: 0
  5035                           ;sm_MenuConfiguration_MC50.c: 661:                 {;sm_MenuConfiguration_MC50.c: 662:  
      +                                             load_New_Menu(P0_SMenu);
  5036  003432  0E04               	movlw	4
  5037  003434  EC53  F024         	call	_load_New_Menu
  5038                           
  5039                           ;sm_MenuConfiguration_MC50.c: 664:                 };sm_MenuConfiguration_MC50.c: 665:  
      +                                         break;
  5040  003438  D287               	goto	l22131
  5041  00343A                     l21833:
  5042                           
  5043                           ; BSR set to: 0
  5044                           ;sm_MenuConfiguration_MC50.c: 667:                 {;sm_MenuConfiguration_MC50.c: 668:  
      +                                             load_New_Menu(P1_SMenu);
  5045  00343A  0E05               	movlw	5
  5046  00343C  EC53  F024         	call	_load_New_Menu
  5047                           
  5048                           ;sm_MenuConfiguration_MC50.c: 669:                 };sm_MenuConfiguration_MC50.c: 670:  
      +                                         break;
  5049  003440  D283               	goto	l22131
  5050  003442                     l21835:
  5051                           
  5052                           ; BSR set to: 0
  5053                           ;sm_MenuConfiguration_MC50.c: 672:                 {;sm_MenuConfiguration_MC50.c: 673:  
      +                                             load_New_Menu(P2_SMenu);
  5054  003442  0E06               	movlw	6
  5055  003444  EC53  F024         	call	_load_New_Menu
  5056                           
  5057                           ;sm_MenuConfiguration_MC50.c: 674:                 };sm_MenuConfiguration_MC50.c: 675:  
      +                                         break;
  5058  003448  D27F               	goto	l22131
  5059  00344A                     l21837:
  5060                           
  5061                           ; BSR set to: 0
  5062                           ;sm_MenuConfiguration_MC50.c: 677:                 {;sm_MenuConfiguration_MC50.c: 678:  
      +                                             edit_Param.Max=99;
  5063  00344A  0E63               	movlw	99
  5064  00344C  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5065                           
  5066                           ; BSR set to: 0
  5067                           ;sm_MenuConfiguration_MC50.c: 680:                     edit_Param.tempValue=var_sys_NVM.
      +                          walkTime;
  5068  00344E  C09C  F049         	movff	_var_sys_NVM+4,_edit_Param+3	;volatile
  5069                           
  5070                           ; BSR set to: 0
  5071                           ;sm_MenuConfiguration_MC50.c: 681:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.walkTime;
  5072  003452  0E9C               	movlw	low (_var_sys_NVM+4)
  5073  003454                     L13:
  5074  003454  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5075  003456  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5076                           
  5077                           ; BSR set to: 0
  5078                           ;sm_MenuConfiguration_MC50.c: 682:                     haveValueToEdit=1;
  5079  003458  0E01               	movlw	1
  5080  00345A  6FE1               	movwf	setValueToEdit@haveValueToEdit& (0+255),b
  5081                           
  5082                           ;sm_MenuConfiguration_MC50.c: 683:                 };sm_MenuConfiguration_MC50.c: 684:  
      +                                         break;
  5083  00345C  D275               	goto	l22131
  5084  00345E                     l21845:
  5085                           
  5086                           ; BSR set to: 0
  5087                           ;sm_MenuConfiguration_MC50.c: 686:                 {;sm_MenuConfiguration_MC50.c: 687:  
      +                                             load_New_Menu(P4_SMenu);
  5088  00345E  0E07               	movlw	7
  5089  003460  EC53  F024         	call	_load_New_Menu
  5090                           
  5091                           ;sm_MenuConfiguration_MC50.c: 688:                 };sm_MenuConfiguration_MC50.c: 689:  
      +                                         break;
  5092  003464  D271               	goto	l22131
  5093  003466                     l21847:
  5094                           
  5095                           ; BSR set to: 0
  5096                           ;sm_MenuConfiguration_MC50.c: 691:                 {;sm_MenuConfiguration_MC50.c: 692:  
      +                                             load_New_Menu(P5_SMenu);
  5097  003466  0E08               	movlw	8
  5098  003468  EC53  F024         	call	_load_New_Menu
  5099                           
  5100                           ;sm_MenuConfiguration_MC50.c: 693:                 };sm_MenuConfiguration_MC50.c: 694:  
      +                                         break;
  5101  00346C  D26D               	goto	l22131
  5102  00346E                     l21849:
  5103                           
  5104                           ; BSR set to: 0
  5105                           ;sm_MenuConfiguration_MC50.c: 696:                 {;sm_MenuConfiguration_MC50.c: 697:  
      +                                             load_New_Menu(P6_SMenu);
  5106  00346E  0E09               	movlw	9
  5107  003470  EC53  F024         	call	_load_New_Menu
  5108                           
  5109                           ;sm_MenuConfiguration_MC50.c: 698:                 };sm_MenuConfiguration_MC50.c: 699:  
      +                                         break;
  5110  003474  D269               	goto	l22131
  5111  003476                     l21851:
  5112                           
  5113                           ; BSR set to: 0
  5114                           ;sm_MenuConfiguration_MC50.c: 701:                 {;sm_MenuConfiguration_MC50.c: 702:  
      +                                             edit_Param.Max=2;
  5115  003476  0E02               	movlw	2
  5116  003478  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5117                           
  5118                           ; BSR set to: 0
  5119                           ;sm_MenuConfiguration_MC50.c: 704:                     edit_Param.tempValue=var_sys_NVM.
      +                          operationMode;
  5120  00347A  C0A4  F049         	movff	_var_sys_NVM+12,_edit_Param+3	;volatile
  5121                           
  5122                           ; BSR set to: 0
  5123                           ;sm_MenuConfiguration_MC50.c: 705:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.operationMode;
  5124  00347E  0EA4               	movlw	low (_var_sys_NVM+12)
  5125  003480  D7E9               	goto	L13
  5126  003482                     l21859:
  5127                           
  5128                           ; BSR set to: 0
  5129                           ;sm_MenuConfiguration_MC50.c: 710:                 {;sm_MenuConfiguration_MC50.c: 711:  
      +                                             edit_Param.Max=3;
  5130  003482  0E03               	movlw	3
  5131  003484  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5132                           
  5133                           ; BSR set to: 0
  5134                           ;sm_MenuConfiguration_MC50.c: 713:                     edit_Param.tempValue=var_sys_NVM.
      +                          flashLightMode;
  5135  003486  C0A5  F049         	movff	_var_sys_NVM+13,_edit_Param+3	;volatile
  5136                           
  5137                           ; BSR set to: 0
  5138                           ;sm_MenuConfiguration_MC50.c: 714:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.flashLightMode;
  5139  00348A  0EA5               	movlw	low (_var_sys_NVM+13)
  5140  00348C  D7E3               	goto	L13
  5141  00348E                     l21867:
  5142                           
  5143                           ; BSR set to: 0
  5144                           ;sm_MenuConfiguration_MC50.c: 719:                 {;sm_MenuConfiguration_MC50.c: 720:  
      +                                             edit_Param.Max=1;
  5145  00348E  0E01               	movlw	1
  5146  003490  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5147                           
  5148                           ; BSR set to: 0
  5149                           ;sm_MenuConfiguration_MC50.c: 722:                     edit_Param.tempValue=var_sys_NVM.
      +                          programmingDistance;
  5150  003492  C0A6  F049         	movff	_var_sys_NVM+14,_edit_Param+3	;volatile
  5151                           
  5152                           ; BSR set to: 0
  5153                           ;sm_MenuConfiguration_MC50.c: 723:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.programmingDistance;
  5154  003496  0EA6               	movlw	low (_var_sys_NVM+14)
  5155  003498  D7DD               	goto	L13
  5156  00349A                     l21877:
  5157                           
  5158                           ; BSR set to: 0
  5159  00349A  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5160  00349C  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5161  00349E  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5162                           
  5163                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5164                           ; Switch size 1, requested type "simple"
  5165                           ; Number of cases is 1, Range of values is 0 to 0
  5166                           ; switch strategies available:
  5167                           ; Name         Instructions Cycles
  5168                           ; simple_byte            4     3 (average)
  5169                           ;	Chosen strategy is simple_byte
  5170  0034A0  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5171  0034A2  0A00               	xorlw	0	; case 0
  5172  0034A4  A4D8               	btfss	status,2,c
  5173  0034A6  D250               	goto	l22131
  5174                           
  5175                           ; BSR set to: 0
  5176                           ; Switch size 1, requested type "simple"
  5177                           ; Number of cases is 10, Range of values is 0 to 9
  5178                           ; switch strategies available:
  5179                           ; Name         Instructions Cycles
  5180                           ; simple_byte           31    16 (average)
  5181                           ;	Chosen strategy is simple_byte
  5182  0034A8  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5183  0034AA  0A00               	xorlw	0	; case 0
  5184  0034AC  B4D8               	btfsc	status,2,c
  5185  0034AE  D7C1               	goto	l21831
  5186  0034B0  0A01               	xorlw	1	; case 1
  5187  0034B2  B4D8               	btfsc	status,2,c
  5188  0034B4  D7C2               	goto	l21833
  5189  0034B6  0A03               	xorlw	3	; case 2
  5190  0034B8  B4D8               	btfsc	status,2,c
  5191  0034BA  D7C3               	goto	l21835
  5192  0034BC  0A01               	xorlw	1	; case 3
  5193  0034BE  B4D8               	btfsc	status,2,c
  5194  0034C0  D7C4               	goto	l21837
  5195  0034C2  0A07               	xorlw	7	; case 4
  5196  0034C4  B4D8               	btfsc	status,2,c
  5197  0034C6  D7CB               	goto	l21845
  5198  0034C8  0A01               	xorlw	1	; case 5
  5199  0034CA  B4D8               	btfsc	status,2,c
  5200  0034CC  D7CC               	goto	l21847
  5201  0034CE  0A03               	xorlw	3	; case 6
  5202  0034D0  B4D8               	btfsc	status,2,c
  5203  0034D2  D7CD               	goto	l21849
  5204  0034D4  0A01               	xorlw	1	; case 7
  5205  0034D6  B4D8               	btfsc	status,2,c
  5206  0034D8  D7CE               	goto	l21851
  5207  0034DA  0A0F               	xorlw	15	; case 8
  5208  0034DC  B4D8               	btfsc	status,2,c
  5209  0034DE  D7D1               	goto	l21859
  5210  0034E0  0A01               	xorlw	1	; case 9
  5211  0034E2  B4D8               	btfsc	status,2,c
  5212  0034E4  D7D4               	goto	l21867
  5213  0034E6  D230               	goto	l22131
  5214  0034E8                     l3372:
  5215                           
  5216                           ; BSR set to: 0
  5217                           ;sm_MenuConfiguration_MC50.c: 733:         {;sm_MenuConfiguration_MC50.c: 734:          
      +                             menu_st.lastMainParameterSelected= menu_st.parameterSelected;
  5218  0034E8  C168  F169         	movff	_menu_st+23,_menu_st+24
  5219                           
  5220                           ; BSR set to: 0
  5221                           ;sm_MenuConfiguration_MC50.c: 735:             edit_Param.Max=1;
  5222  0034EC  0E01               	movlw	1
  5223  0034EE  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5224                           
  5225                           ;sm_MenuConfiguration_MC50.c: 736:             edit_Param.Min=0;
  5226  0034F0  0E00               	movlw	0
  5227  0034F2  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5228                           
  5229                           ;sm_MenuConfiguration_MC50.c: 737:             switch (ParameterSelected)
  5230  0034F4  D057               	goto	l21933
  5231  0034F6                     l21881:
  5232                           
  5233                           ; BSR set to: 0
  5234                           ;sm_MenuConfiguration_MC50.c: 740:                 {;sm_MenuConfiguration_MC50.c: 741:  
      +                                             load_New_Menu(E0_SMenu);
  5235  0034F6  0E0A               	movlw	10
  5236  0034F8  EC53  F024         	call	_load_New_Menu
  5237                           
  5238                           ;sm_MenuConfiguration_MC50.c: 742:                 };sm_MenuConfiguration_MC50.c: 743:  
      +                                         break;
  5239  0034FC  D225               	goto	l22131
  5240  0034FE                     l21883:
  5241                           
  5242                           ; BSR set to: 0
  5243                           ;sm_MenuConfiguration_MC50.c: 745:                 {;sm_MenuConfiguration_MC50.c: 748:  
      +                                             load_New_Menu(E1_SMenu);
  5244  0034FE  0E0B               	movlw	11
  5245  003500  EC53  F024         	call	_load_New_Menu
  5246                           
  5247                           ;sm_MenuConfiguration_MC50.c: 750:                 };sm_MenuConfiguration_MC50.c: 751:  
      +                                         break;
  5248  003504  D221               	goto	l22131
  5249  003506                     l21885:
  5250                           
  5251                           ; BSR set to: 0
  5252                           ;sm_MenuConfiguration_MC50.c: 753:                 {;sm_MenuConfiguration_MC50.c: 754:  
      +                                             edit_Param.Max=99;
  5253  003506  0E63               	movlw	99
  5254  003508  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5255                           
  5256                           ; BSR set to: 0
  5257                           ;sm_MenuConfiguration_MC50.c: 756:                     edit_Param.tempValue=var_sys_NVM.
      +                          ligthTime;
  5258  00350A  C0AC  F049         	movff	_var_sys_NVM+20,_edit_Param+3	;volatile
  5259                           
  5260                           ; BSR set to: 0
  5261                           ;sm_MenuConfiguration_MC50.c: 757:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.ligthTime;
  5262  00350E  0EAC               	movlw	low (_var_sys_NVM+20)
  5263  003510  D7A1               	goto	L13
  5264  003512                     l21893:
  5265                           
  5266                           ; BSR set to: 0
  5267                           ;sm_MenuConfiguration_MC50.c: 762:                 {;sm_MenuConfiguration_MC50.c: 763:  
      +                                            edit_Param.Max=9;
  5268  003512  0E09               	movlw	9
  5269  003514  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5270                           
  5271                           ;sm_MenuConfiguration_MC50.c: 764:                    edit_Param.Min=1;
  5272  003516  0E01               	movlw	1
  5273  003518  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5274                           
  5275                           ; BSR set to: 0
  5276                           ;sm_MenuConfiguration_MC50.c: 765:                    edit_Param.tempValue=var_sys_NVM.f
      +                          olow_me;
  5277  00351A  C0AD  F049         	movff	_var_sys_NVM+21,_edit_Param+3	;volatile
  5278                           
  5279                           ; BSR set to: 0
  5280                           ;sm_MenuConfiguration_MC50.c: 766:                    edit_Param.Value=(unsigned char*)&
      +                          var_sys_NVM.folow_me;
  5281  00351E  0EAD               	movlw	low (_var_sys_NVM+21)
  5282  003520  D799               	goto	L13
  5283  003522                     l3380:
  5284                           
  5285                           ; BSR set to: 0
  5286                           ;sm_MenuConfiguration_MC50.c: 778:                 {;sm_MenuConfiguration_MC50.c: 779:  
      +                                            edit_Param.tempValue=var_sys_NVM.electricBrake;
  5287  003522  C0AF  F049         	movff	_var_sys_NVM+23,_edit_Param+3	;volatile
  5288                           
  5289                           ; BSR set to: 0
  5290                           ;sm_MenuConfiguration_MC50.c: 780:                    edit_Param.Value=(unsigned char*)&
      +                          var_sys_NVM.electricBrake;
  5291  003526  0EAF               	movlw	low (_var_sys_NVM+23)
  5292  003528  D795               	goto	L13
  5293  00352A                     l21905:
  5294                           
  5295                           ; BSR set to: 0
  5296                           ;sm_MenuConfiguration_MC50.c: 785:                 {;sm_MenuConfiguration_MC50.c: 786:  
      +                                             edit_Param.Max=9;
  5297  00352A  0E09               	movlw	9
  5298  00352C  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5299                           
  5300                           ;sm_MenuConfiguration_MC50.c: 787:                     edit_Param.Min=1;
  5301  00352E  0E01               	movlw	1
  5302  003530  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5303                           
  5304                           ; BSR set to: 0
  5305                           ;sm_MenuConfiguration_MC50.c: 788:                     edit_Param.tempValue=var_sys_NVM.
      +                          velocityDecelaration;
  5306  003532  C0B0  F049         	movff	_var_sys_NVM+24,_edit_Param+3	;volatile
  5307                           
  5308                           ; BSR set to: 0
  5309                           ;sm_MenuConfiguration_MC50.c: 789:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.velocityDecelaration;
  5310  003536  0EB0               	movlw	low (_var_sys_NVM+24)
  5311  003538  D78D               	goto	L13
  5312  00353A                     l21913:
  5313                           
  5314                           ; BSR set to: 0
  5315                           ;sm_MenuConfiguration_MC50.c: 794:                 {;sm_MenuConfiguration_MC50.c: 795:  
      +                                             edit_Param.tempValue=0;
  5316  00353A  0E00               	movlw	0
  5317  00353C  6E49               	movwf	(_edit_Param+3)^0,c	;volatile
  5318                           
  5319                           ;sm_MenuConfiguration_MC50.c: 796:                     ts_system.timeoutMenu=0;
  5320  00353E  0E00               	movlw	0
  5321  003540  0101               	movlb	1	; () banked
  5322  003542  6FAE               	movwf	(_ts_system+15)& (0+255),b	;volatile
  5323  003544  0E00               	movlw	0
  5324  003546  6FAD               	movwf	(_ts_system+14)& (0+255),b	;volatile
  5325                           
  5326                           ;sm_MenuConfiguration_MC50.c: 798:                     auxCounter=10000;
  5327  003548  0E27               	movlw	39
  5328  00354A  0100               	movlb	0	; () banked
  5329  00354C  6FFD               	movwf	(_auxCounter+1)& (0+255),b
  5330  00354E  0E10               	movlw	16
  5331  003550  6FFC               	movwf	_auxCounter& (0+255),b
  5332                           
  5333                           ;sm_MenuConfiguration_MC50.c: 799:                     ts_system.timeBetweenSaveCounters
      +                          =0;
  5334  003552  0E00               	movlw	0
  5335  003554  0101               	movlb	1	; () banked
  5336  003556  6FC6               	movwf	(_ts_system+39)& (0+255),b	;volatile
  5337  003558  0E00               	movlw	0
  5338  00355A  6FC5               	movwf	(_ts_system+38)& (0+255),b	;volatile
  5339                           
  5340                           ; BSR set to: 1
  5341                           ;sm_MenuConfiguration_MC50.c: 800:                     tempCounter=var_sys.actualCounter
      +                          Moves;
  5342  00355C  C13C  F2F4         	movff	_var_sys+60,_tempCounter	;volatile
  5343  003560  C13D  F2F5         	movff	_var_sys+61,_tempCounter+1	;volatile
  5344  003564  C13E  F2F6         	movff	_var_sys+62,_tempCounter+2	;volatile
  5345  003568  C13F  F2F7         	movff	_var_sys+63,_tempCounter+3	;volatile
  5346                           
  5347                           ; BSR set to: 1
  5348                           ;sm_MenuConfiguration_MC50.c: 801:                     sm_send_event(&menuConfiguration_
      +                          stateMachine, ev_showCounter);
  5349  00356C  0EBB               	movlw	low _menuConfiguration_stateMachine
  5350  00356E  6E12               	movwf	sm_send_event@psm^0,c
  5351  003570  0E02               	movlw	high _menuConfiguration_stateMachine
  5352  003572  6E13               	movwf	(sm_send_event@psm+1)^0,c
  5353  003574  0E00               	movlw	0
  5354  003576  6E15               	movwf	(sm_send_event@event+1)^0,c
  5355  003578  0E05               	movlw	5
  5356  00357A  6E14               	movwf	sm_send_event@event^0,c
  5357  00357C  ECCD  F046         	call	_sm_send_event	;wreg free
  5358                           
  5359                           ;sm_MenuConfiguration_MC50.c: 802:                 };sm_MenuConfiguration_MC50.c: 803:  
      +                                         break;
  5360  003580  D1E3               	goto	l22131
  5361  003582                     l21919:
  5362                           
  5363                           ; BSR set to: 0
  5364                           ;sm_MenuConfiguration_MC50.c: 805:                 {;sm_MenuConfiguration_MC50.c: 806:  
      +                                             edit_Param.tempValue=0;
  5365  003582  0E00               	movlw	0
  5366  003584  6E49               	movwf	(_edit_Param+3)^0,c	;volatile
  5367                           
  5368                           ;sm_MenuConfiguration_MC50.c: 807:                     haveValueToEdit=1;
  5369  003586  0E01               	movlw	1
  5370  003588  6FE1               	movwf	setValueToEdit@haveValueToEdit& (0+255),b
  5371                           
  5372                           ; BSR set to: 0
  5373                           ;sm_MenuConfiguration_MC50.c: 808:                     edit_Param.Value = 0;
  5374  00358A  0E00               	movlw	0
  5375  00358C  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5376  00358E  0E00               	movlw	0
  5377  003590  6E48               	movwf	(_edit_Param+2)^0,c	;volatile
  5378                           
  5379                           ;sm_MenuConfiguration_MC50.c: 809:                 };sm_MenuConfiguration_MC50.c: 810:  
      +                                         break;
  5380  003592  D1DA               	goto	l22131
  5381  003594                     l21923:
  5382                           
  5383                           ; BSR set to: 0
  5384                           ;sm_MenuConfiguration_MC50.c: 812:                 {;sm_MenuConfiguration_MC50.c: 813:  
      +                                             edit_Param.Max=3;
  5385  003594  0E03               	movlw	3
  5386  003596  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5387                           
  5388                           ;sm_MenuConfiguration_MC50.c: 814:                     edit_Param.Min=0;
  5389  003598  0E00               	movlw	0
  5390  00359A  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5391                           
  5392                           ; BSR set to: 0
  5393                           ;sm_MenuConfiguration_MC50.c: 815:                     edit_Param.tempValue=var_sys_NVM.
      +                          flashRGBMode;
  5394  00359C  C0B1  F049         	movff	_var_sys_NVM+25,_edit_Param+3	;volatile
  5395                           
  5396                           ; BSR set to: 0
  5397                           ;sm_MenuConfiguration_MC50.c: 816:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.flashRGBMode;
  5398  0035A0  0EB1               	movlw	low (_var_sys_NVM+25)
  5399  0035A2  D758               	goto	L13
  5400  0035A4                     l21933:
  5401                           
  5402                           ; BSR set to: 0
  5403  0035A4  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5404  0035A6  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5405  0035A8  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5406                           
  5407                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5408                           ; Switch size 1, requested type "simple"
  5409                           ; Number of cases is 1, Range of values is 0 to 0
  5410                           ; switch strategies available:
  5411                           ; Name         Instructions Cycles
  5412                           ; simple_byte            4     3 (average)
  5413                           ;	Chosen strategy is simple_byte
  5414  0035AA  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5415  0035AC  0A00               	xorlw	0	; case 0
  5416  0035AE  A4D8               	btfss	status,2,c
  5417  0035B0  D1CB               	goto	l22131
  5418                           
  5419                           ; BSR set to: 0
  5420                           ; Switch size 1, requested type "simple"
  5421                           ; Number of cases is 10, Range of values is 0 to 9
  5422                           ; switch strategies available:
  5423                           ; Name         Instructions Cycles
  5424                           ; simple_byte           31    16 (average)
  5425                           ;	Chosen strategy is simple_byte
  5426  0035B2  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5427  0035B4  0A00               	xorlw	0	; case 0
  5428  0035B6  B4D8               	btfsc	status,2,c
  5429  0035B8  D79E               	goto	l21881
  5430  0035BA  0A01               	xorlw	1	; case 1
  5431  0035BC  B4D8               	btfsc	status,2,c
  5432  0035BE  D79F               	goto	l21883
  5433  0035C0  0A03               	xorlw	3	; case 2
  5434  0035C2  B4D8               	btfsc	status,2,c
  5435  0035C4  D7A0               	goto	l21885
  5436  0035C6  0A01               	xorlw	1	; case 3
  5437  0035C8  B4D8               	btfsc	status,2,c
  5438  0035CA  D7A3               	goto	l21893
  5439  0035CC  0A07               	xorlw	7	; case 4
  5440  0035CE  B4D8               	btfsc	status,2,c
  5441  0035D0  D1BB               	goto	l22131
  5442  0035D2  0A01               	xorlw	1	; case 5
  5443  0035D4  B4D8               	btfsc	status,2,c
  5444  0035D6  D7A5               	goto	l3380
  5445  0035D8  0A03               	xorlw	3	; case 6
  5446  0035DA  B4D8               	btfsc	status,2,c
  5447  0035DC  D7A6               	goto	l21905
  5448  0035DE  0A01               	xorlw	1	; case 7
  5449  0035E0  B4D8               	btfsc	status,2,c
  5450  0035E2  D7AB               	goto	l21913
  5451  0035E4  0A0F               	xorlw	15	; case 8
  5452  0035E6  B4D8               	btfsc	status,2,c
  5453  0035E8  D7CC               	goto	l21919
  5454  0035EA  0A01               	xorlw	1	; case 9
  5455  0035EC  B4D8               	btfsc	status,2,c
  5456  0035EE  D7D2               	goto	l21923
  5457  0035F0  D1AB               	goto	l22131
  5458  0035F2                     l21935:
  5459                           
  5460                           ; BSR set to: 0
  5461                           ;sm_MenuConfiguration_MC50.c: 829:                 {;sm_MenuConfiguration_MC50.c: 830:  
      +                                          sm_send_event(&menuConfiguration_stateMachine, ev_SartLearning);
  5462  0035F2  0EBB               	movlw	low _menuConfiguration_stateMachine
  5463  0035F4  6E12               	movwf	sm_send_event@psm^0,c
  5464  0035F6  0E02               	movlw	high _menuConfiguration_stateMachine
  5465  0035F8  6E13               	movwf	(sm_send_event@psm+1)^0,c
  5466  0035FA  0E00               	movlw	0
  5467  0035FC  6E15               	movwf	(sm_send_event@event+1)^0,c
  5468  0035FE  0E14               	movlw	20
  5469  003600  6E14               	movwf	sm_send_event@event^0,c
  5470  003602  ECCD  F046         	call	_sm_send_event	;wreg free
  5471                           
  5472                           ;sm_MenuConfiguration_MC50.c: 831:                  sm_send_event(&controlGate_stateMach
      +                          ine,ev_SartLearning );
  5473  003606  0EE7               	movlw	low _controlGate_stateMachine
  5474  003608  6E12               	movwf	sm_send_event@psm^0,c
  5475  00360A  0E01               	movlw	high _controlGate_stateMachine
  5476  00360C  6E13               	movwf	(sm_send_event@psm+1)^0,c
  5477  00360E  0E00               	movlw	0
  5478  003610  6E15               	movwf	(sm_send_event@event+1)^0,c
  5479  003612  0E14               	movlw	20
  5480  003614  6E14               	movwf	sm_send_event@event^0,c
  5481  003616  ECCD  F046         	call	_sm_send_event	;wreg free
  5482                           
  5483                           ;sm_MenuConfiguration_MC50.c: 832:                  var_sys.LearningIsEnabled=YES;
  5484  00361A  0E01               	movlw	1
  5485  00361C  0101               	movlb	1	; () banked
  5486  00361E  6F26               	movwf	(_var_sys+38)& (0+255),b	;volatile
  5487                           
  5488                           ; BSR set to: 1
  5489                           ;sm_MenuConfiguration_MC50.c: 833:                  var_sys.programinAutomatic = Automat
      +                          ic;
  5490  003620  0E00               	movlw	0
  5491  003622  6F2A               	movwf	(_var_sys+42)& (0+255),b	;volatile
  5492                           
  5493                           ; BSR set to: 1
  5494                           ;sm_MenuConfiguration_MC50.c: 834:                  SaveNVM_VarSystem(pageMemoryE);
  5495  003624  0E01               	movlw	1
  5496  003626  ECDB  F04A         	call	_SaveNVM_VarSystem
  5497                           
  5498                           ;sm_MenuConfiguration_MC50.c: 837:                 };sm_MenuConfiguration_MC50.c: 838:  
      +                                         break;
  5499  00362A  D18E               	goto	l22131
  5500  00362C                     l21943:
  5501                           
  5502                           ; BSR set to: 0
  5503                           ;sm_MenuConfiguration_MC50.c: 840:                 {;sm_MenuConfiguration_MC50.c: 841:  
      +                                          sm_send_event(&menuConfiguration_stateMachine, ev_SartLearning);
  5504  00362C  0EBB               	movlw	low _menuConfiguration_stateMachine
  5505  00362E  6E12               	movwf	sm_send_event@psm^0,c
  5506  003630  0E02               	movlw	high _menuConfiguration_stateMachine
  5507  003632  6E13               	movwf	(sm_send_event@psm+1)^0,c
  5508  003634  0E00               	movlw	0
  5509  003636  6E15               	movwf	(sm_send_event@event+1)^0,c
  5510  003638  0E14               	movlw	20
  5511  00363A  6E14               	movwf	sm_send_event@event^0,c
  5512  00363C  ECCD  F046         	call	_sm_send_event	;wreg free
  5513                           
  5514                           ;sm_MenuConfiguration_MC50.c: 842:                  sm_send_event(&controlGate_stateMach
      +                          ine, ev_SartLearning);
  5515  003640  0EE7               	movlw	low _controlGate_stateMachine
  5516  003642  6E12               	movwf	sm_send_event@psm^0,c
  5517  003644  0E01               	movlw	high _controlGate_stateMachine
  5518  003646  6E13               	movwf	(sm_send_event@psm+1)^0,c
  5519  003648  0E00               	movlw	0
  5520  00364A  6E15               	movwf	(sm_send_event@event+1)^0,c
  5521  00364C  0E14               	movlw	20
  5522  00364E  6E14               	movwf	sm_send_event@event^0,c
  5523  003650  ECCD  F046         	call	_sm_send_event	;wreg free
  5524                           
  5525                           ;sm_MenuConfiguration_MC50.c: 843:                  var_sys.LearningIsEnabled=YES;
  5526  003654  0E01               	movlw	1
  5527  003656  0101               	movlb	1	; () banked
  5528  003658  6F26               	movwf	(_var_sys+38)& (0+255),b	;volatile
  5529                           
  5530                           ; BSR set to: 1
  5531                           ;sm_MenuConfiguration_MC50.c: 844:                  var_sys.programinAutomatic = Manual;
  5532  00365A  0E01               	movlw	1
  5533  00365C  6F2A               	movwf	(_var_sys+42)& (0+255),b	;volatile
  5534                           
  5535                           ; BSR set to: 1
  5536                           ;sm_MenuConfiguration_MC50.c: 845:                  SaveNVM_VarSystem(pageMemoryE);
  5537  00365E  0E01               	movlw	1
  5538  003660  ECDB  F04A         	call	_SaveNVM_VarSystem
  5539                           
  5540                           ;sm_MenuConfiguration_MC50.c: 848:                 };sm_MenuConfiguration_MC50.c: 849:  
      +                                         break;
  5541  003664  D171               	goto	l22131
  5542  003666                     l3390:
  5543                           
  5544                           ; BSR set to: 0
  5545                           ;sm_MenuConfiguration_MC50.c: 851:                 {;sm_MenuConfiguration_MC50.c: 852:  
      +                                          edit_Param.tempValue=var_sys_NVM.TypeofMotor;
  5546  003666  C0B4  F049         	movff	_var_sys_NVM+28,_edit_Param+3	;volatile
  5547                           
  5548                           ; BSR set to: 0
  5549                           ;sm_MenuConfiguration_MC50.c: 853:                  load_New_Menu(TypeMotor_Menu);
  5550  00366A  0E03               	movlw	3
  5551  00366C  EC53  F024         	call	_load_New_Menu
  5552                           
  5553                           ;sm_MenuConfiguration_MC50.c: 854:                  edit_Param.Value=(unsigned char*)&va
      +                          r_sys_NVM.TypeofMotor;
  5554  003670  0EB4               	movlw	low (_var_sys_NVM+28)
  5555  003672  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5556  003674  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5557                           
  5558                           ;sm_MenuConfiguration_MC50.c: 855:                  haveValueToEdit=1;
  5559  003676  0E01               	movlw	1
  5560  003678  0100               	movlb	0	; () banked
  5561  00367A  6FE1               	movwf	setValueToEdit@haveValueToEdit& (0+255),b
  5562                           
  5563                           ; BSR set to: 0
  5564                           ;sm_MenuConfiguration_MC50.c: 856:                  edit_Param.Max=2;
  5565  00367C  0E02               	movlw	2
  5566  00367E  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5567                           
  5568                           ; BSR set to: 0
  5569                           ;sm_MenuConfiguration_MC50.c: 857:                  edit_Param.Min=0;
  5570  003680  0E00               	movlw	0
  5571  003682  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5572                           
  5573                           ;sm_MenuConfiguration_MC50.c: 859:                 };sm_MenuConfiguration_MC50.c: 860:  
      +                                         break;
  5574  003684  D161               	goto	l22131
  5575  003686                     l3391:
  5576                           
  5577                           ; BSR set to: 0
  5578                           ;sm_MenuConfiguration_MC50.c: 862:                 {;sm_MenuConfiguration_MC50.c: 863:  
      +                                          edit_Param.tempValue=var_sys_NVM.Direction_motor;
  5579  003686  C0B3  F049         	movff	_var_sys_NVM+27,_edit_Param+3	;volatile
  5580                           
  5581                           ; BSR set to: 0
  5582                           ;sm_MenuConfiguration_MC50.c: 864:                  load_New_Menu(Direction_Menu);
  5583  00368A  0E02               	movlw	2
  5584  00368C  EC53  F024         	call	_load_New_Menu
  5585                           
  5586                           ;sm_MenuConfiguration_MC50.c: 865:                  edit_Param.Value=(unsigned char*)&va
      +                          r_sys_NVM.Direction_motor;
  5587  003690  0EB3               	movlw	low (_var_sys_NVM+27)
  5588  003692  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5589  003694  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5590                           
  5591                           ;sm_MenuConfiguration_MC50.c: 866:                  haveValueToEdit=1;
  5592  003696  0E01               	movlw	1
  5593  003698  0100               	movlb	0	; () banked
  5594  00369A  6FE1               	movwf	setValueToEdit@haveValueToEdit& (0+255),b
  5595                           
  5596                           ; BSR set to: 0
  5597                           ;sm_MenuConfiguration_MC50.c: 867:                  edit_Param.Max=1;
  5598  00369C  0E01               	movlw	1
  5599  00369E  D7EF               	goto	L14
  5600  0036A0                     l21973:
  5601                           
  5602                           ; BSR set to: 0
  5603  0036A0  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5604  0036A2  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5605  0036A4  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5606                           
  5607                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5608                           ; Switch size 1, requested type "simple"
  5609                           ; Number of cases is 1, Range of values is 0 to 0
  5610                           ; switch strategies available:
  5611                           ; Name         Instructions Cycles
  5612                           ; simple_byte            4     3 (average)
  5613                           ;	Chosen strategy is simple_byte
  5614  0036A6  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5615  0036A8  0A00               	xorlw	0	; case 0
  5616  0036AA  A4D8               	btfss	status,2,c
  5617  0036AC  D14D               	goto	l22131
  5618                           
  5619                           ; BSR set to: 0
  5620                           ; Switch size 1, requested type "simple"
  5621                           ; Number of cases is 4, Range of values is 0 to 3
  5622                           ; switch strategies available:
  5623                           ; Name         Instructions Cycles
  5624                           ; simple_byte           13     7 (average)
  5625                           ;	Chosen strategy is simple_byte
  5626  0036AE  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5627  0036B0  0A00               	xorlw	0	; case 0
  5628  0036B2  B4D8               	btfsc	status,2,c
  5629  0036B4  D79E               	goto	l21935
  5630  0036B6  0A01               	xorlw	1	; case 1
  5631  0036B8  B4D8               	btfsc	status,2,c
  5632  0036BA  D7B8               	goto	l21943
  5633  0036BC  0A03               	xorlw	3	; case 2
  5634  0036BE  B4D8               	btfsc	status,2,c
  5635  0036C0  D7D2               	goto	l3390
  5636  0036C2  0A01               	xorlw	1	; case 3
  5637  0036C4  B4D8               	btfsc	status,2,c
  5638  0036C6  D7DF               	goto	l3391
  5639  0036C8  D13F               	goto	l22131
  5640  0036CA                     l21975:
  5641                           
  5642                           ; BSR set to: 0
  5643                           ;sm_MenuConfiguration_MC50.c: 883:                 {;sm_MenuConfiguration_MC50.c: 884:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.decelarationOpen;
  5644  0036CA  0E98               	movlw	low _var_sys_NVM
  5645  0036CC  D001               	goto	L15
  5646  0036CE                     l21977:
  5647                           
  5648                           ; BSR set to: 0
  5649                           ;sm_MenuConfiguration_MC50.c: 888:                 {;sm_MenuConfiguration_MC50.c: 889:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.decelarationClose;
  5650  0036CE  0E99               	movlw	low (_var_sys_NVM+1)
  5651  0036D0                     L15:
  5652  0036D0  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5653  0036D2  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5654                           
  5655                           ;sm_MenuConfiguration_MC50.c: 890:                 };sm_MenuConfiguration_MC50.c: 891:  
      +                                         break;
  5656  0036D4  D00E               	goto	l21983
  5657  0036D6                     l21981:
  5658                           
  5659                           ; BSR set to: 0
  5660  0036D6  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5661  0036D8  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5662  0036DA  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5663                           
  5664                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5665                           ; Switch size 1, requested type "simple"
  5666                           ; Number of cases is 1, Range of values is 0 to 0
  5667                           ; switch strategies available:
  5668                           ; Name         Instructions Cycles
  5669                           ; simple_byte            4     3 (average)
  5670                           ;	Chosen strategy is simple_byte
  5671  0036DC  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5672  0036DE  0A00               	xorlw	0	; case 0
  5673  0036E0  A4D8               	btfss	status,2,c
  5674  0036E2  D007               	goto	l21983
  5675                           
  5676                           ; BSR set to: 0
  5677                           ; Switch size 1, requested type "simple"
  5678                           ; Number of cases is 2, Range of values is 0 to 1
  5679                           ; switch strategies available:
  5680                           ; Name         Instructions Cycles
  5681                           ; simple_byte            7     4 (average)
  5682                           ;	Chosen strategy is simple_byte
  5683  0036E4  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5684  0036E6  0A00               	xorlw	0	; case 0
  5685  0036E8  B4D8               	btfsc	status,2,c
  5686  0036EA  D7EF               	goto	l21975
  5687  0036EC  0A01               	xorlw	1	; case 1
  5688  0036EE  B4D8               	btfsc	status,2,c
  5689  0036F0  D7EE               	goto	l21977
  5690  0036F2                     l21983:
  5691                           
  5692                           ; BSR set to: 0
  5693                           ;sm_MenuConfiguration_MC50.c: 895:                 edit_Param.Max=45;
  5694  0036F2  0E2D               	movlw	45
  5695  0036F4                     L29:
  5696  0036F4  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5697                           
  5698                           ;sm_MenuConfiguration_MC50.c: 896:                 edit_Param.Min=0;
  5699  0036F6  0E00               	movlw	0
  5700  0036F8  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5701  0036FA                     L19:
  5702                           
  5703                           ;sm_MenuConfiguration_MC50.c: 899:             haveValueToEdit=1;
  5704  0036FA  0E01               	movlw	1
  5705  0036FC  6FE1               	movwf	setValueToEdit@haveValueToEdit& (0+255),b
  5706                           
  5707                           ; BSR set to: 0
  5708                           ;sm_MenuConfiguration_MC50.c: 900:             edit_Param.tempValue= edit_Param.Value[0]
      +                          ;
  5709  0036FE  C047  FFD9         	movff	_edit_Param+1,fsr2l	;volatile
  5710  003702  C048  FFDA         	movff	_edit_Param+2,fsr2h	;volatile
  5711  003706  50DF               	movf	indf2,w,c
  5712  003708  6E49               	movwf	(_edit_Param+3)^0,c	;volatile
  5713                           
  5714                           ;sm_MenuConfiguration_MC50.c: 901:         };sm_MenuConfiguration_MC50.c: 902:         b
      +                          reak;
  5715  00370A  D11E               	goto	l22131
  5716  00370C                     l21987:
  5717                           
  5718                           ; BSR set to: 0
  5719                           ;sm_MenuConfiguration_MC50.c: 904:         {;sm_MenuConfiguration_MC50.c: 905:          
      +                             edit_Param.Max=9;
  5720  00370C  0E09               	movlw	9
  5721  00370E  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5722                           
  5723                           ;sm_MenuConfiguration_MC50.c: 906:             edit_Param.Min=0;
  5724  003710  0E00               	movlw	0
  5725  003712  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5726                           
  5727                           ;sm_MenuConfiguration_MC50.c: 907:             switch (ParameterSelected)
  5728  003714  D00F               	goto	l22003
  5729  003716                     l21989:
  5730                           
  5731                           ; BSR set to: 0
  5732                           ;sm_MenuConfiguration_MC50.c: 910:                 {;sm_MenuConfiguration_MC50.c: 911:  
      +                                               if (var_sys_NVM.motorSensitivity <2)
  5733  003716  0E02               	movlw	2
  5734  003718  619B               	cpfslt	(_var_sys_NVM+3)& (0+255),b	;volatile
  5735  00371A  D002               	goto	l21993
  5736                           
  5737                           ; BSR set to: 0
  5738                           ;sm_MenuConfiguration_MC50.c: 912:                       {;sm_MenuConfiguration_MC50.c: 
      +                          913:                         edit_Param.Min=0;
  5739  00371C  0E00               	movlw	0
  5740  00371E  D001               	goto	L16
  5741  003720                     l21993:
  5742                           
  5743                           ; BSR set to: 0
  5744                           ;sm_MenuConfiguration_MC50.c: 916:                       {;sm_MenuConfiguration_MC50.c: 
      +                          917:                         edit_Param.Min=9;
  5745  003720  0E09               	movlw	9
  5746  003722                     L16:
  5747  003722  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5748                           
  5749                           ; BSR set to: 0
  5750                           ;sm_MenuConfiguration_MC50.c: 919:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.motorPower;
  5751  003724  0E9A               	movlw	low (_var_sys_NVM+2)
  5752  003726  D003               	goto	L18
  5753  003728                     l21997:
  5754                           
  5755                           ; BSR set to: 0
  5756                           ;sm_MenuConfiguration_MC50.c: 923:                 {;sm_MenuConfiguration_MC50.c: 924:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.motorSensitivity;
  5757  003728  0E9B               	movlw	low (_var_sys_NVM+3)
  5758  00372A  D001               	goto	L18
  5759  00372C                     l21999:
  5760                           
  5761                           ; BSR set to: 0
  5762                           ;sm_MenuConfiguration_MC50.c: 928:                 {;sm_MenuConfiguration_MC50.c: 929:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.decelarationSensivity;
  5763  00372C  0EA7               	movlw	low (_var_sys_NVM+15)
  5764  00372E                     L18:
  5765  00372E  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5766  003730  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5767                           
  5768                           ;sm_MenuConfiguration_MC50.c: 930:                 };sm_MenuConfiguration_MC50.c: 931:  
      +                                         break;
  5769  003732  D7E3               	goto	L19
  5770  003734                     l22003:
  5771                           
  5772                           ; BSR set to: 0
  5773  003734  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5774  003736  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5775  003738  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5776                           
  5777                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5778                           ; Switch size 1, requested type "simple"
  5779                           ; Number of cases is 1, Range of values is 0 to 0
  5780                           ; switch strategies available:
  5781                           ; Name         Instructions Cycles
  5782                           ; simple_byte            4     3 (average)
  5783                           ;	Chosen strategy is simple_byte
  5784  00373A  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5785  00373C  0A00               	xorlw	0	; case 0
  5786  00373E  A4D8               	btfss	status,2,c
  5787  003740  D7DC               	goto	L19
  5788                           
  5789                           ; BSR set to: 0
  5790                           ; Switch size 1, requested type "simple"
  5791                           ; Number of cases is 3, Range of values is 0 to 2
  5792                           ; switch strategies available:
  5793                           ; Name         Instructions Cycles
  5794                           ; simple_byte           10     6 (average)
  5795                           ;	Chosen strategy is simple_byte
  5796  003742  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5797  003744  0A00               	xorlw	0	; case 0
  5798  003746  B4D8               	btfsc	status,2,c
  5799  003748  D7E6               	goto	l21989
  5800  00374A  0A01               	xorlw	1	; case 1
  5801  00374C  B4D8               	btfsc	status,2,c
  5802  00374E  D7EC               	goto	l21997
  5803  003750  0A03               	xorlw	3	; case 2
  5804  003752  B4D8               	btfsc	status,2,c
  5805  003754  D7EB               	goto	l21999
  5806  003756  D7D1               	goto	L19
  5807  003758                     l22009:
  5808                           
  5809                           ; BSR set to: 0
  5810                           ;sm_MenuConfiguration_MC50.c: 942:                 {;sm_MenuConfiguration_MC50.c: 943:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.autoTimeFullClose;
  5811  003758  0E9D               	movlw	low (_var_sys_NVM+5)
  5812  00375A  D001               	goto	L20
  5813  00375C                     l22011:
  5814                           
  5815                           ; BSR set to: 0
  5816                           ;sm_MenuConfiguration_MC50.c: 947:                 {;sm_MenuConfiguration_MC50.c: 948:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.autoTimeWalkClose;
  5817  00375C  0E9E               	movlw	low (_var_sys_NVM+6)
  5818  00375E                     L20:
  5819  00375E  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5820  003760  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5821                           
  5822                           ;sm_MenuConfiguration_MC50.c: 949:                 };sm_MenuConfiguration_MC50.c: 950:  
      +                                         break;
  5823  003762  D00E               	goto	l22017
  5824  003764                     l22015:
  5825                           
  5826                           ; BSR set to: 0
  5827  003764  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5828  003766  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5829  003768  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5830                           
  5831                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5832                           ; Switch size 1, requested type "simple"
  5833                           ; Number of cases is 1, Range of values is 0 to 0
  5834                           ; switch strategies available:
  5835                           ; Name         Instructions Cycles
  5836                           ; simple_byte            4     3 (average)
  5837                           ;	Chosen strategy is simple_byte
  5838  00376A  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5839  00376C  0A00               	xorlw	0	; case 0
  5840  00376E  A4D8               	btfss	status,2,c
  5841  003770  D007               	goto	l22017
  5842                           
  5843                           ; BSR set to: 0
  5844                           ; Switch size 1, requested type "simple"
  5845                           ; Number of cases is 2, Range of values is 0 to 1
  5846                           ; switch strategies available:
  5847                           ; Name         Instructions Cycles
  5848                           ; simple_byte            7     4 (average)
  5849                           ;	Chosen strategy is simple_byte
  5850  003772  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5851  003774  0A00               	xorlw	0	; case 0
  5852  003776  B4D8               	btfsc	status,2,c
  5853  003778  D7EF               	goto	l22009
  5854  00377A  0A01               	xorlw	1	; case 1
  5855  00377C  B4D8               	btfsc	status,2,c
  5856  00377E  D7EE               	goto	l22011
  5857  003780                     l22017:
  5858                           
  5859                           ; BSR set to: 0
  5860                           ;sm_MenuConfiguration_MC50.c: 952:             edit_Param.Max=99;
  5861  003780  0E63               	movlw	99
  5862  003782  D7B8               	goto	L29
  5863  003784                     l22021:
  5864                           
  5865                           ; BSR set to: 0
  5866                           ;sm_MenuConfiguration_MC50.c: 963:                 {;sm_MenuConfiguration_MC50.c: 964:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.photoCellIsON;
  5867  003784  0E9F               	movlw	low (_var_sys_NVM+7)
  5868  003786  D034               	goto	L125
  5869  003788                     l22023:
  5870                           
  5871                           ; BSR set to: 0
  5872                           ;sm_MenuConfiguration_MC50.c: 968:                 {;sm_MenuConfiguration_MC50.c: 969:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.photoCellInOpen;
  5873  003788  0EA0               	movlw	low (_var_sys_NVM+8)
  5874  00378A  D032               	goto	L125
  5875  00378C                     l22027:
  5876                           
  5877                           ; BSR set to: 0
  5878  00378C  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5879  00378E  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5880  003790  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5881                           
  5882                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5883                           ; Switch size 1, requested type "simple"
  5884                           ; Number of cases is 1, Range of values is 0 to 0
  5885                           ; switch strategies available:
  5886                           ; Name         Instructions Cycles
  5887                           ; simple_byte            4     3 (average)
  5888                           ;	Chosen strategy is simple_byte
  5889  003792  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5890  003794  0A00               	xorlw	0	; case 0
  5891  003796  A4D8               	btfss	status,2,c
  5892  003798  D02D               	goto	L124
  5893                           
  5894                           ; BSR set to: 0
  5895                           ; Switch size 1, requested type "simple"
  5896                           ; Number of cases is 2, Range of values is 0 to 1
  5897                           ; switch strategies available:
  5898                           ; Name         Instructions Cycles
  5899                           ; simple_byte            7     4 (average)
  5900                           ;	Chosen strategy is simple_byte
  5901  00379A  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5902  00379C  0A00               	xorlw	0	; case 0
  5903  00379E  B4D8               	btfsc	status,2,c
  5904  0037A0  D7F1               	goto	l22021
  5905  0037A2  0A01               	xorlw	1	; case 1
  5906  0037A4  B4D8               	btfsc	status,2,c
  5907  0037A6  D7F0               	goto	l22023
  5908  0037A8  D025               	goto	L124
  5909  0037AA                     l22033:
  5910                           
  5911                           ; BSR set to: 0
  5912                           ;sm_MenuConfiguration_MC50.c: 984:                 {;sm_MenuConfiguration_MC50.c: 985:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.securityBandIsON;
  5913  0037AA  0EA1               	movlw	low (_var_sys_NVM+9)
  5914  0037AC  D021               	goto	L125
  5915  0037AE                     l22035:
  5916                           
  5917                           ; BSR set to: 0
  5918                           ;sm_MenuConfiguration_MC50.c: 989:                 {;sm_MenuConfiguration_MC50.c: 990:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.securityBandType;
  5919  0037AE  0EA2               	movlw	low (_var_sys_NVM+10)
  5920  0037B0  D01F               	goto	L125
  5921  0037B2                     l22037:
  5922                           
  5923                           ; BSR set to: 0
  5924                           ;sm_MenuConfiguration_MC50.c: 994:                 {;sm_MenuConfiguration_MC50.c: 995:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.securityBandInOpen;
  5925  0037B2  0EA3               	movlw	low (_var_sys_NVM+11)
  5926  0037B4  D01D               	goto	L125
  5927  0037B6                     l22039:
  5928                           
  5929                           ; BSR set to: 0
  5930                           ;sm_MenuConfiguration_MC50.c: 999:                 {;sm_MenuConfiguration_MC50.c: 1000: 
      +                                              edit_Param.Value=(unsigned char*)&var_sys_NVM.Stopboton;
  5931  0037B6  0EAE               	movlw	low (_var_sys_NVM+22)
  5932  0037B8  D01B               	goto	L125
  5933  0037BA                     l22043:
  5934                           
  5935                           ; BSR set to: 0
  5936  0037BA  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5937  0037BC  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5938  0037BE  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5939                           
  5940                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5941                           ; Switch size 1, requested type "simple"
  5942                           ; Number of cases is 1, Range of values is 0 to 0
  5943                           ; switch strategies available:
  5944                           ; Name         Instructions Cycles
  5945                           ; simple_byte            4     3 (average)
  5946                           ;	Chosen strategy is simple_byte
  5947  0037C0  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5948  0037C2  0A00               	xorlw	0	; case 0
  5949  0037C4  A4D8               	btfss	status,2,c
  5950  0037C6  D016               	goto	L124
  5951                           
  5952                           ; BSR set to: 0
  5953                           ; Switch size 1, requested type "simple"
  5954                           ; Number of cases is 4, Range of values is 0 to 3
  5955                           ; switch strategies available:
  5956                           ; Name         Instructions Cycles
  5957                           ; simple_byte           13     7 (average)
  5958                           ;	Chosen strategy is simple_byte
  5959  0037C8  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5960  0037CA  0A00               	xorlw	0	; case 0
  5961  0037CC  B4D8               	btfsc	status,2,c
  5962  0037CE  D7ED               	goto	l22033
  5963  0037D0  0A01               	xorlw	1	; case 1
  5964  0037D2  B4D8               	btfsc	status,2,c
  5965  0037D4  D7EC               	goto	l22035
  5966  0037D6  0A03               	xorlw	3	; case 2
  5967  0037D8  B4D8               	btfsc	status,2,c
  5968  0037DA  D7EB               	goto	l22037
  5969  0037DC  0A01               	xorlw	1	; case 3
  5970  0037DE  B4D8               	btfsc	status,2,c
  5971  0037E0  D7EA               	goto	l22039
  5972  0037E2  D008               	goto	L124
  5973  0037E4                     l22049:
  5974                           
  5975                           ; BSR set to: 0
  5976                           ;sm_MenuConfiguration_MC50.c: 1018:                 {;sm_MenuConfiguration_MC50.c: 1019:
      +                                               edit_Param.Value=(unsigned char*)&var_sys_NVM.homemPresente;
  5977  0037E4  0EA8               	movlw	low (_var_sys_NVM+16)
  5978  0037E6  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5979  0037E8  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5980                           
  5981                           ; BSR set to: 0
  5982                           ;sm_MenuConfiguration_MC50.c: 1020:                       edit_Param.Max=2;
  5983  0037EA  0E02               	movlw	2
  5984  0037EC  D783               	goto	L29
  5985  0037EE                     l22055:
  5986                           
  5987                           ; BSR set to: 0
  5988                           ;sm_MenuConfiguration_MC50.c: 1025:                 {;sm_MenuConfiguration_MC50.c: 1026:
      +                                               edit_Param.Value=(unsigned char*)&var_sys_NVM.logicDigital;
  5989  0037EE  0EA9               	movlw	low (_var_sys_NVM+17)
  5990  0037F0                     L125:
  5991  0037F0  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5992  0037F2  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5993  0037F4                     L124:
  5994                           
  5995                           ; BSR set to: 0
  5996                           ;sm_MenuConfiguration_MC50.c: 1027:                     edit_Param.Max=1;
  5997  0037F4  0E01               	movlw	1
  5998  0037F6  D77E               	goto	L29
  5999  0037F8                     l22063:
  6000                           
  6001                           ; BSR set to: 0
  6002  0037F8  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  6003  0037FA  6FDC               	movwf	??_setValueToEdit& (0+255),b
  6004  0037FC  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  6005                           
  6006                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6007                           ; Switch size 1, requested type "simple"
  6008                           ; Number of cases is 1, Range of values is 0 to 0
  6009                           ; switch strategies available:
  6010                           ; Name         Instructions Cycles
  6011                           ; simple_byte            4     3 (average)
  6012                           ;	Chosen strategy is simple_byte
  6013  0037FE  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  6014  003800  0A00               	xorlw	0	; case 0
  6015  003802  A4D8               	btfss	status,2,c
  6016  003804  D77A               	goto	L19
  6017                           
  6018                           ; BSR set to: 0
  6019                           ; Switch size 1, requested type "simple"
  6020                           ; Number of cases is 2, Range of values is 0 to 1
  6021                           ; switch strategies available:
  6022                           ; Name         Instructions Cycles
  6023                           ; simple_byte            7     4 (average)
  6024                           ;	Chosen strategy is simple_byte
  6025  003806  51DC               	movf	??_setValueToEdit& (0+255),w,b
  6026  003808  0A00               	xorlw	0	; case 0
  6027  00380A  B4D8               	btfsc	status,2,c
  6028  00380C  D7EB               	goto	l22049
  6029  00380E  0A01               	xorlw	1	; case 1
  6030  003810  B4D8               	btfsc	status,2,c
  6031  003812  D7ED               	goto	l22055
  6032  003814  D772               	goto	L19
  6033  003816                     l22069:
  6034                           
  6035                           ; BSR set to: 0
  6036                           ;sm_MenuConfiguration_MC50.c: 1042:                 {;sm_MenuConfiguration_MC50.c: 1043:
      +                                               edit_Param.Value=(unsigned char*)&var_sys_NVM.softStart;
  6037  003816  0EAA               	movlw	low (_var_sys_NVM+18)
  6038  003818  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  6039  00381A  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  6040                           
  6041                           ; BSR set to: 0
  6042                           ;sm_MenuConfiguration_MC50.c: 1044:                      edit_Param.Max=9;
  6043  00381C  0E09               	movlw	9
  6044  00381E  D76A               	goto	L29
  6045  003820                     l22075:
  6046                           
  6047                           ; BSR set to: 0
  6048                           ;sm_MenuConfiguration_MC50.c: 1049:                 {;sm_MenuConfiguration_MC50.c: 1050:
      +                                               edit_Param.Value=(unsigned char*)&var_sys_NVM.softstop;
  6049  003820  0EAB               	movlw	low (_var_sys_NVM+19)
  6050  003822  D7FA               	goto	L27
  6051  003824                     l22083:
  6052                           
  6053                           ; BSR set to: 0
  6054  003824  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  6055  003826  6FDC               	movwf	??_setValueToEdit& (0+255),b
  6056  003828  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  6057                           
  6058                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6059                           ; Switch size 1, requested type "simple"
  6060                           ; Number of cases is 1, Range of values is 0 to 0
  6061                           ; switch strategies available:
  6062                           ; Name         Instructions Cycles
  6063                           ; simple_byte            4     3 (average)
  6064                           ;	Chosen strategy is simple_byte
  6065  00382A  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  6066  00382C  0A00               	xorlw	0	; case 0
  6067  00382E  A4D8               	btfss	status,2,c
  6068  003830  D764               	goto	L19
  6069                           
  6070                           ; BSR set to: 0
  6071                           ; Switch size 1, requested type "simple"
  6072                           ; Number of cases is 2, Range of values is 0 to 1
  6073                           ; switch strategies available:
  6074                           ; Name         Instructions Cycles
  6075                           ; simple_byte            7     4 (average)
  6076                           ;	Chosen strategy is simple_byte
  6077  003832  51DC               	movf	??_setValueToEdit& (0+255),w,b
  6078  003834  0A00               	xorlw	0	; case 0
  6079  003836  B4D8               	btfsc	status,2,c
  6080  003838  D7EE               	goto	l22069
  6081  00383A  0A01               	xorlw	1	; case 1
  6082  00383C  B4D8               	btfsc	status,2,c
  6083  00383E  D7F0               	goto	l22075
  6084  003840  D75C               	goto	L19
  6085  003842                     l22089:
  6086                           
  6087                           ; BSR set to: 0
  6088                           ;sm_MenuConfiguration_MC50.c: 1068:                 {;sm_MenuConfiguration_MC50.c: 1069:
      +                                 edit_Param.Value=&value;
  6089  003842  0EFD               	movlw	low setValueToEdit@value
  6090  003844  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  6091  003846  0E01               	movlw	high setValueToEdit@value
  6092  003848  6E48               	movwf	(_edit_Param+2)^0,c	;volatile
  6093                           
  6094                           ; BSR set to: 0
  6095                           ;sm_MenuConfiguration_MC50.c: 1070:                     for(unsigned char posindex=0; po
      +                          sindex <= *(unsigned char*)&var_sys_NVM.positionRemotesFull; posindex++)
  6096  00384A  0E00               	movlw	0
  6097  00384C  6FDF               	movwf	setValueToEdit@posindex& (0+255),b
  6098  00384E  D00D               	goto	l22099
  6099  003850                     l3438:
  6100                           
  6101                           ; BSR set to: 0
  6102                           ;sm_MenuConfiguration_MC50.c: 1071:                     {;sm_MenuConfiguration_MC50.c: 1
      +                          072:                         value=posindex;
  6103  003850  C0DF  F1FD         	movff	setValueToEdit@posindex,setValueToEdit@value
  6104                           
  6105                           ; BSR set to: 0
  6106                           ;sm_MenuConfiguration_MC50.c: 1073:                         if(cmdMemoryIsEmpty(menu_st.
      +                          parameterSelected, posindex))
  6107  003854  C0DF  F02E         	movff	setValueToEdit@posindex,cmdMemoryIsEmpty@position
  6108  003858  0101               	movlb	1	; () banked
  6109  00385A  5168               	movf	(_menu_st+23)& (0+255),w,b
  6110  00385C  EC24  F040         	call	_cmdMemoryIsEmpty
  6111  003860  0900               	iorlw	0
  6112  003862  A4D8               	btfss	status,2,c
  6113  003864  D008               	goto	u25480
  6114                           
  6115                           ;sm_MenuConfiguration_MC50.c: 1075:                     }
  6116  003866  0100               	movlb	0	; () banked
  6117  003868  2BDF               	incf	setValueToEdit@posindex& (0+255),f,b
  6118  00386A                     l22099:
  6119                           
  6120                           ; BSR set to: 0
  6121  00386A  EE20  F0B8         	lfsr	2,_var_sys_NVM+32
  6122  00386E  51DF               	movf	setValueToEdit@posindex& (0+255),w,b
  6123  003870  5CDE               	subwf	postinc2,w,c
  6124  003872  B0D8               	btfsc	status,0,c
  6125  003874  D7ED               	goto	l3438
  6126  003876                     u25480:
  6127                           
  6128                           ;sm_MenuConfiguration_MC50.c: 1076:                     edit_Param.Max=*(unsigned char*)
      +                          &var_sys_NVM.positionRemotesFull;
  6129  003876  EE20  F0B8         	lfsr	2,_var_sys_NVM+32
  6130  00387A  D018               	goto	L28
  6131  00387C                     l22103:
  6132                           
  6133                           ; BSR set to: 0
  6134                           ;sm_MenuConfiguration_MC50.c: 1080:                 {;sm_MenuConfiguration_MC50.c: 1081:
      +                                               for(unsigned char posindex=0; posindex <= *(unsigned char*)&var_sys
      +                          _NVM.positionRemotesWalk; posindex++)
  6135  00387C  0E00               	movlw	0
  6136  00387E  6FE0               	movwf	setValueToEdit@posindex_6979& (0+255),b
  6137  003880  D00D               	goto	l22111
  6138  003882                     l3444:
  6139                           
  6140                           ; BSR set to: 0
  6141                           ;sm_MenuConfiguration_MC50.c: 1082:                     {;sm_MenuConfiguration_MC50.c: 1
      +                          083:                         value=posindex;
  6142  003882  C0E0  F1FD         	movff	setValueToEdit@posindex_6979,setValueToEdit@value
  6143                           
  6144                           ; BSR set to: 0
  6145                           ;sm_MenuConfiguration_MC50.c: 1084:                         if(cmdMemoryIsEmpty(menu_st.
      +                          parameterSelected, posindex))
  6146  003886  C0E0  F02E         	movff	setValueToEdit@posindex_6979,cmdMemoryIsEmpty@position
  6147  00388A  0101               	movlb	1	; () banked
  6148  00388C  5168               	movf	(_menu_st+23)& (0+255),w,b
  6149  00388E  EC24  F040         	call	_cmdMemoryIsEmpty
  6150  003892  0900               	iorlw	0
  6151  003894  A4D8               	btfss	status,2,c
  6152  003896  D008               	goto	u25500
  6153                           
  6154                           ;sm_MenuConfiguration_MC50.c: 1086:                     }
  6155  003898  0100               	movlb	0	; () banked
  6156  00389A  2BE0               	incf	setValueToEdit@posindex_6979& (0+255),f,b
  6157  00389C                     l22111:
  6158                           
  6159                           ; BSR set to: 0
  6160  00389C  EE20  F0B9         	lfsr	2,_var_sys_NVM+33
  6161  0038A0  51E0               	movf	setValueToEdit@posindex_6979& (0+255),w,b
  6162  0038A2  5CDE               	subwf	postinc2,w,c
  6163  0038A4  B0D8               	btfsc	status,0,c
  6164  0038A6  D7ED               	goto	l3444
  6165  0038A8                     u25500:
  6166                           
  6167                           ;sm_MenuConfiguration_MC50.c: 1087:                     edit_Param.Max=*(unsigned char*)
      +                          &var_sys_NVM.positionRemotesWalk;
  6168  0038A8  EE20  F0B9         	lfsr	2,_var_sys_NVM+33
  6169  0038AC                     L28:
  6170  0038AC  50DF               	movf	indf2,w,c
  6171  0038AE  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  6172                           
  6173                           ;sm_MenuConfiguration_MC50.c: 1088:                 };sm_MenuConfiguration_MC50.c: 1089:
      +                                           break;
  6174  0038B0  D00E               	goto	l22119
  6175  0038B2                     l22117:
  6176                           
  6177                           ; BSR set to: 0
  6178  0038B2  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  6179  0038B4  6FDC               	movwf	??_setValueToEdit& (0+255),b
  6180  0038B6  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  6181                           
  6182                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6183                           ; Switch size 1, requested type "simple"
  6184                           ; Number of cases is 1, Range of values is 0 to 0
  6185                           ; switch strategies available:
  6186                           ; Name         Instructions Cycles
  6187                           ; simple_byte            4     3 (average)
  6188                           ;	Chosen strategy is simple_byte
  6189  0038B8  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  6190  0038BA  0A00               	xorlw	0	; case 0
  6191  0038BC  A4D8               	btfss	status,2,c
  6192  0038BE  D007               	goto	l22119
  6193                           
  6194                           ; BSR set to: 0
  6195                           ; Switch size 1, requested type "simple"
  6196                           ; Number of cases is 2, Range of values is 0 to 1
  6197                           ; switch strategies available:
  6198                           ; Name         Instructions Cycles
  6199                           ; simple_byte            7     4 (average)
  6200                           ;	Chosen strategy is simple_byte
  6201  0038C0  51DC               	movf	??_setValueToEdit& (0+255),w,b
  6202  0038C2  0A00               	xorlw	0	; case 0
  6203  0038C4  B4D8               	btfsc	status,2,c
  6204  0038C6  D7BD               	goto	l22089
  6205  0038C8  0A01               	xorlw	1	; case 1
  6206  0038CA  B4D8               	btfsc	status,2,c
  6207  0038CC  D7D7               	goto	l22103
  6208  0038CE                     l22119:
  6209                           
  6210                           ;sm_MenuConfiguration_MC50.c: 1091:             edit_Param.position=*edit_Param.Value;
  6211  0038CE  C047  FFD9         	movff	_edit_Param+1,fsr2l	;volatile
  6212  0038D2  C048  FFDA         	movff	_edit_Param+2,fsr2h	;volatile
  6213  0038D6  50DF               	movf	indf2,w,c
  6214  0038D8  6E46               	movwf	_edit_Param^0,c	;volatile
  6215                           
  6216                           ;sm_MenuConfiguration_MC50.c: 1092:             edit_Param.Min=0;
  6217  0038DA  0E00               	movlw	0
  6218  0038DC  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  6219                           
  6220                           ;sm_MenuConfiguration_MC50.c: 1093:             haveValueToEdit=1;
  6221  0038DE  0E01               	movlw	1
  6222  0038E0  0100               	movlb	0	; () banked
  6223  0038E2  6FE1               	movwf	setValueToEdit@haveValueToEdit& (0+255),b
  6224                           
  6225                           ;sm_MenuConfiguration_MC50.c: 1094:             edit_Param.tempValue=*edit_Param.Value;
  6226  0038E4  C047  FFD9         	movff	_edit_Param+1,fsr2l	;volatile
  6227  0038E8  C048  FFDA         	movff	_edit_Param+2,fsr2h	;volatile
  6228  0038EC  50DF               	movf	indf2,w,c
  6229  0038EE  6E49               	movwf	(_edit_Param+3)^0,c	;volatile
  6230                           
  6231                           ; BSR set to: 0
  6232                           ;sm_MenuConfiguration_MC50.c: 1095:             InitReceiver();
  6233  0038F0  ECBE  F04D         	call	_InitReceiver	;wreg free
  6234                           
  6235                           ;sm_MenuConfiguration_MC50.c: 1096:         };sm_MenuConfiguration_MC50.c: 1097:        
      +                           break;
  6236  0038F4  D029               	goto	l22131
  6237  0038F6                     l22129:
  6238                           
  6239                           ; BSR set to: 0
  6240  0038F6  51DE               	movf	setValueToEdit@menuType& (0+255),w,b
  6241  0038F8  6FDC               	movwf	??_setValueToEdit& (0+255),b
  6242  0038FA  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  6243                           
  6244                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6245                           ; Switch size 1, requested type "simple"
  6246                           ; Number of cases is 1, Range of values is 0 to 0
  6247                           ; switch strategies available:
  6248                           ; Name         Instructions Cycles
  6249                           ; simple_byte            4     3 (average)
  6250                           ;	Chosen strategy is simple_byte
  6251  0038FC  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  6252  0038FE  0A00               	xorlw	0	; case 0
  6253  003900  A4D8               	btfss	status,2,c
  6254  003902  D022               	goto	l22131
  6255                           
  6256                           ; BSR set to: 0
  6257                           ; Switch size 1, requested type "simple"
  6258                           ; Number of cases is 11, Range of values is 0 to 12
  6259                           ; switch strategies available:
  6260                           ; Name         Instructions Cycles
  6261                           ; simple_byte           34    18 (average)
  6262                           ;	Chosen strategy is simple_byte
  6263  003904  51DC               	movf	??_setValueToEdit& (0+255),w,b
  6264  003906  0A00               	xorlw	0	; case 0
  6265  003908  B4D8               	btfsc	status,2,c
  6266  00390A  D58E               	goto	l3358
  6267  00390C  0A01               	xorlw	1	; case 1
  6268  00390E  B4D8               	btfsc	status,2,c
  6269  003910  D5EB               	goto	l3372
  6270  003912  0A05               	xorlw	5	; case 4
  6271  003914  B4D8               	btfsc	status,2,c
  6272  003916  D6C4               	goto	l21973
  6273  003918  0A01               	xorlw	1	; case 5
  6274  00391A  B4D8               	btfsc	status,2,c
  6275  00391C  D6DC               	goto	l21981
  6276  00391E  0A03               	xorlw	3	; case 6
  6277  003920  B4D8               	btfsc	status,2,c
  6278  003922  D6F4               	goto	l21987
  6279  003924  0A01               	xorlw	1	; case 7
  6280  003926  B4D8               	btfsc	status,2,c
  6281  003928  D71D               	goto	l22015
  6282  00392A  0A0F               	xorlw	15	; case 8
  6283  00392C  B4D8               	btfsc	status,2,c
  6284  00392E  D72E               	goto	l22027
  6285  003930  0A01               	xorlw	1	; case 9
  6286  003932  B4D8               	btfsc	status,2,c
  6287  003934  D742               	goto	l22043
  6288  003936  0A03               	xorlw	3	; case 10
  6289  003938  B4D8               	btfsc	status,2,c
  6290  00393A  D75E               	goto	l22063
  6291  00393C  0A01               	xorlw	1	; case 11
  6292  00393E  B4D8               	btfsc	status,2,c
  6293  003940  D771               	goto	l22083
  6294  003942  0A07               	xorlw	7	; case 12
  6295  003944  B4D8               	btfsc	status,2,c
  6296  003946  D7B5               	goto	l22117
  6297  003948                     l22131:
  6298                           
  6299                           ;sm_MenuConfiguration_MC50.c: 1100:     return haveValueToEdit;
  6300  003948  0100               	movlb	0	; () banked
  6301  00394A  51E1               	movf	setValueToEdit@haveValueToEdit& (0+255),w,b
  6302                           
  6303                           ; BSR set to: 0
  6304  00394C  0012               	return		;funcret
  6305  00394E                     __end_of_setValueToEdit:
  6306                           	callstack 0
  6307                           
  6308 ;; *************** function _load_New_Menu *****************
  6309 ;; Defined at:
  6310 ;;		line 434 in file "sm_MenuConfiguration_MC50.c"
  6311 ;; Parameters:    Size  Location     Type
  6312 ;;  Menu            1    wreg     enum E10813
  6313 ;; Auto vars:     Size  Location     Type
  6314 ;;  Menu            1   33[COMRAM] enum E10813
  6315 ;;  i               1   34[COMRAM] unsigned char 
  6316 ;; Return value:  Size  Location     Type
  6317 ;;                  1    wreg      void 
  6318 ;; Registers used:
  6319 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6320 ;; Tracked objects:
  6321 ;;		On entry : 0/0
  6322 ;;		On exit  : 0/0
  6323 ;;		Unchanged: 0/0
  6324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6325 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6326 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6327 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6328 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6329 ;;Total ram usage:        4 bytes
  6330 ;; Hardware stack levels used: 1
  6331 ;; Hardware stack levels required when called: 5
  6332 ;; This function calls:
  6333 ;;		_SetSegmentValueIntermitentMain
  6334 ;;		_SetSegmentValueMain
  6335 ;; This function is called by:
  6336 ;;		_sm_execute_main
  6337 ;;		_sm_execute_menuConfiguration
  6338 ;;		_setValueToEdit
  6339 ;; This function uses a non-reentrant model
  6340 ;;
  6341                           
  6342                           	psect	text4
  6343  0048A6                     __ptext4:
  6344                           	callstack 0
  6345  0048A6                     _load_New_Menu:
  6346                           	callstack 22
  6347                           
  6348                           ; BSR set to: 0
  6349                           ;incstack = 0
  6350                           ;load_New_Menu@Menu stored from wreg
  6351  0048A6  6E22               	movwf	load_New_Menu@Menu^0,c
  6352                           
  6353                           ;sm_MenuConfiguration_MC50.c: 435:     ts_system.timeoutMenu=((1000/50)*5) ;
  6354  0048A8  0E00               	movlw	0
  6355  0048AA  0101               	movlb	1	; () banked
  6356  0048AC  6FAE               	movwf	(_ts_system+15)& (0+255),b	;volatile
  6357  0048AE  0E64               	movlw	100
  6358  0048B0  6FAD               	movwf	(_ts_system+14)& (0+255),b	;volatile
  6359                           
  6360                           ; BSR set to: 1
  6361                           ;sm_MenuConfiguration_MC50.c: 439:     if(menu_st.actualMenu!=Menu && Menu>E_Menu)
  6362  0048B2  5022               	movf	load_New_Menu@Menu^0,w,c
  6363  0048B4  1966               	xorwf	(_menu_st+21)& (0+255),w,b
  6364  0048B6  B4D8               	btfsc	status,2,c
  6365  0048B8  D006               	goto	l21001
  6366                           
  6367                           ; BSR set to: 1
  6368  0048BA  0E01               	movlw	1
  6369  0048BC  6422               	cpfsgt	load_New_Menu@Menu^0,c
  6370  0048BE  D003               	goto	l21001
  6371                           
  6372                           ; BSR set to: 1
  6373                           ;sm_MenuConfiguration_MC50.c: 440:     {;sm_MenuConfiguration_MC50.c: 441:         menu_
      +                          st.parameterSelected=0;
  6374  0048C0  0E00               	movlw	0
  6375  0048C2  6F68               	movwf	(_menu_st+23)& (0+255),b
  6376                           
  6377                           ;sm_MenuConfiguration_MC50.c: 442:     }
  6378  0048C4  D005               	goto	l21005
  6379  0048C6                     l21001:
  6380                           
  6381                           ; BSR set to: 1
  6382  0048C6  0E02               	movlw	2
  6383  0048C8  6022               	cpfslt	load_New_Menu@Menu^0,c
  6384  0048CA  D002               	goto	l21005
  6385                           
  6386                           ; BSR set to: 1
  6387                           ;sm_MenuConfiguration_MC50.c: 444:     {;sm_MenuConfiguration_MC50.c: 445:        menu_s
      +                          t.parameterSelected = menu_st.lastMainParameterSelected;
  6388  0048CC  C169  F168         	movff	_menu_st+24,_menu_st+23
  6389  0048D0                     l21005:
  6390                           
  6391                           ; BSR set to: 1
  6392                           ;sm_MenuConfiguration_MC50.c: 449:     menu_st.lastMenu=((void*)0);
  6393  0048D0  0E00               	movlw	0
  6394  0048D2  6F65               	movwf	(_menu_st+20)& (0+255),b
  6395                           
  6396                           ;sm_MenuConfiguration_MC50.c: 450:     switch (Menu)
  6397  0048D4  D0F6               	goto	l21057
  6398  0048D6                     l21007:
  6399                           
  6400                           ; BSR set to: 1
  6401                           ;sm_MenuConfiguration_MC50.c: 453:         {;sm_MenuConfiguration_MC50.c: 455:          
      +                             menu_st.actualMenu=P_Menu;
  6402  0048D6  0E00               	movlw	0
  6403  0048D8  6F66               	movwf	(_menu_st+21)& (0+255),b
  6404                           
  6405                           ;sm_MenuConfiguration_MC50.c: 456:             menu_st.menuSize=10;
  6406  0048DA  0E0A               	movlw	10
  6407  0048DC  6F67               	movwf	(_menu_st+22)& (0+255),b
  6408                           
  6409                           ;sm_MenuConfiguration_MC50.c: 457:             menu_st.lastMainParameterSelected=0;
  6410  0048DE  0E00               	movlw	0
  6411  0048E0  6F69               	movwf	(_menu_st+24)& (0+255),b
  6412                           
  6413                           ;sm_MenuConfiguration_MC50.c: 458:             for (i=0;i<(10);i++)
  6414  0048E2  0E00               	movlw	0
  6415  0048E4  6E23               	movwf	load_New_Menu@i^0,c
  6416  0048E6                     l21013:
  6417                           
  6418                           ;sm_MenuConfiguration_MC50.c: 459:             {;sm_MenuConfiguration_MC50.c: 460:      
      +                                    menu_st.menuList[i].value_display1=dP;
  6419  0048E6  5023               	movf	load_New_Menu@i^0,w,c
  6420  0048E8  0D02               	mullw	2
  6421  0048EA  0E51               	movlw	low _menu_st
  6422  0048EC  24F3               	addwf	243,w,c
  6423  0048EE  6ED9               	movwf	fsr2l,c
  6424  0048F0  0E01               	movlw	high _menu_st
  6425  0048F2  20F4               	addwfc	prodh,w,c
  6426  0048F4  6EDA               	movwf	fsr2h,c
  6427  0048F6  0E10               	movlw	16
  6428  0048F8  6EDF               	movwf	indf2,c
  6429                           
  6430                           ;sm_MenuConfiguration_MC50.c: 461:                menu_st.menuList[i].value_display2=i;
  6431  0048FA  5023               	movf	load_New_Menu@i^0,w,c
  6432  0048FC  0D02               	mullw	2
  6433  0048FE  0E52               	movlw	low (_menu_st+1)
  6434  004900  24F3               	addwf	243,w,c
  6435  004902  6ED9               	movwf	fsr2l,c
  6436  004904  0E01               	movlw	high (_menu_st+1)
  6437  004906  20F4               	addwfc	prodh,w,c
  6438  004908  6EDA               	movwf	fsr2h,c
  6439  00490A  C023  FFDF         	movff	load_New_Menu@i,indf2
  6440                           
  6441                           ;sm_MenuConfiguration_MC50.c: 462:             }
  6442  00490E  2A23               	incf	load_New_Menu@i^0,f,c
  6443  004910  0E09               	movlw	9
  6444  004912  6423               	cpfsgt	load_New_Menu@i^0,c
  6445  004914  D7E8               	goto	l21013
  6446  004916  D107               	goto	l21059
  6447  004918                     l21019:
  6448                           
  6449                           ; BSR set to: 1
  6450                           ;sm_MenuConfiguration_MC50.c: 466:         {;sm_MenuConfiguration_MC50.c: 468:          
      +                             menu_st.actualMenu=E_Menu;
  6451  004918  0E01               	movlw	1
  6452  00491A  6F66               	movwf	(_menu_st+21)& (0+255),b
  6453                           
  6454                           ;sm_MenuConfiguration_MC50.c: 469:             menu_st.menuSize=10;
  6455  00491C  0E0A               	movlw	10
  6456  00491E  6F67               	movwf	(_menu_st+22)& (0+255),b
  6457                           
  6458                           ;sm_MenuConfiguration_MC50.c: 470:             menu_st.lastMainParameterSelected=0;
  6459  004920  0E00               	movlw	0
  6460  004922  6F69               	movwf	(_menu_st+24)& (0+255),b
  6461                           
  6462                           ;sm_MenuConfiguration_MC50.c: 471:             for (i=0;i<(10);i++)
  6463  004924  0E00               	movlw	0
  6464  004926  6E23               	movwf	load_New_Menu@i^0,c
  6465  004928                     l21025:
  6466                           
  6467                           ;sm_MenuConfiguration_MC50.c: 472:             {;sm_MenuConfiguration_MC50.c: 473:      
      +                                    menu_st.menuList[i].value_display1=dE;
  6468  004928  5023               	movf	load_New_Menu@i^0,w,c
  6469  00492A  0D02               	mullw	2
  6470  00492C  0E51               	movlw	low _menu_st
  6471  00492E  24F3               	addwf	243,w,c
  6472  004930  6ED9               	movwf	fsr2l,c
  6473  004932  0E01               	movlw	high _menu_st
  6474  004934  20F4               	addwfc	prodh,w,c
  6475  004936  6EDA               	movwf	fsr2h,c
  6476  004938  0E0E               	movlw	14
  6477  00493A  6EDF               	movwf	indf2,c
  6478                           
  6479                           ;sm_MenuConfiguration_MC50.c: 474:                menu_st.menuList[i].value_display2=i;
  6480  00493C  5023               	movf	load_New_Menu@i^0,w,c
  6481  00493E  0D02               	mullw	2
  6482  004940  0E52               	movlw	low (_menu_st+1)
  6483  004942  24F3               	addwf	243,w,c
  6484  004944  6ED9               	movwf	fsr2l,c
  6485  004946  0E01               	movlw	high (_menu_st+1)
  6486  004948  20F4               	addwfc	prodh,w,c
  6487  00494A  6EDA               	movwf	fsr2h,c
  6488  00494C  C023  FFDF         	movff	load_New_Menu@i,indf2
  6489                           
  6490                           ;sm_MenuConfiguration_MC50.c: 475:             }
  6491  004950  2A23               	incf	load_New_Menu@i^0,f,c
  6492  004952  0E09               	movlw	9
  6493  004954  6423               	cpfsgt	load_New_Menu@i^0,c
  6494  004956  D7E8               	goto	l21025
  6495  004958  D0E6               	goto	l21059
  6496  00495A                     l21031:
  6497                           
  6498                           ; BSR set to: 1
  6499                           ;sm_MenuConfiguration_MC50.c: 479:         {;sm_MenuConfiguration_MC50.c: 480:          
      +                             menu_st.lastMenu=P_Menu;
  6500  00495A  0E00               	movlw	0
  6501  00495C  6F65               	movwf	(_menu_st+20)& (0+255),b
  6502                           
  6503                           ;sm_MenuConfiguration_MC50.c: 481:             menu_st.actualMenu=P0_SMenu;
  6504  00495E  0E04               	movlw	4
  6505  004960  6F66               	movwf	(_menu_st+21)& (0+255),b
  6506                           
  6507                           ;sm_MenuConfiguration_MC50.c: 482:             menu_st.menuSize=4;
  6508  004962  0E04               	movlw	4
  6509  004964  6F67               	movwf	(_menu_st+22)& (0+255),b
  6510                           
  6511                           ;sm_MenuConfiguration_MC50.c: 483:             menu_st.menuList[0].value_display1=dA;
  6512  004966  0E0A               	movlw	10
  6513  004968  6F51               	movwf	_menu_st& (0+255),b
  6514                           
  6515                           ;sm_MenuConfiguration_MC50.c: 484:             menu_st.menuList[0].value_display2=dU;
  6516  00496A  0E13               	movlw	19
  6517  00496C  6F52               	movwf	(_menu_st+1)& (0+255),b
  6518                           
  6519                           ;sm_MenuConfiguration_MC50.c: 485:             menu_st.menuList[1].value_display1=dM;
  6520  00496E  0E17               	movlw	23
  6521  004970  6F53               	movwf	(_menu_st+2)& (0+255),b
  6522                           
  6523                           ;sm_MenuConfiguration_MC50.c: 486:             menu_st.menuList[1].value_display2=dA;
  6524  004972  0E0A               	movlw	10
  6525  004974  6F54               	movwf	(_menu_st+3)& (0+255),b
  6526                           
  6527                           ;sm_MenuConfiguration_MC50.c: 487:             menu_st.menuList[2].value_display1=d5;
  6528  004976  0E05               	movlw	5
  6529  004978  6F55               	movwf	(_menu_st+4)& (0+255),b
  6530                           
  6531                           ;sm_MenuConfiguration_MC50.c: 488:             menu_st.menuList[2].value_display2=dy;
  6532  00497A  0E21               	movlw	33
  6533  00497C  6F56               	movwf	(_menu_st+5)& (0+255),b
  6534                           
  6535                           ;sm_MenuConfiguration_MC50.c: 489:             menu_st.menuList[3].value_display1=dd;
  6536  00497E  0E0D               	movlw	13
  6537  004980  6F57               	movwf	(_menu_st+6)& (0+255),b
  6538                           
  6539                           ;sm_MenuConfiguration_MC50.c: 490:             menu_st.menuList[3].value_display2=d1;
  6540  004982  0E01               	movlw	1
  6541  004984  D051               	goto	L31
  6542  004986                     l21033:
  6543                           
  6544                           ; BSR set to: 1
  6545                           ;sm_MenuConfiguration_MC50.c: 494:         {;sm_MenuConfiguration_MC50.c: 495:          
      +                             menu_st.lastMenu=P_Menu;
  6546  004986  0E00               	movlw	0
  6547  004988  6F65               	movwf	(_menu_st+20)& (0+255),b
  6548                           
  6549                           ;sm_MenuConfiguration_MC50.c: 496:             menu_st.actualMenu=P1_SMenu;
  6550  00498A  0E05               	movlw	5
  6551  00498C  6F66               	movwf	(_menu_st+21)& (0+255),b
  6552                           
  6553                           ;sm_MenuConfiguration_MC50.c: 497:             menu_st.menuSize=2;
  6554  00498E  0E02               	movlw	2
  6555  004990  6F67               	movwf	(_menu_st+22)& (0+255),b
  6556                           
  6557                           ;sm_MenuConfiguration_MC50.c: 498:             menu_st.menuList[0].value_display1=dd;
  6558  004992  0E0D               	movlw	13
  6559  004994  6F51               	movwf	_menu_st& (0+255),b
  6560                           
  6561                           ;sm_MenuConfiguration_MC50.c: 499:             menu_st.menuList[0].value_display2=dA;
  6562  004996  0E0A               	movlw	10
  6563  004998  6F52               	movwf	(_menu_st+1)& (0+255),b
  6564                           
  6565                           ;sm_MenuConfiguration_MC50.c: 500:             menu_st.menuList[1].value_display1=dd;
  6566  00499A  0E0D               	movlw	13
  6567  00499C  6F53               	movwf	(_menu_st+2)& (0+255),b
  6568                           
  6569                           ;sm_MenuConfiguration_MC50.c: 501:             menu_st.menuList[1].value_display2=dF;
  6570  00499E  0E0F               	movlw	15
  6571  0049A0  D08E               	goto	L38
  6572  0049A2                     l21035:
  6573                           
  6574                           ; BSR set to: 1
  6575                           ;sm_MenuConfiguration_MC50.c: 508:         {;sm_MenuConfiguration_MC50.c: 509:          
      +                             menu_st.lastMenu=P_Menu;
  6576  0049A2  0E00               	movlw	0
  6577  0049A4  6F65               	movwf	(_menu_st+20)& (0+255),b
  6578                           
  6579                           ;sm_MenuConfiguration_MC50.c: 510:             menu_st.actualMenu=P2_SMenu;
  6580  0049A6  0E06               	movlw	6
  6581  0049A8  6F66               	movwf	(_menu_st+21)& (0+255),b
  6582                           
  6583                           ;sm_MenuConfiguration_MC50.c: 511:             menu_st.menuSize=3;
  6584  0049AA  0E03               	movlw	3
  6585  0049AC  6F67               	movwf	(_menu_st+22)& (0+255),b
  6586                           
  6587                           ;sm_MenuConfiguration_MC50.c: 512:             menu_st.menuList[0].value_display1=dF;
  6588  0049AE  0E0F               	movlw	15
  6589  0049B0  6F51               	movwf	_menu_st& (0+255),b
  6590                           
  6591                           ;sm_MenuConfiguration_MC50.c: 513:             menu_st.menuList[0].value_display2=d0;
  6592  0049B2  0E00               	movlw	0
  6593  0049B4  6F52               	movwf	(_menu_st+1)& (0+255),b
  6594                           
  6595                           ;sm_MenuConfiguration_MC50.c: 514:             menu_st.menuList[1].value_display1=dF;
  6596  0049B6  0E0F               	movlw	15
  6597  0049B8  6F53               	movwf	(_menu_st+2)& (0+255),b
  6598                           
  6599                           ;sm_MenuConfiguration_MC50.c: 515:             menu_st.menuList[1].value_display2=d5;
  6600  0049BA  0E05               	movlw	5
  6601  0049BC  6F54               	movwf	(_menu_st+3)& (0+255),b
  6602                           
  6603                           ;sm_MenuConfiguration_MC50.c: 516:             menu_st.menuList[2].value_display1=dF;
  6604  0049BE  0E0F               	movlw	15
  6605  0049C0  6F55               	movwf	(_menu_st+4)& (0+255),b
  6606                           
  6607                           ;sm_MenuConfiguration_MC50.c: 517:             menu_st.menuList[2].value_display2=dd;
  6608  0049C2  0E0D               	movlw	13
  6609  0049C4  D073               	goto	L33
  6610  0049C6                     l21037:
  6611                           
  6612                           ; BSR set to: 1
  6613                           ;sm_MenuConfiguration_MC50.c: 521:         {;sm_MenuConfiguration_MC50.c: 522:          
      +                             menu_st.lastMenu=P_Menu;
  6614  0049C6  0E00               	movlw	0
  6615  0049C8  6F65               	movwf	(_menu_st+20)& (0+255),b
  6616                           
  6617                           ;sm_MenuConfiguration_MC50.c: 523:             menu_st.actualMenu=P4_SMenu;
  6618  0049CA  0E07               	movlw	7
  6619  0049CC  6F66               	movwf	(_menu_st+21)& (0+255),b
  6620                           
  6621                           ;sm_MenuConfiguration_MC50.c: 524:             menu_st.menuSize=2;
  6622  0049CE  0E02               	movlw	2
  6623  0049D0  6F67               	movwf	(_menu_st+22)& (0+255),b
  6624                           
  6625                           ;sm_MenuConfiguration_MC50.c: 525:             menu_st.menuList[0].value_display1=dA;
  6626  0049D2  0E0A               	movlw	10
  6627  0049D4  6F51               	movwf	_menu_st& (0+255),b
  6628                           
  6629                           ;sm_MenuConfiguration_MC50.c: 526:             menu_st.menuList[0].value_display2=dF;
  6630  0049D6  0E0F               	movlw	15
  6631  0049D8  6F52               	movwf	(_menu_st+1)& (0+255),b
  6632                           
  6633                           ;sm_MenuConfiguration_MC50.c: 527:             menu_st.menuList[1].value_display1=dA;
  6634  0049DA  0E0A               	movlw	10
  6635  0049DC  6F53               	movwf	(_menu_st+2)& (0+255),b
  6636                           
  6637                           ;sm_MenuConfiguration_MC50.c: 528:             menu_st.menuList[1].value_display2=dP;
  6638  0049DE  0E10               	movlw	16
  6639  0049E0  D06E               	goto	L38
  6640  0049E2                     l21039:
  6641                           
  6642                           ; BSR set to: 1
  6643                           ;sm_MenuConfiguration_MC50.c: 532:         {;sm_MenuConfiguration_MC50.c: 533:          
      +                             menu_st.lastMenu=P_Menu;
  6644  0049E2  0E00               	movlw	0
  6645  0049E4  6F65               	movwf	(_menu_st+20)& (0+255),b
  6646                           
  6647                           ;sm_MenuConfiguration_MC50.c: 534:             menu_st.actualMenu=P5_SMenu;
  6648  0049E6  0E08               	movlw	8
  6649  0049E8  6F66               	movwf	(_menu_st+21)& (0+255),b
  6650                           
  6651                           ;sm_MenuConfiguration_MC50.c: 535:             menu_st.menuSize=2;
  6652  0049EA  0E02               	movlw	2
  6653  0049EC  6F67               	movwf	(_menu_st+22)& (0+255),b
  6654                           
  6655                           ;sm_MenuConfiguration_MC50.c: 536:             menu_st.menuList[0].value_display1=dL;
  6656  0049EE  0E12               	movlw	18
  6657  0049F0  6F51               	movwf	_menu_st& (0+255),b
  6658                           
  6659                           ;sm_MenuConfiguration_MC50.c: 537:             menu_st.menuList[0].value_display2=dE;
  6660  0049F2  0E0E               	movlw	14
  6661  0049F4  6F52               	movwf	(_menu_st+1)& (0+255),b
  6662                           
  6663                           ;sm_MenuConfiguration_MC50.c: 538:             menu_st.menuList[1].value_display1=dH;
  6664  0049F6  0E11               	movlw	17
  6665  0049F8  6F53               	movwf	(_menu_st+2)& (0+255),b
  6666                           
  6667                           ;sm_MenuConfiguration_MC50.c: 539:             menu_st.menuList[1].value_display2=dC;
  6668  0049FA  0E0C               	movlw	12
  6669  0049FC  D060               	goto	L38
  6670  0049FE                     l21041:
  6671                           
  6672                           ; BSR set to: 1
  6673                           ;sm_MenuConfiguration_MC50.c: 543:         {;sm_MenuConfiguration_MC50.c: 544:          
      +                             menu_st.lastMenu=P_Menu;
  6674  0049FE  0E00               	movlw	0
  6675  004A00  6F65               	movwf	(_menu_st+20)& (0+255),b
  6676                           
  6677                           ;sm_MenuConfiguration_MC50.c: 545:             menu_st.actualMenu=P6_SMenu;
  6678  004A02  0E09               	movlw	9
  6679  004A04  6F66               	movwf	(_menu_st+21)& (0+255),b
  6680                           
  6681                           ;sm_MenuConfiguration_MC50.c: 546:             menu_st.menuSize=4;
  6682  004A06  0E04               	movlw	4
  6683  004A08  6F67               	movwf	(_menu_st+22)& (0+255),b
  6684                           
  6685                           ;sm_MenuConfiguration_MC50.c: 547:             menu_st.menuList[0].value_display1=dL;
  6686  004A0A  0E12               	movlw	18
  6687  004A0C  6F51               	movwf	_menu_st& (0+255),b
  6688                           
  6689                           ;sm_MenuConfiguration_MC50.c: 548:             menu_st.menuList[0].value_display2=dA;
  6690  004A0E  0E0A               	movlw	10
  6691  004A10  6F52               	movwf	(_menu_st+1)& (0+255),b
  6692                           
  6693                           ;sm_MenuConfiguration_MC50.c: 549:             menu_st.menuList[1].value_display1=dH;
  6694  004A12  0E11               	movlw	17
  6695  004A14  6F53               	movwf	(_menu_st+2)& (0+255),b
  6696                           
  6697                           ;sm_MenuConfiguration_MC50.c: 550:             menu_st.menuList[1].value_display2=dA;
  6698  004A16  0E0A               	movlw	10
  6699  004A18  6F54               	movwf	(_menu_st+3)& (0+255),b
  6700                           
  6701                           ;sm_MenuConfiguration_MC50.c: 551:             menu_st.menuList[2].value_display1=dH;
  6702  004A1A  0E11               	movlw	17
  6703  004A1C  6F55               	movwf	(_menu_st+4)& (0+255),b
  6704                           
  6705                           ;sm_MenuConfiguration_MC50.c: 552:             menu_st.menuList[2].value_display2=dL;
  6706  004A1E  0E12               	movlw	18
  6707  004A20  6F56               	movwf	(_menu_st+5)& (0+255),b
  6708                           
  6709                           ;sm_MenuConfiguration_MC50.c: 553:             menu_st.menuList[3].value_display1=d5;
  6710  004A22  0E05               	movlw	5
  6711  004A24  6F57               	movwf	(_menu_st+6)& (0+255),b
  6712                           
  6713                           ;sm_MenuConfiguration_MC50.c: 554:             menu_st.menuList[3].value_display2=dt;
  6714  004A26  0E15               	movlw	21
  6715  004A28                     L31:
  6716  004A28  6F58               	movwf	(_menu_st+7)& (0+255),b
  6717                           
  6718                           ;sm_MenuConfiguration_MC50.c: 556:         };sm_MenuConfiguration_MC50.c: 557:         b
      +                          reak;
  6719  004A2A  D07D               	goto	l21059
  6720  004A2C                     l21043:
  6721                           
  6722                           ; BSR set to: 1
  6723                           ;sm_MenuConfiguration_MC50.c: 559:         {;sm_MenuConfiguration_MC50.c: 560:          
      +                             menu_st.lastMenu=E_Menu;
  6724  004A2C  0E01               	movlw	1
  6725  004A2E  6F65               	movwf	(_menu_st+20)& (0+255),b
  6726                           
  6727                           ;sm_MenuConfiguration_MC50.c: 561:             menu_st.actualMenu=E0_SMenu;
  6728  004A30  0E0A               	movlw	10
  6729  004A32  6F66               	movwf	(_menu_st+21)& (0+255),b
  6730                           
  6731                           ;sm_MenuConfiguration_MC50.c: 562:             menu_st.menuSize=2;
  6732  004A34  0E02               	movlw	2
  6733  004A36  6F67               	movwf	(_menu_st+22)& (0+255),b
  6734                           
  6735                           ;sm_MenuConfiguration_MC50.c: 563:             menu_st.menuList[0].value_display1=dH;
  6736  004A38  0E11               	movlw	17
  6737  004A3A  6F51               	movwf	_menu_st& (0+255),b
  6738                           
  6739                           ;sm_MenuConfiguration_MC50.c: 564:             menu_st.menuList[0].value_display2=dP;
  6740  004A3C  0E10               	movlw	16
  6741  004A3E  6F52               	movwf	(_menu_st+1)& (0+255),b
  6742                           
  6743                           ;sm_MenuConfiguration_MC50.c: 565:             menu_st.menuList[1].value_display1=dP;
  6744  004A40  0E10               	movlw	16
  6745  004A42  6F53               	movwf	(_menu_st+2)& (0+255),b
  6746                           
  6747                           ;sm_MenuConfiguration_MC50.c: 566:             menu_st.menuList[1].value_display2=dL;
  6748  004A44  0E12               	movlw	18
  6749  004A46  D03B               	goto	L38
  6750  004A48                     l21045:
  6751                           
  6752                           ; BSR set to: 1
  6753                           ;sm_MenuConfiguration_MC50.c: 570:         {;sm_MenuConfiguration_MC50.c: 571:          
      +                             menu_st.lastMenu=E_Menu;
  6754  004A48  0E01               	movlw	1
  6755  004A4A  6F65               	movwf	(_menu_st+20)& (0+255),b
  6756                           
  6757                           ;sm_MenuConfiguration_MC50.c: 572:             menu_st.actualMenu=E1_SMenu;
  6758  004A4C  0E0B               	movlw	11
  6759  004A4E  6F66               	movwf	(_menu_st+21)& (0+255),b
  6760                           
  6761                           ;sm_MenuConfiguration_MC50.c: 573:             menu_st.menuSize=2;
  6762  004A50  0E02               	movlw	2
  6763  004A52  6F67               	movwf	(_menu_st+22)& (0+255),b
  6764                           
  6765                           ;sm_MenuConfiguration_MC50.c: 574:             menu_st.menuList[0].value_display1=dr;
  6766  004A54  0E14               	movlw	20
  6767  004A56  6F51               	movwf	_menu_st& (0+255),b
  6768                           
  6769                           ;sm_MenuConfiguration_MC50.c: 575:             menu_st.menuList[0].value_display2=dq;
  6770  004A58  0E24               	movlw	36
  6771  004A5A  6F52               	movwf	(_menu_st+1)& (0+255),b
  6772                           
  6773                           ;sm_MenuConfiguration_MC50.c: 576:             menu_st.menuList[1].value_display1=dr;
  6774  004A5C  0E14               	movlw	20
  6775  004A5E  6F53               	movwf	(_menu_st+2)& (0+255),b
  6776                           
  6777                           ;sm_MenuConfiguration_MC50.c: 577:             menu_st.menuList[1].value_display2=dc;
  6778  004A60  0E23               	movlw	35
  6779  004A62  D02D               	goto	L38
  6780  004A64                     l21047:
  6781                           
  6782                           ; BSR set to: 1
  6783                           ;sm_MenuConfiguration_MC50.c: 581:         {;sm_MenuConfiguration_MC50.c: 583:          
      +                             menu_st.actualMenu=S_Menu;
  6784  004A64  0E0C               	movlw	12
  6785  004A66  6F66               	movwf	(_menu_st+21)& (0+255),b
  6786                           
  6787                           ;sm_MenuConfiguration_MC50.c: 584:             menu_st.parameterSelected=0;
  6788  004A68  0E00               	movlw	0
  6789  004A6A  6F68               	movwf	(_menu_st+23)& (0+255),b
  6790                           
  6791                           ;sm_MenuConfiguration_MC50.c: 585:             menu_st.menuSize=2;
  6792  004A6C  0E02               	movlw	2
  6793  004A6E  6F67               	movwf	(_menu_st+22)& (0+255),b
  6794                           
  6795                           ;sm_MenuConfiguration_MC50.c: 586:             menu_st.menuList[0].value_display1=d5;
  6796  004A70  0E05               	movlw	5
  6797  004A72  6F51               	movwf	_menu_st& (0+255),b
  6798                           
  6799                           ;sm_MenuConfiguration_MC50.c: 587:             menu_st.menuList[0].value_display2=dU;
  6800  004A74  0E13               	movlw	19
  6801  004A76  6F52               	movwf	(_menu_st+1)& (0+255),b
  6802                           
  6803                           ;sm_MenuConfiguration_MC50.c: 588:             menu_st.menuList[1].value_display1=d5;
  6804  004A78  0E05               	movlw	5
  6805  004A7A  D7B0               	goto	L39
  6806  004A7C                     l21049:
  6807                           
  6808                           ; BSR set to: 1
  6809                           ;sm_MenuConfiguration_MC50.c: 593:         {;sm_MenuConfiguration_MC50.c: 595:          
      +                             menu_st.actualMenu=Del_Menu;
  6810  004A7C  0E0D               	movlw	13
  6811  004A7E  6F66               	movwf	(_menu_st+21)& (0+255),b
  6812                           
  6813                           ;sm_MenuConfiguration_MC50.c: 596:             menu_st.menuSize=1;
  6814  004A80  0E01               	movlw	1
  6815  004A82  6F67               	movwf	(_menu_st+22)& (0+255),b
  6816                           
  6817                           ;sm_MenuConfiguration_MC50.c: 597:             menu_st.menuList[0].value_display1=dd;
  6818  004A84  0E0D               	movlw	13
  6819  004A86  6F51               	movwf	_menu_st& (0+255),b
  6820                           
  6821                           ;sm_MenuConfiguration_MC50.c: 598:             menu_st.menuList[0].value_display2=dL;
  6822  004A88  0E12               	movlw	18
  6823  004A8A  6F52               	movwf	(_menu_st+1)& (0+255),b
  6824                           
  6825                           ;sm_MenuConfiguration_MC50.c: 599:             ts_system.timeSinalizationDigit=(1000/50)
      +                          *3;
  6826  004A8C  0E00               	movlw	0
  6827  004A8E  6FAC               	movwf	(_ts_system+13)& (0+255),b	;volatile
  6828  004A90  0E3C               	movlw	60
  6829  004A92  6FAB               	movwf	(_ts_system+12)& (0+255),b	;volatile
  6830                           
  6831                           ;sm_MenuConfiguration_MC50.c: 600:         };sm_MenuConfiguration_MC50.c: 601:         b
      +                          reak;
  6832  004A94  D048               	goto	l21059
  6833  004A96                     l21051:
  6834                           
  6835                           ; BSR set to: 1
  6836                           ;sm_MenuConfiguration_MC50.c: 604:         {;sm_MenuConfiguration_MC50.c: 608:          
      +                             menu_st.menuList[0].value_display1=d5;
  6837  004A96  0E05               	movlw	5
  6838  004A98  6F51               	movwf	_menu_st& (0+255),b
  6839                           
  6840                           ;sm_MenuConfiguration_MC50.c: 609:             menu_st.menuList[0].value_display2=dC;
  6841  004A9A  0E0C               	movlw	12
  6842  004A9C  6F52               	movwf	(_menu_st+1)& (0+255),b
  6843                           
  6844                           ;sm_MenuConfiguration_MC50.c: 610:             menu_st.menuList[1].value_display1=d5;
  6845  004A9E  0E05               	movlw	5
  6846  004AA0  6F53               	movwf	(_menu_st+2)& (0+255),b
  6847                           
  6848                           ;sm_MenuConfiguration_MC50.c: 611:             menu_st.menuList[1].value_display2=dE;
  6849  004AA2  0E0E               	movlw	14
  6850  004AA4  6F54               	movwf	(_menu_st+3)& (0+255),b
  6851                           
  6852                           ;sm_MenuConfiguration_MC50.c: 612:             menu_st.menuList[2].value_display1=db;
  6853  004AA6  0E22               	movlw	34
  6854  004AA8  6F55               	movwf	(_menu_st+4)& (0+255),b
  6855                           
  6856                           ;sm_MenuConfiguration_MC50.c: 613:             menu_st.menuList[2].value_display2=dr;
  6857  004AAA  0E14               	movlw	20
  6858  004AAC                     L33:
  6859  004AAC  6F56               	movwf	(_menu_st+5)& (0+255),b
  6860                           
  6861                           ;sm_MenuConfiguration_MC50.c: 614:         };sm_MenuConfiguration_MC50.c: 615:         b
      +                          reak;
  6862  004AAE  D03B               	goto	l21059
  6863  004AB0                     l21053:
  6864                           
  6865                           ; BSR set to: 1
  6866                           ;sm_MenuConfiguration_MC50.c: 617:         {;sm_MenuConfiguration_MC50.c: 621:          
      +                             menu_st.menuList[0].value_display1=dL;
  6867  004AB0  0E12               	movlw	18
  6868  004AB2  6F51               	movwf	_menu_st& (0+255),b
  6869                           
  6870                           ;sm_MenuConfiguration_MC50.c: 622:             menu_st.menuList[0].value_display2=dE;
  6871  004AB4  0E0E               	movlw	14
  6872  004AB6  6F52               	movwf	(_menu_st+1)& (0+255),b
  6873                           
  6874                           ;sm_MenuConfiguration_MC50.c: 623:             menu_st.menuList[1].value_display1=dr;
  6875  004AB8  0E14               	movlw	20
  6876  004ABA  6F53               	movwf	(_menu_st+2)& (0+255),b
  6877                           
  6878                           ;sm_MenuConfiguration_MC50.c: 624:             menu_st.menuList[1].value_display2=dt;
  6879  004ABC  0E15               	movlw	21
  6880  004ABE                     L38:
  6881  004ABE  6F54               	movwf	(_menu_st+3)& (0+255),b
  6882                           
  6883                           ;sm_MenuConfiguration_MC50.c: 626:         };sm_MenuConfiguration_MC50.c: 627:         b
      +                          reak;
  6884  004AC0  D032               	goto	l21059
  6885  004AC2                     l21057:
  6886                           
  6887                           ; BSR set to: 1
  6888  004AC2  5022               	movf	load_New_Menu@Menu^0,w,c
  6889  004AC4  6E20               	movwf	??_load_New_Menu^0,c
  6890  004AC6  6A21               	clrf	(??_load_New_Menu+1)^0,c
  6891                           
  6892                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6893                           ; Switch size 1, requested type "simple"
  6894                           ; Number of cases is 1, Range of values is 0 to 0
  6895                           ; switch strategies available:
  6896                           ; Name         Instructions Cycles
  6897                           ; simple_byte            4     3 (average)
  6898                           ;	Chosen strategy is simple_byte
  6899  004AC8  5021               	movf	(??_load_New_Menu+1)^0,w,c
  6900  004ACA  0A00               	xorlw	0	; case 0
  6901  004ACC  A4D8               	btfss	status,2,c
  6902  004ACE  D02B               	goto	l21059
  6903                           
  6904                           ; BSR set to: 1
  6905                           ; Switch size 1, requested type "simple"
  6906                           ; Number of cases is 14, Range of values is 0 to 13
  6907                           ; switch strategies available:
  6908                           ; Name         Instructions Cycles
  6909                           ; simple_byte           43    22 (average)
  6910                           ;	Chosen strategy is simple_byte
  6911  004AD0  5020               	movf	??_load_New_Menu^0,w,c
  6912  004AD2  0A00               	xorlw	0	; case 0
  6913  004AD4  B4D8               	btfsc	status,2,c
  6914  004AD6  D6FF               	goto	l21007
  6915  004AD8  0A01               	xorlw	1	; case 1
  6916  004ADA  B4D8               	btfsc	status,2,c
  6917  004ADC  D71D               	goto	l21019
  6918  004ADE  0A03               	xorlw	3	; case 2
  6919  004AE0  B4D8               	btfsc	status,2,c
  6920  004AE2  D7E6               	goto	l21053
  6921  004AE4  0A01               	xorlw	1	; case 3
  6922  004AE6  B4D8               	btfsc	status,2,c
  6923  004AE8  D7D6               	goto	l21051
  6924  004AEA  0A07               	xorlw	7	; case 4
  6925  004AEC  B4D8               	btfsc	status,2,c
  6926  004AEE  D735               	goto	l21031
  6927  004AF0  0A01               	xorlw	1	; case 5
  6928  004AF2  B4D8               	btfsc	status,2,c
  6929  004AF4  D748               	goto	l21033
  6930  004AF6  0A03               	xorlw	3	; case 6
  6931  004AF8  B4D8               	btfsc	status,2,c
  6932  004AFA  D753               	goto	l21035
  6933  004AFC  0A01               	xorlw	1	; case 7
  6934  004AFE  B4D8               	btfsc	status,2,c
  6935  004B00  D762               	goto	l21037
  6936  004B02  0A0F               	xorlw	15	; case 8
  6937  004B04  B4D8               	btfsc	status,2,c
  6938  004B06  D76D               	goto	l21039
  6939  004B08  0A01               	xorlw	1	; case 9
  6940  004B0A  B4D8               	btfsc	status,2,c
  6941  004B0C  D778               	goto	l21041
  6942  004B0E  0A03               	xorlw	3	; case 10
  6943  004B10  B4D8               	btfsc	status,2,c
  6944  004B12  D78C               	goto	l21043
  6945  004B14  0A01               	xorlw	1	; case 11
  6946  004B16  B4D8               	btfsc	status,2,c
  6947  004B18  D797               	goto	l21045
  6948  004B1A  0A07               	xorlw	7	; case 12
  6949  004B1C  B4D8               	btfsc	status,2,c
  6950  004B1E  D7A2               	goto	l21047
  6951  004B20  0A01               	xorlw	1	; case 13
  6952  004B22  B4D8               	btfsc	status,2,c
  6953  004B24  D7AB               	goto	l21049
  6954  004B26                     l21059:
  6955                           
  6956                           ;sm_MenuConfiguration_MC50.c: 632:     if(menu_st.parameterSelected>=menu_st.menuSize)
  6957  004B26  0101               	movlb	1	; () banked
  6958  004B28  5167               	movf	(_menu_st+22)& (0+255),w,b
  6959  004B2A  5D68               	subwf	(_menu_st+23)& (0+255),w,b
  6960  004B2C  A0D8               	btfss	status,0,c
  6961  004B2E  D002               	goto	l21063
  6962                           
  6963                           ; BSR set to: 1
  6964                           ;sm_MenuConfiguration_MC50.c: 633:     {;sm_MenuConfiguration_MC50.c: 634:         menu_
      +                          st.parameterSelected=0;
  6965  004B30  0E00               	movlw	0
  6966  004B32  6F68               	movwf	(_menu_st+23)& (0+255),b
  6967  004B34                     l21063:
  6968                           
  6969                           ; BSR set to: 1
  6970                           ;sm_MenuConfiguration_MC50.c: 637:     if(Menu==Del_Menu)
  6971  004B34  0E0D               	movlw	13
  6972  004B36  1822               	xorwf	load_New_Menu@Menu^0,w,c
  6973  004B38  A4D8               	btfss	status,2,c
  6974  004B3A  D01A               	goto	l21067
  6975                           
  6976                           ; BSR set to: 1
  6977                           ;sm_MenuConfiguration_MC50.c: 638:     {;sm_MenuConfiguration_MC50.c: 639:         SetSe
      +                          gmentValueIntermitentMain(menu_st.menuList[ menu_st.parameterSelected].value_display1, m
      +                          enu_st.menuList[ menu_st.parameterSelected].value_display2,( 500/50));
  6978  004B3C  5168               	movf	(_menu_st+23)& (0+255),w,b
  6979  004B3E  0D02               	mullw	2
  6980  004B40  0E52               	movlw	low (_menu_st+1)
  6981  004B42  24F3               	addwf	243,w,c
  6982  004B44  6ED9               	movwf	fsr2l,c
  6983  004B46  0E01               	movlw	high (_menu_st+1)
  6984  004B48  20F4               	addwfc	prodh,w,c
  6985  004B4A  6EDA               	movwf	fsr2h,c
  6986  004B4C  50DF               	movf	indf2,w,c
  6987  004B4E  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  6988  004B50  0E00               	movlw	0
  6989  004B52  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  6990  004B54  0E0A               	movlw	10
  6991  004B56  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  6992  004B58  5168               	movf	(_menu_st+23)& (0+255),w,b
  6993  004B5A  0D02               	mullw	2
  6994  004B5C  0E51               	movlw	low _menu_st
  6995  004B5E  24F3               	addwf	243,w,c
  6996  004B60  6ED9               	movwf	fsr2l,c
  6997  004B62  0E01               	movlw	high _menu_st
  6998  004B64  20F4               	addwfc	prodh,w,c
  6999  004B66  6EDA               	movwf	fsr2h,c
  7000  004B68  50DF               	movf	indf2,w,c
  7001  004B6A  EC66  F04E         	call	_SetSegmentValueIntermitentMain
  7002                           
  7003                           ;sm_MenuConfiguration_MC50.c: 640:     }
  7004  004B6E  0012               	return	
  7005  004B70                     l21067:
  7006                           
  7007                           ; BSR set to: 1
  7008                           ;sm_MenuConfiguration_MC50.c: 642:     {;sm_MenuConfiguration_MC50.c: 643:         SetSe
      +                          gmentValueMain(menu_st.menuList[ menu_st.parameterSelected].value_display1, menu_st.menu
      +                          List[ menu_st.parameterSelected].value_display2);
  7009  004B70  5168               	movf	(_menu_st+23)& (0+255),w,b
  7010  004B72  0D02               	mullw	2
  7011  004B74  0E52               	movlw	low (_menu_st+1)
  7012  004B76  24F3               	addwf	243,w,c
  7013  004B78  6ED9               	movwf	fsr2l,c
  7014  004B7A  0E01               	movlw	high (_menu_st+1)
  7015  004B7C  20F4               	addwfc	prodh,w,c
  7016  004B7E  6EDA               	movwf	fsr2h,c
  7017  004B80  50DF               	movf	indf2,w,c
  7018  004B82  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  7019  004B84  5168               	movf	(_menu_st+23)& (0+255),w,b
  7020  004B86  0D02               	mullw	2
  7021  004B88  0E51               	movlw	low _menu_st
  7022  004B8A  24F3               	addwf	243,w,c
  7023  004B8C  6ED9               	movwf	fsr2l,c
  7024  004B8E  0E01               	movlw	high _menu_st
  7025  004B90  20F4               	addwfc	prodh,w,c
  7026  004B92  6EDA               	movwf	fsr2h,c
  7027  004B94  50DF               	movf	indf2,w,c
  7028  004B96  ECCB  F04D         	call	_SetSegmentValueMain
  7029  004B9A  0012               	return		;funcret
  7030  004B9C                     __end_of_load_New_Menu:
  7031                           	callstack 0
  7032                           
  7033 ;; *************** function _InitReceiver *****************
  7034 ;; Defined at:
  7035 ;;		line 207 in file "inputs_MC50.c"
  7036 ;; Parameters:    Size  Location     Type
  7037 ;;		None
  7038 ;; Auto vars:     Size  Location     Type
  7039 ;;		None
  7040 ;; Return value:  Size  Location     Type
  7041 ;;                  1    wreg      void 
  7042 ;; Registers used:
  7043 ;;		wreg, status,2
  7044 ;; Tracked objects:
  7045 ;;		On entry : 30/F
  7046 ;;		On exit  : 3F/0
  7047 ;;		Unchanged: 0/0
  7048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7050 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7052 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7053 ;;Total ram usage:        0 bytes
  7054 ;; Hardware stack levels used: 1
  7055 ;; Hardware stack levels required when called: 4
  7056 ;; This function calls:
  7057 ;;		Nothing
  7058 ;; This function is called by:
  7059 ;;		_main
  7060 ;;		_setValueToEdit
  7061 ;; This function uses a non-reentrant model
  7062 ;;
  7063                           
  7064                           	psect	text5
  7065  009B7C                     __ptext5:
  7066                           	callstack 0
  7067  009B7C                     _InitReceiver:
  7068                           	callstack 23
  7069                           
  7070                           ;inputs_MC50.c: 208:     TMR0IF = 0;
  7071                           
  7072                           ;incstack = 0
  7073  009B7C  010E               	movlb	14	; () banked
  7074  009B7E  9BCA               	bcf	202,5,b	;volatile
  7075                           
  7076                           ;inputs_MC50.c: 209:     TMR0IE = 1;
  7077  009B80  8BC2               	bsf	194,5,b	;volatile
  7078                           
  7079                           ;inputs_MC50.c: 210:     GIE = 1;
  7080  009B82  8EF2               	bsf	4082,7,c	;volatile
  7081                           
  7082                           ; BSR set to: 14
  7083                           ;inputs_MC50.c: 211:     RFstate = 0;
  7084  009B84  0E00               	movlw	0
  7085  009B86  0101               	movlb	1	; () banked
  7086  009B88  6F9D               	movwf	_RFstate& (0+255),b
  7087                           
  7088                           ;inputs_MC50.c: 212:     RFFull_12BIT=0;
  7089  009B8A  0E00               	movlw	0
  7090  009B8C  0100               	movlb	0	; () banked
  7091  009B8E  6F8A               	movwf	_RFFull_12BIT& (0+255),b	;volatile
  7092                           
  7093                           ;inputs_MC50.c: 213:     RFFull = 0;
  7094  009B90  0E00               	movlw	0
  7095  009B92  6F8B               	movwf	_RFFull& (0+255),b	;volatile
  7096                           
  7097                           ; BSR set to: 0
  7098  009B94  0012               	return		;funcret
  7099  009B96                     __end_of_InitReceiver:
  7100                           	callstack 0
  7101                           
  7102 ;; *************** function _controlSelectRemote *****************
  7103 ;; Defined at:
  7104 ;;		line 1103 in file "sm_MenuConfiguration_MC50.c"
  7105 ;; Parameters:    Size  Location     Type
  7106 ;;		None
  7107 ;; Auto vars:     Size  Location     Type
  7108 ;;  typeRemote      1   11[BANK0 ] enum E10392
  7109 ;;  pos             1   10[BANK0 ] unsigned char 
  7110 ;;  tempSerial      4   12[BANK0 ] unsigned long 
  7111 ;;  temp            1   16[BANK0 ] unsigned char 
  7112 ;;  validSerial     1    9[BANK0 ] unsigned char 
  7113 ;; Return value:  Size  Location     Type
  7114 ;;                  1    wreg      void 
  7115 ;; Registers used:
  7116 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7117 ;; Tracked objects:
  7118 ;;		On entry : 3F/1
  7119 ;;		On exit  : 0/0
  7120 ;;		Unchanged: 0/0
  7121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7123 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7124 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7125 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7126 ;;Total ram usage:        9 bytes
  7127 ;; Hardware stack levels used: 1
  7128 ;; Hardware stack levels required when called: 14
  7129 ;; This function calls:
  7130 ;;		_ClearFlag_rfCMD
  7131 ;;		_RemoveSerial
  7132 ;;		_SaveNVM_VarSystem
  7133 ;;		_SetSegmentValue
  7134 ;;		_SetSegmentValueIntermitentMain
  7135 ;;		_SetSegmentValueMain
  7136 ;;		___awdiv
  7137 ;;		___lbmod
  7138 ;;		_cmdMemoryIsEmpty
  7139 ;;		_getSerialCmd
  7140 ;;		_getTypeRemote
  7141 ;;		_saveNewSerial
  7142 ;;		_sm_send_event
  7143 ;;		_validateRemoteSerialNumber
  7144 ;; This function is called by:
  7145 ;;		_sm_execute_menuConfiguration
  7146 ;; This function uses a non-reentrant model
  7147 ;;
  7148                           
  7149                           	psect	text6
  7150  003E56                     __ptext6:
  7151                           	callstack 0
  7152  003E56                     _controlSelectRemote:
  7153                           	callstack 14
  7154                           
  7155                           ; BSR set to: 1
  7156                           ;sm_MenuConfiguration_MC50.c: 1104:     unsigned long tempSerial;;sm_MenuConfiguration_M
      +                          C50.c: 1105:     char temp=getSerialCmd(&tempSerial);
  7157                           
  7158                           ; BSR set to: 0
  7159                           ;incstack = 0
  7160  003E56  0EE4               	movlw	low controlSelectRemote@tempSerial
  7161  003E58  6E1B               	movwf	getSerialCmd@serial^0,c
  7162  003E5A  EC01  F049         	call	_getSerialCmd	;wreg free
  7163  003E5E  0100               	movlb	0	; () banked
  7164  003E60  6FE8               	movwf	controlSelectRemote@temp& (0+255),b
  7165                           
  7166                           ; BSR set to: 0
  7167                           ;sm_MenuConfiguration_MC50.c: 1106:     char validSerial;;sm_MenuConfiguration_MC50.c: 1
      +                          107:     if(ts_system.timeoutMenu<=0 || button_struct.current==0x00)
  7168  003E62  0101               	movlb	1	; () banked
  7169  003E64  BFAE               	btfsc	(_ts_system+15)& (0+255),7,b	;volatile
  7170  003E66  D008               	goto	u25520
  7171  003E68  51AE               	movf	(_ts_system+15)& (0+255),w,b	;volatile
  7172  003E6A  E103               	bnz	u25510
  7173  003E6C  05AD               	decf	(_ts_system+14)& (0+255),w,b	;volatile
  7174  003E6E  A0D8               	btfss	status,0,c
  7175  003E70  D003               	goto	u25520
  7176  003E72                     u25510:
  7177                           
  7178                           ; BSR set to: 1
  7179  003E72  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  7180  003E74  A4D8               	btfss	status,2,c
  7181  003E76  D028               	goto	l22275
  7182  003E78                     u25520:
  7183                           
  7184                           ; BSR set to: 1
  7185                           ;sm_MenuConfiguration_MC50.c: 1108:     {;sm_MenuConfiguration_MC50.c: 1109:         sm_
      +                          send_event(&main_stateMachine, ev_goto_StandBy);
  7186  003E78  0EF2               	movlw	low _main_stateMachine
  7187  003E7A  6E12               	movwf	sm_send_event@psm^0,c
  7188  003E7C  0E01               	movlw	high _main_stateMachine
  7189  003E7E  6E13               	movwf	(sm_send_event@psm+1)^0,c
  7190  003E80  0E00               	movlw	0
  7191  003E82  6E15               	movwf	(sm_send_event@event+1)^0,c
  7192  003E84  0E07               	movlw	7
  7193  003E86  6E14               	movwf	sm_send_event@event^0,c
  7194  003E88  ECCD  F046         	call	_sm_send_event	;wreg free
  7195                           
  7196                           ;sm_MenuConfiguration_MC50.c: 1110:         sm_send_event(&menuConfiguration_stateMachin
      +                          e, ev_CancelEdition);
  7197  003E8C  0EBB               	movlw	low _menuConfiguration_stateMachine
  7198  003E8E  6E12               	movwf	sm_send_event@psm^0,c
  7199  003E90  0E02               	movlw	high _menuConfiguration_stateMachine
  7200  003E92  6E13               	movwf	(sm_send_event@psm+1)^0,c
  7201  003E94  0E00               	movlw	0
  7202  003E96  6E15               	movwf	(sm_send_event@event+1)^0,c
  7203  003E98  0E03               	movlw	3
  7204  003E9A  6E14               	movwf	sm_send_event@event^0,c
  7205  003E9C  ECCD  F046         	call	_sm_send_event	;wreg free
  7206                           
  7207                           ;sm_MenuConfiguration_MC50.c: 1111:         var_sys.DistanceProgrammingActive=NO;
  7208  003EA0  0E00               	movlw	0
  7209  003EA2  0101               	movlb	1	; () banked
  7210  003EA4  6F40               	movwf	(_var_sys+64)& (0+255),b	;volatile
  7211                           
  7212                           ; BSR set to: 1
  7213                           ;sm_MenuConfiguration_MC50.c: 1112:         var_sys.ProgrammingDistanceIs=NoCMD;
  7214  003EA6  0E00               	movlw	0
  7215  003EA8  6F3B               	movwf	(_var_sys+59)& (0+255),b	;volatile
  7216                           
  7217                           ; BSR set to: 1
  7218                           ;sm_MenuConfiguration_MC50.c: 1113:         SetSegmentValueMain(dMinus,dMinus);
  7219  003EAA  0E18               	movlw	24
  7220  003EAC  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  7221  003EAE  0E18               	movlw	24
  7222  003EB0  ECCB  F04D         	call	_SetSegmentValueMain
  7223                           
  7224                           ; BSR set to: 0
  7225                           ;sm_MenuConfiguration_MC50.c: 1114:         ClearFlag_rfCMD();
  7226  003EB4  EC1E  F04F         	call	_ClearFlag_rfCMD	;wreg free
  7227                           
  7228                           ;sm_MenuConfiguration_MC50.c: 1115:         button_struct.processed=1;
  7229  003EB8  0E01               	movlw	1
  7230  003EBA  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  7231                           
  7232                           ;sm_MenuConfiguration_MC50.c: 1116:         ts_system.timeoutMenu = 0;
  7233  003EBC  0E00               	movlw	0
  7234  003EBE  0101               	movlb	1	; () banked
  7235  003EC0  6FAE               	movwf	(_ts_system+15)& (0+255),b	;volatile
  7236  003EC2  0E00               	movlw	0
  7237  003EC4  6FAD               	movwf	(_ts_system+14)& (0+255),b	;volatile
  7238                           
  7239                           ;sm_MenuConfiguration_MC50.c: 1118:     }
  7240  003EC6  0012               	return	
  7241  003EC8                     l22275:
  7242                           
  7243                           ; BSR set to: 1
  7244  003EC8  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  7245  003ECA  A4D8               	btfss	status,2,c
  7246  003ECC  D05B               	goto	l22297
  7247                           
  7248                           ; BSR set to: 1
  7249  003ECE  504A               	movf	(_edit_Param+4)^0,w,c	;volatile
  7250  003ED0  B4D8               	btfsc	status,2,c
  7251  003ED2  D058               	goto	l22297
  7252                           
  7253                           ; BSR set to: 1
  7254                           ;sm_MenuConfiguration_MC50.c: 1120:     {;sm_MenuConfiguration_MC50.c: 1121:         ts_
      +                          system.timeoutMenu=((1000/50)*5) ;
  7255  003ED4  0E00               	movlw	0
  7256  003ED6  6FAE               	movwf	(_ts_system+15)& (0+255),b	;volatile
  7257  003ED8  0E64               	movlw	100
  7258  003EDA  6FAD               	movwf	(_ts_system+14)& (0+255),b	;volatile
  7259                           
  7260                           ; BSR set to: 1
  7261                           ;sm_MenuConfiguration_MC50.c: 1122:         if(edit_Param.tempValue<=edit_Param.Min)
  7262  003EDC  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7263  003EDE  5C4B               	subwf	(_edit_Param+5)^0,w,c	;volatile
  7264  003EE0  A0D8               	btfss	status,0,c
  7265  003EE2  D003               	goto	l22285
  7266                           
  7267                           ; BSR set to: 1
  7268                           ;sm_MenuConfiguration_MC50.c: 1123:         {;sm_MenuConfiguration_MC50.c: 1124:        
      +                               edit_Param.tempValue=edit_Param.Max;
  7269  003EE4  C04A  F049         	movff	_edit_Param+4,_edit_Param+3	;volatile
  7270                           
  7271                           ;sm_MenuConfiguration_MC50.c: 1125:         }
  7272  003EE8  D001               	goto	l22287
  7273  003EEA                     l22285:
  7274                           
  7275                           ; BSR set to: 1
  7276                           ;sm_MenuConfiguration_MC50.c: 1127:         {;sm_MenuConfiguration_MC50.c: 1128:        
      +                               edit_Param.tempValue--;
  7277  003EEA  0649               	decf	(_edit_Param+3)^0,f,c	;volatile
  7278  003EEC                     l22287:
  7279                           
  7280                           ; BSR set to: 1
  7281                           ;sm_MenuConfiguration_MC50.c: 1130:         if(cmdMemoryIsEmpty(menu_st.parameterSelecte
      +                          d,edit_Param.tempValue)==1 || edit_Param.tempValue==edit_Param.Max)
  7282  003EEC  C049  F02E         	movff	_edit_Param+3,cmdMemoryIsEmpty@position	;volatile
  7283  003EF0  5168               	movf	(_menu_st+23)& (0+255),w,b
  7284  003EF2  EC24  F040         	call	_cmdMemoryIsEmpty
  7285  003EF6  06E8               	decf	wreg,f,c
  7286  003EF8  B4D8               	btfsc	status,2,c
  7287  003EFA  D004               	goto	u25570
  7288  003EFC  504A               	movf	(_edit_Param+4)^0,w,c	;volatile
  7289  003EFE  1849               	xorwf	(_edit_Param+3)^0,w,c	;volatile
  7290  003F00  A4D8               	btfss	status,2,c
  7291  003F02  D021               	goto	l22293
  7292  003F04                     u25570:
  7293                           
  7294                           ;sm_MenuConfiguration_MC50.c: 1131:         {;sm_MenuConfiguration_MC50.c: 1132:        
      +                               SetSegmentValueIntermitentMain((edit_Param.tempValue-edit_Param.tempValue%10)/10, e
      +                          dit_Param.tempValue%10,(1000/50));
  7295  003F04  0E0A               	movlw	10
  7296  003F06  6E10               	movwf	___lbmod@divisor^0,c
  7297  003F08  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7298  003F0A  EC93  F04C         	call	___lbmod
  7299  003F0E  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  7300  003F10  0E00               	movlw	0
  7301  003F12  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  7302  003F14  0E14               	movlw	20
  7303  003F16  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  7304  003F18  0E0A               	movlw	10
  7305  003F1A  6E10               	movwf	___lbmod@divisor^0,c
  7306  003F1C  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7307  003F1E  EC93  F04C         	call	___lbmod
  7308  003F22  0100               	movlb	0	; () banked
  7309  003F24  6FE0               	movwf	??_controlSelectRemote& (0+255),b
  7310  003F26  51E0               	movf	??_controlSelectRemote& (0+255),w,b
  7311  003F28  5C49               	subwf	(_edit_Param+3)^0,w,c	;volatile
  7312  003F2A  6E14               	movwf	___awdiv@dividend^0,c
  7313  003F2C  6A15               	clrf	(___awdiv@dividend+1)^0,c
  7314  003F2E  A0D8               	btfss	status,0,c
  7315  003F30  0615               	decf	(___awdiv@dividend+1)^0,f,c
  7316  003F32  0E00               	movlw	0
  7317  003F34  6E17               	movwf	(___awdiv@divisor+1)^0,c
  7318  003F36  0E0A               	movlw	10
  7319  003F38  6E16               	movwf	___awdiv@divisor^0,c
  7320  003F3A  EC0E  F042         	call	___awdiv	;wreg free
  7321  003F3E  5014               	movf	?___awdiv^0,w,c
  7322  003F40  EC66  F04E         	call	_SetSegmentValueIntermitentMain
  7323                           
  7324                           ;sm_MenuConfiguration_MC50.c: 1133:         }
  7325  003F44  D01C               	goto	l22295
  7326  003F46                     l22293:
  7327                           
  7328                           ;sm_MenuConfiguration_MC50.c: 1135:         {;sm_MenuConfiguration_MC50.c: 1136:        
      +                               SetSegmentValueMain((edit_Param.tempValue-edit_Param.tempValue%10)/10, edit_Param.t
      +                          empValue%10);
  7329  003F46  0E0A               	movlw	10
  7330  003F48  6E10               	movwf	___lbmod@divisor^0,c
  7331  003F4A  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7332  003F4C  EC93  F04C         	call	___lbmod
  7333  003F50  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  7334  003F52  0E0A               	movlw	10
  7335  003F54  6E10               	movwf	___lbmod@divisor^0,c
  7336  003F56  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7337  003F58  EC93  F04C         	call	___lbmod
  7338  003F5C  0100               	movlb	0	; () banked
  7339  003F5E  6FE0               	movwf	??_controlSelectRemote& (0+255),b
  7340  003F60  51E0               	movf	??_controlSelectRemote& (0+255),w,b
  7341  003F62  5C49               	subwf	(_edit_Param+3)^0,w,c	;volatile
  7342  003F64  6E14               	movwf	___awdiv@dividend^0,c
  7343  003F66  6A15               	clrf	(___awdiv@dividend+1)^0,c
  7344  003F68  A0D8               	btfss	status,0,c
  7345  003F6A  0615               	decf	(___awdiv@dividend+1)^0,f,c
  7346  003F6C  0E00               	movlw	0
  7347  003F6E  6E17               	movwf	(___awdiv@divisor+1)^0,c
  7348  003F70  0E0A               	movlw	10
  7349  003F72  6E16               	movwf	___awdiv@divisor^0,c
  7350  003F74  EC0E  F042         	call	___awdiv	;wreg free
  7351  003F78  5014               	movf	?___awdiv^0,w,c
  7352  003F7A  ECCB  F04D         	call	_SetSegmentValueMain
  7353  003F7E                     l22295:
  7354                           
  7355                           ;sm_MenuConfiguration_MC50.c: 1138:         button_struct.processed=1;
  7356  003F7E  0E01               	movlw	1
  7357  003F80  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  7358                           
  7359                           ;sm_MenuConfiguration_MC50.c: 1139:     }
  7360  003F82  0012               	return	
  7361  003F84                     l22297:
  7362                           
  7363                           ; BSR set to: 1
  7364  003F84  0E17               	movlw	23
  7365  003F86  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  7366  003F88  A4D8               	btfss	status,2,c
  7367  003F8A  D057               	goto	l22319
  7368                           
  7369                           ; BSR set to: 1
  7370  003F8C  504A               	movf	(_edit_Param+4)^0,w,c	;volatile
  7371  003F8E  B4D8               	btfsc	status,2,c
  7372  003F90  D054               	goto	l22319
  7373                           
  7374                           ; BSR set to: 1
  7375                           ;sm_MenuConfiguration_MC50.c: 1141:     {;sm_MenuConfiguration_MC50.c: 1142:         ts_
      +                          system.timeoutMenu=((1000/50)*5) ;
  7376  003F92  0E00               	movlw	0
  7377  003F94  6FAE               	movwf	(_ts_system+15)& (0+255),b	;volatile
  7378  003F96  0E64               	movlw	100
  7379  003F98  6FAD               	movwf	(_ts_system+14)& (0+255),b	;volatile
  7380                           
  7381                           ; BSR set to: 1
  7382                           ;sm_MenuConfiguration_MC50.c: 1143:         edit_Param.tempValue++;
  7383  003F9A  2A49               	incf	(_edit_Param+3)^0,f,c	;volatile
  7384                           
  7385                           ; BSR set to: 1
  7386                           ;sm_MenuConfiguration_MC50.c: 1144:         if(edit_Param.tempValue>edit_Param.Max)
  7387  003F9C  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7388  003F9E  5C4A               	subwf	(_edit_Param+4)^0,w,c	;volatile
  7389  003FA0  A0D8               	btfss	status,0,c
  7390                           
  7391                           ; BSR set to: 1
  7392                           ;sm_MenuConfiguration_MC50.c: 1145:         {;sm_MenuConfiguration_MC50.c: 1146:        
      +                                edit_Param.tempValue=edit_Param.Min;
  7393  003FA2  C04B  F049         	movff	_edit_Param+5,_edit_Param+3	;volatile
  7394                           
  7395                           ; BSR set to: 1
  7396                           ;sm_MenuConfiguration_MC50.c: 1148:         if(cmdMemoryIsEmpty(menu_st.parameterSelecte
      +                          d,edit_Param.tempValue)==1|| edit_Param.tempValue==edit_Param.Max)
  7397  003FA6  C049  F02E         	movff	_edit_Param+3,cmdMemoryIsEmpty@position	;volatile
  7398  003FAA  5168               	movf	(_menu_st+23)& (0+255),w,b
  7399  003FAC  EC24  F040         	call	_cmdMemoryIsEmpty
  7400  003FB0  06E8               	decf	wreg,f,c
  7401  003FB2  B4D8               	btfsc	status,2,c
  7402  003FB4  D004               	goto	u25620
  7403  003FB6  504A               	movf	(_edit_Param+4)^0,w,c	;volatile
  7404  003FB8  1849               	xorwf	(_edit_Param+3)^0,w,c	;volatile
  7405  003FBA  A4D8               	btfss	status,2,c
  7406  003FBC  D021               	goto	l22315
  7407  003FBE                     u25620:
  7408                           
  7409                           ;sm_MenuConfiguration_MC50.c: 1149:         {;sm_MenuConfiguration_MC50.c: 1150:        
      +                               SetSegmentValueIntermitentMain((edit_Param.tempValue-edit_Param.tempValue%10)/10, e
      +                          dit_Param.tempValue%10,(1000/50));
  7410  003FBE  0E0A               	movlw	10
  7411  003FC0  6E10               	movwf	___lbmod@divisor^0,c
  7412  003FC2  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7413  003FC4  EC93  F04C         	call	___lbmod
  7414  003FC8  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  7415  003FCA  0E00               	movlw	0
  7416  003FCC  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  7417  003FCE  0E14               	movlw	20
  7418  003FD0  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  7419  003FD2  0E0A               	movlw	10
  7420  003FD4  6E10               	movwf	___lbmod@divisor^0,c
  7421  003FD6  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7422  003FD8  EC93  F04C         	call	___lbmod
  7423  003FDC  0100               	movlb	0	; () banked
  7424  003FDE  6FE0               	movwf	??_controlSelectRemote& (0+255),b
  7425  003FE0  51E0               	movf	??_controlSelectRemote& (0+255),w,b
  7426  003FE2  5C49               	subwf	(_edit_Param+3)^0,w,c	;volatile
  7427  003FE4  6E14               	movwf	___awdiv@dividend^0,c
  7428  003FE6  6A15               	clrf	(___awdiv@dividend+1)^0,c
  7429  003FE8  A0D8               	btfss	status,0,c
  7430  003FEA  0615               	decf	(___awdiv@dividend+1)^0,f,c
  7431  003FEC  0E00               	movlw	0
  7432  003FEE  6E17               	movwf	(___awdiv@divisor+1)^0,c
  7433  003FF0  0E0A               	movlw	10
  7434  003FF2  6E16               	movwf	___awdiv@divisor^0,c
  7435  003FF4  EC0E  F042         	call	___awdiv	;wreg free
  7436  003FF8  5014               	movf	?___awdiv^0,w,c
  7437  003FFA  EC66  F04E         	call	_SetSegmentValueIntermitentMain
  7438                           
  7439                           ;sm_MenuConfiguration_MC50.c: 1151:         }
  7440  003FFE  D7BF               	goto	l22295
  7441  004000                     l22315:
  7442                           
  7443                           ;sm_MenuConfiguration_MC50.c: 1153:         {;sm_MenuConfiguration_MC50.c: 1154:        
      +                               SetSegmentValue((edit_Param.tempValue-edit_Param.tempValue%10)/10, edit_Param.tempV
      +                          alue%10);
  7444  004000  0E0A               	movlw	10
  7445  004002  6E10               	movwf	___lbmod@divisor^0,c
  7446  004004  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7447  004006  EC93  F04C         	call	___lbmod
  7448  00400A  6E1C               	movwf	SetSegmentValue@d2^0,c
  7449  00400C  0E0A               	movlw	10
  7450  00400E  6E10               	movwf	___lbmod@divisor^0,c
  7451  004010  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7452  004012  EC93  F04C         	call	___lbmod
  7453  004016  0100               	movlb	0	; () banked
  7454  004018  6FE0               	movwf	??_controlSelectRemote& (0+255),b
  7455  00401A  51E0               	movf	??_controlSelectRemote& (0+255),w,b
  7456  00401C  5C49               	subwf	(_edit_Param+3)^0,w,c	;volatile
  7457  00401E  6E14               	movwf	___awdiv@dividend^0,c
  7458  004020  6A15               	clrf	(___awdiv@dividend+1)^0,c
  7459  004022  A0D8               	btfss	status,0,c
  7460  004024  0615               	decf	(___awdiv@dividend+1)^0,f,c
  7461  004026  0E00               	movlw	0
  7462  004028  6E17               	movwf	(___awdiv@divisor+1)^0,c
  7463  00402A  0E0A               	movlw	10
  7464  00402C  6E16               	movwf	___awdiv@divisor^0,c
  7465  00402E  EC0E  F042         	call	___awdiv	;wreg free
  7466  004032  5014               	movf	?___awdiv^0,w,c
  7467  004034  ECE5  F04D         	call	_SetSegmentValue
  7468  004038  D7A2               	goto	l22295
  7469  00403A                     l22319:
  7470                           
  7471                           ; BSR set to: 1
  7472  00403A  0E63               	movlw	99
  7473  00403C  644A               	cpfsgt	(_edit_Param+4)^0,c	;volatile
  7474  00403E  D01A               	goto	l22329
  7475                           
  7476                           ; BSR set to: 1
  7477  004040  0E63               	movlw	99
  7478  004042  6449               	cpfsgt	(_edit_Param+3)^0,c	;volatile
  7479  004044  D017               	goto	l22329
  7480                           
  7481                           ; BSR set to: 1
  7482                           ;sm_MenuConfiguration_MC50.c: 1159:     {;sm_MenuConfiguration_MC50.c: 1160:         if(
      +                          menu_st.parameterSelected==0)
  7483  004046  5168               	movf	(_menu_st+23)& (0+255),w,b
  7484  004048  A4D8               	btfss	status,2,c
  7485  00404A  D00A               	goto	l22327
  7486                           
  7487                           ; BSR set to: 1
  7488                           ;sm_MenuConfiguration_MC50.c: 1161:         {;sm_MenuConfiguration_MC50.c: 1162:        
      +                               SetSegmentValueIntermitentMain(dL, dU,( 500/50));
  7489  00404C  0E13               	movlw	19
  7490  00404E  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  7491  004050  0E00               	movlw	0
  7492  004052  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  7493  004054  0E0A               	movlw	10
  7494  004056  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  7495  004058  0E12               	movlw	18
  7496  00405A  EC66  F04E         	call	_SetSegmentValueIntermitentMain
  7497                           
  7498                           ;sm_MenuConfiguration_MC50.c: 1163:         }
  7499  00405E  0012               	return	
  7500  004060                     l22327:
  7501                           
  7502                           ; BSR set to: 1
  7503                           ;sm_MenuConfiguration_MC50.c: 1165:         {;sm_MenuConfiguration_MC50.c: 1166:        
      +                               SetSegmentValueIntermitentMain(dL, dP,( 500/50));
  7504  004060  0E10               	movlw	16
  7505  004062  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  7506  004064  0E00               	movlw	0
  7507  004066  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  7508  004068  0E0A               	movlw	10
  7509  00406A  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  7510  00406C  0E12               	movlw	18
  7511  00406E  EC66  F04E         	call	_SetSegmentValueIntermitentMain
  7512  004072  0012               	return	
  7513  004074                     l22329:
  7514                           
  7515                           ; BSR set to: 1
  7516  004074  0100               	movlb	0	; () banked
  7517  004076  29E8               	incf	controlSelectRemote@temp& (0+255),w,b
  7518  004078  B4D8               	btfsc	status,2,c
  7519  00407A  D0A8               	goto	l22397
  7520                           
  7521                           ; BSR set to: 0
  7522  00407C  51E8               	movf	controlSelectRemote@temp& (0+255),w,b
  7523  00407E  B4D8               	btfsc	status,2,c
  7524  004080  D00F               	goto	u25710
  7525                           
  7526                           ; BSR set to: 0
  7527  004082  05E8               	decf	controlSelectRemote@temp& (0+255),w,b
  7528  004084  B4D8               	btfsc	status,2,c
  7529  004086  D00C               	goto	u25710
  7530                           
  7531                           ; BSR set to: 0
  7532  004088  0E02               	movlw	2
  7533  00408A  19E8               	xorwf	controlSelectRemote@temp& (0+255),w,b
  7534  00408C  B4D8               	btfsc	status,2,c
  7535  00408E  D008               	goto	u25710
  7536                           
  7537                           ; BSR set to: 0
  7538  004090  0E04               	movlw	4
  7539  004092  19E8               	xorwf	controlSelectRemote@temp& (0+255),w,b
  7540  004094  B4D8               	btfsc	status,2,c
  7541  004096  D004               	goto	u25710
  7542                           
  7543                           ; BSR set to: 0
  7544  004098  0E08               	movlw	8
  7545  00409A  19E8               	xorwf	controlSelectRemote@temp& (0+255),w,b
  7546  00409C  A4D8               	btfss	status,2,c
  7547  00409E  D096               	goto	l22397
  7548  0040A0                     u25710:
  7549                           
  7550                           ; BSR set to: 0
  7551                           ;sm_MenuConfiguration_MC50.c: 1170:     {;sm_MenuConfiguration_MC50.c: 1171:         cha
      +                          r pos;;sm_MenuConfiguration_MC50.c: 1172:         validSerial=validateRemoteSerialNumber
      +                          (tempSerial,NO,&pos);
  7552  0040A0  C0E4  F02E         	movff	controlSelectRemote@tempSerial,validateRemoteSerialNumber@serial
  7553  0040A4  C0E5  F02F         	movff	controlSelectRemote@tempSerial+1,validateRemoteSerialNumber@serial+1
  7554  0040A8  C0E6  F030         	movff	controlSelectRemote@tempSerial+2,validateRemoteSerialNumber@serial+2
  7555  0040AC  C0E7  F031         	movff	controlSelectRemote@tempSerial+3,validateRemoteSerialNumber@serial+3
  7556  0040B0  0E00               	movlw	0
  7557  0040B2  6E32               	movwf	validateRemoteSerialNumber@VerifyOnlySerial^0,c
  7558  0040B4  0EE2               	movlw	low controlSelectRemote@pos
  7559  0040B6  6E33               	movwf	validateRemoteSerialNumber@position^0,c
  7560  0040B8  6A34               	clrf	(validateRemoteSerialNumber@position+1)^0,c
  7561  0040BA  EC52  F030         	call	_validateRemoteSerialNumber	;wreg free
  7562  0040BE  6FE1               	movwf	controlSelectRemote@validSerial& (0+255),b
  7563                           
  7564                           ; BSR set to: 0
  7565                           ;sm_MenuConfiguration_MC50.c: 1174:         TypeRemote_st typeRemote = getTypeRemote();
  7566  0040C0  EC1B  F04F         	call	_getTypeRemote	;wreg free
  7567  0040C4  0100               	movlb	0	; () banked
  7568  0040C6  6FE3               	movwf	controlSelectRemote@typeRemote& (0+255),b
  7569                           
  7570                           ; BSR set to: 0
  7571                           ;sm_MenuConfiguration_MC50.c: 1175:         if(validSerial==0&&(typeRemote==Keeloq_Rolli
      +                          ngCode || (var_sys_NVM.OnlyRollingCode==NO)))
  7572  0040C8  51E1               	movf	controlSelectRemote@validSerial& (0+255),w,b
  7573  0040CA  A4D8               	btfss	status,2,c
  7574  0040CC  0012               	return	
  7575                           
  7576                           ; BSR set to: 0
  7577  0040CE  51E3               	movf	controlSelectRemote@typeRemote& (0+255),w,b
  7578  0040D0  B4D8               	btfsc	status,2,c
  7579  0040D2  D003               	goto	u25740
  7580                           
  7581                           ; BSR set to: 0
  7582  0040D4  51BE               	movf	(_var_sys_NVM+38)& (0+255),w,b	;volatile
  7583  0040D6  A4D8               	btfss	status,2,c
  7584  0040D8  0012               	return	
  7585  0040DA                     u25740:
  7586                           
  7587                           ; BSR set to: 0
  7588                           ;sm_MenuConfiguration_MC50.c: 1176:         {;sm_MenuConfiguration_MC50.c: 1177:        
      +                               saveNewSerial(menu_st.parameterSelected,tempSerial,edit_Param.tempValue);
  7589  0040DA  C0E4  F0D8         	movff	controlSelectRemote@tempSerial,saveNewSerial@tempSerial
  7590  0040DE  C0E5  F0D9         	movff	controlSelectRemote@tempSerial+1,saveNewSerial@tempSerial+1
  7591  0040E2  C0E6  F0DA         	movff	controlSelectRemote@tempSerial+2,saveNewSerial@tempSerial+2
  7592  0040E6  C0E7  F0DB         	movff	controlSelectRemote@tempSerial+3,saveNewSerial@tempSerial+3
  7593  0040EA  C049  F0DC         	movff	_edit_Param+3,saveNewSerial@position	;volatile
  7594  0040EE  0101               	movlb	1	; () banked
  7595  0040F0  5168               	movf	(_menu_st+23)& (0+255),w,b
  7596  0040F2  ECF2  F044         	call	_saveNewSerial
  7597                           
  7598                           ;sm_MenuConfiguration_MC50.c: 1178:             if(menu_st.parameterSelected==0&&edit_Pa
      +                          ram.tempValue==var_sys_NVM.positionRemotesFull&&var_sys_NVM.positionRemotesFull<99)
  7599  0040F6  0101               	movlb	1	; () banked
  7600  0040F8  5168               	movf	(_menu_st+23)& (0+255),w,b
  7601  0040FA  A4D8               	btfss	status,2,c
  7602  0040FC  D009               	goto	l22361
  7603                           
  7604                           ; BSR set to: 1
  7605  0040FE  0100               	movlb	0	; () banked
  7606  004100  51B8               	movf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
  7607  004102  1849               	xorwf	(_edit_Param+3)^0,w,c	;volatile
  7608  004104  A4D8               	btfss	status,2,c
  7609  004106  D004               	goto	l22361
  7610                           
  7611                           ; BSR set to: 0
  7612  004108  0E63               	movlw	99
  7613  00410A  61B8               	cpfslt	(_var_sys_NVM+32)& (0+255),b	;volatile
  7614  00410C  D001               	goto	l22361
  7615                           
  7616                           ; BSR set to: 0
  7617                           ;sm_MenuConfiguration_MC50.c: 1179:                 var_sys_NVM.positionRemotesFull++;
  7618  00410E  2BB8               	incf	(_var_sys_NVM+32)& (0+255),f,b	;volatile
  7619  004110                     l22361:
  7620                           
  7621                           ;sm_MenuConfiguration_MC50.c: 1180:             if(menu_st.parameterSelected==1&&edit_Pa
      +                          ram.tempValue==var_sys_NVM.positionRemotesWalk&&var_sys_NVM.positionRemotesWalk<99)
  7622  004110  0101               	movlb	1	; () banked
  7623  004112  0568               	decf	(_menu_st+23)& (0+255),w,b
  7624  004114  A4D8               	btfss	status,2,c
  7625  004116  D009               	goto	l22369
  7626                           
  7627                           ; BSR set to: 1
  7628  004118  0100               	movlb	0	; () banked
  7629  00411A  51B9               	movf	(_var_sys_NVM+33)& (0+255),w,b	;volatile
  7630  00411C  1849               	xorwf	(_edit_Param+3)^0,w,c	;volatile
  7631  00411E  A4D8               	btfss	status,2,c
  7632  004120  D004               	goto	l22369
  7633                           
  7634                           ; BSR set to: 0
  7635  004122  0E63               	movlw	99
  7636  004124  61B9               	cpfslt	(_var_sys_NVM+33)& (0+255),b	;volatile
  7637  004126  D001               	goto	l22369
  7638                           
  7639                           ; BSR set to: 0
  7640                           ;sm_MenuConfiguration_MC50.c: 1181:                 var_sys_NVM.positionRemotesWalk++;
  7641  004128  2BB9               	incf	(_var_sys_NVM+33)& (0+255),f,b	;volatile
  7642  00412A                     l22369:
  7643                           
  7644                           ;sm_MenuConfiguration_MC50.c: 1182:             sm_send_event(&menuConfiguration_stateMa
      +                          chine, ev_addRemotes);
  7645  00412A  0EBB               	movlw	low _menuConfiguration_stateMachine
  7646  00412C  6E12               	movwf	sm_send_event@psm^0,c
  7647  00412E  0E02               	movlw	high _menuConfiguration_stateMachine
  7648  004130  6E13               	movwf	(sm_send_event@psm+1)^0,c
  7649  004132  0E00               	movlw	0
  7650  004134  6E15               	movwf	(sm_send_event@event+1)^0,c
  7651  004136  0E08               	movlw	8
  7652  004138  6E14               	movwf	sm_send_event@event^0,c
  7653  00413A  ECCD  F046         	call	_sm_send_event	;wreg free
  7654                           
  7655                           ;sm_MenuConfiguration_MC50.c: 1183:             var_sys.DistanceProgrammingActive=NO;
  7656  00413E  0E00               	movlw	0
  7657  004140  0101               	movlb	1	; () banked
  7658  004142  6F40               	movwf	(_var_sys+64)& (0+255),b	;volatile
  7659                           
  7660                           ; BSR set to: 1
  7661                           ;sm_MenuConfiguration_MC50.c: 1184:             var_sys.ProgrammingDistanceIs=NoCMD;
  7662  004144  0E00               	movlw	0
  7663  004146  6F3B               	movwf	(_var_sys+59)& (0+255),b	;volatile
  7664                           
  7665                           ; BSR set to: 1
  7666                           ;sm_MenuConfiguration_MC50.c: 1185:             ts_system.timeSinalizationDigit=(1000/50
      +                          )*2;
  7667  004148  0E00               	movlw	0
  7668  00414A  6FAC               	movwf	(_ts_system+13)& (0+255),b	;volatile
  7669  00414C  0E28               	movlw	40
  7670  00414E  6FAB               	movwf	(_ts_system+12)& (0+255),b	;volatile
  7671                           
  7672                           ; BSR set to: 1
  7673                           ;sm_MenuConfiguration_MC50.c: 1186:             SetSegmentValueIntermitentMain((edit_Par
      +                          am.tempValue-edit_Param.tempValue%10)/10, edit_Param.tempValue%10,( 200/50));
  7674  004150  0E0A               	movlw	10
  7675  004152  6E10               	movwf	___lbmod@divisor^0,c
  7676  004154  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7677  004156  EC93  F04C         	call	___lbmod
  7678  00415A  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  7679  00415C  0E00               	movlw	0
  7680  00415E  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  7681  004160  0E04               	movlw	4
  7682  004162  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  7683  004164  0E0A               	movlw	10
  7684  004166  6E10               	movwf	___lbmod@divisor^0,c
  7685  004168  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7686  00416A  EC93  F04C         	call	___lbmod
  7687  00416E  0100               	movlb	0	; () banked
  7688  004170  6FE0               	movwf	??_controlSelectRemote& (0+255),b
  7689  004172  51E0               	movf	??_controlSelectRemote& (0+255),w,b
  7690  004174  5C49               	subwf	(_edit_Param+3)^0,w,c	;volatile
  7691  004176  6E14               	movwf	___awdiv@dividend^0,c
  7692  004178  6A15               	clrf	(___awdiv@dividend+1)^0,c
  7693  00417A  A0D8               	btfss	status,0,c
  7694  00417C  0615               	decf	(___awdiv@dividend+1)^0,f,c
  7695  00417E  0E00               	movlw	0
  7696  004180  6E17               	movwf	(___awdiv@divisor+1)^0,c
  7697  004182  0E0A               	movlw	10
  7698  004184  6E16               	movwf	___awdiv@divisor^0,c
  7699  004186  EC0E  F042         	call	___awdiv	;wreg free
  7700  00418A  5014               	movf	?___awdiv^0,w,c
  7701  00418C  EC66  F04E         	call	_SetSegmentValueIntermitentMain
  7702                           
  7703                           ;sm_MenuConfiguration_MC50.c: 1187:             if(edit_Param.Max==edit_Param.tempValue 
      +                          || edit_Param.Max==0 )
  7704  004190  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7705  004192  184A               	xorwf	(_edit_Param+4)^0,w,c	;volatile
  7706  004194  B4D8               	btfsc	status,2,c
  7707  004196  D003               	goto	u25820
  7708  004198  504A               	movf	(_edit_Param+4)^0,w,c	;volatile
  7709  00419A  A4D8               	btfss	status,2,c
  7710  00419C  0012               	return	
  7711  00419E                     u25820:
  7712                           
  7713                           ;sm_MenuConfiguration_MC50.c: 1188:             {;sm_MenuConfiguration_MC50.c: 1192:    
      +                                       if(var_sys_NVM.positionRemotesFull==0 && var_sys_NVM.positionRemotesWalk==0
      +                           && typeRemote==Keeloq_RollingCode)
  7714  00419E  0100               	movlb	0	; () banked
  7715  0041A0  51B8               	movf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
  7716  0041A2  A4D8               	btfss	status,2,c
  7717  0041A4  D008               	goto	l22391
  7718                           
  7719                           ; BSR set to: 0
  7720  0041A6  51B9               	movf	(_var_sys_NVM+33)& (0+255),w,b	;volatile
  7721  0041A8  A4D8               	btfss	status,2,c
  7722  0041AA  D005               	goto	l22391
  7723                           
  7724                           ; BSR set to: 0
  7725  0041AC  51E3               	movf	controlSelectRemote@typeRemote& (0+255),w,b
  7726  0041AE  A4D8               	btfss	status,2,c
  7727  0041B0  D002               	goto	l22391
  7728                           
  7729                           ; BSR set to: 0
  7730                           ;sm_MenuConfiguration_MC50.c: 1193:                 {;sm_MenuConfiguration_MC50.c: 1195:
      +                                               var_sys_NVM.OnlyRollingCode=YES;
  7731  0041B2  0E01               	movlw	1
  7732  0041B4  6FBE               	movwf	(_var_sys_NVM+38)& (0+255),b	;volatile
  7733  0041B6                     l22391:
  7734                           
  7735                           ; BSR set to: 0
  7736                           ;sm_MenuConfiguration_MC50.c: 1199:                 edit_Param.tempValue++;
  7737  0041B6  2A49               	incf	(_edit_Param+3)^0,f,c	;volatile
  7738                           
  7739                           ; BSR set to: 0
  7740                           ;sm_MenuConfiguration_MC50.c: 1200:                 edit_Param.Value[0]=edit_Param.tempV
      +                          alue;
  7741  0041B8  C047  FFD9         	movff	_edit_Param+1,fsr2l	;volatile
  7742  0041BC  C048  FFDA         	movff	_edit_Param+2,fsr2h	;volatile
  7743  0041C0  C049  FFDF         	movff	_edit_Param+3,indf2	;volatile
  7744                           
  7745                           ; BSR set to: 0
  7746                           ;sm_MenuConfiguration_MC50.c: 1201:                 SaveNVM_VarSystem(pageMemoryCounters
      +                          );
  7747  0041C4  0E02               	movlw	2
  7748  0041C6  ECDB  F04A         	call	_SaveNVM_VarSystem
  7749  0041CA  0012               	return	
  7750  0041CC                     l22397:
  7751                           
  7752                           ; BSR set to: 0
  7753  0041CC  504A               	movf	(_edit_Param+4)^0,w,c	;volatile
  7754  0041CE  1849               	xorwf	(_edit_Param+3)^0,w,c	;volatile
  7755  0041D0  B4D8               	btfsc	status,2,c
  7756  0041D2  0012               	return	
  7757                           
  7758                           ; BSR set to: 0
  7759  0041D4  0E27               	movlw	39
  7760  0041D6  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  7761  0041D8  A4D8               	btfss	status,2,c
  7762  0041DA  0012               	return	
  7763                           
  7764                           ; BSR set to: 0
  7765  0041DC  0E27               	movlw	39
  7766  0041DE  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  7767  0041E0  0012               	return	
  7768                           
  7769                           ; BSR set to: 0
  7770                           ;sm_MenuConfiguration_MC50.c: 1208:     {;sm_MenuConfiguration_MC50.c: 1209:         ts_
      +                          system.timeoutMenu=((1000/50)*5) ;
  7771  0041E2  0E00               	movlw	0
  7772  0041E4  0101               	movlb	1	; () banked
  7773  0041E6  6FAE               	movwf	(_ts_system+15)& (0+255),b	;volatile
  7774  0041E8  0E64               	movlw	100
  7775  0041EA  6FAD               	movwf	(_ts_system+14)& (0+255),b	;volatile
  7776                           
  7777                           ; BSR set to: 1
  7778                           ;sm_MenuConfiguration_MC50.c: 1210:         RemoveSerial(menu_st.parameterSelected,edit_
      +                          Param.tempValue);
  7779  0041EC  C049  F03A         	movff	_edit_Param+3,RemoveSerial@position	;volatile
  7780  0041F0  5168               	movf	(_menu_st+23)& (0+255),w,b
  7781  0041F2  ECD3  F042         	call	_RemoveSerial
  7782                           
  7783                           ;sm_MenuConfiguration_MC50.c: 1211:         SetSegmentValueIntermitentMain((edit_Param.t
      +                          empValue-edit_Param.tempValue%10)/10, edit_Param.tempValue%10,(1000/50));
  7784  0041F6  0E0A               	movlw	10
  7785  0041F8  6E10               	movwf	___lbmod@divisor^0,c
  7786  0041FA  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7787  0041FC  EC93  F04C         	call	___lbmod
  7788  004200  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  7789  004202  0E00               	movlw	0
  7790  004204  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  7791  004206  0E14               	movlw	20
  7792  004208  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  7793  00420A  0E0A               	movlw	10
  7794  00420C  6E10               	movwf	___lbmod@divisor^0,c
  7795  00420E  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7796  004210  EC93  F04C         	call	___lbmod
  7797  004214  0100               	movlb	0	; () banked
  7798  004216  6FE0               	movwf	??_controlSelectRemote& (0+255),b
  7799  004218  51E0               	movf	??_controlSelectRemote& (0+255),w,b
  7800  00421A  5C49               	subwf	(_edit_Param+3)^0,w,c	;volatile
  7801  00421C  6E14               	movwf	___awdiv@dividend^0,c
  7802  00421E  6A15               	clrf	(___awdiv@dividend+1)^0,c
  7803  004220  A0D8               	btfss	status,0,c
  7804  004222  0615               	decf	(___awdiv@dividend+1)^0,f,c
  7805  004224  0E00               	movlw	0
  7806  004226  6E17               	movwf	(___awdiv@divisor+1)^0,c
  7807  004228  0E0A               	movlw	10
  7808  00422A  6E16               	movwf	___awdiv@divisor^0,c
  7809  00422C  EC0E  F042         	call	___awdiv	;wreg free
  7810  004230  5014               	movf	?___awdiv^0,w,c
  7811  004232  EC66  F04E         	call	_SetSegmentValueIntermitentMain
  7812  004236  0012               	return	
  7813  004238                     __end_of_controlSelectRemote:
  7814                           	callstack 0
  7815                           
  7816 ;; *************** function _getTypeRemote *****************
  7817 ;; Defined at:
  7818 ;;		line 459 in file "inputs_MC50.c"
  7819 ;; Parameters:    Size  Location     Type
  7820 ;;		None
  7821 ;; Auto vars:     Size  Location     Type
  7822 ;;		None
  7823 ;; Return value:  Size  Location     Type
  7824 ;;                  1    wreg      enum E10559
  7825 ;; Registers used:
  7826 ;;		wreg, status,2
  7827 ;; Tracked objects:
  7828 ;;		On entry : 3F/0
  7829 ;;		On exit  : 3F/2
  7830 ;;		Unchanged: 0/0
  7831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7832 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7833 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7835 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7836 ;;Total ram usage:        0 bytes
  7837 ;; Hardware stack levels used: 1
  7838 ;; Hardware stack levels required when called: 4
  7839 ;; This function calls:
  7840 ;;		Nothing
  7841 ;; This function is called by:
  7842 ;;		_controlSelectRemote
  7843 ;; This function uses a non-reentrant model
  7844 ;;
  7845                           
  7846                           	psect	text7
  7847  009E36                     __ptext7:
  7848                           	callstack 0
  7849  009E36                     _getTypeRemote:
  7850                           	callstack 23
  7851                           
  7852                           ; BSR set to: 0
  7853                           ;inputs_MC50.c: 460:     return classic_data.type;
  7854                           
  7855                           ;incstack = 0
  7856  009E36  0102               	movlb	2	; () banked
  7857  009E38  519E               	movf	(_classic_data+14)& (0+255),w,b
  7858                           
  7859                           ; BSR set to: 2
  7860  009E3A  0012               	return		;funcret
  7861  009E3C                     __end_of_getTypeRemote:
  7862                           	callstack 0
  7863                           
  7864 ;; *************** function _getSerialCmd *****************
  7865 ;; Defined at:
  7866 ;;		line 442 in file "inputs_MC50.c"
  7867 ;; Parameters:    Size  Location     Type
  7868 ;;  serial          1   26[COMRAM] PTR unsigned long 
  7869 ;;		 -> controlSelectRemote@tempSerial(4), 
  7870 ;; Auto vars:     Size  Location     Type
  7871 ;;  temp            1   27[COMRAM] char 
  7872 ;; Return value:  Size  Location     Type
  7873 ;;                  1    wreg      char 
  7874 ;; Registers used:
  7875 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7876 ;; Tracked objects:
  7877 ;;		On entry : 3F/1
  7878 ;;		On exit  : 0/0
  7879 ;;		Unchanged: 0/0
  7880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7881 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7882 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7883 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7884 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7885 ;;Total ram usage:        2 bytes
  7886 ;; Hardware stack levels used: 1
  7887 ;; Hardware stack levels required when called: 5
  7888 ;; This function calls:
  7889 ;;		_memcpy
  7890 ;; This function is called by:
  7891 ;;		_controlSelectRemote
  7892 ;; This function uses a non-reentrant model
  7893 ;;
  7894                           
  7895                           	psect	text8
  7896  009202                     __ptext8:
  7897                           	callstack 0
  7898  009202                     _getSerialCmd:
  7899                           	callstack 22
  7900                           
  7901                           ; BSR set to: 1
  7902                           ;inputs_MC50.c: 443:     signed char temp=-1;
  7903                           
  7904                           ; BSR set to: 2
  7905                           ;incstack = 0
  7906  009202  681C               	setf	getSerialCmd@temp^0,c
  7907                           
  7908                           ; BSR set to: 1
  7909                           ;inputs_MC50.c: 444:     if(RFFull)
  7910  009204  0100               	movlb	0	; () banked
  7911  009206  518B               	movf	_RFFull& (0+255),w,b	;volatile
  7912  009208  B4D8               	btfsc	status,2,c
  7913  00920A  D020               	goto	l20761
  7914                           
  7915                           ; BSR set to: 0
  7916                           ;inputs_MC50.c: 445:     {;inputs_MC50.c: 446:         if(RFFull_12BIT)
  7917  00920C  518A               	movf	_RFFull_12BIT& (0+255),w,b	;volatile
  7918  00920E  B4D8               	btfsc	status,2,c
  7919  009210  D00E               	goto	l20757
  7920                           
  7921                           ; BSR set to: 0
  7922                           ;inputs_MC50.c: 447:         {;inputs_MC50.c: 448:             memcpy((char*)serial,&cla
      +                          ssic_data.serialnumber,4);
  7923  009212  C01B  F010         	movff	getSerialCmd@serial,memcpy@d1
  7924  009216  6A11               	clrf	(memcpy@d1+1)^0,c
  7925  009218  0E94               	movlw	low (_classic_data+4)
  7926  00921A  6E12               	movwf	memcpy@s1^0,c
  7927  00921C  0E02               	movlw	high (_classic_data+4)
  7928  00921E  6E13               	movwf	(memcpy@s1+1)^0,c
  7929  009220  0E00               	movlw	0
  7930  009222  6E15               	movwf	(memcpy@n+1)^0,c
  7931  009224  0E04               	movlw	4
  7932  009226  6E14               	movwf	memcpy@n^0,c
  7933  009228  ECDD  F049         	call	_memcpy	;wreg free
  7934                           
  7935                           ;inputs_MC50.c: 449:         }
  7936  00922C  D00D               	goto	l20759
  7937  00922E                     l20757:
  7938                           
  7939                           ; BSR set to: 0
  7940                           ;inputs_MC50.c: 451:         {;inputs_MC50.c: 452:             memcpy((char*)serial,(cha
      +                          r*)BufferRF+4,4);
  7941  00922E  C01B  F010         	movff	getSerialCmd@serial,memcpy@d1
  7942  009232  6A11               	clrf	(memcpy@d1+1)^0,c
  7943  009234  0ECA               	movlw	low (_BufferRF+4)
  7944  009236  6E12               	movwf	memcpy@s1^0,c
  7945  009238  0E02               	movlw	high (_BufferRF+4)
  7946  00923A  6E13               	movwf	(memcpy@s1+1)^0,c
  7947  00923C  0E00               	movlw	0
  7948  00923E  6E15               	movwf	(memcpy@n+1)^0,c
  7949  009240  0E04               	movlw	4
  7950  009242  6E14               	movwf	memcpy@n^0,c
  7951  009244  ECDD  F049         	call	_memcpy	;wreg free
  7952  009248                     l20759:
  7953                           
  7954                           ;inputs_MC50.c: 454:         temp=classic_data.fcode1;
  7955  009248  C29C  F01C         	movff	_classic_data+12,getSerialCmd@temp
  7956  00924C                     l20761:
  7957                           
  7958                           ;inputs_MC50.c: 456:     return temp;
  7959  00924C  501C               	movf	getSerialCmd@temp^0,w,c
  7960  00924E  0012               	return		;funcret
  7961  009250                     __end_of_getSerialCmd:
  7962                           	callstack 0
  7963                           
  7964 ;; *************** function _controlSaveRemote *****************
  7965 ;; Defined at:
  7966 ;;		line 1216 in file "sm_MenuConfiguration_MC50.c"
  7967 ;; Parameters:    Size  Location     Type
  7968 ;;		None
  7969 ;; Auto vars:     Size  Location     Type
  7970 ;;		None
  7971 ;; Return value:  Size  Location     Type
  7972 ;;                  1    wreg      void 
  7973 ;; Registers used:
  7974 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7975 ;; Tracked objects:
  7976 ;;		On entry : 3F/0
  7977 ;;		On exit  : 0/0
  7978 ;;		Unchanged: 0/0
  7979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7980 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7981 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7982 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7983 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7984 ;;Total ram usage:        1 bytes
  7985 ;; Hardware stack levels used: 1
  7986 ;; Hardware stack levels required when called: 6
  7987 ;; This function calls:
  7988 ;;		_ClearFlag_rfCMD
  7989 ;;		_SetSegmentValueIntermitentMain
  7990 ;;		_SetSegmentValueMain
  7991 ;;		___awdiv
  7992 ;;		___lbmod
  7993 ;;		_sm_send_event
  7994 ;; This function is called by:
  7995 ;;		_sm_execute_menuConfiguration
  7996 ;; This function uses a non-reentrant model
  7997 ;;
  7998                           
  7999                           	psect	text9
  8000  007BBC                     __ptext9:
  8001                           	callstack 0
  8002  007BBC                     _controlSaveRemote:
  8003                           	callstack 22
  8004                           
  8005                           ; BSR set to: 0
  8006                           ;sm_MenuConfiguration_MC50.c: 1217:      if (ts_system.timeSinalizationDigit<=0)
  8007                           
  8008                           ;incstack = 0
  8009  007BBC  0101               	movlb	1	; () banked
  8010  007BBE  BFAC               	btfsc	(_ts_system+13)& (0+255),7,b	;volatile
  8011  007BC0  D005               	goto	u25890
  8012  007BC2  51AC               	movf	(_ts_system+13)& (0+255),w,b	;volatile
  8013  007BC4  E154               	bnz	l3493
  8014  007BC6  05AB               	decf	(_ts_system+12)& (0+255),w,b	;volatile
  8015  007BC8  B0D8               	btfsc	status,0,c
  8016  007BCA  0012               	return	
  8017  007BCC                     u25890:
  8018                           
  8019                           ; BSR set to: 1
  8020                           ;sm_MenuConfiguration_MC50.c: 1218:      {;sm_MenuConfiguration_MC50.c: 1219:          i
      +                          f(edit_Param.Max==0)
  8021  007BCC  504A               	movf	(_edit_Param+4)^0,w,c	;volatile
  8022  007BCE  A4D8               	btfss	status,2,c
  8023  007BD0  D02E               	goto	l22419
  8024                           
  8025                           ; BSR set to: 1
  8026                           ;sm_MenuConfiguration_MC50.c: 1220:          {;sm_MenuConfiguration_MC50.c: 1221:       
      +                                 ts_system.timeoutMenu=10*(1000/50);
  8027  007BD2  0E00               	movlw	0
  8028  007BD4  6FAE               	movwf	(_ts_system+15)& (0+255),b	;volatile
  8029  007BD6  0EC8               	movlw	200
  8030  007BD8  6FAD               	movwf	(_ts_system+14)& (0+255),b	;volatile
  8031                           
  8032                           ; BSR set to: 1
  8033                           ;sm_MenuConfiguration_MC50.c: 1222:              sm_send_event(&menuConfiguration_stateM
      +                          achine, ev_NextRemote);
  8034  007BDA  0EBB               	movlw	low _menuConfiguration_stateMachine
  8035  007BDC  6E12               	movwf	sm_send_event@psm^0,c
  8036  007BDE  0E02               	movlw	high _menuConfiguration_stateMachine
  8037  007BE0  6E13               	movwf	(sm_send_event@psm+1)^0,c
  8038  007BE2  0E00               	movlw	0
  8039  007BE4  6E15               	movwf	(sm_send_event@event+1)^0,c
  8040  007BE6  0E09               	movlw	9
  8041  007BE8  6E14               	movwf	sm_send_event@event^0,c
  8042  007BEA  ECCD  F046         	call	_sm_send_event	;wreg free
  8043                           
  8044                           ;sm_MenuConfiguration_MC50.c: 1223:              SetSegmentValueIntermitentMain((edit_Pa
      +                          ram.tempValue-edit_Param.tempValue%10)/10, edit_Param.tempValue%10,(1000/50));
  8045  007BEE  0E0A               	movlw	10
  8046  007BF0  6E10               	movwf	___lbmod@divisor^0,c
  8047  007BF2  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  8048  007BF4  EC93  F04C         	call	___lbmod
  8049  007BF8  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  8050  007BFA  0E00               	movlw	0
  8051  007BFC  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  8052  007BFE  0E14               	movlw	20
  8053  007C00  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  8054  007C02  0E0A               	movlw	10
  8055  007C04  6E10               	movwf	___lbmod@divisor^0,c
  8056  007C06  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  8057  007C08  EC93  F04C         	call	___lbmod
  8058  007C0C  6E20               	movwf	??_controlSaveRemote^0,c
  8059  007C0E  5020               	movf	??_controlSaveRemote^0,w,c
  8060  007C10  5C49               	subwf	(_edit_Param+3)^0,w,c	;volatile
  8061  007C12  6E14               	movwf	___awdiv@dividend^0,c
  8062  007C14  6A15               	clrf	(___awdiv@dividend+1)^0,c
  8063  007C16  A0D8               	btfss	status,0,c
  8064  007C18  0615               	decf	(___awdiv@dividend+1)^0,f,c
  8065  007C1A  0E00               	movlw	0
  8066  007C1C  6E17               	movwf	(___awdiv@divisor+1)^0,c
  8067  007C1E  0E0A               	movlw	10
  8068  007C20  6E16               	movwf	___awdiv@divisor^0,c
  8069  007C22  EC0E  F042         	call	___awdiv	;wreg free
  8070  007C26  5014               	movf	?___awdiv^0,w,c
  8071  007C28  EC66  F04E         	call	_SetSegmentValueIntermitentMain
  8072                           
  8073                           ;sm_MenuConfiguration_MC50.c: 1224:          }
  8074  007C2C  0012               	return	
  8075  007C2E                     l22419:
  8076                           
  8077                           ; BSR set to: 1
  8078                           ;sm_MenuConfiguration_MC50.c: 1226:          {;sm_MenuConfiguration_MC50.c: 1227:       
      +                                sm_send_event(&main_stateMachine, ev_goto_StandBy);
  8079  007C2E  0EF2               	movlw	low _main_stateMachine
  8080  007C30  6E12               	movwf	sm_send_event@psm^0,c
  8081  007C32  0E01               	movlw	high _main_stateMachine
  8082  007C34  6E13               	movwf	(sm_send_event@psm+1)^0,c
  8083  007C36  0E00               	movlw	0
  8084  007C38  6E15               	movwf	(sm_send_event@event+1)^0,c
  8085  007C3A  0E07               	movlw	7
  8086  007C3C  6E14               	movwf	sm_send_event@event^0,c
  8087  007C3E  ECCD  F046         	call	_sm_send_event	;wreg free
  8088                           
  8089                           ;sm_MenuConfiguration_MC50.c: 1228:             sm_send_event(&menuConfiguration_stateMa
      +                          chine, ev_ParameterIsSaved);
  8090  007C42  0EBB               	movlw	low _menuConfiguration_stateMachine
  8091  007C44  6E12               	movwf	sm_send_event@psm^0,c
  8092  007C46  0E02               	movlw	high _menuConfiguration_stateMachine
  8093  007C48  6E13               	movwf	(sm_send_event@psm+1)^0,c
  8094  007C4A  0E00               	movlw	0
  8095  007C4C  6E15               	movwf	(sm_send_event@event+1)^0,c
  8096  007C4E  0E04               	movlw	4
  8097  007C50  6E14               	movwf	sm_send_event@event^0,c
  8098  007C52  ECCD  F046         	call	_sm_send_event	;wreg free
  8099                           
  8100                           ;sm_MenuConfiguration_MC50.c: 1229:             SetSegmentValueMain(dMinus,dMinus);
  8101  007C56  0E18               	movlw	24
  8102  007C58  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  8103  007C5A  0E18               	movlw	24
  8104  007C5C  ECCB  F04D         	call	_SetSegmentValueMain
  8105                           
  8106                           ; BSR set to: 0
  8107                           ;sm_MenuConfiguration_MC50.c: 1230:             ClearFlag_rfCMD();
  8108  007C60  EC1E  F04F         	call	_ClearFlag_rfCMD	;wreg free
  8109                           
  8110                           ;sm_MenuConfiguration_MC50.c: 1231:             ts_system.timeoutMenu = 0;
  8111  007C64  0E00               	movlw	0
  8112  007C66  0101               	movlb	1	; () banked
  8113  007C68  6FAE               	movwf	(_ts_system+15)& (0+255),b	;volatile
  8114  007C6A  0E00               	movlw	0
  8115  007C6C  6FAD               	movwf	(_ts_system+14)& (0+255),b	;volatile
  8116  007C6E                     l3493:
  8117  007C6E  0012               	return		;funcret
  8118  007C70                     __end_of_controlSaveRemote:
  8119                           	callstack 0
  8120                           
  8121 ;; *************** function ___lbmod *****************
  8122 ;; Defined at:
  8123 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\lbmod.c"
  8124 ;; Parameters:    Size  Location     Type
  8125 ;;  dividend        1    wreg     unsigned char 
  8126 ;;  divisor         1   15[COMRAM] unsigned char 
  8127 ;; Auto vars:     Size  Location     Type
  8128 ;;  dividend        1   16[COMRAM] unsigned char 
  8129 ;;  rem             1   18[COMRAM] unsigned char 
  8130 ;;  counter         1   17[COMRAM] unsigned char 
  8131 ;; Return value:  Size  Location     Type
  8132 ;;                  1    wreg      unsigned char 
  8133 ;; Registers used:
  8134 ;;		wreg, status,2, status,0
  8135 ;; Tracked objects:
  8136 ;;		On entry : 0/1
  8137 ;;		On exit  : 0/0
  8138 ;;		Unchanged: 0/0
  8139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8140 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8141 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8143 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8144 ;;Total ram usage:        4 bytes
  8145 ;; Hardware stack levels used: 1
  8146 ;; Hardware stack levels required when called: 4
  8147 ;; This function calls:
  8148 ;;		Nothing
  8149 ;; This function is called by:
  8150 ;;		_controlSelectRemote
  8151 ;;		_controlSaveRemote
  8152 ;; This function uses a non-reentrant model
  8153 ;;
  8154                           
  8155                           	psect	text10
  8156  009926                     __ptext10:
  8157                           	callstack 0
  8158  009926                     ___lbmod:
  8159                           	callstack 23
  8160                           
  8161                           ;incstack = 0
  8162                           ;___lbmod@dividend stored from wreg
  8163  009926  6E11               	movwf	___lbmod@dividend^0,c
  8164  009928  0E08               	movlw	8
  8165  00992A  6E12               	movwf	___lbmod@counter^0,c
  8166  00992C  0E00               	movlw	0
  8167  00992E  6E13               	movwf	___lbmod@rem^0,c
  8168  009930                     l21145:
  8169  009930  90D8               	bcf	status,0,c
  8170  009932  3411               	rlcf	___lbmod@dividend^0,w,c
  8171  009934  3413               	rlcf	___lbmod@rem^0,w,c
  8172  009936  6E13               	movwf	___lbmod@rem^0,c
  8173  009938  90D8               	bcf	status,0,c
  8174  00993A  3611               	rlcf	___lbmod@dividend^0,f,c
  8175  00993C  5010               	movf	___lbmod@divisor^0,w,c
  8176  00993E  5C13               	subwf	___lbmod@rem^0,w,c
  8177  009940  A0D8               	btfss	status,0,c
  8178  009942  D002               	goto	l21153
  8179  009944  5010               	movf	___lbmod@divisor^0,w,c
  8180  009946  5E13               	subwf	___lbmod@rem^0,f,c
  8181  009948                     l21153:
  8182  009948  2E12               	decfsz	___lbmod@counter^0,f,c
  8183  00994A  D7F2               	goto	l21145
  8184  00994C  5013               	movf	___lbmod@rem^0,w,c
  8185  00994E  0012               	return		;funcret
  8186  009950                     __end_of___lbmod:
  8187                           	callstack 0
  8188                           
  8189 ;; *************** function ___awdiv *****************
  8190 ;; Defined at:
  8191 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awdiv.c"
  8192 ;; Parameters:    Size  Location     Type
  8193 ;;  dividend        2   19[COMRAM] int 
  8194 ;;  divisor         2   21[COMRAM] int 
  8195 ;; Auto vars:     Size  Location     Type
  8196 ;;  quotient        2   25[COMRAM] int 
  8197 ;;  sign            1   24[COMRAM] unsigned char 
  8198 ;;  counter         1   23[COMRAM] unsigned char 
  8199 ;; Return value:  Size  Location     Type
  8200 ;;                  2   19[COMRAM] int 
  8201 ;; Registers used:
  8202 ;;		wreg, status,2, status,0
  8203 ;; Tracked objects:
  8204 ;;		On entry : 0/0
  8205 ;;		On exit  : 0/0
  8206 ;;		Unchanged: 0/0
  8207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8208 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8209 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8211 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8212 ;;Total ram usage:        8 bytes
  8213 ;; Hardware stack levels used: 1
  8214 ;; Hardware stack levels required when called: 4
  8215 ;; This function calls:
  8216 ;;		Nothing
  8217 ;; This function is called by:
  8218 ;;		_controlSelectRemote
  8219 ;;		_controlSaveRemote
  8220 ;; This function uses a non-reentrant model
  8221 ;;
  8222                           
  8223                           	psect	text11
  8224  00841C                     __ptext11:
  8225                           	callstack 0
  8226  00841C                     ___awdiv:
  8227                           	callstack 23
  8228                           
  8229                           ;incstack = 0
  8230  00841C  0E00               	movlw	0
  8231  00841E  6E19               	movwf	___awdiv@sign^0,c
  8232  008420  AE17               	btfss	(___awdiv@divisor+1)^0,7,c
  8233  008422  D006               	goto	l21081
  8234  008424  6C16               	negf	___awdiv@divisor^0,c
  8235  008426  1E17               	comf	(___awdiv@divisor+1)^0,f,c
  8236  008428  B0D8               	btfsc	status,0,c
  8237  00842A  2A17               	incf	(___awdiv@divisor+1)^0,f,c
  8238  00842C  0E01               	movlw	1
  8239  00842E  6E19               	movwf	___awdiv@sign^0,c
  8240  008430                     l21081:
  8241  008430  AE15               	btfss	(___awdiv@dividend+1)^0,7,c
  8242  008432  D006               	goto	l21087
  8243  008434  6C14               	negf	___awdiv@dividend^0,c
  8244  008436  1E15               	comf	(___awdiv@dividend+1)^0,f,c
  8245  008438  B0D8               	btfsc	status,0,c
  8246  00843A  2A15               	incf	(___awdiv@dividend+1)^0,f,c
  8247  00843C  0E01               	movlw	1
  8248  00843E  1A19               	xorwf	___awdiv@sign^0,f,c
  8249  008440                     l21087:
  8250  008440  0E00               	movlw	0
  8251  008442  6E1B               	movwf	(___awdiv@quotient+1)^0,c
  8252  008444  0E00               	movlw	0
  8253  008446  6E1A               	movwf	___awdiv@quotient^0,c
  8254  008448  5016               	movf	___awdiv@divisor^0,w,c
  8255  00844A  1017               	iorwf	(___awdiv@divisor+1)^0,w,c
  8256  00844C  B4D8               	btfsc	status,2,c
  8257  00844E  D01C               	goto	l21109
  8258  008450  0E01               	movlw	1
  8259  008452  6E18               	movwf	___awdiv@counter^0,c
  8260  008454  D004               	goto	l21095
  8261  008456                     l21093:
  8262  008456  90D8               	bcf	status,0,c
  8263  008458  3616               	rlcf	___awdiv@divisor^0,f,c
  8264  00845A  3617               	rlcf	(___awdiv@divisor+1)^0,f,c
  8265  00845C  2A18               	incf	___awdiv@counter^0,f,c
  8266  00845E                     l21095:
  8267  00845E  AE17               	btfss	(___awdiv@divisor+1)^0,7,c
  8268  008460  D7FA               	goto	l21093
  8269  008462                     u24310:
  8270  008462  90D8               	bcf	status,0,c
  8271  008464  361A               	rlcf	___awdiv@quotient^0,f,c
  8272  008466  361B               	rlcf	(___awdiv@quotient+1)^0,f,c
  8273  008468  5016               	movf	___awdiv@divisor^0,w,c
  8274  00846A  5C14               	subwf	___awdiv@dividend^0,w,c
  8275  00846C  5017               	movf	(___awdiv@divisor+1)^0,w,c
  8276  00846E  5815               	subwfb	(___awdiv@dividend+1)^0,w,c
  8277  008470  A0D8               	btfss	status,0,c
  8278  008472  D005               	goto	l21105
  8279  008474  5016               	movf	___awdiv@divisor^0,w,c
  8280  008476  5E14               	subwf	___awdiv@dividend^0,f,c
  8281  008478  5017               	movf	(___awdiv@divisor+1)^0,w,c
  8282  00847A  5A15               	subwfb	(___awdiv@dividend+1)^0,f,c
  8283  00847C  801A               	bsf	___awdiv@quotient^0,0,c
  8284  00847E                     l21105:
  8285  00847E  90D8               	bcf	status,0,c
  8286  008480  3217               	rrcf	(___awdiv@divisor+1)^0,f,c
  8287  008482  3216               	rrcf	___awdiv@divisor^0,f,c
  8288  008484  2E18               	decfsz	___awdiv@counter^0,f,c
  8289  008486  D7ED               	goto	u24310
  8290  008488                     l21109:
  8291  008488  5019               	movf	___awdiv@sign^0,w,c
  8292  00848A  B4D8               	btfsc	status,2,c
  8293  00848C  D004               	goto	l21113
  8294  00848E  6C1A               	negf	___awdiv@quotient^0,c
  8295  008490  1E1B               	comf	(___awdiv@quotient+1)^0,f,c
  8296  008492  B0D8               	btfsc	status,0,c
  8297  008494  2A1B               	incf	(___awdiv@quotient+1)^0,f,c
  8298  008496                     l21113:
  8299  008496  C01A  F014         	movff	___awdiv@quotient,?___awdiv
  8300  00849A  C01B  F015         	movff	___awdiv@quotient+1,?___awdiv+1
  8301  00849E  0012               	return		;funcret
  8302  0084A0                     __end_of___awdiv:
  8303                           	callstack 0
  8304                           
  8305 ;; *************** function _SetSegmentValueMain *****************
  8306 ;; Defined at:
  8307 ;;		line 104 in file "outputs_MC50.c"
  8308 ;; Parameters:    Size  Location     Type
  8309 ;;  d1              1    wreg     unsigned char 
  8310 ;;  d2              1   27[COMRAM] unsigned char 
  8311 ;; Auto vars:     Size  Location     Type
  8312 ;;  d1              1   28[COMRAM] unsigned char 
  8313 ;; Return value:  Size  Location     Type
  8314 ;;                  1    wreg      void 
  8315 ;; Registers used:
  8316 ;;		wreg, status,2
  8317 ;; Tracked objects:
  8318 ;;		On entry : 0/0
  8319 ;;		On exit  : 3F/0
  8320 ;;		Unchanged: 0/0
  8321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8322 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8323 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8325 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8326 ;;Total ram usage:        2 bytes
  8327 ;; Hardware stack levels used: 1
  8328 ;; Hardware stack levels required when called: 4
  8329 ;; This function calls:
  8330 ;;		Nothing
  8331 ;; This function is called by:
  8332 ;;		_sm_execute_main
  8333 ;;		_sm_execute_menuConfiguration
  8334 ;;		_load_New_Menu
  8335 ;;		_controlSelectRemote
  8336 ;;		_controlSaveRemote
  8337 ;; This function uses a non-reentrant model
  8338 ;;
  8339                           
  8340                           	psect	text12
  8341  009B96                     __ptext12:
  8342                           	callstack 0
  8343  009B96                     _SetSegmentValueMain:
  8344                           	callstack 22
  8345                           
  8346                           ;incstack = 0
  8347                           ;SetSegmentValueMain@d1 stored from wreg
  8348  009B96  6E1D               	movwf	SetSegmentValueMain@d1^0,c
  8349                           
  8350                           ;outputs_MC50.c: 104: void SetSegmentValueMain(char d1, char d2);outputs_MC50.c: 105: {;
      +                          outputs_MC50.c: 106:     dispStruct.display_grp.value_display1=d1;
  8351  009B98  C01D  F072         	movff	SetSegmentValueMain@d1,_dispStruct	;volatile
  8352                           
  8353                           ;outputs_MC50.c: 107:     dispStruct.display_grp.value_display2=d2;
  8354  009B9C  C01C  F073         	movff	SetSegmentValueMain@d2,_dispStruct+1	;volatile
  8355                           
  8356                           ;outputs_MC50.c: 108:     dispStruct.intermitentFreq=0;
  8357  009BA0  0E00               	movlw	0
  8358  009BA2  0100               	movlb	0	; () banked
  8359  009BA4  6F76               	movwf	(_dispStruct+4)& (0+255),b	;volatile
  8360  009BA6  0E00               	movlw	0
  8361  009BA8  6F75               	movwf	(_dispStruct+3)& (0+255),b	;volatile
  8362                           
  8363                           ; BSR set to: 0
  8364                           ;outputs_MC50.c: 109:     dispStruct.upFase=0;
  8365  009BAA  0E00               	movlw	0
  8366  009BAC  6F77               	movwf	(_dispStruct+5)& (0+255),b	;volatile
  8367                           
  8368                           ; BSR set to: 0
  8369  009BAE  0012               	return		;funcret
  8370  009BB0                     __end_of_SetSegmentValueMain:
  8371                           	callstack 0
  8372                           
  8373 ;; *************** function _ClearFlag_rfCMD *****************
  8374 ;; Defined at:
  8375 ;;		line 463 in file "inputs_MC50.c"
  8376 ;; Parameters:    Size  Location     Type
  8377 ;;		None
  8378 ;; Auto vars:     Size  Location     Type
  8379 ;;		None
  8380 ;; Return value:  Size  Location     Type
  8381 ;;                  1    wreg      void 
  8382 ;; Registers used:
  8383 ;;		wreg, status,2
  8384 ;; Tracked objects:
  8385 ;;		On entry : 0/1
  8386 ;;		On exit  : 0/0
  8387 ;;		Unchanged: 0/0
  8388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8392 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8393 ;;Total ram usage:        0 bytes
  8394 ;; Hardware stack levels used: 1
  8395 ;; Hardware stack levels required when called: 4
  8396 ;; This function calls:
  8397 ;;		Nothing
  8398 ;; This function is called by:
  8399 ;;		_sm_execute_menuConfiguration
  8400 ;;		_controlSelectRemote
  8401 ;;		_controlSaveRemote
  8402 ;; This function uses a non-reentrant model
  8403 ;;
  8404                           
  8405                           	psect	text13
  8406  009E3C                     __ptext13:
  8407                           	callstack 0
  8408  009E3C                     _ClearFlag_rfCMD:
  8409                           	callstack 23
  8410                           
  8411                           ;inputs_MC50.c: 464:     rfCMD.processed=1;
  8412                           
  8413                           ; BSR set to: 0
  8414                           ;incstack = 0
  8415  009E3C  0E01               	movlw	1
  8416  009E3E  6E45               	movwf	(_rfCMD+10)^0,c	;volatile
  8417  009E40  0012               	return		;funcret
  8418  009E42                     __end_of_ClearFlag_rfCMD:
  8419                           	callstack 0
  8420                           
  8421 ;; *************** function _controlLearnDigit *****************
  8422 ;; Defined at:
  8423 ;;		line 1237 in file "sm_MenuConfiguration_MC50.c"
  8424 ;; Parameters:    Size  Location     Type
  8425 ;;		None
  8426 ;; Auto vars:     Size  Location     Type
  8427 ;;		None
  8428 ;; Return value:  Size  Location     Type
  8429 ;;                  1    wreg      void 
  8430 ;; Registers used:
  8431 ;;		wreg, status,2, status,0, cstack
  8432 ;; Tracked objects:
  8433 ;;		On entry : 3F/0
  8434 ;;		On exit  : 3E/0
  8435 ;;		Unchanged: 0/0
  8436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8438 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8440 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8441 ;;Total ram usage:        0 bytes
  8442 ;; Hardware stack levels used: 1
  8443 ;; Hardware stack levels required when called: 5
  8444 ;; This function calls:
  8445 ;;		_SetSegmentValueLearn
  8446 ;; This function is called by:
  8447 ;;		_sm_execute_menuConfiguration
  8448 ;; This function uses a non-reentrant model
  8449 ;;
  8450                           
  8451                           	psect	text14
  8452  0096B8                     __ptext14:
  8453                           	callstack 0
  8454  0096B8                     _controlLearnDigit:
  8455                           	callstack 23
  8456                           
  8457                           ; BSR set to: 0
  8458                           ;sm_MenuConfiguration_MC50.c: 1239:     if(ts_system.timeSinalizationDigit<=0 )
  8459                           
  8460                           ;incstack = 0
  8461  0096B8  0101               	movlb	1	; () banked
  8462  0096BA  BFAC               	btfsc	(_ts_system+13)& (0+255),7,b	;volatile
  8463  0096BC  D005               	goto	u25910
  8464  0096BE  51AC               	movf	(_ts_system+13)& (0+255),w,b	;volatile
  8465  0096C0  E112               	bnz	l3499
  8466  0096C2  05AB               	decf	(_ts_system+12)& (0+255),w,b	;volatile
  8467  0096C4  B0D8               	btfsc	status,0,c
  8468  0096C6  0012               	return	
  8469  0096C8                     u25910:
  8470                           
  8471                           ; BSR set to: 1
  8472                           ;sm_MenuConfiguration_MC50.c: 1240:     {;sm_MenuConfiguration_MC50.c: 1241:         ts_
      +                          system.timeSinalizationDigit=( 100/50);
  8473  0096C8  0E00               	movlw	0
  8474  0096CA  6FAC               	movwf	(_ts_system+13)& (0+255),b	;volatile
  8475  0096CC  0E02               	movlw	2
  8476  0096CE  6FAB               	movwf	(_ts_system+12)& (0+255),b	;volatile
  8477                           
  8478                           ; BSR set to: 1
  8479                           ;sm_MenuConfiguration_MC50.c: 1242:         if(var_sys.StateMotor==InClose)
  8480  0096D0  0E03               	movlw	3
  8481  0096D2  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
  8482  0096D4  A4D8               	btfss	status,2,c
  8483  0096D6  D004               	goto	l22435
  8484                           
  8485                           ; BSR set to: 1
  8486                           ;sm_MenuConfiguration_MC50.c: 1243:         {;sm_MenuConfiguration_MC50.c: 1244:        
      +                               SetSegmentValueLearn(Left);
  8487  0096D8  0E00               	movlw	0
  8488  0096DA  ECD5  F03A         	call	_SetSegmentValueLearn
  8489                           
  8490                           ;sm_MenuConfiguration_MC50.c: 1245:         }
  8491  0096DE  0012               	return	
  8492  0096E0                     l22435:
  8493                           
  8494                           ; BSR set to: 1
  8495                           ;sm_MenuConfiguration_MC50.c: 1247:         {;sm_MenuConfiguration_MC50.c: 1248:        
      +                               SetSegmentValueLearn(Rigth);
  8496  0096E0  0E01               	movlw	1
  8497  0096E2  ECD5  F03A         	call	_SetSegmentValueLearn
  8498  0096E6                     l3499:
  8499  0096E6  0012               	return		;funcret
  8500  0096E8                     __end_of_controlLearnDigit:
  8501                           	callstack 0
  8502                           
  8503 ;; *************** function _SetSegmentValueLearn *****************
  8504 ;; Defined at:
  8505 ;;		line 124 in file "outputs_MC50.c"
  8506 ;; Parameters:    Size  Location     Type
  8507 ;;  direction       1    wreg     enum E10602
  8508 ;; Auto vars:     Size  Location     Type
  8509 ;;  direction       1   17[COMRAM] enum E10602
  8510 ;; Return value:  Size  Location     Type
  8511 ;;                  1    wreg      void 
  8512 ;; Registers used:
  8513 ;;		wreg, status,2, status,0
  8514 ;; Tracked objects:
  8515 ;;		On entry : 3F/1
  8516 ;;		On exit  : 3F/0
  8517 ;;		Unchanged: 0/0
  8518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8519 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8520 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8521 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8522 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8523 ;;Total ram usage:        3 bytes
  8524 ;; Hardware stack levels used: 1
  8525 ;; Hardware stack levels required when called: 4
  8526 ;; This function calls:
  8527 ;;		Nothing
  8528 ;; This function is called by:
  8529 ;;		_controlLearnDigit
  8530 ;; This function uses a non-reentrant model
  8531 ;;
  8532                           
  8533                           	psect	text15
  8534  0075AA                     __ptext15:
  8535                           	callstack 0
  8536  0075AA                     _SetSegmentValueLearn:
  8537                           	callstack 23
  8538                           
  8539                           ;incstack = 0
  8540                           ;SetSegmentValueLearn@direction stored from wreg
  8541  0075AA  6E12               	movwf	SetSegmentValueLearn@direction^0,c
  8542                           
  8543                           ;outputs_MC50.c: 124: void SetSegmentValueLearn(Direction_en direction);outputs_MC50.c: 
      +                          125: {;outputs_MC50.c: 126:     dispStruct.intermitentFreq=0;
  8544  0075AC  0E00               	movlw	0
  8545  0075AE  0100               	movlb	0	; () banked
  8546  0075B0  6F76               	movwf	(_dispStruct+4)& (0+255),b	;volatile
  8547  0075B2  0E00               	movlw	0
  8548  0075B4  6F75               	movwf	(_dispStruct+3)& (0+255),b	;volatile
  8549                           
  8550                           ;outputs_MC50.c: 127:     dispStruct.upFase=0;
  8551  0075B6  0E00               	movlw	0
  8552  0075B8  6F77               	movwf	(_dispStruct+5)& (0+255),b	;volatile
  8553                           
  8554                           ;outputs_MC50.c: 128:     switch (direction)
  8555  0075BA  D066               	goto	l20919
  8556  0075BC                     l20865:
  8557                           
  8558                           ; BSR set to: 0
  8559                           ;outputs_MC50.c: 131:             if(dispStruct.display_grp.value_display1==sA && dispSt
      +                          ruct.display_grp.value_display2==dBlank)
  8560  0075BC  0E1A               	movlw	26
  8561  0075BE  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8562  0075C0  A4D8               	btfss	status,2,c
  8563  0075C2  D009               	goto	l20871
  8564                           
  8565                           ; BSR set to: 0
  8566  0075C4  0E20               	movlw	32
  8567  0075C6  1973               	xorwf	(_dispStruct+1)& (0+255),w,b	;volatile
  8568  0075C8  A4D8               	btfss	status,2,c
  8569  0075CA  D005               	goto	l20871
  8570                           
  8571                           ; BSR set to: 0
  8572                           ;outputs_MC50.c: 132:             {;outputs_MC50.c: 133:                dispStruct.displ
      +                          ay_grp.value_display1=dBlank;
  8573  0075CC  0E20               	movlw	32
  8574  0075CE  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8575                           
  8576                           ;outputs_MC50.c: 134:                dispStruct.display_grp.value_display2=sA;
  8577  0075D0  0E1A               	movlw	26
  8578  0075D2  6F73               	movwf	(_dispStruct+1)& (0+255),b	;volatile
  8579                           
  8580                           ;outputs_MC50.c: 135:             }
  8581  0075D4  0012               	return	
  8582  0075D6                     l20871:
  8583                           
  8584                           ; BSR set to: 0
  8585  0075D6  0E20               	movlw	32
  8586  0075D8  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8587  0075DA  A4D8               	btfss	status,2,c
  8588  0075DC  D009               	goto	l20877
  8589                           
  8590                           ; BSR set to: 0
  8591  0075DE  0E1D               	movlw	29
  8592  0075E0  1973               	xorwf	(_dispStruct+1)& (0+255),w,b	;volatile
  8593  0075E2  A4D8               	btfss	status,2,c
  8594  0075E4  D005               	goto	l20877
  8595                           
  8596                           ; BSR set to: 0
  8597                           ;outputs_MC50.c: 137:             {;outputs_MC50.c: 138:                dispStruct.displ
      +                          ay_grp.value_display1=sD;
  8598  0075E6  0E1D               	movlw	29
  8599  0075E8  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8600                           
  8601                           ;outputs_MC50.c: 139:                dispStruct.display_grp.value_display2=dBlank;
  8602  0075EA  0E20               	movlw	32
  8603  0075EC  6F73               	movwf	(_dispStruct+1)& (0+255),b	;volatile
  8604                           
  8605                           ;outputs_MC50.c: 140:             }
  8606  0075EE  0012               	return	
  8607  0075F0                     l20877:
  8608                           
  8609                           ; BSR set to: 0
  8610  0075F0  0E1F               	movlw	31
  8611  0075F2  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8612  0075F4  A4D8               	btfss	status,2,c
  8613  0075F6  D005               	goto	l20881
  8614                           
  8615                           ; BSR set to: 0
  8616                           ;outputs_MC50.c: 142:             {;outputs_MC50.c: 143:                dispStruct.displ
      +                          ay_grp.value_display1=sA;
  8617  0075F8  0E1A               	movlw	26
  8618  0075FA  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8619                           
  8620                           ;outputs_MC50.c: 144:                dispStruct.display_grp.value_display2=dBlank;
  8621  0075FC  0E20               	movlw	32
  8622  0075FE  6F73               	movwf	(_dispStruct+1)& (0+255),b	;volatile
  8623                           
  8624                           ;outputs_MC50.c: 145:             }
  8625  007600  0012               	return	
  8626  007602                     l20881:
  8627                           
  8628                           ; BSR set to: 0
  8629  007602  0E20               	movlw	32
  8630  007604  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8631  007606  A4D8               	btfss	status,2,c
  8632  007608  D002               	goto	l20885
  8633                           
  8634                           ; BSR set to: 0
  8635                           ;outputs_MC50.c: 147:             {;outputs_MC50.c: 148:                dispStruct.displ
      +                          ay_grp.value_display2++;
  8636  00760A  2B73               	incf	(_dispStruct+1)& (0+255),f,b	;volatile
  8637                           
  8638                           ;outputs_MC50.c: 149:             }
  8639  00760C  0012               	return	
  8640  00760E                     l20885:
  8641                           
  8642                           ; BSR set to: 0
  8643  00760E  0E20               	movlw	32
  8644  007610  1973               	xorwf	(_dispStruct+1)& (0+255),w,b	;volatile
  8645  007612  A4D8               	btfss	status,2,c
  8646  007614  D002               	goto	l20889
  8647                           
  8648                           ; BSR set to: 0
  8649                           ;outputs_MC50.c: 151:             {;outputs_MC50.c: 152:                dispStruct.displ
      +                          ay_grp.value_display1++;
  8650  007616  2B72               	incf	_dispStruct& (0+255),f,b	;volatile
  8651                           
  8652                           ;outputs_MC50.c: 153:             }
  8653  007618  0012               	return	
  8654  00761A                     l20889:
  8655                           
  8656                           ; BSR set to: 0
  8657                           ;outputs_MC50.c: 155:             {;outputs_MC50.c: 156:                dispStruct.displ
      +                          ay_grp.value_display1=sA;
  8658  00761A  0E1A               	movlw	26
  8659  00761C  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8660                           
  8661                           ;outputs_MC50.c: 157:                dispStruct.display_grp.value_display2=dBlank;
  8662  00761E  0E20               	movlw	32
  8663  007620  6F73               	movwf	(_dispStruct+1)& (0+255),b	;volatile
  8664  007622  0012               	return	
  8665  007624                     l20891:
  8666                           
  8667                           ; BSR set to: 0
  8668                           ;outputs_MC50.c: 161:             if(dispStruct.display_grp.value_display2==sA && dispSt
      +                          ruct.display_grp.value_display1==dBlank)
  8669  007624  0E1A               	movlw	26
  8670  007626  1973               	xorwf	(_dispStruct+1)& (0+255),w,b	;volatile
  8671  007628  A4D8               	btfss	status,2,c
  8672  00762A  D009               	goto	l20897
  8673                           
  8674                           ; BSR set to: 0
  8675  00762C  0E20               	movlw	32
  8676  00762E  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8677  007630  A4D8               	btfss	status,2,c
  8678  007632  D005               	goto	l20897
  8679                           
  8680                           ; BSR set to: 0
  8681                           ;outputs_MC50.c: 162:             {;outputs_MC50.c: 163:                dispStruct.displ
      +                          ay_grp.value_display1=sA;
  8682  007634  0E1A               	movlw	26
  8683  007636  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8684                           
  8685                           ;outputs_MC50.c: 164:                dispStruct.display_grp.value_display2=dBlank;
  8686  007638  0E20               	movlw	32
  8687  00763A  6F73               	movwf	(_dispStruct+1)& (0+255),b	;volatile
  8688                           
  8689                           ;outputs_MC50.c: 165:             }
  8690  00763C  0012               	return	
  8691  00763E                     l20897:
  8692                           
  8693                           ; BSR set to: 0
  8694  00763E  0E20               	movlw	32
  8695  007640  1973               	xorwf	(_dispStruct+1)& (0+255),w,b	;volatile
  8696  007642  A4D8               	btfss	status,2,c
  8697  007644  D009               	goto	l20903
  8698                           
  8699                           ; BSR set to: 0
  8700  007646  0E1D               	movlw	29
  8701  007648  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8702  00764A  A4D8               	btfss	status,2,c
  8703  00764C  D005               	goto	l20903
  8704                           
  8705                           ; BSR set to: 0
  8706                           ;outputs_MC50.c: 167:             {;outputs_MC50.c: 168:                dispStruct.displ
      +                          ay_grp.value_display1=dBlank;
  8707  00764E  0E20               	movlw	32
  8708  007650  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8709                           
  8710                           ;outputs_MC50.c: 169:                dispStruct.display_grp.value_display2=sD;
  8711  007652  0E1D               	movlw	29
  8712  007654  6F73               	movwf	(_dispStruct+1)& (0+255),b	;volatile
  8713                           
  8714                           ;outputs_MC50.c: 170:             }
  8715  007656  0012               	return	
  8716  007658                     l20903:
  8717                           
  8718                           ; BSR set to: 0
  8719  007658  0E1A               	movlw	26
  8720  00765A  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8721  00765C  A4D8               	btfss	status,2,c
  8722  00765E  D003               	goto	l20907
  8723                           
  8724                           ; BSR set to: 0
  8725                           ;outputs_MC50.c: 172:             {;outputs_MC50.c: 173:                dispStruct.displ
      +                          ay_grp.value_display1=sF;
  8726  007660  0E1F               	movlw	31
  8727  007662  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8728                           
  8729                           ;outputs_MC50.c: 174:             }
  8730  007664  0012               	return	
  8731  007666                     l20907:
  8732                           
  8733                           ; BSR set to: 0
  8734  007666  0E20               	movlw	32
  8735  007668  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8736  00766A  A4D8               	btfss	status,2,c
  8737  00766C  D002               	goto	l20911
  8738                           
  8739                           ; BSR set to: 0
  8740                           ;outputs_MC50.c: 176:             {;outputs_MC50.c: 177:                dispStruct.displ
      +                          ay_grp.value_display2--;
  8741  00766E  0773               	decf	(_dispStruct+1)& (0+255),f,b	;volatile
  8742                           
  8743                           ;outputs_MC50.c: 178:             }
  8744  007670  0012               	return	
  8745  007672                     l20911:
  8746                           
  8747                           ; BSR set to: 0
  8748  007672  0E20               	movlw	32
  8749  007674  1973               	xorwf	(_dispStruct+1)& (0+255),w,b	;volatile
  8750  007676  A4D8               	btfss	status,2,c
  8751  007678  D002               	goto	l20915
  8752                           
  8753                           ; BSR set to: 0
  8754                           ;outputs_MC50.c: 180:             {;outputs_MC50.c: 181:                dispStruct.displ
      +                          ay_grp.value_display1--;
  8755  00767A  0772               	decf	_dispStruct& (0+255),f,b	;volatile
  8756                           
  8757                           ;outputs_MC50.c: 182:             }
  8758  00767C  0012               	return	
  8759  00767E                     l20915:
  8760                           
  8761                           ; BSR set to: 0
  8762                           ;outputs_MC50.c: 184:             {;outputs_MC50.c: 185:                dispStruct.displ
      +                          ay_grp.value_display1=sA;
  8763  00767E  0E1A               	movlw	26
  8764  007680  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8765                           
  8766                           ;outputs_MC50.c: 186:                dispStruct.display_grp.value_display2=dBlank;
  8767  007682  0E20               	movlw	32
  8768  007684  6F73               	movwf	(_dispStruct+1)& (0+255),b	;volatile
  8769  007686  0012               	return	
  8770  007688                     l20919:
  8771                           
  8772                           ; BSR set to: 0
  8773  007688  5012               	movf	SetSegmentValueLearn@direction^0,w,c
  8774  00768A  6E10               	movwf	??_SetSegmentValueLearn^0,c
  8775  00768C  6A11               	clrf	(??_SetSegmentValueLearn+1)^0,c
  8776                           
  8777                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8778                           ; Switch size 1, requested type "simple"
  8779                           ; Number of cases is 1, Range of values is 0 to 0
  8780                           ; switch strategies available:
  8781                           ; Name         Instructions Cycles
  8782                           ; simple_byte            4     3 (average)
  8783                           ;	Chosen strategy is simple_byte
  8784  00768E  5011               	movf	(??_SetSegmentValueLearn+1)^0,w,c
  8785  007690  0A00               	xorlw	0	; case 0
  8786  007692  A4D8               	btfss	status,2,c
  8787  007694  0012               	return	
  8788                           
  8789                           ; BSR set to: 0
  8790                           ; Switch size 1, requested type "simple"
  8791                           ; Number of cases is 2, Range of values is 0 to 1
  8792                           ; switch strategies available:
  8793                           ; Name         Instructions Cycles
  8794                           ; simple_byte            7     4 (average)
  8795                           ;	Chosen strategy is simple_byte
  8796  007696  5010               	movf	??_SetSegmentValueLearn^0,w,c
  8797  007698  0A00               	xorlw	0	; case 0
  8798  00769A  B4D8               	btfsc	status,2,c
  8799  00769C  D7C3               	goto	l20891
  8800  00769E  0A01               	xorlw	1	; case 1
  8801  0076A0  A4D8               	btfss	status,2,c
  8802  0076A2  0012               	return	
  8803  0076A4  D78B               	goto	l20865
  8804  0076A6                     __end_of_SetSegmentValueLearn:
  8805                           	callstack 0
  8806                           
  8807 ;; *************** function ___lldiv *****************
  8808 ;; Defined at:
  8809 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\__lldiv.c"
  8810 ;; Parameters:    Size  Location     Type
  8811 ;;  dividend        4   15[COMRAM] unsigned long 
  8812 ;;  divisor         4   19[COMRAM] unsigned long 
  8813 ;; Auto vars:     Size  Location     Type
  8814 ;;  quotient        4   23[COMRAM] unsigned long 
  8815 ;;  counter         1   27[COMRAM] unsigned char 
  8816 ;; Return value:  Size  Location     Type
  8817 ;;                  4   15[COMRAM] unsigned long 
  8818 ;; Registers used:
  8819 ;;		wreg, status,2, status,0
  8820 ;; Tracked objects:
  8821 ;;		On entry : 0/1
  8822 ;;		On exit  : 0/0
  8823 ;;		Unchanged: 0/0
  8824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8825 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8826 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8828 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8829 ;;Total ram usage:       13 bytes
  8830 ;; Hardware stack levels used: 1
  8831 ;; Hardware stack levels required when called: 4
  8832 ;; This function calls:
  8833 ;;		Nothing
  8834 ;; This function is called by:
  8835 ;;		_sm_execute_menuConfiguration
  8836 ;; This function uses a non-reentrant model
  8837 ;;
  8838                           
  8839                           	psect	text16
  8840  008524                     __ptext16:
  8841                           	callstack 0
  8842  008524                     ___lldiv:
  8843                           	callstack 24
  8844                           
  8845                           ; BSR set to: 0
  8846                           ;incstack = 0
  8847  008524  0E00               	movlw	0
  8848  008526  6E18               	movwf	___lldiv@quotient^0,c
  8849  008528  0E00               	movlw	0
  8850  00852A  6E19               	movwf	(___lldiv@quotient+1)^0,c
  8851  00852C  0E00               	movlw	0
  8852  00852E  6E1A               	movwf	(___lldiv@quotient+2)^0,c
  8853  008530  0E00               	movlw	0
  8854  008532  6E1B               	movwf	(___lldiv@quotient+3)^0,c
  8855  008534  5014               	movf	___lldiv@divisor^0,w,c
  8856  008536  1015               	iorwf	(___lldiv@divisor+1)^0,w,c
  8857  008538  1016               	iorwf	(___lldiv@divisor+2)^0,w,c
  8858  00853A  1017               	iorwf	(___lldiv@divisor+3)^0,w,c
  8859  00853C  B4D8               	btfsc	status,2,c
  8860  00853E  D02A               	goto	l3815
  8861  008540  0E01               	movlw	1
  8862  008542  6E1C               	movwf	___lldiv@counter^0,c
  8863  008544  D006               	goto	l22455
  8864  008546                     l22453:
  8865  008546  90D8               	bcf	status,0,c
  8866  008548  3614               	rlcf	___lldiv@divisor^0,f,c
  8867  00854A  3615               	rlcf	(___lldiv@divisor+1)^0,f,c
  8868  00854C  3616               	rlcf	(___lldiv@divisor+2)^0,f,c
  8869  00854E  3617               	rlcf	(___lldiv@divisor+3)^0,f,c
  8870  008550  2A1C               	incf	___lldiv@counter^0,f,c
  8871  008552                     l22455:
  8872  008552  AE17               	btfss	(___lldiv@divisor+3)^0,7,c
  8873  008554  D7F8               	goto	l22453
  8874  008556                     u25950:
  8875  008556  90D8               	bcf	status,0,c
  8876  008558  3618               	rlcf	___lldiv@quotient^0,f,c
  8877  00855A  3619               	rlcf	(___lldiv@quotient+1)^0,f,c
  8878  00855C  361A               	rlcf	(___lldiv@quotient+2)^0,f,c
  8879  00855E  361B               	rlcf	(___lldiv@quotient+3)^0,f,c
  8880  008560  5014               	movf	___lldiv@divisor^0,w,c
  8881  008562  5C10               	subwf	___lldiv@dividend^0,w,c
  8882  008564  5015               	movf	(___lldiv@divisor+1)^0,w,c
  8883  008566  5811               	subwfb	(___lldiv@dividend+1)^0,w,c
  8884  008568  5016               	movf	(___lldiv@divisor+2)^0,w,c
  8885  00856A  5812               	subwfb	(___lldiv@dividend+2)^0,w,c
  8886  00856C  5017               	movf	(___lldiv@divisor+3)^0,w,c
  8887  00856E  5813               	subwfb	(___lldiv@dividend+3)^0,w,c
  8888  008570  A0D8               	btfss	status,0,c
  8889  008572  D009               	goto	l22465
  8890  008574  5014               	movf	___lldiv@divisor^0,w,c
  8891  008576  5E10               	subwf	___lldiv@dividend^0,f,c
  8892  008578  5015               	movf	(___lldiv@divisor+1)^0,w,c
  8893  00857A  5A11               	subwfb	(___lldiv@dividend+1)^0,f,c
  8894  00857C  5016               	movf	(___lldiv@divisor+2)^0,w,c
  8895  00857E  5A12               	subwfb	(___lldiv@dividend+2)^0,f,c
  8896  008580  5017               	movf	(___lldiv@divisor+3)^0,w,c
  8897  008582  5A13               	subwfb	(___lldiv@dividend+3)^0,f,c
  8898  008584  8018               	bsf	___lldiv@quotient^0,0,c
  8899  008586                     l22465:
  8900  008586  90D8               	bcf	status,0,c
  8901  008588  3217               	rrcf	(___lldiv@divisor+3)^0,f,c
  8902  00858A  3216               	rrcf	(___lldiv@divisor+2)^0,f,c
  8903  00858C  3215               	rrcf	(___lldiv@divisor+1)^0,f,c
  8904  00858E  3214               	rrcf	___lldiv@divisor^0,f,c
  8905  008590  2E1C               	decfsz	___lldiv@counter^0,f,c
  8906  008592  D7E1               	goto	u25950
  8907  008594                     l3815:
  8908  008594  C018  F010         	movff	___lldiv@quotient,?___lldiv
  8909  008598  C019  F011         	movff	___lldiv@quotient+1,?___lldiv+1
  8910  00859C  C01A  F012         	movff	___lldiv@quotient+2,?___lldiv+2
  8911  0085A0  C01B  F013         	movff	___lldiv@quotient+3,?___lldiv+3
  8912  0085A4  0012               	return		;funcret
  8913  0085A6                     __end_of___lldiv:
  8914                           	callstack 0
  8915                           
  8916 ;; *************** function _sm_execute_ControlGate *****************
  8917 ;; Defined at:
  8918 ;;		line 128 in file "sm_ControlGate_MC50.c"
  8919 ;; Parameters:    Size  Location     Type
  8920 ;;  psm             2   15[BANK0 ] PTR struct .
  8921 ;;		 -> controlGate_stateMachine(11), 
  8922 ;; Auto vars:     Size  Location     Type
  8923 ;;  typeOpenOrde    1   19[BANK0 ] enum E10372
  8924 ;; Return value:  Size  Location     Type
  8925 ;;                  1    wreg      void 
  8926 ;; Registers used:
  8927 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  8928 ;; Tracked objects:
  8929 ;;		On entry : 3F/0
  8930 ;;		On exit  : 0/0
  8931 ;;		Unchanged: 0/0
  8932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8933 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8934 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8935 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8936 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8937 ;;Total ram usage:        5 bytes
  8938 ;; Hardware stack levels used: 1
  8939 ;; Hardware stack levels required when called: 15
  8940 ;; This function calls:
  8941 ;;		_GetOpenOrder
  8942 ;;		_SetSegmentValueIntermitent
  8943 ;;		_WaitPreFlash
  8944 ;;		_actionZone_Closed
  8945 ;;		_actionZone_Closing
  8946 ;;		_actionZone_Opened
  8947 ;;		_actionZone_Opening
  8948 ;;		_sm_execute_ControlLearning
  8949 ;;		_sm_send_event
  8950 ;; This function is called by:
  8951 ;;		_main
  8952 ;; This function uses a non-reentrant model
  8953 ;;
  8954                           
  8955                           	psect	text17
  8956  004238                     __ptext17:
  8957                           	callstack 0
  8958  004238                     _sm_execute_ControlGate:
  8959                           	callstack 15
  8960                           
  8961                           ; BSR set to: 0
  8962                           ;sm_ControlGate_MC50.c: 129:     TypeCMD typeOpenOrder;;sm_ControlGate_MC50.c: 133:     
      +                          if ( (main_stateMachine.current_state == st_MenuConfiguration) && (menuConfiguration_sta
      +                          teMachine.current_state != st_LearningMode) )
  8963                           
  8964                           ;incstack = 0
  8965  004238  0101               	movlb	1	; () banked
  8966  00423A  05F2               	decf	_main_stateMachine& (0+255),w,b
  8967  00423C  11F3               	iorwf	(_main_stateMachine+1)& (0+255),w,b
  8968  00423E  A4D8               	btfss	status,2,c
  8969  004240  D006               	goto	l25941
  8970                           
  8971                           ; BSR set to: 1
  8972  004242  0E06               	movlw	6
  8973  004244  0102               	movlb	2	; () banked
  8974  004246  19BB               	xorwf	_menuConfiguration_stateMachine& (0+255),w,b
  8975  004248  11BC               	iorwf	(_menuConfiguration_stateMachine+1)& (0+255),w,b
  8976  00424A  A4D8               	btfss	status,2,c
  8977  00424C  0012               	return	
  8978  00424E                     l25941:
  8979                           
  8980                           ;sm_ControlGate_MC50.c: 137:         if (var_sys.preflashingcontrol == YES){
  8981  00424E  0101               	movlb	1	; () banked
  8982  004250  051D               	decf	(_var_sys+29)& (0+255),w,b	;volatile
  8983  004252  A4D8               	btfss	status,2,c
  8984  004254  D0CE               	goto	l26015
  8985                           
  8986                           ; BSR set to: 1
  8987                           ;sm_ControlGate_MC50.c: 139:         WaitPreFlash();
  8988  004256  ECBA  F044         	call	_WaitPreFlash	;wreg free
  8989  00425A  D0CB               	goto	l26015
  8990  00425C                     l25945:
  8991                           
  8992                           ; BSR set to: 0
  8993                           ;sm_ControlGate_MC50.c: 145:         {;sm_ControlGate_MC50.c: 148:             if (psm->
      +                          last_event == ev_GateClosed) {
  8994  00425C  EE20 F004          	lfsr	2,4
  8995  004260  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  8996  004262  26D9               	addwf	fsr2l,f,c
  8997  004264  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  8998  004266  22DA               	addwfc	fsr2h,f,c
  8999  004268  0E0A               	movlw	10
  9000  00426A  18DE               	xorwf	postinc2,w,c
  9001  00426C  10DE               	iorwf	postinc2,w,c
  9002  00426E  A4D8               	btfss	status,2,c
  9003  004270  D006               	goto	l25949
  9004  004272                     u32980:
  9005                           
  9006                           ; BSR set to: 0
  9007                           ;sm_ControlGate_MC50.c: 149:                 psm->current_state = st_Closed;
  9008  004272  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  9009  004276  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  9010  00427A  0E01               	movlw	1
  9011  00427C  D0B5               	goto	L55
  9012  00427E                     l25949:
  9013                           
  9014                           ; BSR set to: 0
  9015  00427E  EE20 F004          	lfsr	2,4
  9016  004282  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9017  004284  26D9               	addwf	fsr2l,f,c
  9018  004286  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9019  004288  22DA               	addwfc	fsr2h,f,c
  9020  00428A  0E0B               	movlw	11
  9021  00428C  18DE               	xorwf	postinc2,w,c
  9022  00428E  10DE               	iorwf	postinc2,w,c
  9023  004290  A4D8               	btfss	status,2,c
  9024  004292  D0CF               	goto	l26017
  9025  004294  D038               	goto	u33050
  9026  004296                     l25953:
  9027                           
  9028                           ; BSR set to: 0
  9029                           ;sm_ControlGate_MC50.c: 160:         {;sm_ControlGate_MC50.c: 161:             if (psm->
      +                          last_event == ev_OpenGate) {
  9030  004296  EE20 F004          	lfsr	2,4
  9031  00429A  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9032  00429C  26D9               	addwf	fsr2l,f,c
  9033  00429E  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9034  0042A0  22DA               	addwfc	fsr2h,f,c
  9035  0042A2  0E0C               	movlw	12
  9036  0042A4  18DE               	xorwf	postinc2,w,c
  9037  0042A6  10DE               	iorwf	postinc2,w,c
  9038  0042A8  A4D8               	btfss	status,2,c
  9039  0042AA  D072               	goto	l26001
  9040  0042AC                     u33000:
  9041                           
  9042                           ; BSR set to: 0
  9043                           ;sm_ControlGate_MC50.c: 162:                 psm->current_state = st_Opening;
  9044  0042AC  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  9045  0042B0  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  9046  0042B4  0E02               	movlw	2
  9047  0042B6  D098               	goto	L55
  9048  0042B8                     l25961:
  9049                           
  9050                           ; BSR set to: 0
  9051                           ;sm_ControlGate_MC50.c: 169:         {;sm_ControlGate_MC50.c: 170:             if (psm->
      +                          last_event == ev_StopGate) {
  9052  0042B8  EE20 F004          	lfsr	2,4
  9053  0042BC  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9054  0042BE  26D9               	addwf	fsr2l,f,c
  9055  0042C0  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9056  0042C2  22DA               	addwfc	fsr2h,f,c
  9057  0042C4  0E0D               	movlw	13
  9058  0042C6  18DE               	xorwf	postinc2,w,c
  9059  0042C8  10DE               	iorwf	postinc2,w,c
  9060  0042CA  B4D8               	btfsc	status,2,c
  9061  0042CC  D01C               	goto	u33050
  9062                           
  9063                           ; BSR set to: 0
  9064                           
  9065                           ;sm_ControlGate_MC50.c: 172:             } else if (psm->last_event == ev_CloseGate) {
  9066                           
  9067                           ; BSR set to: 0
  9068                           ;sm_ControlGate_MC50.c: 171:                 psm->current_state = st_Opened;
  9069  0042CE  EE20 F004          	lfsr	2,4
  9070  0042D2  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9071  0042D4  26D9               	addwf	fsr2l,f,c
  9072  0042D6  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9073  0042D8  22DA               	addwfc	fsr2h,f,c
  9074  0042DA  0E0E               	movlw	14
  9075  0042DC  18DE               	xorwf	postinc2,w,c
  9076  0042DE  10DE               	iorwf	postinc2,w,c
  9077  0042E0  A4D8               	btfss	status,2,c
  9078  0042E2  D02D               	goto	L129
  9079  0042E4                     u33030:
  9080                           
  9081                           ; BSR set to: 0
  9082                           ;sm_ControlGate_MC50.c: 173:                 psm->current_state = st_Closing;
  9083  0042E4  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  9084  0042E8  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  9085  0042EC  0E03               	movlw	3
  9086  0042EE  D07C               	goto	L55
  9087  0042F0                     l25973:
  9088                           
  9089                           ; BSR set to: 0
  9090                           ;sm_ControlGate_MC50.c: 180:         {;sm_ControlGate_MC50.c: 181:             if (psm->
      +                          last_event == ev_StopGate) {
  9091  0042F0  EE20 F004          	lfsr	2,4
  9092  0042F4  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9093  0042F6  26D9               	addwf	fsr2l,f,c
  9094  0042F8  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9095  0042FA  22DA               	addwfc	fsr2h,f,c
  9096  0042FC  0E0D               	movlw	13
  9097  0042FE  18DE               	xorwf	postinc2,w,c
  9098  004300  10DE               	iorwf	postinc2,w,c
  9099  004302  A4D8               	btfss	status,2,c
  9100  004304  D006               	goto	l25977
  9101  004306                     u33050:
  9102                           
  9103                           ; BSR set to: 0
  9104                           ;sm_ControlGate_MC50.c: 182:                 psm->current_state = st_Opened;
  9105  004306  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  9106  00430A  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  9107  00430E  0E04               	movlw	4
  9108  004310  D06B               	goto	L55
  9109  004312                     l25977:
  9110                           
  9111                           ; BSR set to: 0
  9112  004312  EE20 F004          	lfsr	2,4
  9113  004316  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9114  004318  26D9               	addwf	fsr2l,f,c
  9115  00431A  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9116  00431C  22DA               	addwfc	fsr2h,f,c
  9117  00431E  0E0F               	movlw	15
  9118  004320  18DE               	xorwf	postinc2,w,c
  9119  004322  10DE               	iorwf	postinc2,w,c
  9120  004324  B4D8               	btfsc	status,2,c
  9121  004326  D7A5               	goto	u32980
  9122                           
  9123                           ; BSR set to: 0
  9124                           
  9125                           ;sm_ControlGate_MC50.c: 185:             } else if (psm->last_event == ev_OpenGate) {
  9126                           
  9127                           ; BSR set to: 0
  9128                           ;sm_ControlGate_MC50.c: 184:                 psm->current_state = st_Closed;
  9129  004328  EE20 F004          	lfsr	2,4
  9130  00432C  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9131  00432E  26D9               	addwf	fsr2l,f,c
  9132  004330  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9133  004332  22DA               	addwfc	fsr2h,f,c
  9134  004334  0E0C               	movlw	12
  9135  004336  18DE               	xorwf	postinc2,w,c
  9136  004338  10DE               	iorwf	postinc2,w,c
  9137  00433A  B4D8               	btfsc	status,2,c
  9138  00433C  D7B7               	goto	u33000
  9139  00433E                     L129:
  9140                           
  9141                           ; BSR set to: 0
  9142                           
  9143                           ;sm_ControlGate_MC50.c: 187:             } else if (psm->last_event == ev_ErrorGate) {
  9144                           
  9145                           ; BSR set to: 0
  9146                           ;sm_ControlGate_MC50.c: 186:                 psm->current_state = st_Opening;
  9147  00433E  EE20 F004          	lfsr	2,4
  9148  004342  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9149  004344  26D9               	addwf	fsr2l,f,c
  9150  004346  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9151  004348  22DA               	addwfc	fsr2h,f,c
  9152  00434A  0E10               	movlw	16
  9153  00434C  D044               	goto	L126
  9154  00434E                     l25989:
  9155                           
  9156                           ; BSR set to: 0
  9157                           ;sm_ControlGate_MC50.c: 193:         {;sm_ControlGate_MC50.c: 194:             if (psm->
      +                          last_event == ev_CloseGate) {
  9158  00434E  EE20 F004          	lfsr	2,4
  9159  004352  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9160  004354  26D9               	addwf	fsr2l,f,c
  9161  004356  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9162  004358  22DA               	addwfc	fsr2h,f,c
  9163  00435A  0E0E               	movlw	14
  9164  00435C  18DE               	xorwf	postinc2,w,c
  9165  00435E  10DE               	iorwf	postinc2,w,c
  9166  004360  B4D8               	btfsc	status,2,c
  9167  004362  D7C0               	goto	u33030
  9168                           
  9169                           ; BSR set to: 0
  9170                           
  9171                           ;sm_ControlGate_MC50.c: 196:             } else if (psm->last_event == ev_OpenGate) {
  9172                           
  9173                           ; BSR set to: 0
  9174                           ;sm_ControlGate_MC50.c: 195:                 psm->current_state = st_Closing;
  9175  004364  EE20 F004          	lfsr	2,4
  9176  004368  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9177  00436A  26D9               	addwf	fsr2l,f,c
  9178  00436C  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9179  00436E  22DA               	addwfc	fsr2h,f,c
  9180  004370  0E0C               	movlw	12
  9181  004372  18DE               	xorwf	postinc2,w,c
  9182  004374  10DE               	iorwf	postinc2,w,c
  9183  004376  B4D8               	btfsc	status,2,c
  9184  004378  D799               	goto	u33000
  9185                           
  9186                           ; BSR set to: 0
  9187                           
  9188                           ;sm_ControlGate_MC50.c: 198:             } else if (psm->last_event == ev_ErrorGate) {
  9189                           
  9190                           ; BSR set to: 0
  9191                           ;sm_ControlGate_MC50.c: 197:                 psm->current_state = st_Opening;
  9192  00437A  EE20 F004          	lfsr	2,4
  9193  00437E  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9194  004380  26D9               	addwf	fsr2l,f,c
  9195  004382  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9196  004384  22DA               	addwfc	fsr2h,f,c
  9197  004386  0E10               	movlw	16
  9198  004388  18DE               	xorwf	postinc2,w,c
  9199  00438A  10DE               	iorwf	postinc2,w,c
  9200  00438C  B4D8               	btfsc	status,2,c
  9201  00438E  D027               	goto	L127
  9202  004390                     l26001:
  9203                           
  9204                           ; BSR set to: 0
  9205  004390  EE20 F004          	lfsr	2,4
  9206  004394  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9207  004396  26D9               	addwf	fsr2l,f,c
  9208  004398  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9209  00439A  22DA               	addwfc	fsr2h,f,c
  9210  00439C  0E14               	movlw	20
  9211  00439E  18DE               	xorwf	postinc2,w,c
  9212  0043A0  10DE               	iorwf	postinc2,w,c
  9213  0043A2  A4D8               	btfss	status,2,c
  9214  0043A4  D046               	goto	l26017
  9215                           
  9216                           ; BSR set to: 0
  9217                           ;sm_ControlGate_MC50.c: 205:                 psm->current_state = st_Learning;
  9218  0043A6  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  9219  0043AA  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  9220  0043AE  0E05               	movlw	5
  9221  0043B0  D01B               	goto	L55
  9222  0043B2                     l26005:
  9223                           
  9224                           ; BSR set to: 0
  9225                           ;sm_ControlGate_MC50.c: 217:         {;sm_ControlGate_MC50.c: 218:             if (psm->
      +                          last_event == ev_LearningComplete) {
  9226  0043B2  EE20 F004          	lfsr	2,4
  9227  0043B6  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9228  0043B8  26D9               	addwf	fsr2l,f,c
  9229  0043BA  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9230  0043BC  22DA               	addwfc	fsr2h,f,c
  9231  0043BE  0E13               	movlw	19
  9232  0043C0  18DE               	xorwf	postinc2,w,c
  9233  0043C2  10DE               	iorwf	postinc2,w,c
  9234  0043C4  B4D8               	btfsc	status,2,c
  9235  0043C6  D755               	goto	u32980
  9236                           
  9237                           ; BSR set to: 0
  9238                           
  9239                           ;sm_ControlGate_MC50.c: 220:             } else if (psm->last_event == ev_ErrorLearning)
      +                           {
  9240                           
  9241                           ; BSR set to: 0
  9242                           ;sm_ControlGate_MC50.c: 219:                 psm->current_state = st_Closed;
  9243  0043C8  EE20 F004          	lfsr	2,4
  9244  0043CC  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9245  0043CE  26D9               	addwf	fsr2l,f,c
  9246  0043D0  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9247  0043D2  22DA               	addwfc	fsr2h,f,c
  9248  0043D4  0E12               	movlw	18
  9249  0043D6                     L126:
  9250  0043D6  18DE               	xorwf	postinc2,w,c
  9251  0043D8  10DE               	iorwf	postinc2,w,c
  9252  0043DA  A4D8               	btfss	status,2,c
  9253  0043DC  D02A               	goto	l26017
  9254  0043DE                     L127:
  9255                           
  9256                           ; BSR set to: 0
  9257                           ;sm_ControlGate_MC50.c: 221:                 psm->current_state = st_Idle;
  9258  0043DE  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  9259  0043E2  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  9260  0043E6  0E00               	movlw	0
  9261  0043E8                     L55:
  9262  0043E8  6EDE               	movwf	postinc2,c
  9263  0043EA  0E00               	movlw	0
  9264  0043EC  6EDD               	movwf	postdec2,c
  9265  0043EE  D021               	goto	l26017
  9266  0043F0                     l2653:
  9267                           
  9268                           ; BSR set to: 0
  9269  0043F0  D7FF               	goto	l2653
  9270  0043F2                     l26015:
  9271                           
  9272                           ; BSR set to: 1
  9273  0043F2  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  9274  0043F6  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  9275  0043FA  50DF               	movf	indf2,w,c
  9276  0043FC  0100               	movlb	0	; () banked
  9277  0043FE  6FE9               	movwf	??_sm_execute_ControlGate& (0+255),b
  9278  004400  6BEA               	clrf	(??_sm_execute_ControlGate+1)& (0+255),b
  9279                           
  9280                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9281                           ; Switch size 1, requested type "simple"
  9282                           ; Number of cases is 1, Range of values is 0 to 0
  9283                           ; switch strategies available:
  9284                           ; Name         Instructions Cycles
  9285                           ; simple_byte            4     3 (average)
  9286                           ;	Chosen strategy is simple_byte
  9287  004402  51EA               	movf	(??_sm_execute_ControlGate+1)& (0+255),w,b
  9288  004404  0A00               	xorlw	0	; case 0
  9289  004406  A4D8               	btfss	status,2,c
  9290  004408  D7F3               	goto	l2653
  9291                           
  9292                           ; BSR set to: 0
  9293                           ; Switch size 1, requested type "simple"
  9294                           ; Number of cases is 6, Range of values is 0 to 5
  9295                           ; switch strategies available:
  9296                           ; Name         Instructions Cycles
  9297                           ; simple_byte           19    10 (average)
  9298                           ;	Chosen strategy is simple_byte
  9299  00440A  51E9               	movf	??_sm_execute_ControlGate& (0+255),w,b
  9300  00440C  0A00               	xorlw	0	; case 0
  9301  00440E  B4D8               	btfsc	status,2,c
  9302  004410  D725               	goto	l25945
  9303  004412  0A01               	xorlw	1	; case 1
  9304  004414  B4D8               	btfsc	status,2,c
  9305  004416  D73F               	goto	l25953
  9306  004418  0A03               	xorlw	3	; case 2
  9307  00441A  B4D8               	btfsc	status,2,c
  9308  00441C  D74D               	goto	l25961
  9309  00441E  0A01               	xorlw	1	; case 3
  9310  004420  B4D8               	btfsc	status,2,c
  9311  004422  D766               	goto	l25973
  9312  004424  0A07               	xorlw	7	; case 4
  9313  004426  B4D8               	btfsc	status,2,c
  9314  004428  D792               	goto	l25989
  9315  00442A  0A01               	xorlw	1	; case 5
  9316  00442C  B4D8               	btfsc	status,2,c
  9317  00442E  D7C1               	goto	l26005
  9318  004430  D7DF               	goto	l2653
  9319  004432                     l26017:
  9320                           
  9321                           ; BSR set to: 0
  9322                           ;sm_ControlGate_MC50.c: 234:     sm_send_event(&controlGate_stateMachine, ev_NULL);
  9323  004432  0EE7               	movlw	low _controlGate_stateMachine
  9324  004434  6E12               	movwf	sm_send_event@psm^0,c
  9325  004436  0E01               	movlw	high _controlGate_stateMachine
  9326  004438  6E13               	movwf	(sm_send_event@psm+1)^0,c
  9327  00443A  0E00               	movlw	0
  9328  00443C  6E15               	movwf	(sm_send_event@event+1)^0,c
  9329  00443E  0E00               	movlw	0
  9330  004440  6E14               	movwf	sm_send_event@event^0,c
  9331  004442  ECCD  F046         	call	_sm_send_event	;wreg free
  9332                           
  9333                           ;sm_ControlGate_MC50.c: 239:     switch ((sm_state_ControlGate_t) psm->current_state) {
  9334  004446  D07D               	goto	l26081
  9335  004448                     l26019:
  9336                           
  9337                           ; BSR set to: 0
  9338                           ;sm_ControlGate_MC50.c: 241:         {;sm_ControlGate_MC50.c: 244:             ts_system
      +                          .TimeStopADCZeroOffsetCalc = (5 * (1000/50));
  9339  004448  0E00               	movlw	0
  9340  00444A  0101               	movlb	1	; () banked
  9341  00444C  6FDE               	movwf	(_ts_system+63)& (0+255),b	;volatile
  9342  00444E  0E64               	movlw	100
  9343  004450  6FDD               	movwf	(_ts_system+62)& (0+255),b	;volatile
  9344                           
  9345                           ;sm_ControlGate_MC50.c: 247:             var_sys.PositionIsLost = YES;
  9346  004452  0E01               	movlw	1
  9347  004454  6F48               	movwf	(_var_sys+72)& (0+255),b	;volatile
  9348                           
  9349                           ; BSR set to: 1
  9350                           ;sm_ControlGate_MC50.c: 248:             if (var_sys.WorkTimeMaxAlarmState == EmAlarme |
      +                          | var_sys.NumberOffErrors > 3)
  9351  004456  0E02               	movlw	2
  9352  004458  1942               	xorwf	(_var_sys+66)& (0+255),w,b	;volatile
  9353  00445A  B4D8               	btfsc	status,2,c
  9354  00445C  D003               	goto	u33160
  9355                           
  9356                           ; BSR set to: 1
  9357  00445E  0E03               	movlw	3
  9358  004460  6543               	cpfsgt	(_var_sys+67)& (0+255),b	;volatile
  9359  004462  D027               	goto	l26041
  9360  004464                     u33160:
  9361                           
  9362                           ; BSR set to: 1
  9363                           ;sm_ControlGate_MC50.c: 249:             {;sm_ControlGate_MC50.c: 252:                 t
      +                          ypeOpenOrder = GetOpenOrder();
  9364  004464  EC9E  F02E         	call	_GetOpenOrder	;wreg free
  9365  004468  0100               	movlb	0	; () banked
  9366  00446A  6FEB               	movwf	sm_execute_ControlGate@typeOpenOrder& (0+255),b
  9367                           
  9368                           ; BSR set to: 0
  9369                           ;sm_ControlGate_MC50.c: 253:                 SetSegmentValueIntermitent(dE,dr, (1000/50)
      +                          );
  9370  00446C  0E14               	movlw	20
  9371  00446E  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
  9372  004470  0E00               	movlw	0
  9373  004472  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
  9374  004474  0E14               	movlw	20
  9375  004476  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
  9376  004478  0E0E               	movlw	14
  9377  00447A  EC8B  F04B         	call	_SetSegmentValueIntermitent
  9378                           
  9379                           ; BSR set to: 1
  9380                           ;sm_ControlGate_MC50.c: 254:                 ts_system.timeSinalizationDigit = ( 500/50)
      +                          ;
  9381  00447E  0E00               	movlw	0
  9382  004480  6FAC               	movwf	(_ts_system+13)& (0+255),b	;volatile
  9383  004482  0E0A               	movlw	10
  9384  004484  6FAB               	movwf	(_ts_system+12)& (0+255),b	;volatile
  9385                           
  9386                           ; BSR set to: 1
  9387                           ;sm_ControlGate_MC50.c: 255:                 if ((typeOpenOrder != NoCMD) ||(button_stru
      +                          ct.current==0 || button_struct.current==0x00 ||button_struct.current==0x17 ))
  9388  004486  0100               	movlb	0	; () banked
  9389  004488  51EB               	movf	sm_execute_ControlGate@typeOpenOrder& (0+255),w,b
  9390  00448A  A4D8               	btfss	status,2,c
  9391  00448C  D00A               	goto	u33200
  9392                           
  9393                           ; BSR set to: 0
  9394  00448E  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  9395  004490  B4D8               	btfsc	status,2,c
  9396  004492  D007               	goto	u33200
  9397                           
  9398                           ; BSR set to: 0
  9399  004494  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  9400  004496  B4D8               	btfsc	status,2,c
  9401  004498  D004               	goto	u33200
  9402                           
  9403                           ; BSR set to: 0
  9404  00449A  0E17               	movlw	23
  9405  00449C  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  9406  00449E  A4D8               	btfss	status,2,c
  9407  0044A0  0012               	return	
  9408  0044A2                     u33200:
  9409                           
  9410                           ; BSR set to: 0
  9411                           ;sm_ControlGate_MC50.c: 256:                 {;sm_ControlGate_MC50.c: 257:              
      +                                 var_sys.WorkTimeMaxAlarmState = Clear;
  9412  0044A2  0E00               	movlw	0
  9413  0044A4  0101               	movlb	1	; () banked
  9414  0044A6  6F42               	movwf	(_var_sys+66)& (0+255),b	;volatile
  9415                           
  9416                           ;sm_ControlGate_MC50.c: 258:                     var_sys.NumberOffErrors = 0;
  9417  0044A8  0E00               	movlw	0
  9418  0044AA  6F43               	movwf	(_var_sys+67)& (0+255),b	;volatile
  9419                           
  9420                           ;sm_ControlGate_MC50.c: 259:                     button_struct.processed=1;
  9421  0044AC  0E01               	movlw	1
  9422  0044AE  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  9423  0044B0  0012               	return	
  9424  0044B2                     l26041:
  9425                           
  9426                           ; BSR set to: 1
  9427                           ;sm_ControlGate_MC50.c: 264:             {;sm_ControlGate_MC50.c: 267:                  
      +                             var_sys.Statedoorcontrol = st_Closed;
  9428  0044B2  0E01               	movlw	1
  9429  0044B4  6F1C               	movwf	(_var_sys+28)& (0+255),b	;volatile
  9430                           
  9431                           ; BSR set to: 1
  9432                           ;sm_ControlGate_MC50.c: 268:                     var_sys.actualCounterMoves++;
  9433  0044B6  0E01               	movlw	1
  9434  0044B8  273C               	addwf	(_var_sys+60)& (0+255),f,b	;volatile
  9435  0044BA  0E00               	movlw	0
  9436  0044BC  233D               	addwfc	(_var_sys+61)& (0+255),f,b	;volatile
  9437  0044BE  233E               	addwfc	(_var_sys+62)& (0+255),f,b	;volatile
  9438  0044C0  233F               	addwfc	(_var_sys+63)& (0+255),f,b	;volatile
  9439                           
  9440                           ; BSR set to: 1
  9441                           ;sm_ControlGate_MC50.c: 269:                     var_sys.Timewalkisactived = 0;
  9442  0044C2  0E00               	movlw	0
  9443  0044C4  6F4A               	movwf	(_var_sys+74)& (0+255),b	;volatile
  9444                           
  9445                           ; BSR set to: 1
  9446                           ;sm_ControlGate_MC50.c: 270:                     var_sys.PositionActual = 0;
  9447  0044C6  0E00               	movlw	0
  9448  0044C8  6F1E               	movwf	(_var_sys+30)& (0+255),b	;volatile
  9449  0044CA  0E00               	movlw	0
  9450  0044CC  6F1F               	movwf	(_var_sys+31)& (0+255),b	;volatile
  9451  0044CE  0E00               	movlw	0
  9452  0044D0  6F20               	movwf	(_var_sys+32)& (0+255),b	;volatile
  9453  0044D2  0E00               	movlw	0
  9454  0044D4  6F21               	movwf	(_var_sys+33)& (0+255),b	;volatile
  9455                           
  9456                           ; BSR set to: 1
  9457                           ;sm_ControlGate_MC50.c: 272:                     var_sys.PositionIsLost = NO;
  9458  0044D6  0E00               	movlw	0
  9459  0044D8  6F48               	movwf	(_var_sys+72)& (0+255),b	;volatile
  9460                           
  9461                           ; BSR set to: 1
  9462                           ;sm_ControlGate_MC50.c: 273:                     var_sys.NumberOffErrors = 0;
  9463  0044DA  0E00               	movlw	0
  9464  0044DC  6F43               	movwf	(_var_sys+67)& (0+255),b	;volatile
  9465                           
  9466                           ; BSR set to: 1
  9467                           ;sm_ControlGate_MC50.c: 274:                     var_sys.StateMotor = Stopped;
  9468  0044DE  0E00               	movlw	0
  9469  0044E0  6F00               	movwf	_var_sys& (0+255),b	;volatile
  9470                           
  9471                           ; BSR set to: 1
  9472                           ;sm_ControlGate_MC50.c: 276:                     ts_system.timeSinalizationDigit = (1000
      +                          /50) * 2;
  9473  0044E2  0E00               	movlw	0
  9474  0044E4  6FAC               	movwf	(_ts_system+13)& (0+255),b	;volatile
  9475  0044E6  0E28               	movlw	40
  9476  0044E8  6FAB               	movwf	(_ts_system+12)& (0+255),b	;volatile
  9477                           
  9478                           ; BSR set to: 1
  9479                           ;sm_ControlGate_MC50.c: 277:                     SetSegmentValueIntermitent(dF, dC, ( 20
      +                          0/50));
  9480  0044EA  0E0C               	movlw	12
  9481  0044EC  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
  9482  0044EE  0E00               	movlw	0
  9483  0044F0  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
  9484  0044F2  0E04               	movlw	4
  9485  0044F4  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
  9486  0044F6  0E0F               	movlw	15
  9487  0044F8  EC8B  F04B         	call	_SetSegmentValueIntermitent
  9488                           
  9489                           ; BSR set to: 1
  9490                           ;sm_ControlGate_MC50.c: 278:                     sm_send_event(&controlGate_stateMachine
      +                          , ev_GateClosed);
  9491  0044FC  0EE7               	movlw	low _controlGate_stateMachine
  9492  0044FE  6E12               	movwf	sm_send_event@psm^0,c
  9493  004500  0E01               	movlw	high _controlGate_stateMachine
  9494  004502  6E13               	movwf	(sm_send_event@psm+1)^0,c
  9495  004504  0E00               	movlw	0
  9496  004506  6E15               	movwf	(sm_send_event@event+1)^0,c
  9497  004508  0E0A               	movlw	10
  9498  00450A  6E14               	movwf	sm_send_event@event^0,c
  9499  00450C  ECCD  F046         	call	_sm_send_event	;wreg free
  9500  004510  0012               	return	
  9501  004512                     l26061:
  9502                           
  9503                           ; BSR set to: 0
  9504                           ;sm_ControlGate_MC50.c: 285:         {;sm_ControlGate_MC50.c: 287:             actionZon
      +                          e_Closed();
  9505  004512  EC90  F03E         	call	_actionZone_Closed	;wreg free
  9506                           
  9507                           ;sm_ControlGate_MC50.c: 288:         };sm_ControlGate_MC50.c: 289:             break;
  9508  004516  0012               	return	
  9509  004518                     l26063:
  9510                           
  9511                           ; BSR set to: 0
  9512                           ;sm_ControlGate_MC50.c: 291:         {;sm_ControlGate_MC50.c: 293:             actionZon
      +                          e_Opening();
  9513  004518  EC4F  F028         	call	_actionZone_Opening	;wreg free
  9514  00451C                     l26065:
  9515                           
  9516                           ;sm_ControlGate_MC50.c: 295:             ts_system.TimeStopADCZeroOffsetCalc = (5 * (100
      +                          0/50));
  9517  00451C  0E00               	movlw	0
  9518  00451E  0101               	movlb	1	; () banked
  9519  004520  6FDE               	movwf	(_ts_system+63)& (0+255),b	;volatile
  9520  004522  0E64               	movlw	100
  9521  004524  6FDD               	movwf	(_ts_system+62)& (0+255),b	;volatile
  9522                           
  9523                           ;sm_ControlGate_MC50.c: 296:         };sm_ControlGate_MC50.c: 297:             break;
  9524  004526  0012               	return	
  9525  004528                     l26067:
  9526                           
  9527                           ; BSR set to: 0
  9528                           ;sm_ControlGate_MC50.c: 299:         {;sm_ControlGate_MC50.c: 301:             actionZon
      +                          e_Opened();
  9529  004528  ECBE  F02C         	call	_actionZone_Opened	;wreg free
  9530  00452C  D7F7               	goto	l26065
  9531  00452E                     l26071:
  9532                           
  9533                           ; BSR set to: 0
  9534                           ;sm_ControlGate_MC50.c: 307:         {;sm_ControlGate_MC50.c: 309:             actionZon
      +                          e_Closing();
  9535  00452E  ECCE  F025         	call	_actionZone_Closing	;wreg free
  9536  004532  D7F4               	goto	l26065
  9537  004534                     l26075:
  9538                           
  9539                           ; BSR set to: 0
  9540                           ;sm_ControlGate_MC50.c: 315:         {;sm_ControlGate_MC50.c: 316:             sm_execut
      +                          e_ControlLearning(&controlLearning_stateMachine);
  9541  004534  0EB0               	movlw	low _controlLearning_stateMachine
  9542  004536  6FDC               	movwf	sm_execute_ControlLearning@psm& (0+255),b
  9543  004538  0E02               	movlw	high _controlLearning_stateMachine
  9544  00453A  6FDD               	movwf	(sm_execute_ControlLearning@psm+1)& (0+255),b
  9545  00453C  ECE5  F010         	call	_sm_execute_ControlLearning	;wreg free
  9546  004540  D7ED               	goto	l26065
  9547  004542                     l26081:
  9548  004542  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  9549  004546  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  9550  00454A  50DF               	movf	indf2,w,c
  9551  00454C  0100               	movlb	0	; () banked
  9552  00454E  6FE9               	movwf	??_sm_execute_ControlGate& (0+255),b
  9553  004550  6BEA               	clrf	(??_sm_execute_ControlGate+1)& (0+255),b
  9554                           
  9555                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9556                           ; Switch size 1, requested type "simple"
  9557                           ; Number of cases is 1, Range of values is 0 to 0
  9558                           ; switch strategies available:
  9559                           ; Name         Instructions Cycles
  9560                           ; simple_byte            4     3 (average)
  9561                           ;	Chosen strategy is simple_byte
  9562  004552  51EA               	movf	(??_sm_execute_ControlGate+1)& (0+255),w,b
  9563  004554  0A00               	xorlw	0	; case 0
  9564  004556  A4D8               	btfss	status,2,c
  9565  004558  0012               	return	
  9566                           
  9567                           ; BSR set to: 0
  9568                           ; Switch size 1, requested type "simple"
  9569                           ; Number of cases is 6, Range of values is 0 to 5
  9570                           ; switch strategies available:
  9571                           ; Name         Instructions Cycles
  9572                           ; simple_byte           19    10 (average)
  9573                           ;	Chosen strategy is simple_byte
  9574  00455A  51E9               	movf	??_sm_execute_ControlGate& (0+255),w,b
  9575  00455C  0A00               	xorlw	0	; case 0
  9576  00455E  B4D8               	btfsc	status,2,c
  9577  004560  D773               	goto	l26019
  9578  004562  0A01               	xorlw	1	; case 1
  9579  004564  B4D8               	btfsc	status,2,c
  9580  004566  D7D5               	goto	l26061
  9581  004568  0A03               	xorlw	3	; case 2
  9582  00456A  B4D8               	btfsc	status,2,c
  9583  00456C  D7D5               	goto	l26063
  9584  00456E  0A01               	xorlw	1	; case 3
  9585  004570  B4D8               	btfsc	status,2,c
  9586  004572  D7DD               	goto	l26071
  9587  004574  0A07               	xorlw	7	; case 4
  9588  004576  B4D8               	btfsc	status,2,c
  9589  004578  D7D7               	goto	l26067
  9590  00457A  0A01               	xorlw	1	; case 5
  9591  00457C  A4D8               	btfss	status,2,c
  9592  00457E  0012               	return	
  9593  004580  D7D9               	goto	l26075
  9594  004582                     __end_of_sm_execute_ControlGate:
  9595                           	callstack 0
  9596                           
  9597 ;; *************** function _sm_execute_ControlLearning *****************
  9598 ;; Defined at:
  9599 ;;		line 29 in file "sm_ControlLearning_MC50.c"
  9600 ;; Parameters:    Size  Location     Type
  9601 ;;  psm             2    4[BANK0 ] PTR struct .
  9602 ;;		 -> controlLearning_stateMachine(11), 
  9603 ;; Auto vars:     Size  Location     Type
  9604 ;;  typeOpenOrde    1   57[COMRAM] enum E10372
  9605 ;; Return value:  Size  Location     Type
  9606 ;;                  1    wreg      void 
  9607 ;; Registers used:
  9608 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  9609 ;; Tracked objects:
  9610 ;;		On entry : 3F/0
  9611 ;;		On exit  : 0/0
  9612 ;;		Unchanged: 0/0
  9613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9614 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9615 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9616 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9617 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9618 ;;Total ram usage:        5 bytes
  9619 ;; Hardware stack levels used: 1
  9620 ;; Hardware stack levels required when called: 14
  9621 ;; This function calls:
  9622 ;;		_GetOpenOrder
  9623 ;;		_SaveNVM_VarSystem
  9624 ;;		_calculateMean
  9625 ;;		_clearLearningValue
  9626 ;;		_generateErrorLearnig
  9627 ;;		_sm_send_event
  9628 ;; This function is called by:
  9629 ;;		_sm_execute_ControlGate
  9630 ;; This function uses a non-reentrant model
  9631 ;;
  9632                           
  9633                           	psect	text18
  9634  0021CA                     __ptext18:
  9635                           	callstack 0
  9636  0021CA                     _sm_execute_ControlLearning:
  9637                           	callstack 15
  9638                           
  9639                           ; BSR set to: 0
  9640                           ;sm_ControlLearning_MC50.c: 31:    TypeCMD typeOpenOrder = GetOpenOrder();
  9641                           
  9642                           ;incstack = 0
  9643  0021CA  EC9E  F02E         	call	_GetOpenOrder	;wreg free
  9644  0021CE  6E3A               	movwf	sm_execute_ControlLearning@typeOpenOrder^0,c
  9645                           
  9646                           ;sm_ControlLearning_MC50.c: 33:     switch((sm_state_ControlLearning_t) psm->current_sta
      +                          te)
  9647  0021D0  D0B8               	goto	l23607
  9648  0021D2                     l23533:
  9649                           
  9650                           ; BSR set to: 0
  9651                           ;sm_ControlLearning_MC50.c: 36:         {;sm_ControlLearning_MC50.c: 37:              if
      +                          ((psm->last_event==ev_GateClosed)&&(var_sys_NVM.decelarationSensivity != 0)&& (var_sys.p
      +                          rograminAutomatic == 0))
  9652  0021D2  EE20 F004          	lfsr	2,4
  9653  0021D6  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9654  0021D8  26D9               	addwf	fsr2l,f,c
  9655  0021DA  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9656  0021DC  22DA               	addwfc	fsr2h,f,c
  9657  0021DE  0E0A               	movlw	10
  9658  0021E0  18DE               	xorwf	postinc2,w,c
  9659  0021E2  10DE               	iorwf	postinc2,w,c
  9660  0021E4  A4D8               	btfss	status,2,c
  9661  0021E6  D00D               	goto	l23541
  9662                           
  9663                           ; BSR set to: 0
  9664  0021E8  51A7               	movf	(_var_sys_NVM+15)& (0+255),w,b	;volatile
  9665  0021EA  B4D8               	btfsc	status,2,c
  9666  0021EC  D00A               	goto	l23541
  9667                           
  9668                           ; BSR set to: 0
  9669  0021EE  0101               	movlb	1	; () banked
  9670  0021F0  512A               	movf	(_var_sys+42)& (0+255),w,b	;volatile
  9671  0021F2  A4D8               	btfss	status,2,c
  9672  0021F4  D006               	goto	l23541
  9673  0021F6                     u28000:
  9674                           
  9675                           ; BSR set to: 1
  9676                           ;sm_ControlLearning_MC50.c: 38:             {;sm_ControlLearning_MC50.c: 39:            
      +                               psm->current_state = st_WaitLearnigOpen;
  9677  0021F6  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
  9678  0021FA  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
  9679  0021FE  0E02               	movlw	2
  9680  002200  D08A               	goto	L66
  9681  002202                     l23541:
  9682  002202  0100               	movlb	0	; () banked
  9683  002204  EE20 F004          	lfsr	2,4
  9684  002208  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9685  00220A  26D9               	addwf	fsr2l,f,c
  9686  00220C  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9687  00220E  22DA               	addwfc	fsr2h,f,c
  9688  002210  0E0A               	movlw	10
  9689  002212  18DE               	xorwf	postinc2,w,c
  9690  002214  10DE               	iorwf	postinc2,w,c
  9691  002216  A4D8               	btfss	status,2,c
  9692  002218  D00D               	goto	l23549
  9693                           
  9694                           ; BSR set to: 0
  9695  00221A  51A7               	movf	(_var_sys_NVM+15)& (0+255),w,b	;volatile
  9696  00221C  B4D8               	btfsc	status,2,c
  9697  00221E  D004               	goto	u28030
  9698                           
  9699                           ; BSR set to: 0
  9700  002220  0101               	movlb	1	; () banked
  9701  002222  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
  9702  002224  A4D8               	btfss	status,2,c
  9703  002226  D006               	goto	l23549
  9704  002228                     u28030:
  9705                           
  9706                           ;sm_ControlLearning_MC50.c: 43:             {;sm_ControlLearning_MC50.c: 44:            
      +                               psm->current_state = st_WaitForOpened;
  9707  002228  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
  9708  00222C  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
  9709  002230  0E04               	movlw	4
  9710  002232  D071               	goto	L66
  9711  002234                     l23549:
  9712  002234  0100               	movlb	0	; () banked
  9713  002236  EE20 F004          	lfsr	2,4
  9714  00223A  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9715  00223C  26D9               	addwf	fsr2l,f,c
  9716  00223E  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9717  002240  22DA               	addwfc	fsr2h,f,c
  9718  002242  0E0B               	movlw	11
  9719  002244  18DE               	xorwf	postinc2,w,c
  9720  002246  10DE               	iorwf	postinc2,w,c
  9721  002248  A4D8               	btfss	status,2,c
  9722  00224A  D09B               	goto	l23609
  9723                           
  9724                           ; BSR set to: 0
  9725                           ;sm_ControlLearning_MC50.c: 47:             {;sm_ControlLearning_MC50.c: 48:            
      +                               psm->current_state = st_WaitForClosed;
  9726  00224C  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
  9727  002250  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
  9728  002254  0E01               	movlw	1
  9729  002256  D05F               	goto	L66
  9730  002258                     l23553:
  9731                           
  9732                           ; BSR set to: 0
  9733                           ;sm_ControlLearning_MC50.c: 53:         {;sm_ControlLearning_MC50.c: 54:             if(
      +                          (psm->last_event==ev_GateClosed)&&(var_sys_NVM.decelarationSensivity != 0) && (var_sys.p
      +                          rograminAutomatic == 0))
  9734  002258  EE20 F004          	lfsr	2,4
  9735  00225C  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9736  00225E  26D9               	addwf	fsr2l,f,c
  9737  002260  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9738  002262  22DA               	addwfc	fsr2h,f,c
  9739  002264  0E0A               	movlw	10
  9740  002266  18DE               	xorwf	postinc2,w,c
  9741  002268  10DE               	iorwf	postinc2,w,c
  9742  00226A  A4D8               	btfss	status,2,c
  9743  00226C  D007               	goto	l23561
  9744                           
  9745                           ; BSR set to: 0
  9746  00226E  51A7               	movf	(_var_sys_NVM+15)& (0+255),w,b	;volatile
  9747  002270  B4D8               	btfsc	status,2,c
  9748  002272  D004               	goto	l23561
  9749                           
  9750                           ; BSR set to: 0
  9751  002274  0101               	movlb	1	; () banked
  9752  002276  512A               	movf	(_var_sys+42)& (0+255),w,b	;volatile
  9753  002278  B4D8               	btfsc	status,2,c
  9754  00227A  D7BD               	goto	u28000
  9755  00227C                     l23561:
  9756  00227C  0100               	movlb	0	; () banked
  9757  00227E  EE20 F004          	lfsr	2,4
  9758  002282  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9759  002284  26D9               	addwf	fsr2l,f,c
  9760  002286  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9761  002288  22DA               	addwfc	fsr2h,f,c
  9762  00228A  0E0A               	movlw	10
  9763  00228C  18DE               	xorwf	postinc2,w,c
  9764  00228E  10DE               	iorwf	postinc2,w,c
  9765  002290  A4D8               	btfss	status,2,c
  9766  002292  D007               	goto	l23569
  9767                           
  9768                           ; BSR set to: 0
  9769  002294  51A7               	movf	(_var_sys_NVM+15)& (0+255),w,b	;volatile
  9770  002296  B4D8               	btfsc	status,2,c
  9771  002298  D7C7               	goto	u28030
  9772                           
  9773                           ; BSR set to: 0
  9774  00229A  0101               	movlb	1	; () banked
  9775  00229C  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
  9776  00229E  B4D8               	btfsc	status,2,c
  9777  0022A0  D7C3               	goto	u28030
  9778  0022A2                     l23569:
  9779  0022A2  0100               	movlb	0	; () banked
  9780  0022A4                     L68:
  9781  0022A4  EE20 F004          	lfsr	2,4
  9782  0022A8  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9783  0022AA  26D9               	addwf	fsr2l,f,c
  9784  0022AC  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9785  0022AE  22DA               	addwfc	fsr2h,f,c
  9786  0022B0  0E10               	movlw	16
  9787  0022B2  18DE               	xorwf	postinc2,w,c
  9788  0022B4  10DE               	iorwf	postinc2,w,c
  9789  0022B6  A4D8               	btfss	status,2,c
  9790  0022B8  D064               	goto	l23609
  9791  0022BA  D03C               	goto	L128
  9792  0022BC                     l23573:
  9793                           
  9794                           ; BSR set to: 0
  9795                           ;sm_ControlLearning_MC50.c: 70:         {;sm_ControlLearning_MC50.c: 71:             if(
      +                          psm->last_event==ev_GateOpened)
  9796  0022BC  EE20 F004          	lfsr	2,4
  9797  0022C0  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9798  0022C2  26D9               	addwf	fsr2l,f,c
  9799  0022C4  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9800  0022C6  22DA               	addwfc	fsr2h,f,c
  9801  0022C8  0E0B               	movlw	11
  9802  0022CA  18DE               	xorwf	postinc2,w,c
  9803  0022CC  10DE               	iorwf	postinc2,w,c
  9804  0022CE  A4D8               	btfss	status,2,c
  9805  0022D0  D7E9               	goto	L68
  9806                           
  9807                           ; BSR set to: 0
  9808                           ;sm_ControlLearning_MC50.c: 72:             {;sm_ControlLearning_MC50.c: 73:            
      +                               psm->current_state = st_WaitLearnigClose;
  9809  0022D2  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
  9810  0022D6  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
  9811  0022DA  0E03               	movlw	3
  9812  0022DC  D01C               	goto	L66
  9813  0022DE                     l23581:
  9814                           
  9815                           ; BSR set to: 0
  9816                           ;sm_ControlLearning_MC50.c: 82:         {;sm_ControlLearning_MC50.c: 83:             if(
      +                          psm->last_event==ev_GateClosed)
  9817  0022DE  EE20 F004          	lfsr	2,4
  9818  0022E2  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9819  0022E4  26D9               	addwf	fsr2l,f,c
  9820  0022E6  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9821  0022E8  22DA               	addwfc	fsr2h,f,c
  9822  0022EA  0E0A               	movlw	10
  9823  0022EC  18DE               	xorwf	postinc2,w,c
  9824  0022EE  10DE               	iorwf	postinc2,w,c
  9825  0022F0  A4D8               	btfss	status,2,c
  9826  0022F2  D7D8               	goto	L68
  9827  0022F4  D799               	goto	u28030
  9828  0022F6                     l23589:
  9829                           
  9830                           ; BSR set to: 0
  9831                           ;sm_ControlLearning_MC50.c: 94:         {;sm_ControlLearning_MC50.c: 95:             if(
      +                          psm->last_event==ev_GateOpened)
  9832  0022F6  EE20 F004          	lfsr	2,4
  9833  0022FA  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9834  0022FC  26D9               	addwf	fsr2l,f,c
  9835  0022FE  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9836  002300  22DA               	addwfc	fsr2h,f,c
  9837  002302  0E0B               	movlw	11
  9838  002304  18DE               	xorwf	postinc2,w,c
  9839  002306  10DE               	iorwf	postinc2,w,c
  9840  002308  A4D8               	btfss	status,2,c
  9841  00230A  D7CC               	goto	L68
  9842                           
  9843                           ; BSR set to: 0
  9844                           ;sm_ControlLearning_MC50.c: 96:             {;sm_ControlLearning_MC50.c: 97:            
      +                               psm->current_state = st_WaitForEndLearn;
  9845  00230C  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
  9846  002310  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
  9847  002314  0E05               	movlw	5
  9848  002316                     L66:
  9849  002316  6EDE               	movwf	postinc2,c
  9850  002318  0E00               	movlw	0
  9851  00231A  6EDD               	movwf	postdec2,c
  9852  00231C  D032               	goto	l23609
  9853  00231E                     l23597:
  9854                           
  9855                           ; BSR set to: 0
  9856                           ;sm_ControlLearning_MC50.c: 106:         {;sm_ControlLearning_MC50.c: 107:             i
      +                          f(psm->last_event==ev_GateClosed)
  9857  00231E  EE20 F004          	lfsr	2,4
  9858  002322  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9859  002324  26D9               	addwf	fsr2l,f,c
  9860  002326  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9861  002328  22DA               	addwfc	fsr2h,f,c
  9862  00232A  0E0A               	movlw	10
  9863  00232C  18DE               	xorwf	postinc2,w,c
  9864  00232E  10DE               	iorwf	postinc2,w,c
  9865  002330  A4D8               	btfss	status,2,c
  9866  002332  D7B8               	goto	L68
  9867  002334                     L128:
  9868                           
  9869                           ; BSR set to: 0
  9870                           ;sm_ControlLearning_MC50.c: 112:             {;sm_ControlLearning_MC50.c: 113:          
      +                                 psm->current_state = st_InitLearning;
  9871  002334  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
  9872  002338  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
  9873  00233C  0E00               	movlw	0
  9874  00233E  D7EB               	goto	L66
  9875  002340                     l2912:
  9876                           
  9877                           ; BSR set to: 0
  9878  002340  D7FF               	goto	l2912
  9879  002342                     l23607:
  9880  002342  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
  9881  002346  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
  9882  00234A  50DF               	movf	indf2,w,c
  9883  00234C  0100               	movlb	0	; () banked
  9884  00234E  6FDE               	movwf	??_sm_execute_ControlLearning& (0+255),b
  9885  002350  6BDF               	clrf	(??_sm_execute_ControlLearning+1)& (0+255),b
  9886                           
  9887                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9888                           ; Switch size 1, requested type "simple"
  9889                           ; Number of cases is 1, Range of values is 0 to 0
  9890                           ; switch strategies available:
  9891                           ; Name         Instructions Cycles
  9892                           ; simple_byte            4     3 (average)
  9893                           ;	Chosen strategy is simple_byte
  9894  002352  51DF               	movf	(??_sm_execute_ControlLearning+1)& (0+255),w,b
  9895  002354  0A00               	xorlw	0	; case 0
  9896  002356  A4D8               	btfss	status,2,c
  9897  002358  D7F3               	goto	l2912
  9898                           
  9899                           ; BSR set to: 0
  9900                           ; Switch size 1, requested type "simple"
  9901                           ; Number of cases is 6, Range of values is 0 to 5
  9902                           ; switch strategies available:
  9903                           ; Name         Instructions Cycles
  9904                           ; simple_byte           19    10 (average)
  9905                           ;	Chosen strategy is simple_byte
  9906  00235A  51DE               	movf	??_sm_execute_ControlLearning& (0+255),w,b
  9907  00235C  0A00               	xorlw	0	; case 0
  9908  00235E  B4D8               	btfsc	status,2,c
  9909  002360  D738               	goto	l23533
  9910  002362  0A01               	xorlw	1	; case 1
  9911  002364  B4D8               	btfsc	status,2,c
  9912  002366  D778               	goto	l23553
  9913  002368  0A03               	xorlw	3	; case 2
  9914  00236A  B4D8               	btfsc	status,2,c
  9915  00236C  D7A7               	goto	l23573
  9916  00236E  0A01               	xorlw	1	; case 3
  9917  002370  B4D8               	btfsc	status,2,c
  9918  002372  D7B5               	goto	l23581
  9919  002374  0A07               	xorlw	7	; case 4
  9920  002376  B4D8               	btfsc	status,2,c
  9921  002378  D7BE               	goto	l23589
  9922  00237A  0A01               	xorlw	1	; case 5
  9923  00237C  B4D8               	btfsc	status,2,c
  9924  00237E  D7CF               	goto	l23597
  9925  002380  D7DF               	goto	l2912
  9926  002382                     l23609:
  9927                           
  9928                           ;sm_ControlLearning_MC50.c: 126:     sm_send_event(&controlLearning_stateMachine, ev_NUL
      +                          L);
  9929  002382  0EB0               	movlw	low _controlLearning_stateMachine
  9930  002384  6E12               	movwf	sm_send_event@psm^0,c
  9931  002386  0E02               	movlw	high _controlLearning_stateMachine
  9932  002388  6E13               	movwf	(sm_send_event@psm+1)^0,c
  9933  00238A  0E00               	movlw	0
  9934  00238C  6E15               	movwf	(sm_send_event@event+1)^0,c
  9935  00238E  0E00               	movlw	0
  9936  002390  6E14               	movwf	sm_send_event@event^0,c
  9937  002392  ECCD  F046         	call	_sm_send_event	;wreg free
  9938                           
  9939                           ;sm_ControlLearning_MC50.c: 131:     switch((sm_state_ControlGate_t) psm->current_state)
  9940  002396  D280               	goto	l23865
  9941  002398                     l23611:
  9942                           
  9943                           ; BSR set to: 0
  9944                           ;sm_ControlLearning_MC50.c: 134:         {;sm_ControlLearning_MC50.c: 135:             i
      +                          f(var_sys.FimCurso_CloseIsEnabled==YES)
  9945  002398  0101               	movlb	1	; () banked
  9946  00239A  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
  9947  00239C  A4D8               	btfss	status,2,c
  9948  00239E  D03A               	goto	l23629
  9949                           
  9950                           ; BSR set to: 1
  9951                           ;sm_ControlLearning_MC50.c: 136:             {;sm_ControlLearning_MC50.c: 137:          
      +                                 control_limit_switch = 1;
  9952  0023A0  0E01               	movlw	1
  9953  0023A2  0100               	movlb	0	; () banked
  9954  0023A4  6F81               	movwf	_control_limit_switch& (0+255),b
  9955                           
  9956                           ; BSR set to: 0
  9957                           ;sm_ControlLearning_MC50.c: 138:                 sm_send_event(&controlLearning_stateMac
      +                          hine, ev_GateClosed);
  9958  0023A6  0EB0               	movlw	low _controlLearning_stateMachine
  9959  0023A8  6E12               	movwf	sm_send_event@psm^0,c
  9960  0023AA  0E02               	movlw	high _controlLearning_stateMachine
  9961  0023AC  6E13               	movwf	(sm_send_event@psm+1)^0,c
  9962  0023AE  0E00               	movlw	0
  9963  0023B0  6E15               	movwf	(sm_send_event@event+1)^0,c
  9964  0023B2  0E0A               	movlw	10
  9965  0023B4  6E14               	movwf	sm_send_event@event^0,c
  9966  0023B6  ECCD  F046         	call	_sm_send_event	;wreg free
  9967                           
  9968                           ;sm_ControlLearning_MC50.c: 139:                 var_sys.StateMotor=InOpenFull;
  9969  0023BA  0E01               	movlw	1
  9970  0023BC  0101               	movlb	1	; () banked
  9971  0023BE  6F00               	movwf	_var_sys& (0+255),b	;volatile
  9972                           
  9973                           ; BSR set to: 1
  9974                           ;sm_ControlLearning_MC50.c: 140:                 clearLearningValue();
  9975  0023C0  EC52  F043         	call	_clearLearningValue	;wreg free
  9976                           
  9977                           ; BSR set to: 0
  9978                           ;sm_ControlLearning_MC50.c: 141:                  if ((var_sys_NVM.decelarationSensivity
      +                           != 0) && (var_sys.programinAutomatic == 0))
  9979  0023C4  51A7               	movf	(_var_sys_NVM+15)& (0+255),w,b	;volatile
  9980  0023C6  B4D8               	btfsc	status,2,c
  9981  0023C8  D016               	goto	l23627
  9982                           
  9983                           ; BSR set to: 0
  9984  0023CA  0101               	movlb	1	; () banked
  9985  0023CC  512A               	movf	(_var_sys+42)& (0+255),w,b	;volatile
  9986  0023CE  A4D8               	btfss	status,2,c
  9987  0023D0  D012               	goto	l23627
  9988  0023D2                     u28220:
  9989                           
  9990                           ; BSR set to: 1
  9991                           ;sm_ControlLearning_MC50.c: 142:                          {;sm_ControlLearning_MC50.c: 1
      +                          43:                 ts_system.TimeLearningDecelaration=(1000/50)*15;
  9992  0023D2  0E01               	movlw	1
  9993  0023D4  6FD6               	movwf	(_ts_system+55)& (0+255),b	;volatile
  9994  0023D6  0E2C               	movlw	44
  9995  0023D8  6FD5               	movwf	(_ts_system+54)& (0+255),b	;volatile
  9996                           
  9997                           ;sm_ControlLearning_MC50.c: 144:                 ts_system.TimeWaitToGetCurrent=(1000/50
      +                          )*6;
  9998  0023DA  0E00               	movlw	0
  9999  0023DC  6FD4               	movwf	(_ts_system+53)& (0+255),b	;volatile
 10000  0023DE  0E78               	movlw	120
 10001  0023E0  6FD3               	movwf	(_ts_system+52)& (0+255),b	;volatile
 10002                           
 10003                           ;sm_ControlLearning_MC50.c: 145:                 ts_system.TimeWaitReleCapacitor = (1000
      +                          /50);
 10004  0023E2  0E00               	movlw	0
 10005  0023E4  6FE4               	movwf	(_ts_system+69)& (0+255),b	;volatile
 10006  0023E6  0E14               	movlw	20
 10007  0023E8  6FE3               	movwf	(_ts_system+68)& (0+255),b	;volatile
 10008                           
 10009                           ;sm_ControlLearning_MC50.c: 146:                 var_sys.LearningDecelaration=YES;
 10010  0023EA  0E01               	movlw	1
 10011  0023EC  6F47               	movwf	(_var_sys+71)& (0+255),b	;volatile
 10012                           
 10013                           ;sm_ControlLearning_MC50.c: 147:                 control_limit_switch = 0;
 10014  0023EE  0E00               	movlw	0
 10015  0023F0  0100               	movlb	0	; () banked
 10016  0023F2  6F81               	movwf	_control_limit_switch& (0+255),b
 10017                           
 10018                           ;sm_ControlLearning_MC50.c: 148:                  }
 10019  0023F4  0012               	return	
 10020  0023F6                     l23627:
 10021                           
 10022                           ;sm_ControlLearning_MC50.c: 150:                 {;sm_ControlLearning_MC50.c: 151:      
      +                                     var_sys.LearningDecelaration=NO;
 10023  0023F6  0E00               	movlw	0
 10024  0023F8  0101               	movlb	1	; () banked
 10025  0023FA  6F47               	movwf	(_var_sys+71)& (0+255),b	;volatile
 10026                           
 10027                           ;sm_ControlLearning_MC50.c: 152:                 ts_system.TimeWaitToGetCurrent=(1000/50
      +                          )*4;
 10028  0023FC  0E00               	movlw	0
 10029  0023FE  6FD4               	movwf	(_ts_system+53)& (0+255),b	;volatile
 10030  002400  0E50               	movlw	80
 10031  002402  6FD3               	movwf	(_ts_system+52)& (0+255),b	;volatile
 10032                           
 10033                           ;sm_ControlLearning_MC50.c: 153:                 ts_system.TimeWaitReleCapacitor = (1000
      +                          /50);
 10034  002404  0E00               	movlw	0
 10035  002406  6FE4               	movwf	(_ts_system+69)& (0+255),b	;volatile
 10036  002408  0E14               	movlw	20
 10037  00240A  6FE3               	movwf	(_ts_system+68)& (0+255),b	;volatile
 10038                           
 10039                           ;sm_ControlLearning_MC50.c: 154:                 control_limit_switch = 0;
 10040  00240C  0E00               	movlw	0
 10041  00240E  0100               	movlb	0	; () banked
 10042  002410  6F81               	movwf	_control_limit_switch& (0+255),b
 10043  002412  0012               	return	
 10044  002414                     l23629:
 10045                           
 10046                           ; BSR set to: 1
 10047                           ;sm_ControlLearning_MC50.c: 159:             {;sm_ControlLearning_MC50.c: 160:          
      +                                 sm_send_event(&controlLearning_stateMachine, ev_GateOpened);
 10048  002414  0EB0               	movlw	low _controlLearning_stateMachine
 10049  002416  6E12               	movwf	sm_send_event@psm^0,c
 10050  002418  0E02               	movlw	high _controlLearning_stateMachine
 10051  00241A  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10052  00241C  0E00               	movlw	0
 10053  00241E  6E15               	movwf	(sm_send_event@event+1)^0,c
 10054  002420  0E0B               	movlw	11
 10055  002422  6E14               	movwf	sm_send_event@event^0,c
 10056  002424  ECCD  F046         	call	_sm_send_event	;wreg free
 10057                           
 10058                           ;sm_ControlLearning_MC50.c: 161:                 var_sys.StateMotor = InClose;
 10059  002428  0E03               	movlw	3
 10060  00242A  0101               	movlb	1	; () banked
 10061  00242C  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10062                           
 10063                           ; BSR set to: 1
 10064                           ;sm_ControlLearning_MC50.c: 162:                 var_sys.LearningDecelaration= YES;
 10065  00242E  0E01               	movlw	1
 10066  002430  6F47               	movwf	(_var_sys+71)& (0+255),b	;volatile
 10067                           
 10068                           ; BSR set to: 1
 10069                           ;sm_ControlLearning_MC50.c: 164:         };sm_ControlLearning_MC50.c: 165:         break
      +                          ;
 10070                           
 10071                           ;sm_ControlLearning_MC50.c: 163:             }
 10072  002432  0012               	return	
 10073  002434                     l23635:
 10074                           
 10075                           ; BSR set to: 0
 10076                           ;sm_ControlLearning_MC50.c: 167:         {;sm_ControlLearning_MC50.c: 168:             i
      +                          f(((var_sys.FimCurso_CloseIsEnabled==YES)||(control_limit_switch == 1)) || ((button_stru
      +                          ct.current == 0 ||typeOpenOrder == TypeFull) && var_sys.programinAutomatic == 1))
 10077  002434  0101               	movlb	1	; () banked
 10078  002436  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
 10079  002438  B4D8               	btfsc	status,2,c
 10080  00243A  D00E               	goto	u28270
 10081                           
 10082                           ; BSR set to: 1
 10083  00243C  0100               	movlb	0	; () banked
 10084  00243E  0581               	decf	_control_limit_switch& (0+255),w,b
 10085  002440  B4D8               	btfsc	status,2,c
 10086  002442  D00A               	goto	u28270
 10087                           
 10088                           ; BSR set to: 0
 10089  002444  504D               	movf	(_button_struct+1)^0,w,c	;volatile
 10090  002446  B4D8               	btfsc	status,2,c
 10091  002448  D003               	goto	u28260
 10092                           
 10093                           ; BSR set to: 0
 10094  00244A  043A               	decf	sm_execute_ControlLearning@typeOpenOrder^0,w,c
 10095  00244C  A4D8               	btfss	status,2,c
 10096  00244E  D028               	goto	l23663
 10097  002450                     u28260:
 10098                           
 10099                           ; BSR set to: 0
 10100  002450  0101               	movlb	1	; () banked
 10101  002452  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
 10102  002454  A4D8               	btfss	status,2,c
 10103  002456  D024               	goto	l23663
 10104  002458                     u28270:
 10105                           
 10106                           ;sm_ControlLearning_MC50.c: 169:             {;sm_ControlLearning_MC50.c: 171:          
      +                                 control_limit_switch = 1;
 10107  002458  0E01               	movlw	1
 10108  00245A  0100               	movlb	0	; () banked
 10109  00245C  6F81               	movwf	_control_limit_switch& (0+255),b
 10110                           
 10111                           ;sm_ControlLearning_MC50.c: 172:                 var_sys.StateMotor=Stopped;
 10112  00245E  0E00               	movlw	0
 10113  002460  0101               	movlb	1	; () banked
 10114  002462  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10115                           
 10116                           ; BSR set to: 1
 10117                           ;sm_ControlLearning_MC50.c: 173:                 if(ts_system.TimeWaitToNextState<=0)
 10118  002464  BFC4               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 10119  002466  D005               	goto	u28280
 10120  002468  51C4               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 10121  00246A  E102               	bnz	u28281
 10122  00246C  05C3               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 10123  00246E  B0D8               	btfsc	status,0,c
 10124  002470                     u28281:
 10125  002470  0012               	return	
 10126  002472                     u28280:
 10127                           
 10128                           ; BSR set to: 1
 10129                           ;sm_ControlLearning_MC50.c: 174:                 {;sm_ControlLearning_MC50.c: 175:      
      +                                         sm_send_event(&controlLearning_stateMachine, ev_GateClosed);
 10130  002472  0EB0               	movlw	low _controlLearning_stateMachine
 10131  002474  6E12               	movwf	sm_send_event@psm^0,c
 10132  002476  0E02               	movlw	high _controlLearning_stateMachine
 10133  002478  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10134  00247A  0E00               	movlw	0
 10135  00247C  6E15               	movwf	(sm_send_event@event+1)^0,c
 10136  00247E  0E0A               	movlw	10
 10137  002480  6E14               	movwf	sm_send_event@event^0,c
 10138  002482  ECCD  F046         	call	_sm_send_event	;wreg free
 10139                           
 10140                           ;sm_ControlLearning_MC50.c: 176:                     var_sys.StateMotor=InOpenFull;
 10141  002486  0E01               	movlw	1
 10142  002488  0101               	movlb	1	; () banked
 10143  00248A  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10144                           
 10145                           ; BSR set to: 1
 10146                           ;sm_ControlLearning_MC50.c: 177:                     clearLearningValue();
 10147  00248C  EC52  F043         	call	_clearLearningValue	;wreg free
 10148                           
 10149                           ; BSR set to: 0
 10150                           ;sm_ControlLearning_MC50.c: 178:                         if ((var_sys_NVM.decelarationSe
      +                          nsivity != 0) && (var_sys.programinAutomatic == 0))
 10151  002490  51A7               	movf	(_var_sys_NVM+15)& (0+255),w,b	;volatile
 10152  002492  B4D8               	btfsc	status,2,c
 10153  002494  D7B0               	goto	l23627
 10154                           
 10155                           ; BSR set to: 0
 10156  002496  0101               	movlb	1	; () banked
 10157  002498  512A               	movf	(_var_sys+42)& (0+255),w,b	;volatile
 10158  00249A  B4D8               	btfsc	status,2,c
 10159  00249C  D79A               	goto	u28220
 10160  00249E  D7AB               	goto	l23627
 10161  0024A0                     l23663:
 10162  0024A0  0101               	movlb	1	; () banked
 10163  0024A2  5100               	movf	_var_sys& (0+255),w,b	;volatile
 10164  0024A4  A4D8               	btfss	status,2,c
 10165  0024A6  D003               	goto	l23667
 10166  0024A8                     u28310:
 10167                           
 10168                           ; BSR set to: 1
 10169                           ;sm_ControlLearning_MC50.c: 196:             {;sm_ControlLearning_MC50.c: 197:          
      +                                 generateErrorLearnig();
 10170  0024A8  EC06  F046         	call	_generateErrorLearnig	;wreg free
 10171                           
 10172                           ;sm_ControlLearning_MC50.c: 198:             }
 10173  0024AC  0012               	return	
 10174  0024AE                     l23667:
 10175                           
 10176                           ; BSR set to: 1
 10177                           ;sm_ControlLearning_MC50.c: 200:             {;sm_ControlLearning_MC50.c: 201:          
      +                                 ts_system.TimeWaitToNextState=(2*(1000/50));
 10178  0024AE  0E00               	movlw	0
 10179  0024B0  6FC4               	movwf	(_ts_system+37)& (0+255),b	;volatile
 10180  0024B2  0E28               	movlw	40
 10181  0024B4  6FC3               	movwf	(_ts_system+36)& (0+255),b	;volatile
 10182  0024B6  0012               	return	
 10183  0024B8                     l23669:
 10184                           
 10185                           ; BSR set to: 0
 10186                           ;sm_ControlLearning_MC50.c: 206:         {;sm_ControlLearning_MC50.c: 207:             i
      +                          f((var_sys.FimCurso_OpenIsEnabled==YES) || (ts_system.TimeLearningDecelaration<=0)||(con
      +                          trol_limit_switch == 1))
 10187  0024B8  0101               	movlb	1	; () banked
 10188  0024BA  0504               	decf	(_var_sys+4)& (0+255),w,b	;volatile
 10189  0024BC  A4D8               	btfss	status,2,c
 10190                           
 10191                           ; BSR set to: 1
 10192  0024BE  BFD6               	btfsc	(_ts_system+55)& (0+255),7,b	;volatile
 10193  0024C0  D009               	goto	u28340
 10194  0024C2  51D6               	movf	(_ts_system+55)& (0+255),w,b	;volatile
 10195  0024C4  E103               	bnz	u28330
 10196  0024C6  05D5               	decf	(_ts_system+54)& (0+255),w,b	;volatile
 10197  0024C8  A0D8               	btfss	status,0,c
 10198  0024CA  D004               	goto	u28340
 10199  0024CC                     u28330:
 10200                           
 10201                           ; BSR set to: 1
 10202  0024CC  0100               	movlb	0	; () banked
 10203  0024CE  0581               	decf	_control_limit_switch& (0+255),w,b
 10204  0024D0  A4D8               	btfss	status,2,c
 10205  0024D2  D02A               	goto	l23691
 10206  0024D4                     u28340:
 10207                           
 10208                           ;sm_ControlLearning_MC50.c: 209:             {;sm_ControlLearning_MC50.c: 210:          
      +                                  control_limit_switch = 1;
 10209  0024D4  0E01               	movlw	1
 10210  0024D6  0100               	movlb	0	; () banked
 10211  0024D8  6F81               	movwf	_control_limit_switch& (0+255),b
 10212                           
 10213                           ;sm_ControlLearning_MC50.c: 211:                 var_sys.StateMotor=Stopped;
 10214  0024DA  0E00               	movlw	0
 10215  0024DC  0101               	movlb	1	; () banked
 10216  0024DE  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10217                           
 10218                           ; BSR set to: 1
 10219                           ;sm_ControlLearning_MC50.c: 212:             if(ts_system.TimeWaitToNextState<=0)
 10220  0024E0  BFC4               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 10221  0024E2  D005               	goto	u28350
 10222  0024E4  51C4               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 10223  0024E6  E102               	bnz	u28351
 10224  0024E8  05C3               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 10225  0024EA  B0D8               	btfsc	status,0,c
 10226  0024EC                     u28351:
 10227  0024EC  0012               	return	
 10228  0024EE                     u28350:
 10229                           
 10230                           ; BSR set to: 1
 10231                           ;sm_ControlLearning_MC50.c: 213:             {;sm_ControlLearning_MC50.c: 215:          
      +                                 sm_send_event(&controlLearning_stateMachine, ev_GateOpened);
 10232  0024EE  0EB0               	movlw	low _controlLearning_stateMachine
 10233  0024F0  6E12               	movwf	sm_send_event@psm^0,c
 10234  0024F2  0E02               	movlw	high _controlLearning_stateMachine
 10235  0024F4  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10236  0024F6  0E00               	movlw	0
 10237  0024F8  6E15               	movwf	(sm_send_event@event+1)^0,c
 10238  0024FA  0E0B               	movlw	11
 10239  0024FC  6E14               	movwf	sm_send_event@event^0,c
 10240  0024FE  ECCD  F046         	call	_sm_send_event	;wreg free
 10241                           
 10242                           ;sm_ControlLearning_MC50.c: 216:                 var_sys.StateMotor=InClose;
 10243  002502  0E03               	movlw	3
 10244  002504  0101               	movlb	1	; () banked
 10245  002506  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10246                           
 10247                           ; BSR set to: 1
 10248                           ;sm_ControlLearning_MC50.c: 217:                 ts_system.TimeLearningDecelaration=(100
      +                          0/50)*5;
 10249  002508  0E00               	movlw	0
 10250  00250A  6FD6               	movwf	(_ts_system+55)& (0+255),b	;volatile
 10251  00250C  0E64               	movlw	100
 10252  00250E  6FD5               	movwf	(_ts_system+54)& (0+255),b	;volatile
 10253                           
 10254                           ; BSR set to: 1
 10255                           ;sm_ControlLearning_MC50.c: 218:                 ts_system.TimeWaitToGetCurrent=(1000/50
      +                          )*5;
 10256  002510  0E00               	movlw	0
 10257  002512  6FD4               	movwf	(_ts_system+53)& (0+255),b	;volatile
 10258  002514  0E64               	movlw	100
 10259  002516                     L67:
 10260  002516  6FD3               	movwf	(_ts_system+52)& (0+255),b	;volatile
 10261                           
 10262                           ; BSR set to: 1
 10263                           ;sm_ControlLearning_MC50.c: 219:                 ts_system.TimeWaitReleCapacitor = (1000
      +                          /50);
 10264  002518  0E00               	movlw	0
 10265  00251A  6FE4               	movwf	(_ts_system+69)& (0+255),b	;volatile
 10266  00251C  0E14               	movlw	20
 10267  00251E  6FE3               	movwf	(_ts_system+68)& (0+255),b	;volatile
 10268                           
 10269                           ; BSR set to: 1
 10270                           ;sm_ControlLearning_MC50.c: 220:                 control_limit_switch = 0;
 10271  002520  0E00               	movlw	0
 10272  002522  0100               	movlb	0	; () banked
 10273  002524  6F81               	movwf	_control_limit_switch& (0+255),b
 10274  002526  0012               	return	
 10275  002528                     l23691:
 10276                           
 10277                           ; BSR set to: 0
 10278  002528  0101               	movlb	1	; () banked
 10279  00252A  5100               	movf	_var_sys& (0+255),w,b	;volatile
 10280  00252C  B4D8               	btfsc	status,2,c
 10281  00252E  D7BC               	goto	u28310
 10282                           
 10283                           ; BSR set to: 1
 10284                           ;sm_ControlLearning_MC50.c: 230:             {;sm_ControlLearning_MC50.c: 231:          
      +                                 ts_system.TimeWaitToNextState=(2*(1000/50));
 10285  002530  0E00               	movlw	0
 10286  002532  6FC4               	movwf	(_ts_system+37)& (0+255),b	;volatile
 10287  002534  0E28               	movlw	40
 10288  002536  6FC3               	movwf	(_ts_system+36)& (0+255),b	;volatile
 10289                           
 10290                           ; BSR set to: 1
 10291                           ;sm_ControlLearning_MC50.c: 232:                 if (ts_system.TimeWaitReleCapacitor <=0
      +                          )
 10292  002538  BFE4               	btfsc	(_ts_system+69)& (0+255),7,b	;volatile
 10293  00253A  D005               	goto	u28370
 10294  00253C  51E4               	movf	(_ts_system+69)& (0+255),w,b	;volatile
 10295  00253E  E102               	bnz	u28371
 10296  002540  05E3               	decf	(_ts_system+68)& (0+255),w,b	;volatile
 10297  002542  B0D8               	btfsc	status,0,c
 10298  002544                     u28371:
 10299  002544  0012               	return	
 10300  002546                     u28370:
 10301                           
 10302                           ; BSR set to: 1
 10303                           ;sm_ControlLearning_MC50.c: 233:                 {;sm_ControlLearning_MC50.c: 234:      
      +                                     if(ts_system.TimeWaitToGetCurrent>0)
 10304  002546  BFD4               	btfsc	(_ts_system+53)& (0+255),7,b	;volatile
 10305  002548  0012               	return	
 10306  00254A  51D4               	movf	(_ts_system+53)& (0+255),w,b	;volatile
 10307  00254C  E103               	bnz	u28380
 10308  00254E  05D3               	decf	(_ts_system+52)& (0+255),w,b	;volatile
 10309  002550  A0D8               	btfss	status,0,c
 10310  002552  0012               	return	
 10311  002554                     u28380:
 10312                           
 10313                           ; BSR set to: 1
 10314                           ;sm_ControlLearning_MC50.c: 235:                 {;sm_ControlLearning_MC50.c: 236:      
      +                                         learn_st.openHistCurrent=calculateMean(learn_st.openHistCurrent,var_sys.A
      +                          ctualHistCurrent);
 10315  002554  C06E  F010         	movff	_learn_st+14,calculateMean@meanValue	;volatile
 10316  002558  C06F  F011         	movff	_learn_st+15,calculateMean@meanValue+1	;volatile
 10317  00255C  6A12               	clrf	(calculateMean@meanValue+2)^0,c
 10318  00255E  6A13               	clrf	(calculateMean@meanValue+3)^0,c
 10319  002560  C130  F014         	movff	_var_sys+48,calculateMean@newValue	;volatile
 10320  002564  C131  F015         	movff	_var_sys+49,calculateMean@newValue+1	;volatile
 10321  002568  C132  F016         	movff	_var_sys+50,calculateMean@newValue+2	;volatile
 10322  00256C  C133  F017         	movff	_var_sys+51,calculateMean@newValue+3	;volatile
 10323  002570  EC6D  F046         	call	_calculateMean	;wreg free
 10324  002574  C010  F06E         	movff	?_calculateMean,_learn_st+14	;volatile
 10325  002578  C011  F06F         	movff	?_calculateMean+1,_learn_st+15	;volatile
 10326  00257C  0012               	return	
 10327  00257E                     l23703:
 10328                           
 10329                           ; BSR set to: 0
 10330                           ;sm_ControlLearning_MC50.c: 243:         {;sm_ControlLearning_MC50.c: 244:             i
      +                          f((var_sys.FimCurso_CloseIsEnabled==YES)||(control_limit_switch == 1))
 10331  00257E  0101               	movlb	1	; () banked
 10332  002580  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
 10333  002582  B4D8               	btfsc	status,2,c
 10334  002584  D004               	goto	u28400
 10335                           
 10336                           ; BSR set to: 1
 10337  002586  0100               	movlb	0	; () banked
 10338  002588  0581               	decf	_control_limit_switch& (0+255),w,b
 10339  00258A  A4D8               	btfss	status,2,c
 10340  00258C  D020               	goto	l23723
 10341  00258E                     u28400:
 10342                           
 10343                           ;sm_ControlLearning_MC50.c: 245:             {;sm_ControlLearning_MC50.c: 246:          
      +                                 control_limit_switch = 1;
 10344  00258E  0E01               	movlw	1
 10345  002590  0100               	movlb	0	; () banked
 10346  002592  6F81               	movwf	_control_limit_switch& (0+255),b
 10347                           
 10348                           ;sm_ControlLearning_MC50.c: 247:                 var_sys.StateMotor=Stopped;
 10349  002594  0E00               	movlw	0
 10350  002596  0101               	movlb	1	; () banked
 10351  002598  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10352                           
 10353                           ; BSR set to: 1
 10354                           ;sm_ControlLearning_MC50.c: 248:                 if(ts_system.TimeWaitToNextState<=0)
 10355  00259A  BFC4               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 10356  00259C  D005               	goto	u28410
 10357  00259E  51C4               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 10358  0025A0  E102               	bnz	u28411
 10359  0025A2  05C3               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 10360  0025A4  B0D8               	btfsc	status,0,c
 10361  0025A6                     u28411:
 10362  0025A6  0012               	return	
 10363  0025A8                     u28410:
 10364                           
 10365                           ; BSR set to: 1
 10366                           ;sm_ControlLearning_MC50.c: 249:                 {;sm_ControlLearning_MC50.c: 250:      
      +                                         sm_send_event(&controlLearning_stateMachine, ev_GateClosed);
 10367  0025A8  0EB0               	movlw	low _controlLearning_stateMachine
 10368  0025AA  6E12               	movwf	sm_send_event@psm^0,c
 10369  0025AC  0E02               	movlw	high _controlLearning_stateMachine
 10370  0025AE  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10371  0025B0  0E00               	movlw	0
 10372  0025B2  6E15               	movwf	(sm_send_event@event+1)^0,c
 10373  0025B4  0E0A               	movlw	10
 10374  0025B6  6E14               	movwf	sm_send_event@event^0,c
 10375  0025B8  ECCD  F046         	call	_sm_send_event	;wreg free
 10376                           
 10377                           ;sm_ControlLearning_MC50.c: 251:                     var_sys.StateMotor=InOpenFull;
 10378  0025BC  0E01               	movlw	1
 10379  0025BE  0101               	movlb	1	; () banked
 10380  0025C0  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10381                           
 10382                           ; BSR set to: 1
 10383                           ;sm_ControlLearning_MC50.c: 252:                     var_sys.LearningDecelaration=NO;
 10384  0025C2  0E00               	movlw	0
 10385  0025C4  6F47               	movwf	(_var_sys+71)& (0+255),b	;volatile
 10386                           
 10387                           ; BSR set to: 1
 10388                           ;sm_ControlLearning_MC50.c: 253:                     ts_system.TimeWaitToGetCurrent=(100
      +                          0/50)*3;
 10389  0025C6  0E00               	movlw	0
 10390  0025C8  6FD4               	movwf	(_ts_system+53)& (0+255),b	;volatile
 10391  0025CA  0E3C               	movlw	60
 10392  0025CC  D7A4               	goto	L67
 10393  0025CE                     l23723:
 10394                           
 10395                           ; BSR set to: 0
 10396  0025CE  0101               	movlb	1	; () banked
 10397  0025D0  5100               	movf	_var_sys& (0+255),w,b	;volatile
 10398  0025D2  B4D8               	btfsc	status,2,c
 10399  0025D4  D769               	goto	u28310
 10400                           
 10401                           ; BSR set to: 1
 10402                           ;sm_ControlLearning_MC50.c: 265:             {;sm_ControlLearning_MC50.c: 266:          
      +                                 ts_system.TimeWaitToNextState=(2*(1000/50));
 10403  0025D6  0E00               	movlw	0
 10404  0025D8  6FC4               	movwf	(_ts_system+37)& (0+255),b	;volatile
 10405  0025DA  0E28               	movlw	40
 10406  0025DC  6FC3               	movwf	(_ts_system+36)& (0+255),b	;volatile
 10407                           
 10408                           ; BSR set to: 1
 10409                           ;sm_ControlLearning_MC50.c: 267:                 if (ts_system.TimeWaitReleCapacitor <=0
      +                          )
 10410  0025DE  BFE4               	btfsc	(_ts_system+69)& (0+255),7,b	;volatile
 10411  0025E0  D005               	goto	u28430
 10412  0025E2  51E4               	movf	(_ts_system+69)& (0+255),w,b	;volatile
 10413  0025E4  E102               	bnz	u28431
 10414  0025E6  05E3               	decf	(_ts_system+68)& (0+255),w,b	;volatile
 10415  0025E8  B0D8               	btfsc	status,0,c
 10416  0025EA                     u28431:
 10417  0025EA  0012               	return	
 10418  0025EC                     u28430:
 10419                           
 10420                           ; BSR set to: 1
 10421                           ;sm_ControlLearning_MC50.c: 268:                 {;sm_ControlLearning_MC50.c: 269:      
      +                                     if(ts_system.TimeWaitToGetCurrent>0)
 10422  0025EC  BFD4               	btfsc	(_ts_system+53)& (0+255),7,b	;volatile
 10423  0025EE  0012               	return	
 10424  0025F0  51D4               	movf	(_ts_system+53)& (0+255),w,b	;volatile
 10425  0025F2  E103               	bnz	u28440
 10426  0025F4  05D3               	decf	(_ts_system+52)& (0+255),w,b	;volatile
 10427  0025F6  A0D8               	btfss	status,0,c
 10428  0025F8  0012               	return	
 10429  0025FA                     u28440:
 10430                           
 10431                           ; BSR set to: 1
 10432                           ;sm_ControlLearning_MC50.c: 270:                 {;sm_ControlLearning_MC50.c: 271:      
      +                                         learn_st.closeHistCurrent=calculateMean(learn_st.closeHistCurrent,var_sys
      +                          .ActualHistCurrent);
 10433  0025FA  C070  F010         	movff	_learn_st+16,calculateMean@meanValue	;volatile
 10434  0025FE  C071  F011         	movff	_learn_st+17,calculateMean@meanValue+1	;volatile
 10435  002602  6A12               	clrf	(calculateMean@meanValue+2)^0,c
 10436  002604  6A13               	clrf	(calculateMean@meanValue+3)^0,c
 10437  002606  C130  F014         	movff	_var_sys+48,calculateMean@newValue	;volatile
 10438  00260A  C131  F015         	movff	_var_sys+49,calculateMean@newValue+1	;volatile
 10439  00260E  C132  F016         	movff	_var_sys+50,calculateMean@newValue+2	;volatile
 10440  002612  C133  F017         	movff	_var_sys+51,calculateMean@newValue+3	;volatile
 10441  002616  EC6D  F046         	call	_calculateMean	;wreg free
 10442  00261A  C010  F070         	movff	?_calculateMean,_learn_st+16	;volatile
 10443  00261E  C011  F071         	movff	?_calculateMean+1,_learn_st+17	;volatile
 10444  002622  0012               	return	
 10445  002624                     l23735:
 10446                           
 10447                           ; BSR set to: 0
 10448                           ;sm_ControlLearning_MC50.c: 278:         {;sm_ControlLearning_MC50.c: 279:             i
      +                          f(((var_sys.FimCurso_OpenIsEnabled==YES)||control_limit_switch == 1)||(var_sys.LearningD
      +                          ecelaration==YES && (button_struct.current == 0 ||typeOpenOrder == TypeFull) && var_sys.
      +                          programinAutomatic == 1))
 10449  002624  0101               	movlb	1	; () banked
 10450  002626  0504               	decf	(_var_sys+4)& (0+255),w,b	;volatile
 10451  002628  B4D8               	btfsc	status,2,c
 10452  00262A  D011               	goto	u28500
 10453                           
 10454                           ; BSR set to: 1
 10455  00262C  0100               	movlb	0	; () banked
 10456  00262E  0581               	decf	_control_limit_switch& (0+255),w,b
 10457  002630  B4D8               	btfsc	status,2,c
 10458  002632  D00D               	goto	u28500
 10459                           
 10460                           ; BSR set to: 0
 10461  002634  0101               	movlb	1	; () banked
 10462  002636  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 10463  002638  A4D8               	btfss	status,2,c
 10464  00263A  D02C               	goto	l23761
 10465                           
 10466                           ; BSR set to: 1
 10467  00263C  504D               	movf	(_button_struct+1)^0,w,c	;volatile
 10468  00263E  B4D8               	btfsc	status,2,c
 10469  002640  D003               	goto	u28490
 10470                           
 10471                           ; BSR set to: 1
 10472  002642  043A               	decf	sm_execute_ControlLearning@typeOpenOrder^0,w,c
 10473  002644  A4D8               	btfss	status,2,c
 10474  002646  D026               	goto	l23761
 10475  002648                     u28490:
 10476                           
 10477                           ; BSR set to: 1
 10478  002648  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
 10479  00264A  A4D8               	btfss	status,2,c
 10480  00264C  D023               	goto	l23761
 10481  00264E                     u28500:
 10482                           
 10483                           ;sm_ControlLearning_MC50.c: 280:             {;sm_ControlLearning_MC50.c: 282:          
      +                                 var_sys.Counter_Learning = 0;
 10484  00264E  0E00               	movlw	0
 10485  002650  0101               	movlb	1	; () banked
 10486  002652  6F17               	movwf	(_var_sys+23)& (0+255),b	;volatile
 10487                           
 10488                           ;sm_ControlLearning_MC50.c: 283:                 var_sys.LearningDecelaration = NO;
 10489  002654  0E00               	movlw	0
 10490  002656  6F47               	movwf	(_var_sys+71)& (0+255),b	;volatile
 10491                           
 10492                           ;sm_ControlLearning_MC50.c: 284:                 control_limit_switch = 1;
 10493  002658  0E01               	movlw	1
 10494  00265A  0100               	movlb	0	; () banked
 10495  00265C  6F81               	movwf	_control_limit_switch& (0+255),b
 10496                           
 10497                           ;sm_ControlLearning_MC50.c: 285:                 var_sys.StateMotor=Stopped;
 10498  00265E  0E00               	movlw	0
 10499  002660  0101               	movlb	1	; () banked
 10500  002662  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10501                           
 10502                           ; BSR set to: 1
 10503                           ;sm_ControlLearning_MC50.c: 286:                 if(ts_system.TimeWaitToNextState<=0)
 10504  002664  BFC4               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 10505  002666  D005               	goto	u28510
 10506  002668  51C4               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 10507  00266A  E102               	bnz	u28511
 10508  00266C  05C3               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 10509  00266E  B0D8               	btfsc	status,0,c
 10510  002670                     u28511:
 10511  002670  0012               	return	
 10512  002672                     u28510:
 10513                           
 10514                           ; BSR set to: 1
 10515                           ;sm_ControlLearning_MC50.c: 287:                 {;sm_ControlLearning_MC50.c: 288:      
      +                                         sm_send_event(&controlLearning_stateMachine, ev_GateOpened);
 10516  002672  0EB0               	movlw	low _controlLearning_stateMachine
 10517  002674  6E12               	movwf	sm_send_event@psm^0,c
 10518  002676  0E02               	movlw	high _controlLearning_stateMachine
 10519  002678  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10520  00267A  0E00               	movlw	0
 10521  00267C  6E15               	movwf	(sm_send_event@event+1)^0,c
 10522  00267E  0E0B               	movlw	11
 10523  002680  6E14               	movwf	sm_send_event@event^0,c
 10524  002682  ECCD  F046         	call	_sm_send_event	;wreg free
 10525                           
 10526                           ;sm_ControlLearning_MC50.c: 289:                     var_sys.StateMotor=InClose;
 10527  002686  0E03               	movlw	3
 10528  002688  0101               	movlb	1	; () banked
 10529  00268A  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10530                           
 10531                           ; BSR set to: 1
 10532                           ;sm_ControlLearning_MC50.c: 290:                     ts_system.TimeWaitToGetCurrent=(100
      +                          0/50)*4;
 10533  00268C  0E00               	movlw	0
 10534  00268E  6FD4               	movwf	(_ts_system+53)& (0+255),b	;volatile
 10535  002690  0E50               	movlw	80
 10536  002692  D741               	goto	L67
 10537  002694                     l23761:
 10538                           
 10539                           ; BSR set to: 1
 10540  002694  5100               	movf	_var_sys& (0+255),w,b	;volatile
 10541  002696  B4D8               	btfsc	status,2,c
 10542  002698  D707               	goto	u28310
 10543                           
 10544                           ; BSR set to: 1
 10545  00269A  504D               	movf	(_button_struct+1)^0,w,c	;volatile
 10546  00269C  B4D8               	btfsc	status,2,c
 10547  00269E  D003               	goto	u28540
 10548                           
 10549                           ; BSR set to: 1
 10550  0026A0  043A               	decf	sm_execute_ControlLearning@typeOpenOrder^0,w,c
 10551  0026A2  A4D8               	btfss	status,2,c
 10552  0026A4  D00F               	goto	l23775
 10553  0026A6                     u28540:
 10554                           
 10555                           ; BSR set to: 1
 10556  0026A6  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
 10557  0026A8  A4D8               	btfss	status,2,c
 10558  0026AA  D00C               	goto	l23775
 10559                           
 10560                           ; BSR set to: 1
 10561  0026AC  5147               	movf	(_var_sys+71)& (0+255),w,b	;volatile
 10562  0026AE  A4D8               	btfss	status,2,c
 10563  0026B0  D009               	goto	l23775
 10564  0026B2                     u28560:
 10565                           
 10566                           ; BSR set to: 1
 10567                           ;sm_ControlLearning_MC50.c: 303:                 var_sys.LearningDecelaration=YES;
 10568  0026B2  0E01               	movlw	1
 10569  0026B4  6F47               	movwf	(_var_sys+71)& (0+255),b	;volatile
 10570                           
 10571                           ;sm_ControlLearning_MC50.c: 306:                 button_struct.processed = 1;
 10572  0026B6  0E01               	movlw	1
 10573  0026B8  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
 10574                           
 10575                           ;sm_ControlLearning_MC50.c: 307:                 ts_system.TimeWaitToGetCurrent=(1000/50
      +                          )*4;
 10576  0026BA  0E00               	movlw	0
 10577  0026BC  6FD4               	movwf	(_ts_system+53)& (0+255),b	;volatile
 10578  0026BE  0E50               	movlw	80
 10579  0026C0  6FD3               	movwf	(_ts_system+52)& (0+255),b	;volatile
 10580                           
 10581                           ;sm_ControlLearning_MC50.c: 309:             }
 10582  0026C2  0012               	return	
 10583  0026C4                     l23775:
 10584                           
 10585                           ; BSR set to: 1
 10586  0026C4  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 10587  0026C6  A4D8               	btfss	status,2,c
 10588  0026C8  D00C               	goto	l23783
 10589                           
 10590                           ; BSR set to: 1
 10591                           ;sm_ControlLearning_MC50.c: 313:                 ts_system.TimeWaitToNextState=(2*(1000/
      +                          50));
 10592  0026CA  0E00               	movlw	0
 10593  0026CC  6FC4               	movwf	(_ts_system+37)& (0+255),b	;volatile
 10594  0026CE  0E28               	movlw	40
 10595  0026D0  6FC3               	movwf	(_ts_system+36)& (0+255),b	;volatile
 10596                           
 10597                           ; BSR set to: 1
 10598                           ;sm_ControlLearning_MC50.c: 315:                 if(ts_system.TimeWaitToGetCurrent>0)
 10599  0026D2  BFD4               	btfsc	(_ts_system+53)& (0+255),7,b	;volatile
 10600  0026D4  0012               	return	
 10601  0026D6  51D4               	movf	(_ts_system+53)& (0+255),w,b	;volatile
 10602  0026D8  E103               	bnz	u28580
 10603  0026DA  05D3               	decf	(_ts_system+52)& (0+255),w,b	;volatile
 10604  0026DC  A0D8               	btfss	status,0,c
 10605  0026DE  0012               	return	
 10606  0026E0                     u28580:
 10607  0026E0  D739               	goto	u28380
 10608  0026E2                     l23783:
 10609                           
 10610                           ; BSR set to: 1
 10611                           ;sm_ControlLearning_MC50.c: 322:             {;sm_ControlLearning_MC50.c: 323:          
      +                                 var_sys.Counter_Learning = 1;
 10612  0026E2  0E01               	movlw	1
 10613  0026E4  6F17               	movwf	(_var_sys+23)& (0+255),b	;volatile
 10614                           
 10615                           ;sm_ControlLearning_MC50.c: 324:                 ts_system.TimeWaitToNextState=(2*(1000/
      +                          50));
 10616  0026E6  0E00               	movlw	0
 10617  0026E8  6FC4               	movwf	(_ts_system+37)& (0+255),b	;volatile
 10618  0026EA  0E28               	movlw	40
 10619  0026EC  6FC3               	movwf	(_ts_system+36)& (0+255),b	;volatile
 10620                           
 10621                           ; BSR set to: 1
 10622                           ;sm_ControlLearning_MC50.c: 326:                 if (ts_system.TimeWaitReleCapacitor <=0
      +                          )
 10623  0026EE  BFE4               	btfsc	(_ts_system+69)& (0+255),7,b	;volatile
 10624  0026F0  D005               	goto	u28590
 10625  0026F2  51E4               	movf	(_ts_system+69)& (0+255),w,b	;volatile
 10626  0026F4  E102               	bnz	u28591
 10627  0026F6  05E3               	decf	(_ts_system+68)& (0+255),w,b	;volatile
 10628  0026F8  B0D8               	btfsc	status,0,c
 10629  0026FA                     u28591:
 10630  0026FA  0012               	return	
 10631  0026FC                     u28590:
 10632                           
 10633                           ; BSR set to: 1
 10634                           ;sm_ControlLearning_MC50.c: 327:                 {;sm_ControlLearning_MC50.c: 328:      
      +                                     if(ts_system.TimeWaitToGetCurrent>0)
 10635  0026FC  BFD4               	btfsc	(_ts_system+53)& (0+255),7,b	;volatile
 10636  0026FE  0012               	return	
 10637  002700  51D4               	movf	(_ts_system+53)& (0+255),w,b	;volatile
 10638  002702  E103               	bnz	u28600
 10639  002704  05D3               	decf	(_ts_system+52)& (0+255),w,b	;volatile
 10640  002706  A0D8               	btfss	status,0,c
 10641  002708  0012               	return	
 10642  00270A                     u28600:
 10643                           
 10644                           ; BSR set to: 1
 10645                           ;sm_ControlLearning_MC50.c: 329:                 {;sm_ControlLearning_MC50.c: 330:      
      +                                         learn_st.openCurrent=calculateMean(learn_st.openCurrent,var_sys.ActualCur
      +                          rent);
 10646  00270A  C06A  F010         	movff	_learn_st+10,calculateMean@meanValue	;volatile
 10647  00270E  C06B  F011         	movff	_learn_st+11,calculateMean@meanValue+1	;volatile
 10648  002712  6A12               	clrf	(calculateMean@meanValue+2)^0,c
 10649  002714  6A13               	clrf	(calculateMean@meanValue+3)^0,c
 10650  002716  C12E  F014         	movff	_var_sys+46,calculateMean@newValue	;volatile
 10651  00271A  C12F  F015         	movff	_var_sys+47,calculateMean@newValue+1	;volatile
 10652  00271E  6A16               	clrf	(calculateMean@newValue+2)^0,c
 10653  002720  6A17               	clrf	(calculateMean@newValue+3)^0,c
 10654  002722  EC6D  F046         	call	_calculateMean	;wreg free
 10655  002726  C010  F06A         	movff	?_calculateMean,_learn_st+10	;volatile
 10656  00272A  C011  F06B         	movff	?_calculateMean+1,_learn_st+11	;volatile
 10657  00272E  0012               	return	
 10658  002730                     l23791:
 10659                           
 10660                           ; BSR set to: 0
 10661                           ;sm_ControlLearning_MC50.c: 337:         {;sm_ControlLearning_MC50.c: 338:             i
      +                          f((var_sys.FimCurso_CloseIsEnabled==YES)||( var_sys.LearningDecelaration==YES && (button
      +                          _struct.current == 0 || typeOpenOrder == TypeFull) && var_sys.programinAutomatic == 1))
 10662  002730  0101               	movlb	1	; () banked
 10663  002732  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
 10664  002734  B4D8               	btfsc	status,2,c
 10665  002736  D00C               	goto	u28650
 10666                           
 10667                           ; BSR set to: 1
 10668  002738  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 10669  00273A  A4D8               	btfss	status,2,c
 10670  00273C  D06F               	goto	l23837
 10671                           
 10672                           ; BSR set to: 1
 10673  00273E  504D               	movf	(_button_struct+1)^0,w,c	;volatile
 10674  002740  B4D8               	btfsc	status,2,c
 10675  002742  D003               	goto	u28640
 10676                           
 10677                           ; BSR set to: 1
 10678  002744  043A               	decf	sm_execute_ControlLearning@typeOpenOrder^0,w,c
 10679  002746  A4D8               	btfss	status,2,c
 10680  002748  D069               	goto	l23837
 10681  00274A                     u28640:
 10682                           
 10683                           ; BSR set to: 1
 10684  00274A  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
 10685  00274C  A4D8               	btfss	status,2,c
 10686  00274E  D066               	goto	l23837
 10687  002750                     u28650:
 10688                           
 10689                           ; BSR set to: 1
 10690                           ;sm_ControlLearning_MC50.c: 339:             {;sm_ControlLearning_MC50.c: 342:          
      +                                 var_sys.Statedoorcontrol = st_Closed;
 10691  002750  0E01               	movlw	1
 10692  002752  6F1C               	movwf	(_var_sys+28)& (0+255),b	;volatile
 10693                           
 10694                           ;sm_ControlLearning_MC50.c: 343:                 var_sys.Counter_Learning = 0;
 10695  002754  0E00               	movlw	0
 10696  002756  6F17               	movwf	(_var_sys+23)& (0+255),b	;volatile
 10697                           
 10698                           ;sm_ControlLearning_MC50.c: 344:                 var_sys.LearningDecelaration = NO;
 10699  002758  0E00               	movlw	0
 10700  00275A  6F47               	movwf	(_var_sys+71)& (0+255),b	;volatile
 10701                           
 10702                           ;sm_ControlLearning_MC50.c: 345:                 var_sys.StateMotor=Stopped;
 10703  00275C  0E00               	movlw	0
 10704  00275E  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10705                           
 10706                           ; BSR set to: 1
 10707                           ;sm_ControlLearning_MC50.c: 346:                 sm_send_event(&controlLearning_stateMac
      +                          hine, ev_GateClosed);
 10708  002760  0EB0               	movlw	low _controlLearning_stateMachine
 10709  002762  6E12               	movwf	sm_send_event@psm^0,c
 10710  002764  0E02               	movlw	high _controlLearning_stateMachine
 10711  002766  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10712  002768  0E00               	movlw	0
 10713  00276A  6E15               	movwf	(sm_send_event@event+1)^0,c
 10714  00276C  0E0A               	movlw	10
 10715  00276E  6E14               	movwf	sm_send_event@event^0,c
 10716  002770  ECCD  F046         	call	_sm_send_event	;wreg free
 10717                           
 10718                           ;sm_ControlLearning_MC50.c: 347:                 sm_send_event(&controlGate_stateMachine
      +                          , ev_LearningComplete);
 10719  002774  0EE7               	movlw	low _controlGate_stateMachine
 10720  002776  6E12               	movwf	sm_send_event@psm^0,c
 10721  002778  0E01               	movlw	high _controlGate_stateMachine
 10722  00277A  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10723  00277C  0E00               	movlw	0
 10724  00277E  6E15               	movwf	(sm_send_event@event+1)^0,c
 10725  002780  0E13               	movlw	19
 10726  002782  6E14               	movwf	sm_send_event@event^0,c
 10727  002784  ECCD  F046         	call	_sm_send_event	;wreg free
 10728                           
 10729                           ;sm_ControlLearning_MC50.c: 348:                 var_sys_NVM.learningTimeToClose=learn_s
      +                          t.timeClose;
 10730  002788  C060  F0D0         	movff	_learn_st,_var_sys_NVM+56	;volatile
 10731  00278C  C061  F0D1         	movff	_learn_st+1,_var_sys_NVM+57	;volatile
 10732  002790  C062  F0D2         	movff	_learn_st+2,_var_sys_NVM+58	;volatile
 10733  002794  C063  F0D3         	movff	_learn_st+3,_var_sys_NVM+59	;volatile
 10734                           
 10735                           ;sm_ControlLearning_MC50.c: 349:                 var_sys_NVM.learningTimeToOpen=learn_st
      +                          .timeOpen;
 10736  002798  C064  F0CC         	movff	_learn_st+4,_var_sys_NVM+52	;volatile
 10737  00279C  C065  F0CD         	movff	_learn_st+5,_var_sys_NVM+53	;volatile
 10738  0027A0  C066  F0CE         	movff	_learn_st+6,_var_sys_NVM+54	;volatile
 10739  0027A4  C067  F0CF         	movff	_learn_st+7,_var_sys_NVM+55	;volatile
 10740                           
 10741                           ;sm_ControlLearning_MC50.c: 350:                 if (var_sys.programinAutomatic == 1){
 10742  0027A8  0101               	movlb	1	; () banked
 10743  0027AA  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
 10744  0027AC  A4D8               	btfss	status,2,c
 10745  0027AE  D005               	goto	l23815
 10746                           
 10747                           ; BSR set to: 1
 10748                           ;sm_ControlLearning_MC50.c: 351:                     var_sys_NVM.decelarationClose=learn
      +                          _st.timeDecelerationClose ;
 10749  0027B0  C068  F099         	movff	_learn_st+8,_var_sys_NVM+1	;volatile
 10750                           
 10751                           ;sm_ControlLearning_MC50.c: 352:                     var_sys_NVM.decelarationOpen=learn_
      +                          st.timeDecelerationOpen ;
 10752  0027B4  C069  F098         	movff	_learn_st+9,_var_sys_NVM	;volatile
 10753                           
 10754                           ;sm_ControlLearning_MC50.c: 353:                                 }
 10755  0027B8  D005               	goto	l23817
 10756  0027BA                     l23815:
 10757                           
 10758                           ; BSR set to: 1
 10759                           ;sm_ControlLearning_MC50.c: 355:                     var_sys_NVM.decelarationClose=4 ;
 10760  0027BA  0E04               	movlw	4
 10761  0027BC  0100               	movlb	0	; () banked
 10762  0027BE  6F99               	movwf	(_var_sys_NVM+1)& (0+255),b	;volatile
 10763                           
 10764                           ;sm_ControlLearning_MC50.c: 356:                     var_sys_NVM.decelarationOpen=4 ;
 10765  0027C0  0E04               	movlw	4
 10766  0027C2  6F98               	movwf	_var_sys_NVM& (0+255),b	;volatile
 10767  0027C4                     l23817:
 10768                           
 10769                           ;sm_ControlLearning_MC50.c: 358:                 var_sys_NVM.learningCurrentNormalClose=
      +                          learn_st.closeCurrent;
 10770  0027C4  C06C  F0C8         	movff	_learn_st+12,_var_sys_NVM+48	;volatile
 10771  0027C8  C06D  F0C9         	movff	_learn_st+13,_var_sys_NVM+49	;volatile
 10772                           
 10773                           ;sm_ControlLearning_MC50.c: 359:                 var_sys_NVM.learningCurrentNormalOpen=l
      +                          earn_st.openCurrent;
 10774  0027CC  C06A  F0CA         	movff	_learn_st+10,_var_sys_NVM+50	;volatile
 10775  0027D0  C06B  F0CB         	movff	_learn_st+11,_var_sys_NVM+51	;volatile
 10776                           
 10777                           ;sm_ControlLearning_MC50.c: 360:                 var_sys_NVM.learningCurrentDecelaration
      +                          Open=learn_st.openHistCurrent;
 10778  0027D4  C06E  F0C4         	movff	_learn_st+14,_var_sys_NVM+44	;volatile
 10779  0027D8  C06F  F0C5         	movff	_learn_st+15,_var_sys_NVM+45	;volatile
 10780  0027DC  0100               	movlb	0	; () banked
 10781  0027DE  6BC6               	clrf	(_var_sys_NVM+46)& (0+255),b	;volatile
 10782  0027E0  6BC7               	clrf	(_var_sys_NVM+47)& (0+255),b	;volatile
 10783                           
 10784                           ; BSR set to: 0
 10785                           ;sm_ControlLearning_MC50.c: 361:                 var_sys_NVM.learningCurrentDecelaration
      +                          Close=learn_st.closeHistCurrent;
 10786  0027E2  C070  F0C0         	movff	_learn_st+16,_var_sys_NVM+40	;volatile
 10787  0027E6  C071  F0C1         	movff	_learn_st+17,_var_sys_NVM+41	;volatile
 10788  0027EA  6BC2               	clrf	(_var_sys_NVM+42)& (0+255),b	;volatile
 10789  0027EC  6BC3               	clrf	(_var_sys_NVM+43)& (0+255),b	;volatile
 10790                           
 10791                           ; BSR set to: 0
 10792                           ;sm_ControlLearning_MC50.c: 362:                 SaveNVM_VarSystem(pageMemoryP);
 10793  0027EE  0E00               	movlw	0
 10794  0027F0  ECDB  F04A         	call	_SaveNVM_VarSystem
 10795                           
 10796                           ;sm_ControlLearning_MC50.c: 363:                 SaveNVM_VarSystem(pageMemoryLearningVar
      +                          s);
 10797  0027F4  0E03               	movlw	3
 10798  0027F6  ECDB  F04A         	call	_SaveNVM_VarSystem
 10799                           
 10800                           ;sm_ControlLearning_MC50.c: 364:                 SaveNVM_VarSystem(pageMemoryCounters);
 10801  0027FA  0E02               	movlw	2
 10802  0027FC  ECDB  F04A         	call	_SaveNVM_VarSystem
 10803                           
 10804                           ;sm_ControlLearning_MC50.c: 365:                 var_sys.LearningIsEnabled=NO;
 10805  002800  0E00               	movlw	0
 10806  002802  0101               	movlb	1	; () banked
 10807  002804  6F26               	movwf	(_var_sys+38)& (0+255),b	;volatile
 10808                           
 10809                           ; BSR set to: 1
 10810                           ;sm_ControlLearning_MC50.c: 366:                 var_sys.PositionActual=0;
 10811  002806  0E00               	movlw	0
 10812  002808  6F1E               	movwf	(_var_sys+30)& (0+255),b	;volatile
 10813  00280A  0E00               	movlw	0
 10814  00280C  6F1F               	movwf	(_var_sys+31)& (0+255),b	;volatile
 10815  00280E  0E00               	movlw	0
 10816  002810  6F20               	movwf	(_var_sys+32)& (0+255),b	;volatile
 10817  002812  0E00               	movlw	0
 10818  002814  6F21               	movwf	(_var_sys+33)& (0+255),b	;volatile
 10819                           
 10820                           ; BSR set to: 1
 10821                           ;sm_ControlLearning_MC50.c: 367:                 var_sys.PositionIsLost = NO;
 10822  002816  0E00               	movlw	0
 10823  002818  6F48               	movwf	(_var_sys+72)& (0+255),b	;volatile
 10824                           
 10825                           ;sm_ControlLearning_MC50.c: 369:             }
 10826  00281A  0012               	return	
 10827  00281C                     l23837:
 10828                           
 10829                           ; BSR set to: 1
 10830  00281C  5100               	movf	_var_sys& (0+255),w,b	;volatile
 10831  00281E  B4D8               	btfsc	status,2,c
 10832  002820  D643               	goto	u28310
 10833                           
 10834                           ; BSR set to: 1
 10835  002822  504D               	movf	(_button_struct+1)^0,w,c	;volatile
 10836  002824  B4D8               	btfsc	status,2,c
 10837  002826  D003               	goto	u28690
 10838                           
 10839                           ; BSR set to: 1
 10840  002828  043A               	decf	sm_execute_ControlLearning@typeOpenOrder^0,w,c
 10841  00282A  A4D8               	btfss	status,2,c
 10842  00282C  D003               	goto	l23849
 10843  00282E                     u28690:
 10844                           
 10845                           ; BSR set to: 1
 10846  00282E  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
 10847  002830  B4D8               	btfsc	status,2,c
 10848  002832  D73F               	goto	u28560
 10849  002834                     l23849:
 10850                           
 10851                           ; BSR set to: 1
 10852  002834  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 10853  002836  A4D8               	btfss	status,2,c
 10854  002838  D008               	goto	l23855
 10855                           
 10856                           ; BSR set to: 1
 10857                           ;sm_ControlLearning_MC50.c: 384:                  if(ts_system.TimeWaitToGetCurrent>0)
 10858  00283A  BFD4               	btfsc	(_ts_system+53)& (0+255),7,b	;volatile
 10859  00283C  0012               	return	
 10860  00283E  51D4               	movf	(_ts_system+53)& (0+255),w,b	;volatile
 10861  002840  E103               	bnz	u28720
 10862  002842  05D3               	decf	(_ts_system+52)& (0+255),w,b	;volatile
 10863  002844  A0D8               	btfss	status,0,c
 10864  002846  0012               	return	
 10865  002848                     u28720:
 10866  002848  D6D8               	goto	u28440
 10867  00284A                     l23855:
 10868                           
 10869                           ; BSR set to: 1
 10870                           ;sm_ControlLearning_MC50.c: 390:             {;sm_ControlLearning_MC50.c: 391:          
      +                                 var_sys.Counter_Learning = 1;
 10871  00284A  0E01               	movlw	1
 10872  00284C  6F17               	movwf	(_var_sys+23)& (0+255),b	;volatile
 10873                           
 10874                           ;sm_ControlLearning_MC50.c: 392:                 ts_system.TimeWaitToNextState=(2*(1000/
      +                          50));
 10875  00284E  0E00               	movlw	0
 10876  002850  6FC4               	movwf	(_ts_system+37)& (0+255),b	;volatile
 10877  002852  0E28               	movlw	40
 10878  002854  6FC3               	movwf	(_ts_system+36)& (0+255),b	;volatile
 10879                           
 10880                           ; BSR set to: 1
 10881                           ;sm_ControlLearning_MC50.c: 395:                 if (ts_system.TimeWaitReleCapacitor <=0
      +                          )
 10882  002856  BFE4               	btfsc	(_ts_system+69)& (0+255),7,b	;volatile
 10883  002858  D005               	goto	u28730
 10884  00285A  51E4               	movf	(_ts_system+69)& (0+255),w,b	;volatile
 10885  00285C  E102               	bnz	u28731
 10886  00285E  05E3               	decf	(_ts_system+68)& (0+255),w,b	;volatile
 10887  002860  B0D8               	btfsc	status,0,c
 10888  002862                     u28731:
 10889  002862  0012               	return	
 10890  002864                     u28730:
 10891                           
 10892                           ; BSR set to: 1
 10893                           ;sm_ControlLearning_MC50.c: 396:                 {;sm_ControlLearning_MC50.c: 397:      
      +                                     if(ts_system.TimeWaitToGetCurrent>0)
 10894  002864  BFD4               	btfsc	(_ts_system+53)& (0+255),7,b	;volatile
 10895  002866  0012               	return	
 10896  002868  51D4               	movf	(_ts_system+53)& (0+255),w,b	;volatile
 10897  00286A  E103               	bnz	u28740
 10898  00286C  05D3               	decf	(_ts_system+52)& (0+255),w,b	;volatile
 10899  00286E  A0D8               	btfss	status,0,c
 10900  002870  0012               	return	
 10901  002872                     u28740:
 10902                           
 10903                           ; BSR set to: 1
 10904                           ;sm_ControlLearning_MC50.c: 398:                 {;sm_ControlLearning_MC50.c: 399:      
      +                                         learn_st.closeCurrent=calculateMean(learn_st.closeCurrent,var_sys.ActualC
      +                          urrent);
 10905  002872  C06C  F010         	movff	_learn_st+12,calculateMean@meanValue	;volatile
 10906  002876  C06D  F011         	movff	_learn_st+13,calculateMean@meanValue+1	;volatile
 10907  00287A  6A12               	clrf	(calculateMean@meanValue+2)^0,c
 10908  00287C  6A13               	clrf	(calculateMean@meanValue+3)^0,c
 10909  00287E  C12E  F014         	movff	_var_sys+46,calculateMean@newValue	;volatile
 10910  002882  C12F  F015         	movff	_var_sys+47,calculateMean@newValue+1	;volatile
 10911  002886  6A16               	clrf	(calculateMean@newValue+2)^0,c
 10912  002888  6A17               	clrf	(calculateMean@newValue+3)^0,c
 10913  00288A  EC6D  F046         	call	_calculateMean	;wreg free
 10914  00288E  C010  F06C         	movff	?_calculateMean,_learn_st+12	;volatile
 10915  002892  C011  F06D         	movff	?_calculateMean+1,_learn_st+13	;volatile
 10916  002896  0012               	return	
 10917  002898                     l23865:
 10918  002898  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
 10919  00289C  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
 10920  0028A0  50DF               	movf	indf2,w,c
 10921  0028A2  0100               	movlb	0	; () banked
 10922  0028A4  6FDE               	movwf	??_sm_execute_ControlLearning& (0+255),b
 10923  0028A6  6BDF               	clrf	(??_sm_execute_ControlLearning+1)& (0+255),b
 10924                           
 10925                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10926                           ; Switch size 1, requested type "simple"
 10927                           ; Number of cases is 1, Range of values is 0 to 0
 10928                           ; switch strategies available:
 10929                           ; Name         Instructions Cycles
 10930                           ; simple_byte            4     3 (average)
 10931                           ;	Chosen strategy is simple_byte
 10932  0028A8  51DF               	movf	(??_sm_execute_ControlLearning+1)& (0+255),w,b
 10933  0028AA  0A00               	xorlw	0	; case 0
 10934  0028AC  A4D8               	btfss	status,2,c
 10935  0028AE  0012               	return	
 10936                           
 10937                           ; BSR set to: 0
 10938                           ; Switch size 1, requested type "simple"
 10939                           ; Number of cases is 6, Range of values is 0 to 5
 10940                           ; switch strategies available:
 10941                           ; Name         Instructions Cycles
 10942                           ; simple_byte           19    10 (average)
 10943                           ;	Chosen strategy is simple_byte
 10944  0028B0  51DE               	movf	??_sm_execute_ControlLearning& (0+255),w,b
 10945  0028B2  0A00               	xorlw	0	; case 0
 10946  0028B4  B4D8               	btfsc	status,2,c
 10947  0028B6  D570               	goto	l23611
 10948  0028B8  0A01               	xorlw	1	; case 1
 10949  0028BA  B4D8               	btfsc	status,2,c
 10950  0028BC  D5BB               	goto	l23635
 10951  0028BE  0A03               	xorlw	3	; case 2
 10952  0028C0  B4D8               	btfsc	status,2,c
 10953  0028C2  D5FA               	goto	l23669
 10954  0028C4  0A01               	xorlw	1	; case 3
 10955  0028C6  B4D8               	btfsc	status,2,c
 10956  0028C8  D65A               	goto	l23703
 10957  0028CA  0A07               	xorlw	7	; case 4
 10958  0028CC  B4D8               	btfsc	status,2,c
 10959  0028CE  D6AA               	goto	l23735
 10960  0028D0  0A01               	xorlw	1	; case 5
 10961  0028D2  A4D8               	btfss	status,2,c
 10962  0028D4  0012               	return	
 10963  0028D6  D72C               	goto	l23791
 10964  0028D8                     __end_of_sm_execute_ControlLearning:
 10965                           	callstack 0
 10966                           
 10967 ;; *************** function _generateErrorLearnig *****************
 10968 ;; Defined at:
 10969 ;;		line 424 in file "sm_ControlLearning_MC50.c"
 10970 ;; Parameters:    Size  Location     Type
 10971 ;;		None
 10972 ;; Auto vars:     Size  Location     Type
 10973 ;;		None
 10974 ;; Return value:  Size  Location     Type
 10975 ;;                  1    wreg      void 
 10976 ;; Registers used:
 10977 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10978 ;; Tracked objects:
 10979 ;;		On entry : 3E/1
 10980 ;;		On exit  : 0/0
 10981 ;;		Unchanged: 0/0
 10982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10983 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10984 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10986 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10987 ;;Total ram usage:        0 bytes
 10988 ;; Hardware stack levels used: 1
 10989 ;; Hardware stack levels required when called: 6
 10990 ;; This function calls:
 10991 ;;		_sm_init
 10992 ;; This function is called by:
 10993 ;;		_sm_execute_ControlLearning
 10994 ;; This function uses a non-reentrant model
 10995 ;;
 10996                           
 10997                           	psect	text19
 10998  008C0C                     __ptext19:
 10999                           	callstack 0
 11000  008C0C                     _generateErrorLearnig:
 11001                           	callstack 22
 11002                           
 11003                           ;sm_ControlLearning_MC50.c: 428:     var_sys.LearningIsEnabled=NO;
 11004                           
 11005                           ;incstack = 0
 11006  008C0C  0E00               	movlw	0
 11007  008C0E  0101               	movlb	1	; () banked
 11008  008C10  6F26               	movwf	(_var_sys+38)& (0+255),b	;volatile
 11009                           
 11010                           ; BSR set to: 1
 11011                           ;sm_ControlLearning_MC50.c: 430:     sm_init(&menuConfiguration_stateMachine,st_MainMenu
      +                          ,HIST_NONE);
 11012  008C12  0EBB               	movlw	low _menuConfiguration_stateMachine
 11013  008C14  6E12               	movwf	sm_init@psm^0,c
 11014  008C16  0E02               	movlw	high _menuConfiguration_stateMachine
 11015  008C18  6E13               	movwf	(sm_init@psm+1)^0,c
 11016  008C1A  0E00               	movlw	0
 11017  008C1C  6E15               	movwf	(sm_init@initial_state+1)^0,c
 11018  008C1E  0E00               	movlw	0
 11019  008C20  6E14               	movwf	sm_init@initial_state^0,c
 11020  008C22  0E00               	movlw	0
 11021  008C24  6E16               	movwf	sm_init@hist_mode^0,c
 11022  008C26  ECDD  F047         	call	_sm_init	;wreg free
 11023                           
 11024                           ;sm_ControlLearning_MC50.c: 431:     sm_init(&main_stateMachine,st_standBy,HIST_NONE);
 11025  008C2A  0EF2               	movlw	low _main_stateMachine
 11026  008C2C  6E12               	movwf	sm_init@psm^0,c
 11027  008C2E  0E01               	movlw	high _main_stateMachine
 11028  008C30  6E13               	movwf	(sm_init@psm+1)^0,c
 11029  008C32  0E00               	movlw	0
 11030  008C34  6E15               	movwf	(sm_init@initial_state+1)^0,c
 11031  008C36  0E00               	movlw	0
 11032  008C38  6E14               	movwf	sm_init@initial_state^0,c
 11033  008C3A  0E00               	movlw	0
 11034  008C3C  6E16               	movwf	sm_init@hist_mode^0,c
 11035  008C3E  ECDD  F047         	call	_sm_init	;wreg free
 11036                           
 11037                           ;sm_ControlLearning_MC50.c: 432:     sm_init(&controlGate_stateMachine,st_Idle,HIST_NONE
      +                          );
 11038  008C42  0EE7               	movlw	low _controlGate_stateMachine
 11039  008C44  6E12               	movwf	sm_init@psm^0,c
 11040  008C46  0E01               	movlw	high _controlGate_stateMachine
 11041  008C48  6E13               	movwf	(sm_init@psm+1)^0,c
 11042  008C4A  0E00               	movlw	0
 11043  008C4C  6E15               	movwf	(sm_init@initial_state+1)^0,c
 11044  008C4E  0E00               	movlw	0
 11045  008C50  6E14               	movwf	sm_init@initial_state^0,c
 11046  008C52  0E00               	movlw	0
 11047  008C54  6E16               	movwf	sm_init@hist_mode^0,c
 11048  008C56  ECDD  F047         	call	_sm_init	;wreg free
 11049                           
 11050                           ;sm_ControlLearning_MC50.c: 433:     sm_init(&controlLearning_stateMachine,st_InitLearni
      +                          ng,HIST_NONE);
 11051  008C5A  0EB0               	movlw	low _controlLearning_stateMachine
 11052  008C5C  6E12               	movwf	sm_init@psm^0,c
 11053  008C5E  0E02               	movlw	high _controlLearning_stateMachine
 11054  008C60  6E13               	movwf	(sm_init@psm+1)^0,c
 11055  008C62  0E00               	movlw	0
 11056  008C64  6E15               	movwf	(sm_init@initial_state+1)^0,c
 11057  008C66  0E00               	movlw	0
 11058  008C68  6E14               	movwf	sm_init@initial_state^0,c
 11059  008C6A  0E00               	movlw	0
 11060  008C6C  6E16               	movwf	sm_init@hist_mode^0,c
 11061  008C6E  ECDD  F047         	call	_sm_init	;wreg free
 11062  008C72  0012               	return		;funcret
 11063  008C74                     __end_of_generateErrorLearnig:
 11064                           	callstack 0
 11065                           
 11066 ;; *************** function _sm_init *****************
 11067 ;; Defined at:
 11068 ;;		line 12 in file "sm_common_MC50.c"
 11069 ;; Parameters:    Size  Location     Type
 11070 ;;  psm             2   17[COMRAM] PTR struct .
 11071 ;;		 -> controlLearning_stateMachine(11), controlGate_stateMachine(11), main_stateMachine(11), menuConfiguration_stateMa
      +chine(11), 
 11072 ;;  initial_stat    2   19[COMRAM] int 
 11073 ;;  hist_mode       1   21[COMRAM] enum E348
 11074 ;; Auto vars:     Size  Location     Type
 11075 ;;		None
 11076 ;; Return value:  Size  Location     Type
 11077 ;;                  1    wreg      void 
 11078 ;; Registers used:
 11079 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11080 ;; Tracked objects:
 11081 ;;		On entry : 0/1
 11082 ;;		On exit  : 0/0
 11083 ;;		Unchanged: 0/0
 11084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11085 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11088 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11089 ;;Total ram usage:        5 bytes
 11090 ;; Hardware stack levels used: 1
 11091 ;; Hardware stack levels required when called: 5
 11092 ;; This function calls:
 11093 ;;		_sm_restart
 11094 ;; This function is called by:
 11095 ;;		_main
 11096 ;;		_generateErrorLearnig
 11097 ;; This function uses a non-reentrant model
 11098 ;;
 11099                           
 11100                           	psect	text20
 11101  008FBA                     __ptext20:
 11102                           	callstack 0
 11103  008FBA                     _sm_init:
 11104                           	callstack 25
 11105                           
 11106                           ;sm_common_MC50.c: 12: void sm_init(sm_t *psm, int initial_state, sm_history_t hist_mode
      +                          );sm_common_MC50.c: 13: {;sm_common_MC50.c: 14:  psm->initial_state = initial_state;
 11107                           
 11108                           ;incstack = 0
 11109  008FBA  EE20 F002          	lfsr	2,2
 11110  008FBE  5012               	movf	sm_init@psm^0,w,c
 11111  008FC0  26D9               	addwf	fsr2l,f,c
 11112  008FC2  5013               	movf	(sm_init@psm+1)^0,w,c
 11113  008FC4  22DA               	addwfc	fsr2h,f,c
 11114  008FC6  C014  FFDE         	movff	sm_init@initial_state,postinc2
 11115  008FCA  C015  FFDD         	movff	sm_init@initial_state+1,postdec2
 11116                           
 11117                           ;sm_common_MC50.c: 15:  psm->history = hist_mode;
 11118  008FCE  EE20 F006          	lfsr	2,6
 11119  008FD2  5012               	movf	sm_init@psm^0,w,c
 11120  008FD4  26D9               	addwf	fsr2l,f,c
 11121  008FD6  5013               	movf	(sm_init@psm+1)^0,w,c
 11122  008FD8  22DA               	addwfc	fsr2h,f,c
 11123  008FDA  C016  FFDF         	movff	sm_init@hist_mode,indf2
 11124                           
 11125                           ;sm_common_MC50.c: 16:  psm->current_state = initial_state;
 11126  008FDE  C012  FFD9         	movff	sm_init@psm,fsr2l
 11127  008FE2  C013  FFDA         	movff	sm_init@psm+1,fsr2h
 11128  008FE6  C014  FFDE         	movff	sm_init@initial_state,postinc2
 11129  008FEA  C015  FFDD         	movff	sm_init@initial_state+1,postdec2
 11130                           
 11131                           ;sm_common_MC50.c: 19:  psm->parent_machine = ((void*)0);
 11132  008FEE  EE20 F007          	lfsr	2,7
 11133  008FF2  5012               	movf	sm_init@psm^0,w,c
 11134  008FF4  26D9               	addwf	fsr2l,f,c
 11135  008FF6  5013               	movf	(sm_init@psm+1)^0,w,c
 11136  008FF8  22DA               	addwfc	fsr2h,f,c
 11137  008FFA  0E00               	movlw	0
 11138  008FFC  6EDE               	movwf	postinc2,c
 11139  008FFE  0E00               	movlw	0
 11140  009000  6EDD               	movwf	postdec2,c
 11141                           
 11142                           ;sm_common_MC50.c: 20:  sm_restart(psm);
 11143  009002  C012  F010         	movff	sm_init@psm,sm_restart@psm
 11144  009006  C013  F011         	movff	sm_init@psm+1,sm_restart@psm+1
 11145  00900A  ECBB  F049         	call	_sm_restart	;wreg free
 11146  00900E  0012               	return		;funcret
 11147  009010                     __end_of_sm_init:
 11148                           	callstack 0
 11149                           
 11150 ;; *************** function _sm_restart *****************
 11151 ;; Defined at:
 11152 ;;		line 23 in file "sm_common_MC50.c"
 11153 ;; Parameters:    Size  Location     Type
 11154 ;;  psm             2   15[COMRAM] PTR struct .
 11155 ;;		 -> controlLearning_stateMachine(11), controlGate_stateMachine(11), main_stateMachine(11), menuConfiguration_stateMa
      +chine(11), 
 11156 ;; Auto vars:     Size  Location     Type
 11157 ;;		None
 11158 ;; Return value:  Size  Location     Type
 11159 ;;                  1    wreg      void 
 11160 ;; Registers used:
 11161 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 11162 ;; Tracked objects:
 11163 ;;		On entry : 0/1
 11164 ;;		On exit  : 0/0
 11165 ;;		Unchanged: 0/0
 11166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11167 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11168 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11169 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11170 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11171 ;;Total ram usage:        2 bytes
 11172 ;; Hardware stack levels used: 1
 11173 ;; Hardware stack levels required when called: 4
 11174 ;; This function calls:
 11175 ;;		Nothing
 11176 ;; This function is called by:
 11177 ;;		_sm_init
 11178 ;; This function uses a non-reentrant model
 11179 ;;
 11180                           
 11181                           	psect	text21
 11182  009376                     __ptext21:
 11183                           	callstack 0
 11184  009376                     _sm_restart:
 11185                           	callstack 25
 11186                           
 11187                           ;sm_common_MC50.c: 24:  if(psm->history == HIST_NONE){
 11188                           
 11189                           ;incstack = 0
 11190  009376  EE20 F006          	lfsr	2,6
 11191  00937A  5010               	movf	sm_restart@psm^0,w,c
 11192  00937C  26D9               	addwf	fsr2l,f,c
 11193  00937E  5011               	movf	(sm_restart@psm+1)^0,w,c
 11194  009380  22DA               	addwfc	fsr2h,f,c
 11195  009382  50DF               	movf	indf2,w,c
 11196  009384  A4D8               	btfss	status,2,c
 11197  009386  D00E               	goto	l20627
 11198                           
 11199                           ;sm_common_MC50.c: 25:   psm->current_state = psm->initial_state;
 11200  009388  EE20 F002          	lfsr	2,2
 11201  00938C  5010               	movf	sm_restart@psm^0,w,c
 11202  00938E  26D9               	addwf	fsr2l,f,c
 11203  009390  5011               	movf	(sm_restart@psm+1)^0,w,c
 11204  009392  22DA               	addwfc	fsr2h,f,c
 11205  009394  C010  FFE1         	movff	sm_restart@psm,fsr1l
 11206  009398  C011  FFE2         	movff	sm_restart@psm+1,fsr1h
 11207  00939C  CFDE FFE6          	movff	postinc2,postinc1
 11208  0093A0  CFDD FFE5          	movff	postdec2,postdec1
 11209  0093A4                     l20627:
 11210                           
 11211                           ;sm_common_MC50.c: 27:  psm->last_event = 0;
 11212  0093A4  EE20 F004          	lfsr	2,4
 11213  0093A8  5010               	movf	sm_restart@psm^0,w,c
 11214  0093AA  26D9               	addwf	fsr2l,f,c
 11215  0093AC  5011               	movf	(sm_restart@psm+1)^0,w,c
 11216  0093AE  22DA               	addwfc	fsr2h,f,c
 11217  0093B0  0E00               	movlw	0
 11218  0093B2  6EDE               	movwf	postinc2,c
 11219  0093B4  0E00               	movlw	0
 11220  0093B6  6EDD               	movwf	postdec2,c
 11221  0093B8  0012               	return		;funcret
 11222  0093BA                     __end_of_sm_restart:
 11223                           	callstack 0
 11224                           
 11225 ;; *************** function _clearLearningValue *****************
 11226 ;; Defined at:
 11227 ;;		line 436 in file "sm_ControlLearning_MC50.c"
 11228 ;; Parameters:    Size  Location     Type
 11229 ;;		None
 11230 ;; Auto vars:     Size  Location     Type
 11231 ;;		None
 11232 ;; Return value:  Size  Location     Type
 11233 ;;                  1    wreg      void 
 11234 ;; Registers used:
 11235 ;;		wreg, status,2
 11236 ;; Tracked objects:
 11237 ;;		On entry : 3F/1
 11238 ;;		On exit  : 3F/0
 11239 ;;		Unchanged: 0/0
 11240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11241 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11242 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11243 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11244 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11245 ;;Total ram usage:        0 bytes
 11246 ;; Hardware stack levels used: 1
 11247 ;; Hardware stack levels required when called: 4
 11248 ;; This function calls:
 11249 ;;		Nothing
 11250 ;; This function is called by:
 11251 ;;		_sm_execute_ControlLearning
 11252 ;; This function uses a non-reentrant model
 11253 ;;
 11254                           
 11255                           	psect	text22
 11256  0086A4                     __ptext22:
 11257                           	callstack 0
 11258  0086A4                     _clearLearningValue:
 11259                           	callstack 24
 11260                           
 11261                           ; BSR set to: 1
 11262                           ;sm_ControlLearning_MC50.c: 438:     learn_st.timeOpen=0;
 11263                           
 11264                           ;incstack = 0
 11265  0086A4  0E00               	movlw	0
 11266  0086A6  0100               	movlb	0	; () banked
 11267  0086A8  6F64               	movwf	(_learn_st+4)& (0+255),b	;volatile
 11268  0086AA  0E00               	movlw	0
 11269  0086AC  6F65               	movwf	(_learn_st+5)& (0+255),b	;volatile
 11270  0086AE  0E00               	movlw	0
 11271  0086B0  6F66               	movwf	(_learn_st+6)& (0+255),b	;volatile
 11272  0086B2  0E00               	movlw	0
 11273  0086B4  6F67               	movwf	(_learn_st+7)& (0+255),b	;volatile
 11274                           
 11275                           ;sm_ControlLearning_MC50.c: 439:     learn_st.timeClose=0;
 11276  0086B6  0E00               	movlw	0
 11277  0086B8  6F60               	movwf	_learn_st& (0+255),b	;volatile
 11278  0086BA  0E00               	movlw	0
 11279  0086BC  6F61               	movwf	(_learn_st+1)& (0+255),b	;volatile
 11280  0086BE  0E00               	movlw	0
 11281  0086C0  6F62               	movwf	(_learn_st+2)& (0+255),b	;volatile
 11282  0086C2  0E00               	movlw	0
 11283  0086C4  6F63               	movwf	(_learn_st+3)& (0+255),b	;volatile
 11284                           
 11285                           ;sm_ControlLearning_MC50.c: 440:     learn_st.timeDecelerationOpen=0;
 11286  0086C6  0E00               	movlw	0
 11287  0086C8  6F69               	movwf	(_learn_st+9)& (0+255),b	;volatile
 11288                           
 11289                           ;sm_ControlLearning_MC50.c: 441:     learn_st.timeDecelerationClose=0;
 11290  0086CA  0E00               	movlw	0
 11291  0086CC  6F68               	movwf	(_learn_st+8)& (0+255),b	;volatile
 11292                           
 11293                           ;sm_ControlLearning_MC50.c: 442:     learn_st.openCurrent=0;
 11294  0086CE  0E00               	movlw	0
 11295  0086D0  6F6B               	movwf	(_learn_st+11)& (0+255),b	;volatile
 11296  0086D2  0E00               	movlw	0
 11297  0086D4  6F6A               	movwf	(_learn_st+10)& (0+255),b	;volatile
 11298                           
 11299                           ;sm_ControlLearning_MC50.c: 443:     learn_st.closeCurrent=0;
 11300  0086D6  0E00               	movlw	0
 11301  0086D8  6F6D               	movwf	(_learn_st+13)& (0+255),b	;volatile
 11302  0086DA  0E00               	movlw	0
 11303  0086DC  6F6C               	movwf	(_learn_st+12)& (0+255),b	;volatile
 11304                           
 11305                           ;sm_ControlLearning_MC50.c: 444:     learn_st.openHistCurrent=0;
 11306  0086DE  0E00               	movlw	0
 11307  0086E0  6F6F               	movwf	(_learn_st+15)& (0+255),b	;volatile
 11308  0086E2  0E00               	movlw	0
 11309  0086E4  6F6E               	movwf	(_learn_st+14)& (0+255),b	;volatile
 11310                           
 11311                           ;sm_ControlLearning_MC50.c: 445:     learn_st.closeHistCurrent=0;
 11312  0086E6  0E00               	movlw	0
 11313  0086E8  6F71               	movwf	(_learn_st+17)& (0+255),b	;volatile
 11314  0086EA  0E00               	movlw	0
 11315  0086EC  6F70               	movwf	(_learn_st+16)& (0+255),b	;volatile
 11316                           
 11317                           ;sm_ControlLearning_MC50.c: 446:     var_sys_NVM.learningCurrentNormalClose=0;
 11318  0086EE  0E00               	movlw	0
 11319  0086F0  6FC9               	movwf	(_var_sys_NVM+49)& (0+255),b	;volatile
 11320  0086F2  0E00               	movlw	0
 11321  0086F4  6FC8               	movwf	(_var_sys_NVM+48)& (0+255),b	;volatile
 11322                           
 11323                           ;sm_ControlLearning_MC50.c: 447:     var_sys_NVM.learningCurrentNormalOpen=0;
 11324  0086F6  0E00               	movlw	0
 11325  0086F8  6FCB               	movwf	(_var_sys_NVM+51)& (0+255),b	;volatile
 11326  0086FA  0E00               	movlw	0
 11327  0086FC  6FCA               	movwf	(_var_sys_NVM+50)& (0+255),b	;volatile
 11328                           
 11329                           ;sm_ControlLearning_MC50.c: 448:     var_sys_NVM.learningCurrentDecelarationClose=0;
 11330  0086FE  0E00               	movlw	0
 11331  008700  6FC0               	movwf	(_var_sys_NVM+40)& (0+255),b	;volatile
 11332  008702  0E00               	movlw	0
 11333  008704  6FC1               	movwf	(_var_sys_NVM+41)& (0+255),b	;volatile
 11334  008706  0E00               	movlw	0
 11335  008708  6FC2               	movwf	(_var_sys_NVM+42)& (0+255),b	;volatile
 11336  00870A  0E00               	movlw	0
 11337  00870C  6FC3               	movwf	(_var_sys_NVM+43)& (0+255),b	;volatile
 11338                           
 11339                           ;sm_ControlLearning_MC50.c: 449:     var_sys_NVM.learningCurrentDecelarationOpen=0;
 11340  00870E  0E00               	movlw	0
 11341  008710  6FC4               	movwf	(_var_sys_NVM+44)& (0+255),b	;volatile
 11342  008712  0E00               	movlw	0
 11343  008714  6FC5               	movwf	(_var_sys_NVM+45)& (0+255),b	;volatile
 11344  008716  0E00               	movlw	0
 11345  008718  6FC6               	movwf	(_var_sys_NVM+46)& (0+255),b	;volatile
 11346  00871A  0E00               	movlw	0
 11347  00871C  6FC7               	movwf	(_var_sys_NVM+47)& (0+255),b	;volatile
 11348                           
 11349                           ; BSR set to: 0
 11350  00871E  0012               	return		;funcret
 11351  008720                     __end_of_clearLearningValue:
 11352                           	callstack 0
 11353                           
 11354 ;; *************** function _calculateMean *****************
 11355 ;; Defined at:
 11356 ;;		line 411 in file "sm_ControlLearning_MC50.c"
 11357 ;; Parameters:    Size  Location     Type
 11358 ;;  meanValue       4   15[COMRAM] unsigned long 
 11359 ;;  newValue        4   19[COMRAM] unsigned long 
 11360 ;; Auto vars:     Size  Location     Type
 11361 ;;		None
 11362 ;; Return value:  Size  Location     Type
 11363 ;;                  4   15[COMRAM] unsigned long 
 11364 ;; Registers used:
 11365 ;;		wreg, status,2, status,0
 11366 ;; Tracked objects:
 11367 ;;		On entry : 3E/1
 11368 ;;		On exit  : 3E/0
 11369 ;;		Unchanged: 3E/0
 11370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11371 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11372 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11373 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11374 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11375 ;;Total ram usage:       12 bytes
 11376 ;; Hardware stack levels used: 1
 11377 ;; Hardware stack levels required when called: 4
 11378 ;; This function calls:
 11379 ;;		Nothing
 11380 ;; This function is called by:
 11381 ;;		_sm_execute_ControlLearning
 11382 ;; This function uses a non-reentrant model
 11383 ;;
 11384                           
 11385                           	psect	text23
 11386  008CDA                     __ptext23:
 11387                           	callstack 0
 11388  008CDA                     _calculateMean:
 11389                           	callstack 24
 11390                           
 11391                           ;sm_ControlLearning_MC50.c: 411: unsigned long calculateMean(unsigned long meanValue,uns
      +                          igned long newValue);sm_ControlLearning_MC50.c: 412: {;sm_ControlLearning_MC50.c: 413:  
      +                             if(meanValue==0)
 11392                           
 11393                           ; BSR set to: 0
 11394                           ;incstack = 0
 11395  008CDA  5010               	movf	calculateMean@meanValue^0,w,c
 11396  008CDC  1011               	iorwf	(calculateMean@meanValue+1)^0,w,c
 11397  008CDE  1012               	iorwf	(calculateMean@meanValue+2)^0,w,c
 11398  008CE0  1013               	iorwf	(calculateMean@meanValue+3)^0,w,c
 11399  008CE2  A4D8               	btfss	status,2,c
 11400  008CE4  D009               	goto	l21821
 11401                           
 11402                           ;sm_ControlLearning_MC50.c: 414:     {;sm_ControlLearning_MC50.c: 415:         meanValue
      +                          =newValue;
 11403  008CE6  C014  F010         	movff	calculateMean@newValue,calculateMean@meanValue
 11404  008CEA  C015  F011         	movff	calculateMean@newValue+1,calculateMean@meanValue+1
 11405  008CEE  C016  F012         	movff	calculateMean@newValue+2,calculateMean@meanValue+2
 11406  008CF2  C017  F013         	movff	calculateMean@newValue+3,calculateMean@meanValue+3
 11407                           
 11408                           ;sm_ControlLearning_MC50.c: 416:     }
 11409  008CF6  D019               	goto	l21823
 11410  008CF8                     l21821:
 11411                           
 11412                           ;sm_ControlLearning_MC50.c: 418:     {;sm_ControlLearning_MC50.c: 419:         meanValue
      +                          =(meanValue+newValue)/2;
 11413  008CF8  5014               	movf	calculateMean@newValue^0,w,c
 11414  008CFA  2410               	addwf	calculateMean@meanValue^0,w,c
 11415  008CFC  6E18               	movwf	??_calculateMean^0,c
 11416  008CFE  5015               	movf	(calculateMean@newValue+1)^0,w,c
 11417  008D00  2011               	addwfc	(calculateMean@meanValue+1)^0,w,c
 11418  008D02  6E19               	movwf	(??_calculateMean+1)^0,c
 11419  008D04  5016               	movf	(calculateMean@newValue+2)^0,w,c
 11420  008D06  2012               	addwfc	(calculateMean@meanValue+2)^0,w,c
 11421  008D08  6E1A               	movwf	(??_calculateMean+2)^0,c
 11422  008D0A  5017               	movf	(calculateMean@newValue+3)^0,w,c
 11423  008D0C  2013               	addwfc	(calculateMean@meanValue+3)^0,w,c
 11424  008D0E  6E1B               	movwf	(??_calculateMean+3)^0,c
 11425  008D10  90D8               	bcf	status,0,c
 11426  008D12  321B               	rrcf	(??_calculateMean+3)^0,f,c
 11427  008D14  321A               	rrcf	(??_calculateMean+2)^0,f,c
 11428  008D16  3219               	rrcf	(??_calculateMean+1)^0,f,c
 11429  008D18  3218               	rrcf	??_calculateMean^0,f,c
 11430  008D1A  C018  F010         	movff	??_calculateMean,calculateMean@meanValue
 11431  008D1E  C019  F011         	movff	??_calculateMean+1,calculateMean@meanValue+1
 11432  008D22  C01A  F012         	movff	??_calculateMean+2,calculateMean@meanValue+2
 11433  008D26  C01B  F013         	movff	??_calculateMean+3,calculateMean@meanValue+3
 11434  008D2A                     l21823:
 11435                           
 11436                           ;sm_ControlLearning_MC50.c: 421:     return meanValue;
 11437  008D2A  C010  F010         	movff	calculateMean@meanValue,?_calculateMean
 11438  008D2E  C011  F011         	movff	calculateMean@meanValue+1,?_calculateMean+1
 11439  008D32  C012  F012         	movff	calculateMean@meanValue+2,?_calculateMean+2
 11440  008D36  C013  F013         	movff	calculateMean@meanValue+3,?_calculateMean+3
 11441  008D3A  0012               	return		;funcret
 11442  008D3C                     __end_of_calculateMean:
 11443                           	callstack 0
 11444                           
 11445 ;; *************** function _actionZone_Opening *****************
 11446 ;; Defined at:
 11447 ;;		line 374 in file "sm_ControlGate_MC50.c"
 11448 ;; Parameters:    Size  Location     Type
 11449 ;;		None
 11450 ;; Auto vars:     Size  Location     Type
 11451 ;;  typeOpenOrde    1   14[BANK0 ] enum E10372
 11452 ;;  securityOpen    1   13[BANK0 ] enum E10397
 11453 ;;  securityClos    1   12[BANK0 ] enum E10397
 11454 ;; Return value:  Size  Location     Type
 11455 ;;                  1    wreg      void 
 11456 ;; Registers used:
 11457 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11458 ;; Tracked objects:
 11459 ;;		On entry : 3F/0
 11460 ;;		On exit  : 0/0
 11461 ;;		Unchanged: 0/0
 11462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11464 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11466 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11467 ;;Total ram usage:        3 bytes
 11468 ;; Hardware stack levels used: 1
 11469 ;; Hardware stack levels required when called: 8
 11470 ;; This function calls:
 11471 ;;		_CloseOrder
 11472 ;;		_GetOpenOrder
 11473 ;;		_GetSecurityStateInClosing
 11474 ;;		_GetSecurityStateInOpening
 11475 ;;		_InitFullAutoTime
 11476 ;;		_InitWalkAutoTime
 11477 ;;		_SetSegmentValueIntermitent
 11478 ;;		_StopOrder
 11479 ;;		_VerifyFollowMe
 11480 ;;		_controlVelocity
 11481 ;;		_setPositionInvertionInClosing
 11482 ;;		_setPositionInvertionInOpening
 11483 ;;		_sm_send_event
 11484 ;; This function is called by:
 11485 ;;		_sm_execute_ControlGate
 11486 ;; This function uses a non-reentrant model
 11487 ;;
 11488                           
 11489                           	psect	text24
 11490  00509E                     __ptext24:
 11491                           	callstack 0
 11492  00509E                     _actionZone_Opening:
 11493                           	callstack 21
 11494                           
 11495                           ; BSR set to: 0
 11496                           ;sm_ControlGate_MC50.c: 375:     StateEnum securityClosing = GetSecurityStateInClosing()
      +                          ;
 11497                           
 11498                           ;incstack = 0
 11499  00509E  ECE5  F03E         	call	_GetSecurityStateInClosing	;wreg free
 11500  0050A2  0100               	movlb	0	; () banked
 11501  0050A4  6FE4               	movwf	actionZone_Opening@securityClosing& (0+255),b
 11502                           
 11503                           ;sm_ControlGate_MC50.c: 376:     StateEnum securityOpening = GetSecurityStateInOpening()
      +                          ;
 11504  0050A6  EC38  F03F         	call	_GetSecurityStateInOpening	;wreg free
 11505  0050AA  0100               	movlb	0	; () banked
 11506  0050AC  6FE5               	movwf	actionZone_Opening@securityOpening& (0+255),b
 11507                           
 11508                           ; BSR set to: 0
 11509                           ;sm_ControlGate_MC50.c: 377:     TypeCMD typeOpenOrder = GetOpenOrder();
 11510  0050AE  EC9E  F02E         	call	_GetOpenOrder	;wreg free
 11511  0050B2  0100               	movlb	0	; () banked
 11512  0050B4  6FE6               	movwf	actionZone_Opening@typeOpenOrder& (0+255),b
 11513                           
 11514                           ; BSR set to: 0
 11515                           ;sm_ControlGate_MC50.c: 380:     controlVelocity();
 11516  0050B6  ECAF  F02B         	call	_controlVelocity	;wreg free
 11517                           
 11518                           ;sm_ControlGate_MC50.c: 381:     InitFullAutoTime();
 11519  0050BA  ECD8  F04D         	call	_InitFullAutoTime	;wreg free
 11520                           
 11521                           ; BSR set to: 0
 11522                           ;sm_ControlGate_MC50.c: 383:     var_sys.passoAPassoAutoClose = NO;
 11523  0050BE  0E00               	movlw	0
 11524  0050C0  0101               	movlb	1	; () banked
 11525  0050C2  6F50               	movwf	(_var_sys+80)& (0+255),b	;volatile
 11526                           
 11527                           ; BSR set to: 1
 11528                           ;sm_ControlGate_MC50.c: 385:     VerifyFollowMe(securityClosing);
 11529  0050C4  0100               	movlb	0	; () banked
 11530  0050C6  51E4               	movf	actionZone_Opening@securityClosing& (0+255),w,b
 11531  0050C8  EC30  F04D         	call	_VerifyFollowMe
 11532                           
 11533                           ;sm_ControlGate_MC50.c: 386:     if (var_sys.NumberOffErrors > 3) {
 11534  0050CC  0E03               	movlw	3
 11535  0050CE  0101               	movlb	1	; () banked
 11536  0050D0  6543               	cpfsgt	(_var_sys+67)& (0+255),b	;volatile
 11537  0050D2  D00D               	goto	l23067
 11538                           
 11539                           ; BSR set to: 1
 11540                           ;sm_ControlGate_MC50.c: 388:         var_sys.StateMotor = Stopped;
 11541  0050D4  0E00               	movlw	0
 11542  0050D6  6F00               	movwf	_var_sys& (0+255),b	;volatile
 11543  0050D8                     l23065:
 11544                           
 11545                           ; BSR set to: 1
 11546                           ;sm_ControlGate_MC50.c: 389:         sm_send_event(&controlGate_stateMachine, ev_ErrorGa
      +                          te);
 11547  0050D8  0EE7               	movlw	low _controlGate_stateMachine
 11548  0050DA  6E12               	movwf	sm_send_event@psm^0,c
 11549  0050DC  0E01               	movlw	high _controlGate_stateMachine
 11550  0050DE  6E13               	movwf	(sm_send_event@psm+1)^0,c
 11551  0050E0  0E00               	movlw	0
 11552  0050E2  6E15               	movwf	(sm_send_event@event+1)^0,c
 11553  0050E4  0E10               	movlw	16
 11554  0050E6  6E14               	movwf	sm_send_event@event^0,c
 11555  0050E8  ECCD  F046         	call	_sm_send_event	;wreg free
 11556                           
 11557                           ;sm_ControlGate_MC50.c: 390:     } else if (var_sys.StateMotor == InOpenWalk && ts_syste
      +                          m.timeOpenWalk <= 0)
 11558  0050EC  0012               	return	
 11559  0050EE                     l23067:
 11560                           
 11561                           ; BSR set to: 1
 11562  0050EE  0E02               	movlw	2
 11563  0050F0  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 11564  0050F2  A4D8               	btfss	status,2,c
 11565  0050F4  D013               	goto	l23081
 11566                           
 11567                           ; BSR set to: 1
 11568  0050F6  BFB0               	btfsc	(_ts_system+17)& (0+255),7,b	;volatile
 11569  0050F8  D005               	goto	u26930
 11570  0050FA  51B0               	movf	(_ts_system+17)& (0+255),w,b	;volatile
 11571  0050FC  E10F               	bnz	l23081
 11572  0050FE  05AF               	decf	(_ts_system+16)& (0+255),w,b	;volatile
 11573  005100  B0D8               	btfsc	status,0,c
 11574  005102  D00C               	goto	l23081
 11575  005104                     u26930:
 11576                           
 11577                           ; BSR set to: 1
 11578                           ;sm_ControlGate_MC50.c: 391:     {;sm_ControlGate_MC50.c: 396:         setPositionInvert
      +                          ionInOpening();
 11579  005104  EC44  F03C         	call	_setPositionInvertionInOpening	;wreg free
 11580                           
 11581                           ; BSR set to: 1
 11582                           ;sm_ControlGate_MC50.c: 397:         StopOrder();
 11583  005108  EC86  F04D         	call	_StopOrder	;wreg free
 11584                           
 11585                           ;sm_ControlGate_MC50.c: 398:         InitWalkAutoTime();
 11586  00510C  EC5C  F04E         	call	_InitWalkAutoTime	;wreg free
 11587                           
 11588                           ; BSR set to: 0
 11589                           ;sm_ControlGate_MC50.c: 399:         var_sys.passoAPassoAutoClose = YES;
 11590  005110  0E01               	movlw	1
 11591  005112  0101               	movlb	1	; () banked
 11592  005114  6F50               	movwf	(_var_sys+80)& (0+255),b	;volatile
 11593                           
 11594                           ; BSR set to: 1
 11595                           ;sm_ControlGate_MC50.c: 400:         Abertura_pedonal = 1;
 11596  005116  0E01               	movlw	1
 11597  005118  6F92               	movwf	_Abertura_pedonal& (0+255),b
 11598                           
 11599                           ;sm_ControlGate_MC50.c: 402:     } else if ((var_sys.FimCurso_OpenIsEnabled == YES)||(va
      +                          r_sys.TimeMaxMotorIsON<=0) && (var_sys.LearningIsEnabled==NO) && (var_sys.PositionIsLost
      +                          ==NO) && (var_sys.Statedoorcontrol == st_Opening))
 11600  00511A  0012               	return	
 11601  00511C                     l23081:
 11602                           
 11603                           ; BSR set to: 1
 11604  00511C  0504               	decf	(_var_sys+4)& (0+255),w,b	;volatile
 11605  00511E  B4D8               	btfsc	status,2,c
 11606  005120  D010               	goto	u26980
 11607                           
 11608                           ; BSR set to: 1
 11609  005122  5118               	movf	(_var_sys+24)& (0+255),w,b	;volatile
 11610  005124  1119               	iorwf	(_var_sys+25)& (0+255),w,b	;volatile
 11611  005126  111A               	iorwf	(_var_sys+26)& (0+255),w,b	;volatile
 11612  005128  111B               	iorwf	(_var_sys+27)& (0+255),w,b	;volatile
 11613  00512A  A4D8               	btfss	status,2,c
 11614  00512C  D02F               	goto	l23101
 11615                           
 11616                           ; BSR set to: 1
 11617  00512E  5126               	movf	(_var_sys+38)& (0+255),w,b	;volatile
 11618  005130  A4D8               	btfss	status,2,c
 11619  005132  D02C               	goto	l23101
 11620                           
 11621                           ; BSR set to: 1
 11622  005134  5148               	movf	(_var_sys+72)& (0+255),w,b	;volatile
 11623  005136  A4D8               	btfss	status,2,c
 11624  005138  D029               	goto	l23101
 11625                           
 11626                           ; BSR set to: 1
 11627  00513A  0E02               	movlw	2
 11628  00513C  191C               	xorwf	(_var_sys+28)& (0+255),w,b	;volatile
 11629  00513E  A4D8               	btfss	status,2,c
 11630  005140  D025               	goto	l23101
 11631  005142                     u26980:
 11632                           
 11633                           ; BSR set to: 1
 11634                           ;sm_ControlGate_MC50.c: 403:     {;sm_ControlGate_MC50.c: 408:         var_sys.Statedoor
      +                          control = st_Opened;
 11635  005142  0E04               	movlw	4
 11636  005144  6F1C               	movwf	(_var_sys+28)& (0+255),b	;volatile
 11637                           
 11638                           ; BSR set to: 1
 11639                           ;sm_ControlGate_MC50.c: 409:         var_sys.PositionActual = var_sys_NVM.learningTimeTo
      +                          Close;
 11640  005146  C0D0  F11E         	movff	_var_sys_NVM+56,_var_sys+30	;volatile
 11641  00514A  C0D1  F11F         	movff	_var_sys_NVM+57,_var_sys+31	;volatile
 11642  00514E  C0D2  F120         	movff	_var_sys_NVM+58,_var_sys+32	;volatile
 11643  005152  C0D3  F121         	movff	_var_sys_NVM+59,_var_sys+33	;volatile
 11644                           
 11645                           ;sm_ControlGate_MC50.c: 410:         var_sys.AutoInversionActiveStop = NO;
 11646  005156  0E00               	movlw	0
 11647  005158  6F12               	movwf	(_var_sys+18)& (0+255),b	;volatile
 11648                           
 11649                           ;sm_ControlGate_MC50.c: 411:         var_sys.PositionIsLost = NO;
 11650  00515A  0E00               	movlw	0
 11651  00515C  6F48               	movwf	(_var_sys+72)& (0+255),b	;volatile
 11652                           
 11653                           ;sm_ControlGate_MC50.c: 412:         var_sys.DigitSinalizedTemp = 1;
 11654  00515E  0E01               	movlw	1
 11655  005160  6F22               	movwf	(_var_sys+34)& (0+255),b	;volatile
 11656                           
 11657                           ;sm_ControlGate_MC50.c: 413:         var_sys.NumberOffErrors = 0;
 11658  005162  0E00               	movlw	0
 11659  005164  6F43               	movwf	(_var_sys+67)& (0+255),b	;volatile
 11660                           
 11661                           ;sm_ControlGate_MC50.c: 414:         ts_system.timeSinalizationDigit = (1000/50) * 2;
 11662  005166  0E00               	movlw	0
 11663  005168  6FAC               	movwf	(_ts_system+13)& (0+255),b	;volatile
 11664  00516A  0E28               	movlw	40
 11665  00516C  6FAB               	movwf	(_ts_system+12)& (0+255),b	;volatile
 11666                           
 11667                           ; BSR set to: 1
 11668                           ;sm_ControlGate_MC50.c: 415:         SetSegmentValueIntermitent(dF, d0, ( 200/50));
 11669  00516E  0E00               	movlw	0
 11670  005170  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 11671  005172  0E00               	movlw	0
 11672  005174  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 11673  005176  0E04               	movlw	4
 11674  005178  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 11675  00517A  0E0F               	movlw	15
 11676  00517C  EC8B  F04B         	call	_SetSegmentValueIntermitent
 11677                           
 11678                           ; BSR set to: 1
 11679                           ;sm_ControlGate_MC50.c: 416:         StopOrder();
 11680  005180  EC86  F04D         	call	_StopOrder	;wreg free
 11681                           
 11682                           ;sm_ControlGate_MC50.c: 417:         var_sys.passoAPassoAutoClose = YES;
 11683  005184  0E01               	movlw	1
 11684  005186  0101               	movlb	1	; () banked
 11685  005188  6F50               	movwf	(_var_sys+80)& (0+255),b	;volatile
 11686                           
 11687                           ;sm_ControlGate_MC50.c: 419:     }
 11688  00518A  0012               	return	
 11689  00518C                     l23101:
 11690                           
 11691                           ; BSR set to: 1
 11692  00518C  0100               	movlb	0	; () banked
 11693  00518E  05E5               	decf	actionZone_Opening@securityOpening& (0+255),w,b
 11694  005190  B4D8               	btfsc	status,2,c
 11695  005192  D012               	goto	u27020
 11696                           
 11697                           ; BSR set to: 0
 11698  005194  0101               	movlb	1	; () banked
 11699  005196  BFCA               	btfsc	(_ts_system+43)& (0+255),7,b	;volatile
 11700  005198  D025               	goto	l23121
 11701  00519A  51CA               	movf	(_ts_system+43)& (0+255),w,b	;volatile
 11702  00519C  E103               	bnz	u27000
 11703  00519E  05C9               	decf	(_ts_system+42)& (0+255),w,b	;volatile
 11704  0051A0  A0D8               	btfss	status,0,c
 11705  0051A2  D020               	goto	l23121
 11706  0051A4                     u27000:
 11707                           
 11708                           ; BSR set to: 1
 11709  0051A4  0541               	decf	(_var_sys+65)& (0+255),w,b	;volatile
 11710  0051A6  A4D8               	btfss	status,2,c
 11711  0051A8  D01D               	goto	l23121
 11712                           
 11713                           ; BSR set to: 1
 11714  0051AA  BFD0               	btfsc	(_ts_system+49)& (0+255),7,b	;volatile
 11715  0051AC  D005               	goto	u27020
 11716  0051AE  51D0               	movf	(_ts_system+49)& (0+255),w,b	;volatile
 11717  0051B0  E119               	bnz	l23121
 11718  0051B2  05CF               	decf	(_ts_system+48)& (0+255),w,b	;volatile
 11719  0051B4  B0D8               	btfsc	status,0,c
 11720  0051B6  D016               	goto	l23121
 11721  0051B8                     u27020:
 11722  0051B8  0101               	movlb	1	; () banked
 11723  0051BA  5127               	movf	(_var_sys+39)& (0+255),w,b	;volatile
 11724  0051BC  A4D8               	btfss	status,2,c
 11725  0051BE  D012               	goto	l23121
 11726                           
 11727                           ; BSR set to: 1
 11728                           ;sm_ControlGate_MC50.c: 422:         if (securityOpening != YES){
 11729  0051C0  0100               	movlb	0	; () banked
 11730  0051C2  05E5               	decf	actionZone_Opening@securityOpening& (0+255),w,b
 11731  0051C4  B4D8               	btfsc	status,2,c
 11732  0051C6  D002               	goto	l23115
 11733                           
 11734                           ; BSR set to: 0
 11735                           ;sm_ControlGate_MC50.c: 423:              var_sys.NumberOffErrors++;
 11736  0051C8  0101               	movlb	1	; () banked
 11737  0051CA  2B43               	incf	(_var_sys+67)& (0+255),f,b	;volatile
 11738  0051CC                     l23115:
 11739                           
 11740                           ;sm_ControlGate_MC50.c: 426:         var_sys.AutoInversionActive = YES;
 11741  0051CC  0E01               	movlw	1
 11742  0051CE  0101               	movlb	1	; () banked
 11743  0051D0  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 11744                           
 11745                           ; BSR set to: 1
 11746                           ;sm_ControlGate_MC50.c: 427:         ts_system.TimeWaitToNextState = ( 500/50);
 11747  0051D2  0E00               	movlw	0
 11748  0051D4  6FC4               	movwf	(_ts_system+37)& (0+255),b	;volatile
 11749  0051D6  0E0A               	movlw	10
 11750  0051D8  6FC3               	movwf	(_ts_system+36)& (0+255),b	;volatile
 11751                           
 11752                           ; BSR set to: 1
 11753                           ;sm_ControlGate_MC50.c: 428:         ts_system.TimeStopElectricBrake = ((1000/50)+( 500/
      +                          50));
 11754  0051DA  0E00               	movlw	0
 11755  0051DC  6FE0               	movwf	(_ts_system+65)& (0+255),b	;volatile
 11756  0051DE  0E1E               	movlw	30
 11757  0051E0  6FDF               	movwf	(_ts_system+64)& (0+255),b	;volatile
 11758                           
 11759                           ;sm_ControlGate_MC50.c: 430:     }
 11760  0051E2  0012               	return	
 11761  0051E4                     l23121:
 11762                           
 11763                           ; BSR set to: 1
 11764  0051E4  BFCA               	btfsc	(_ts_system+43)& (0+255),7,b	;volatile
 11765  0051E6  D02D               	goto	l23151
 11766  0051E8  51CA               	movf	(_ts_system+43)& (0+255),w,b	;volatile
 11767  0051EA  E103               	bnz	u27050
 11768  0051EC  05C9               	decf	(_ts_system+42)& (0+255),w,b	;volatile
 11769  0051EE  A0D8               	btfss	status,0,c
 11770  0051F0  D028               	goto	l23151
 11771  0051F2                     u27050:
 11772                           
 11773                           ; BSR set to: 1
 11774  0051F2  0527               	decf	(_var_sys+39)& (0+255),w,b	;volatile
 11775  0051F4  A4D8               	btfss	status,2,c
 11776  0051F6  D025               	goto	l23151
 11777                           
 11778                           ; BSR set to: 1
 11779                           ;sm_ControlGate_MC50.c: 432:         if (var_sys.InvertionCurrentClosing == YES) {
 11780  0051F8  0544               	decf	(_var_sys+68)& (0+255),w,b	;volatile
 11781  0051FA  A4D8               	btfss	status,2,c
 11782  0051FC  D005               	goto	l23133
 11783                           
 11784                           ; BSR set to: 1
 11785                           ;sm_ControlGate_MC50.c: 434:             var_sys.StateMotor = Stopped;
 11786  0051FE  0E00               	movlw	0
 11787  005200  6F00               	movwf	_var_sys& (0+255),b	;volatile
 11788                           
 11789                           ; BSR set to: 1
 11790                           ;sm_ControlGate_MC50.c: 435:             setPositionInvertionInClosing();
 11791  005202  EC9D  F037         	call	_setPositionInvertionInClosing	;wreg free
 11792  005206  D768               	goto	l23065
 11793  005208                     l23133:
 11794                           
 11795                           ; BSR set to: 1
 11796  005208  BFC4               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 11797  00520A  D005               	goto	u27080
 11798  00520C  51C4               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 11799  00520E  E116               	bnz	l23149
 11800  005210  05C3               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 11801  005212  B0D8               	btfsc	status,0,c
 11802  005214  D013               	goto	l23149
 11803  005216                     u27080:
 11804                           
 11805                           ; BSR set to: 1
 11806                           ;sm_ControlGate_MC50.c: 438:             CloseOrder();
 11807  005216  ECD1  F04C         	call	_CloseOrder	;wreg free
 11808                           
 11809                           ;sm_ControlGate_MC50.c: 440:             setPositionInvertionInOpening();
 11810  00521A  EC44  F03C         	call	_setPositionInvertionInOpening	;wreg free
 11811                           
 11812                           ; BSR set to: 1
 11813                           ;sm_ControlGate_MC50.c: 441:             var_sys.AutoInversionActive = NO;
 11814  00521E  0E00               	movlw	0
 11815  005220  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 11816                           
 11817                           ; BSR set to: 1
 11818                           ;sm_ControlGate_MC50.c: 442:             var_sys.InvertionCurrentOpening = YES;
 11819  005222  0E01               	movlw	1
 11820  005224  6F45               	movwf	(_var_sys+69)& (0+255),b	;volatile
 11821                           
 11822                           ; BSR set to: 1
 11823                           ;sm_ControlGate_MC50.c: 443:             ts_system.TimeInversionStart = (1000/50);
 11824  005226  0E00               	movlw	0
 11825  005228  6FD0               	movwf	(_ts_system+49)& (0+255),b	;volatile
 11826  00522A  0E14               	movlw	20
 11827  00522C  6FCF               	movwf	(_ts_system+48)& (0+255),b	;volatile
 11828                           
 11829                           ; BSR set to: 1
 11830                           ;sm_ControlGate_MC50.c: 444:             ts_system.InvertionTimeClosingFromOpen = (1000/
      +                          50) * 2;
 11831  00522E  0E00               	movlw	0
 11832  005230  6FD2               	movwf	(_ts_system+51)& (0+255),b	;volatile
 11833  005232  0E28               	movlw	40
 11834  005234  6FD1               	movwf	(_ts_system+50)& (0+255),b	;volatile
 11835                           
 11836                           ; BSR set to: 1
 11837                           ;sm_ControlGate_MC50.c: 445:             var_sys.InvertionClosingFromOpen = YES;
 11838  005236  0E01               	movlw	1
 11839  005238  6F46               	movwf	(_var_sys+70)& (0+255),b	;volatile
 11840                           
 11841                           ;sm_ControlGate_MC50.c: 449:         } else
 11842  00523A  0012               	return	
 11843  00523C                     l23149:
 11844                           
 11845                           ; BSR set to: 1
 11846                           ;sm_ControlGate_MC50.c: 450:         {;sm_ControlGate_MC50.c: 451:             var_sys.S
      +                          tateMotor = Stopped;
 11847  00523C  0E00               	movlw	0
 11848  00523E  6F00               	movwf	_var_sys& (0+255),b	;volatile
 11849  005240  0012               	return	
 11850  005242                     l23151:
 11851                           
 11852                           ; BSR set to: 1
 11853  005242  0527               	decf	(_var_sys+39)& (0+255),w,b	;volatile
 11854  005244  A4D8               	btfss	status,2,c
 11855  005246  D00A               	goto	l23171
 11856                           
 11857                           ; BSR set to: 1
 11858                           ;sm_ControlGate_MC50.c: 457:                 var_sys.StateMotor = Stopped;
 11859  005248  0E00               	movlw	0
 11860  00524A  6F00               	movwf	_var_sys& (0+255),b	;volatile
 11861                           
 11862                           ; BSR set to: 1
 11863                           ;sm_ControlGate_MC50.c: 460:         if (ts_system.TimeWaitToNextState <= 0) {
 11864  00524C  BFC4               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 11865  00524E  D7E3               	goto	u27080
 11866  005250  51C4               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 11867  005252  E14E               	bnz	l2723
 11868  005254  05C3               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 11869  005256  B0D8               	btfsc	status,0,c
 11870  005258  0012               	return	
 11871  00525A  D7DD               	goto	u27080
 11872  00525C                     l23171:
 11873                           
 11874                           ; BSR set to: 1
 11875  00525C  5100               	movf	_var_sys& (0+255),w,b	;volatile
 11876  00525E  A4D8               	btfss	status,2,c
 11877  005260  D018               	goto	l23189
 11878                           
 11879                           ; BSR set to: 1
 11880  005262  BFC4               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 11881  005264  D005               	goto	u27120
 11882  005266  51C4               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 11883  005268  E114               	bnz	l23189
 11884  00526A  05C3               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 11885  00526C  B0D8               	btfsc	status,0,c
 11886  00526E  D011               	goto	l23189
 11887  005270                     u27120:
 11888                           
 11889                           ; BSR set to: 1
 11890                           ;sm_ControlGate_MC50.c: 479:       if(securityOpening != ST){
 11891  005270  0E02               	movlw	2
 11892  005272  0100               	movlb	0	; () banked
 11893  005274  19E5               	xorwf	actionZone_Opening@securityOpening& (0+255),w,b
 11894  005276  B4D8               	btfsc	status,2,c
 11895  005278  D007               	goto	l23185
 11896                           
 11897                           ; BSR set to: 0
 11898                           ;sm_ControlGate_MC50.c: 480:         var_sys.NumberOffErrors++;
 11899  00527A  0101               	movlb	1	; () banked
 11900  00527C  2B43               	incf	(_var_sys+67)& (0+255),f,b	;volatile
 11901                           
 11902                           ; BSR set to: 1
 11903                           ;sm_ControlGate_MC50.c: 482:         var_sys.StateMotor = Stopped;
 11904  00527E  0E00               	movlw	0
 11905  005280  6F00               	movwf	_var_sys& (0+255),b	;volatile
 11906                           
 11907                           ; BSR set to: 1
 11908                           ;sm_ControlGate_MC50.c: 483:         setPositionInvertionInOpening();
 11909  005282  EC44  F03C         	call	_setPositionInvertionInOpening	;wreg free
 11910  005286  D728               	goto	l23065
 11911  005288                     l23185:
 11912                           
 11913                           ; BSR set to: 0
 11914                           ;sm_ControlGate_MC50.c: 486:           setPositionInvertionInOpening();
 11915  005288  EC44  F03C         	call	_setPositionInvertionInOpening	;wreg free
 11916  00528C                     l23187:
 11917                           
 11918                           ;sm_ControlGate_MC50.c: 487:           StopOrder();
 11919  00528C  EC86  F04D         	call	_StopOrder	;wreg free
 11920  005290  0012               	return	
 11921  005292                     l23189:
 11922                           
 11923                           ; BSR set to: 1
 11924  005292  0100               	movlb	0	; () banked
 11925  005294  05A8               	decf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 11926  005296  A4D8               	btfss	status,2,c
 11927  005298  D005               	goto	l23195
 11928                           
 11929                           ; BSR set to: 0
 11930                           ;sm_ControlGate_MC50.c: 492:         if (typeOpenOrder != TypeFullOpen) {
 11931  00529A  0E03               	movlw	3
 11932  00529C  19E6               	xorwf	actionZone_Opening@typeOpenOrder& (0+255),w,b
 11933  00529E  B4D8               	btfsc	status,2,c
 11934  0052A0  0012               	return	
 11935  0052A2  D7F4               	goto	l23187
 11936  0052A4                     l23195:
 11937                           
 11938                           ; BSR set to: 0
 11939  0052A4  0E02               	movlw	2
 11940  0052A6  19E6               	xorwf	actionZone_Opening@typeOpenOrder& (0+255),w,b
 11941  0052A8  A4D8               	btfss	status,2,c
 11942  0052AA  D011               	goto	l23207
 11943                           
 11944                           ; BSR set to: 0
 11945  0052AC  0E02               	movlw	2
 11946  0052AE  0101               	movlb	1	; () banked
 11947  0052B0  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 11948  0052B2  A4D8               	btfss	status,2,c
 11949  0052B4  D00C               	goto	l23207
 11950                           
 11951                           ; BSR set to: 1
 11952  0052B6  0E02               	movlw	2
 11953  0052B8  0100               	movlb	0	; () banked
 11954  0052BA  19A4               	xorwf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 11955  0052BC  B4D8               	btfsc	status,2,c
 11956  0052BE  D007               	goto	l23207
 11957                           
 11958                           ; BSR set to: 0
 11959                           ;sm_ControlGate_MC50.c: 502:         setPositionInvertionInOpening();
 11960  0052C0  EC44  F03C         	call	_setPositionInvertionInOpening	;wreg free
 11961                           
 11962                           ; BSR set to: 1
 11963                           ;sm_ControlGate_MC50.c: 503:         StopOrder();
 11964  0052C4  EC86  F04D         	call	_StopOrder	;wreg free
 11965                           
 11966                           ;sm_ControlGate_MC50.c: 504:         InitWalkAutoTime();
 11967  0052C8  EC5C  F04E         	call	_InitWalkAutoTime	;wreg free
 11968                           
 11969                           ;sm_ControlGate_MC50.c: 505:     } else if ((typeOpenOrder == TypeFull || typeOpenOrder 
      +                          == TypeFullOpen || typeOpenOrder == TypeFullClose) && var_sys_NVM.operationMode != ModoC
      +                          ondominio) {
 11970  0052CC  0012               	return	
 11971  0052CE                     l23207:
 11972  0052CE  0100               	movlb	0	; () banked
 11973  0052D0  05E6               	decf	actionZone_Opening@typeOpenOrder& (0+255),w,b
 11974  0052D2  B4D8               	btfsc	status,2,c
 11975  0052D4  D008               	goto	u27210
 11976                           
 11977                           ; BSR set to: 0
 11978  0052D6  0E03               	movlw	3
 11979  0052D8  19E6               	xorwf	actionZone_Opening@typeOpenOrder& (0+255),w,b
 11980  0052DA  B4D8               	btfsc	status,2,c
 11981  0052DC  D004               	goto	u27210
 11982                           
 11983                           ; BSR set to: 0
 11984  0052DE  0E04               	movlw	4
 11985  0052E0  19E6               	xorwf	actionZone_Opening@typeOpenOrder& (0+255),w,b
 11986  0052E2  A4D8               	btfss	status,2,c
 11987  0052E4  0012               	return	
 11988  0052E6                     u27210:
 11989                           
 11990                           ; BSR set to: 0
 11991  0052E6  0E02               	movlw	2
 11992  0052E8  19A4               	xorwf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 11993  0052EA  B4D8               	btfsc	status,2,c
 11994  0052EC  0012               	return	
 11995  0052EE  D7CC               	goto	l23185
 11996  0052F0                     l2723:
 11997  0052F0  0012               	return		;funcret
 11998  0052F2                     __end_of_actionZone_Opening:
 11999                           	callstack 0
 12000                           
 12001 ;; *************** function _setPositionInvertionInOpening *****************
 12002 ;; Defined at:
 12003 ;;		line 894 in file "sm_ControlGate_MC50.c"
 12004 ;; Parameters:    Size  Location     Type
 12005 ;;		None
 12006 ;; Auto vars:     Size  Location     Type
 12007 ;;		None
 12008 ;; Return value:  Size  Location     Type
 12009 ;;                  1    wreg      void 
 12010 ;; Registers used:
 12011 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12012 ;; Tracked objects:
 12013 ;;		On entry : 3E/1
 12014 ;;		On exit  : 3F/1
 12015 ;;		Unchanged: 0/0
 12016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12017 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12018 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12019 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12020 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12021 ;;Total ram usage:        8 bytes
 12022 ;; Hardware stack levels used: 1
 12023 ;; Hardware stack levels required when called: 6
 12024 ;; This function calls:
 12025 ;;		_getTimeDecelaration
 12026 ;; This function is called by:
 12027 ;;		_actionZone_Opening
 12028 ;; This function uses a non-reentrant model
 12029 ;;
 12030                           
 12031                           	psect	text25
 12032  007888                     __ptext25:
 12033                           	callstack 0
 12034  007888                     _setPositionInvertionInOpening:
 12035                           	callstack 22
 12036                           
 12037                           ;sm_ControlGate_MC50.c: 896:     if(var_sys_NVM.TypeofMotor != 2){
 12038                           
 12039                           ;incstack = 0
 12040  007888  0E02               	movlw	2
 12041  00788A  0100               	movlb	0	; () banked
 12042  00788C  19B4               	xorwf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 12043  00788E  B4D8               	btfsc	status,2,c
 12044  007890  D009               	goto	l21773
 12045                           
 12046                           ; BSR set to: 0
 12047                           ;sm_ControlGate_MC50.c: 897:        var_sys.PositionActual -= ( 100/50);
 12048  007892  0EFE               	movlw	254
 12049  007894  0101               	movlb	1	; () banked
 12050  007896  271E               	addwf	(_var_sys+30)& (0+255),f,b	;volatile
 12051  007898  0EFF               	movlw	255
 12052  00789A  231F               	addwfc	(_var_sys+31)& (0+255),f,b	;volatile
 12053  00789C  0EFF               	movlw	255
 12054  00789E  2320               	addwfc	(_var_sys+32)& (0+255),f,b	;volatile
 12055  0078A0  0EFF               	movlw	255
 12056  0078A2  D006               	goto	L69
 12057  0078A4                     l21773:
 12058                           
 12059                           ; BSR set to: 0
 12060                           ;sm_ControlGate_MC50.c: 901:          var_sys.PositionActual += ( 50/50);
 12061  0078A4  0E01               	movlw	1
 12062  0078A6  0101               	movlb	1	; () banked
 12063  0078A8  271E               	addwf	(_var_sys+30)& (0+255),f,b	;volatile
 12064  0078AA  0E00               	movlw	0
 12065  0078AC  231F               	addwfc	(_var_sys+31)& (0+255),f,b	;volatile
 12066  0078AE  2320               	addwfc	(_var_sys+32)& (0+255),f,b	;volatile
 12067  0078B0                     L69:
 12068  0078B0  2321               	addwfc	(_var_sys+33)& (0+255),f,b	;volatile
 12069                           
 12070                           ; BSR set to: 1
 12071                           ;sm_ControlGate_MC50.c: 906:     if (var_sys.PositionActual < getTimeDecelaration(InClos
      +                          e)) {
 12072  0078B2  0E03               	movlw	3
 12073  0078B4  ECD0  F03B         	call	_getTimeDecelaration
 12074  0078B8  5029               	movf	?_getTimeDecelaration^0,w,c
 12075  0078BA  0101               	movlb	1	; () banked
 12076  0078BC  5D1E               	subwf	(_var_sys+30)& (0+255),w,b	;volatile
 12077  0078BE  502A               	movf	(?_getTimeDecelaration+1)^0,w,c
 12078  0078C0  591F               	subwfb	(_var_sys+31)& (0+255),w,b	;volatile
 12079  0078C2  502B               	movf	(?_getTimeDecelaration+2)^0,w,c
 12080  0078C4  5920               	subwfb	(_var_sys+32)& (0+255),w,b	;volatile
 12081  0078C6  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 12082  0078C8  0A80               	xorlw	128
 12083  0078CA  6E32               	movwf	??_setPositionInvertionInOpening^0,c
 12084  0078CC  502C               	movf	(?_getTimeDecelaration+3)^0,w,c
 12085  0078CE  0A80               	xorlw	128
 12086  0078D0  5832               	subwfb	??_setPositionInvertionInOpening^0,w,c
 12087  0078D2  B0D8               	btfsc	status,0,c
 12088  0078D4  D004               	goto	l21779
 12089                           
 12090                           ; BSR set to: 1
 12091                           ;sm_ControlGate_MC50.c: 907:         var_sys.PositionActual = getTimeDecelaration(InClos
      +                          e);
 12092  0078D6  0E03               	movlw	3
 12093  0078D8  ECD0  F03B         	call	_getTimeDecelaration
 12094  0078DC  D015               	goto	L70
 12095  0078DE                     l21779:
 12096                           
 12097                           ; BSR set to: 1
 12098  0078DE  0E01               	movlw	1
 12099  0078E0  ECD0  F03B         	call	_getTimeDecelaration
 12100  0078E4  0101               	movlb	1	; () banked
 12101  0078E6  511E               	movf	(_var_sys+30)& (0+255),w,b	;volatile
 12102  0078E8  5C29               	subwf	?_getTimeDecelaration^0,w,c
 12103  0078EA  511F               	movf	(_var_sys+31)& (0+255),w,b	;volatile
 12104  0078EC  582A               	subwfb	(?_getTimeDecelaration+1)^0,w,c
 12105  0078EE  5120               	movf	(_var_sys+32)& (0+255),w,b	;volatile
 12106  0078F0  582B               	subwfb	(?_getTimeDecelaration+2)^0,w,c
 12107  0078F2  502C               	movf	(?_getTimeDecelaration+3)^0,w,c
 12108  0078F4  0A80               	xorlw	128
 12109  0078F6  6E32               	movwf	??_setPositionInvertionInOpening^0,c
 12110  0078F8  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 12111  0078FA  0A80               	xorlw	128
 12112  0078FC  5832               	subwfb	??_setPositionInvertionInOpening^0,w,c
 12113  0078FE  B0D8               	btfsc	status,0,c
 12114  007900  D00B               	goto	l21783
 12115                           
 12116                           ; BSR set to: 1
 12117                           ;sm_ControlGate_MC50.c: 909:         var_sys.PositionActual = getTimeDecelaration(InOpen
      +                          Full);
 12118  007902  0E01               	movlw	1
 12119  007904  ECD0  F03B         	call	_getTimeDecelaration
 12120  007908                     L70:
 12121  007908  C029  F11E         	movff	?_getTimeDecelaration,_var_sys+30	;volatile
 12122  00790C  C02A  F11F         	movff	?_getTimeDecelaration+1,_var_sys+31	;volatile
 12123  007910  C02B  F120         	movff	?_getTimeDecelaration+2,_var_sys+32	;volatile
 12124  007914  C02C  F121         	movff	?_getTimeDecelaration+3,_var_sys+33	;volatile
 12125  007918                     l21783:
 12126                           
 12127                           ;sm_ControlGate_MC50.c: 911:     var_sys.TimeMaxMotorIsON = var_sys.PositionActual + var
      +                          _sys_NVM.decelarationClose*( 500/50) + (1000/50)*10;
 12128  007918  0100               	movlb	0	; () banked
 12129  00791A  5199               	movf	(_var_sys_NVM+1)& (0+255),w,b	;volatile
 12130  00791C  0D0A               	mullw	10
 12131  00791E  CFF3 F032          	movff	prodl,??_setPositionInvertionInOpening
 12132  007922  CFF4 F033          	movff	prodh,??_setPositionInvertionInOpening+1
 12133  007926  0E00               	movlw	0
 12134  007928  BE33               	btfsc	(??_setPositionInvertionInOpening+1)^0,7,c
 12135  00792A  0EFF               	movlw	255
 12136  00792C  6E34               	movwf	(??_setPositionInvertionInOpening+2)^0,c
 12137  00792E  6E35               	movwf	(??_setPositionInvertionInOpening+3)^0,c
 12138  007930  0101               	movlb	1	; () banked
 12139  007932  511E               	movf	(_var_sys+30)& (0+255),w,b	;volatile
 12140  007934  2432               	addwf	??_setPositionInvertionInOpening^0,w,c
 12141  007936  6E36               	movwf	(??_setPositionInvertionInOpening+4)^0,c
 12142  007938  511F               	movf	(_var_sys+31)& (0+255),w,b	;volatile
 12143  00793A  2033               	addwfc	(??_setPositionInvertionInOpening+1)^0,w,c
 12144  00793C  6E37               	movwf	(??_setPositionInvertionInOpening+5)^0,c
 12145  00793E  5120               	movf	(_var_sys+32)& (0+255),w,b	;volatile
 12146  007940  2034               	addwfc	(??_setPositionInvertionInOpening+2)^0,w,c
 12147  007942  6E38               	movwf	(??_setPositionInvertionInOpening+6)^0,c
 12148  007944  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 12149  007946  2035               	addwfc	(??_setPositionInvertionInOpening+3)^0,w,c
 12150  007948  6E39               	movwf	(??_setPositionInvertionInOpening+7)^0,c
 12151  00794A  0EC8               	movlw	200
 12152  00794C  2436               	addwf	(??_setPositionInvertionInOpening+4)^0,w,c
 12153  00794E  6F18               	movwf	(_var_sys+24)& (0+255),b	;volatile
 12154  007950  0E00               	movlw	0
 12155  007952  2037               	addwfc	(??_setPositionInvertionInOpening+5)^0,w,c
 12156  007954  6F19               	movwf	(_var_sys+25)& (0+255),b	;volatile
 12157  007956  0E00               	movlw	0
 12158  007958  2038               	addwfc	(??_setPositionInvertionInOpening+6)^0,w,c
 12159  00795A  6F1A               	movwf	(_var_sys+26)& (0+255),b	;volatile
 12160  00795C  0E00               	movlw	0
 12161  00795E  2039               	addwfc	(??_setPositionInvertionInOpening+7)^0,w,c
 12162  007960  6F1B               	movwf	(_var_sys+27)& (0+255),b	;volatile
 12163                           
 12164                           ; BSR set to: 1
 12165  007962  0012               	return		;funcret
 12166  007964                     __end_of_setPositionInvertionInOpening:
 12167                           	callstack 0
 12168                           
 12169 ;; *************** function _controlVelocity *****************
 12170 ;; Defined at:
 12171 ;;		line 527 in file "outputs_MC50.c"
 12172 ;; Parameters:    Size  Location     Type
 12173 ;;		None
 12174 ;; Auto vars:     Size  Location     Type
 12175 ;;		None
 12176 ;; Return value:  Size  Location     Type
 12177 ;;                  1    wreg      void 
 12178 ;; Registers used:
 12179 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12180 ;; Tracked objects:
 12181 ;;		On entry : 3E/1
 12182 ;;		On exit  : 3E/0
 12183 ;;		Unchanged: 0/0
 12184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12185 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12186 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12187 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12188 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12189 ;;Total ram usage:        1 bytes
 12190 ;; Hardware stack levels used: 1
 12191 ;; Hardware stack levels required when called: 7
 12192 ;; This function calls:
 12193 ;;		_ControlDecelarationFactor
 12194 ;;		_InitSoftStop
 12195 ;;		_getStateOpenPosition
 12196 ;;		_getTimeDecelaration
 12197 ;; This function is called by:
 12198 ;;		_main
 12199 ;;		_actionZone_Opening
 12200 ;; This function uses a non-reentrant model
 12201 ;;
 12202                           
 12203                           	psect	text26
 12204  00575E                     __ptext26:
 12205                           	callstack 0
 12206  00575E                     _controlVelocity:
 12207                           	callstack 21
 12208                           
 12209                           ;outputs_MC50.c: 531:     if(var_sys.LearningIsEnabled==YES && var_sys.LearningDecelarat
      +                          ion==YES)
 12210                           
 12211                           ; BSR set to: 1
 12212                           ;incstack = 0
 12213  00575E  0101               	movlb	1	; () banked
 12214  005760  0526               	decf	(_var_sys+38)& (0+255),w,b	;volatile
 12215  005762  A4D8               	btfss	status,2,c
 12216  005764  D017               	goto	l21581
 12217                           
 12218                           ; BSR set to: 1
 12219  005766  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 12220  005768  A4D8               	btfss	status,2,c
 12221  00576A  D014               	goto	l21581
 12222                           
 12223                           ; BSR set to: 1
 12224                           ;outputs_MC50.c: 532:     {;outputs_MC50.c: 533:         if(powerControl_st.decelaration
      +                          Active==NO)
 12225  00576C  517B               	movf	_powerControl_st& (0+255),w,b
 12226  00576E  A4D8               	btfss	status,2,c
 12227  005770  D008               	goto	l21575
 12228                           
 12229                           ; BSR set to: 1
 12230                           ;outputs_MC50.c: 534:         {;outputs_MC50.c: 535:             ts_system.TimeStopedBef
      +                          oreDecelaration=( 500/50);
 12231  005772  0E00               	movlw	0
 12232  005774  6FCC               	movwf	(_ts_system+45)& (0+255),b	;volatile
 12233  005776  0E0A               	movlw	10
 12234  005778  6FCB               	movwf	(_ts_system+44)& (0+255),b	;volatile
 12235                           
 12236                           ;outputs_MC50.c: 536:             ts_system.TimeCurrentWaitForAlarm=(1000/50);
 12237  00577A  0E00               	movlw	0
 12238  00577C  6FCE               	movwf	(_ts_system+47)& (0+255),b	;volatile
 12239  00577E  0E14               	movlw	20
 12240  005780  6FCD               	movwf	(_ts_system+46)& (0+255),b	;volatile
 12241  005782                     l21575:
 12242                           
 12243                           ; BSR set to: 1
 12244                           ;outputs_MC50.c: 538:         ControlDecelarationFactor();
 12245  005782  ECFF  F04D         	call	_ControlDecelarationFactor	;wreg free
 12246                           
 12247                           ; BSR set to: 1
 12248                           ;outputs_MC50.c: 539:         powerControl_st.decelarationActive=YES;
 12249  005786  0E01               	movlw	1
 12250  005788  6F7B               	movwf	_powerControl_st& (0+255),b
 12251                           
 12252                           ; BSR set to: 1
 12253                           ;outputs_MC50.c: 540:         var_sys.velocityFactor=0;
 12254  00578A  0E00               	movlw	0
 12255  00578C  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 12256  00578E  0E00               	movlw	0
 12257  005790  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 12258                           
 12259                           ;outputs_MC50.c: 541:     }
 12260  005792  0012               	return	
 12261  005794                     l21581:
 12262                           
 12263                           ; BSR set to: 1
 12264  005794  0526               	decf	(_var_sys+38)& (0+255),w,b	;volatile
 12265  005796  B4D8               	btfsc	status,2,c
 12266  005798  D003               	goto	u24960
 12267                           
 12268                           ; BSR set to: 1
 12269  00579A  0509               	decf	(_var_sys+9)& (0+255),w,b	;volatile
 12270  00579C  A4D8               	btfss	status,2,c
 12271  00579E  D007               	goto	l21587
 12272  0057A0                     u24960:
 12273                           
 12274                           ; BSR set to: 1
 12275                           ;outputs_MC50.c: 544:     {;outputs_MC50.c: 545:         var_sys.velocityFactor=0;
 12276  0057A0  0E00               	movlw	0
 12277  0057A2  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 12278  0057A4  0E00               	movlw	0
 12279  0057A6  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 12280                           
 12281                           ;outputs_MC50.c: 546:         powerControl_st.decelarationActive=NO;
 12282  0057A8  0E00               	movlw	0
 12283  0057AA  6F7B               	movwf	_powerControl_st& (0+255),b
 12284                           
 12285                           ;outputs_MC50.c: 547:     }
 12286  0057AC  0012               	return	
 12287  0057AE                     l21587:
 12288                           
 12289                           ; BSR set to: 1
 12290  0057AE  0E03               	movlw	3
 12291  0057B0  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 12292  0057B2  A4D8               	btfss	status,2,c
 12293  0057B4  D068               	goto	l21635
 12294                           
 12295                           ; BSR set to: 1
 12296  0057B6  0E03               	movlw	3
 12297  0057B8  ECD0  F03B         	call	_getTimeDecelaration
 12298  0057BC  5029               	movf	?_getTimeDecelaration^0,w,c
 12299  0057BE  0101               	movlb	1	; () banked
 12300  0057C0  5D1E               	subwf	(_var_sys+30)& (0+255),w,b	;volatile
 12301  0057C2  502A               	movf	(?_getTimeDecelaration+1)^0,w,c
 12302  0057C4  591F               	subwfb	(_var_sys+31)& (0+255),w,b	;volatile
 12303  0057C6  502B               	movf	(?_getTimeDecelaration+2)^0,w,c
 12304  0057C8  5920               	subwfb	(_var_sys+32)& (0+255),w,b	;volatile
 12305  0057CA  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 12306  0057CC  0A80               	xorlw	128
 12307  0057CE  0100               	movlb	0	; () banked
 12308  0057D0  6FDA               	movwf	??_controlVelocity& (0+255),b
 12309  0057D2  502C               	movf	(?_getTimeDecelaration+3)^0,w,c
 12310  0057D4  0A80               	xorlw	128
 12311  0057D6  59DA               	subwfb	??_controlVelocity& (0+255),w,b
 12312  0057D8  A0D8               	btfss	status,0,c
 12313  0057DA  D004               	goto	u24990
 12314                           
 12315                           ; BSR set to: 0
 12316  0057DC  0101               	movlb	1	; () banked
 12317  0057DE  0548               	decf	(_var_sys+72)& (0+255),w,b	;volatile
 12318  0057E0  A4D8               	btfss	status,2,c
 12319  0057E2  D051               	goto	l21635
 12320  0057E4                     u24990:
 12321  0057E4  0100               	movlb	0	; () banked
 12322  0057E6  5199               	movf	(_var_sys_NVM+1)& (0+255),w,b	;volatile
 12323  0057E8  B4D8               	btfsc	status,2,c
 12324  0057EA  D004               	goto	u25010
 12325                           
 12326                           ; BSR set to: 0
 12327  0057EC  0101               	movlb	1	; () banked
 12328  0057EE  5112               	movf	(_var_sys+18)& (0+255),w,b	;volatile
 12329  0057F0  B4D8               	btfsc	status,2,c
 12330  0057F2  D00C               	goto	u25030
 12331  0057F4                     u25010:
 12332  0057F4  0101               	movlb	1	; () banked
 12333  0057F6  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 12334  0057F8  D005               	goto	u25020
 12335  0057FA  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 12336  0057FC  E144               	bnz	l21635
 12337  0057FE  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 12338  005800  B0D8               	btfsc	status,0,c
 12339  005802  D041               	goto	l21635
 12340  005804                     u25020:
 12341                           
 12342                           ; BSR set to: 1
 12343  005804  0100               	movlb	0	; () banked
 12344  005806  51AB               	movf	(_var_sys_NVM+19)& (0+255),w,b	;volatile
 12345  005808  B4D8               	btfsc	status,2,c
 12346  00580A  D03D               	goto	l21635
 12347  00580C                     u25030:
 12348                           
 12349                           ;outputs_MC50.c: 550:     {;outputs_MC50.c: 552:             if ((powerControl_st.decela
      +                          rationActive==NO) && (var_sys.AutoInversionActiveStop==NO ))
 12350  00580C  0101               	movlb	1	; () banked
 12351  00580E  517B               	movf	_powerControl_st& (0+255),w,b
 12352  005810  A4D8               	btfss	status,2,c
 12353  005812  D022               	goto	l21621
 12354                           
 12355                           ; BSR set to: 1
 12356  005814  5112               	movf	(_var_sys+18)& (0+255),w,b	;volatile
 12357  005816  A4D8               	btfss	status,2,c
 12358  005818  D01F               	goto	l21621
 12359                           
 12360                           ; BSR set to: 1
 12361                           ;outputs_MC50.c: 553:                 {;outputs_MC50.c: 556:                     ts_syst
      +                          em.TimeCurrentWaitForAlarm=(1000/50);
 12362  00581A  0E00               	movlw	0
 12363  00581C  6FCE               	movwf	(_ts_system+47)& (0+255),b	;volatile
 12364  00581E  0E14               	movlw	20
 12365  005820  6FCD               	movwf	(_ts_system+46)& (0+255),b	;volatile
 12366                           
 12367                           ;outputs_MC50.c: 558:                     if (var_sys_NVM.softstop > 0){
 12368  005822  0100               	movlb	0	; () banked
 12369  005824  51AB               	movf	(_var_sys_NVM+19)& (0+255),w,b	;volatile
 12370  005826  B4D8               	btfsc	status,2,c
 12371  005828  D008               	goto	l21611
 12372                           
 12373                           ; BSR set to: 0
 12374                           ;outputs_MC50.c: 559:                         var_sys.AutoInversionActive = NO;
 12375  00582A  0E00               	movlw	0
 12376  00582C  0101               	movlb	1	; () banked
 12377  00582E  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 12378                           
 12379                           ;outputs_MC50.c: 560:                         var_sys.AutoInversionActiveStop = YES;
 12380  005830  0E01               	movlw	1
 12381  005832  6F12               	movwf	(_var_sys+18)& (0+255),b	;volatile
 12382                           
 12383                           ; BSR set to: 1
 12384                           ;outputs_MC50.c: 561:                         InitSoftStop();
 12385  005834  EC4F  F049         	call	_InitSoftStop	;wreg free
 12386                           
 12387                           ;outputs_MC50.c: 563:                     }
 12388  005838  D00F               	goto	l21621
 12389  00583A                     l21611:
 12390                           
 12391                           ; BSR set to: 0
 12392                           ;outputs_MC50.c: 565:                     {;outputs_MC50.c: 566:                        
      +                           ts_system.TimeStopedBeforeDecelaration=( 500/50);
 12393  00583A  0E00               	movlw	0
 12394  00583C  0101               	movlb	1	; () banked
 12395  00583E  6FCC               	movwf	(_ts_system+45)& (0+255),b	;volatile
 12396  005840  0E0A               	movlw	10
 12397  005842  6FCB               	movwf	(_ts_system+44)& (0+255),b	;volatile
 12398                           
 12399                           ; BSR set to: 1
 12400                           ;outputs_MC50.c: 567:                         ControlDecelarationFactor();
 12401  005844  ECFF  F04D         	call	_ControlDecelarationFactor	;wreg free
 12402                           
 12403                           ; BSR set to: 1
 12404                           ;outputs_MC50.c: 568:                         powerControl_st.decelarationActive=YES;
 12405  005848  0E01               	movlw	1
 12406  00584A  6F7B               	movwf	_powerControl_st& (0+255),b
 12407                           
 12408                           ; BSR set to: 1
 12409                           ;outputs_MC50.c: 569:                         var_sys.velocityFactor=0;
 12410  00584C  0E00               	movlw	0
 12411  00584E  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 12412  005850  0E00               	movlw	0
 12413  005852  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 12414                           
 12415                           ; BSR set to: 1
 12416                           ;outputs_MC50.c: 570:                          var_sys.AutoInversionActiveStop = NO;
 12417  005854  0E00               	movlw	0
 12418  005856  6F12               	movwf	(_var_sys+18)& (0+255),b	;volatile
 12419  005858                     l21621:
 12420                           
 12421                           ;outputs_MC50.c: 574:                 if ((var_sys.velocityFactorstop <= 0)&&(var_sys.Au
      +                          toInversionActiveStop == YES) && (var_sys_NVM.softstop > 0))
 12422  005858  0101               	movlb	1	; () banked
 12423  00585A  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 12424  00585C  D005               	goto	u25070
 12425  00585E  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 12426  005860  E102               	bnz	u25071
 12427  005862  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 12428  005864  B0D8               	btfsc	status,0,c
 12429  005866                     u25071:
 12430  005866  0012               	return	
 12431  005868                     u25070:
 12432                           
 12433                           ; BSR set to: 1
 12434  005868  0512               	decf	(_var_sys+18)& (0+255),w,b	;volatile
 12435  00586A  A4D8               	btfss	status,2,c
 12436  00586C  0012               	return	
 12437                           
 12438                           ; BSR set to: 1
 12439  00586E  0100               	movlb	0	; () banked
 12440  005870  51AB               	movf	(_var_sys_NVM+19)& (0+255),w,b	;volatile
 12441  005872  B4D8               	btfsc	status,2,c
 12442  005874  0012               	return	
 12443                           
 12444                           ; BSR set to: 0
 12445                           ;outputs_MC50.c: 575:                 {;outputs_MC50.c: 576:                 ts_system.T
      +                          imeStopedBeforeDecelaration=( 100/50);
 12446  005876  0E00               	movlw	0
 12447  005878  0101               	movlb	1	; () banked
 12448  00587A  6FCC               	movwf	(_ts_system+45)& (0+255),b	;volatile
 12449  00587C  0E02               	movlw	2
 12450  00587E  6FCB               	movwf	(_ts_system+44)& (0+255),b	;volatile
 12451                           
 12452                           ;outputs_MC50.c: 577:                 var_sys.AutoInversionActiveStop = NO;
 12453  005880  0E00               	movlw	0
 12454  005882  6F12               	movwf	(_var_sys+18)& (0+255),b	;volatile
 12455  005884  D77E               	goto	l21575
 12456  005886                     l21635:
 12457  005886  0101               	movlb	1	; () banked
 12458  005888  5100               	movf	_var_sys& (0+255),w,b	;volatile
 12459  00588A  ECC3  F038         	call	_getStateOpenPosition
 12460  00588E  06E8               	decf	wreg,f,c
 12461  005890  A4D8               	btfss	status,2,c
 12462  005892  D042               	goto	l21677
 12463                           
 12464                           ; BSR set to: 0
 12465  005894  5198               	movf	_var_sys_NVM& (0+255),w,b	;volatile
 12466  005896  B4D8               	btfsc	status,2,c
 12467  005898  D004               	goto	u25120
 12468                           
 12469                           ; BSR set to: 0
 12470  00589A  0101               	movlb	1	; () banked
 12471  00589C  5112               	movf	(_var_sys+18)& (0+255),w,b	;volatile
 12472  00589E  B4D8               	btfsc	status,2,c
 12473  0058A0  D00C               	goto	u25140
 12474  0058A2                     u25120:
 12475  0058A2  0101               	movlb	1	; () banked
 12476  0058A4  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 12477  0058A6  D005               	goto	u25130
 12478  0058A8  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 12479  0058AA  E136               	bnz	l21677
 12480  0058AC  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 12481  0058AE  B0D8               	btfsc	status,0,c
 12482  0058B0  D033               	goto	l21677
 12483  0058B2                     u25130:
 12484                           
 12485                           ; BSR set to: 1
 12486  0058B2  0100               	movlb	0	; () banked
 12487  0058B4  51AB               	movf	(_var_sys_NVM+19)& (0+255),w,b	;volatile
 12488  0058B6  B4D8               	btfsc	status,2,c
 12489  0058B8  D02F               	goto	l21677
 12490  0058BA                     u25140:
 12491                           
 12492                           ;outputs_MC50.c: 586:     {;outputs_MC50.c: 588:             if ((powerControl_st.decela
      +                          rationActive==NO) && (var_sys.AutoInversionActiveStop==NO ))
 12493  0058BA  0101               	movlb	1	; () banked
 12494  0058BC  517B               	movf	_powerControl_st& (0+255),w,b
 12495  0058BE  A4D8               	btfss	status,2,c
 12496  0058C0  D022               	goto	l21663
 12497                           
 12498                           ; BSR set to: 1
 12499  0058C2  5112               	movf	(_var_sys+18)& (0+255),w,b	;volatile
 12500  0058C4  A4D8               	btfss	status,2,c
 12501  0058C6  D01F               	goto	l21663
 12502                           
 12503                           ; BSR set to: 1
 12504                           ;outputs_MC50.c: 589:         {;outputs_MC50.c: 592:             ts_system.TimeCurrentWa
      +                          itForAlarm=(1000/50);
 12505  0058C8  0E00               	movlw	0
 12506  0058CA  6FCE               	movwf	(_ts_system+47)& (0+255),b	;volatile
 12507  0058CC  0E14               	movlw	20
 12508  0058CE  6FCD               	movwf	(_ts_system+46)& (0+255),b	;volatile
 12509                           
 12510                           ;outputs_MC50.c: 594:             if (var_sys_NVM.softstop > 0){
 12511  0058D0  0100               	movlb	0	; () banked
 12512  0058D2  51AB               	movf	(_var_sys_NVM+19)& (0+255),w,b	;volatile
 12513  0058D4  B4D8               	btfsc	status,2,c
 12514  0058D6  D008               	goto	l21655
 12515                           
 12516                           ; BSR set to: 0
 12517                           ;outputs_MC50.c: 595:                 var_sys.AutoInversionActive = NO;
 12518  0058D8  0E00               	movlw	0
 12519  0058DA  0101               	movlb	1	; () banked
 12520  0058DC  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 12521                           
 12522                           ;outputs_MC50.c: 596:                 var_sys.AutoInversionActiveStop = YES;
 12523  0058DE  0E01               	movlw	1
 12524  0058E0  6F12               	movwf	(_var_sys+18)& (0+255),b	;volatile
 12525                           
 12526                           ; BSR set to: 1
 12527                           ;outputs_MC50.c: 597:                 InitSoftStop();
 12528  0058E2  EC4F  F049         	call	_InitSoftStop	;wreg free
 12529                           
 12530                           ;outputs_MC50.c: 598:             }else{
 12531  0058E6  D00F               	goto	l21663
 12532  0058E8                     l21655:
 12533                           
 12534                           ; BSR set to: 0
 12535                           ;outputs_MC50.c: 599:                 ts_system.TimeStopedBeforeDecelaration=( 500/50);
 12536  0058E8  0E00               	movlw	0
 12537  0058EA  0101               	movlb	1	; () banked
 12538  0058EC  6FCC               	movwf	(_ts_system+45)& (0+255),b	;volatile
 12539  0058EE  0E0A               	movlw	10
 12540  0058F0  6FCB               	movwf	(_ts_system+44)& (0+255),b	;volatile
 12541                           
 12542                           ;outputs_MC50.c: 600:                  var_sys.AutoInversionActiveStop = NO;
 12543  0058F2  0E00               	movlw	0
 12544  0058F4  6F12               	movwf	(_var_sys+18)& (0+255),b	;volatile
 12545                           
 12546                           ; BSR set to: 1
 12547                           ;outputs_MC50.c: 601:                 ControlDecelarationFactor();
 12548  0058F6  ECFF  F04D         	call	_ControlDecelarationFactor	;wreg free
 12549                           
 12550                           ; BSR set to: 1
 12551                           ;outputs_MC50.c: 602:                 powerControl_st.decelarationActive=YES;
 12552  0058FA  0E01               	movlw	1
 12553  0058FC  6F7B               	movwf	_powerControl_st& (0+255),b
 12554                           
 12555                           ; BSR set to: 1
 12556                           ;outputs_MC50.c: 603:                 var_sys.velocityFactor=0;
 12557  0058FE  0E00               	movlw	0
 12558  005900  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 12559  005902  0E00               	movlw	0
 12560  005904  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 12561  005906                     l21663:
 12562                           
 12563                           ;outputs_MC50.c: 607:         if ((var_sys.velocityFactorstop <= 0)&&(var_sys.AutoInvers
      +                          ionActiveStop == YES) && (var_sys_NVM.softstop > 0))
 12564  005906  0101               	movlb	1	; () banked
 12565  005908  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 12566  00590A  D7AE               	goto	u25070
 12567  00590C  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 12568  00590E  E135               	bnz	l2311
 12569  005910  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 12570  005912  B0D8               	btfsc	status,0,c
 12571  005914  0012               	return	
 12572  005916  D7A8               	goto	u25070
 12573  005918                     l21677:
 12574  005918  0101               	movlb	1	; () banked
 12575  00591A  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 12576  00591C  D012               	goto	l21685
 12577  00591E  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 12578  005920  E103               	bnz	u25210
 12579  005922  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 12580  005924  A0D8               	btfss	status,0,c
 12581  005926  D00D               	goto	l21685
 12582  005928                     u25210:
 12583                           
 12584                           ; BSR set to: 1
 12585  005928  5100               	movf	_var_sys& (0+255),w,b	;volatile
 12586  00592A  B4D8               	btfsc	status,2,c
 12587  00592C  D00A               	goto	l21685
 12588                           
 12589                           ; BSR set to: 1
 12590                           ;outputs_MC50.c: 618:     {;outputs_MC50.c: 619:         var_sys.velocityFactorstop=(var
      +                          _sys.velocityFactorstop)- var_sys.SoftStopDecrementControl;
 12591  00592E  5113               	movf	(_var_sys+19)& (0+255),w,b	;volatile
 12592  005930  5D10               	subwf	(_var_sys+16)& (0+255),w,b	;volatile
 12593  005932  6F10               	movwf	(_var_sys+16)& (0+255),b	;volatile
 12594  005934  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 12595  005936  A0D8               	btfss	status,0,c
 12596  005938  0511               	decf	(_var_sys+17)& (0+255),w,b	;volatile
 12597  00593A  6F11               	movwf	(_var_sys+17)& (0+255),b	;volatile
 12598  00593C                     l21683:
 12599                           
 12600                           ; BSR set to: 1
 12601                           ;outputs_MC50.c: 620:         powerControl_st.decelarationActive=NO;
 12602  00593C  0E00               	movlw	0
 12603  00593E  6F7B               	movwf	_powerControl_st& (0+255),b
 12604                           
 12605                           ;outputs_MC50.c: 623:     }
 12606  005940  0012               	return	
 12607  005942                     l21685:
 12608                           
 12609                           ; BSR set to: 1
 12610  005942  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 12611  005944  D010               	goto	l21693
 12612  005946  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 12613  005948  E103               	bnz	u25230
 12614  00594A  050E               	decf	(_var_sys+14)& (0+255),w,b	;volatile
 12615  00594C  A0D8               	btfss	status,0,c
 12616  00594E  D00B               	goto	l21693
 12617  005950                     u25230:
 12618                           
 12619                           ; BSR set to: 1
 12620  005950  5100               	movf	_var_sys& (0+255),w,b	;volatile
 12621  005952  B4D8               	btfsc	status,2,c
 12622  005954  D008               	goto	l21693
 12623                           
 12624                           ; BSR set to: 1
 12625                           ;outputs_MC50.c: 626:     {;outputs_MC50.c: 627:         var_sys.velocityFactor=(var_sys
      +                          .velocityFactor)-var_sys.SoftStartDecrementControl;
 12626  005956  5114               	movf	(_var_sys+20)& (0+255),w,b	;volatile
 12627  005958  5D0E               	subwf	(_var_sys+14)& (0+255),w,b	;volatile
 12628  00595A  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 12629  00595C  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 12630  00595E  A0D8               	btfss	status,0,c
 12631  005960  050F               	decf	(_var_sys+15)& (0+255),w,b	;volatile
 12632  005962  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 12633  005964  D7EB               	goto	l21683
 12634  005966                     l21693:
 12635                           
 12636                           ; BSR set to: 1
 12637                           ;outputs_MC50.c: 634:     {;outputs_MC50.c: 635:          var_sys.velocityFactorstop = 0
      +                          ;
 12638  005966  0E00               	movlw	0
 12639  005968  6F11               	movwf	(_var_sys+17)& (0+255),b	;volatile
 12640  00596A  0E00               	movlw	0
 12641  00596C  6F10               	movwf	(_var_sys+16)& (0+255),b	;volatile
 12642                           
 12643                           ;outputs_MC50.c: 636:          var_sys.velocityFactor=0;
 12644  00596E  0E00               	movlw	0
 12645  005970  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 12646  005972  0E00               	movlw	0
 12647  005974  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 12648                           
 12649                           ;outputs_MC50.c: 637:          powerControl_st.decelarationActive=NO;
 12650  005976  0E00               	movlw	0
 12651  005978  6F7B               	movwf	_powerControl_st& (0+255),b
 12652  00597A                     l2311:
 12653  00597A  0012               	return		;funcret
 12654  00597C                     __end_of_controlVelocity:
 12655                           	callstack 0
 12656                           
 12657 ;; *************** function _getStateOpenPosition *****************
 12658 ;; Defined at:
 12659 ;;		line 470 in file "outputs_MC50.c"
 12660 ;; Parameters:    Size  Location     Type
 12661 ;;  stateMotor      1    wreg     enum E10381
 12662 ;; Auto vars:     Size  Location     Type
 12663 ;;  stateMotor      1    1[BANK0 ] enum E10381
 12664 ;;  state           1    0[BANK0 ] _Bool 
 12665 ;; Return value:  Size  Location     Type
 12666 ;;                  1    wreg      _Bool 
 12667 ;; Registers used:
 12668 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12669 ;; Tracked objects:
 12670 ;;		On entry : 3F/1
 12671 ;;		On exit  : 3F/0
 12672 ;;		Unchanged: 0/0
 12673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12674 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12675 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12676 ;;      Temps:          9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12677 ;;      Totals:         9       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12678 ;;Total ram usage:       11 bytes
 12679 ;; Hardware stack levels used: 1
 12680 ;; Hardware stack levels required when called: 6
 12681 ;; This function calls:
 12682 ;;		___lmul
 12683 ;;		_getTimeDecelaration
 12684 ;; This function is called by:
 12685 ;;		_controlVelocity
 12686 ;; This function uses a non-reentrant model
 12687 ;;
 12688                           
 12689                           	psect	text27
 12690  007186                     __ptext27:
 12691                           	callstack 0
 12692  007186                     _getStateOpenPosition:
 12693                           	callstack 21
 12694                           
 12695                           ;incstack = 0
 12696                           ;getStateOpenPosition@stateMotor stored from wreg
 12697  007186  0100               	movlb	0	; () banked
 12698  007188  6FD9               	movwf	getStateOpenPosition@stateMotor& (0+255),b
 12699                           
 12700                           ;outputs_MC50.c: 470: _Bool getStateOpenPosition(stateMotor_enum stateMotor);outputs_MC5
      +                          0.c: 471: {;outputs_MC50.c: 472:     _Bool state=0;
 12701  00718A  0E00               	movlw	0
 12702  00718C  0100               	movlb	0	; () banked
 12703  00718E  6FD8               	movwf	getStateOpenPosition@state& (0+255),b
 12704                           
 12705                           ; BSR set to: 0
 12706                           ;outputs_MC50.c: 473:     if(var_sys.PositionIsLost==YES)
 12707  007190  0101               	movlb	1	; () banked
 12708  007192  0548               	decf	(_var_sys+72)& (0+255),w,b	;volatile
 12709  007194  A4D8               	btfss	status,2,c
 12710  007196  D002               	goto	l20935
 12711  007198                     u24080:
 12712                           
 12713                           ;outputs_MC50.c: 474:     {;outputs_MC50.c: 475:         state=1;
 12714  007198  0E01               	movlw	1
 12715  00719A  D046               	goto	L71
 12716  00719C                     l20935:
 12717                           
 12718                           ; BSR set to: 1
 12719  00719C  0100               	movlb	0	; () banked
 12720  00719E  519C               	movf	(_var_sys_NVM+4)& (0+255),w,b	;volatile
 12721  0071A0  0D14               	mullw	20
 12722  0071A2  CFF3 F032          	movff	prodl,??_getStateOpenPosition
 12723  0071A6  CFF4 F033          	movff	prodh,??_getStateOpenPosition+1
 12724  0071AA  0E00               	movlw	0
 12725  0071AC  BE33               	btfsc	(??_getStateOpenPosition+1)^0,7,c
 12726  0071AE  0EFF               	movlw	255
 12727  0071B0  6E34               	movwf	(??_getStateOpenPosition+2)^0,c
 12728  0071B2  6E35               	movwf	(??_getStateOpenPosition+3)^0,c
 12729  0071B4  51CC               	movf	(_var_sys_NVM+52)& (0+255),w,b	;volatile
 12730  0071B6  5C32               	subwf	??_getStateOpenPosition^0,w,c
 12731  0071B8  51CD               	movf	(_var_sys_NVM+53)& (0+255),w,b	;volatile
 12732  0071BA  5833               	subwfb	(??_getStateOpenPosition+1)^0,w,c
 12733  0071BC  51CE               	movf	(_var_sys_NVM+54)& (0+255),w,b	;volatile
 12734  0071BE  5834               	subwfb	(??_getStateOpenPosition+2)^0,w,c
 12735  0071C0  51CF               	movf	(_var_sys_NVM+55)& (0+255),w,b	;volatile
 12736  0071C2  5835               	subwfb	(??_getStateOpenPosition+3)^0,w,c
 12737  0071C4  B0D8               	btfsc	status,0,c
 12738  0071C6  D033               	goto	l20949
 12739                           
 12740                           ; BSR set to: 0
 12741  0071C8  0E02               	movlw	2
 12742  0071CA  19D9               	xorwf	getStateOpenPosition@stateMotor& (0+255),w,b
 12743  0071CC  A4D8               	btfss	status,2,c
 12744  0071CE  D02F               	goto	l20949
 12745                           
 12746                           ; BSR set to: 0
 12747                           ;outputs_MC50.c: 478:     {;outputs_MC50.c: 479:         if(var_sys_NVM.walkTime<(var_sy
      +                          s_NVM.decelarationOpen/2))
 12748  0071D0  90D8               	bcf	status,0,c
 12749  0071D2  3198               	rrcf	_var_sys_NVM& (0+255),w,b	;volatile
 12750  0071D4  619C               	cpfslt	(_var_sys_NVM+4)& (0+255),b	;volatile
 12751  0071D6  D001               	goto	l20943
 12752  0071D8  D7DF               	goto	u24080
 12753  0071DA                     l20943:
 12754                           
 12755                           ; BSR set to: 0
 12756  0071DA  519C               	movf	(_var_sys_NVM+4)& (0+255),w,b	;volatile
 12757  0071DC  0D14               	mullw	20
 12758  0071DE  CFF3 F032          	movff	prodl,??_getStateOpenPosition
 12759  0071E2  CFF4 F033          	movff	prodh,??_getStateOpenPosition+1
 12760  0071E6  0E00               	movlw	0
 12761  0071E8  BE33               	btfsc	(??_getStateOpenPosition+1)^0,7,c
 12762  0071EA  0EFF               	movlw	255
 12763  0071EC  6E34               	movwf	(??_getStateOpenPosition+2)^0,c
 12764  0071EE  6E35               	movwf	(??_getStateOpenPosition+3)^0,c
 12765  0071F0  0ED8               	movlw	216
 12766  0071F2  2432               	addwf	??_getStateOpenPosition^0,w,c
 12767  0071F4  6E36               	movwf	(??_getStateOpenPosition+4)^0,c
 12768  0071F6  0EFF               	movlw	255
 12769  0071F8  2033               	addwfc	(??_getStateOpenPosition+1)^0,w,c
 12770  0071FA  6E37               	movwf	(??_getStateOpenPosition+5)^0,c
 12771  0071FC  0EFF               	movlw	255
 12772  0071FE  2034               	addwfc	(??_getStateOpenPosition+2)^0,w,c
 12773  007200  6E38               	movwf	(??_getStateOpenPosition+6)^0,c
 12774  007202  0EFF               	movlw	255
 12775  007204  2035               	addwfc	(??_getStateOpenPosition+3)^0,w,c
 12776  007206  6E39               	movwf	(??_getStateOpenPosition+7)^0,c
 12777  007208  0101               	movlb	1	; () banked
 12778  00720A  511E               	movf	(_var_sys+30)& (0+255),w,b	;volatile
 12779  00720C  5C36               	subwf	(??_getStateOpenPosition+4)^0,w,c
 12780  00720E  511F               	movf	(_var_sys+31)& (0+255),w,b	;volatile
 12781  007210  5837               	subwfb	(??_getStateOpenPosition+5)^0,w,c
 12782  007212  5120               	movf	(_var_sys+32)& (0+255),w,b	;volatile
 12783  007214  5838               	subwfb	(??_getStateOpenPosition+6)^0,w,c
 12784  007216  5039               	movf	(??_getStateOpenPosition+7)^0,w,c
 12785  007218  0A80               	xorlw	128
 12786  00721A  6E3A               	movwf	(??_getStateOpenPosition+8)^0,c
 12787  00721C  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 12788  00721E  0A80               	xorlw	128
 12789  007220  583A               	subwfb	(??_getStateOpenPosition+8)^0,w,c
 12790  007222  A0D8               	btfss	status,0,c
 12791  007224  D7B9               	goto	u24080
 12792                           
 12793                           ; BSR set to: 1
 12794                           ;outputs_MC50.c: 488:         {;outputs_MC50.c: 489:             state= 0;
 12795  007226  0E00               	movlw	0
 12796  007228                     L71:
 12797  007228  0100               	movlb	0	; () banked
 12798  00722A  6FD8               	movwf	getStateOpenPosition@state& (0+255),b
 12799  00722C  D032               	goto	l2254
 12800  00722E                     l20949:
 12801                           
 12802                           ; BSR set to: 0
 12803  00722E  0E02               	movlw	2
 12804  007230  19D9               	xorwf	getStateOpenPosition@stateMotor& (0+255),w,b
 12805  007232  B4D8               	btfsc	status,2,c
 12806  007234  D003               	goto	u24140
 12807                           
 12808                           ; BSR set to: 0
 12809  007236  05D9               	decf	getStateOpenPosition@stateMotor& (0+255),w,b
 12810  007238  A4D8               	btfss	status,2,c
 12811  00723A  D02B               	goto	l2254
 12812  00723C                     u24140:
 12813                           
 12814                           ; BSR set to: 0
 12815                           ;outputs_MC50.c: 493:     {;outputs_MC50.c: 494:          if((var_sys_NVM.learningTimeTo
      +                          Open)<(((unsigned long)var_sys_NVM.decelarationOpen*( 500/50))))
 12816  00723C  5198               	movf	_var_sys_NVM& (0+255),w,b	;volatile
 12817  00723E  6E1D               	movwf	___lmul@multiplier^0,c
 12818  007240  6A1E               	clrf	(___lmul@multiplier+1)^0,c
 12819  007242  6A1F               	clrf	(___lmul@multiplier+2)^0,c
 12820  007244  6A20               	clrf	(___lmul@multiplier+3)^0,c
 12821  007246  0E0A               	movlw	10
 12822  007248  6E21               	movwf	___lmul@multiplicand^0,c
 12823  00724A  0E00               	movlw	0
 12824  00724C  6E22               	movwf	(___lmul@multiplicand+1)^0,c
 12825  00724E  0E00               	movlw	0
 12826  007250  6E23               	movwf	(___lmul@multiplicand+2)^0,c
 12827  007252  0E00               	movlw	0
 12828  007254  6E24               	movwf	(___lmul@multiplicand+3)^0,c
 12829  007256  EC08  F048         	call	___lmul	;wreg free
 12830  00725A  501D               	movf	?___lmul^0,w,c
 12831  00725C  0100               	movlb	0	; () banked
 12832  00725E  5DCC               	subwf	(_var_sys_NVM+52)& (0+255),w,b	;volatile
 12833  007260  501E               	movf	(?___lmul+1)^0,w,c
 12834  007262  59CD               	subwfb	(_var_sys_NVM+53)& (0+255),w,b	;volatile
 12835  007264  501F               	movf	(?___lmul+2)^0,w,c
 12836  007266  59CE               	subwfb	(_var_sys_NVM+54)& (0+255),w,b	;volatile
 12837  007268  5020               	movf	(?___lmul+3)^0,w,c
 12838  00726A  59CF               	subwfb	(_var_sys_NVM+55)& (0+255),w,b	;volatile
 12839  00726C  A0D8               	btfss	status,0,c
 12840  00726E  D794               	goto	u24080
 12841                           
 12842                           ; BSR set to: 0
 12843  007270  51D9               	movf	getStateOpenPosition@stateMotor& (0+255),w,b
 12844  007272  ECD0  F03B         	call	_getTimeDecelaration
 12845  007276  0101               	movlb	1	; () banked
 12846  007278  511E               	movf	(_var_sys+30)& (0+255),w,b	;volatile
 12847  00727A  5C29               	subwf	?_getTimeDecelaration^0,w,c
 12848  00727C  511F               	movf	(_var_sys+31)& (0+255),w,b	;volatile
 12849  00727E  582A               	subwfb	(?_getTimeDecelaration+1)^0,w,c
 12850  007280  5120               	movf	(_var_sys+32)& (0+255),w,b	;volatile
 12851  007282  582B               	subwfb	(?_getTimeDecelaration+2)^0,w,c
 12852  007284  502C               	movf	(?_getTimeDecelaration+3)^0,w,c
 12853  007286  0A80               	xorlw	128
 12854  007288  6E32               	movwf	??_getStateOpenPosition^0,c
 12855  00728A  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 12856  00728C  0A80               	xorlw	128
 12857  00728E  5832               	subwfb	??_getStateOpenPosition^0,w,c
 12858  007290  D7C8               	goto	L72
 12859  007292                     l2254:
 12860                           
 12861                           ; BSR set to: 0
 12862                           ;outputs_MC50.c: 507:     return state;
 12863  007292  51D8               	movf	getStateOpenPosition@state& (0+255),w,b
 12864                           
 12865                           ; BSR set to: 0
 12866  007294  0012               	return		;funcret
 12867  007296                     __end_of_getStateOpenPosition:
 12868                           	callstack 0
 12869                           
 12870 ;; *************** function _InitSoftStop *****************
 12871 ;; Defined at:
 12872 ;;		line 849 in file "sm_ControlGate_MC50.c"
 12873 ;; Parameters:    Size  Location     Type
 12874 ;;		None
 12875 ;; Auto vars:     Size  Location     Type
 12876 ;;		None
 12877 ;; Return value:  Size  Location     Type
 12878 ;;                  1    wreg      void 
 12879 ;; Registers used:
 12880 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12881 ;; Tracked objects:
 12882 ;;		On entry : 3F/1
 12883 ;;		On exit  : 3E/0
 12884 ;;		Unchanged: 0/0
 12885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12886 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12887 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12888 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12889 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12890 ;;Total ram usage:        1 bytes
 12891 ;; Hardware stack levels used: 1
 12892 ;; Hardware stack levels required when called: 5
 12893 ;; This function calls:
 12894 ;;		_GetMotorPower
 12895 ;; This function is called by:
 12896 ;;		_controlVelocity
 12897 ;; This function uses a non-reentrant model
 12898 ;;
 12899                           
 12900                           	psect	text28
 12901  00929E                     __ptext28:
 12902                           	callstack 0
 12903  00929E                     _InitSoftStop:
 12904                           	callstack 22
 12905                           
 12906                           ; BSR set to: 1
 12907                           ;sm_ControlGate_MC50.c: 850:     if (((var_sys.AutoInversionActiveStop == YES)|| (var_sy
      +                          s.AutoInversionActive == YES))&&(var_sys_NVM.softstop >0)) {
 12908                           
 12909                           ; BSR set to: 0
 12910                           ;incstack = 0
 12911  00929E  0512               	decf	(_var_sys+18)& (0+255),w,b	;volatile
 12912  0092A0  B4D8               	btfsc	status,2,c
 12913  0092A2  D003               	goto	u24180
 12914                           
 12915                           ; BSR set to: 1
 12916  0092A4  0527               	decf	(_var_sys+39)& (0+255),w,b	;volatile
 12917  0092A6  A4D8               	btfss	status,2,c
 12918  0092A8  0012               	return	
 12919  0092AA                     u24180:
 12920                           
 12921                           ; BSR set to: 1
 12922  0092AA  0100               	movlb	0	; () banked
 12923  0092AC  51AB               	movf	(_var_sys_NVM+19)& (0+255),w,b	;volatile
 12924  0092AE  B4D8               	btfsc	status,2,c
 12925  0092B0  0012               	return	
 12926                           
 12927                           ; BSR set to: 0
 12928                           ;sm_ControlGate_MC50.c: 853:         var_sys.velocityFactor = 0;
 12929  0092B2  0E00               	movlw	0
 12930  0092B4  0101               	movlb	1	; () banked
 12931  0092B6  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 12932  0092B8  0E00               	movlw	0
 12933  0092BA  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 12934                           
 12935                           ;sm_ControlGate_MC50.c: 854:         var_sys.velocityFactorstop = 0;
 12936  0092BC  0E00               	movlw	0
 12937  0092BE  6F11               	movwf	(_var_sys+17)& (0+255),b	;volatile
 12938  0092C0  0E00               	movlw	0
 12939  0092C2  6F10               	movwf	(_var_sys+16)& (0+255),b	;volatile
 12940                           
 12941                           ; BSR set to: 1
 12942                           ;sm_ControlGate_MC50.c: 855:         var_sys.velocityFactorstop = GetMotorPower();
 12943  0092C4  EC18  F03D         	call	_GetMotorPower	;wreg free
 12944  0092C8  6E14               	movwf	??_InitSoftStop^0,c
 12945  0092CA  5014               	movf	??_InitSoftStop^0,w,c
 12946  0092CC  6F10               	movwf	(_var_sys+16)& (0+255),b	;volatile
 12947  0092CE  6B11               	clrf	(_var_sys+17)& (0+255),b	;volatile
 12948                           
 12949                           ; BSR set to: 1
 12950                           ;sm_ControlGate_MC50.c: 859:         ts_system.timeSoftStop = var_sys.velocityFactorstop
      +                           + 1;
 12951  0092D0  0E01               	movlw	1
 12952  0092D2  2510               	addwf	(_var_sys+16)& (0+255),w,b	;volatile
 12953  0092D4  6FB7               	movwf	(_ts_system+24)& (0+255),b	;volatile
 12954  0092D6  0E00               	movlw	0
 12955  0092D8  2111               	addwfc	(_var_sys+17)& (0+255),w,b	;volatile
 12956  0092DA  6FB8               	movwf	(_ts_system+25)& (0+255),b	;volatile
 12957                           
 12958                           ; BSR set to: 1
 12959                           ;sm_ControlGate_MC50.c: 861:         var_sys.SoftStopDecrementControl = 10 - var_sys_NVM
      +                          .softstop;
 12960  0092DC  0100               	movlb	0	; () banked
 12961  0092DE  51AB               	movf	(_var_sys_NVM+19)& (0+255),w,b	;volatile
 12962  0092E0  080A               	sublw	10
 12963  0092E2  0101               	movlb	1	; () banked
 12964  0092E4  6F13               	movwf	(_var_sys+19)& (0+255),b	;volatile
 12965  0092E6  0012               	return		;funcret
 12966  0092E8                     __end_of_InitSoftStop:
 12967                           	callstack 0
 12968                           
 12969 ;; *************** function _ControlDecelarationFactor *****************
 12970 ;; Defined at:
 12971 ;;		line 463 in file "outputs_MC50.c"
 12972 ;; Parameters:    Size  Location     Type
 12973 ;;		None
 12974 ;; Auto vars:     Size  Location     Type
 12975 ;;		None
 12976 ;; Return value:  Size  Location     Type
 12977 ;;                  1    wreg      void 
 12978 ;; Registers used:
 12979 ;;		wreg, status,2, status,0, prodl, prodh
 12980 ;; Tracked objects:
 12981 ;;		On entry : 3E/1
 12982 ;;		On exit  : 3F/1
 12983 ;;		Unchanged: 0/0
 12984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12985 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12986 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12988 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12989 ;;Total ram usage:        0 bytes
 12990 ;; Hardware stack levels used: 1
 12991 ;; Hardware stack levels required when called: 4
 12992 ;; This function calls:
 12993 ;;		Nothing
 12994 ;; This function is called by:
 12995 ;;		_controlVelocity
 12996 ;; This function uses a non-reentrant model
 12997 ;;
 12998                           
 12999                           	psect	text29
 13000  009BFE                     __ptext29:
 13001                           	callstack 0
 13002  009BFE                     _ControlDecelarationFactor:
 13003                           	callstack 23
 13004                           
 13005                           ;outputs_MC50.c: 465:     powerControl_st.decelarationCyclesOn=1;
 13006                           
 13007                           ;incstack = 0
 13008  009BFE  0E01               	movlw	1
 13009  009C00  0101               	movlb	1	; () banked
 13010  009C02  6F7C               	movwf	(_powerControl_st+1)& (0+255),b
 13011                           
 13012                           ;outputs_MC50.c: 466:     powerControl_st.decelarationCyclesOff=2;
 13013  009C04  0E02               	movlw	2
 13014  009C06  6F7D               	movwf	(_powerControl_st+2)& (0+255),b
 13015                           
 13016                           ; BSR set to: 1
 13017                           ;outputs_MC50.c: 467:     powerControl_st.decelarationPower=var_sys_NVM.velocityDecelara
      +                          tion*var_sys.Torquerelanty;
 13018  009C08  0100               	movlb	0	; () banked
 13019  009C0A  51B0               	movf	(_var_sys_NVM+24)& (0+255),w,b	;volatile
 13020  009C0C  0101               	movlb	1	; () banked
 13021  009C0E  0315               	mulwf	(_var_sys+21)& (0+255),b	;volatile
 13022  009C10  CFF3 F17E          	movff	prodl,_powerControl_st+3
 13023                           
 13024                           ; BSR set to: 1
 13025  009C14  0012               	return		;funcret
 13026  009C16                     __end_of_ControlDecelarationFactor:
 13027                           	callstack 0
 13028                           
 13029 ;; *************** function _actionZone_Opened *****************
 13030 ;; Defined at:
 13031 ;;		line 514 in file "sm_ControlGate_MC50.c"
 13032 ;; Parameters:    Size  Location     Type
 13033 ;;		None
 13034 ;; Auto vars:     Size  Location     Type
 13035 ;;  typeOpenOrde    1   32[COMRAM] enum E10372
 13036 ;;  securityClos    1   31[COMRAM] enum E10397
 13037 ;; Return value:  Size  Location     Type
 13038 ;;                  1    wreg      void 
 13039 ;; Registers used:
 13040 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13041 ;; Tracked objects:
 13042 ;;		On entry : 3F/0
 13043 ;;		On exit  : 3E/0
 13044 ;;		Unchanged: 0/0
 13045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13046 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13047 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13048 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13049 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13050 ;;Total ram usage:        2 bytes
 13051 ;; Hardware stack levels used: 1
 13052 ;; Hardware stack levels required when called: 7
 13053 ;; This function calls:
 13054 ;;		_CloseOrder
 13055 ;;		_GetOpenOrder
 13056 ;;		_GetSecurityStateInClosing
 13057 ;;		_InitFullAutoTime
 13058 ;;		_InitWalkAutoTime
 13059 ;;		_OpenFullOrder
 13060 ;;		_OpenWalkOrder
 13061 ;;		_VerifyFollowMe
 13062 ;; This function is called by:
 13063 ;;		_sm_execute_ControlGate
 13064 ;; This function uses a non-reentrant model
 13065 ;;
 13066                           
 13067                           	psect	text30
 13068  00597C                     __ptext30:
 13069                           	callstack 0
 13070  00597C                     _actionZone_Opened:
 13071                           	callstack 22
 13072                           
 13073                           ; BSR set to: 0
 13074                           ;sm_ControlGate_MC50.c: 515:     StateEnum securityClosing = GetSecurityStateInClosing()
      +                          ;
 13075                           
 13076                           ; BSR set to: 1
 13077                           ;incstack = 0
 13078  00597C  ECE5  F03E         	call	_GetSecurityStateInClosing	;wreg free
 13079  005980  6E20               	movwf	actionZone_Opened@securityClosing^0,c
 13080                           
 13081                           ;sm_ControlGate_MC50.c: 517:     if ((securityClosing != NO) && (Abertura_pedonal == 0))
      +                           {
 13082  005982  5020               	movf	actionZone_Opened@securityClosing^0,w,c
 13083  005984  B4D8               	btfsc	status,2,c
 13084  005986  D007               	goto	l23227
 13085  005988  0101               	movlb	1	; () banked
 13086  00598A  5192               	movf	_Abertura_pedonal& (0+255),w,b
 13087  00598C  A4D8               	btfss	status,2,c
 13088  00598E  D003               	goto	l23227
 13089                           
 13090                           ; BSR set to: 1
 13091                           ;sm_ControlGate_MC50.c: 518:         InitFullAutoTime();
 13092  005990  ECD8  F04D         	call	_InitFullAutoTime	;wreg free
 13093                           
 13094                           ;sm_ControlGate_MC50.c: 519:     }
 13095  005994  D008               	goto	l2727
 13096  005996                     l23227:
 13097  005996  5020               	movf	actionZone_Opened@securityClosing^0,w,c
 13098  005998  B4D8               	btfsc	status,2,c
 13099  00599A  D005               	goto	l2727
 13100  00599C  0101               	movlb	1	; () banked
 13101  00599E  0592               	decf	_Abertura_pedonal& (0+255),w,b
 13102  0059A0  B4D8               	btfsc	status,2,c
 13103                           
 13104                           ; BSR set to: 1
 13105                           ;sm_ControlGate_MC50.c: 521:          InitWalkAutoTime();
 13106  0059A2  EC5C  F04E         	call	_InitWalkAutoTime	;wreg free
 13107  0059A6                     l2727:
 13108                           
 13109                           ;sm_ControlGate_MC50.c: 524:     TypeCMD typeOpenOrder = GetOpenOrder();
 13110  0059A6  EC9E  F02E         	call	_GetOpenOrder	;wreg free
 13111  0059AA  6E21               	movwf	actionZone_Opened@typeOpenOrder^0,c
 13112                           
 13113                           ;sm_ControlGate_MC50.c: 526:     VerifyFollowMe(securityClosing);
 13114  0059AC  5020               	movf	actionZone_Opened@securityClosing^0,w,c
 13115  0059AE  EC30  F04D         	call	_VerifyFollowMe
 13116                           
 13117                           ;sm_ControlGate_MC50.c: 530:     if ((PORTBbits.RB1==0) && (var_sys_NVM.autoTimeFullClos
      +                          e != 0)&&(var_sys.AutoCloseActive != 0) && (button_struct.current != 0x35)&& (var_sys_NV
      +                          M.operationMode == ModoCondominio)){
 13118  0059B2  B28E               	btfsc	142,1,c	;volatile
 13119  0059B4  D013               	goto	l2729
 13120  0059B6  0100               	movlb	0	; () banked
 13121  0059B8  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 13122  0059BA  B4D8               	btfsc	status,2,c
 13123  0059BC  D00F               	goto	l2729
 13124                           
 13125                           ; BSR set to: 0
 13126  0059BE  0101               	movlb	1	; () banked
 13127  0059C0  5123               	movf	(_var_sys+35)& (0+255),w,b	;volatile
 13128  0059C2  B4D8               	btfsc	status,2,c
 13129  0059C4  D00B               	goto	l2729
 13130                           
 13131                           ; BSR set to: 1
 13132  0059C6  0E35               	movlw	53
 13133  0059C8  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 13134  0059CA  B4D8               	btfsc	status,2,c
 13135  0059CC  D007               	goto	l2729
 13136                           
 13137                           ; BSR set to: 1
 13138  0059CE  0E02               	movlw	2
 13139  0059D0  0100               	movlb	0	; () banked
 13140  0059D2  19A4               	xorwf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 13141  0059D4  A4D8               	btfss	status,2,c
 13142  0059D6  D002               	goto	l2729
 13143                           
 13144                           ; BSR set to: 0
 13145                           ;sm_ControlGate_MC50.c: 531:       typeOpenOrder = NoCMD;
 13146  0059D8  0E00               	movlw	0
 13147  0059DA  6E21               	movwf	actionZone_Opened@typeOpenOrder^0,c
 13148  0059DC                     l2729:
 13149                           
 13150                           ;sm_ControlGate_MC50.c: 535:      if (typeOpenOrder != NoCMD)
 13151  0059DC  5021               	movf	actionZone_Opened@typeOpenOrder^0,w,c
 13152  0059DE  B4D8               	btfsc	status,2,c
 13153  0059E0  D05D               	goto	l2730
 13154                           
 13155                           ;sm_ControlGate_MC50.c: 536:      {;sm_ControlGate_MC50.c: 539:         ts_system.timeSi
      +                          nalizationDigit = (1000/50) * 3;
 13156  0059E2  0E00               	movlw	0
 13157  0059E4  0101               	movlb	1	; () banked
 13158  0059E6  6FAC               	movwf	(_ts_system+13)& (0+255),b	;volatile
 13159  0059E8  0E3C               	movlw	60
 13160  0059EA  6FAB               	movwf	(_ts_system+12)& (0+255),b	;volatile
 13161                           
 13162                           ; BSR set to: 1
 13163                           ;sm_ControlGate_MC50.c: 541:        if ( var_sys_NVM.operationMode == ModoCondominio && 
      +                          var_sys_NVM.autoTimeFullClose == 0 && (typeOpenOrder == TypeFull|| typeOpenOrder == Type
      +                          FullClose ))
 13164  0059EC  0E02               	movlw	2
 13165  0059EE  0100               	movlb	0	; () banked
 13166  0059F0  19A4               	xorwf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 13167  0059F2  A4D8               	btfss	status,2,c
 13168  0059F4  D00D               	goto	l23259
 13169                           
 13170                           ; BSR set to: 0
 13171  0059F6  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 13172  0059F8  A4D8               	btfss	status,2,c
 13173  0059FA  D00A               	goto	l23259
 13174                           
 13175                           ; BSR set to: 0
 13176  0059FC  0421               	decf	actionZone_Opened@typeOpenOrder^0,w,c
 13177  0059FE  B4D8               	btfsc	status,2,c
 13178  005A00  D004               	goto	u27360
 13179                           
 13180                           ; BSR set to: 0
 13181  005A02  0E04               	movlw	4
 13182  005A04  1821               	xorwf	actionZone_Opened@typeOpenOrder^0,w,c
 13183  005A06  A4D8               	btfss	status,2,c
 13184  005A08  D003               	goto	l23259
 13185  005A0A                     u27360:
 13186                           
 13187                           ;sm_ControlGate_MC50.c: 542:         {;sm_ControlGate_MC50.c: 544:             CloseOrde
      +                          r();
 13188  005A0A  ECD1  F04C         	call	_CloseOrder	;wreg free
 13189                           
 13190                           ;sm_ControlGate_MC50.c: 546:         }
 13191  005A0E  0012               	return	
 13192  005A10                     l23259:
 13193                           
 13194                           ; BSR set to: 0
 13195  005A10  51A8               	movf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 13196  005A12  B4D8               	btfsc	status,2,c
 13197  005A14  D014               	goto	l23273
 13198                           
 13199                           ; BSR set to: 0
 13200                           ;sm_ControlGate_MC50.c: 553:             if (typeOpenOrder == TypeFullOpen && var_sys.Fi
      +                          mCurso_OpenIsEnabled == NO && var_sys.Statedoorcontrol != st_Opened) {
 13201  005A16  0E03               	movlw	3
 13202  005A18  1821               	xorwf	actionZone_Opened@typeOpenOrder^0,w,c
 13203  005A1A  A4D8               	btfss	status,2,c
 13204  005A1C  D00B               	goto	l23269
 13205                           
 13206                           ; BSR set to: 0
 13207  005A1E  0101               	movlb	1	; () banked
 13208  005A20  5104               	movf	(_var_sys+4)& (0+255),w,b	;volatile
 13209  005A22  A4D8               	btfss	status,2,c
 13210  005A24  D007               	goto	l23269
 13211                           
 13212                           ; BSR set to: 1
 13213  005A26  0E04               	movlw	4
 13214  005A28  191C               	xorwf	(_var_sys+28)& (0+255),w,b	;volatile
 13215  005A2A  B4D8               	btfsc	status,2,c
 13216  005A2C  D003               	goto	l23269
 13217  005A2E                     u27400:
 13218                           
 13219                           ; BSR set to: 1
 13220                           ;sm_ControlGate_MC50.c: 555:                 OpenFullOrder();
 13221  005A2E  ECE4  F04C         	call	_OpenFullOrder	;wreg free
 13222                           
 13223                           ;sm_ControlGate_MC50.c: 556:             } else if (typeOpenOrder == TypeFullClose) {
 13224  005A32  0012               	return	
 13225  005A34                     l23269:
 13226  005A34  0E04               	movlw	4
 13227  005A36  1821               	xorwf	actionZone_Opened@typeOpenOrder^0,w,c
 13228  005A38  A4D8               	btfss	status,2,c
 13229  005A3A  0012               	return	
 13230  005A3C  D7E6               	goto	u27360
 13231  005A3E                     l23273:
 13232                           
 13233                           ; BSR set to: 0
 13234  005A3E  0E03               	movlw	3
 13235  005A40  0101               	movlb	1	; () banked
 13236  005A42  190B               	xorwf	(_var_sys+11)& (0+255),w,b	;volatile
 13237  005A44  A4D8               	btfss	status,2,c
 13238  005A46  D009               	goto	l23281
 13239                           
 13240                           ; BSR set to: 1
 13241  005A48  0421               	decf	actionZone_Opened@typeOpenOrder^0,w,c
 13242  005A4A  A4D8               	btfss	status,2,c
 13243  005A4C  D006               	goto	l23281
 13244  005A4E                     u27430:
 13245                           
 13246                           ; BSR set to: 1
 13247                           ;sm_ControlGate_MC50.c: 563:             OpenFullOrder();
 13248  005A4E  ECE4  F04C         	call	_OpenFullOrder	;wreg free
 13249  005A52                     l23279:
 13250                           
 13251                           ;sm_ControlGate_MC50.c: 565:             var_sys.AutoInversionActive = NO;
 13252  005A52  0E00               	movlw	0
 13253  005A54  0101               	movlb	1	; () banked
 13254  005A56  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 13255                           
 13256                           ;sm_ControlGate_MC50.c: 567:         } else if (var_sys.LastState == InClose && typeOpen
      +                          Order == TypeWalk) {
 13257  005A58  0012               	return	
 13258  005A5A                     l23281:
 13259                           
 13260                           ; BSR set to: 1
 13261  005A5A  0E03               	movlw	3
 13262  005A5C  190B               	xorwf	(_var_sys+11)& (0+255),w,b	;volatile
 13263  005A5E  A4D8               	btfss	status,2,c
 13264  005A60  D007               	goto	l23289
 13265                           
 13266                           ; BSR set to: 1
 13267  005A62  0E02               	movlw	2
 13268  005A64  1821               	xorwf	actionZone_Opened@typeOpenOrder^0,w,c
 13269  005A66  A4D8               	btfss	status,2,c
 13270  005A68  D003               	goto	l23289
 13271                           
 13272                           ; BSR set to: 1
 13273                           ;sm_ControlGate_MC50.c: 569:             OpenWalkOrder();
 13274  005A6A  EC62  F045         	call	_OpenWalkOrder	;wreg free
 13275  005A6E  D7F1               	goto	l23279
 13276  005A70                     l23289:
 13277                           
 13278                           ; BSR set to: 1
 13279  005A70  0E03               	movlw	3
 13280  005A72  1821               	xorwf	actionZone_Opened@typeOpenOrder^0,w,c
 13281  005A74  A4D8               	btfss	status,2,c
 13282  005A76  D005               	goto	l23299
 13283                           
 13284                           ; BSR set to: 1
 13285                           ;sm_ControlGate_MC50.c: 574:             if (var_sys.Statedoorcontrol == st_Opened){
 13286  005A78  0E04               	movlw	4
 13287  005A7A  191C               	xorwf	(_var_sys+28)& (0+255),w,b	;volatile
 13288  005A7C  B4D8               	btfsc	status,2,c
 13289  005A7E  0012               	return	
 13290  005A80  D7E6               	goto	u27430
 13291  005A82                     l23299:
 13292                           
 13293                           ; BSR set to: 1
 13294  005A82  0100               	movlb	0	; () banked
 13295  005A84  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 13296  005A86  B4D8               	btfsc	status,2,c
 13297  005A88  D007               	goto	l23305
 13298                           
 13299                           ; BSR set to: 0
 13300  005A8A  0E02               	movlw	2
 13301  005A8C  19A4               	xorwf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 13302  005A8E  A4D8               	btfss	status,2,c
 13303  005A90  D003               	goto	l23305
 13304                           
 13305                           ; BSR set to: 0
 13306                           ;sm_ControlGate_MC50.c: 582:         {;sm_ControlGate_MC50.c: 584:             InitFullA
      +                          utoTime();
 13307  005A92  ECD8  F04D         	call	_InitFullAutoTime	;wreg free
 13308                           
 13309                           ;sm_ControlGate_MC50.c: 586:         }
 13310  005A96  0012               	return	
 13311  005A98                     l23305:
 13312                           
 13313                           ; BSR set to: 0
 13314  005A98  5020               	movf	actionZone_Opened@securityClosing^0,w,c
 13315  005A9A  D7CE               	goto	L73
 13316  005A9C                     l2730:
 13317  005A9C  B28E               	btfsc	142,1,c	;volatile
 13318  005A9E  D00B               	goto	l23313
 13319  005AA0  0100               	movlb	0	; () banked
 13320  005AA2  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 13321  005AA4  B4D8               	btfsc	status,2,c
 13322  005AA6  D007               	goto	l23313
 13323                           
 13324                           ; BSR set to: 0
 13325                           ;sm_ControlGate_MC50.c: 597:         ts_system.timeWaitToClose = ((int) var_sys_NVM.auto
      +                          TimeFullClose * (1000/50));
 13326  005AA8  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 13327  005AAA  0D14               	mullw	20
 13328  005AAC  CFF3 F1B1          	movff	prodl,_ts_system+18	;volatile
 13329  005AB0  CFF4 F1B2          	movff	prodh,_ts_system+19	;volatile
 13330                           
 13331                           ;sm_ControlGate_MC50.c: 599:     }
 13332  005AB4  0012               	return	
 13333  005AB6                     l23313:
 13334  005AB6  0101               	movlb	1	; () banked
 13335  005AB8  053A               	decf	(_var_sys+58)& (0+255),w,b	;volatile
 13336  005ABA  A4D8               	btfss	status,2,c
 13337  005ABC  D00F               	goto	l23323
 13338                           
 13339                           ; BSR set to: 1
 13340  005ABE  5020               	movf	actionZone_Opened@securityClosing^0,w,c
 13341  005AC0  A4D8               	btfss	status,2,c
 13342  005AC2  D00C               	goto	l23323
 13343                           
 13344                           ; BSR set to: 1
 13345                           ;sm_ControlGate_MC50.c: 603:         var_sys.StateFollowIsOn = NO;
 13346  005AC4  0E00               	movlw	0
 13347  005AC6  6F3A               	movwf	(_var_sys+58)& (0+255),b	;volatile
 13348                           
 13349                           ; BSR set to: 1
 13350                           ;sm_ControlGate_MC50.c: 610:         var_sys.AutoCloseActive = var_sys_NVM.folow_me;
 13351  005AC8  C0AD  F123         	movff	_var_sys_NVM+21,_var_sys+35	;volatile
 13352                           
 13353                           ; BSR set to: 1
 13354                           ;sm_ControlGate_MC50.c: 611:         ts_system.timeWaitToClose = var_sys_NVM.folow_me * 
      +                          (1000/50);
 13355  005ACC  0100               	movlb	0	; () banked
 13356  005ACE  51AD               	movf	(_var_sys_NVM+21)& (0+255),w,b	;volatile
 13357  005AD0  0D14               	mullw	20
 13358  005AD2  CFF3 F1B1          	movff	prodl,_ts_system+18	;volatile
 13359  005AD6  CFF4 F1B2          	movff	prodh,_ts_system+19	;volatile
 13360                           
 13361                           ;sm_ControlGate_MC50.c: 613:     }else if (ts_system.timeWaitToClose <= 0 && var_sys_NVM
      +                          .operationMode == ModoPassoPasso && var_sys.passoAPassoAutoClose == YES && var_sys.AutoC
      +                          loseActive != 0) {
 13362  005ADA  0012               	return	
 13363  005ADC                     l23323:
 13364                           
 13365                           ; BSR set to: 1
 13366  005ADC  BFB2               	btfsc	(_ts_system+19)& (0+255),7,b	;volatile
 13367  005ADE  D005               	goto	u27550
 13368  005AE0  51B2               	movf	(_ts_system+19)& (0+255),w,b	;volatile
 13369  005AE2  E113               	bnz	l23335
 13370  005AE4  05B1               	decf	(_ts_system+18)& (0+255),w,b	;volatile
 13371  005AE6  B0D8               	btfsc	status,0,c
 13372  005AE8  D010               	goto	l23335
 13373  005AEA                     u27550:
 13374                           
 13375                           ; BSR set to: 1
 13376  005AEA  0100               	movlb	0	; () banked
 13377  005AEC  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 13378  005AEE  A4D8               	btfss	status,2,c
 13379  005AF0  D00C               	goto	l23335
 13380                           
 13381                           ; BSR set to: 0
 13382  005AF2  0101               	movlb	1	; () banked
 13383  005AF4  0550               	decf	(_var_sys+80)& (0+255),w,b	;volatile
 13384  005AF6  A4D8               	btfss	status,2,c
 13385  005AF8  D008               	goto	l23335
 13386                           
 13387                           ; BSR set to: 1
 13388  005AFA  5123               	movf	(_var_sys+35)& (0+255),w,b	;volatile
 13389  005AFC  B4D8               	btfsc	status,2,c
 13390  005AFE  D005               	goto	l23335
 13391                           
 13392                           ; BSR set to: 1
 13393                           ;sm_ControlGate_MC50.c: 615:         var_sys.AutoCloseActive = 0;
 13394  005B00  0E00               	movlw	0
 13395  005B02  6F23               	movwf	(_var_sys+35)& (0+255),b	;volatile
 13396                           
 13397                           ;sm_ControlGate_MC50.c: 617:         var_sys.passoAPassoAutoClose = NO;
 13398  005B04  0E00               	movlw	0
 13399  005B06  6F50               	movwf	(_var_sys+80)& (0+255),b	;volatile
 13400  005B08  D780               	goto	u27360
 13401  005B0A                     l23335:
 13402  005B0A  0101               	movlb	1	; () banked
 13403  005B0C  BFB2               	btfsc	(_ts_system+19)& (0+255),7,b	;volatile
 13404  005B0E  D005               	goto	u27590
 13405  005B10  51B2               	movf	(_ts_system+19)& (0+255),w,b	;volatile
 13406  005B12  E119               	bnz	l23353
 13407  005B14  05B1               	decf	(_ts_system+18)& (0+255),w,b	;volatile
 13408  005B16  B0D8               	btfsc	status,0,c
 13409  005B18  D016               	goto	l23353
 13410  005B1A                     u27590:
 13411                           
 13412                           ; BSR set to: 1
 13413  005B1A  0100               	movlb	0	; () banked
 13414  005B1C  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 13415  005B1E  B4D8               	btfsc	status,2,c
 13416  005B20  D012               	goto	l23353
 13417                           
 13418                           ; BSR set to: 0
 13419  005B22  0101               	movlb	1	; () banked
 13420  005B24  5123               	movf	(_var_sys+35)& (0+255),w,b	;volatile
 13421  005B26  B4D8               	btfsc	status,2,c
 13422  005B28  D00E               	goto	l23353
 13423                           
 13424                           ; BSR set to: 1
 13425                           ;sm_ControlGate_MC50.c: 621:         var_sys.AutoCloseActive = 0;
 13426  005B2A  0E00               	movlw	0
 13427  005B2C  6F23               	movwf	(_var_sys+35)& (0+255),b	;volatile
 13428                           
 13429                           ; BSR set to: 1
 13430                           ;sm_ControlGate_MC50.c: 627:         if ( var_sys.AutoInversionActive == YES )
 13431  005B2E  0527               	decf	(_var_sys+39)& (0+255),w,b	;volatile
 13432  005B30  A4D8               	btfss	status,2,c
 13433  005B32  D003               	goto	l23349
 13434                           
 13435                           ; BSR set to: 1
 13436                           ;sm_ControlGate_MC50.c: 628:         {;sm_ControlGate_MC50.c: 629:             var_sys.A
      +                          utoInversionActive = NO;
 13437  005B34  0E00               	movlw	0
 13438  005B36  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 13439  005B38  D77A               	goto	u27400
 13440  005B3A                     l23349:
 13441                           
 13442                           ; BSR set to: 1
 13443                           ;sm_ControlGate_MC50.c: 633:         {;sm_ControlGate_MC50.c: 634:             CloseOrde
      +                          r();
 13444  005B3A  ECD1  F04C         	call	_CloseOrder	;wreg free
 13445                           
 13446                           ;sm_ControlGate_MC50.c: 635:             var_sys.PositionIsLost = 0;
 13447  005B3E  0E00               	movlw	0
 13448  005B40  0101               	movlb	1	; () banked
 13449  005B42  6F48               	movwf	(_var_sys+72)& (0+255),b	;volatile
 13450  005B44  0012               	return	
 13451  005B46                     l23353:
 13452  005B46  0101               	movlb	1	; () banked
 13453  005B48  0522               	decf	(_var_sys+34)& (0+255),w,b	;volatile
 13454  005B4A  A4D8               	btfss	status,2,c
 13455  005B4C  0012               	return	
 13456                           
 13457                           ; BSR set to: 1
 13458  005B4E  5020               	movf	actionZone_Opened@securityClosing^0,w,c
 13459  005B50  A4D8               	btfss	status,2,c
 13460  005B52  0012               	return	
 13461                           
 13462                           ; BSR set to: 1
 13463                           ;sm_ControlGate_MC50.c: 638:     {;sm_ControlGate_MC50.c: 639:         if (ts_system.tim
      +                          eSinalizationDigit <= 1) {
 13464  005B54  BFAC               	btfsc	(_ts_system+13)& (0+255),7,b	;volatile
 13465  005B56  D006               	goto	u27650
 13466  005B58  51AC               	movf	(_ts_system+13)& (0+255),w,b	;volatile
 13467  005B5A  E103               	bnz	u27651
 13468  005B5C  0E02               	movlw	2
 13469  005B5E  5DAB               	subwf	(_ts_system+12)& (0+255),w,b	;volatile
 13470  005B60  B0D8               	btfsc	status,0,c
 13471  005B62                     u27651:
 13472  005B62  0012               	return	
 13473  005B64                     u27650:
 13474                           
 13475                           ; BSR set to: 1
 13476                           ;sm_ControlGate_MC50.c: 640:             var_sys.DigitSinalizedTemp = NO;
 13477  005B64  0E00               	movlw	0
 13478  005B66  6F22               	movwf	(_var_sys+34)& (0+255),b	;volatile
 13479  005B68  0012               	return		;funcret
 13480  005B6A                     __end_of_actionZone_Opened:
 13481                           	callstack 0
 13482                           
 13483 ;; *************** function _VerifyFollowMe *****************
 13484 ;; Defined at:
 13485 ;;		line 117 in file "sm_ControlGate_MC50.c"
 13486 ;; Parameters:    Size  Location     Type
 13487 ;;  securityClos    1    wreg     enum E10397
 13488 ;; Auto vars:     Size  Location     Type
 13489 ;;  securityClos    1   15[COMRAM] enum E10397
 13490 ;; Return value:  Size  Location     Type
 13491 ;;                  1    wreg      void 
 13492 ;; Registers used:
 13493 ;;		wreg, status,2, status,0
 13494 ;; Tracked objects:
 13495 ;;		On entry : 0/0
 13496 ;;		On exit  : 3E/0
 13497 ;;		Unchanged: 0/0
 13498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13500 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13502 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13503 ;;Total ram usage:        1 bytes
 13504 ;; Hardware stack levels used: 1
 13505 ;; Hardware stack levels required when called: 4
 13506 ;; This function calls:
 13507 ;;		Nothing
 13508 ;; This function is called by:
 13509 ;;		_actionZone_Opening
 13510 ;;		_actionZone_Opened
 13511 ;; This function uses a non-reentrant model
 13512 ;;
 13513                           
 13514                           	psect	text31
 13515  009A60                     __ptext31:
 13516                           	callstack 0
 13517  009A60                     _VerifyFollowMe:
 13518                           	callstack 24
 13519                           
 13520                           ;incstack = 0
 13521                           ;VerifyFollowMe@securityClose stored from wreg
 13522  009A60  6E10               	movwf	VerifyFollowMe@securityClose^0,c
 13523                           
 13524                           ;sm_ControlGate_MC50.c: 120:     if (var_sys_NVM.folow_me != 0 && var_sys_NVM.photoCellI
      +                          nOpen == 0)
 13525  009A62  0100               	movlb	0	; () banked
 13526  009A64  51AD               	movf	(_var_sys_NVM+21)& (0+255),w,b	;volatile
 13527  009A66  B4D8               	btfsc	status,2,c
 13528  009A68  0012               	return	
 13529                           
 13530                           ; BSR set to: 0
 13531  009A6A  51A0               	movf	(_var_sys_NVM+8)& (0+255),w,b	;volatile
 13532  009A6C  A4D8               	btfss	status,2,c
 13533  009A6E  0012               	return	
 13534                           
 13535                           ; BSR set to: 0
 13536                           ;sm_ControlGate_MC50.c: 121:     {;sm_ControlGate_MC50.c: 122:         if (securityClose
      +                           == YES && var_sys.StateFollowIsOn == NO) {
 13537  009A70  0410               	decf	VerifyFollowMe@securityClose^0,w,c
 13538  009A72  A4D8               	btfss	status,2,c
 13539  009A74  0012               	return	
 13540                           
 13541                           ; BSR set to: 0
 13542  009A76  0101               	movlb	1	; () banked
 13543  009A78  513A               	movf	(_var_sys+58)& (0+255),w,b	;volatile
 13544  009A7A  A4D8               	btfss	status,2,c
 13545  009A7C  0012               	return	
 13546                           
 13547                           ; BSR set to: 1
 13548                           ;sm_ControlGate_MC50.c: 123:             var_sys.StateFollowIsOn = YES;
 13549  009A7E  0E01               	movlw	1
 13550  009A80  6F3A               	movwf	(_var_sys+58)& (0+255),b	;volatile
 13551  009A82  0012               	return		;funcret
 13552  009A84                     __end_of_VerifyFollowMe:
 13553                           	callstack 0
 13554                           
 13555 ;; *************** function _CloseOrder *****************
 13556 ;; Defined at:
 13557 ;;		line 63 in file "sm_ControlGate_MC50.c"
 13558 ;; Parameters:    Size  Location     Type
 13559 ;;		None
 13560 ;; Auto vars:     Size  Location     Type
 13561 ;;		None
 13562 ;; Return value:  Size  Location     Type
 13563 ;;                  1    wreg      void 
 13564 ;; Registers used:
 13565 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13566 ;; Tracked objects:
 13567 ;;		On entry : 3E/1
 13568 ;;		On exit  : 3E/0
 13569 ;;		Unchanged: 0/0
 13570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13571 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13572 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13574 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13575 ;;Total ram usage:        0 bytes
 13576 ;; Hardware stack levels used: 1
 13577 ;; Hardware stack levels required when called: 6
 13578 ;; This function calls:
 13579 ;;		_InitSoftStart
 13580 ;;		_sm_send_event
 13581 ;; This function is called by:
 13582 ;;		_actionZone_Opening
 13583 ;;		_actionZone_Opened
 13584 ;; This function uses a non-reentrant model
 13585 ;;
 13586                           
 13587                           	psect	text32
 13588  0099A2                     __ptext32:
 13589                           	callstack 0
 13590  0099A2                     _CloseOrder:
 13591                           	callstack 22
 13592                           
 13593                           ;sm_ControlGate_MC50.c: 65:     var_sys.StateMotor = InClose;
 13594                           
 13595                           ;incstack = 0
 13596  0099A2  0E03               	movlw	3
 13597  0099A4  0101               	movlb	1	; () banked
 13598  0099A6  6F00               	movwf	_var_sys& (0+255),b	;volatile
 13599                           
 13600                           ; BSR set to: 1
 13601                           ;sm_ControlGate_MC50.c: 66:     sm_send_event(&controlGate_stateMachine, ev_CloseGate);
 13602  0099A8  0EE7               	movlw	low _controlGate_stateMachine
 13603  0099AA  6E12               	movwf	sm_send_event@psm^0,c
 13604  0099AC  0E01               	movlw	high _controlGate_stateMachine
 13605  0099AE  6E13               	movwf	(sm_send_event@psm+1)^0,c
 13606  0099B0  0E00               	movlw	0
 13607  0099B2  6E15               	movwf	(sm_send_event@event+1)^0,c
 13608  0099B4  0E0E               	movlw	14
 13609  0099B6  6E14               	movwf	sm_send_event@event^0,c
 13610  0099B8  ECCD  F046         	call	_sm_send_event	;wreg free
 13611                           
 13612                           ;sm_ControlGate_MC50.c: 67:     var_sys.LastState = InClose;
 13613  0099BC  0E03               	movlw	3
 13614  0099BE  0101               	movlb	1	; () banked
 13615  0099C0  6F0B               	movwf	(_var_sys+11)& (0+255),b	;volatile
 13616                           
 13617                           ; BSR set to: 1
 13618                           ;sm_ControlGate_MC50.c: 68:     InitSoftStart();
 13619  0099C2  ECFB  F046         	call	_InitSoftStart	;wreg free
 13620  0099C6  0012               	return		;funcret
 13621  0099C8                     __end_of_CloseOrder:
 13622                           	callstack 0
 13623                           
 13624 ;; *************** function _actionZone_Closing *****************
 13625 ;; Defined at:
 13626 ;;		line 649 in file "sm_ControlGate_MC50.c"
 13627 ;; Parameters:    Size  Location     Type
 13628 ;;		None
 13629 ;; Auto vars:     Size  Location     Type
 13630 ;;  typeOpenOrde    1   50[COMRAM] enum E10372
 13631 ;;  securityClos    1   49[COMRAM] enum E10397
 13632 ;; Return value:  Size  Location     Type
 13633 ;;                  1    wreg      void 
 13634 ;; Registers used:
 13635 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13636 ;; Tracked objects:
 13637 ;;		On entry : 3F/0
 13638 ;;		On exit  : 0/0
 13639 ;;		Unchanged: 0/0
 13640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13641 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13642 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13644 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13645 ;;Total ram usage:        2 bytes
 13646 ;; Hardware stack levels used: 1
 13647 ;; Hardware stack levels required when called: 7
 13648 ;; This function calls:
 13649 ;;		_GetOpenOrder
 13650 ;;		_GetSecurityStateInClosing
 13651 ;;		_InitFullAutoTime
 13652 ;;		_InitWalkAutoTime
 13653 ;;		_OpenFullOrder
 13654 ;;		_OpenWalkOrder
 13655 ;;		_SetSegmentValueIntermitent
 13656 ;;		_StopOrder
 13657 ;;		___lmul
 13658 ;;		_setPositionInvertionInClosing
 13659 ;;		_sm_send_event
 13660 ;; This function is called by:
 13661 ;;		_sm_execute_ControlGate
 13662 ;; This function uses a non-reentrant model
 13663 ;;
 13664                           
 13665                           	psect	text33
 13666  004B9C                     __ptext33:
 13667                           	callstack 0
 13668  004B9C                     _actionZone_Closing:
 13669                           	callstack 22
 13670                           
 13671                           ; BSR set to: 0
 13672                           ;sm_ControlGate_MC50.c: 651:     TypeCMD typeOpenOrder = GetOpenOrder();
 13673                           
 13674                           ;incstack = 0
 13675  004B9C  EC9E  F02E         	call	_GetOpenOrder	;wreg free
 13676  004BA0  6E33               	movwf	actionZone_Closing@typeOpenOrder^0,c
 13677                           
 13678                           ;sm_ControlGate_MC50.c: 653:     StateEnum securityClosing = GetSecurityStateInClosing()
      +                          ;
 13679  004BA2  ECE5  F03E         	call	_GetSecurityStateInClosing	;wreg free
 13680  004BA6  6E32               	movwf	actionZone_Closing@securityClosing^0,c
 13681                           
 13682                           ;sm_ControlGate_MC50.c: 654:     Abertura_pedonal = 0;
 13683  004BA8  0E00               	movlw	0
 13684  004BAA  0101               	movlb	1	; () banked
 13685  004BAC  6F92               	movwf	_Abertura_pedonal& (0+255),b
 13686                           
 13687                           ; BSR set to: 1
 13688                           ;sm_ControlGate_MC50.c: 656:     InitFullAutoTime();
 13689  004BAE  ECD8  F04D         	call	_InitFullAutoTime	;wreg free
 13690                           
 13691                           ; BSR set to: 0
 13692                           ;sm_ControlGate_MC50.c: 658:     var_sys.passoAPassoAutoClose = NO;
 13693  004BB2  0E00               	movlw	0
 13694  004BB4  0101               	movlb	1	; () banked
 13695  004BB6  6F50               	movwf	(_var_sys+80)& (0+255),b	;volatile
 13696                           
 13697                           ; BSR set to: 1
 13698                           ;sm_ControlGate_MC50.c: 660:     if (var_sys.NumberOffErrors > 3) {
 13699  004BB8  0E03               	movlw	3
 13700  004BBA  6543               	cpfsgt	(_var_sys+67)& (0+255),b	;volatile
 13701  004BBC  D00D               	goto	l23377
 13702                           
 13703                           ; BSR set to: 1
 13704                           ;sm_ControlGate_MC50.c: 662:         var_sys.StateMotor = Stopped;
 13705  004BBE  0E00               	movlw	0
 13706  004BC0  6F00               	movwf	_var_sys& (0+255),b	;volatile
 13707  004BC2                     l23375:
 13708                           
 13709                           ; BSR set to: 1
 13710                           ;sm_ControlGate_MC50.c: 663:         sm_send_event(&controlGate_stateMachine, ev_ErrorGa
      +                          te);
 13711  004BC2  0EE7               	movlw	low _controlGate_stateMachine
 13712  004BC4  6E12               	movwf	sm_send_event@psm^0,c
 13713  004BC6  0E01               	movlw	high _controlGate_stateMachine
 13714  004BC8  6E13               	movwf	(sm_send_event@psm+1)^0,c
 13715  004BCA  0E00               	movlw	0
 13716  004BCC  6E15               	movwf	(sm_send_event@event+1)^0,c
 13717  004BCE  0E10               	movlw	16
 13718  004BD0  6E14               	movwf	sm_send_event@event^0,c
 13719  004BD2  ECCD  F046         	call	_sm_send_event	;wreg free
 13720                           
 13721                           ;sm_ControlGate_MC50.c: 664:     } else if ((var_sys.FimCurso_CloseIsEnabled == YES)||(v
      +                          ar_sys.TimeMaxMotorIsON<=0) && (var_sys.LearningIsEnabled==NO) && (var_sys.PositionIsLos
      +                          t==NO)) {
 13722  004BD6  0012               	return	
 13723  004BD8                     l23377:
 13724                           
 13725                           ; BSR set to: 1
 13726  004BD8  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
 13727  004BDA  B4D8               	btfsc	status,2,c
 13728  004BDC  D00C               	goto	u27700
 13729                           
 13730                           ; BSR set to: 1
 13731  004BDE  5118               	movf	(_var_sys+24)& (0+255),w,b	;volatile
 13732  004BE0  1119               	iorwf	(_var_sys+25)& (0+255),w,b	;volatile
 13733  004BE2  111A               	iorwf	(_var_sys+26)& (0+255),w,b	;volatile
 13734  004BE4  111B               	iorwf	(_var_sys+27)& (0+255),w,b	;volatile
 13735  004BE6  A4D8               	btfss	status,2,c
 13736  004BE8  D05F               	goto	l23409
 13737                           
 13738                           ; BSR set to: 1
 13739  004BEA  5126               	movf	(_var_sys+38)& (0+255),w,b	;volatile
 13740  004BEC  A4D8               	btfss	status,2,c
 13741  004BEE  D05C               	goto	l23409
 13742                           
 13743                           ; BSR set to: 1
 13744  004BF0  5148               	movf	(_var_sys+72)& (0+255),w,b	;volatile
 13745  004BF2  A4D8               	btfss	status,2,c
 13746  004BF4  D059               	goto	l23409
 13747  004BF6                     u27700:
 13748                           
 13749                           ; BSR set to: 1
 13750                           ;sm_ControlGate_MC50.c: 666:         if (var_sys_NVM.flashLightMode == 2) {
 13751  004BF6  0E02               	movlw	2
 13752  004BF8  0100               	movlb	0	; () banked
 13753  004BFA  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 13754  004BFC  A4D8               	btfss	status,2,c
 13755  004BFE  D018               	goto	l23389
 13756                           
 13757                           ; BSR set to: 0
 13758                           ;sm_ControlGate_MC50.c: 667:             ts_system.TimeOnFlashLigth = (long) ((long) var
      +                          _sys_NVM.ligthTime * ((1000/50)*60));
 13759  004C00  51AC               	movf	(_var_sys_NVM+20)& (0+255),w,b	;volatile
 13760  004C02  6E1D               	movwf	___lmul@multiplier^0,c
 13761  004C04  6A1E               	clrf	(___lmul@multiplier+1)^0,c
 13762  004C06  6A1F               	clrf	(___lmul@multiplier+2)^0,c
 13763  004C08  6A20               	clrf	(___lmul@multiplier+3)^0,c
 13764  004C0A  0EB0               	movlw	176
 13765  004C0C  6E21               	movwf	___lmul@multiplicand^0,c
 13766  004C0E  0E04               	movlw	4
 13767  004C10  6E22               	movwf	(___lmul@multiplicand+1)^0,c
 13768  004C12  0E00               	movlw	0
 13769  004C14  6E23               	movwf	(___lmul@multiplicand+2)^0,c
 13770  004C16  0E00               	movlw	0
 13771  004C18  6E24               	movwf	(___lmul@multiplicand+3)^0,c
 13772  004C1A  EC08  F048         	call	___lmul	;wreg free
 13773  004C1E  C01D  F1BF         	movff	?___lmul,_ts_system+32	;volatile
 13774  004C22  C01E  F1C0         	movff	?___lmul+1,_ts_system+33	;volatile
 13775  004C26  C01F  F1C1         	movff	?___lmul+2,_ts_system+34	;volatile
 13776  004C2A  C020  F1C2         	movff	?___lmul+3,_ts_system+35	;volatile
 13777                           
 13778                           ;sm_ControlGate_MC50.c: 668:         }
 13779  004C2E  D009               	goto	l2773
 13780  004C30                     l23389:
 13781                           
 13782                           ; BSR set to: 0
 13783                           ;sm_ControlGate_MC50.c: 670:             ts_system.TimeOnFlashLigth = 0;
 13784  004C30  0E00               	movlw	0
 13785  004C32  0101               	movlb	1	; () banked
 13786  004C34  6FBF               	movwf	(_ts_system+32)& (0+255),b	;volatile
 13787  004C36  0E00               	movlw	0
 13788  004C38  6FC0               	movwf	(_ts_system+33)& (0+255),b	;volatile
 13789  004C3A  0E00               	movlw	0
 13790  004C3C  6FC1               	movwf	(_ts_system+34)& (0+255),b	;volatile
 13791  004C3E  0E00               	movlw	0
 13792  004C40  6FC2               	movwf	(_ts_system+35)& (0+255),b	;volatile
 13793  004C42                     l2773:
 13794                           
 13795                           ;sm_ControlGate_MC50.c: 672:         var_sys.AutoInversionActiveStop = NO;
 13796  004C42  0E00               	movlw	0
 13797  004C44  0101               	movlb	1	; () banked
 13798  004C46  6F12               	movwf	(_var_sys+18)& (0+255),b	;volatile
 13799                           
 13800                           ;sm_ControlGate_MC50.c: 674:         var_sys.Statedoorcontrol = st_Closed;
 13801  004C48  0E01               	movlw	1
 13802  004C4A  6F1C               	movwf	(_var_sys+28)& (0+255),b	;volatile
 13803                           
 13804                           ; BSR set to: 1
 13805                           ;sm_ControlGate_MC50.c: 675:         var_sys.actualCounterMoves++;
 13806  004C4C  0E01               	movlw	1
 13807  004C4E  273C               	addwf	(_var_sys+60)& (0+255),f,b	;volatile
 13808  004C50  0E00               	movlw	0
 13809  004C52  233D               	addwfc	(_var_sys+61)& (0+255),f,b	;volatile
 13810  004C54  233E               	addwfc	(_var_sys+62)& (0+255),f,b	;volatile
 13811  004C56  233F               	addwfc	(_var_sys+63)& (0+255),f,b	;volatile
 13812                           
 13813                           ; BSR set to: 1
 13814                           ;sm_ControlGate_MC50.c: 676:         var_sys.Timewalkisactived = 0;
 13815  004C58  0E00               	movlw	0
 13816  004C5A  6F4A               	movwf	(_var_sys+74)& (0+255),b	;volatile
 13817                           
 13818                           ; BSR set to: 1
 13819                           ;sm_ControlGate_MC50.c: 677:         var_sys.PositionActual = 0;
 13820  004C5C  0E00               	movlw	0
 13821  004C5E  6F1E               	movwf	(_var_sys+30)& (0+255),b	;volatile
 13822  004C60  0E00               	movlw	0
 13823  004C62  6F1F               	movwf	(_var_sys+31)& (0+255),b	;volatile
 13824  004C64  0E00               	movlw	0
 13825  004C66  6F20               	movwf	(_var_sys+32)& (0+255),b	;volatile
 13826  004C68  0E00               	movlw	0
 13827  004C6A  6F21               	movwf	(_var_sys+33)& (0+255),b	;volatile
 13828                           
 13829                           ; BSR set to: 1
 13830                           ;sm_ControlGate_MC50.c: 679:         var_sys.PositionIsLost = NO;
 13831  004C6C  0E00               	movlw	0
 13832  004C6E  6F48               	movwf	(_var_sys+72)& (0+255),b	;volatile
 13833                           
 13834                           ; BSR set to: 1
 13835                           ;sm_ControlGate_MC50.c: 680:         var_sys.NumberOffErrors = 0;
 13836  004C70  0E00               	movlw	0
 13837  004C72  6F43               	movwf	(_var_sys+67)& (0+255),b	;volatile
 13838                           
 13839                           ; BSR set to: 1
 13840                           ;sm_ControlGate_MC50.c: 681:         var_sys.StateMotor = Stopped;
 13841  004C74  0E00               	movlw	0
 13842  004C76  6F00               	movwf	_var_sys& (0+255),b	;volatile
 13843                           
 13844                           ; BSR set to: 1
 13845                           ;sm_ControlGate_MC50.c: 683:         ts_system.timeSinalizationDigit = (1000/50) * 2;
 13846  004C78  0E00               	movlw	0
 13847  004C7A  6FAC               	movwf	(_ts_system+13)& (0+255),b	;volatile
 13848  004C7C  0E28               	movlw	40
 13849  004C7E  6FAB               	movwf	(_ts_system+12)& (0+255),b	;volatile
 13850                           
 13851                           ; BSR set to: 1
 13852                           ;sm_ControlGate_MC50.c: 684:         SetSegmentValueIntermitent(dF, dC, ( 200/50));
 13853  004C80  0E0C               	movlw	12
 13854  004C82  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 13855  004C84  0E00               	movlw	0
 13856  004C86  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 13857  004C88  0E04               	movlw	4
 13858  004C8A  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 13859  004C8C  0E0F               	movlw	15
 13860  004C8E  EC8B  F04B         	call	_SetSegmentValueIntermitent
 13861                           
 13862                           ; BSR set to: 1
 13863                           ;sm_ControlGate_MC50.c: 687:          sm_send_event(&controlGate_stateMachine, ev_Closed
      +                          Gate);
 13864  004C92  0EE7               	movlw	low _controlGate_stateMachine
 13865  004C94  6E12               	movwf	sm_send_event@psm^0,c
 13866  004C96  0E01               	movlw	high _controlGate_stateMachine
 13867  004C98  6E13               	movwf	(sm_send_event@psm+1)^0,c
 13868  004C9A  0E00               	movlw	0
 13869  004C9C  6E15               	movwf	(sm_send_event@event+1)^0,c
 13870  004C9E  0E0F               	movlw	15
 13871  004CA0  6E14               	movwf	sm_send_event@event^0,c
 13872  004CA2  ECCD  F046         	call	_sm_send_event	;wreg free
 13873                           
 13874                           ;sm_ControlGate_MC50.c: 691:     }
 13875  004CA6  0012               	return	
 13876  004CA8                     l23409:
 13877                           
 13878                           ; BSR set to: 1
 13879  004CA8  0432               	decf	actionZone_Closing@securityClosing^0,w,c
 13880  004CAA  B4D8               	btfsc	status,2,c
 13881  004CAC  D011               	goto	u27750
 13882                           
 13883                           ; BSR set to: 1
 13884  004CAE  BFCA               	btfsc	(_ts_system+43)& (0+255),7,b	;volatile
 13885  004CB0  D021               	goto	l23429
 13886  004CB2  51CA               	movf	(_ts_system+43)& (0+255),w,b	;volatile
 13887  004CB4  E103               	bnz	u27730
 13888  004CB6  05C9               	decf	(_ts_system+42)& (0+255),w,b	;volatile
 13889  004CB8  A0D8               	btfss	status,0,c
 13890  004CBA  D01C               	goto	l23429
 13891  004CBC                     u27730:
 13892                           
 13893                           ; BSR set to: 1
 13894  004CBC  0541               	decf	(_var_sys+65)& (0+255),w,b	;volatile
 13895  004CBE  A4D8               	btfss	status,2,c
 13896  004CC0  D019               	goto	l23429
 13897                           
 13898                           ; BSR set to: 1
 13899  004CC2  BFD0               	btfsc	(_ts_system+49)& (0+255),7,b	;volatile
 13900  004CC4  D005               	goto	u27750
 13901  004CC6  51D0               	movf	(_ts_system+49)& (0+255),w,b	;volatile
 13902  004CC8  E115               	bnz	l23429
 13903  004CCA  05CF               	decf	(_ts_system+48)& (0+255),w,b	;volatile
 13904  004CCC  B0D8               	btfsc	status,0,c
 13905  004CCE  D012               	goto	l23429
 13906  004CD0                     u27750:
 13907                           
 13908                           ; BSR set to: 1
 13909  004CD0  5127               	movf	(_var_sys+39)& (0+255),w,b	;volatile
 13910  004CD2  A4D8               	btfss	status,2,c
 13911  004CD4  D00F               	goto	l23429
 13912                           
 13913                           ; BSR set to: 1
 13914                           ;sm_ControlGate_MC50.c: 694:          if (securityClosing != YES){
 13915  004CD6  0432               	decf	actionZone_Closing@securityClosing^0,w,c
 13916  004CD8  A4D8               	btfss	status,2,c
 13917                           
 13918                           ; BSR set to: 1
 13919                           ;sm_ControlGate_MC50.c: 695:             var_sys.NumberOffErrors++;
 13920  004CDA  2B43               	incf	(_var_sys+67)& (0+255),f,b	;volatile
 13921                           
 13922                           ; BSR set to: 1
 13923                           ;sm_ControlGate_MC50.c: 697:         var_sys.NumberOffErrors++;
 13924                           
 13925                           ;sm_ControlGate_MC50.c: 696:         }
 13926  004CDC  2B43               	incf	(_var_sys+67)& (0+255),f,b	;volatile
 13927                           
 13928                           ; BSR set to: 1
 13929                           ;sm_ControlGate_MC50.c: 698:         var_sys.AutoInversionActive = YES;
 13930  004CDE  0E01               	movlw	1
 13931  004CE0  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 13932                           
 13933                           ; BSR set to: 1
 13934                           ;sm_ControlGate_MC50.c: 699:         ts_system.TimeWaitToNextState = ( 500/50);
 13935  004CE2  0E00               	movlw	0
 13936  004CE4  6FC4               	movwf	(_ts_system+37)& (0+255),b	;volatile
 13937  004CE6  0E0A               	movlw	10
 13938  004CE8  6FC3               	movwf	(_ts_system+36)& (0+255),b	;volatile
 13939                           
 13940                           ; BSR set to: 1
 13941                           ;sm_ControlGate_MC50.c: 700:         ts_system.TimeStopElectricBrake = ((1000/50)+( 500/
      +                          50));
 13942  004CEA  0E00               	movlw	0
 13943  004CEC  6FE0               	movwf	(_ts_system+65)& (0+255),b	;volatile
 13944  004CEE  0E1E               	movlw	30
 13945  004CF0  6FDF               	movwf	(_ts_system+64)& (0+255),b	;volatile
 13946                           
 13947                           ;sm_ControlGate_MC50.c: 702:     }
 13948  004CF2  0012               	return	
 13949  004CF4                     l23429:
 13950                           
 13951                           ; BSR set to: 1
 13952  004CF4  BFCA               	btfsc	(_ts_system+43)& (0+255),7,b	;volatile
 13953  004CF6  D02E               	goto	l23459
 13954  004CF8  51CA               	movf	(_ts_system+43)& (0+255),w,b	;volatile
 13955  004CFA  E103               	bnz	u27780
 13956  004CFC  05C9               	decf	(_ts_system+42)& (0+255),w,b	;volatile
 13957  004CFE  A0D8               	btfss	status,0,c
 13958  004D00  D029               	goto	l23459
 13959  004D02                     u27780:
 13960                           
 13961                           ; BSR set to: 1
 13962  004D02  0527               	decf	(_var_sys+39)& (0+255),w,b	;volatile
 13963  004D04  A4D8               	btfss	status,2,c
 13964  004D06  D026               	goto	l23459
 13965                           
 13966                           ; BSR set to: 1
 13967                           ;sm_ControlGate_MC50.c: 704:         if (var_sys.InvertionCurrentOpening == YES) {
 13968  004D08  0545               	decf	(_var_sys+69)& (0+255),w,b	;volatile
 13969  004D0A  A4D8               	btfss	status,2,c
 13970  004D0C  D005               	goto	l23441
 13971  004D0E                     u27800:
 13972                           
 13973                           ; BSR set to: 1
 13974                           ;sm_ControlGate_MC50.c: 706:             var_sys.StateMotor = Stopped;
 13975  004D0E  0E00               	movlw	0
 13976  004D10  6F00               	movwf	_var_sys& (0+255),b	;volatile
 13977                           
 13978                           ; BSR set to: 1
 13979                           ;sm_ControlGate_MC50.c: 707:             setPositionInvertionInClosing();
 13980  004D12  EC9D  F037         	call	_setPositionInvertionInClosing	;wreg free
 13981  004D16  D755               	goto	l23375
 13982  004D18                     l23441:
 13983                           
 13984                           ; BSR set to: 1
 13985  004D18  BFC4               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 13986  004D1A  D005               	goto	u27810
 13987  004D1C  51C4               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 13988  004D1E  E117               	bnz	l23457
 13989  004D20  05C3               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 13990  004D22  B0D8               	btfsc	status,0,c
 13991  004D24  D014               	goto	l23457
 13992  004D26                     u27810:
 13993                           
 13994                           ; BSR set to: 1
 13995                           ;sm_ControlGate_MC50.c: 710:          if(var_sys.Timewalkisactived == YES){
 13996  004D26  054A               	decf	(_var_sys+74)& (0+255),w,b	;volatile
 13997  004D28  A4D8               	btfss	status,2,c
 13998  004D2A  D003               	goto	l23447
 13999                           
 14000                           ; BSR set to: 1
 14001                           ;sm_ControlGate_MC50.c: 711:                 OpenWalkOrder();
 14002  004D2C  EC62  F045         	call	_OpenWalkOrder	;wreg free
 14003                           
 14004                           ;sm_ControlGate_MC50.c: 713:             }
 14005  004D30  D004               	goto	l23451
 14006  004D32                     l23447:
 14007                           
 14008                           ; BSR set to: 1
 14009                           ;sm_ControlGate_MC50.c: 716:             OpenFullOrder();
 14010  004D32  ECE4  F04C         	call	_OpenFullOrder	;wreg free
 14011                           
 14012                           ;sm_ControlGate_MC50.c: 718:             setPositionInvertionInClosing();
 14013  004D36  EC9D  F037         	call	_setPositionInvertionInClosing	;wreg free
 14014  004D3A                     l23451:
 14015                           
 14016                           ;sm_ControlGate_MC50.c: 720:             var_sys.AutoInversionActive = NO;
 14017  004D3A  0E00               	movlw	0
 14018  004D3C  0101               	movlb	1	; () banked
 14019  004D3E  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 14020                           
 14021                           ; BSR set to: 1
 14022                           ;sm_ControlGate_MC50.c: 721:             var_sys.InvertionCurrentClosing = YES;
 14023  004D40  0E01               	movlw	1
 14024  004D42  6F44               	movwf	(_var_sys+68)& (0+255),b	;volatile
 14025                           
 14026                           ; BSR set to: 1
 14027                           ;sm_ControlGate_MC50.c: 722:             ts_system.TimeInversionStart = (1000/50);
 14028  004D44  0E00               	movlw	0
 14029  004D46  6FD0               	movwf	(_ts_system+49)& (0+255),b	;volatile
 14030  004D48  0E14               	movlw	20
 14031  004D4A  6FCF               	movwf	(_ts_system+48)& (0+255),b	;volatile
 14032                           
 14033                           ;sm_ControlGate_MC50.c: 726:         } else
 14034  004D4C  0012               	return	
 14035  004D4E                     l23457:
 14036                           
 14037                           ; BSR set to: 1
 14038                           ;sm_ControlGate_MC50.c: 727:         {;sm_ControlGate_MC50.c: 728:             var_sys.S
      +                          tateMotor = Stopped;
 14039  004D4E  0E00               	movlw	0
 14040  004D50  6F00               	movwf	_var_sys& (0+255),b	;volatile
 14041  004D52  0012               	return	
 14042  004D54                     l23459:
 14043                           
 14044                           ; BSR set to: 1
 14045  004D54  0527               	decf	(_var_sys+39)& (0+255),w,b	;volatile
 14046  004D56  A4D8               	btfss	status,2,c
 14047  004D58  D017               	goto	l23475
 14048                           
 14049                           ; BSR set to: 1
 14050                           ;sm_ControlGate_MC50.c: 732:                 var_sys.StateMotor = Stopped;
 14051  004D5A  0E00               	movlw	0
 14052  004D5C  6F00               	movwf	_var_sys& (0+255),b	;volatile
 14053                           
 14054                           ; BSR set to: 1
 14055                           ;sm_ControlGate_MC50.c: 737:         if (ts_system.TimeWaitToNextState <= 0) {
 14056  004D5E  BFC4               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 14057  004D60  D005               	goto	u27840
 14058  004D62  51C4               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 14059  004D64  E160               	bnz	l2810
 14060  004D66  05C3               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 14061  004D68  B0D8               	btfsc	status,0,c
 14062  004D6A  0012               	return	
 14063  004D6C                     u27840:
 14064                           
 14065                           ; BSR set to: 1
 14066                           ;sm_ControlGate_MC50.c: 738:             if(var_sys.Timewalkisactived == YES){
 14067  004D6C  054A               	decf	(_var_sys+74)& (0+255),w,b	;volatile
 14068  004D6E  A4D8               	btfss	status,2,c
 14069  004D70  D003               	goto	l23469
 14070                           
 14071                           ; BSR set to: 1
 14072                           ;sm_ControlGate_MC50.c: 739:                 OpenWalkOrder();
 14073  004D72  EC62  F045         	call	_OpenWalkOrder	;wreg free
 14074                           
 14075                           ;sm_ControlGate_MC50.c: 741:             }
 14076  004D76  D004               	goto	l23473
 14077  004D78                     l23469:
 14078                           
 14079                           ; BSR set to: 1
 14080                           ;sm_ControlGate_MC50.c: 744:                  OpenFullOrder();
 14081  004D78  ECE4  F04C         	call	_OpenFullOrder	;wreg free
 14082                           
 14083                           ;sm_ControlGate_MC50.c: 746:             setPositionInvertionInClosing();
 14084  004D7C  EC9D  F037         	call	_setPositionInvertionInClosing	;wreg free
 14085  004D80                     l23473:
 14086                           
 14087                           ;sm_ControlGate_MC50.c: 748:             var_sys.AutoInversionActive = NO;
 14088  004D80  0E00               	movlw	0
 14089  004D82  0101               	movlb	1	; () banked
 14090  004D84  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 14091  004D86  0012               	return	
 14092  004D88                     l23475:
 14093                           
 14094                           ; BSR set to: 1
 14095  004D88  5100               	movf	_var_sys& (0+255),w,b	;volatile
 14096  004D8A  A4D8               	btfss	status,2,c
 14097  004D8C  D00B               	goto	l23491
 14098                           
 14099                           ; BSR set to: 1
 14100                           ;sm_ControlGate_MC50.c: 755:         if(securityClosing != ST){
 14101  004D8E  0E02               	movlw	2
 14102  004D90  1832               	xorwf	actionZone_Closing@securityClosing^0,w,c
 14103  004D92  B4D8               	btfsc	status,2,c
 14104  004D94  D002               	goto	l23487
 14105                           
 14106                           ; BSR set to: 1
 14107                           ;sm_ControlGate_MC50.c: 756:            var_sys.NumberOffErrors++;
 14108  004D96  2B43               	incf	(_var_sys+67)& (0+255),f,b	;volatile
 14109  004D98  D7BA               	goto	u27800
 14110  004D9A                     l23487:
 14111                           
 14112                           ; BSR set to: 1
 14113                           ;sm_ControlGate_MC50.c: 761:         {;sm_ControlGate_MC50.c: 762:             setPositi
      +                          onInvertionInClosing();
 14114  004D9A  EC9D  F037         	call	_setPositionInvertionInClosing	;wreg free
 14115  004D9E                     l23489:
 14116                           
 14117                           ;sm_ControlGate_MC50.c: 763:             StopOrder();
 14118  004D9E  EC86  F04D         	call	_StopOrder	;wreg free
 14119  004DA2  0012               	return	
 14120  004DA4                     l23491:
 14121                           
 14122                           ; BSR set to: 1
 14123  004DA4  BFD2               	btfsc	(_ts_system+51)& (0+255),7,b	;volatile
 14124  004DA6  D005               	goto	u27880
 14125  004DA8  51D2               	movf	(_ts_system+51)& (0+255),w,b	;volatile
 14126  004DAA  E10B               	bnz	l23501
 14127  004DAC  05D1               	decf	(_ts_system+50)& (0+255),w,b	;volatile
 14128  004DAE  B0D8               	btfsc	status,0,c
 14129  004DB0  D008               	goto	l23501
 14130  004DB2                     u27880:
 14131                           
 14132                           ; BSR set to: 1
 14133  004DB2  0546               	decf	(_var_sys+70)& (0+255),w,b	;volatile
 14134  004DB4  A4D8               	btfss	status,2,c
 14135  004DB6  D005               	goto	l23501
 14136                           
 14137                           ; BSR set to: 1
 14138                           ;sm_ControlGate_MC50.c: 768:         setPositionInvertionInClosing();
 14139  004DB8  EC9D  F037         	call	_setPositionInvertionInClosing	;wreg free
 14140                           
 14141                           ; BSR set to: 1
 14142                           ;sm_ControlGate_MC50.c: 769:         var_sys.InvertionClosingFromOpen = NO;
 14143  004DBC  0E00               	movlw	0
 14144  004DBE  6F46               	movwf	(_var_sys+70)& (0+255),b	;volatile
 14145  004DC0  D7EE               	goto	l23489
 14146  004DC2                     l23501:
 14147                           
 14148                           ; BSR set to: 1
 14149  004DC2  0100               	movlb	0	; () banked
 14150  004DC4  05A8               	decf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 14151  004DC6  B4D8               	btfsc	status,2,c
 14152  004DC8  D004               	goto	u27910
 14153                           
 14154                           ; BSR set to: 0
 14155  004DCA  0E02               	movlw	2
 14156  004DCC  19A8               	xorwf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 14157  004DCE  A4D8               	btfss	status,2,c
 14158  004DD0  D005               	goto	l23509
 14159  004DD2                     u27910:
 14160                           
 14161                           ; BSR set to: 0
 14162                           ;sm_ControlGate_MC50.c: 773:         if (typeOpenOrder != TypeFullClose) {
 14163  004DD2  0E04               	movlw	4
 14164  004DD4  1833               	xorwf	actionZone_Closing@typeOpenOrder^0,w,c
 14165  004DD6  B4D8               	btfsc	status,2,c
 14166  004DD8  0012               	return	
 14167  004DDA  D7E1               	goto	l23489
 14168  004DDC                     l23509:
 14169                           
 14170                           ; BSR set to: 0
 14171  004DDC  5033               	movf	actionZone_Closing@typeOpenOrder^0,w,c
 14172  004DDE  B4D8               	btfsc	status,2,c
 14173  004DE0  0012               	return	
 14174                           
 14175                           ; BSR set to: 0
 14176                           ;sm_ControlGate_MC50.c: 788:         if ( var_sys_NVM.operationMode == ModoPassoPasso )
 14177  004DE2  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 14178  004DE4  A4D8               	btfss	status,2,c
 14179  004DE6  D013               	goto	l23525
 14180                           
 14181                           ; BSR set to: 0
 14182                           ;sm_ControlGate_MC50.c: 789:         {;sm_ControlGate_MC50.c: 790:             setPositi
      +                          onInvertionInClosing();
 14183  004DE8  EC9D  F037         	call	_setPositionInvertionInClosing	;wreg free
 14184                           
 14185                           ; BSR set to: 1
 14186                           ;sm_ControlGate_MC50.c: 791:             StopOrder();
 14187  004DEC  EC86  F04D         	call	_StopOrder	;wreg free
 14188                           
 14189                           ;sm_ControlGate_MC50.c: 793:             if (typeOpenOrder == TypeWalk && var_sys_NVM.op
      +                          erationMode != ModoCondominio)
 14190  004DF0  0E02               	movlw	2
 14191  004DF2  1833               	xorwf	actionZone_Closing@typeOpenOrder^0,w,c
 14192  004DF4  A4D8               	btfss	status,2,c
 14193  004DF6  0012               	return	
 14194  004DF8  0E02               	movlw	2
 14195  004DFA  0100               	movlb	0	; () banked
 14196  004DFC  19A4               	xorwf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 14197  004DFE  B4D8               	btfsc	status,2,c
 14198  004E00  0012               	return	
 14199                           
 14200                           ; BSR set to: 0
 14201                           ;sm_ControlGate_MC50.c: 794:             {;sm_ControlGate_MC50.c: 795:                 I
      +                          nitWalkAutoTime();
 14202  004E02  EC5C  F04E         	call	_InitWalkAutoTime	;wreg free
 14203                           
 14204                           ; BSR set to: 0
 14205                           ;sm_ControlGate_MC50.c: 796:                 var_sys.showAP = YES;
 14206  004E06  0E01               	movlw	1
 14207  004E08  0101               	movlb	1	; () banked
 14208  004E0A  6F4F               	movwf	(_var_sys+79)& (0+255),b	;volatile
 14209  004E0C  0012               	return	
 14210  004E0E                     l23525:
 14211                           
 14212                           ; BSR set to: 0
 14213                           ;sm_ControlGate_MC50.c: 801:         {;sm_ControlGate_MC50.c: 802:             if (typeO
      +                          penOrder != TypeFullClose){
 14214  004E0E  0E04               	movlw	4
 14215  004E10  1833               	xorwf	actionZone_Closing@typeOpenOrder^0,w,c
 14216  004E12  B4D8               	btfsc	status,2,c
 14217  004E14  D7C4               	goto	l23489
 14218                           
 14219                           ; BSR set to: 0
 14220                           ;sm_ControlGate_MC50.c: 803:                 var_sys.AutoInversionActive = YES;
 14221  004E16  0E01               	movlw	1
 14222  004E18  0101               	movlb	1	; () banked
 14223  004E1A  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 14224                           
 14225                           ;sm_ControlGate_MC50.c: 804:                 ts_system.TimeWaitToNextState = ( 500/50);
 14226  004E1C  0E00               	movlw	0
 14227  004E1E  6FC4               	movwf	(_ts_system+37)& (0+255),b	;volatile
 14228  004E20  0E0A               	movlw	10
 14229  004E22  6FC3               	movwf	(_ts_system+36)& (0+255),b	;volatile
 14230                           
 14231                           ;sm_ControlGate_MC50.c: 806:             }
 14232  004E24  0012               	return	
 14233  004E26                     l2810:
 14234  004E26  0012               	return		;funcret
 14235  004E28                     __end_of_actionZone_Closing:
 14236                           	callstack 0
 14237                           
 14238 ;; *************** function _setPositionInvertionInClosing *****************
 14239 ;; Defined at:
 14240 ;;		line 867 in file "sm_ControlGate_MC50.c"
 14241 ;; Parameters:    Size  Location     Type
 14242 ;;		None
 14243 ;; Auto vars:     Size  Location     Type
 14244 ;;		None
 14245 ;; Return value:  Size  Location     Type
 14246 ;;                  1    wreg      void 
 14247 ;; Registers used:
 14248 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 14249 ;; Tracked objects:
 14250 ;;		On entry : 3E/1
 14251 ;;		On exit  : 3F/1
 14252 ;;		Unchanged: 0/0
 14253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14255 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14256 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14257 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14258 ;;Total ram usage:       12 bytes
 14259 ;; Hardware stack levels used: 1
 14260 ;; Hardware stack levels required when called: 6
 14261 ;; This function calls:
 14262 ;;		_getTimeDecelaration
 14263 ;; This function is called by:
 14264 ;;		_actionZone_Opening
 14265 ;;		_actionZone_Closing
 14266 ;; This function uses a non-reentrant model
 14267 ;;
 14268                           
 14269                           	psect	text34
 14270  006F3A                     __ptext34:
 14271                           	callstack 0
 14272  006F3A                     _setPositionInvertionInClosing:
 14273                           	callstack 22
 14274                           
 14275                           ;sm_ControlGate_MC50.c: 872:     if(var_sys_NVM.TypeofMotor != 2){
 14276                           
 14277                           ;incstack = 0
 14278  006F3A  0E02               	movlw	2
 14279  006F3C  0100               	movlb	0	; () banked
 14280  006F3E  19B4               	xorwf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 14281  006F40  B4D8               	btfsc	status,2,c
 14282  006F42  D007               	goto	l21789
 14283                           
 14284                           ; BSR set to: 0
 14285                           ;sm_ControlGate_MC50.c: 874:        var_sys.PositionActual += ( 100/50);
 14286  006F44  0E02               	movlw	2
 14287  006F46  0101               	movlb	1	; () banked
 14288  006F48  271E               	addwf	(_var_sys+30)& (0+255),f,b	;volatile
 14289  006F4A  0E00               	movlw	0
 14290  006F4C  231F               	addwfc	(_var_sys+31)& (0+255),f,b	;volatile
 14291  006F4E  2320               	addwfc	(_var_sys+32)& (0+255),f,b	;volatile
 14292  006F50  D008               	goto	L74
 14293  006F52                     l21789:
 14294                           
 14295                           ; BSR set to: 0
 14296                           ;sm_ControlGate_MC50.c: 878:     {;sm_ControlGate_MC50.c: 879:        var_sys.PositionAc
      +                          tual -= ( 50/50);
 14297  006F52  0EFF               	movlw	255
 14298  006F54  0101               	movlb	1	; () banked
 14299  006F56  271E               	addwf	(_var_sys+30)& (0+255),f,b	;volatile
 14300  006F58  0EFF               	movlw	255
 14301  006F5A  231F               	addwfc	(_var_sys+31)& (0+255),f,b	;volatile
 14302  006F5C  0EFF               	movlw	255
 14303  006F5E  2320               	addwfc	(_var_sys+32)& (0+255),f,b	;volatile
 14304  006F60  0EFF               	movlw	255
 14305  006F62                     L74:
 14306  006F62  2321               	addwfc	(_var_sys+33)& (0+255),f,b	;volatile
 14307                           
 14308                           ; BSR set to: 1
 14309                           ;sm_ControlGate_MC50.c: 882:     if (var_sys.PositionActual > getTimeDecelaration(InOpen
      +                          Full)&& var_sys_NVM.TypeofMotor != 2) {
 14310  006F64  0E01               	movlw	1
 14311  006F66  ECD0  F03B         	call	_getTimeDecelaration
 14312  006F6A  0101               	movlb	1	; () banked
 14313  006F6C  511E               	movf	(_var_sys+30)& (0+255),w,b	;volatile
 14314  006F6E  5C29               	subwf	?_getTimeDecelaration^0,w,c
 14315  006F70  511F               	movf	(_var_sys+31)& (0+255),w,b	;volatile
 14316  006F72  582A               	subwfb	(?_getTimeDecelaration+1)^0,w,c
 14317  006F74  5120               	movf	(_var_sys+32)& (0+255),w,b	;volatile
 14318  006F76  582B               	subwfb	(?_getTimeDecelaration+2)^0,w,c
 14319  006F78  502C               	movf	(?_getTimeDecelaration+3)^0,w,c
 14320  006F7A  0A80               	xorlw	128
 14321  006F7C  0100               	movlb	0	; () banked
 14322  006F7E  6FD8               	movwf	??_setPositionInvertionInClosing& (0+255),b
 14323  006F80  0101               	movlb	1	; () banked
 14324  006F82  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 14325  006F84  0A80               	xorlw	128
 14326  006F86  0100               	movlb	0	; () banked
 14327  006F88  59D8               	subwfb	??_setPositionInvertionInClosing& (0+255),w,b
 14328  006F8A  B0D8               	btfsc	status,0,c
 14329  006F8C  D008               	goto	l21797
 14330                           
 14331                           ; BSR set to: 0
 14332  006F8E  0E02               	movlw	2
 14333  006F90  19B4               	xorwf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 14334  006F92  B4D8               	btfsc	status,2,c
 14335  006F94  D004               	goto	l21797
 14336                           
 14337                           ; BSR set to: 0
 14338                           ;sm_ControlGate_MC50.c: 883:         var_sys.PositionActual = getTimeDecelaration(InOpen
      +                          Full);
 14339  006F96  0E01               	movlw	1
 14340  006F98  ECD0  F03B         	call	_getTimeDecelaration
 14341  006F9C  D01A               	goto	L75
 14342  006F9E                     l21797:
 14343                           
 14344                           ; BSR set to: 0
 14345  006F9E  0E03               	movlw	3
 14346  006FA0  ECD0  F03B         	call	_getTimeDecelaration
 14347  006FA4  5029               	movf	?_getTimeDecelaration^0,w,c
 14348  006FA6  0101               	movlb	1	; () banked
 14349  006FA8  5D1E               	subwf	(_var_sys+30)& (0+255),w,b	;volatile
 14350  006FAA  502A               	movf	(?_getTimeDecelaration+1)^0,w,c
 14351  006FAC  591F               	subwfb	(_var_sys+31)& (0+255),w,b	;volatile
 14352  006FAE  502B               	movf	(?_getTimeDecelaration+2)^0,w,c
 14353  006FB0  5920               	subwfb	(_var_sys+32)& (0+255),w,b	;volatile
 14354  006FB2  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 14355  006FB4  0A80               	xorlw	128
 14356  006FB6  0100               	movlb	0	; () banked
 14357  006FB8  6FD8               	movwf	??_setPositionInvertionInClosing& (0+255),b
 14358  006FBA  502C               	movf	(?_getTimeDecelaration+3)^0,w,c
 14359  006FBC  0A80               	xorlw	128
 14360  006FBE  59D8               	subwfb	??_setPositionInvertionInClosing& (0+255),w,b
 14361  006FC0  B0D8               	btfsc	status,0,c
 14362  006FC2  D00F               	goto	l21803
 14363                           
 14364                           ; BSR set to: 0
 14365  006FC4  0E02               	movlw	2
 14366  006FC6  19B4               	xorwf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 14367  006FC8  B4D8               	btfsc	status,2,c
 14368  006FCA  D00B               	goto	l21803
 14369                           
 14370                           ; BSR set to: 0
 14371                           ;sm_ControlGate_MC50.c: 887:         var_sys.PositionActual = getTimeDecelaration(InClos
      +                          e);
 14372  006FCC  0E03               	movlw	3
 14373  006FCE  ECD0  F03B         	call	_getTimeDecelaration
 14374  006FD2                     L75:
 14375  006FD2  C029  F11E         	movff	?_getTimeDecelaration,_var_sys+30	;volatile
 14376  006FD6  C02A  F11F         	movff	?_getTimeDecelaration+1,_var_sys+31	;volatile
 14377  006FDA  C02B  F120         	movff	?_getTimeDecelaration+2,_var_sys+32	;volatile
 14378  006FDE  C02C  F121         	movff	?_getTimeDecelaration+3,_var_sys+33	;volatile
 14379  006FE2                     l21803:
 14380                           
 14381                           ;sm_ControlGate_MC50.c: 890:     var_sys.TimeMaxMotorIsON = ((signed long)var_sys_NVM.le
      +                          arningTimeToOpen - var_sys.PositionActual) + (var_sys_NVM.decelarationOpen*( 500/50))+ (
      +                          1000/50)*10;
 14382  006FE2  0100               	movlb	0	; () banked
 14383  006FE4  5198               	movf	_var_sys_NVM& (0+255),w,b	;volatile
 14384  006FE6  0D0A               	mullw	10
 14385  006FE8  CFF3 F0D8          	movff	prodl,??_setPositionInvertionInClosing
 14386  006FEC  CFF4 F0D9          	movff	prodh,??_setPositionInvertionInClosing+1
 14387  006FF0  0E00               	movlw	0
 14388  006FF2  BFD9               	btfsc	(??_setPositionInvertionInClosing+1)& (0+255),7,b
 14389  006FF4  0EFF               	movlw	255
 14390  006FF6  6FDA               	movwf	(??_setPositionInvertionInClosing+2)& (0+255),b
 14391  006FF8  6FDB               	movwf	(??_setPositionInvertionInClosing+3)& (0+255),b
 14392  006FFA  0101               	movlb	1	; () banked
 14393  006FFC  511E               	movf	(_var_sys+30)& (0+255),w,b	;volatile
 14394  006FFE  0100               	movlb	0	; () banked
 14395  007000  5DD8               	subwf	??_setPositionInvertionInClosing& (0+255),w,b
 14396  007002  6FDC               	movwf	(??_setPositionInvertionInClosing+4)& (0+255),b
 14397  007004  0101               	movlb	1	; () banked
 14398  007006  511F               	movf	(_var_sys+31)& (0+255),w,b	;volatile
 14399  007008  0100               	movlb	0	; () banked
 14400  00700A  59D9               	subwfb	(??_setPositionInvertionInClosing+1)& (0+255),w,b
 14401  00700C  6FDD               	movwf	(??_setPositionInvertionInClosing+5)& (0+255),b
 14402  00700E  0101               	movlb	1	; () banked
 14403  007010  5120               	movf	(_var_sys+32)& (0+255),w,b	;volatile
 14404  007012  0100               	movlb	0	; () banked
 14405  007014  59DA               	subwfb	(??_setPositionInvertionInClosing+2)& (0+255),w,b
 14406  007016  6FDE               	movwf	(??_setPositionInvertionInClosing+6)& (0+255),b
 14407  007018  0101               	movlb	1	; () banked
 14408  00701A  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 14409  00701C  0100               	movlb	0	; () banked
 14410  00701E  59DB               	subwfb	(??_setPositionInvertionInClosing+3)& (0+255),w,b
 14411  007020  6FDF               	movwf	(??_setPositionInvertionInClosing+7)& (0+255),b
 14412  007022  51CC               	movf	(_var_sys_NVM+52)& (0+255),w,b	;volatile
 14413  007024  25DC               	addwf	(??_setPositionInvertionInClosing+4)& (0+255),w,b
 14414  007026  6FE0               	movwf	(??_setPositionInvertionInClosing+8)& (0+255),b
 14415  007028  51CD               	movf	(_var_sys_NVM+53)& (0+255),w,b	;volatile
 14416  00702A  21DD               	addwfc	(??_setPositionInvertionInClosing+5)& (0+255),w,b
 14417  00702C  6FE1               	movwf	(??_setPositionInvertionInClosing+9)& (0+255),b
 14418  00702E  51CE               	movf	(_var_sys_NVM+54)& (0+255),w,b	;volatile
 14419  007030  21DE               	addwfc	(??_setPositionInvertionInClosing+6)& (0+255),w,b
 14420  007032  6FE2               	movwf	(??_setPositionInvertionInClosing+10)& (0+255),b
 14421  007034  51CF               	movf	(_var_sys_NVM+55)& (0+255),w,b	;volatile
 14422  007036  21DF               	addwfc	(??_setPositionInvertionInClosing+7)& (0+255),w,b
 14423  007038  6FE3               	movwf	(??_setPositionInvertionInClosing+11)& (0+255),b
 14424  00703A  0EC8               	movlw	200
 14425  00703C  25E0               	addwf	(??_setPositionInvertionInClosing+8)& (0+255),w,b
 14426  00703E  0101               	movlb	1	; () banked
 14427  007040  6F18               	movwf	(_var_sys+24)& (0+255),b	;volatile
 14428  007042  0E00               	movlw	0
 14429  007044  0100               	movlb	0	; () banked
 14430  007046  21E1               	addwfc	(??_setPositionInvertionInClosing+9)& (0+255),w,b
 14431  007048  0101               	movlb	1	; () banked
 14432  00704A  6F19               	movwf	(_var_sys+25)& (0+255),b	;volatile
 14433  00704C  0E00               	movlw	0
 14434  00704E  0100               	movlb	0	; () banked
 14435  007050  21E2               	addwfc	(??_setPositionInvertionInClosing+10)& (0+255),w,b
 14436  007052  0101               	movlb	1	; () banked
 14437  007054  6F1A               	movwf	(_var_sys+26)& (0+255),b	;volatile
 14438  007056  0E00               	movlw	0
 14439  007058  0100               	movlb	0	; () banked
 14440  00705A  21E3               	addwfc	(??_setPositionInvertionInClosing+11)& (0+255),w,b
 14441  00705C  0101               	movlb	1	; () banked
 14442  00705E  6F1B               	movwf	(_var_sys+27)& (0+255),b	;volatile
 14443                           
 14444                           ; BSR set to: 1
 14445  007060  0012               	return		;funcret
 14446  007062                     __end_of_setPositionInvertionInClosing:
 14447                           	callstack 0
 14448                           
 14449 ;; *************** function _getTimeDecelaration *****************
 14450 ;; Defined at:
 14451 ;;		line 641 in file "outputs_MC50.c"
 14452 ;; Parameters:    Size  Location     Type
 14453 ;;  state           1    wreg     enum E10381
 14454 ;; Auto vars:     Size  Location     Type
 14455 ;;  state           1   48[COMRAM] enum E10381
 14456 ;; Return value:  Size  Location     Type
 14457 ;;                  4   40[COMRAM] long 
 14458 ;; Registers used:
 14459 ;;		wreg, status,2, status,0, cstack
 14460 ;; Tracked objects:
 14461 ;;		On entry : 3E/1
 14462 ;;		On exit  : 0/0
 14463 ;;		Unchanged: 0/0
 14464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14465 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14466 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14467 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14468 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14469 ;;Total ram usage:        9 bytes
 14470 ;; Hardware stack levels used: 1
 14471 ;; Hardware stack levels required when called: 5
 14472 ;; This function calls:
 14473 ;;		___lmul
 14474 ;; This function is called by:
 14475 ;;		_getStateOpenPosition
 14476 ;;		_controlVelocity
 14477 ;;		_setPositionInvertionInClosing
 14478 ;;		_setPositionInvertionInOpening
 14479 ;; This function uses a non-reentrant model
 14480 ;;
 14481                           
 14482                           	psect	text35
 14483  0077A0                     __ptext35:
 14484                           	callstack 0
 14485  0077A0                     _getTimeDecelaration:
 14486                           	callstack 22
 14487                           
 14488                           ; BSR set to: 1
 14489                           ;incstack = 0
 14490                           ;getTimeDecelaration@state stored from wreg
 14491  0077A0  6E31               	movwf	getTimeDecelaration@state^0,c
 14492                           
 14493                           ;outputs_MC50.c: 641: signed long getTimeDecelaration(stateMotor_enum state);outputs_MC5
      +                          0.c: 642: {;outputs_MC50.c: 644:     if(state==InClose)
 14494  0077A2  0E03               	movlw	3
 14495  0077A4  1831               	xorwf	getTimeDecelaration@state^0,w,c
 14496  0077A6  A4D8               	btfss	status,2,c
 14497  0077A8  D033               	goto	l20591
 14498                           
 14499                           ;outputs_MC50.c: 645:     {;outputs_MC50.c: 646:         if (var_sys_NVM.TypeofMotor != 
      +                          2)
 14500  0077AA  0E02               	movlw	2
 14501  0077AC  0100               	movlb	0	; () banked
 14502  0077AE  19B4               	xorwf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 14503  0077B0  B4D8               	btfsc	status,2,c
 14504  0077B2  D018               	goto	l20587
 14505                           
 14506                           ; BSR set to: 0
 14507                           ;outputs_MC50.c: 647:         {return (signed long)((signed long)var_sys_NVM.decelaratio
      +                          nClose*( 500/50));}
 14508  0077B4  5199               	movf	(_var_sys_NVM+1)& (0+255),w,b	;volatile
 14509  0077B6  6E1D               	movwf	___lmul@multiplier^0,c
 14510  0077B8  6A1E               	clrf	(___lmul@multiplier+1)^0,c
 14511  0077BA  6A1F               	clrf	(___lmul@multiplier+2)^0,c
 14512  0077BC  6A20               	clrf	(___lmul@multiplier+3)^0,c
 14513  0077BE  0E0A               	movlw	10
 14514  0077C0  6E21               	movwf	___lmul@multiplicand^0,c
 14515  0077C2  0E00               	movlw	0
 14516  0077C4  6E22               	movwf	(___lmul@multiplicand+1)^0,c
 14517  0077C6  0E00               	movlw	0
 14518  0077C8  6E23               	movwf	(___lmul@multiplicand+2)^0,c
 14519  0077CA  0E00               	movlw	0
 14520  0077CC  6E24               	movwf	(___lmul@multiplicand+3)^0,c
 14521  0077CE  EC08  F048         	call	___lmul	;wreg free
 14522  0077D2  C01D  F029         	movff	?___lmul,?_getTimeDecelaration
 14523  0077D6  C01E  F02A         	movff	?___lmul+1,?_getTimeDecelaration+1
 14524  0077DA  C01F  F02B         	movff	?___lmul+2,?_getTimeDecelaration+2
 14525  0077DE  C020  F02C         	movff	?___lmul+3,?_getTimeDecelaration+3
 14526  0077E2  0012               	return	
 14527  0077E4                     l20587:
 14528                           
 14529                           ; BSR set to: 0
 14530  0077E4  C099  F02D         	movff	_var_sys_NVM+1,??_getTimeDecelaration	;volatile
 14531  0077E8  6A2E               	clrf	(??_getTimeDecelaration+1)^0,c
 14532  0077EA  6A2F               	clrf	(??_getTimeDecelaration+2)^0,c
 14533  0077EC  6A30               	clrf	(??_getTimeDecelaration+3)^0,c
 14534  0077EE  0E02               	movlw	2
 14535  0077F0                     u23625:
 14536  0077F0  90D8               	bcf	status,0,c
 14537  0077F2  362D               	rlcf	??_getTimeDecelaration^0,f,c
 14538  0077F4  362E               	rlcf	(??_getTimeDecelaration+1)^0,f,c
 14539  0077F6  362F               	rlcf	(??_getTimeDecelaration+2)^0,f,c
 14540  0077F8  3630               	rlcf	(??_getTimeDecelaration+3)^0,f,c
 14541  0077FA  2EE8               	decfsz	wreg,f,c
 14542  0077FC  D7F9               	goto	u23625
 14543  0077FE  C02D  F029         	movff	??_getTimeDecelaration,?_getTimeDecelaration
 14544  007802  C02E  F02A         	movff	??_getTimeDecelaration+1,?_getTimeDecelaration+1
 14545  007806  C02F  F02B         	movff	??_getTimeDecelaration+2,?_getTimeDecelaration+2
 14546  00780A  C030  F02C         	movff	??_getTimeDecelaration+3,?_getTimeDecelaration+3
 14547  00780E  0012               	return	
 14548  007810                     l20591:
 14549                           
 14550                           ;outputs_MC50.c: 651:     {;outputs_MC50.c: 652:         if (var_sys_NVM.TypeofMotor != 
      +                          2)
 14551  007810  0E02               	movlw	2
 14552  007812  0100               	movlb	0	; () banked
 14553  007814  19B4               	xorwf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 14554  007816  B4D8               	btfsc	status,2,c
 14555  007818  D01D               	goto	l20599
 14556                           
 14557                           ; BSR set to: 0
 14558                           ;outputs_MC50.c: 653:         {return (signed long)((signed long)var_sys_NVM.learningTim
      +                          eToOpen-(((signed long)var_sys_NVM.decelarationOpen*( 500/50))));}
 14559  00781A  5198               	movf	_var_sys_NVM& (0+255),w,b	;volatile
 14560  00781C  6E1D               	movwf	___lmul@multiplier^0,c
 14561  00781E  6A1E               	clrf	(___lmul@multiplier+1)^0,c
 14562  007820  6A1F               	clrf	(___lmul@multiplier+2)^0,c
 14563  007822  6A20               	clrf	(___lmul@multiplier+3)^0,c
 14564  007824  0EF6               	movlw	246
 14565  007826  6E21               	movwf	___lmul@multiplicand^0,c
 14566  007828  0EFF               	movlw	255
 14567  00782A  6E22               	movwf	(___lmul@multiplicand+1)^0,c
 14568  00782C  0EFF               	movlw	255
 14569  00782E  6E23               	movwf	(___lmul@multiplicand+2)^0,c
 14570  007830  0EFF               	movlw	255
 14571  007832  6E24               	movwf	(___lmul@multiplicand+3)^0,c
 14572  007834  EC08  F048         	call	___lmul	;wreg free
 14573  007838  0100               	movlb	0	; () banked
 14574  00783A  51CC               	movf	(_var_sys_NVM+52)& (0+255),w,b	;volatile
 14575  00783C  241D               	addwf	?___lmul^0,w,c
 14576  00783E  6E29               	movwf	?_getTimeDecelaration^0,c
 14577  007840  51CD               	movf	(_var_sys_NVM+53)& (0+255),w,b	;volatile
 14578  007842  201E               	addwfc	(?___lmul+1)^0,w,c
 14579  007844  6E2A               	movwf	(?_getTimeDecelaration+1)^0,c
 14580  007846  51CE               	movf	(_var_sys_NVM+54)& (0+255),w,b	;volatile
 14581  007848  201F               	addwfc	(?___lmul+2)^0,w,c
 14582  00784A  6E2B               	movwf	(?_getTimeDecelaration+2)^0,c
 14583  00784C  51CF               	movf	(_var_sys_NVM+55)& (0+255),w,b	;volatile
 14584  00784E  2020               	addwfc	(?___lmul+3)^0,w,c
 14585  007850  6E2C               	movwf	(?_getTimeDecelaration+3)^0,c
 14586  007852  0012               	return	
 14587  007854                     l20599:
 14588                           
 14589                           ; BSR set to: 0
 14590  007854  C098  F02D         	movff	_var_sys_NVM,??_getTimeDecelaration	;volatile
 14591  007858  6A2E               	clrf	(??_getTimeDecelaration+1)^0,c
 14592  00785A  6A2F               	clrf	(??_getTimeDecelaration+2)^0,c
 14593  00785C  6A30               	clrf	(??_getTimeDecelaration+3)^0,c
 14594  00785E  0E02               	movlw	2
 14595  007860                     u23645:
 14596  007860  90D8               	bcf	status,0,c
 14597  007862  362D               	rlcf	??_getTimeDecelaration^0,f,c
 14598  007864  362E               	rlcf	(??_getTimeDecelaration+1)^0,f,c
 14599  007866  362F               	rlcf	(??_getTimeDecelaration+2)^0,f,c
 14600  007868  3630               	rlcf	(??_getTimeDecelaration+3)^0,f,c
 14601  00786A  2EE8               	decfsz	wreg,f,c
 14602  00786C  D7F9               	goto	u23645
 14603  00786E  502D               	movf	??_getTimeDecelaration^0,w,c
 14604  007870  5DCC               	subwf	(_var_sys_NVM+52)& (0+255),w,b	;volatile
 14605  007872  6E29               	movwf	?_getTimeDecelaration^0,c
 14606  007874  502E               	movf	(??_getTimeDecelaration+1)^0,w,c
 14607  007876  59CD               	subwfb	(_var_sys_NVM+53)& (0+255),w,b	;volatile
 14608  007878  6E2A               	movwf	(?_getTimeDecelaration+1)^0,c
 14609  00787A  502F               	movf	(??_getTimeDecelaration+2)^0,w,c
 14610  00787C  59CE               	subwfb	(_var_sys_NVM+54)& (0+255),w,b	;volatile
 14611  00787E  6E2B               	movwf	(?_getTimeDecelaration+2)^0,c
 14612  007880  5030               	movf	(??_getTimeDecelaration+3)^0,w,c
 14613  007882  59CF               	subwfb	(_var_sys_NVM+55)& (0+255),w,b	;volatile
 14614  007884  6E2C               	movwf	(?_getTimeDecelaration+3)^0,c
 14615  007886  0012               	return		;funcret
 14616  007888                     __end_of_getTimeDecelaration:
 14617                           	callstack 0
 14618                           
 14619 ;; *************** function ___lmul *****************
 14620 ;; Defined at:
 14621 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\Umul32.c"
 14622 ;; Parameters:    Size  Location     Type
 14623 ;;  multiplier      4   28[COMRAM] unsigned long 
 14624 ;;  multiplicand    4   32[COMRAM] unsigned long 
 14625 ;; Auto vars:     Size  Location     Type
 14626 ;;  product         4   36[COMRAM] unsigned long 
 14627 ;; Return value:  Size  Location     Type
 14628 ;;                  4   28[COMRAM] unsigned long 
 14629 ;; Registers used:
 14630 ;;		wreg, status,2, status,0
 14631 ;; Tracked objects:
 14632 ;;		On entry : 0/1
 14633 ;;		On exit  : 0/0
 14634 ;;		Unchanged: 0/0
 14635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14636 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14637 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14639 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14640 ;;Total ram usage:       12 bytes
 14641 ;; Hardware stack levels used: 1
 14642 ;; Hardware stack levels required when called: 4
 14643 ;; This function calls:
 14644 ;;		Nothing
 14645 ;; This function is called by:
 14646 ;;		_getStateOpenPosition
 14647 ;;		_getTimeDecelaration
 14648 ;;		_actionZone_Closing
 14649 ;;		_sm_execute_menuConfiguration
 14650 ;; This function uses a non-reentrant model
 14651 ;;
 14652                           
 14653                           	psect	text36
 14654  009010                     __ptext36:
 14655                           	callstack 0
 14656  009010                     ___lmul:
 14657                           	callstack 24
 14658                           
 14659                           ;incstack = 0
 14660  009010  0E00               	movlw	0
 14661  009012  6E25               	movwf	___lmul@product^0,c
 14662  009014  0E00               	movlw	0
 14663  009016  6E26               	movwf	(___lmul@product+1)^0,c
 14664  009018  0E00               	movlw	0
 14665  00901A  6E27               	movwf	(___lmul@product+2)^0,c
 14666  00901C  0E00               	movlw	0
 14667  00901E  6E28               	movwf	(___lmul@product+3)^0,c
 14668  009020                     l20457:
 14669  009020  A01D               	btfss	___lmul@multiplier^0,0,c
 14670  009022  D008               	goto	l20461
 14671  009024  5021               	movf	___lmul@multiplicand^0,w,c
 14672  009026  2625               	addwf	___lmul@product^0,f,c
 14673  009028  5022               	movf	(___lmul@multiplicand+1)^0,w,c
 14674  00902A  2226               	addwfc	(___lmul@product+1)^0,f,c
 14675  00902C  5023               	movf	(___lmul@multiplicand+2)^0,w,c
 14676  00902E  2227               	addwfc	(___lmul@product+2)^0,f,c
 14677  009030  5024               	movf	(___lmul@multiplicand+3)^0,w,c
 14678  009032  2228               	addwfc	(___lmul@product+3)^0,f,c
 14679  009034                     l20461:
 14680  009034  90D8               	bcf	status,0,c
 14681  009036  3621               	rlcf	___lmul@multiplicand^0,f,c
 14682  009038  3622               	rlcf	(___lmul@multiplicand+1)^0,f,c
 14683  00903A  3623               	rlcf	(___lmul@multiplicand+2)^0,f,c
 14684  00903C  3624               	rlcf	(___lmul@multiplicand+3)^0,f,c
 14685  00903E  90D8               	bcf	status,0,c
 14686  009040  3220               	rrcf	(___lmul@multiplier+3)^0,f,c
 14687  009042  321F               	rrcf	(___lmul@multiplier+2)^0,f,c
 14688  009044  321E               	rrcf	(___lmul@multiplier+1)^0,f,c
 14689  009046  321D               	rrcf	___lmul@multiplier^0,f,c
 14690  009048  501D               	movf	___lmul@multiplier^0,w,c
 14691  00904A  101E               	iorwf	(___lmul@multiplier+1)^0,w,c
 14692  00904C  101F               	iorwf	(___lmul@multiplier+2)^0,w,c
 14693  00904E  1020               	iorwf	(___lmul@multiplier+3)^0,w,c
 14694  009050  A4D8               	btfss	status,2,c
 14695  009052  D7E6               	goto	l20457
 14696  009054  C025  F01D         	movff	___lmul@product,?___lmul
 14697  009058  C026  F01E         	movff	___lmul@product+1,?___lmul+1
 14698  00905C  C027  F01F         	movff	___lmul@product+2,?___lmul+2
 14699  009060  C028  F020         	movff	___lmul@product+3,?___lmul+3
 14700  009064  0012               	return		;funcret
 14701  009066                     __end_of___lmul:
 14702                           	callstack 0
 14703                           
 14704 ;; *************** function _StopOrder *****************
 14705 ;; Defined at:
 14706 ;;		line 96 in file "sm_ControlGate_MC50.c"
 14707 ;; Parameters:    Size  Location     Type
 14708 ;;		None
 14709 ;; Auto vars:     Size  Location     Type
 14710 ;;		None
 14711 ;; Return value:  Size  Location     Type
 14712 ;;                  1    wreg      void 
 14713 ;; Registers used:
 14714 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14715 ;; Tracked objects:
 14716 ;;		On entry : 3E/1
 14717 ;;		On exit  : 0/0
 14718 ;;		Unchanged: 0/0
 14719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14723 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14724 ;;Total ram usage:        0 bytes
 14725 ;; Hardware stack levels used: 1
 14726 ;; Hardware stack levels required when called: 6
 14727 ;; This function calls:
 14728 ;;		_sm_send_event
 14729 ;; This function is called by:
 14730 ;;		_actionZone_Opening
 14731 ;;		_actionZone_Closing
 14732 ;; This function uses a non-reentrant model
 14733 ;;
 14734                           
 14735                           	psect	text37
 14736  009B0C                     __ptext37:
 14737                           	callstack 0
 14738  009B0C                     _StopOrder:
 14739                           	callstack 22
 14740                           
 14741                           ;sm_ControlGate_MC50.c: 99:    var_sys.StateMotor = Stopped;
 14742                           
 14743                           ;incstack = 0
 14744  009B0C  0E00               	movlw	0
 14745  009B0E  0101               	movlb	1	; () banked
 14746  009B10  6F00               	movwf	_var_sys& (0+255),b	;volatile
 14747                           
 14748                           ; BSR set to: 1
 14749                           ;sm_ControlGate_MC50.c: 100:    sm_send_event(&controlGate_stateMachine, ev_StopGate);
 14750  009B12  0EE7               	movlw	low _controlGate_stateMachine
 14751  009B14  6E12               	movwf	sm_send_event@psm^0,c
 14752  009B16  0E01               	movlw	high _controlGate_stateMachine
 14753  009B18  6E13               	movwf	(sm_send_event@psm+1)^0,c
 14754  009B1A  0E00               	movlw	0
 14755  009B1C  6E15               	movwf	(sm_send_event@event+1)^0,c
 14756  009B1E  0E0D               	movlw	13
 14757  009B20  6E14               	movwf	sm_send_event@event^0,c
 14758  009B22  ECCD  F046         	call	_sm_send_event	;wreg free
 14759  009B26  0012               	return		;funcret
 14760  009B28                     __end_of_StopOrder:
 14761                           	callstack 0
 14762                           
 14763 ;; *************** function _GetSecurityStateInClosing *****************
 14764 ;; Defined at:
 14765 ;;		line 776 in file "inputs_MC50.c"
 14766 ;; Parameters:    Size  Location     Type
 14767 ;;		None
 14768 ;; Auto vars:     Size  Location     Type
 14769 ;;		None
 14770 ;; Return value:  Size  Location     Type
 14771 ;;                  1    wreg      enum E10564
 14772 ;; Registers used:
 14773 ;;		wreg, status,2, status,0, cstack
 14774 ;; Tracked objects:
 14775 ;;		On entry : 0/0
 14776 ;;		On exit  : 3E/0
 14777 ;;		Unchanged: 0/0
 14778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14779 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14782 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14783 ;;Total ram usage:        0 bytes
 14784 ;; Hardware stack levels used: 1
 14785 ;; Hardware stack levels required when called: 5
 14786 ;; This function calls:
 14787 ;;		_SetSegmentValueIntermitent
 14788 ;; This function is called by:
 14789 ;;		_actionZone_Opening
 14790 ;;		_actionZone_Opened
 14791 ;;		_actionZone_Closing
 14792 ;; This function uses a non-reentrant model
 14793 ;;
 14794                           
 14795                           	psect	text38
 14796  007DCA                     __ptext38:
 14797                           	callstack 0
 14798  007DCA                     _GetSecurityStateInClosing:
 14799                           	callstack 23
 14800                           
 14801                           ;inputs_MC50.c: 786:      if((var_sys_NVM.securityBandIsON == 1) && (var_sys.SecurityBar
      +                          IsObstructed == YES)&&(var_sys_NVM.securityBandInOpen == 0)&& (var_sys_NVM.Stopboton == 
      +                          0))
 14802                           
 14803                           ;incstack = 0
 14804  007DCA  0100               	movlb	0	; () banked
 14805  007DCC  05A1               	decf	(_var_sys_NVM+9)& (0+255),w,b	;volatile
 14806  007DCE  A4D8               	btfss	status,2,c
 14807  007DD0  D01B               	goto	l21465
 14808                           
 14809                           ; BSR set to: 0
 14810  007DD2  0101               	movlb	1	; () banked
 14811  007DD4  0502               	decf	(_var_sys+2)& (0+255),w,b	;volatile
 14812  007DD6  A4D8               	btfss	status,2,c
 14813  007DD8  D017               	goto	l21465
 14814                           
 14815                           ; BSR set to: 1
 14816  007DDA  0100               	movlb	0	; () banked
 14817  007DDC  51A3               	movf	(_var_sys_NVM+11)& (0+255),w,b	;volatile
 14818  007DDE  A4D8               	btfss	status,2,c
 14819  007DE0  D013               	goto	l21465
 14820                           
 14821                           ; BSR set to: 0
 14822  007DE2  51AE               	movf	(_var_sys_NVM+22)& (0+255),w,b	;volatile
 14823  007DE4  A4D8               	btfss	status,2,c
 14824  007DE6  D010               	goto	l21465
 14825                           
 14826                           ; BSR set to: 0
 14827                           ;inputs_MC50.c: 787:     {;inputs_MC50.c: 790:         ts_system.timeSinalizationDigit=(
      +                           200/50);
 14828  007DE8  0E00               	movlw	0
 14829  007DEA  0101               	movlb	1	; () banked
 14830  007DEC  6FAC               	movwf	(_ts_system+13)& (0+255),b	;volatile
 14831  007DEE  0E04               	movlw	4
 14832  007DF0  6FAB               	movwf	(_ts_system+12)& (0+255),b	;volatile
 14833                           
 14834                           ; BSR set to: 1
 14835                           ;inputs_MC50.c: 791:         SetSegmentValueIntermitent(dL,dA,(1000/50));
 14836  007DF2  0E0A               	movlw	10
 14837  007DF4  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 14838  007DF6  0E00               	movlw	0
 14839  007DF8  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 14840  007DFA  0E14               	movlw	20
 14841  007DFC  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 14842  007DFE  0E12               	movlw	18
 14843  007E00  EC8B  F04B         	call	_SetSegmentValueIntermitent
 14844  007E04                     l21459:
 14845                           
 14846                           ; BSR set to: 1
 14847                           ;inputs_MC50.c: 792:         return YES;
 14848  007E04  0E01               	movlw	1
 14849  007E06  0012               	return	
 14850  007E08                     l21465:
 14851  007E08  0100               	movlb	0	; () banked
 14852  007E0A  05AE               	decf	(_var_sys_NVM+22)& (0+255),w,b	;volatile
 14853  007E0C  A4D8               	btfss	status,2,c
 14854  007E0E  D013               	goto	l21479
 14855                           
 14856                           ; BSR set to: 0
 14857  007E10  0101               	movlb	1	; () banked
 14858  007E12  0502               	decf	(_var_sys+2)& (0+255),w,b	;volatile
 14859  007E14  A4D8               	btfss	status,2,c
 14860  007E16  D00F               	goto	l21479
 14861                           
 14862                           ; BSR set to: 1
 14863                           ;inputs_MC50.c: 795:     {;inputs_MC50.c: 797:         ts_system.timeSinalizationDigit=(
      +                           200/50);
 14864  007E18  0E00               	movlw	0
 14865  007E1A  6FAC               	movwf	(_ts_system+13)& (0+255),b	;volatile
 14866  007E1C  0E04               	movlw	4
 14867  007E1E  6FAB               	movwf	(_ts_system+12)& (0+255),b	;volatile
 14868                           
 14869                           ; BSR set to: 1
 14870                           ;inputs_MC50.c: 798:         SetSegmentValueIntermitent(d5,dt,(1000/50));
 14871  007E20  0E15               	movlw	21
 14872  007E22  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 14873  007E24  0E00               	movlw	0
 14874  007E26  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 14875  007E28  0E14               	movlw	20
 14876  007E2A  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 14877  007E2C  0E05               	movlw	5
 14878  007E2E  EC8B  F04B         	call	_SetSegmentValueIntermitent
 14879                           
 14880                           ; BSR set to: 1
 14881                           ;inputs_MC50.c: 799:         return ST;
 14882  007E32  0E02               	movlw	2
 14883  007E34  0012               	return	
 14884  007E36                     l21479:
 14885  007E36  0100               	movlb	0	; () banked
 14886  007E38  059F               	decf	(_var_sys_NVM+7)& (0+255),w,b	;volatile
 14887  007E3A  A4D8               	btfss	status,2,c
 14888  007E3C  D017               	goto	l21495
 14889                           
 14890                           ; BSR set to: 0
 14891  007E3E  0101               	movlb	1	; () banked
 14892  007E40  0501               	decf	(_var_sys+1)& (0+255),w,b	;volatile
 14893  007E42  A4D8               	btfss	status,2,c
 14894  007E44  D013               	goto	l21495
 14895                           
 14896                           ; BSR set to: 1
 14897  007E46  0100               	movlb	0	; () banked
 14898  007E48  51A0               	movf	(_var_sys_NVM+8)& (0+255),w,b	;volatile
 14899  007E4A  A4D8               	btfss	status,2,c
 14900  007E4C  D00F               	goto	l21495
 14901                           
 14902                           ; BSR set to: 0
 14903                           ;inputs_MC50.c: 803:     {;inputs_MC50.c: 805:         ts_system.timeSinalizationDigit=(
      +                           200/50);
 14904  007E4E  0E00               	movlw	0
 14905  007E50  0101               	movlb	1	; () banked
 14906  007E52  6FAC               	movwf	(_ts_system+13)& (0+255),b	;volatile
 14907  007E54  0E04               	movlw	4
 14908  007E56  6FAB               	movwf	(_ts_system+12)& (0+255),b	;volatile
 14909                           
 14910                           ; BSR set to: 1
 14911                           ;inputs_MC50.c: 806:         SetSegmentValueIntermitent(dL,dE,(1000/50));
 14912  007E58  0E0E               	movlw	14
 14913  007E5A  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 14914  007E5C  0E00               	movlw	0
 14915  007E5E  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 14916  007E60  0E14               	movlw	20
 14917  007E62  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 14918  007E64  0E12               	movlw	18
 14919  007E66  EC8B  F04B         	call	_SetSegmentValueIntermitent
 14920  007E6A  D7CC               	goto	l21459
 14921  007E6C                     l21495:
 14922                           
 14923                           ;inputs_MC50.c: 811:     {;inputs_MC50.c: 812:         return NO;
 14924  007E6C  0E00               	movlw	0
 14925  007E6E  0012               	return		;funcret
 14926  007E70                     __end_of_GetSecurityStateInClosing:
 14927                           	callstack 0
 14928                           
 14929 ;; *************** function _actionZone_Closed *****************
 14930 ;; Defined at:
 14931 ;;		line 327 in file "sm_ControlGate_MC50.c"
 14932 ;; Parameters:    Size  Location     Type
 14933 ;;		None
 14934 ;; Auto vars:     Size  Location     Type
 14935 ;;  typeOpenOrde    1   32[COMRAM] enum E10372
 14936 ;;  securityOpen    1   31[COMRAM] enum E10397
 14937 ;; Return value:  Size  Location     Type
 14938 ;;                  1    wreg      void 
 14939 ;; Registers used:
 14940 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14941 ;; Tracked objects:
 14942 ;;		On entry : 3F/0
 14943 ;;		On exit  : 0/0
 14944 ;;		Unchanged: 0/0
 14945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14947 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14949 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14950 ;;Total ram usage:        2 bytes
 14951 ;; Hardware stack levels used: 1
 14952 ;; Hardware stack levels required when called: 8
 14953 ;; This function calls:
 14954 ;;		_GetOpenOrder
 14955 ;;		_GetSecurityStateInOpening
 14956 ;;		_InitFullAutoTime
 14957 ;;		_InitWalkAutoTime
 14958 ;;		_OpenFullOrder
 14959 ;;		_OpenWalkOrder
 14960 ;;		_WaitPreFlash
 14961 ;;		_sm_send_event
 14962 ;; This function is called by:
 14963 ;;		_sm_execute_ControlGate
 14964 ;; This function uses a non-reentrant model
 14965 ;;
 14966                           
 14967                           	psect	text39
 14968  007D20                     __ptext39:
 14969                           	callstack 0
 14970  007D20                     _actionZone_Closed:
 14971                           	callstack 21
 14972                           
 14973                           ; BSR set to: 0
 14974                           ;sm_ControlGate_MC50.c: 331:     if (main_stateMachine.current_state != st_MenuConfigura
      +                          tion) {
 14975                           
 14976                           ;incstack = 0
 14977  007D20  0101               	movlb	1	; () banked
 14978  007D22  05F2               	decf	_main_stateMachine& (0+255),w,b
 14979  007D24  11F3               	iorwf	(_main_stateMachine+1)& (0+255),w,b
 14980  007D26  B4D8               	btfsc	status,2,c
 14981  007D28  0012               	return	
 14982                           
 14983                           ; BSR set to: 1
 14984                           ;sm_ControlGate_MC50.c: 334:         TypeCMD typeOpenOrder = GetOpenOrder();
 14985  007D2A  EC9E  F02E         	call	_GetOpenOrder	;wreg free
 14986  007D2E  6E21               	movwf	actionZone_Closed@typeOpenOrder^0,c
 14987                           
 14988                           ;sm_ControlGate_MC50.c: 336:         StateEnum securityOpening = GetSecurityStateInOpeni
      +                          ng();
 14989  007D30  EC38  F03F         	call	_GetSecurityStateInOpening	;wreg free
 14990  007D34  6E20               	movwf	actionZone_Closed@securityOpening^0,c
 14991                           
 14992                           ;sm_ControlGate_MC50.c: 338:         if (var_sys_NVM.homemPresente == 1) {
 14993  007D36  0100               	movlb	0	; () banked
 14994  007D38  05A8               	decf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 14995  007D3A  A4D8               	btfss	status,2,c
 14996  007D3C  D018               	goto	l23017
 14997                           
 14998                           ; BSR set to: 0
 14999                           ;sm_ControlGate_MC50.c: 344:             if (typeOpenOrder == TypeFullOpen && var_sys.Fi
      +                          mCurso_OpenIsEnabled == NO && securityOpening == NO) {
 15000  007D3E  0E03               	movlw	3
 15001  007D40  1821               	xorwf	actionZone_Closed@typeOpenOrder^0,w,c
 15002  007D42  A4D8               	btfss	status,2,c
 15003  007D44  0012               	return	
 15004                           
 15005                           ; BSR set to: 0
 15006  007D46  0101               	movlb	1	; () banked
 15007  007D48  5104               	movf	(_var_sys+4)& (0+255),w,b	;volatile
 15008  007D4A  A4D8               	btfss	status,2,c
 15009  007D4C  0012               	return	
 15010                           
 15011                           ; BSR set to: 1
 15012  007D4E  5020               	movf	actionZone_Closed@securityOpening^0,w,c
 15013  007D50  A4D8               	btfss	status,2,c
 15014  007D52  0012               	return	
 15015                           
 15016                           ; BSR set to: 1
 15017                           ;sm_ControlGate_MC50.c: 346:                 OpenFullOrder();
 15018  007D54  ECE4  F04C         	call	_OpenFullOrder	;wreg free
 15019  007D58                     l23015:
 15020                           
 15021                           ;sm_ControlGate_MC50.c: 347:                 sm_send_event(&main_stateMachine, ev_MotorI
      +                          sOpen);
 15022  007D58  0EF2               	movlw	low _main_stateMachine
 15023  007D5A  6E12               	movwf	sm_send_event@psm^0,c
 15024  007D5C  0E01               	movlw	high _main_stateMachine
 15025  007D5E  6E13               	movwf	(sm_send_event@psm+1)^0,c
 15026  007D60  0E00               	movlw	0
 15027  007D62  6E15               	movwf	(sm_send_event@event+1)^0,c
 15028  007D64  0E11               	movlw	17
 15029  007D66  6E14               	movwf	sm_send_event@event^0,c
 15030  007D68  ECCD  F046         	call	_sm_send_event	;wreg free
 15031  007D6C  0012               	return	
 15032  007D6E                     l23017:
 15033                           
 15034                           ; BSR set to: 0
 15035  007D6E  0421               	decf	actionZone_Closed@typeOpenOrder^0,w,c
 15036  007D70  B4D8               	btfsc	status,2,c
 15037  007D72  D004               	goto	u26840
 15038                           
 15039                           ; BSR set to: 0
 15040  007D74  0E03               	movlw	3
 15041  007D76  1821               	xorwf	actionZone_Closed@typeOpenOrder^0,w,c
 15042  007D78  A4D8               	btfss	status,2,c
 15043  007D7A  D017               	goto	l23037
 15044  007D7C                     u26840:
 15045                           
 15046                           ; BSR set to: 0
 15047  007D7C  5020               	movf	actionZone_Closed@securityOpening^0,w,c
 15048  007D7E  A4D8               	btfss	status,2,c
 15049  007D80  D014               	goto	l23037
 15050                           
 15051                           ; BSR set to: 0
 15052  007D82  0101               	movlb	1	; () banked
 15053  007D84  511D               	movf	(_var_sys+29)& (0+255),w,b	;volatile
 15054  007D86  A4D8               	btfss	status,2,c
 15055  007D88  D010               	goto	l23037
 15056                           
 15057                           ; BSR set to: 1
 15058                           ;sm_ControlGate_MC50.c: 353:             if (var_sys_NVM.flashRGBMode == rgb_pre){
 15059  007D8A  0E02               	movlw	2
 15060  007D8C  0100               	movlb	0	; () banked
 15061  007D8E  19B1               	xorwf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 15062  007D90  A4D8               	btfss	status,2,c
 15063  007D92  D006               	goto	l23031
 15064                           
 15065                           ; BSR set to: 0
 15066                           ;sm_ControlGate_MC50.c: 354:                 var_sys.preflashingcontrol = YES;
 15067  007D94  0E01               	movlw	1
 15068  007D96  0101               	movlb	1	; () banked
 15069  007D98  6F1D               	movwf	(_var_sys+29)& (0+255),b	;volatile
 15070                           
 15071                           ; BSR set to: 1
 15072                           ;sm_ControlGate_MC50.c: 355:                 WaitPreFlash();
 15073  007D9A  ECBA  F044         	call	_WaitPreFlash	;wreg free
 15074                           
 15075                           ;sm_ControlGate_MC50.c: 356:             }
 15076  007D9E  0012               	return	
 15077  007DA0                     l23031:
 15078                           
 15079                           ; BSR set to: 0
 15080                           ;sm_ControlGate_MC50.c: 358:                 OpenFullOrder();
 15081  007DA0  ECE4  F04C         	call	_OpenFullOrder	;wreg free
 15082                           
 15083                           ;sm_ControlGate_MC50.c: 359:                InitFullAutoTime();
 15084  007DA4  ECD8  F04D         	call	_InitFullAutoTime	;wreg free
 15085  007DA8  D7D7               	goto	l23015
 15086  007DAA                     l23037:
 15087  007DAA  0E02               	movlw	2
 15088  007DAC  1821               	xorwf	actionZone_Closed@typeOpenOrder^0,w,c
 15089  007DAE  A4D8               	btfss	status,2,c
 15090  007DB0  0012               	return	
 15091  007DB2  5020               	movf	actionZone_Closed@securityOpening^0,w,c
 15092  007DB4  A4D8               	btfss	status,2,c
 15093  007DB6  0012               	return	
 15094  007DB8  0100               	movlb	0	; () banked
 15095  007DBA  519C               	movf	(_var_sys_NVM+4)& (0+255),w,b	;volatile
 15096  007DBC  B4D8               	btfsc	status,2,c
 15097  007DBE  0012               	return	
 15098                           
 15099                           ; BSR set to: 0
 15100                           ;sm_ControlGate_MC50.c: 367:             OpenWalkOrder();
 15101  007DC0  EC62  F045         	call	_OpenWalkOrder	;wreg free
 15102                           
 15103                           ;sm_ControlGate_MC50.c: 368:             InitWalkAutoTime();
 15104  007DC4  EC5C  F04E         	call	_InitWalkAutoTime	;wreg free
 15105  007DC8  D7C7               	goto	l23015
 15106  007DCA                     __end_of_actionZone_Closed:
 15107                           	callstack 0
 15108                           
 15109 ;; *************** function _WaitPreFlash *****************
 15110 ;; Defined at:
 15111 ;;		line 41 in file "sm_ControlGate_MC50.c"
 15112 ;; Parameters:    Size  Location     Type
 15113 ;;		None
 15114 ;; Auto vars:     Size  Location     Type
 15115 ;;		None
 15116 ;; Return value:  Size  Location     Type
 15117 ;;                  1    wreg      void 
 15118 ;; Registers used:
 15119 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15120 ;; Tracked objects:
 15121 ;;		On entry : 3F/1
 15122 ;;		On exit  : 3F/1
 15123 ;;		Unchanged: 0/0
 15124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15125 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15126 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15128 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15129 ;;Total ram usage:        0 bytes
 15130 ;; Hardware stack levels used: 1
 15131 ;; Hardware stack levels required when called: 7
 15132 ;; This function calls:
 15133 ;;		_InitFullAutoTime
 15134 ;;		_OpenFullOrder
 15135 ;;		_sm_send_event
 15136 ;; This function is called by:
 15137 ;;		_sm_execute_ControlGate
 15138 ;;		_actionZone_Closed
 15139 ;; This function uses a non-reentrant model
 15140 ;;
 15141                           
 15142                           	psect	text40
 15143  008974                     __ptext40:
 15144                           	callstack 0
 15145  008974                     _WaitPreFlash:
 15146                           	callstack 21
 15147                           
 15148                           ; BSR set to: 1
 15149                           ;sm_ControlGate_MC50.c: 44:     if ((var_sys_NVM.flashRGBMode == rgb_pre) && (var_sys.pr
      +                          eflashingcontrol == YES) && (ts_system.timewaitFlashRGB <=0) && (aux_i == 0))
 15150                           
 15151                           ;incstack = 0
 15152  008974  0E02               	movlw	2
 15153  008976  0100               	movlb	0	; () banked
 15154  008978  19B1               	xorwf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 15155  00897A  A4D8               	btfss	status,2,c
 15156  00897C  D014               	goto	l21709
 15157                           
 15158                           ; BSR set to: 0
 15159  00897E  0101               	movlb	1	; () banked
 15160  008980  051D               	decf	(_var_sys+29)& (0+255),w,b	;volatile
 15161  008982  A4D8               	btfss	status,2,c
 15162  008984  D010               	goto	l21709
 15163                           
 15164                           ; BSR set to: 1
 15165  008986  BFE6               	btfsc	(_ts_system+71)& (0+255),7,b	;volatile
 15166  008988  D005               	goto	u25270
 15167  00898A  51E6               	movf	(_ts_system+71)& (0+255),w,b	;volatile
 15168  00898C  E10C               	bnz	l21709
 15169  00898E  05E5               	decf	(_ts_system+70)& (0+255),w,b	;volatile
 15170  008990  B0D8               	btfsc	status,0,c
 15171  008992  D009               	goto	l21709
 15172  008994                     u25270:
 15173                           
 15174                           ; BSR set to: 1
 15175  008994  5191               	movf	_aux_i& (0+255),w,b
 15176  008996  A4D8               	btfss	status,2,c
 15177  008998  D006               	goto	l21709
 15178                           
 15179                           ; BSR set to: 1
 15180                           ;sm_ControlGate_MC50.c: 45:         {;sm_ControlGate_MC50.c: 46:             ts_system.t
      +                          imewaitFlashRGB = (1000/50) *3;
 15181  00899A  0E00               	movlw	0
 15182  00899C  6FE6               	movwf	(_ts_system+71)& (0+255),b	;volatile
 15183  00899E  0E3C               	movlw	60
 15184  0089A0  6FE5               	movwf	(_ts_system+70)& (0+255),b	;volatile
 15185                           
 15186                           ;sm_ControlGate_MC50.c: 47:             aux_i=1;
 15187  0089A2  0E01               	movlw	1
 15188  0089A4  6F91               	movwf	_aux_i& (0+255),b
 15189  0089A6                     l21709:
 15190                           
 15191                           ;sm_ControlGate_MC50.c: 50:     if ((ts_system.timewaitFlashRGB <= 0) && (aux_i==1 ))
 15192  0089A6  0101               	movlb	1	; () banked
 15193  0089A8  BFE6               	btfsc	(_ts_system+71)& (0+255),7,b	;volatile
 15194  0089AA  D005               	goto	u25290
 15195  0089AC  51E6               	movf	(_ts_system+71)& (0+255),w,b	;volatile
 15196  0089AE  E119               	bnz	l2585
 15197  0089B0  05E5               	decf	(_ts_system+70)& (0+255),w,b	;volatile
 15198  0089B2  B0D8               	btfsc	status,0,c
 15199  0089B4  0012               	return	
 15200  0089B6                     u25290:
 15201                           
 15202                           ; BSR set to: 1
 15203  0089B6  0591               	decf	_aux_i& (0+255),w,b
 15204  0089B8  A4D8               	btfss	status,2,c
 15205  0089BA  0012               	return	
 15206                           
 15207                           ; BSR set to: 1
 15208                           ;sm_ControlGate_MC50.c: 51:         {;sm_ControlGate_MC50.c: 54:                 var_sys
      +                          .preflashingcontrol = NO;
 15209  0089BC  0E00               	movlw	0
 15210  0089BE  6F1D               	movwf	(_var_sys+29)& (0+255),b	;volatile
 15211                           
 15212                           ; BSR set to: 1
 15213                           ;sm_ControlGate_MC50.c: 55:                 OpenFullOrder();
 15214  0089C0  ECE4  F04C         	call	_OpenFullOrder	;wreg free
 15215                           
 15216                           ;sm_ControlGate_MC50.c: 56:                 InitFullAutoTime();
 15217  0089C4  ECD8  F04D         	call	_InitFullAutoTime	;wreg free
 15218                           
 15219                           ; BSR set to: 0
 15220                           ;sm_ControlGate_MC50.c: 57:                 sm_send_event(&main_stateMachine, ev_MotorIs
      +                          Open);
 15221  0089C8  0EF2               	movlw	low _main_stateMachine
 15222  0089CA  6E12               	movwf	sm_send_event@psm^0,c
 15223  0089CC  0E01               	movlw	high _main_stateMachine
 15224  0089CE  6E13               	movwf	(sm_send_event@psm+1)^0,c
 15225  0089D0  0E00               	movlw	0
 15226  0089D2  6E15               	movwf	(sm_send_event@event+1)^0,c
 15227  0089D4  0E11               	movlw	17
 15228  0089D6  6E14               	movwf	sm_send_event@event^0,c
 15229  0089D8  ECCD  F046         	call	_sm_send_event	;wreg free
 15230                           
 15231                           ;sm_ControlGate_MC50.c: 58:                 aux_i=0;
 15232  0089DC  0E00               	movlw	0
 15233  0089DE  0101               	movlb	1	; () banked
 15234  0089E0  6F91               	movwf	_aux_i& (0+255),b
 15235  0089E2                     l2585:
 15236                           
 15237                           ; BSR set to: 1
 15238  0089E2  0012               	return		;funcret
 15239  0089E4                     __end_of_WaitPreFlash:
 15240                           	callstack 0
 15241                           
 15242 ;; *************** function _OpenFullOrder *****************
 15243 ;; Defined at:
 15244 ;;		line 29 in file "sm_ControlGate_MC50.c"
 15245 ;; Parameters:    Size  Location     Type
 15246 ;;		None
 15247 ;; Auto vars:     Size  Location     Type
 15248 ;;		None
 15249 ;; Return value:  Size  Location     Type
 15250 ;;                  1    wreg      void 
 15251 ;; Registers used:
 15252 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15253 ;; Tracked objects:
 15254 ;;		On entry : 3E/1
 15255 ;;		On exit  : 3E/0
 15256 ;;		Unchanged: 0/0
 15257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15261 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15262 ;;Total ram usage:        0 bytes
 15263 ;; Hardware stack levels used: 1
 15264 ;; Hardware stack levels required when called: 6
 15265 ;; This function calls:
 15266 ;;		_InitSoftStart
 15267 ;;		_sm_send_event
 15268 ;; This function is called by:
 15269 ;;		_WaitPreFlash
 15270 ;;		_actionZone_Closed
 15271 ;;		_actionZone_Opened
 15272 ;;		_actionZone_Closing
 15273 ;; This function uses a non-reentrant model
 15274 ;;
 15275                           
 15276                           	psect	text41
 15277  0099C8                     __ptext41:
 15278                           	callstack 0
 15279  0099C8                     _OpenFullOrder:
 15280                           	callstack 22
 15281                           
 15282                           ;sm_ControlGate_MC50.c: 32:     var_sys.StateMotor = InOpenFull;
 15283                           
 15284                           ; BSR set to: 1
 15285                           ;incstack = 0
 15286  0099C8  0E01               	movlw	1
 15287  0099CA  0101               	movlb	1	; () banked
 15288  0099CC  6F00               	movwf	_var_sys& (0+255),b	;volatile
 15289                           
 15290                           ; BSR set to: 1
 15291                           ;sm_ControlGate_MC50.c: 33:     sm_send_event(&controlGate_stateMachine, ev_OpenGate);
 15292  0099CE  0EE7               	movlw	low _controlGate_stateMachine
 15293  0099D0  6E12               	movwf	sm_send_event@psm^0,c
 15294  0099D2  0E01               	movlw	high _controlGate_stateMachine
 15295  0099D4  6E13               	movwf	(sm_send_event@psm+1)^0,c
 15296  0099D6  0E00               	movlw	0
 15297  0099D8  6E15               	movwf	(sm_send_event@event+1)^0,c
 15298  0099DA  0E0C               	movlw	12
 15299  0099DC  6E14               	movwf	sm_send_event@event^0,c
 15300  0099DE  ECCD  F046         	call	_sm_send_event	;wreg free
 15301                           
 15302                           ;sm_ControlGate_MC50.c: 34:     var_sys.LastState = InOpenFull;
 15303  0099E2  0E01               	movlw	1
 15304  0099E4  0101               	movlb	1	; () banked
 15305  0099E6  6F0B               	movwf	(_var_sys+11)& (0+255),b	;volatile
 15306                           
 15307                           ; BSR set to: 1
 15308                           ;sm_ControlGate_MC50.c: 35:     InitSoftStart();
 15309  0099E8  ECFB  F046         	call	_InitSoftStart	;wreg free
 15310  0099EC  0012               	return		;funcret
 15311  0099EE                     __end_of_OpenFullOrder:
 15312                           	callstack 0
 15313                           
 15314 ;; *************** function _InitFullAutoTime *****************
 15315 ;; Defined at:
 15316 ;;		line 109 in file "sm_ControlGate_MC50.c"
 15317 ;; Parameters:    Size  Location     Type
 15318 ;;		None
 15319 ;; Auto vars:     Size  Location     Type
 15320 ;;		None
 15321 ;; Return value:  Size  Location     Type
 15322 ;;                  1    wreg      void 
 15323 ;; Registers used:
 15324 ;;		wreg, status,2, status,0, prodl, prodh
 15325 ;; Tracked objects:
 15326 ;;		On entry : 3E/0
 15327 ;;		On exit  : 3F/0
 15328 ;;		Unchanged: 0/0
 15329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15330 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15331 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15333 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15334 ;;Total ram usage:        0 bytes
 15335 ;; Hardware stack levels used: 1
 15336 ;; Hardware stack levels required when called: 4
 15337 ;; This function calls:
 15338 ;;		Nothing
 15339 ;; This function is called by:
 15340 ;;		_WaitPreFlash
 15341 ;;		_actionZone_Closed
 15342 ;;		_actionZone_Opening
 15343 ;;		_actionZone_Opened
 15344 ;;		_actionZone_Closing
 15345 ;; This function uses a non-reentrant model
 15346 ;;
 15347                           
 15348                           	psect	text42
 15349  009BB0                     __ptext42:
 15350                           	callstack 0
 15351  009BB0                     _InitFullAutoTime:
 15352                           	callstack 24
 15353                           
 15354                           ;sm_ControlGate_MC50.c: 111:     if (var_sys_NVM.homemPresente == 0) {
 15355                           
 15356                           ;incstack = 0
 15357  009BB0  0100               	movlb	0	; () banked
 15358  009BB2  51A8               	movf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 15359  009BB4  A4D8               	btfss	status,2,c
 15360  009BB6  0012               	return	
 15361                           
 15362                           ; BSR set to: 0
 15363                           ;sm_ControlGate_MC50.c: 112:         ts_system.timeWaitToClose = ((int) var_sys_NVM.auto
      +                          TimeFullClose * (1000/50));
 15364  009BB8  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 15365  009BBA  0D14               	mullw	20
 15366  009BBC  CFF3 F1B1          	movff	prodl,_ts_system+18	;volatile
 15367  009BC0  CFF4 F1B2          	movff	prodh,_ts_system+19	;volatile
 15368                           
 15369                           ; BSR set to: 0
 15370                           ;sm_ControlGate_MC50.c: 113:         var_sys.AutoCloseActive = var_sys_NVM.autoTimeFullC
      +                          lose;
 15371  009BC4  C09D  F123         	movff	_var_sys_NVM+5,_var_sys+35	;volatile
 15372                           
 15373                           ; BSR set to: 0
 15374  009BC8  0012               	return		;funcret
 15375  009BCA                     __end_of_InitFullAutoTime:
 15376                           	callstack 0
 15377                           
 15378 ;; *************** function _OpenWalkOrder *****************
 15379 ;; Defined at:
 15380 ;;		line 71 in file "sm_ControlGate_MC50.c"
 15381 ;; Parameters:    Size  Location     Type
 15382 ;;		None
 15383 ;; Auto vars:     Size  Location     Type
 15384 ;;  diffTime        2   25[COMRAM] int 
 15385 ;; Return value:  Size  Location     Type
 15386 ;;                  1    wreg      void 
 15387 ;; Registers used:
 15388 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15389 ;; Tracked objects:
 15390 ;;		On entry : 3E/1
 15391 ;;		On exit  : 3E/0
 15392 ;;		Unchanged: 0/0
 15393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15394 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15395 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15396 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15397 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15398 ;;Total ram usage:        4 bytes
 15399 ;; Hardware stack levels used: 1
 15400 ;; Hardware stack levels required when called: 6
 15401 ;; This function calls:
 15402 ;;		_InitSoftStart
 15403 ;;		_sm_send_event
 15404 ;; This function is called by:
 15405 ;;		_actionZone_Closed
 15406 ;;		_actionZone_Opened
 15407 ;;		_actionZone_Closing
 15408 ;; This function uses a non-reentrant model
 15409 ;;
 15410                           
 15411                           	psect	text43
 15412  008AC4                     __ptext43:
 15413                           	callstack 0
 15414  008AC4                     _OpenWalkOrder:
 15415                           	callstack 22
 15416                           
 15417                           ;sm_ControlGate_MC50.c: 72:     int diffTime = ((int) var_sys_NVM.walkTime * (1000/50)) 
      +                          - var_sys.PositionActual ;
 15418                           
 15419                           ; BSR set to: 0
 15420                           ;incstack = 0
 15421  008AC4  0100               	movlb	0	; () banked
 15422  008AC6  519C               	movf	(_var_sys_NVM+4)& (0+255),w,b	;volatile
 15423  008AC8  0D14               	mullw	20
 15424  008ACA  CFF3 F018          	movff	prodl,??_OpenWalkOrder
 15425  008ACE  CFF4 F019          	movff	prodh,??_OpenWalkOrder+1
 15426  008AD2  0101               	movlb	1	; () banked
 15427  008AD4  511E               	movf	(_var_sys+30)& (0+255),w,b	;volatile
 15428  008AD6  5C18               	subwf	??_OpenWalkOrder^0,w,c
 15429  008AD8  6E1A               	movwf	OpenWalkOrder@diffTime^0,c
 15430  008ADA  511F               	movf	(_var_sys+31)& (0+255),w,b	;volatile
 15431  008ADC  5819               	subwfb	(??_OpenWalkOrder+1)^0,w,c
 15432  008ADE  6E1B               	movwf	(OpenWalkOrder@diffTime+1)^0,c
 15433                           
 15434                           ; BSR set to: 1
 15435                           ;sm_ControlGate_MC50.c: 74:     if (diffTime > 0) {
 15436  008AE0  BE1B               	btfsc	(OpenWalkOrder@diffTime+1)^0,7,c
 15437  008AE2  D022               	goto	l21747
 15438  008AE4  501B               	movf	(OpenWalkOrder@diffTime+1)^0,w,c
 15439  008AE6  E103               	bnz	u25310
 15440  008AE8  041A               	decf	OpenWalkOrder@diffTime^0,w,c
 15441  008AEA  A0D8               	btfss	status,0,c
 15442  008AEC  D01D               	goto	l21747
 15443  008AEE                     u25310:
 15444                           
 15445                           ; BSR set to: 1
 15446                           ;sm_ControlGate_MC50.c: 76:         sm_send_event(&controlGate_stateMachine, ev_OpenGate
      +                          );
 15447  008AEE  0EE7               	movlw	low _controlGate_stateMachine
 15448  008AF0  6E12               	movwf	sm_send_event@psm^0,c
 15449  008AF2  0E01               	movlw	high _controlGate_stateMachine
 15450  008AF4  6E13               	movwf	(sm_send_event@psm+1)^0,c
 15451  008AF6  0E00               	movlw	0
 15452  008AF8  6E15               	movwf	(sm_send_event@event+1)^0,c
 15453  008AFA  0E0C               	movlw	12
 15454  008AFC  6E14               	movwf	sm_send_event@event^0,c
 15455  008AFE  ECCD  F046         	call	_sm_send_event	;wreg free
 15456                           
 15457                           ;sm_ControlGate_MC50.c: 77:         if (var_sys.Statedoorcontrol == st_Closed){
 15458  008B02  0101               	movlb	1	; () banked
 15459  008B04  051C               	decf	(_var_sys+28)& (0+255),w,b	;volatile
 15460  008B06  A4D8               	btfss	status,2,c
 15461  008B08  D005               	goto	l21741
 15462                           
 15463                           ; BSR set to: 1
 15464                           ;sm_ControlGate_MC50.c: 78:            ts_system.timeOpenWalk = diffTime;
 15465  008B0A  C01A  F1AF         	movff	OpenWalkOrder@diffTime,_ts_system+16	;volatile
 15466  008B0E  C01B  F1B0         	movff	OpenWalkOrder@diffTime+1,_ts_system+17	;volatile
 15467                           
 15468                           ;sm_ControlGate_MC50.c: 79:         }
 15469  008B12  D006               	goto	l21743
 15470  008B14                     l21741:
 15471                           
 15472                           ; BSR set to: 1
 15473                           ;sm_ControlGate_MC50.c: 81:             ts_system.timeOpenWalk = diffTime + (1000/50);
 15474  008B14  0E14               	movlw	20
 15475  008B16  241A               	addwf	OpenWalkOrder@diffTime^0,w,c
 15476  008B18  6FAF               	movwf	(_ts_system+16)& (0+255),b	;volatile
 15477  008B1A  0E00               	movlw	0
 15478  008B1C  201B               	addwfc	(OpenWalkOrder@diffTime+1)^0,w,c
 15479  008B1E  6FB0               	movwf	(_ts_system+17)& (0+255),b	;volatile
 15480  008B20                     l21743:
 15481                           
 15482                           ; BSR set to: 1
 15483                           ;sm_ControlGate_MC50.c: 83:         var_sys.StateMotor = InOpenWalk;
 15484  008B20  0E02               	movlw	2
 15485  008B22  6F00               	movwf	_var_sys& (0+255),b	;volatile
 15486                           
 15487                           ; BSR set to: 1
 15488                           ;sm_ControlGate_MC50.c: 84:         var_sys.Timewalkisactived = YES;
 15489  008B24  0E01               	movlw	1
 15490  008B26  6F4A               	movwf	(_var_sys+74)& (0+255),b	;volatile
 15491  008B28                     l21747:
 15492                           
 15493                           ; BSR set to: 1
 15494                           ;sm_ControlGate_MC50.c: 92:     var_sys.LastState = InOpenWalk;
 15495  008B28  0E02               	movlw	2
 15496  008B2A  6F0B               	movwf	(_var_sys+11)& (0+255),b	;volatile
 15497                           
 15498                           ; BSR set to: 1
 15499                           ;sm_ControlGate_MC50.c: 93:     InitSoftStart();
 15500  008B2C  ECFB  F046         	call	_InitSoftStart	;wreg free
 15501  008B30  0012               	return		;funcret
 15502  008B32                     __end_of_OpenWalkOrder:
 15503                           	callstack 0
 15504                           
 15505 ;; *************** function _sm_send_event *****************
 15506 ;; Defined at:
 15507 ;;		line 34 in file "sm_common_MC50.c"
 15508 ;; Parameters:    Size  Location     Type
 15509 ;;  psm             2   17[COMRAM] PTR struct .
 15510 ;;		 -> controlLearning_stateMachine(11), controlGate_stateMachine(11), main_stateMachine(11), menuConfiguration_stateMa
      +chine(11), 
 15511 ;;  event           2   19[COMRAM] int 
 15512 ;; Auto vars:     Size  Location     Type
 15513 ;;		None
 15514 ;; Return value:  Size  Location     Type
 15515 ;;                  1    wreg      void 
 15516 ;; Registers used:
 15517 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15518 ;; Tracked objects:
 15519 ;;		On entry : 0/0
 15520 ;;		On exit  : 0/0
 15521 ;;		Unchanged: 0/0
 15522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15523 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15524 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15525 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15526 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15527 ;;Total ram usage:        6 bytes
 15528 ;; Hardware stack levels used: 1
 15529 ;; Hardware stack levels required when called: 5
 15530 ;; This function calls:
 15531 ;;		_sm_get_current_state
 15532 ;; This function is called by:
 15533 ;;		_OpenFullOrder
 15534 ;;		_WaitPreFlash
 15535 ;;		_CloseOrder
 15536 ;;		_OpenWalkOrder
 15537 ;;		_StopOrder
 15538 ;;		_sm_execute_ControlGate
 15539 ;;		_actionZone_Closed
 15540 ;;		_actionZone_Opening
 15541 ;;		_actionZone_Closing
 15542 ;;		_sm_execute_ControlLearning
 15543 ;;		_sm_execute_main
 15544 ;;		_sm_execute_menuConfiguration
 15545 ;;		_setValueToEdit
 15546 ;;		_controlSelectRemote
 15547 ;;		_controlSaveRemote
 15548 ;; This function uses a non-reentrant model
 15549 ;;
 15550                           
 15551                           	psect	text44
 15552  008D9A                     __ptext44:
 15553                           	callstack 0
 15554  008D9A                     _sm_send_event:
 15555                           	callstack 24
 15556                           
 15557                           ;sm_common_MC50.c: 34: void sm_send_event(sm_t *psm, int event);sm_common_MC50.c: 35: {;
      +                          sm_common_MC50.c: 36:  if(( psm->parent_machine == ((void*)0)) || (sm_get_current_state(
      +                          psm->parent_machine)==psm->parent_state))
 15558                           
 15559                           ;incstack = 0
 15560  008D9A  EE20 F007          	lfsr	2,7
 15561  008D9E  5012               	movf	sm_send_event@psm^0,w,c
 15562  008DA0  26D9               	addwf	fsr2l,f,c
 15563  008DA2  5013               	movf	(sm_send_event@psm+1)^0,w,c
 15564  008DA4  22DA               	addwfc	fsr2h,f,c
 15565  008DA6  50DE               	movf	postinc2,w,c
 15566  008DA8  10DE               	iorwf	postinc2,w,c
 15567  008DAA  B4D8               	btfsc	status,2,c
 15568  008DAC  D019               	goto	u23660
 15569  008DAE  EE20 F007          	lfsr	2,7
 15570  008DB2  5012               	movf	sm_send_event@psm^0,w,c
 15571  008DB4  26D9               	addwf	fsr2l,f,c
 15572  008DB6  5013               	movf	(sm_send_event@psm+1)^0,w,c
 15573  008DB8  22DA               	addwfc	fsr2h,f,c
 15574  008DBA  CFDE F010          	movff	postinc2,sm_get_current_state@psm
 15575  008DBE  CFDD F011          	movff	postdec2,sm_get_current_state@psm+1
 15576  008DC2  EC7A  F04E         	call	_sm_get_current_state	;wreg free
 15577  008DC6  EE20 F009          	lfsr	2,9
 15578  008DCA  5012               	movf	sm_send_event@psm^0,w,c
 15579  008DCC  26D9               	addwf	fsr2l,f,c
 15580  008DCE  5013               	movf	(sm_send_event@psm+1)^0,w,c
 15581  008DD0  22DA               	addwfc	fsr2h,f,c
 15582  008DD2  50DE               	movf	postinc2,w,c
 15583  008DD4  1810               	xorwf	?_sm_get_current_state^0,w,c
 15584  008DD6  E10E               	bnz	l3517
 15585  008DD8  50DE               	movf	postinc2,w,c
 15586  008DDA  1811               	xorwf	(?_sm_get_current_state+1)^0,w,c
 15587  008DDC  A4D8               	btfss	status,2,c
 15588  008DDE  0012               	return	
 15589  008DE0                     u23660:
 15590                           
 15591                           ;sm_common_MC50.c: 38:  {;sm_common_MC50.c: 39:   psm->last_event = event;
 15592  008DE0  EE20 F004          	lfsr	2,4
 15593  008DE4  5012               	movf	sm_send_event@psm^0,w,c
 15594  008DE6  26D9               	addwf	fsr2l,f,c
 15595  008DE8  5013               	movf	(sm_send_event@psm+1)^0,w,c
 15596  008DEA  22DA               	addwfc	fsr2h,f,c
 15597  008DEC  C014  FFDE         	movff	sm_send_event@event,postinc2
 15598  008DF0  C015  FFDD         	movff	sm_send_event@event+1,postdec2
 15599  008DF4                     l3517:
 15600  008DF4  0012               	return		;funcret
 15601  008DF6                     __end_of_sm_send_event:
 15602                           	callstack 0
 15603                           
 15604 ;; *************** function _sm_get_current_state *****************
 15605 ;; Defined at:
 15606 ;;		line 30 in file "sm_common_MC50.c"
 15607 ;; Parameters:    Size  Location     Type
 15608 ;;  psm             2   15[COMRAM] PTR struct .
 15609 ;;		 -> NULL(0), 
 15610 ;; Auto vars:     Size  Location     Type
 15611 ;;		None
 15612 ;; Return value:  Size  Location     Type
 15613 ;;                  2   15[COMRAM] int 
 15614 ;; Registers used:
 15615 ;;		fsr2l, fsr2h
 15616 ;; Tracked objects:
 15617 ;;		On entry : 0/0
 15618 ;;		On exit  : 0/0
 15619 ;;		Unchanged: 0/0
 15620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15621 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15622 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15624 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15625 ;;Total ram usage:        2 bytes
 15626 ;; Hardware stack levels used: 1
 15627 ;; Hardware stack levels required when called: 4
 15628 ;; This function calls:
 15629 ;;		Nothing
 15630 ;; This function is called by:
 15631 ;;		_sm_send_event
 15632 ;; This function uses a non-reentrant model
 15633 ;;
 15634                           
 15635                           	psect	text45
 15636  009CF4                     __ptext45:
 15637                           	callstack 0
 15638  009CF4                     _sm_get_current_state:
 15639                           	callstack 24
 15640                           
 15641                           ;sm_common_MC50.c: 31:  return psm->current_state;
 15642                           
 15643                           ;incstack = 0
 15644  009CF4  C010  FFD9         	movff	sm_get_current_state@psm,fsr2l
 15645  009CF8  C011  FFDA         	movff	sm_get_current_state@psm+1,fsr2h
 15646  009CFC  CFDE F010          	movff	postinc2,?_sm_get_current_state
 15647  009D00  CFDD F011          	movff	postdec2,?_sm_get_current_state+1
 15648  009D04  0012               	return		;funcret
 15649  009D06                     __end_of_sm_get_current_state:
 15650                           	callstack 0
 15651                           
 15652 ;; *************** function _InitSoftStart *****************
 15653 ;; Defined at:
 15654 ;;		line 816 in file "sm_ControlGate_MC50.c"
 15655 ;; Parameters:    Size  Location     Type
 15656 ;;		None
 15657 ;; Auto vars:     Size  Location     Type
 15658 ;;		None
 15659 ;; Return value:  Size  Location     Type
 15660 ;;                  1    wreg      void 
 15661 ;; Registers used:
 15662 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 15663 ;; Tracked objects:
 15664 ;;		On entry : 3F/1
 15665 ;;		On exit  : 3E/0
 15666 ;;		Unchanged: 0/0
 15667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15668 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15669 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15670 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15671 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15672 ;;Total ram usage:        1 bytes
 15673 ;; Hardware stack levels used: 1
 15674 ;; Hardware stack levels required when called: 5
 15675 ;; This function calls:
 15676 ;;		_GetMotorPower
 15677 ;; This function is called by:
 15678 ;;		_OpenFullOrder
 15679 ;;		_CloseOrder
 15680 ;;		_OpenWalkOrder
 15681 ;; This function uses a non-reentrant model
 15682 ;;
 15683                           
 15684                           	psect	text46
 15685  008DF6                     __ptext46:
 15686                           	callstack 0
 15687  008DF6                     _InitSoftStart:
 15688                           	callstack 22
 15689                           
 15690                           ; BSR set to: 1
 15691                           ;sm_ControlGate_MC50.c: 817:     if (var_sys_NVM.softStart != 0 && var_sys.AutoInversion
      +                          Active == NO) {
 15692                           
 15693                           ;incstack = 0
 15694  008DF6  0100               	movlb	0	; () banked
 15695  008DF8  51AA               	movf	(_var_sys_NVM+18)& (0+255),w,b	;volatile
 15696  008DFA  B4D8               	btfsc	status,2,c
 15697  008DFC  0012               	return	
 15698                           
 15699                           ; BSR set to: 0
 15700  008DFE  0101               	movlb	1	; () banked
 15701  008E00  5127               	movf	(_var_sys+39)& (0+255),w,b	;volatile
 15702  008E02  A4D8               	btfss	status,2,c
 15703  008E04  0012               	return	
 15704                           
 15705                           ; BSR set to: 1
 15706                           ;sm_ControlGate_MC50.c: 824:         var_sys.velocityFactorstop = 0;
 15707  008E06  0E00               	movlw	0
 15708  008E08  6F11               	movwf	(_var_sys+17)& (0+255),b	;volatile
 15709  008E0A  0E00               	movlw	0
 15710  008E0C  6F10               	movwf	(_var_sys+16)& (0+255),b	;volatile
 15711                           
 15712                           ;sm_ControlGate_MC50.c: 825:         var_sys.velocityFactor = 0;
 15713  008E0E  0E00               	movlw	0
 15714  008E10  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 15715  008E12  0E00               	movlw	0
 15716  008E14  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 15717                           
 15718                           ; BSR set to: 1
 15719                           ;sm_ControlGate_MC50.c: 826:         var_sys.velocityFactor = GetMotorPower();
 15720  008E16  EC18  F03D         	call	_GetMotorPower	;wreg free
 15721  008E1A  6E14               	movwf	??_InitSoftStart^0,c
 15722  008E1C  5014               	movf	??_InitSoftStart^0,w,c
 15723  008E1E  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 15724  008E20  6B0F               	clrf	(_var_sys+15)& (0+255),b	;volatile
 15725                           
 15726                           ; BSR set to: 1
 15727                           ;sm_ControlGate_MC50.c: 827:         if ( var_sys.velocityFactor > (81) )
 15728  008E22  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 15729  008E24  D00A               	goto	l20621
 15730  008E26  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 15731  008E28  E104               	bnz	u23690
 15732  008E2A  0E52               	movlw	82
 15733  008E2C  5D0E               	subwf	(_var_sys+14)& (0+255),w,b	;volatile
 15734  008E2E  A0D8               	btfss	status,0,c
 15735  008E30  D004               	goto	l20621
 15736  008E32                     u23690:
 15737                           
 15738                           ; BSR set to: 1
 15739                           ;sm_ControlGate_MC50.c: 828:         {;sm_ControlGate_MC50.c: 829:             var_sys.v
      +                          elocityFactor = (81);
 15740  008E32  0E00               	movlw	0
 15741  008E34  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 15742  008E36  0E51               	movlw	81
 15743  008E38  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 15744  008E3A                     l20621:
 15745                           
 15746                           ; BSR set to: 1
 15747                           ;sm_ControlGate_MC50.c: 840:         ts_system.timeSoftStart = var_sys.velocityFactor + 
      +                          1;
 15748  008E3A  0E01               	movlw	1
 15749  008E3C  250E               	addwf	(_var_sys+14)& (0+255),w,b	;volatile
 15750  008E3E  6FB5               	movwf	(_ts_system+22)& (0+255),b	;volatile
 15751  008E40  0E00               	movlw	0
 15752  008E42  210F               	addwfc	(_var_sys+15)& (0+255),w,b	;volatile
 15753  008E44  6FB6               	movwf	(_ts_system+23)& (0+255),b	;volatile
 15754                           
 15755                           ;sm_ControlGate_MC50.c: 842:         var_sys.SoftStartDecrementControl = 10 - var_sys_NV
      +                          M.softStart;
 15756  008E46  0100               	movlb	0	; () banked
 15757  008E48  51AA               	movf	(_var_sys_NVM+18)& (0+255),w,b	;volatile
 15758  008E4A  080A               	sublw	10
 15759  008E4C  0101               	movlb	1	; () banked
 15760  008E4E  6F14               	movwf	(_var_sys+20)& (0+255),b	;volatile
 15761  008E50  0012               	return		;funcret
 15762  008E52                     __end_of_InitSoftStart:
 15763                           	callstack 0
 15764                           
 15765 ;; *************** function _InitWalkAutoTime *****************
 15766 ;; Defined at:
 15767 ;;		line 103 in file "sm_ControlGate_MC50.c"
 15768 ;; Parameters:    Size  Location     Type
 15769 ;;		None
 15770 ;; Auto vars:     Size  Location     Type
 15771 ;;		None
 15772 ;; Return value:  Size  Location     Type
 15773 ;;                  1    wreg      void 
 15774 ;; Registers used:
 15775 ;;		wreg, status,2, status,0, prodl, prodh
 15776 ;; Tracked objects:
 15777 ;;		On entry : 0/1
 15778 ;;		On exit  : 3F/0
 15779 ;;		Unchanged: 0/0
 15780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15784 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15785 ;;Total ram usage:        0 bytes
 15786 ;; Hardware stack levels used: 1
 15787 ;; Hardware stack levels required when called: 4
 15788 ;; This function calls:
 15789 ;;		Nothing
 15790 ;; This function is called by:
 15791 ;;		_actionZone_Closed
 15792 ;;		_actionZone_Opening
 15793 ;;		_actionZone_Opened
 15794 ;;		_actionZone_Closing
 15795 ;; This function uses a non-reentrant model
 15796 ;;
 15797                           
 15798                           	psect	text47
 15799  009CB8                     __ptext47:
 15800                           	callstack 0
 15801  009CB8                     _InitWalkAutoTime:
 15802                           	callstack 24
 15803                           
 15804                           ;sm_ControlGate_MC50.c: 105:     ts_system.timeWaitToClose = ((int) var_sys_NVM.autoTime
      +                          WalkClose * (1000/50));
 15805                           
 15806                           ;incstack = 0
 15807  009CB8  0100               	movlb	0	; () banked
 15808  009CBA  519E               	movf	(_var_sys_NVM+6)& (0+255),w,b	;volatile
 15809  009CBC  0D14               	mullw	20
 15810  009CBE  CFF3 F1B1          	movff	prodl,_ts_system+18	;volatile
 15811  009CC2  CFF4 F1B2          	movff	prodh,_ts_system+19	;volatile
 15812                           
 15813                           ; BSR set to: 0
 15814                           ;sm_ControlGate_MC50.c: 106:     var_sys.AutoCloseActive = var_sys_NVM.autoTimeWalkClose
      +                          ;
 15815  009CC6  C09E  F123         	movff	_var_sys_NVM+6,_var_sys+35	;volatile
 15816                           
 15817                           ; BSR set to: 0
 15818  009CCA  0012               	return		;funcret
 15819  009CCC                     __end_of_InitWalkAutoTime:
 15820                           	callstack 0
 15821                           
 15822 ;; *************** function _GetSecurityStateInOpening *****************
 15823 ;; Defined at:
 15824 ;;		line 738 in file "inputs_MC50.c"
 15825 ;; Parameters:    Size  Location     Type
 15826 ;;		None
 15827 ;; Auto vars:     Size  Location     Type
 15828 ;;		None
 15829 ;; Return value:  Size  Location     Type
 15830 ;;                  1    wreg      enum E10564
 15831 ;; Registers used:
 15832 ;;		wreg, status,2, status,0, cstack
 15833 ;; Tracked objects:
 15834 ;;		On entry : 0/0
 15835 ;;		On exit  : 3E/0
 15836 ;;		Unchanged: 0/0
 15837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15839 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15841 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15842 ;;Total ram usage:        0 bytes
 15843 ;; Hardware stack levels used: 1
 15844 ;; Hardware stack levels required when called: 5
 15845 ;; This function calls:
 15846 ;;		_SetSegmentValueIntermitent
 15847 ;; This function is called by:
 15848 ;;		_actionZone_Closed
 15849 ;;		_actionZone_Opening
 15850 ;; This function uses a non-reentrant model
 15851 ;;
 15852                           
 15853                           	psect	text48
 15854  007E70                     __ptext48:
 15855                           	callstack 0
 15856  007E70                     _GetSecurityStateInOpening:
 15857                           	callstack 23
 15858                           
 15859                           ;inputs_MC50.c: 747:     if((var_sys_NVM.securityBandIsON == 1) && (var_sys.SecurityBarI
      +                          sObstructed == YES)&&(var_sys_NVM.securityBandInOpen == 1)&& (var_sys_NVM.Stopboton == 0
      +                          ))
 15860                           
 15861                           ; BSR set to: 0
 15862                           ;incstack = 0
 15863  007E70  0100               	movlb	0	; () banked
 15864  007E72  05A1               	decf	(_var_sys_NVM+9)& (0+255),w,b	;volatile
 15865  007E74  A4D8               	btfss	status,2,c
 15866  007E76  D01B               	goto	l21413
 15867                           
 15868                           ; BSR set to: 0
 15869  007E78  0101               	movlb	1	; () banked
 15870  007E7A  0502               	decf	(_var_sys+2)& (0+255),w,b	;volatile
 15871  007E7C  A4D8               	btfss	status,2,c
 15872  007E7E  D017               	goto	l21413
 15873                           
 15874                           ; BSR set to: 1
 15875  007E80  0100               	movlb	0	; () banked
 15876  007E82  05A3               	decf	(_var_sys_NVM+11)& (0+255),w,b	;volatile
 15877  007E84  A4D8               	btfss	status,2,c
 15878  007E86  D013               	goto	l21413
 15879                           
 15880                           ; BSR set to: 0
 15881  007E88  51AE               	movf	(_var_sys_NVM+22)& (0+255),w,b	;volatile
 15882  007E8A  A4D8               	btfss	status,2,c
 15883  007E8C  D010               	goto	l21413
 15884                           
 15885                           ; BSR set to: 0
 15886                           ;inputs_MC50.c: 748:     {;inputs_MC50.c: 750:         ts_system.timeSinalizationDigit=(
      +                           200/50);
 15887  007E8E  0E00               	movlw	0
 15888  007E90  0101               	movlb	1	; () banked
 15889  007E92  6FAC               	movwf	(_ts_system+13)& (0+255),b	;volatile
 15890  007E94  0E04               	movlw	4
 15891  007E96  6FAB               	movwf	(_ts_system+12)& (0+255),b	;volatile
 15892                           
 15893                           ; BSR set to: 1
 15894                           ;inputs_MC50.c: 751:         SetSegmentValueIntermitent(dL,dA,(1000/50));
 15895  007E98  0E0A               	movlw	10
 15896  007E9A  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 15897  007E9C  0E00               	movlw	0
 15898  007E9E  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 15899  007EA0  0E14               	movlw	20
 15900  007EA2  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 15901  007EA4  0E12               	movlw	18
 15902  007EA6  EC8B  F04B         	call	_SetSegmentValueIntermitent
 15903  007EAA                     l21407:
 15904                           
 15905                           ; BSR set to: 1
 15906                           ;inputs_MC50.c: 752:         return YES;
 15907  007EAA  0E01               	movlw	1
 15908  007EAC  0012               	return	
 15909  007EAE                     l21413:
 15910  007EAE  0100               	movlb	0	; () banked
 15911  007EB0  05AE               	decf	(_var_sys_NVM+22)& (0+255),w,b	;volatile
 15912  007EB2  A4D8               	btfss	status,2,c
 15913  007EB4  D013               	goto	l21427
 15914                           
 15915                           ; BSR set to: 0
 15916  007EB6  0101               	movlb	1	; () banked
 15917  007EB8  0502               	decf	(_var_sys+2)& (0+255),w,b	;volatile
 15918  007EBA  A4D8               	btfss	status,2,c
 15919  007EBC  D00F               	goto	l21427
 15920                           
 15921                           ; BSR set to: 1
 15922                           ;inputs_MC50.c: 756:     {;inputs_MC50.c: 758:         ts_system.timeSinalizationDigit=(
      +                           200/50);
 15923  007EBE  0E00               	movlw	0
 15924  007EC0  6FAC               	movwf	(_ts_system+13)& (0+255),b	;volatile
 15925  007EC2  0E04               	movlw	4
 15926  007EC4  6FAB               	movwf	(_ts_system+12)& (0+255),b	;volatile
 15927                           
 15928                           ; BSR set to: 1
 15929                           ;inputs_MC50.c: 759:         SetSegmentValueIntermitent(d5,dt,(1000/50));
 15930  007EC6  0E15               	movlw	21
 15931  007EC8  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 15932  007ECA  0E00               	movlw	0
 15933  007ECC  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 15934  007ECE  0E14               	movlw	20
 15935  007ED0  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 15936  007ED2  0E05               	movlw	5
 15937  007ED4  EC8B  F04B         	call	_SetSegmentValueIntermitent
 15938                           
 15939                           ; BSR set to: 1
 15940                           ;inputs_MC50.c: 760:         return ST;
 15941  007ED8  0E02               	movlw	2
 15942  007EDA  0012               	return	
 15943  007EDC                     l21427:
 15944  007EDC  0100               	movlb	0	; () banked
 15945  007EDE  059F               	decf	(_var_sys_NVM+7)& (0+255),w,b	;volatile
 15946  007EE0  A4D8               	btfss	status,2,c
 15947  007EE2  D017               	goto	l21443
 15948                           
 15949                           ; BSR set to: 0
 15950  007EE4  0101               	movlb	1	; () banked
 15951  007EE6  0501               	decf	(_var_sys+1)& (0+255),w,b	;volatile
 15952  007EE8  A4D8               	btfss	status,2,c
 15953  007EEA  D013               	goto	l21443
 15954                           
 15955                           ; BSR set to: 1
 15956  007EEC  0100               	movlb	0	; () banked
 15957  007EEE  05A0               	decf	(_var_sys_NVM+8)& (0+255),w,b	;volatile
 15958  007EF0  A4D8               	btfss	status,2,c
 15959  007EF2  D00F               	goto	l21443
 15960                           
 15961                           ; BSR set to: 0
 15962                           ;inputs_MC50.c: 764:     {;inputs_MC50.c: 766:         ts_system.timeSinalizationDigit=(
      +                           200/50);
 15963  007EF4  0E00               	movlw	0
 15964  007EF6  0101               	movlb	1	; () banked
 15965  007EF8  6FAC               	movwf	(_ts_system+13)& (0+255),b	;volatile
 15966  007EFA  0E04               	movlw	4
 15967  007EFC  6FAB               	movwf	(_ts_system+12)& (0+255),b	;volatile
 15968                           
 15969                           ; BSR set to: 1
 15970                           ;inputs_MC50.c: 767:         SetSegmentValueIntermitent(dL,dE,(1000/50));
 15971  007EFE  0E0E               	movlw	14
 15972  007F00  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 15973  007F02  0E00               	movlw	0
 15974  007F04  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 15975  007F06  0E14               	movlw	20
 15976  007F08  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 15977  007F0A  0E12               	movlw	18
 15978  007F0C  EC8B  F04B         	call	_SetSegmentValueIntermitent
 15979  007F10  D7CC               	goto	l21407
 15980  007F12                     l21443:
 15981                           
 15982                           ;inputs_MC50.c: 771:     {;inputs_MC50.c: 772:         return NO;
 15983  007F12  0E00               	movlw	0
 15984  007F14  0012               	return		;funcret
 15985  007F16                     __end_of_GetSecurityStateInOpening:
 15986                           	callstack 0
 15987                           
 15988 ;; *************** function _SetSegmentValueIntermitent *****************
 15989 ;; Defined at:
 15990 ;;		line 201 in file "outputs_MC50.c"
 15991 ;; Parameters:    Size  Location     Type
 15992 ;;  d1              1    wreg     unsigned char 
 15993 ;;  d2              1   15[COMRAM] unsigned char 
 15994 ;;  time            2   16[COMRAM] int 
 15995 ;; Auto vars:     Size  Location     Type
 15996 ;;  d1              1   18[COMRAM] unsigned char 
 15997 ;; Return value:  Size  Location     Type
 15998 ;;                  1    wreg      void 
 15999 ;; Registers used:
 16000 ;;		wreg, status,2, status,0
 16001 ;; Tracked objects:
 16002 ;;		On entry : 3E/0
 16003 ;;		On exit  : 3F/1
 16004 ;;		Unchanged: 0/0
 16005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16006 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16007 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16008 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16009 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16010 ;;Total ram usage:        4 bytes
 16011 ;; Hardware stack levels used: 1
 16012 ;; Hardware stack levels required when called: 4
 16013 ;; This function calls:
 16014 ;;		Nothing
 16015 ;; This function is called by:
 16016 ;;		_GetSecurityStateInOpening
 16017 ;;		_GetSecurityStateInClosing
 16018 ;;		_sm_execute_ControlGate
 16019 ;;		_actionZone_Opening
 16020 ;;		_actionZone_Closing
 16021 ;; This function uses a non-reentrant model
 16022 ;;
 16023                           
 16024                           	psect	text49
 16025  009716                     __ptext49:
 16026                           	callstack 0
 16027  009716                     _SetSegmentValueIntermitent:
 16028                           	callstack 24
 16029                           
 16030                           ;incstack = 0
 16031                           ;SetSegmentValueIntermitent@d1 stored from wreg
 16032  009716  6E13               	movwf	SetSegmentValueIntermitent@d1^0,c
 16033                           
 16034                           ;outputs_MC50.c: 201: void SetSegmentValueIntermitent(char d1, char d2,int time);outputs
      +                          _MC50.c: 202: {;outputs_MC50.c: 204:     if ( main_stateMachine.current_state != st_Menu
      +                          Configuration && (ts_system.timeoutMenu == 0 && button_struct.timer < (1000/50)))
 16035  009718  0101               	movlb	1	; () banked
 16036  00971A  05F2               	decf	_main_stateMachine& (0+255),w,b
 16037  00971C  11F3               	iorwf	(_main_stateMachine+1)& (0+255),w,b
 16038  00971E  B4D8               	btfsc	status,2,c
 16039  009720  0012               	return	
 16040                           
 16041                           ; BSR set to: 1
 16042  009722  51AD               	movf	(_ts_system+14)& (0+255),w,b	;volatile
 16043  009724  11AE               	iorwf	(_ts_system+15)& (0+255),w,b	;volatile
 16044  009726  A4D8               	btfss	status,2,c
 16045  009728  0012               	return	
 16046                           
 16047                           ; BSR set to: 1
 16048  00972A  0E14               	movlw	20
 16049  00972C  604E               	cpfslt	(_button_struct+2)^0,c	;volatile
 16050  00972E  0012               	return	
 16051                           
 16052                           ; BSR set to: 1
 16053                           ;outputs_MC50.c: 205:     {;outputs_MC50.c: 206:         dispStruct.display_grp.value_di
      +                          splay1=d1;
 16054  009730  C013  F072         	movff	SetSegmentValueIntermitent@d1,_dispStruct	;volatile
 16055                           
 16056                           ;outputs_MC50.c: 207:         dispStruct.display_grp.value_display2=d2;
 16057  009734  C010  F073         	movff	SetSegmentValueIntermitent@d2,_dispStruct+1	;volatile
 16058                           
 16059                           ;outputs_MC50.c: 208:         dispStruct.intermitentFreq=time;
 16060  009738  C011  F075         	movff	SetSegmentValueIntermitent@time,_dispStruct+3	;volatile
 16061  00973C  C012  F076         	movff	SetSegmentValueIntermitent@time+1,_dispStruct+4	;volatile
 16062                           
 16063                           ; BSR set to: 1
 16064  009740  0012               	return		;funcret
 16065  009742                     __end_of_SetSegmentValueIntermitent:
 16066                           	callstack 0
 16067                           
 16068 ;; *************** function _GetOpenOrder *****************
 16069 ;; Defined at:
 16070 ;;		line 330 in file "inputs_MC50.c"
 16071 ;; Parameters:    Size  Location     Type
 16072 ;;		None
 16073 ;; Auto vars:     Size  Location     Type
 16074 ;;		None
 16075 ;; Return value:  Size  Location     Type
 16076 ;;                  1    wreg      enum E10539
 16077 ;; Registers used:
 16078 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 16079 ;; Tracked objects:
 16080 ;;		On entry : 3E/1
 16081 ;;		On exit  : 0/0
 16082 ;;		Unchanged: 0/0
 16083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16084 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16085 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16087 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16088 ;;Total ram usage:        0 bytes
 16089 ;; Hardware stack levels used: 1
 16090 ;; Hardware stack levels required when called: 5
 16091 ;; This function calls:
 16092 ;;		_SetSegmentValueIntermitentMain
 16093 ;;		___lbdiv
 16094 ;; This function is called by:
 16095 ;;		_sm_execute_ControlGate
 16096 ;;		_actionZone_Closed
 16097 ;;		_actionZone_Opening
 16098 ;;		_actionZone_Opened
 16099 ;;		_actionZone_Closing
 16100 ;;		_sm_execute_ControlLearning
 16101 ;; This function uses a non-reentrant model
 16102 ;;
 16103                           
 16104                           	psect	text50
 16105  005D3C                     __ptext50:
 16106                           	callstack 0
 16107  005D3C                     _GetOpenOrder:
 16108                           	callstack 23
 16109                           
 16110                           ;inputs_MC50.c: 332:    if (var_sys.LearningIsEnabled == NO){
 16111                           
 16112                           ; BSR set to: 1
 16113                           ;incstack = 0
 16114  005D3C  0101               	movlb	1	; () banked
 16115  005D3E  5126               	movf	(_var_sys+38)& (0+255),w,b	;volatile
 16116  005D40  A4D8               	btfss	status,2,c
 16117  005D42  D0C0               	goto	l21383
 16118                           
 16119                           ; BSR set to: 1
 16120                           ;inputs_MC50.c: 334:        if(ts_system.TimeCurrentAlarm>0)
 16121  005D44  BFCA               	btfsc	(_ts_system+43)& (0+255),7,b	;volatile
 16122  005D46  D019               	goto	l21275
 16123  005D48  51CA               	movf	(_ts_system+43)& (0+255),w,b	;volatile
 16124  005D4A  E103               	bnz	u24520
 16125  005D4C  05C9               	decf	(_ts_system+42)& (0+255),w,b	;volatile
 16126  005D4E  A0D8               	btfss	status,0,c
 16127  005D50  D014               	goto	l21275
 16128  005D52                     u24520:
 16129                           
 16130                           ; BSR set to: 1
 16131                           ;inputs_MC50.c: 336:         {;inputs_MC50.c: 337:             SetSegmentValueIntermiten
      +                          tMain(dL,d1,(1000/50));
 16132  005D52  0E01               	movlw	1
 16133  005D54  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16134  005D56  0E00               	movlw	0
 16135  005D58  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16136  005D5A  0E14               	movlw	20
 16137  005D5C  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16138  005D5E  0E12               	movlw	18
 16139  005D60  EC66  F04E         	call	_SetSegmentValueIntermitentMain
 16140                           
 16141                           ;inputs_MC50.c: 338:             ts_system.timeSinalizationDigit=( 500/50);
 16142  005D64  0E00               	movlw	0
 16143  005D66  0101               	movlb	1	; () banked
 16144  005D68  6FAC               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16145  005D6A  0E0A               	movlw	10
 16146  005D6C  6FAB               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16147                           
 16148                           ; BSR set to: 1
 16149                           ;inputs_MC50.c: 339:             rfCMD.processed=1;
 16150  005D6E  0E01               	movlw	1
 16151  005D70  6E45               	movwf	(_rfCMD+10)^0,c	;volatile
 16152                           
 16153                           ; BSR set to: 1
 16154                           ;inputs_MC50.c: 340:             button_struct.processed=1;
 16155  005D72  0E01               	movlw	1
 16156  005D74  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
 16157  005D76                     l21269:
 16158                           
 16159                           ;inputs_MC50.c: 341:             return NoCMD;
 16160  005D76  0E00               	movlw	0
 16161  005D78  0012               	return	
 16162  005D7A                     l21275:
 16163                           
 16164                           ; BSR set to: 1
 16165  005D7A  0100               	movlb	0	; () banked
 16166  005D7C  51A8               	movf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 16167  005D7E  B4D8               	btfsc	status,2,c
 16168  005D80  D02F               	goto	l21309
 16169                           
 16170                           ; BSR set to: 0
 16171                           ;inputs_MC50.c: 344:         {;inputs_MC50.c: 345:             if(button_struct.current=
      +                          =0x35)
 16172  005D82  0E35               	movlw	53
 16173  005D84  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16174  005D86  A4D8               	btfss	status,2,c
 16175  005D88  D017               	goto	l21293
 16176                           
 16177                           ; BSR set to: 0
 16178                           ;inputs_MC50.c: 346:             {;inputs_MC50.c: 347:                 ts_system.timeSin
      +                          alizationDigit=( 500/50);
 16179  005D8A  0E00               	movlw	0
 16180  005D8C  0101               	movlb	1	; () banked
 16181  005D8E  6FAC               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16182  005D90  0E0A               	movlw	10
 16183  005D92  6FAB               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16184                           
 16185                           ; BSR set to: 1
 16186                           ;inputs_MC50.c: 348:                 SetSegmentValueIntermitentMain(dL,d0,( 200/50));
 16187  005D94  0E00               	movlw	0
 16188  005D96  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16189  005D98  0E00               	movlw	0
 16190  005D9A  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16191  005D9C  0E04               	movlw	4
 16192  005D9E  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16193  005DA0  0E12               	movlw	18
 16194  005DA2  EC66  F04E         	call	_SetSegmentValueIntermitentMain
 16195                           
 16196                           ;inputs_MC50.c: 349:                 if (var_sys_NVM.homemPresente == 2){
 16197  005DA6  0E02               	movlw	2
 16198  005DA8  0100               	movlb	0	; () banked
 16199  005DAA  19A8               	xorwf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 16200  005DAC  A4D8               	btfss	status,2,c
 16201  005DAE  D002               	goto	l21287
 16202  005DB0                     u24550:
 16203                           
 16204                           ; BSR set to: 0
 16205                           ;inputs_MC50.c: 350:                    button_struct.processed=1;
 16206  005DB0  0E01               	movlw	1
 16207  005DB2  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
 16208  005DB4                     l21287:
 16209                           
 16210                           ; BSR set to: 0
 16211                           ;inputs_MC50.c: 352:                 return TypeFullOpen;
 16212  005DB4  0E03               	movlw	3
 16213  005DB6  0012               	return	
 16214  005DB8                     l21293:
 16215                           
 16216                           ; BSR set to: 0
 16217  005DB8  0E33               	movlw	51
 16218  005DBA  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16219  005DBC  A4D8               	btfss	status,2,c
 16220  005DBE  D7DB               	goto	l21269
 16221                           
 16222                           ; BSR set to: 0
 16223                           ;inputs_MC50.c: 355:             {;inputs_MC50.c: 356:                 ts_system.timeSin
      +                          alizationDigit=( 500/50);
 16224  005DC0  0E00               	movlw	0
 16225  005DC2  0101               	movlb	1	; () banked
 16226  005DC4  6FAC               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16227  005DC6  0E0A               	movlw	10
 16228  005DC8  6FAB               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16229                           
 16230                           ; BSR set to: 1
 16231                           ;inputs_MC50.c: 357:                 SetSegmentValueIntermitentMain(dL,d5,( 200/50));
 16232  005DCA  0E05               	movlw	5
 16233  005DCC  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16234  005DCE  0E00               	movlw	0
 16235  005DD0  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16236  005DD2  0E04               	movlw	4
 16237  005DD4  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16238  005DD6  0E12               	movlw	18
 16239  005DD8  EC66  F04E         	call	_SetSegmentValueIntermitentMain
 16240  005DDC                     l21299:
 16241                           
 16242                           ;inputs_MC50.c: 359:                 return TypeFullClose;
 16243  005DDC  0E04               	movlw	4
 16244  005DDE  0012               	return	
 16245  005DE0                     l21309:
 16246                           
 16247                           ; BSR set to: 0
 16248  005DE0  0E35               	movlw	53
 16249  005DE2  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16250  005DE4  A4D8               	btfss	status,2,c
 16251  005DE6  D016               	goto	l21331
 16252                           
 16253                           ; BSR set to: 0
 16254                           ;inputs_MC50.c: 371:         {;inputs_MC50.c: 372:             ts_system.timeSinalizatio
      +                          nDigit=(1000/50)*2;
 16255  005DE8  0E00               	movlw	0
 16256  005DEA  0101               	movlb	1	; () banked
 16257  005DEC  6FAC               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16258  005DEE  0E28               	movlw	40
 16259  005DF0  6FAB               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16260                           
 16261                           ; BSR set to: 1
 16262                           ;inputs_MC50.c: 373:             SetSegmentValueIntermitentMain(dL,d0,( 200/50));
 16263  005DF2  0E00               	movlw	0
 16264  005DF4  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16265  005DF6  0E00               	movlw	0
 16266  005DF8  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16267  005DFA  0E04               	movlw	4
 16268  005DFC  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16269  005DFE  0E12               	movlw	18
 16270  005E00  EC66  F04E         	call	_SetSegmentValueIntermitentMain
 16271                           
 16272                           ;inputs_MC50.c: 374:             if(var_sys_NVM.logicDigital==1)
 16273  005E04  0100               	movlb	0	; () banked
 16274  005E06  05A9               	decf	(_var_sys_NVM+17)& (0+255),w,b	;volatile
 16275  005E08  B4D8               	btfsc	status,2,c
 16276  005E0A  D7D2               	goto	u24550
 16277  005E0C                     l21325:
 16278                           
 16279                           ;inputs_MC50.c: 380:             {;inputs_MC50.c: 381:                 button_struct.pro
      +                          cessed=1;
 16280  005E0C  0E01               	movlw	1
 16281  005E0E  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
 16282                           
 16283                           ;inputs_MC50.c: 382:                 return TypeFull;
 16284  005E10  0E01               	movlw	1
 16285  005E12  0012               	return	
 16286  005E14                     l21331:
 16287                           
 16288                           ; BSR set to: 0
 16289  005E14  0E33               	movlw	51
 16290  005E16  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16291  005E18  A4D8               	btfss	status,2,c
 16292  005E1A  D019               	goto	l21353
 16293                           
 16294                           ; BSR set to: 0
 16295                           ;inputs_MC50.c: 387:         {;inputs_MC50.c: 389:             ts_system.timeSinalizatio
      +                          nDigit=(1000/50)*2;
 16296  005E1C  0E00               	movlw	0
 16297  005E1E  0101               	movlb	1	; () banked
 16298  005E20  6FAC               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16299  005E22  0E28               	movlw	40
 16300  005E24  6FAB               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16301                           
 16302                           ; BSR set to: 1
 16303                           ;inputs_MC50.c: 390:             SetSegmentValueIntermitentMain(dL,d5,( 200/50));
 16304  005E26  0E05               	movlw	5
 16305  005E28  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16306  005E2A  0E00               	movlw	0
 16307  005E2C  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16308  005E2E  0E04               	movlw	4
 16309  005E30  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16310  005E32  0E12               	movlw	18
 16311  005E34  EC66  F04E         	call	_SetSegmentValueIntermitentMain
 16312                           
 16313                           ;inputs_MC50.c: 391:             if(var_sys_NVM.logicDigital==1)
 16314  005E38  0100               	movlb	0	; () banked
 16315  005E3A  05A9               	decf	(_var_sys_NVM+17)& (0+255),w,b	;volatile
 16316  005E3C  A4D8               	btfss	status,2,c
 16317  005E3E  D003               	goto	l21347
 16318                           
 16319                           ; BSR set to: 0
 16320                           ;inputs_MC50.c: 392:             {;inputs_MC50.c: 393:                  button_struct.pr
      +                          ocessed=1;
 16321  005E40  0E01               	movlw	1
 16322  005E42  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
 16323  005E44  D7CB               	goto	l21299
 16324  005E46                     l21347:
 16325                           
 16326                           ; BSR set to: 0
 16327                           ;inputs_MC50.c: 399:             {;inputs_MC50.c: 400:                  button_struct.pr
      +                          ocessed=1;
 16328  005E46  0E01               	movlw	1
 16329  005E48  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
 16330                           
 16331                           ; BSR set to: 0
 16332                           ;inputs_MC50.c: 402:                 return TypeWalk;
 16333  005E4A  0E02               	movlw	2
 16334  005E4C  0012               	return	
 16335  005E4E                     l21353:
 16336                           
 16337                           ; BSR set to: 0
 16338  005E4E  0E36               	movlw	54
 16339  005E50  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16340  005E52  A4D8               	btfss	status,2,c
 16341  005E54  D00F               	goto	l21367
 16342                           
 16343                           ; BSR set to: 0
 16344                           ;inputs_MC50.c: 408:         {;inputs_MC50.c: 409:             ts_system.timeSinalizatio
      +                          nDigit=(1000/50)*2;
 16345  005E56  0E00               	movlw	0
 16346  005E58  0101               	movlb	1	; () banked
 16347  005E5A  6FAC               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16348  005E5C  0E28               	movlw	40
 16349  005E5E  6FAB               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16350                           
 16351                           ; BSR set to: 1
 16352                           ;inputs_MC50.c: 410:             SetSegmentValueIntermitentMain(dP,dU,( 200/50));
 16353  005E60  0E13               	movlw	19
 16354  005E62  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16355  005E64  0E00               	movlw	0
 16356  005E66  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16357  005E68  0E04               	movlw	4
 16358  005E6A  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16359  005E6C  0E10               	movlw	16
 16360  005E6E  EC66  F04E         	call	_SetSegmentValueIntermitentMain
 16361  005E72  D7CC               	goto	l21325
 16362  005E74                     l21367:
 16363                           
 16364                           ; BSR set to: 0
 16365                           ;inputs_MC50.c: 417:         {;inputs_MC50.c: 418:             if(rfCMD.currentType!=NoC
      +                          MD && rfCMD.currentType!=TypeProgrammingModeFull && rfCMD.currentType!=TypeProgrammingMo
      +                          deWalk )
 16366  005E74  503B               	movf	_rfCMD^0,w,c	;volatile
 16367  005E76  B4D8               	btfsc	status,2,c
 16368  005E78  D023               	goto	l21379
 16369                           
 16370                           ; BSR set to: 0
 16371  005E7A  0E06               	movlw	6
 16372  005E7C  183B               	xorwf	_rfCMD^0,w,c	;volatile
 16373  005E7E  B4D8               	btfsc	status,2,c
 16374  005E80  D01F               	goto	l21379
 16375                           
 16376                           ; BSR set to: 0
 16377  005E82  0E05               	movlw	5
 16378  005E84  183B               	xorwf	_rfCMD^0,w,c	;volatile
 16379  005E86  B4D8               	btfsc	status,2,c
 16380  005E88  D01B               	goto	l21379
 16381                           
 16382                           ; BSR set to: 0
 16383                           ;inputs_MC50.c: 419:             {;inputs_MC50.c: 420:                 SetSegmentValueIn
      +                          termitentMain(rfCMD.currentPosMem/10, rfCMD.currentPosMem-((rfCMD.currentPosMem/10)*10),
      +                          ( 200/50));
 16384  005E8A  0E0A               	movlw	10
 16385  005E8C  6E10               	movwf	___lbdiv@divisor^0,c
 16386  005E8E  5043               	movf	(_rfCMD+8)^0,w,c	;volatile
 16387  005E90  ECBE  F04A         	call	___lbdiv
 16388  005E94  0DF6               	mullw	246
 16389  005E96  50F3               	movf	243,w,c
 16390  005E98  2443               	addwf	(_rfCMD+8)^0,w,c	;volatile
 16391  005E9A  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16392  005E9C  0E00               	movlw	0
 16393  005E9E  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16394  005EA0  0E04               	movlw	4
 16395  005EA2  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16396  005EA4  0E0A               	movlw	10
 16397  005EA6  6E10               	movwf	___lbdiv@divisor^0,c
 16398  005EA8  5043               	movf	(_rfCMD+8)^0,w,c	;volatile
 16399  005EAA  ECBE  F04A         	call	___lbdiv
 16400  005EAE  EC66  F04E         	call	_SetSegmentValueIntermitentMain
 16401                           
 16402                           ;inputs_MC50.c: 421:                 ts_system.timeSinalizationDigit=(1000/50)*2;
 16403  005EB2  0E00               	movlw	0
 16404  005EB4  0101               	movlb	1	; () banked
 16405  005EB6  6FAC               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16406  005EB8  0E28               	movlw	40
 16407  005EBA  6FAB               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16408                           
 16409                           ; BSR set to: 1
 16410                           ;inputs_MC50.c: 422:                 rfCMD.processed=1;
 16411  005EBC  0E01               	movlw	1
 16412  005EBE  6E45               	movwf	(_rfCMD+10)^0,c	;volatile
 16413  005EC0                     l21379:
 16414                           
 16415                           ;inputs_MC50.c: 425:             return rfCMD.currentType;
 16416  005EC0  503B               	movf	_rfCMD^0,w,c	;volatile
 16417  005EC2  0012               	return	
 16418  005EC4                     l21383:
 16419                           
 16420                           ; BSR set to: 1
 16421                           ;inputs_MC50.c: 428:     {;inputs_MC50.c: 429:        if(rfCMD.currentType!=NoCMD ){
 16422  005EC4  503B               	movf	_rfCMD^0,w,c	;volatile
 16423  005EC6  B4D8               	btfsc	status,2,c
 16424  005EC8  D01B               	goto	l21391
 16425                           
 16426                           ; BSR set to: 1
 16427                           ;inputs_MC50.c: 430:                   SetSegmentValueIntermitentMain(rfCMD.currentPosMe
      +                          m/10, rfCMD.currentPosMem-((rfCMD.currentPosMem/10)*10),( 200/50));
 16428  005ECA  0E0A               	movlw	10
 16429  005ECC  6E10               	movwf	___lbdiv@divisor^0,c
 16430  005ECE  5043               	movf	(_rfCMD+8)^0,w,c	;volatile
 16431  005ED0  ECBE  F04A         	call	___lbdiv
 16432  005ED4  0DF6               	mullw	246
 16433  005ED6  50F3               	movf	243,w,c
 16434  005ED8  2443               	addwf	(_rfCMD+8)^0,w,c	;volatile
 16435  005EDA  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16436  005EDC  0E00               	movlw	0
 16437  005EDE  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16438  005EE0  0E04               	movlw	4
 16439  005EE2  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16440  005EE4  0E0A               	movlw	10
 16441  005EE6  6E10               	movwf	___lbdiv@divisor^0,c
 16442  005EE8  5043               	movf	(_rfCMD+8)^0,w,c	;volatile
 16443  005EEA  ECBE  F04A         	call	___lbdiv
 16444  005EEE  EC66  F04E         	call	_SetSegmentValueIntermitentMain
 16445                           
 16446                           ;inputs_MC50.c: 431:                 ts_system.timeSinalizationDigit=(1000/50)*1;
 16447  005EF2  0E00               	movlw	0
 16448  005EF4  0101               	movlb	1	; () banked
 16449  005EF6  6FAC               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16450  005EF8  0E14               	movlw	20
 16451  005EFA  6FAB               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16452                           
 16453                           ; BSR set to: 1
 16454                           ;inputs_MC50.c: 432:                 rfCMD.processed=1;
 16455  005EFC  0E01               	movlw	1
 16456  005EFE  6E45               	movwf	(_rfCMD+10)^0,c	;volatile
 16457  005F00                     l21391:
 16458                           
 16459                           ; BSR set to: 1
 16460                           ;inputs_MC50.c: 434:        return rfCMD.currentType;
 16461  005F00  503B               	movf	_rfCMD^0,w,c	;volatile
 16462  005F02  0012               	return		;funcret
 16463  005F04                     __end_of_GetOpenOrder:
 16464                           	callstack 0
 16465                           
 16466 ;; *************** function ___lbdiv *****************
 16467 ;; Defined at:
 16468 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\lbdiv.c"
 16469 ;; Parameters:    Size  Location     Type
 16470 ;;  dividend        1    wreg     unsigned char 
 16471 ;;  divisor         1   15[COMRAM] unsigned char 
 16472 ;; Auto vars:     Size  Location     Type
 16473 ;;  dividend        1   16[COMRAM] unsigned char 
 16474 ;;  quotient        1   18[COMRAM] unsigned char 
 16475 ;;  counter         1   17[COMRAM] unsigned char 
 16476 ;; Return value:  Size  Location     Type
 16477 ;;                  1    wreg      unsigned char 
 16478 ;; Registers used:
 16479 ;;		wreg, status,2, status,0
 16480 ;; Tracked objects:
 16481 ;;		On entry : 0/0
 16482 ;;		On exit  : 0/0
 16483 ;;		Unchanged: 0/0
 16484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16485 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16486 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16488 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16489 ;;Total ram usage:        4 bytes
 16490 ;; Hardware stack levels used: 1
 16491 ;; Hardware stack levels required when called: 4
 16492 ;; This function calls:
 16493 ;;		Nothing
 16494 ;; This function is called by:
 16495 ;;		_GetOpenOrder
 16496 ;;		_sm_execute_menuConfiguration
 16497 ;; This function uses a non-reentrant model
 16498 ;;
 16499                           
 16500                           	psect	text51
 16501  00957C                     __ptext51:
 16502                           	callstack 0
 16503  00957C                     ___lbdiv:
 16504                           	callstack 24
 16505                           
 16506                           ;incstack = 0
 16507                           ;___lbdiv@dividend stored from wreg
 16508  00957C  6E11               	movwf	___lbdiv@dividend^0,c
 16509  00957E  0E00               	movlw	0
 16510  009580  6E13               	movwf	___lbdiv@quotient^0,c
 16511  009582  5010               	movf	___lbdiv@divisor^0,w,c
 16512  009584  B4D8               	btfsc	status,2,c
 16513  009586  D015               	goto	l21139
 16514  009588  0E01               	movlw	1
 16515  00958A  6E12               	movwf	___lbdiv@counter^0,c
 16516  00958C  D003               	goto	l21127
 16517  00958E                     l21123:
 16518  00958E  90D8               	bcf	status,0,c
 16519  009590  3610               	rlcf	___lbdiv@divisor^0,f,c
 16520  009592  2A12               	incf	___lbdiv@counter^0,f,c
 16521  009594                     l21127:
 16522  009594  AE10               	btfss	___lbdiv@divisor^0,7,c
 16523  009596  D7FB               	goto	l21123
 16524  009598                     u24350:
 16525  009598  90D8               	bcf	status,0,c
 16526  00959A  3613               	rlcf	___lbdiv@quotient^0,f,c
 16527  00959C  5010               	movf	___lbdiv@divisor^0,w,c
 16528  00959E  5C11               	subwf	___lbdiv@dividend^0,w,c
 16529  0095A0  A0D8               	btfss	status,0,c
 16530  0095A2  D003               	goto	l21135
 16531  0095A4  5010               	movf	___lbdiv@divisor^0,w,c
 16532  0095A6  5E11               	subwf	___lbdiv@dividend^0,f,c
 16533  0095A8  8013               	bsf	___lbdiv@quotient^0,0,c
 16534  0095AA                     l21135:
 16535  0095AA  90D8               	bcf	status,0,c
 16536  0095AC  3210               	rrcf	___lbdiv@divisor^0,f,c
 16537  0095AE  2E12               	decfsz	___lbdiv@counter^0,f,c
 16538  0095B0  D7F3               	goto	u24350
 16539  0095B2                     l21139:
 16540  0095B2  5013               	movf	___lbdiv@quotient^0,w,c
 16541  0095B4  0012               	return		;funcret
 16542  0095B6                     __end_of___lbdiv:
 16543                           	callstack 0
 16544                           
 16545 ;; *************** function _SetSegmentValueIntermitentMain *****************
 16546 ;; Defined at:
 16547 ;;		line 193 in file "outputs_MC50.c"
 16548 ;; Parameters:    Size  Location     Type
 16549 ;;  d1              1    wreg     unsigned char 
 16550 ;;  d2              1   27[COMRAM] unsigned char 
 16551 ;;  time            2   28[COMRAM] int 
 16552 ;; Auto vars:     Size  Location     Type
 16553 ;;  d1              1   30[COMRAM] unsigned char 
 16554 ;; Return value:  Size  Location     Type
 16555 ;;                  1    wreg      void 
 16556 ;; Registers used:
 16557 ;;		wreg
 16558 ;; Tracked objects:
 16559 ;;		On entry : 0/1
 16560 ;;		On exit  : 0/0
 16561 ;;		Unchanged: 0/0
 16562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16563 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16564 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16566 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16567 ;;Total ram usage:        4 bytes
 16568 ;; Hardware stack levels used: 1
 16569 ;; Hardware stack levels required when called: 4
 16570 ;; This function calls:
 16571 ;;		Nothing
 16572 ;; This function is called by:
 16573 ;;		_GetOpenOrder
 16574 ;;		_sm_execute_main
 16575 ;;		_sm_execute_menuConfiguration
 16576 ;;		_load_New_Menu
 16577 ;;		_controlSelectRemote
 16578 ;;		_controlSaveRemote
 16579 ;; This function uses a non-reentrant model
 16580 ;;
 16581                           
 16582                           	psect	text52
 16583  009CCC                     __ptext52:
 16584                           	callstack 0
 16585  009CCC                     _SetSegmentValueIntermitentMain:
 16586                           	callstack 22
 16587                           
 16588                           ;incstack = 0
 16589                           ;SetSegmentValueIntermitentMain@d1 stored from wreg
 16590  009CCC  6E1F               	movwf	SetSegmentValueIntermitentMain@d1^0,c
 16591                           
 16592                           ;outputs_MC50.c: 193: void SetSegmentValueIntermitentMain(char d1, char d2,int time);out
      +                          puts_MC50.c: 194: {;outputs_MC50.c: 195:     dispStruct.display_grp.value_display1=d1;
 16593  009CCE  C01F  F072         	movff	SetSegmentValueIntermitentMain@d1,_dispStruct	;volatile
 16594                           
 16595                           ;outputs_MC50.c: 196:     dispStruct.display_grp.value_display2=d2;
 16596  009CD2  C01C  F073         	movff	SetSegmentValueIntermitentMain@d2,_dispStruct+1	;volatile
 16597                           
 16598                           ;outputs_MC50.c: 197:     dispStruct.intermitentFreq=time;
 16599  009CD6  C01D  F075         	movff	SetSegmentValueIntermitentMain@time,_dispStruct+3	;volatile
 16600  009CDA  C01E  F076         	movff	SetSegmentValueIntermitentMain@time+1,_dispStruct+4	;volatile
 16601  009CDE  0012               	return		;funcret
 16602  009CE0                     __end_of_SetSegmentValueIntermitentMain:
 16603                           	callstack 0
 16604                           
 16605 ;; *************** function _readbutton *****************
 16606 ;; Defined at:
 16607 ;;		line 471 in file "inputs_MC50.c"
 16608 ;; Parameters:    Size  Location     Type
 16609 ;;		None
 16610 ;; Auto vars:     Size  Location     Type
 16611 ;;		None
 16612 ;; Return value:  Size  Location     Type
 16613 ;;                  1    wreg      void 
 16614 ;; Registers used:
 16615 ;;		wreg, status,2, status,0
 16616 ;; Tracked objects:
 16617 ;;		On entry : 3F/1
 16618 ;;		On exit  : 3F/1
 16619 ;;		Unchanged: 0/0
 16620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16621 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16622 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16624 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16625 ;;Total ram usage:        0 bytes
 16626 ;; Hardware stack levels used: 1
 16627 ;; Hardware stack levels required when called: 4
 16628 ;; This function calls:
 16629 ;;		Nothing
 16630 ;; This function is called by:
 16631 ;;		_main
 16632 ;; This function uses a non-reentrant model
 16633 ;;
 16634                           
 16635                           	psect	text53
 16636  008BA0                     __ptext53:
 16637                           	callstack 0
 16638  008BA0                     _readbutton:
 16639                           	callstack 26
 16640                           
 16641                           ; BSR set to: 1
 16642                           ;inputs_MC50.c: 474:  static unsigned char key1=0, key2=0;;inputs_MC50.c: 479:  key2 = (
      +                           PORTB & 0x37 );
 16643                           
 16644                           ;incstack = 0
 16645  008BA0  508E               	movf	142,w,c	;volatile
 16646  008BA2  0B37               	andlw	55
 16647  008BA4  6F9B               	movwf	readbutton@key2& (0+255),b
 16648  008BA6  F000               	nop		;# 
 16649  008BA8  F000               	nop		;# 
 16650  008BAA  F000               	nop		;# 
 16651                           
 16652                           ;inputs_MC50.c: 483:  key1 = ( PORTB & 0x37 );
 16653  008BAC  508E               	movf	142,w,c	;volatile
 16654  008BAE  0B37               	andlw	55
 16655  008BB0  0100               	movlb	0	; () banked
 16656  008BB2  6F86               	movwf	readbutton@key1& (0+255),b
 16657                           
 16658                           ;inputs_MC50.c: 485:  if ( key2 == key1 )
 16659  008BB4  5186               	movf	readbutton@key1& (0+255),w,b
 16660  008BB6  0101               	movlb	1	; () banked
 16661  008BB8  199B               	xorwf	readbutton@key2& (0+255),w,b
 16662  008BBA  A4D8               	btfss	status,2,c
 16663  008BBC  D003               	goto	l24689
 16664                           
 16665                           ; BSR set to: 1
 16666                           ;inputs_MC50.c: 486:  {;inputs_MC50.c: 487:         button_struct.current = key1;
 16667  008BBE  C086  F04D         	movff	readbutton@key1,_button_struct+1	;volatile
 16668                           
 16669                           ;inputs_MC50.c: 488:  }
 16670  008BC2  D002               	goto	l24691
 16671  008BC4                     l24689:
 16672                           
 16673                           ; BSR set to: 1
 16674                           ;inputs_MC50.c: 490:     {;inputs_MC50.c: 491:         button_struct.current = 0x37;
 16675  008BC4  0E37               	movlw	55
 16676  008BC6  6E4D               	movwf	(_button_struct+1)^0,c	;volatile
 16677  008BC8                     l24691:
 16678                           
 16679                           ; BSR set to: 1
 16680                           ;inputs_MC50.c: 494:     if ( button_struct.current == 0x37 || ( button_struct.current !
      +                          = button_struct.old && button_struct.current == 0x00))
 16681  008BC8  0E37               	movlw	55
 16682  008BCA  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16683  008BCC  B4D8               	btfsc	status,2,c
 16684  008BCE  D007               	goto	u30060
 16685                           
 16686                           ; BSR set to: 1
 16687  008BD0  504C               	movf	_button_struct^0,w,c	;volatile
 16688  008BD2  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16689  008BD4  B4D8               	btfsc	status,2,c
 16690  008BD6  D007               	goto	l24699
 16691                           
 16692                           ; BSR set to: 1
 16693  008BD8  504D               	movf	(_button_struct+1)^0,w,c	;volatile
 16694  008BDA  A4D8               	btfss	status,2,c
 16695  008BDC  D004               	goto	l24699
 16696  008BDE                     u30060:
 16697                           
 16698                           ; BSR set to: 1
 16699                           ;inputs_MC50.c: 495:  {;inputs_MC50.c: 496:   button_struct.processed=0;
 16700  008BDE  0E00               	movlw	0
 16701  008BE0  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
 16702                           
 16703                           ;inputs_MC50.c: 497:         button_struct.timer=0;
 16704  008BE2  0E00               	movlw	0
 16705  008BE4  6E4E               	movwf	(_button_struct+2)^0,c	;volatile
 16706  008BE6                     l24699:
 16707                           
 16708                           ; BSR set to: 1
 16709                           ;inputs_MC50.c: 500:  if ( button_struct.current != 0x37 )
 16710  008BE6  0E37               	movlw	55
 16711  008BE8  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16712  008BEA  B4D8               	btfsc	status,2,c
 16713  008BEC  D007               	goto	l24707
 16714                           
 16715                           ; BSR set to: 1
 16716                           ;inputs_MC50.c: 501:  {;inputs_MC50.c: 502:   button_struct.old = button_struct.current;
 16717  008BEE  C04D  F04C         	movff	_button_struct+1,_button_struct	;volatile
 16718                           
 16719                           ; BSR set to: 1
 16720                           ;inputs_MC50.c: 504:         if ( button_struct.timer < 250 )
 16721  008BF2  0EFA               	movlw	250
 16722  008BF4  604E               	cpfslt	(_button_struct+2)^0,c	;volatile
 16723  008BF6  D004               	goto	l24709
 16724                           
 16725                           ; BSR set to: 1
 16726                           ;inputs_MC50.c: 505:         {;inputs_MC50.c: 506:             button_struct.timer++;
 16727  008BF8  2A4E               	incf	(_button_struct+2)^0,f,c	;volatile
 16728  008BFA  D002               	goto	l24709
 16729  008BFC                     l24707:
 16730                           
 16731                           ; BSR set to: 1
 16732                           ;inputs_MC50.c: 515:  {;inputs_MC50.c: 516:   button_struct.timer=0;
 16733  008BFC  0E00               	movlw	0
 16734  008BFE  6E4E               	movwf	(_button_struct+2)^0,c	;volatile
 16735  008C00                     l24709:
 16736                           
 16737                           ; BSR set to: 1
 16738                           ;inputs_MC50.c: 520:  if ( button_struct.processed == 1 )
 16739  008C00  044F               	decf	(_button_struct+3)^0,w,c	;volatile
 16740  008C02  A4D8               	btfss	status,2,c
 16741  008C04  0012               	return	
 16742                           
 16743                           ; BSR set to: 1
 16744                           ;inputs_MC50.c: 521:  {;inputs_MC50.c: 522:   button_struct.current = 0x37;
 16745  008C06  0E37               	movlw	55
 16746  008C08  6E4D               	movwf	(_button_struct+1)^0,c	;volatile
 16747                           
 16748                           ; BSR set to: 1
 16749  008C0A  0012               	return		;funcret
 16750  008C0C                     __end_of_readbutton:
 16751                           	callstack 0
 16752                           
 16753 ;; *************** function _read_package *****************
 16754 ;; Defined at:
 16755 ;;		line 21 in file "eusartpackage.c"
 16756 ;; Parameters:    Size  Location     Type
 16757 ;;		None
 16758 ;; Auto vars:     Size  Location     Type
 16759 ;;  package         7   23[COMRAM] struct package_t
 16760 ;; Return value:  Size  Location     Type
 16761 ;;                  7   16[COMRAM] struct package_t
 16762 ;; Registers used:
 16763 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, cstack
 16764 ;; Tracked objects:
 16765 ;;		On entry : 3F/0
 16766 ;;		On exit  : 3F/E
 16767 ;;		Unchanged: 0/0
 16768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16769 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16770 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16772 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16773 ;;Total ram usage:       14 bytes
 16774 ;; Hardware stack levels used: 1
 16775 ;; Hardware stack levels required when called: 5
 16776 ;; This function calls:
 16777 ;;		_EUSART1_Read
 16778 ;; This function is called by:
 16779 ;;		_main
 16780 ;; This function uses a non-reentrant model
 16781 ;;
 16782                           
 16783                           	psect	text54
 16784  009162                     __ptext54:
 16785                           	callstack 0
 16786  009162                     _read_package:
 16787                           	callstack 25
 16788                           
 16789                           ; BSR set to: 0
 16790                           ;eusartpackage.c: 22:         struct package_t package;;eusartpackage.c: 24:         if(
      +                          EUSART1_Read()!=0x0A){
 16791                           
 16792                           ; BSR set to: 1
 16793                           ;incstack = 0
 16794  009162  EC74  F049         	call	_EUSART1_Read	;wreg free
 16795  009166  0A0A               	xorlw	10
 16796  009168  B4D8               	btfsc	status,2,c
 16797  00916A  D00C               	goto	l24867
 16798  00916C                     u30590:
 16799                           
 16800                           ; BSR set to: 14
 16801                           ;eusartpackage.c: 25:             package.valid=0;
 16802  00916C  0E00               	movlw	0
 16803  00916E  6E1E               	movwf	(read_package@package+6)^0,c
 16804                           
 16805                           ; BSR set to: 14
 16806                           ;eusartpackage.c: 26:             return package;
 16807  009170  EE20  F018         	lfsr	2,read_package@package
 16808  009174  EE00  F011         	lfsr	0,?_read_package
 16809  009178  0E06               	movlw	6
 16810  00917A                     u30601:
 16811  00917A  CFDB FFEB          	movff	plusw2,plusw0
 16812  00917E  06E8               	decf	wreg,f,c
 16813  009180  E2FC               	bc	u30601
 16814  009182  0012               	return	
 16815  009184                     l24867:
 16816                           
 16817                           ; BSR set to: 14
 16818                           ;eusartpackage.c: 29:             package.startbyte=0x0A;
 16819  009184  0E0A               	movlw	10
 16820  009186  6E1C               	movwf	(read_package@package+4)^0,c
 16821                           
 16822                           ; BSR set to: 14
 16823                           ;eusartpackage.c: 32:         package.functioncode=EUSART1_Read();
 16824  009188  EC74  F049         	call	_EUSART1_Read	;wreg free
 16825  00918C  6E18               	movwf	read_package@package^0,c
 16826                           
 16827                           ; BSR set to: 14
 16828                           ;eusartpackage.c: 33:         package.address=EUSART1_Read();
 16829  00918E  EC74  F049         	call	_EUSART1_Read	;wreg free
 16830  009192  6E19               	movwf	(read_package@package+1)^0,c
 16831                           
 16832                           ; BSR set to: 14
 16833                           ;eusartpackage.c: 34:         package.data.data8[0]=EUSART1_Read();
 16834  009194  EC74  F049         	call	_EUSART1_Read	;wreg free
 16835  009198  6E1A               	movwf	(read_package@package+2)^0,c
 16836                           
 16837                           ; BSR set to: 14
 16838                           ;eusartpackage.c: 35:         package.data.data8[1]=EUSART1_Read();
 16839  00919A  EC74  F049         	call	_EUSART1_Read	;wreg free
 16840  00919E  6E1B               	movwf	(read_package@package+3)^0,c
 16841                           
 16842                           ; BSR set to: 14
 16843                           ;eusartpackage.c: 38:         if(EUSART1_Read()!=0x0D){
 16844  0091A0  EC74  F049         	call	_EUSART1_Read	;wreg free
 16845  0091A4  0A0D               	xorlw	13
 16846  0091A6  A4D8               	btfss	status,2,c
 16847  0091A8  D7E1               	goto	u30590
 16848                           
 16849                           ; BSR set to: 14
 16850                           ;eusartpackage.c: 43:             package.endbyte=0x0D;
 16851  0091AA  0E0D               	movlw	13
 16852  0091AC  6E1D               	movwf	(read_package@package+5)^0,c
 16853                           
 16854                           ; BSR set to: 14
 16855                           ;eusartpackage.c: 46:         package.valid=1;
 16856  0091AE  0E01               	movlw	1
 16857  0091B0  D7DE               	goto	L76
 16858  0091B2                     __end_of_read_package:
 16859                           	callstack 0
 16860                           
 16861 ;; *************** function _EUSART1_Read *****************
 16862 ;; Defined at:
 16863 ;;		line 151 in file "mcc_generated_files/eusart1.c"
 16864 ;; Parameters:    Size  Location     Type
 16865 ;;		None
 16866 ;; Auto vars:     Size  Location     Type
 16867 ;;  readValue       1   15[COMRAM] unsigned char 
 16868 ;; Return value:  Size  Location     Type
 16869 ;;                  1    wreg      unsigned char 
 16870 ;; Registers used:
 16871 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16872 ;; Tracked objects:
 16873 ;;		On entry : 31/0
 16874 ;;		On exit  : 3F/E
 16875 ;;		Unchanged: 0/0
 16876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16878 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16880 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16881 ;;Total ram usage:        1 bytes
 16882 ;; Hardware stack levels used: 1
 16883 ;; Hardware stack levels required when called: 4
 16884 ;; This function calls:
 16885 ;;		Nothing
 16886 ;; This function is called by:
 16887 ;;		_read_package
 16888 ;; This function uses a non-reentrant model
 16889 ;;
 16890                           
 16891                           	psect	text55
 16892  0092E8                     __ptext55:
 16893                           	callstack 0
 16894  0092E8                     _EUSART1_Read:
 16895                           	callstack 25
 16896                           
 16897                           ;mcc_generated_files/eusart1.c: 155:     while(0 == eusart1RxCount)
 16898                           
 16899                           ;mcc_generated_files/eusart1.c: 155:     while(0 == eusart1RxCount)
 16900                           
 16901                           ; BSR set to: 14
 16902                           ;incstack = 0
 16903  0092E8  0100               	movlb	0	; () banked
 16904  0092EA  5193               	movf	_eusart1RxCount& (0+255),w,b	;volatile
 16905  0092EC  B4D8               	btfsc	status,2,c
 16906  0092EE  D7FC               	goto	__ptext55
 16907                           
 16908                           ; BSR set to: 0
 16909                           ;mcc_generated_files/eusart1.c: 159:     eusart1RxLastError = eusart1RxStatusBuffer[eusa
      +                          rt1RxTail];
 16910  0092F0  0E74               	movlw	low _eusart1RxStatusBuffer
 16911  0092F2  2594               	addwf	_eusart1RxTail& (0+255),w,b	;volatile
 16912  0092F4  6ED9               	movwf	fsr2l,c
 16913  0092F6  6ADA               	clrf	fsr2h,c
 16914  0092F8  0E02               	movlw	high _eusart1RxStatusBuffer
 16915  0092FA  22DA               	addwfc	fsr2h,f,c
 16916  0092FC  50DF               	movf	indf2,w,c
 16917  0092FE  0101               	movlb	1	; () banked
 16918  009300  6F9E               	movwf	_eusart1RxLastError& (0+255),b	;volatile
 16919                           
 16920                           ;mcc_generated_files/eusart1.c: 161:     readValue = eusart1RxBuffer[eusart1RxTail++];
 16921  009302  0E7C               	movlw	low _eusart1RxBuffer
 16922  009304  0100               	movlb	0	; () banked
 16923  009306  2594               	addwf	_eusart1RxTail& (0+255),w,b	;volatile
 16924  009308  6ED9               	movwf	fsr2l,c
 16925  00930A  6ADA               	clrf	fsr2h,c
 16926  00930C  0E02               	movlw	high _eusart1RxBuffer
 16927  00930E  22DA               	addwfc	fsr2h,f,c
 16928  009310  50DF               	movf	indf2,w,c
 16929  009312  6E10               	movwf	EUSART1_Read@readValue^0,c
 16930                           
 16931                           ; BSR set to: 0
 16932  009314  2B94               	incf	_eusart1RxTail& (0+255),f,b	;volatile
 16933                           
 16934                           ; BSR set to: 0
 16935                           ;mcc_generated_files/eusart1.c: 162:     if(sizeof(eusart1RxBuffer) <= eusart1RxTail)
 16936  009316  0E07               	movlw	7
 16937  009318  6594               	cpfsgt	_eusart1RxTail& (0+255),b
 16938  00931A  D002               	goto	l22527
 16939                           
 16940                           ; BSR set to: 0
 16941                           ;mcc_generated_files/eusart1.c: 163:     {;mcc_generated_files/eusart1.c: 164:         e
      +                          usart1RxTail = 0;
 16942  00931C  0E00               	movlw	0
 16943  00931E  6F94               	movwf	_eusart1RxTail& (0+255),b	;volatile
 16944  009320                     l22527:
 16945                           
 16946                           ; BSR set to: 0
 16947                           ;mcc_generated_files/eusart1.c: 166:     PIE3bits.RC1IE = 0;
 16948  009320  010E               	movlb	14	; () banked
 16949  009322  9BC5               	bcf	197,5,b	;volatile
 16950                           
 16951                           ; BSR set to: 14
 16952                           ;mcc_generated_files/eusart1.c: 167:     eusart1RxCount--;
 16953  009324  0100               	movlb	0	; () banked
 16954  009326  0793               	decf	_eusart1RxCount& (0+255),f,b	;volatile
 16955                           
 16956                           ; BSR set to: 0
 16957                           ;mcc_generated_files/eusart1.c: 168:     PIE3bits.RC1IE = 1;
 16958  009328  010E               	movlb	14	; () banked
 16959  00932A  8BC5               	bsf	197,5,b	;volatile
 16960                           
 16961                           ; BSR set to: 14
 16962                           ;mcc_generated_files/eusart1.c: 170:     return readValue;
 16963  00932C  5010               	movf	EUSART1_Read@readValue^0,w,c
 16964                           
 16965                           ; BSR set to: 14
 16966  00932E  0012               	return		;funcret
 16967  009330                     __end_of_EUSART1_Read:
 16968                           	callstack 0
 16969                           
 16970 ;; *************** function _readRFButtons *****************
 16971 ;; Defined at:
 16972 ;;		line 231 in file "inputs_MC50.c"
 16973 ;; Parameters:    Size  Location     Type
 16974 ;;		None
 16975 ;; Auto vars:     Size  Location     Type
 16976 ;;		None
 16977 ;; Return value:  Size  Location     Type
 16978 ;;                  1    wreg      void 
 16979 ;; Registers used:
 16980 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 16981 ;; Tracked objects:
 16982 ;;		On entry : 3F/1
 16983 ;;		On exit  : 3E/0
 16984 ;;		Unchanged: 0/0
 16985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16986 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16987 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16988 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16989 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16990 ;;Total ram usage:        0 bytes
 16991 ;; Hardware stack levels used: 1
 16992 ;; Hardware stack levels required when called: 15
 16993 ;; This function calls:
 16994 ;;		_DecryptPacket_12BIT
 16995 ;;		_keeloqDecryptPacket
 16996 ;; This function is called by:
 16997 ;;		_main
 16998 ;; This function uses a non-reentrant model
 16999 ;;
 17000                           
 17001                           	psect	text56
 17002  006574                     __ptext56:
 17003                           	callstack 0
 17004  006574                     _readRFButtons:
 17005                           	callstack 15
 17006                           
 17007                           ; BSR set to: 1
 17008                           ;inputs_MC50.c: 232:     static unsigned char key1 = 0;;inputs_MC50.c: 233:     static u
      +                          int32_t serial = 0;;inputs_MC50.c: 234:     static uint16_t rollingCode= 0;;inputs_MC50.
      +                          c: 235:     static TypeCMD keyType = 0;;inputs_MC50.c: 236:     static TypeRemote_st typ
      +                          eRemote;;inputs_MC50.c: 241:     if(RFFull)
 17009                           
 17010                           ; BSR set to: 14
 17011                           ;incstack = 0
 17012  006574  0100               	movlb	0	; () banked
 17013  006576  518B               	movf	_RFFull& (0+255),w,b	;volatile
 17014  006578  B4D8               	btfsc	status,2,c
 17015  00657A  D0B9               	goto	l24675
 17016                           
 17017                           ; BSR set to: 0
 17018                           ;inputs_MC50.c: 242:     {;inputs_MC50.c: 244:          if(RFFull_12BIT==0)
 17019  00657C  518A               	movf	_RFFull_12BIT& (0+255),w,b	;volatile
 17020  00657E  A4D8               	btfss	status,2,c
 17021  006580  D00B               	goto	l24621
 17022                           
 17023                           ; BSR set to: 0
 17024                           ;inputs_MC50.c: 245:          {;inputs_MC50.c: 246:             keyType = keeloqDecryptP
      +                          acket(BufferRF,&classic_data);
 17025  006582  0EC6               	movlw	low _BufferRF
 17026  006584  6FE0               	movwf	keeloqDecryptPacket@data& (0+255),b
 17027  006586  0E02               	movlw	high _BufferRF
 17028  006588  6FE1               	movwf	(keeloqDecryptPacket@data+1)& (0+255),b
 17029  00658A  0E90               	movlw	low _classic_data
 17030  00658C  6FE2               	movwf	keeloqDecryptPacket@classic_data& (0+255),b
 17031  00658E  0E02               	movlw	high _classic_data
 17032  006590  6FE3               	movwf	(keeloqDecryptPacket@classic_data+1)& (0+255),b
 17033  006592  ECB5  F02D         	call	_keeloqDecryptPacket	;wreg free
 17034  006596  D00A               	goto	L77
 17035  006598                     l24621:
 17036                           
 17037                           ; BSR set to: 0
 17038                           ;inputs_MC50.c: 249:          {;inputs_MC50.c: 250:             keyType = DecryptPacket_
      +                          12BIT(BufferRF,&classic_data);
 17039  006598  0EC6               	movlw	low _BufferRF
 17040  00659A  6FE0               	movwf	DecryptPacket_12BIT@data& (0+255),b
 17041  00659C  0E02               	movlw	high _BufferRF
 17042  00659E  6FE1               	movwf	(DecryptPacket_12BIT@data+1)& (0+255),b
 17043  0065A0  0E90               	movlw	low _classic_data
 17044  0065A2  6FE2               	movwf	DecryptPacket_12BIT@classic_data& (0+255),b
 17045  0065A4  0E02               	movlw	high _classic_data
 17046  0065A6  6FE3               	movwf	(DecryptPacket_12BIT@classic_data+1)& (0+255),b
 17047  0065A8  ECB5  F040         	call	_DecryptPacket_12BIT	;wreg free
 17048  0065AC                     L77:
 17049  0065AC  6F87               	movwf	readRFButtons@keyType& (0+255),b
 17050                           
 17051                           ; BSR set to: 0
 17052                           ;inputs_MC50.c: 254:         key1 = classic_data.fcode1;
 17053  0065AE  C29C  F088         	movff	_classic_data+12,readRFButtons@key1
 17054                           
 17055                           ; BSR set to: 0
 17056                           ;inputs_MC50.c: 255:         serial = classic_data.serialnumber;
 17057  0065B2  C294  F181         	movff	_classic_data+4,readRFButtons@serial
 17058  0065B6  C295  F182         	movff	_classic_data+5,readRFButtons@serial+1
 17059  0065BA  C296  F183         	movff	_classic_data+6,readRFButtons@serial+2
 17060  0065BE  C297  F184         	movff	_classic_data+7,readRFButtons@serial+3
 17061                           
 17062                           ; BSR set to: 0
 17063                           ;inputs_MC50.c: 256:         rollingCode = classic_data.sync;
 17064  0065C2  C298  F189         	movff	_classic_data+8,readRFButtons@rollingCode
 17065  0065C6  C299  F18A         	movff	_classic_data+9,readRFButtons@rollingCode+1
 17066                           
 17067                           ; BSR set to: 0
 17068                           ;inputs_MC50.c: 257:         typeRemote = classic_data.type;
 17069  0065CA  C29E  F19C         	movff	_classic_data+14,readRFButtons@typeRemote
 17070                           
 17071                           ; BSR set to: 0
 17072                           ;inputs_MC50.c: 270:         if (var_sys.LearningIsEnabled == YES){
 17073  0065CE  0101               	movlb	1	; () banked
 17074  0065D0  0526               	decf	(_var_sys+38)& (0+255),w,b	;volatile
 17075  0065D2  A4D8               	btfss	status,2,c
 17076  0065D4  D01E               	goto	l24643
 17077                           
 17078                           ; BSR set to: 1
 17079                           ;inputs_MC50.c: 272:              if (keyType==NoCMD || rfCMD.currentKey!=key1 || rfCMD.
      +                          currentSerial!=serial || keyType!=rfCMD.currentType)
 17080  0065D6  0100               	movlb	0	; () banked
 17081  0065D8  5187               	movf	readRFButtons@keyType& (0+255),w,b
 17082  0065DA  B4D8               	btfsc	status,2,c
 17083  0065DC  D044               	goto	u29930
 17084                           
 17085                           ; BSR set to: 0
 17086  0065DE  5188               	movf	readRFButtons@key1& (0+255),w,b
 17087  0065E0  183C               	xorwf	(_rfCMD+1)^0,w,c	;volatile
 17088  0065E2  A4D8               	btfss	status,2,c
 17089  0065E4  D040               	goto	u29930
 17090                           
 17091                           ; BSR set to: 0
 17092  0065E6  0101               	movlb	1	; () banked
 17093  0065E8  5181               	movf	readRFButtons@serial& (0+255),w,b
 17094  0065EA  183D               	xorwf	(_rfCMD+2)^0,w,c	;volatile
 17095  0065EC  E13C               	bnz	l24655
 17096  0065EE  5182               	movf	(readRFButtons@serial+1)& (0+255),w,b
 17097  0065F0  183E               	xorwf	(_rfCMD+3)^0,w,c	;volatile
 17098  0065F2  E139               	bnz	l24655
 17099  0065F4  5183               	movf	(readRFButtons@serial+2)& (0+255),w,b
 17100  0065F6  183F               	xorwf	(_rfCMD+4)^0,w,c	;volatile
 17101  0065F8  E136               	bnz	l24655
 17102  0065FA  5184               	movf	(readRFButtons@serial+3)& (0+255),w,b
 17103  0065FC  1840               	xorwf	(_rfCMD+5)^0,w,c	;volatile
 17104  0065FE  A4D8               	btfss	status,2,c
 17105  006600  D032               	goto	u29930
 17106                           
 17107                           ; BSR set to: 1
 17108  006602  0100               	movlb	0	; () banked
 17109  006604  5187               	movf	readRFButtons@keyType& (0+255),w,b
 17110  006606  183B               	xorwf	_rfCMD^0,w,c	;volatile
 17111  006608  A4D8               	btfss	status,2,c
 17112  00660A  D02D               	goto	u29930
 17113  00660C                     l1654:
 17114                           
 17115                           ;inputs_MC50.c: 274:                 rfCMD.timer=0;
 17116  00660C  0E00               	movlw	0
 17117  00660E  6E44               	movwf	(_rfCMD+9)^0,c	;volatile
 17118                           
 17119                           ;inputs_MC50.c: 275:         }
 17120  006610  D038               	goto	l1657
 17121  006612                     l24643:
 17122                           
 17123                           ; BSR set to: 1
 17124  006612  0100               	movlb	0	; () banked
 17125  006614  5187               	movf	readRFButtons@keyType& (0+255),w,b
 17126  006616  B4D8               	btfsc	status,2,c
 17127  006618  D026               	goto	u29930
 17128                           
 17129                           ; BSR set to: 0
 17130  00661A  5187               	movf	readRFButtons@keyType& (0+255),w,b
 17131  00661C  183B               	xorwf	_rfCMD^0,w,c	;volatile
 17132  00661E  B4D8               	btfsc	status,2,c
 17133  006620  D00F               	goto	u29910
 17134                           
 17135                           ; BSR set to: 0
 17136  006622  0101               	movlb	1	; () banked
 17137  006624  BFB4               	btfsc	(_ts_system+21)& (0+255),7,b	;volatile
 17138  006626  D005               	goto	u29900
 17139  006628  51B4               	movf	(_ts_system+21)& (0+255),w,b	;volatile
 17140  00662A  E10A               	bnz	l24651
 17141  00662C  05B3               	decf	(_ts_system+20)& (0+255),w,b	;volatile
 17142  00662E  B0D8               	btfsc	status,0,c
 17143  006630  D007               	goto	u29910
 17144  006632                     u29900:
 17145                           
 17146                           ; BSR set to: 1
 17147  006632  5189               	movf	readRFButtons@rollingCode& (0+255),w,b
 17148  006634  1841               	xorwf	(_rfCMD+6)^0,w,c	;volatile
 17149  006636  E117               	bnz	l24655
 17150  006638  518A               	movf	(readRFButtons@rollingCode+1)& (0+255),w,b
 17151  00663A  1842               	xorwf	(_rfCMD+7)^0,w,c	;volatile
 17152  00663C  A4D8               	btfss	status,2,c
 17153  00663E  D013               	goto	u29930
 17154  006640                     u29910:
 17155  006640                     l24651:
 17156  006640  0100               	movlb	0	; () banked
 17157  006642  5188               	movf	readRFButtons@key1& (0+255),w,b
 17158  006644  183C               	xorwf	(_rfCMD+1)^0,w,c	;volatile
 17159  006646  A4D8               	btfss	status,2,c
 17160  006648  D00E               	goto	u29930
 17161                           
 17162                           ; BSR set to: 0
 17163  00664A  0101               	movlb	1	; () banked
 17164  00664C  5181               	movf	readRFButtons@serial& (0+255),w,b
 17165  00664E  183D               	xorwf	(_rfCMD+2)^0,w,c	;volatile
 17166  006650  E10A               	bnz	u29930
 17167  006652  5182               	movf	(readRFButtons@serial+1)& (0+255),w,b
 17168  006654  183E               	xorwf	(_rfCMD+3)^0,w,c	;volatile
 17169  006656  E107               	bnz	u29930
 17170  006658  5183               	movf	(readRFButtons@serial+2)& (0+255),w,b
 17171  00665A  183F               	xorwf	(_rfCMD+4)^0,w,c	;volatile
 17172  00665C  E104               	bnz	u29930
 17173  00665E  5184               	movf	(readRFButtons@serial+3)& (0+255),w,b
 17174  006660  1840               	xorwf	(_rfCMD+5)^0,w,c	;volatile
 17175  006662  B4D8               	btfsc	status,2,c
 17176  006664  D003               	goto	l24657
 17177  006666                     u29930:
 17178  006666                     l24655:
 17179                           
 17180                           ;inputs_MC50.c: 278:         {;inputs_MC50.c: 279:            rfCMD.processed=0;
 17181  006666  0E00               	movlw	0
 17182  006668  6E45               	movwf	(_rfCMD+10)^0,c	;volatile
 17183  00666A  D7D0               	goto	l1654
 17184  00666C                     l24657:
 17185                           
 17186                           ; BSR set to: 1
 17187  00666C  BFB4               	btfsc	(_ts_system+21)& (0+255),7,b	;volatile
 17188  00666E  D005               	goto	u29940
 17189  006670  51B4               	movf	(_ts_system+21)& (0+255),w,b	;volatile
 17190  006672  E107               	bnz	l1657
 17191  006674  05B3               	decf	(_ts_system+20)& (0+255),w,b	;volatile
 17192  006676  B0D8               	btfsc	status,0,c
 17193  006678  D004               	goto	l1657
 17194  00667A                     u29940:
 17195                           
 17196                           ; BSR set to: 1
 17197  00667A  0E02               	movlw	2
 17198  00667C  199C               	xorwf	readRFButtons@typeRemote& (0+255),w,b
 17199  00667E  B4D8               	btfsc	status,2,c
 17200  006680  D7F2               	goto	u29930
 17201  006682                     l1657:
 17202                           
 17203                           ;inputs_MC50.c: 289:         ts_system.TimeLastCommand=( 500/50);
 17204  006682  0E00               	movlw	0
 17205  006684  0101               	movlb	1	; () banked
 17206  006686  6FB4               	movwf	(_ts_system+21)& (0+255),b	;volatile
 17207  006688  0E0A               	movlw	10
 17208  00668A  6FB3               	movwf	(_ts_system+20)& (0+255),b	;volatile
 17209                           
 17210                           ; BSR set to: 1
 17211                           ;inputs_MC50.c: 291:         rfCMD.currentType=keyType;
 17212  00668C  C087  F03B         	movff	readRFButtons@keyType,_rfCMD	;volatile
 17213                           
 17214                           ;inputs_MC50.c: 292:         if
 17215  006690  503B               	movf	_rfCMD^0,w,c	;volatile
 17216  006692  B4D8               	btfsc	status,2,c
 17217  006694  D01A               	goto	u29990
 17218                           
 17219                           ; BSR set to: 1
 17220  006696  0100               	movlb	0	; () banked
 17221  006698  5188               	movf	readRFButtons@key1& (0+255),w,b
 17222  00669A  183C               	xorwf	(_rfCMD+1)^0,w,c	;volatile
 17223  00669C  A4D8               	btfss	status,2,c
 17224  00669E  D015               	goto	u29990
 17225                           
 17226                           ; BSR set to: 0
 17227  0066A0  0101               	movlb	1	; () banked
 17228  0066A2  5181               	movf	readRFButtons@serial& (0+255),w,b
 17229  0066A4  183D               	xorwf	(_rfCMD+2)^0,w,c	;volatile
 17230  0066A6  E111               	bnz	l1667
 17231  0066A8  5182               	movf	(readRFButtons@serial+1)& (0+255),w,b
 17232  0066AA  183E               	xorwf	(_rfCMD+3)^0,w,c	;volatile
 17233  0066AC  E10E               	bnz	l1667
 17234  0066AE  5183               	movf	(readRFButtons@serial+2)& (0+255),w,b
 17235  0066B0  183F               	xorwf	(_rfCMD+4)^0,w,c	;volatile
 17236  0066B2  E10B               	bnz	l1667
 17237  0066B4  5184               	movf	(readRFButtons@serial+3)& (0+255),w,b
 17238  0066B6  1840               	xorwf	(_rfCMD+5)^0,w,c	;volatile
 17239  0066B8  A4D8               	btfss	status,2,c
 17240  0066BA  D007               	goto	u29990
 17241                           
 17242                           ; BSR set to: 1
 17243  0066BC  5189               	movf	readRFButtons@rollingCode& (0+255),w,b
 17244  0066BE  1841               	xorwf	(_rfCMD+6)^0,w,c	;volatile
 17245  0066C0  E104               	bnz	u29990
 17246  0066C2  518A               	movf	(readRFButtons@rollingCode+1)& (0+255),w,b
 17247  0066C4  1842               	xorwf	(_rfCMD+7)^0,w,c	;volatile
 17248  0066C6  B4D8               	btfsc	status,2,c
 17249  0066C8  D00E               	goto	l24673
 17250  0066CA                     u29990:
 17251  0066CA                     l1667:
 17252                           
 17253                           ;inputs_MC50.c: 299:         {;inputs_MC50.c: 300:             rfCMD.currentKey=key1;
 17254  0066CA  C088  F03C         	movff	readRFButtons@key1,_rfCMD+1	;volatile
 17255                           
 17256                           ;inputs_MC50.c: 301:             rfCMD.currentSerial=serial;
 17257  0066CE  C181  F03D         	movff	readRFButtons@serial,_rfCMD+2	;volatile
 17258  0066D2  C182  F03E         	movff	readRFButtons@serial+1,_rfCMD+3	;volatile
 17259  0066D6  C183  F03F         	movff	readRFButtons@serial+2,_rfCMD+4	;volatile
 17260  0066DA  C184  F040         	movff	readRFButtons@serial+3,_rfCMD+5	;volatile
 17261                           
 17262                           ;inputs_MC50.c: 302:             rfCMD.currentPosMem=classic_data.positionMem;
 17263  0066DE  C29F  F043         	movff	_classic_data+15,_rfCMD+8	;volatile
 17264                           
 17265                           ;inputs_MC50.c: 303:             rfCMD.timer=0;
 17266  0066E2  0E00               	movlw	0
 17267  0066E4  6E44               	movwf	(_rfCMD+9)^0,c	;volatile
 17268  0066E6                     l24673:
 17269                           
 17270                           ;inputs_MC50.c: 305:         rfCMD.currentRolling=rollingCode;
 17271  0066E6  C189  F041         	movff	readRFButtons@rollingCode,_rfCMD+6	;volatile
 17272  0066EA  C18A  F042         	movff	readRFButtons@rollingCode+1,_rfCMD+7	;volatile
 17273  0066EE                     l24675:
 17274                           
 17275                           ;inputs_MC50.c: 310:     if(rfCMD.processed == 1)
 17276  0066EE  0445               	decf	(_rfCMD+10)^0,w,c	;volatile
 17277  0066F0  A4D8               	btfss	status,2,c
 17278  0066F2  D003               	goto	l24679
 17279                           
 17280                           ;inputs_MC50.c: 311:     {;inputs_MC50.c: 312:        rfCMD.currentType = NoCMD;
 17281  0066F4  0E00               	movlw	0
 17282  0066F6  6E3B               	movwf	_rfCMD^0,c	;volatile
 17283                           
 17284                           ;inputs_MC50.c: 313:     }
 17285  0066F8  0012               	return	
 17286  0066FA                     l24679:
 17287  0066FA  503B               	movf	_rfCMD^0,w,c	;volatile
 17288  0066FC  B4D8               	btfsc	status,2,c
 17289  0066FE  0012               	return	
 17290                           
 17291                           ;inputs_MC50.c: 315:     {;inputs_MC50.c: 317:         if ( rfCMD.timer < 250 )
 17292  006700  0EFA               	movlw	250
 17293  006702  6044               	cpfslt	(_rfCMD+9)^0,c	;volatile
 17294  006704  0012               	return	
 17295                           
 17296                           ;inputs_MC50.c: 318:         {;inputs_MC50.c: 319:             rfCMD.timer++;
 17297  006706  2A44               	incf	(_rfCMD+9)^0,f,c	;volatile
 17298  006708  0012               	return		;funcret
 17299  00670A                     __end_of_readRFButtons:
 17300                           	callstack 0
 17301                           
 17302 ;; *************** function _keeloqDecryptPacket *****************
 17303 ;; Defined at:
 17304 ;;		line 299 in file "keeloqDecrypt_MC50.c"
 17305 ;; Parameters:    Size  Location     Type
 17306 ;;  data            2    8[BANK0 ] PTR unsigned char 
 17307 ;;		 -> BufferRF(9), 
 17308 ;;  classic_data    2   10[BANK0 ] PTR struct .
 17309 ;;		 -> classic_data(16), 
 17310 ;; Auto vars:     Size  Location     Type
 17311 ;;  commandType     1   17[BANK0 ] enum E10539
 17312 ;;  hop_error       1   16[BANK0 ] enum E10730
 17313 ;; Return value:  Size  Location     Type
 17314 ;;                  1    wreg      enum E10539
 17315 ;; Registers used:
 17316 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 17317 ;; Tracked objects:
 17318 ;;		On entry : 3F/0
 17319 ;;		On exit  : 3F/0
 17320 ;;		Unchanged: 0/0
 17321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17322 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17323 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17324 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17325 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17326 ;;Total ram usage:       10 bytes
 17327 ;; Hardware stack levels used: 1
 17328 ;; Hardware stack levels required when called: 14
 17329 ;; This function calls:
 17330 ;;		_DecCHK
 17331 ;;		_HopCHK
 17332 ;;		_keeloq_classic_decrypt_packet
 17333 ;;		_memcpy
 17334 ;;		_validateRemoteSerialNumber
 17335 ;;		_verifyProgramingMode
 17336 ;; This function is called by:
 17337 ;;		_readRFButtons
 17338 ;; This function uses a non-reentrant model
 17339 ;;
 17340                           
 17341                           	psect	text57
 17342  005B6A                     __ptext57:
 17343                           	callstack 0
 17344  005B6A                     _keeloqDecryptPacket:
 17345                           	callstack 15
 17346                           
 17347                           ; BSR set to: 0
 17348                           ;keeloqDecrypt_MC50.c: 299: TypeCMD keeloqDecryptPacket (char* data,classic_encoder_t* c
      +                          lassic_data);keeloqDecrypt_MC50.c: 300: {;keeloqDecrypt_MC50.c: 301:     result_code_t h
      +                          op_error;;keeloqDecrypt_MC50.c: 302:     TypeCMD commandType;;keeloqDecrypt_MC50.c: 303:
      +                               memcpy(classic_data, data, 8);
 17349                           
 17350                           ;incstack = 0
 17351  005B6A  C0E2  F010         	movff	keeloqDecryptPacket@classic_data,memcpy@d1
 17352  005B6E  C0E3  F011         	movff	keeloqDecryptPacket@classic_data+1,memcpy@d1+1
 17353  005B72  C0E0  F012         	movff	keeloqDecryptPacket@data,memcpy@s1
 17354  005B76  C0E1  F013         	movff	keeloqDecryptPacket@data+1,memcpy@s1+1
 17355  005B7A  0E00               	movlw	0
 17356  005B7C  6E15               	movwf	(memcpy@n+1)^0,c
 17357  005B7E  0E08               	movlw	8
 17358  005B80  6E14               	movwf	memcpy@n^0,c
 17359  005B82  ECDD  F049         	call	_memcpy	;wreg free
 17360                           
 17361                           ;keeloqDecrypt_MC50.c: 304:     memcpy(&classic_data->sync, &classic_data->raw_data, 4);
 17362  005B86  0E08               	movlw	8
 17363  005B88  0100               	movlb	0	; () banked
 17364  005B8A  25E2               	addwf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17365  005B8C  6E10               	movwf	memcpy@d1^0,c
 17366  005B8E  0E00               	movlw	0
 17367  005B90  21E3               	addwfc	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17368  005B92  6E11               	movwf	(memcpy@d1+1)^0,c
 17369  005B94  C0E2  F012         	movff	keeloqDecryptPacket@classic_data,memcpy@s1
 17370  005B98  C0E3  F013         	movff	keeloqDecryptPacket@classic_data+1,memcpy@s1+1
 17371  005B9C  0E00               	movlw	0
 17372  005B9E  6E15               	movwf	(memcpy@n+1)^0,c
 17373  005BA0  0E04               	movlw	4
 17374  005BA2  6E14               	movwf	memcpy@n^0,c
 17375  005BA4  ECDD  F049         	call	_memcpy	;wreg free
 17376                           
 17377                           ;keeloqDecrypt_MC50.c: 305:     classic_data->fcode1 = *((uint8_t *) (&classic_data->ser
      +                          ialnumber) + 3) >> 4;
 17378  005BA8  0100               	movlb	0	; () banked
 17379  005BAA  EE20 F00C          	lfsr	2,12
 17380  005BAE  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17381  005BB0  26D9               	addwf	fsr2l,f,c
 17382  005BB2  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17383  005BB4  22DA               	addwfc	fsr2h,f,c
 17384  005BB6  EE10 F007          	lfsr	1,7
 17385  005BBA  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17386  005BBC  26E1               	addwf	fsr1l,f,c
 17387  005BBE  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17388  005BC0  22E2               	addwfc	fsr1h,f,c
 17389  005BC2  50E7               	movf	indf1,w,c
 17390  005BC4  6FE4               	movwf	??_keeloqDecryptPacket& (0+255),b
 17391  005BC6  39E4               	swapf	??_keeloqDecryptPacket& (0+255),w,b
 17392  005BC8  0B0F               	andlw	15
 17393  005BCA  6EDF               	movwf	indf2,c
 17394                           
 17395                           ; BSR set to: 0
 17396                           ;keeloqDecrypt_MC50.c: 306:     commandType=verifyProgramingMode(classic_data);
 17397  005BCC  C0E2  F010         	movff	keeloqDecryptPacket@classic_data,verifyProgramingMode@classic_data
 17398  005BD0  C0E3  F011         	movff	keeloqDecryptPacket@classic_data+1,verifyProgramingMode@classic_data+1
 17399  005BD4  ECF7  F04A         	call	_verifyProgramingMode	;wreg free
 17400  005BD8  6FE9               	movwf	keeloqDecryptPacket@commandType& (0+255),b
 17401                           
 17402                           ; BSR set to: 0
 17403                           ;keeloqDecrypt_MC50.c: 308:     if(commandType==NoCMD)
 17404  005BDA  51E9               	movf	keeloqDecryptPacket@commandType& (0+255),w,b
 17405  005BDC  A4D8               	btfss	status,2,c
 17406  005BDE  D019               	goto	l22851
 17407                           
 17408                           ; BSR set to: 0
 17409                           ;keeloqDecrypt_MC50.c: 309:     {;keeloqDecrypt_MC50.c: 310:         commandType=validat
      +                          eRemoteSerialNumber(classic_data->serialnumber,NO,&classic_data->positionMem);
 17410  005BE0  EE20 F004          	lfsr	2,4
 17411  005BE4  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17412  005BE6  26D9               	addwf	fsr2l,f,c
 17413  005BE8  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17414  005BEA  22DA               	addwfc	fsr2h,f,c
 17415  005BEC  CFDE F02E          	movff	postinc2,validateRemoteSerialNumber@serial
 17416  005BF0  CFDE F02F          	movff	postinc2,validateRemoteSerialNumber@serial+1
 17417  005BF4  CFDE F030          	movff	postinc2,validateRemoteSerialNumber@serial+2
 17418  005BF8  CFDE F031          	movff	postinc2,validateRemoteSerialNumber@serial+3
 17419  005BFC  0E00               	movlw	0
 17420  005BFE  6E32               	movwf	validateRemoteSerialNumber@VerifyOnlySerial^0,c
 17421  005C00  0E0F               	movlw	15
 17422  005C02  25E2               	addwf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17423  005C04  6E33               	movwf	validateRemoteSerialNumber@position^0,c
 17424  005C06  0E00               	movlw	0
 17425  005C08  21E3               	addwfc	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17426  005C0A  6E34               	movwf	(validateRemoteSerialNumber@position+1)^0,c
 17427  005C0C  EC52  F030         	call	_validateRemoteSerialNumber	;wreg free
 17428  005C10  D004               	goto	L78
 17429  005C12                     l22851:
 17430                           
 17431                           ; BSR set to: 0
 17432  005C12  51A6               	movf	(_var_sys_NVM+14)& (0+255),w,b	;volatile
 17433  005C14  A4D8               	btfss	status,2,c
 17434  005C16  D002               	goto	l22855
 17435                           
 17436                           ; BSR set to: 0
 17437                           ;keeloqDecrypt_MC50.c: 313:     {;keeloqDecrypt_MC50.c: 314:         commandType=NoCMD;
 17438  005C18  0E00               	movlw	0
 17439  005C1A                     L78:
 17440  005C1A  6FE9               	movwf	keeloqDecryptPacket@commandType& (0+255),b
 17441  005C1C                     l22855:
 17442                           
 17443                           ; BSR set to: 0
 17444                           ;keeloqDecrypt_MC50.c: 316:     classic_data->serialnumber = classic_data->serialnumber 
      +                          & 0x0FFFFFFF;
 17445  005C1C  EE20 F004          	lfsr	2,4
 17446  005C20  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17447  005C22  26D9               	addwf	fsr2l,f,c
 17448  005C24  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17449  005C26  22DA               	addwfc	fsr2h,f,c
 17450  005C28  0EFF               	movlw	255
 17451  005C2A  14DE               	andwf	postinc2,w,c
 17452  005C2C  6FE4               	movwf	??_keeloqDecryptPacket& (0+255),b
 17453  005C2E  0EFF               	movlw	255
 17454  005C30  14DE               	andwf	postinc2,w,c
 17455  005C32  6FE5               	movwf	(??_keeloqDecryptPacket+1)& (0+255),b
 17456  005C34  0EFF               	movlw	255
 17457  005C36  14DE               	andwf	postinc2,w,c
 17458  005C38  6FE6               	movwf	(??_keeloqDecryptPacket+2)& (0+255),b
 17459  005C3A  0E0F               	movlw	15
 17460  005C3C  14DE               	andwf	postinc2,w,c
 17461  005C3E  6FE7               	movwf	(??_keeloqDecryptPacket+3)& (0+255),b
 17462  005C40  EE20 F004          	lfsr	2,4
 17463  005C44  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17464  005C46  26D9               	addwf	fsr2l,f,c
 17465  005C48  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17466  005C4A  22DA               	addwfc	fsr2h,f,c
 17467  005C4C  C0E4  FFDE         	movff	??_keeloqDecryptPacket,postinc2
 17468  005C50  C0E5  FFDE         	movff	??_keeloqDecryptPacket+1,postinc2
 17469  005C54  C0E6  FFDE         	movff	??_keeloqDecryptPacket+2,postinc2
 17470  005C58  C0E7  FFDE         	movff	??_keeloqDecryptPacket+3,postinc2
 17471                           
 17472                           ; BSR set to: 0
 17473                           ;keeloqDecrypt_MC50.c: 318:     keeloq_classic_decrypt_packet(classic_data);
 17474  005C5C  C0E2  F038         	movff	keeloqDecryptPacket@classic_data,keeloq_classic_decrypt_packet@data
 17475  005C60  C0E3  F039         	movff	keeloqDecryptPacket@classic_data+1,keeloq_classic_decrypt_packet@data+1
 17476  005C64  ECB1  F047         	call	_keeloq_classic_decrypt_packet	;wreg free
 17477                           
 17478                           ; BSR set to: 0
 17479                           ;keeloqDecrypt_MC50.c: 320:     if(commandType==NoCMD )
 17480  005C68  51E9               	movf	keeloqDecryptPacket@commandType& (0+255),w,b
 17481  005C6A  A4D8               	btfss	status,2,c
 17482  005C6C  D01B               	goto	l22873
 17483                           
 17484                           ; BSR set to: 0
 17485                           ;keeloqDecrypt_MC50.c: 321:     {;keeloqDecrypt_MC50.c: 323:         if (DecCHK(classic_
      +                          data) == 0) {
 17486  005C6E  C0E2  F010         	movff	keeloqDecryptPacket@classic_data,DecCHK@data
 17487  005C72  C0E3  F011         	movff	keeloqDecryptPacket@classic_data+1,DecCHK@data+1
 17488  005C76  EC11  F04B         	call	_DecCHK	;wreg free
 17489  005C7A  0900               	iorlw	0
 17490  005C7C  A4D8               	btfss	status,2,c
 17491  005C7E  D008               	goto	l22865
 17492                           
 17493                           ; BSR set to: 0
 17494                           ;keeloqDecrypt_MC50.c: 324:             classic_data->type=Keeloq_NoRollingCode;
 17495  005C80  EE20 F00E          	lfsr	2,14
 17496  005C84  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17497  005C86  26D9               	addwf	fsr2l,f,c
 17498  005C88  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17499  005C8A  22DA               	addwfc	fsr2h,f,c
 17500  005C8C  0E01               	movlw	1
 17501  005C8E  D007               	goto	L79
 17502  005C90                     l22865:
 17503                           
 17504                           ; BSR set to: 0
 17505                           ;keeloqDecrypt_MC50.c: 328:         {;keeloqDecrypt_MC50.c: 329:             classic_dat
      +                          a->type=Keeloq_RollingCode;
 17506  005C90  EE20 F00E          	lfsr	2,14
 17507  005C94  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17508  005C96  26D9               	addwf	fsr2l,f,c
 17509  005C98  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17510  005C9A  22DA               	addwfc	fsr2h,f,c
 17511  005C9C  0E00               	movlw	0
 17512  005C9E                     L79:
 17513  005C9E  6EDF               	movwf	indf2,c
 17514  005CA0                     l22867:
 17515                           
 17516                           ; BSR set to: 0
 17517                           ;keeloqDecrypt_MC50.c: 331:         return NoCMD;
 17518  005CA0  0E00               	movlw	0
 17519  005CA2  0012               	return	
 17520  005CA4                     l22873:
 17521                           
 17522                           ; BSR set to: 0
 17523  005CA4  0E06               	movlw	6
 17524  005CA6  19E9               	xorwf	keeloqDecryptPacket@commandType& (0+255),w,b
 17525  005CA8  B4D8               	btfsc	status,2,c
 17526  005CAA  D004               	goto	u26570
 17527                           
 17528                           ; BSR set to: 0
 17529  005CAC  0E05               	movlw	5
 17530  005CAE  19E9               	xorwf	keeloqDecryptPacket@commandType& (0+255),w,b
 17531  005CB0  A4D8               	btfss	status,2,c
 17532  005CB2  D01B               	goto	l22883
 17533  005CB4                     u26570:
 17534                           
 17535                           ; BSR set to: 0
 17536                           ;keeloqDecrypt_MC50.c: 334:     {;keeloqDecrypt_MC50.c: 335:         if(validateRemoteSe
      +                          rialNumber(classic_data->serialnumber,YES,&classic_data->positionMem)==NoCMD)
 17537  005CB4  EE20 F004          	lfsr	2,4
 17538  005CB8  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17539  005CBA  26D9               	addwf	fsr2l,f,c
 17540  005CBC  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17541  005CBE  22DA               	addwfc	fsr2h,f,c
 17542  005CC0  CFDE F02E          	movff	postinc2,validateRemoteSerialNumber@serial
 17543  005CC4  CFDE F02F          	movff	postinc2,validateRemoteSerialNumber@serial+1
 17544  005CC8  CFDE F030          	movff	postinc2,validateRemoteSerialNumber@serial+2
 17545  005CCC  CFDE F031          	movff	postinc2,validateRemoteSerialNumber@serial+3
 17546  005CD0  0E01               	movlw	1
 17547  005CD2  6E32               	movwf	validateRemoteSerialNumber@VerifyOnlySerial^0,c
 17548  005CD4  0E0F               	movlw	15
 17549  005CD6  25E2               	addwf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17550  005CD8  6E33               	movwf	validateRemoteSerialNumber@position^0,c
 17551  005CDA  0E00               	movlw	0
 17552  005CDC  21E3               	addwfc	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17553  005CDE  6E34               	movwf	(validateRemoteSerialNumber@position+1)^0,c
 17554  005CE0  EC52  F030         	call	_validateRemoteSerialNumber	;wreg free
 17555  005CE4  0900               	iorlw	0
 17556  005CE6  B4D8               	btfsc	status,2,c
 17557  005CE8  D7DB               	goto	l22867
 17558  005CEA                     l22883:
 17559                           
 17560                           ; BSR set to: 0
 17561                           ;keeloqDecrypt_MC50.c: 344:     if (DecCHK(classic_data) == 0)
 17562  005CEA  C0E2  F010         	movff	keeloqDecryptPacket@classic_data,DecCHK@data
 17563  005CEE  C0E3  F011         	movff	keeloqDecryptPacket@classic_data+1,DecCHK@data+1
 17564  005CF2  EC11  F04B         	call	_DecCHK	;wreg free
 17565  005CF6  0900               	iorlw	0
 17566  005CF8  A4D8               	btfss	status,2,c
 17567  005CFA  D00D               	goto	l22899
 17568                           
 17569                           ; BSR set to: 0
 17570                           ;keeloqDecrypt_MC50.c: 345:     {;keeloqDecrypt_MC50.c: 346:         if(var_sys_NVM.Only
      +                          RollingCode==YES) {
 17571  005CFC  05BE               	decf	(_var_sys_NVM+38)& (0+255),w,b	;volatile
 17572  005CFE  B4D8               	btfsc	status,2,c
 17573  005D00  D7CF               	goto	l22867
 17574                           
 17575                           ; BSR set to: 0
 17576                           ;keeloqDecrypt_MC50.c: 352:         {;keeloqDecrypt_MC50.c: 353:             classic_dat
      +                          a->type=Keeloq_NoRollingCode;
 17577  005D02  EE20 F00E          	lfsr	2,14
 17578  005D06  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17579  005D08  26D9               	addwf	fsr2l,f,c
 17580  005D0A  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17581  005D0C  22DA               	addwfc	fsr2h,f,c
 17582  005D0E  0E01               	movlw	1
 17583  005D10  6EDF               	movwf	indf2,c
 17584                           
 17585                           ; BSR set to: 0
 17586                           ;keeloqDecrypt_MC50.c: 354:             return commandType;
 17587  005D12  51E9               	movf	keeloqDecryptPacket@commandType& (0+255),w,b
 17588  005D14  0012               	return	
 17589  005D16                     l22899:
 17590                           
 17591                           ; BSR set to: 0
 17592                           ;keeloqDecrypt_MC50.c: 359:     hop_error = HopCHK(classic_data);
 17593  005D16  C0E2  F024         	movff	keeloqDecryptPacket@classic_data,HopCHK@data
 17594  005D1A  C0E3  F025         	movff	keeloqDecryptPacket@classic_data+1,HopCHK@data+1
 17595  005D1E  EC87  F041         	call	_HopCHK	;wreg free
 17596  005D22  0100               	movlb	0	; () banked
 17597  005D24  6FE8               	movwf	keeloqDecryptPacket@hop_error& (0+255),b
 17598                           
 17599                           ; BSR set to: 0
 17600                           ;keeloqDecrypt_MC50.c: 360:     if (hop_error != VALID_PACKET) {
 17601  005D26  05E8               	decf	keeloqDecryptPacket@hop_error& (0+255),w,b
 17602  005D28  A4D8               	btfss	status,2,c
 17603  005D2A  D7BA               	goto	l22867
 17604                           
 17605                           ; BSR set to: 0
 17606                           ;keeloqDecrypt_MC50.c: 364:     classic_data->type=Keeloq_RollingCode;
 17607  005D2C  EE20 F00E          	lfsr	2,14
 17608  005D30  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17609  005D32  26D9               	addwf	fsr2l,f,c
 17610  005D34  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17611  005D36  22DA               	addwfc	fsr2h,f,c
 17612  005D38  0E00               	movlw	0
 17613  005D3A  D7EA               	goto	L80
 17614  005D3C                     __end_of_keeloqDecryptPacket:
 17615                           	callstack 0
 17616                           
 17617 ;; *************** function _verifyProgramingMode *****************
 17618 ;; Defined at:
 17619 ;;		line 401 in file "keeloqDecrypt_MC50.c"
 17620 ;; Parameters:    Size  Location     Type
 17621 ;;  classic_data    2   15[COMRAM] PTR struct .
 17622 ;;		 -> classic_data(16), 
 17623 ;; Auto vars:     Size  Location     Type
 17624 ;;		None
 17625 ;; Return value:  Size  Location     Type
 17626 ;;                  1    wreg      enum E10539
 17627 ;; Registers used:
 17628 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17629 ;; Tracked objects:
 17630 ;;		On entry : 3F/0
 17631 ;;		On exit  : 3F/0
 17632 ;;		Unchanged: 3F/0
 17633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17634 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17635 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17636 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17637 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17638 ;;Total ram usage:        3 bytes
 17639 ;; Hardware stack levels used: 1
 17640 ;; Hardware stack levels required when called: 4
 17641 ;; This function calls:
 17642 ;;		Nothing
 17643 ;; This function is called by:
 17644 ;;		_keeloqDecryptPacket
 17645 ;; This function uses a non-reentrant model
 17646 ;;
 17647                           
 17648                           	psect	text58
 17649  0095EE                     __ptext58:
 17650                           	callstack 0
 17651  0095EE                     _verifyProgramingMode:
 17652                           	callstack 24
 17653                           
 17654                           ; BSR set to: 0
 17655                           ;keeloqDecrypt_MC50.c: 401: TypeCMD verifyProgramingMode(classic_encoder_t* classic_data
      +                          );keeloqDecrypt_MC50.c: 402: {;keeloqDecrypt_MC50.c: 403:     if (classic_data->fcode1==
      +                          0x0A)
 17656                           
 17657                           ; BSR set to: 0
 17658                           ;incstack = 0
 17659  0095EE  EE20 F00C          	lfsr	2,12
 17660  0095F2  5010               	movf	verifyProgramingMode@classic_data^0,w,c
 17661  0095F4  26D9               	addwf	fsr2l,f,c
 17662  0095F6  5011               	movf	(verifyProgramingMode@classic_data+1)^0,w,c
 17663  0095F8  22DA               	addwfc	fsr2h,f,c
 17664  0095FA  0E0A               	movlw	10
 17665  0095FC  18DE               	xorwf	postinc2,w,c
 17666  0095FE  A4D8               	btfss	status,2,c
 17667  009600  D002               	goto	l21551
 17668                           
 17669                           ; BSR set to: 0
 17670                           ;keeloqDecrypt_MC50.c: 404:     {;keeloqDecrypt_MC50.c: 405:         return TypeProgramm
      +                          ingModeFull;
 17671  009602  0E06               	movlw	6
 17672  009604  0012               	return	
 17673  009606                     l21551:
 17674                           
 17675                           ; BSR set to: 0
 17676  009606  EE20 F00C          	lfsr	2,12
 17677  00960A  5010               	movf	verifyProgramingMode@classic_data^0,w,c
 17678  00960C  26D9               	addwf	fsr2l,f,c
 17679  00960E  5011               	movf	(verifyProgramingMode@classic_data+1)^0,w,c
 17680  009610  22DA               	addwfc	fsr2h,f,c
 17681  009612  0E05               	movlw	5
 17682  009614  18DE               	xorwf	postinc2,w,c
 17683  009616  A4D8               	btfss	status,2,c
 17684  009618  D002               	goto	l21559
 17685                           
 17686                           ; BSR set to: 0
 17687                           ;keeloqDecrypt_MC50.c: 408:     {;keeloqDecrypt_MC50.c: 409:         return TypeProgramm
      +                          ingModeWalk;
 17688  00961A  0E05               	movlw	5
 17689  00961C  0012               	return	
 17690  00961E                     l21559:
 17691                           
 17692                           ; BSR set to: 0
 17693                           ;keeloqDecrypt_MC50.c: 412:     {;keeloqDecrypt_MC50.c: 413:         return NoCMD;
 17694  00961E  0E00               	movlw	0
 17695                           
 17696                           ; BSR set to: 0
 17697  009620  0012               	return		;funcret
 17698  009622                     __end_of_verifyProgramingMode:
 17699                           	callstack 0
 17700                           
 17701 ;; *************** function _keeloq_classic_decrypt_packet *****************
 17702 ;; Defined at:
 17703 ;;		line 390 in file "keeloqDecrypt_MC50.c"
 17704 ;; Parameters:    Size  Location     Type
 17705 ;;  data            2   55[COMRAM] PTR struct .
 17706 ;;		 -> classic_data(16), 
 17707 ;; Auto vars:     Size  Location     Type
 17708 ;;		None
 17709 ;; Return value:  Size  Location     Type
 17710 ;;                  1    wreg      void 
 17711 ;; Registers used:
 17712 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 17713 ;; Tracked objects:
 17714 ;;		On entry : 3F/0
 17715 ;;		On exit  : 3F/0
 17716 ;;		Unchanged: 0/0
 17717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17718 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17719 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17720 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17721 ;;      Totals:         2       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17722 ;;Total ram usage:        5 bytes
 17723 ;; Hardware stack levels used: 1
 17724 ;; Hardware stack levels required when called: 7
 17725 ;; This function calls:
 17726 ;;		_Decrypt
 17727 ;;		_NormalKeyGen
 17728 ;; This function is called by:
 17729 ;;		_keeloqDecryptPacket
 17730 ;; This function uses a non-reentrant model
 17731 ;;
 17732                           
 17733                           	psect	text59
 17734  008F62                     __ptext59:
 17735                           	callstack 0
 17736  008F62                     _keeloq_classic_decrypt_packet:
 17737                           	callstack 21
 17738                           
 17739                           ; BSR set to: 0
 17740                           ;keeloqDecrypt_MC50.c: 393:     NormalKeyGen(&data->serialnumber);
 17741                           
 17742                           ; BSR set to: 0
 17743                           ;incstack = 0
 17744  008F62  0E04               	movlw	4
 17745  008F64  2438               	addwf	keeloq_classic_decrypt_packet@data^0,w,c
 17746  008F66  6E26               	movwf	NormalKeyGen@serial^0,c
 17747  008F68  0E00               	movlw	0
 17748  008F6A  2039               	addwfc	(keeloq_classic_decrypt_packet@data+1)^0,w,c
 17749  008F6C  6E27               	movwf	(NormalKeyGen@serial+1)^0,c
 17750  008F6E  EC4B  F039         	call	_NormalKeyGen	;wreg free
 17751                           
 17752                           ;keeloqDecrypt_MC50.c: 395:     Decrypt((uint8_t*) & data->sync);
 17753  008F72  0E08               	movlw	8
 17754  008F74  2438               	addwf	keeloq_classic_decrypt_packet@data^0,w,c
 17755  008F76  6E1B               	movwf	Decrypt@packet^0,c
 17756  008F78  0E00               	movlw	0
 17757  008F7A  2039               	addwfc	(keeloq_classic_decrypt_packet@data+1)^0,w,c
 17758  008F7C  6E1C               	movwf	(Decrypt@packet+1)^0,c
 17759  008F7E  ECB2  F03C         	call	_Decrypt	;wreg free
 17760                           
 17761                           ;keeloqDecrypt_MC50.c: 398:     data->fcode2 = (data->disc >> 12) & 0x0F;
 17762  008F82  EE20 F00D          	lfsr	2,13
 17763  008F86  5038               	movf	keeloq_classic_decrypt_packet@data^0,w,c
 17764  008F88  26D9               	addwf	fsr2l,f,c
 17765  008F8A  5039               	movf	(keeloq_classic_decrypt_packet@data+1)^0,w,c
 17766  008F8C  22DA               	addwfc	fsr2h,f,c
 17767  008F8E  EE10 F00A          	lfsr	1,10
 17768  008F92  5038               	movf	keeloq_classic_decrypt_packet@data^0,w,c
 17769  008F94  26E1               	addwf	fsr1l,f,c
 17770  008F96  5039               	movf	(keeloq_classic_decrypt_packet@data+1)^0,w,c
 17771  008F98  22E2               	addwfc	fsr1h,f,c
 17772  008F9A  CFE6 F0D8          	movff	postinc1,??_keeloq_classic_decrypt_packet
 17773  008F9E  CFE5 F0D9          	movff	postdec1,??_keeloq_classic_decrypt_packet+1
 17774  008FA2  0E0C               	movlw	12
 17775  008FA4  0100               	movlb	0	; () banked
 17776  008FA6  6FDA               	movwf	(??_keeloq_classic_decrypt_packet+2)& (0+255),b
 17777  008FA8                     u24915:
 17778  008FA8  90D8               	bcf	status,0,c
 17779  008FAA  33D9               	rrcf	(??_keeloq_classic_decrypt_packet+1)& (0+255),f,b
 17780  008FAC  33D8               	rrcf	??_keeloq_classic_decrypt_packet& (0+255),f,b
 17781  008FAE  2FDA               	decfsz	(??_keeloq_classic_decrypt_packet+2)& (0+255),f,b
 17782  008FB0  D7FB               	goto	u24915
 17783  008FB2  51D8               	movf	??_keeloq_classic_decrypt_packet& (0+255),w,b
 17784  008FB4  0B0F               	andlw	15
 17785  008FB6  6EDF               	movwf	indf2,c
 17786                           
 17787                           ; BSR set to: 0
 17788  008FB8  0012               	return		;funcret
 17789  008FBA                     __end_of_keeloq_classic_decrypt_packet:
 17790                           	callstack 0
 17791                           
 17792 ;; *************** function _NormalKeyGen *****************
 17793 ;; Defined at:
 17794 ;;		line 87 in file "keeloqDecrypt_MC50.c"
 17795 ;; Parameters:    Size  Location     Type
 17796 ;;  serial          2   37[COMRAM] PTR unsigned long 
 17797 ;;		 -> classic_data(16), 
 17798 ;; Auto vars:     Size  Location     Type
 17799 ;;  Buffer          8   47[COMRAM] unsigned char [8]
 17800 ;;  SKEYtemp        4   43[COMRAM] unsigned char [4]
 17801 ;;  HOPtemp         4   39[COMRAM] unsigned char [4]
 17802 ;; Return value:  Size  Location     Type
 17803 ;;                  1    wreg      void 
 17804 ;; Registers used:
 17805 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17806 ;; Tracked objects:
 17807 ;;		On entry : 3F/0
 17808 ;;		On exit  : 0/0
 17809 ;;		Unchanged: 0/0
 17810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17811 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17812 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17814 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17815 ;;Total ram usage:       18 bytes
 17816 ;; Hardware stack levels used: 1
 17817 ;; Hardware stack levels required when called: 6
 17818 ;; This function calls:
 17819 ;;		_Decrypt
 17820 ;;		_LoadManufCode
 17821 ;;		_memcpy
 17822 ;; This function is called by:
 17823 ;;		_keeloq_classic_decrypt_packet
 17824 ;; This function uses a non-reentrant model
 17825 ;;
 17826                           
 17827                           	psect	text60
 17828  007296                     __ptext60:
 17829                           	callstack 0
 17830  007296                     _NormalKeyGen:
 17831                           	callstack 21
 17832                           
 17833                           ; BSR set to: 0
 17834                           ;keeloqDecrypt_MC50.c: 88:     static uint8_t SEED[4];;keeloqDecrypt_MC50.c: 89:     uin
      +                          t8_t Buffer[8];;keeloqDecrypt_MC50.c: 90:     uint8_t HOPtemp[4];;keeloqDecrypt_MC50.c: 
      +                          91:     uint8_t SKEYtemp[4];;keeloqDecrypt_MC50.c: 93:     memcpy(&Buffer[4], serial, 4)
      +                          ;
 17835                           
 17836                           ; BSR set to: 0
 17837                           ;incstack = 0
 17838  007296  0E34               	movlw	low (NormalKeyGen@Buffer+4)
 17839  007298  6E10               	movwf	memcpy@d1^0,c
 17840  00729A  6A11               	clrf	(memcpy@d1+1)^0,c
 17841  00729C  C026  F012         	movff	NormalKeyGen@serial,memcpy@s1
 17842  0072A0  C027  F013         	movff	NormalKeyGen@serial+1,memcpy@s1+1
 17843  0072A4  0E00               	movlw	0
 17844  0072A6  6E15               	movwf	(memcpy@n+1)^0,c
 17845  0072A8  0E04               	movlw	4
 17846  0072AA  6E14               	movwf	memcpy@n^0,c
 17847  0072AC  ECDD  F049         	call	_memcpy	;wreg free
 17848                           
 17849                           ;keeloqDecrypt_MC50.c: 95:     memcpy(HOPtemp, Buffer, 4);
 17850  0072B0  0E28               	movlw	low NormalKeyGen@HOPtemp
 17851  0072B2  6E10               	movwf	memcpy@d1^0,c
 17852  0072B4  6A11               	clrf	(memcpy@d1+1)^0,c
 17853  0072B6  0E30               	movlw	low NormalKeyGen@Buffer
 17854  0072B8  6E12               	movwf	memcpy@s1^0,c
 17855  0072BA  6A13               	clrf	(memcpy@s1+1)^0,c
 17856  0072BC  0E00               	movlw	0
 17857  0072BE  6E15               	movwf	(memcpy@n+1)^0,c
 17858  0072C0  0E04               	movlw	4
 17859  0072C2  6E14               	movwf	memcpy@n^0,c
 17860  0072C4  ECDD  F049         	call	_memcpy	;wreg free
 17861                           
 17862                           ;keeloqDecrypt_MC50.c: 97:     memcpy(SEED, &Buffer[4], 4);
 17863  0072C8  0ED7               	movlw	low NormalKeyGen@SEED
 17864  0072CA  6E10               	movwf	memcpy@d1^0,c
 17865  0072CC  0E02               	movlw	high NormalKeyGen@SEED
 17866  0072CE  6E11               	movwf	(memcpy@d1+1)^0,c
 17867  0072D0  0E34               	movlw	low (NormalKeyGen@Buffer+4)
 17868  0072D2  6E12               	movwf	memcpy@s1^0,c
 17869  0072D4  6A13               	clrf	(memcpy@s1+1)^0,c
 17870  0072D6  0E00               	movlw	0
 17871  0072D8  6E15               	movwf	(memcpy@n+1)^0,c
 17872  0072DA  0E04               	movlw	4
 17873  0072DC  6E14               	movwf	memcpy@n^0,c
 17874  0072DE  ECDD  F049         	call	_memcpy	;wreg free
 17875                           
 17876                           ;keeloqDecrypt_MC50.c: 98:     SEED[3] &= 0x0f;
 17877  0072E2  0E0F               	movlw	15
 17878  0072E4  0102               	movlb	2	; () banked
 17879  0072E6  17DA               	andwf	(NormalKeyGen@SEED+3)& (0+255),f,b
 17880                           
 17881                           ; BSR set to: 2
 17882                           ;keeloqDecrypt_MC50.c: 101:     memcpy(Buffer, SEED, 4);
 17883  0072E8  0E30               	movlw	low NormalKeyGen@Buffer
 17884  0072EA  6E10               	movwf	memcpy@d1^0,c
 17885  0072EC  6A11               	clrf	(memcpy@d1+1)^0,c
 17886  0072EE  0ED7               	movlw	low NormalKeyGen@SEED
 17887  0072F0  6E12               	movwf	memcpy@s1^0,c
 17888  0072F2  0E02               	movlw	high NormalKeyGen@SEED
 17889  0072F4  6E13               	movwf	(memcpy@s1+1)^0,c
 17890  0072F6  0E00               	movlw	0
 17891  0072F8  6E15               	movwf	(memcpy@n+1)^0,c
 17892  0072FA  0E04               	movlw	4
 17893  0072FC  6E14               	movwf	memcpy@n^0,c
 17894  0072FE  ECDD  F049         	call	_memcpy	;wreg free
 17895                           
 17896                           ;keeloqDecrypt_MC50.c: 102:     Buffer[3] |= 0x20;
 17897  007302  8A33               	bsf	(NormalKeyGen@Buffer+3)^0,5,c
 17898                           
 17899                           ;keeloqDecrypt_MC50.c: 103:     LoadManufCode();
 17900  007304  EC42  F04D         	call	_LoadManufCode	;wreg free
 17901                           
 17902                           ; BSR set to: 2
 17903                           ;keeloqDecrypt_MC50.c: 104:     Decrypt(Buffer);
 17904  007308  0E30               	movlw	low NormalKeyGen@Buffer
 17905  00730A  6E1B               	movwf	Decrypt@packet^0,c
 17906  00730C  6A1C               	clrf	(Decrypt@packet+1)^0,c
 17907  00730E  ECB2  F03C         	call	_Decrypt	;wreg free
 17908                           
 17909                           ;keeloqDecrypt_MC50.c: 105:     memcpy(SKEYtemp, Buffer, 4);
 17910  007312  0E2C               	movlw	low NormalKeyGen@SKEYtemp
 17911  007314  6E10               	movwf	memcpy@d1^0,c
 17912  007316  6A11               	clrf	(memcpy@d1+1)^0,c
 17913  007318  0E30               	movlw	low NormalKeyGen@Buffer
 17914  00731A  6E12               	movwf	memcpy@s1^0,c
 17915  00731C  6A13               	clrf	(memcpy@s1+1)^0,c
 17916  00731E  0E00               	movlw	0
 17917  007320  6E15               	movwf	(memcpy@n+1)^0,c
 17918  007322  0E04               	movlw	4
 17919  007324  6E14               	movwf	memcpy@n^0,c
 17920  007326  ECDD  F049         	call	_memcpy	;wreg free
 17921                           
 17922                           ;keeloqDecrypt_MC50.c: 108:     memcpy(Buffer, SEED, 4);
 17923  00732A  0E30               	movlw	low NormalKeyGen@Buffer
 17924  00732C  6E10               	movwf	memcpy@d1^0,c
 17925  00732E  6A11               	clrf	(memcpy@d1+1)^0,c
 17926  007330  0ED7               	movlw	low NormalKeyGen@SEED
 17927  007332  6E12               	movwf	memcpy@s1^0,c
 17928  007334  0E02               	movlw	high NormalKeyGen@SEED
 17929  007336  6E13               	movwf	(memcpy@s1+1)^0,c
 17930  007338  0E00               	movlw	0
 17931  00733A  6E15               	movwf	(memcpy@n+1)^0,c
 17932  00733C  0E04               	movlw	4
 17933  00733E  6E14               	movwf	memcpy@n^0,c
 17934  007340  ECDD  F049         	call	_memcpy	;wreg free
 17935                           
 17936                           ;keeloqDecrypt_MC50.c: 109:     Buffer[3] |= 0x60;
 17937  007344  0E60               	movlw	96
 17938  007346  1233               	iorwf	(NormalKeyGen@Buffer+3)^0,f,c
 17939                           
 17940                           ;keeloqDecrypt_MC50.c: 110:     LoadManufCode();
 17941  007348  EC42  F04D         	call	_LoadManufCode	;wreg free
 17942                           
 17943                           ; BSR set to: 2
 17944                           ;keeloqDecrypt_MC50.c: 111:     Decrypt(Buffer);
 17945  00734C  0E30               	movlw	low NormalKeyGen@Buffer
 17946  00734E  6E1B               	movwf	Decrypt@packet^0,c
 17947  007350  6A1C               	clrf	(Decrypt@packet+1)^0,c
 17948  007352  ECB2  F03C         	call	_Decrypt	;wreg free
 17949                           
 17950                           ;keeloqDecrypt_MC50.c: 112:     memcpy(&DKEY[4], Buffer, 4);
 17951  007356  0ED3               	movlw	low (_DKEY+4)
 17952  007358  6E10               	movwf	memcpy@d1^0,c
 17953  00735A  0E02               	movlw	high (_DKEY+4)
 17954  00735C  6E11               	movwf	(memcpy@d1+1)^0,c
 17955  00735E  0E30               	movlw	low NormalKeyGen@Buffer
 17956  007360  6E12               	movwf	memcpy@s1^0,c
 17957  007362  6A13               	clrf	(memcpy@s1+1)^0,c
 17958  007364  0E00               	movlw	0
 17959  007366  6E15               	movwf	(memcpy@n+1)^0,c
 17960  007368  0E04               	movlw	4
 17961  00736A  6E14               	movwf	memcpy@n^0,c
 17962  00736C  ECDD  F049         	call	_memcpy	;wreg free
 17963                           
 17964                           ;keeloqDecrypt_MC50.c: 113:     memcpy(DKEY, SKEYtemp, 4);
 17965  007370  0ECF               	movlw	low _DKEY
 17966  007372  6E10               	movwf	memcpy@d1^0,c
 17967  007374  0E02               	movlw	high _DKEY
 17968  007376  6E11               	movwf	(memcpy@d1+1)^0,c
 17969  007378  0E2C               	movlw	low NormalKeyGen@SKEYtemp
 17970  00737A  6E12               	movwf	memcpy@s1^0,c
 17971  00737C  6A13               	clrf	(memcpy@s1+1)^0,c
 17972  00737E  0E00               	movlw	0
 17973  007380  6E15               	movwf	(memcpy@n+1)^0,c
 17974  007382  0E04               	movlw	4
 17975  007384  6E14               	movwf	memcpy@n^0,c
 17976  007386  ECDD  F049         	call	_memcpy	;wreg free
 17977                           
 17978                           ;keeloqDecrypt_MC50.c: 116:     memcpy(Buffer, HOPtemp, 4);
 17979  00738A  0E30               	movlw	low NormalKeyGen@Buffer
 17980  00738C  6E10               	movwf	memcpy@d1^0,c
 17981  00738E  6A11               	clrf	(memcpy@d1+1)^0,c
 17982  007390  0E28               	movlw	low NormalKeyGen@HOPtemp
 17983  007392  6E12               	movwf	memcpy@s1^0,c
 17984  007394  6A13               	clrf	(memcpy@s1+1)^0,c
 17985  007396  0E00               	movlw	0
 17986  007398  6E15               	movwf	(memcpy@n+1)^0,c
 17987  00739A  0E04               	movlw	4
 17988  00739C  6E14               	movwf	memcpy@n^0,c
 17989  00739E  ECDD  F049         	call	_memcpy	;wreg free
 17990  0073A2  0012               	return		;funcret
 17991  0073A4                     __end_of_NormalKeyGen:
 17992                           	callstack 0
 17993                           
 17994 ;; *************** function _LoadManufCode *****************
 17995 ;; Defined at:
 17996 ;;		line 63 in file "keeloqDecrypt_MC50.c"
 17997 ;; Parameters:    Size  Location     Type
 17998 ;;		None
 17999 ;; Auto vars:     Size  Location     Type
 18000 ;;		None
 18001 ;; Return value:  Size  Location     Type
 18002 ;;                  1    wreg      void 
 18003 ;; Registers used:
 18004 ;;		wreg, status,2
 18005 ;; Tracked objects:
 18006 ;;		On entry : 0/2
 18007 ;;		On exit  : 3F/2
 18008 ;;		Unchanged: 0/0
 18009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18010 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18011 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18013 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18014 ;;Total ram usage:        0 bytes
 18015 ;; Hardware stack levels used: 1
 18016 ;; Hardware stack levels required when called: 4
 18017 ;; This function calls:
 18018 ;;		Nothing
 18019 ;; This function is called by:
 18020 ;;		_NormalKeyGen
 18021 ;; This function uses a non-reentrant model
 18022 ;;
 18023                           
 18024                           	psect	text61
 18025  009A84                     __ptext61:
 18026                           	callstack 0
 18027  009A84                     _LoadManufCode:
 18028                           	callstack 22
 18029                           
 18030                           ;keeloqDecrypt_MC50.c: 64:     DKEY[0] = 0xFF;
 18031                           
 18032                           ;incstack = 0
 18033  009A84  0102               	movlb	2	; () banked
 18034  009A86  69CF               	setf	_DKEY& (0+255),b
 18035                           
 18036                           ; BSR set to: 2
 18037                           ;keeloqDecrypt_MC50.c: 65:     DKEY[1] = 0xCA;
 18038  009A88  0ECA               	movlw	202
 18039  009A8A  6FD0               	movwf	(_DKEY+1)& (0+255),b
 18040                           
 18041                           ;keeloqDecrypt_MC50.c: 66:     DKEY[2] = 0x76;
 18042  009A8C  0E76               	movlw	118
 18043  009A8E  6FD1               	movwf	(_DKEY+2)& (0+255),b
 18044                           
 18045                           ;keeloqDecrypt_MC50.c: 67:     DKEY[3] = 0x94;
 18046  009A90  0E94               	movlw	148
 18047  009A92  6FD2               	movwf	(_DKEY+3)& (0+255),b
 18048                           
 18049                           ;keeloqDecrypt_MC50.c: 68:     DKEY[4] = 0x22;
 18050  009A94  0E22               	movlw	34
 18051  009A96  6FD3               	movwf	(_DKEY+4)& (0+255),b
 18052                           
 18053                           ;keeloqDecrypt_MC50.c: 69:     DKEY[5] = 0x68;
 18054  009A98  0E68               	movlw	104
 18055  009A9A  6FD4               	movwf	(_DKEY+5)& (0+255),b
 18056                           
 18057                           ;keeloqDecrypt_MC50.c: 70:     DKEY[6] = 0x27;
 18058  009A9C  0E27               	movlw	39
 18059  009A9E  6FD5               	movwf	(_DKEY+6)& (0+255),b
 18060                           
 18061                           ;keeloqDecrypt_MC50.c: 71:     DKEY[7] = 0x57;
 18062  009AA0  0E57               	movlw	87
 18063  009AA2  6FD6               	movwf	(_DKEY+7)& (0+255),b
 18064                           
 18065                           ; BSR set to: 2
 18066  009AA4  0012               	return		;funcret
 18067  009AA6                     __end_of_LoadManufCode:
 18068                           	callstack 0
 18069                           
 18070 ;; *************** function _Decrypt *****************
 18071 ;; Defined at:
 18072 ;;		line 142 in file "keeloqDecrypt_MC50.c"
 18073 ;; Parameters:    Size  Location     Type
 18074 ;;  packet          2   26[COMRAM] PTR unsigned char 
 18075 ;;		 -> SecureKeyGen@HOPtemp(4), NormalKeyGen@Buffer(8), classic_data(16), 
 18076 ;; Auto vars:     Size  Location     Type
 18077 ;;  Buffer          4   33[COMRAM] unsigned char [4]
 18078 ;;  aux             1   32[COMRAM] unsigned char 
 18079 ;;  p               1   31[COMRAM] char 
 18080 ;;  j               1   30[COMRAM] unsigned char 
 18081 ;;  i               1   29[COMRAM] unsigned char 
 18082 ;;  key             1   28[COMRAM] unsigned char 
 18083 ;; Return value:  Size  Location     Type
 18084 ;;                  1    wreg      void 
 18085 ;; Registers used:
 18086 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18087 ;; Tracked objects:
 18088 ;;		On entry : 0/0
 18089 ;;		On exit  : 0/0
 18090 ;;		Unchanged: 0/0
 18091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18092 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18093 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18095 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18096 ;;Total ram usage:       11 bytes
 18097 ;; Hardware stack levels used: 1
 18098 ;; Hardware stack levels required when called: 5
 18099 ;; This function calls:
 18100 ;;		_memcpy
 18101 ;; This function is called by:
 18102 ;;		_NormalKeyGen
 18103 ;;		_keeloq_classic_decrypt_packet
 18104 ;; This function uses a non-reentrant model
 18105 ;;
 18106                           
 18107                           	psect	text62
 18108  007964                     __ptext62:
 18109                           	callstack 0
 18110  007964                     _Decrypt:
 18111                           	callstack 21
 18112                           
 18113                           ;keeloqDecrypt_MC50.c: 143:     uint_fast8_t i, j;;keeloqDecrypt_MC50.c: 144:     uint8_
      +                          t key, aux;;keeloqDecrypt_MC50.c: 146:     int8_t p;;keeloqDecrypt_MC50.c: 147:     uint
      +                          8_t Buffer[4];;keeloqDecrypt_MC50.c: 149:     memcpy(Buffer, packet, 4);
 18114                           
 18115                           ; BSR set to: 2
 18116                           ;incstack = 0
 18117  007964  0E22               	movlw	low Decrypt@Buffer
 18118  007966  6E10               	movwf	memcpy@d1^0,c
 18119  007968  6A11               	clrf	(memcpy@d1+1)^0,c
 18120  00796A  C01B  F012         	movff	Decrypt@packet,memcpy@s1
 18121  00796E  C01C  F013         	movff	Decrypt@packet+1,memcpy@s1+1
 18122  007972  0E00               	movlw	0
 18123  007974  6E15               	movwf	(memcpy@n+1)^0,c
 18124  007976  0E04               	movlw	4
 18125  007978  6E14               	movwf	memcpy@n^0,c
 18126  00797A  ECDD  F049         	call	_memcpy	;wreg free
 18127                           
 18128                           ;keeloqDecrypt_MC50.c: 151:     p = 1;
 18129  00797E  0E01               	movlw	1
 18130  007980  6E20               	movwf	Decrypt@p^0,c
 18131                           
 18132                           ;keeloqDecrypt_MC50.c: 153:     for (j = 66; j > 0; j--) {
 18133  007982  0E42               	movlw	66
 18134  007984  6E1F               	movwf	Decrypt@j^0,c
 18135  007986                     l20517:
 18136                           
 18137                           ;keeloqDecrypt_MC50.c: 154:         key = DKEY[p--];
 18138  007986  0ECF               	movlw	low _DKEY
 18139  007988  2420               	addwf	Decrypt@p^0,w,c
 18140  00798A  6ED9               	movwf	fsr2l,c
 18141  00798C  6ADA               	clrf	fsr2h,c
 18142  00798E  0E02               	movlw	high _DKEY
 18143  007990  22DA               	addwfc	fsr2h,f,c
 18144  007992  50DF               	movf	indf2,w,c
 18145  007994  6E1D               	movwf	Decrypt@key^0,c
 18146  007996  0620               	decf	Decrypt@p^0,f,c
 18147                           
 18148                           ;keeloqDecrypt_MC50.c: 155:         if (p < 0)
 18149  007998  AE20               	btfss	Decrypt@p^0,7,c
 18150  00799A  D002               	goto	l20525
 18151                           
 18152                           ;keeloqDecrypt_MC50.c: 156:             p += 8;
 18153  00799C  0E08               	movlw	8
 18154  00799E  2620               	addwf	Decrypt@p^0,f,c
 18155  0079A0                     l20525:
 18156                           
 18157                           ;keeloqDecrypt_MC50.c: 157:         for (i = 8; i > 0; i--) {
 18158  0079A0  0E08               	movlw	8
 18159  0079A2  6E1E               	movwf	Decrypt@i^0,c
 18160  0079A4                     l1859:
 18161                           
 18162                           ;keeloqDecrypt_MC50.c: 159:             if ((( (Buffer[3]) & (1<<(6))) != 0)) {
 18163  0079A4  AC25               	btfss	(Decrypt@Buffer+3)^0,6,c
 18164  0079A6  D006               	goto	l1861
 18165                           
 18166                           ;keeloqDecrypt_MC50.c: 160:                 if (!(( (Buffer[3]) & (1<<(1))) != 0))
 18167  0079A8  B225               	btfsc	(Decrypt@Buffer+3)^0,1,c
 18168  0079AA  D002               	goto	l20535
 18169                           
 18170                           ;keeloqDecrypt_MC50.c: 161:                     aux = 0b00111010;
 18171  0079AC  0E3A               	movlw	58
 18172  0079AE  D007               	goto	L81
 18173  0079B0                     l20535:
 18174                           
 18175                           ;keeloqDecrypt_MC50.c: 163:                     aux = 0b01011100;
 18176  0079B0  0E5C               	movlw	92
 18177  0079B2  D005               	goto	L81
 18178  0079B4                     l1861:
 18179                           
 18180                           ;keeloqDecrypt_MC50.c: 165:                 if (!(( (Buffer[3]) & (1<<(1))) != 0))
 18181  0079B4  B225               	btfsc	(Decrypt@Buffer+3)^0,1,c
 18182  0079B6  D002               	goto	l20539
 18183                           
 18184                           ;keeloqDecrypt_MC50.c: 166:                     aux = 0b01110100;
 18185  0079B8  0E74               	movlw	116
 18186  0079BA  D001               	goto	L81
 18187  0079BC                     l20539:
 18188                           
 18189                           ;keeloqDecrypt_MC50.c: 168:                     aux = 0b00101110;
 18190  0079BC  0E2E               	movlw	46
 18191  0079BE                     L81:
 18192  0079BE  6E21               	movwf	Decrypt@aux^0,c
 18193                           
 18194                           ;keeloqDecrypt_MC50.c: 172:             if ((( (Buffer[2]) & (1<<(3))) != 0))
 18195  0079C0  B624               	btfsc	(Decrypt@Buffer+2)^0,3,c
 18196                           
 18197                           ;keeloqDecrypt_MC50.c: 173:                 aux = (aux << 4) | (aux >> 4);
 18198  0079C2  3A21               	swapf	Decrypt@aux^0,f,c
 18199                           
 18200                           ;keeloqDecrypt_MC50.c: 174:             if ((( (Buffer[1]) & (1<<(0))) != 0))
 18201  0079C4  A023               	btfss	(Decrypt@Buffer+1)^0,0,c
 18202  0079C6  D004               	goto	l20547
 18203                           
 18204                           ;keeloqDecrypt_MC50.c: 175:                 aux <<= 2;
 18205  0079C8  90D8               	bcf	status,0,c
 18206  0079CA  3621               	rlcf	Decrypt@aux^0,f,c
 18207  0079CC  90D8               	bcf	status,0,c
 18208  0079CE  3621               	rlcf	Decrypt@aux^0,f,c
 18209  0079D0                     l20547:
 18210                           
 18211                           ;keeloqDecrypt_MC50.c: 176:             if ((( (Buffer[0]) & (1<<(0))) != 0))
 18212  0079D0  A022               	btfss	Decrypt@Buffer^0,0,c
 18213  0079D2  D002               	goto	l1869
 18214                           
 18215                           ;keeloqDecrypt_MC50.c: 177:                 aux <<= 1;
 18216  0079D4  90D8               	bcf	status,0,c
 18217  0079D6  3621               	rlcf	Decrypt@aux^0,f,c
 18218  0079D8                     l1869:
 18219                           
 18220                           ;keeloqDecrypt_MC50.c: 180:             aux ^= Buffer[1] ^ Buffer[3] ^ key;
 18221  0079D8  5023               	movf	(Decrypt@Buffer+1)^0,w,c
 18222  0079DA  1825               	xorwf	(Decrypt@Buffer+3)^0,w,c
 18223  0079DC  181D               	xorwf	Decrypt@key^0,w,c
 18224  0079DE  1A21               	xorwf	Decrypt@aux^0,f,c
 18225                           
 18226                           ;keeloqDecrypt_MC50.c: 182:             Buffer[3] = (Buffer[3] << 1) | (Buffer[2] >> 7);
 18227  0079E0  90D8               	bcf	status,0,c
 18228  0079E2  3424               	rlcf	(Decrypt@Buffer+2)^0,w,c
 18229  0079E4  3425               	rlcf	(Decrypt@Buffer+3)^0,w,c
 18230  0079E6  6E25               	movwf	(Decrypt@Buffer+3)^0,c
 18231                           
 18232                           ;keeloqDecrypt_MC50.c: 183:             Buffer[2] = (Buffer[2] << 1) | (Buffer[1] >> 7);
 18233  0079E8  90D8               	bcf	status,0,c
 18234  0079EA  3423               	rlcf	(Decrypt@Buffer+1)^0,w,c
 18235  0079EC  3424               	rlcf	(Decrypt@Buffer+2)^0,w,c
 18236  0079EE  6E24               	movwf	(Decrypt@Buffer+2)^0,c
 18237                           
 18238                           ;keeloqDecrypt_MC50.c: 184:             Buffer[1] = (Buffer[1] << 1) | (Buffer[0] >> 7);
 18239  0079F0  90D8               	bcf	status,0,c
 18240  0079F2  3422               	rlcf	Decrypt@Buffer^0,w,c
 18241  0079F4  3423               	rlcf	(Decrypt@Buffer+1)^0,w,c
 18242  0079F6  6E23               	movwf	(Decrypt@Buffer+1)^0,c
 18243                           
 18244                           ;keeloqDecrypt_MC50.c: 185:             Buffer[0] = (Buffer[0] << 1) | (aux >> 7);
 18245  0079F8  90D8               	bcf	status,0,c
 18246  0079FA  3421               	rlcf	Decrypt@aux^0,w,c
 18247  0079FC  3422               	rlcf	Decrypt@Buffer^0,w,c
 18248  0079FE  6E22               	movwf	Decrypt@Buffer^0,c
 18249                           
 18250                           ;keeloqDecrypt_MC50.c: 188:             key <<= 1;
 18251  007A00  90D8               	bcf	status,0,c
 18252  007A02  361D               	rlcf	Decrypt@key^0,f,c
 18253                           
 18254                           ;keeloqDecrypt_MC50.c: 189:         }
 18255  007A04  061E               	decf	Decrypt@i^0,f,c
 18256  007A06  501E               	movf	Decrypt@i^0,w,c
 18257  007A08  A4D8               	btfss	status,2,c
 18258  007A0A  D7CC               	goto	l1859
 18259                           
 18260                           ;keeloqDecrypt_MC50.c: 190:     }
 18261  007A0C  061F               	decf	Decrypt@j^0,f,c
 18262  007A0E  501F               	movf	Decrypt@j^0,w,c
 18263  007A10  A4D8               	btfss	status,2,c
 18264  007A12  D7B9               	goto	l20517
 18265                           
 18266                           ;keeloqDecrypt_MC50.c: 192:     memcpy(packet, Buffer, 4);
 18267  007A14  C01B  F010         	movff	Decrypt@packet,memcpy@d1
 18268  007A18  C01C  F011         	movff	Decrypt@packet+1,memcpy@d1+1
 18269  007A1C  0E22               	movlw	low Decrypt@Buffer
 18270  007A1E  6E12               	movwf	memcpy@s1^0,c
 18271  007A20  6A13               	clrf	(memcpy@s1+1)^0,c
 18272  007A22  0E00               	movlw	0
 18273  007A24  6E15               	movwf	(memcpy@n+1)^0,c
 18274  007A26  0E04               	movlw	4
 18275  007A28  6E14               	movwf	memcpy@n^0,c
 18276  007A2A  ECDD  F049         	call	_memcpy	;wreg free
 18277  007A2E  0012               	return		;funcret
 18278  007A30                     __end_of_Decrypt:
 18279                           	callstack 0
 18280                           
 18281 ;; *************** function _HopCHK *****************
 18282 ;; Defined at:
 18283 ;;		line 236 in file "keeloqDecrypt_MC50.c"
 18284 ;; Parameters:    Size  Location     Type
 18285 ;;  data            2   35[COMRAM] PTR struct .
 18286 ;;		 -> classic_data(16), 
 18287 ;; Auto vars:     Size  Location     Type
 18288 ;;  hopDiff         2   37[COMRAM] short 
 18289 ;; Return value:  Size  Location     Type
 18290 ;;                  1    wreg      enum E10730
 18291 ;; Registers used:
 18292 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18293 ;; Tracked objects:
 18294 ;;		On entry : 3F/0
 18295 ;;		On exit  : 3E/0
 18296 ;;		Unchanged: 0/0
 18297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18298 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18299 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18300 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18301 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18302 ;;Total ram usage:        4 bytes
 18303 ;; Hardware stack levels used: 1
 18304 ;; Hardware stack levels required when called: 6
 18305 ;; This function calls:
 18306 ;;		_ReqResync
 18307 ;;		_getHopCode
 18308 ;; This function is called by:
 18309 ;;		_keeloqDecryptPacket
 18310 ;; This function uses a non-reentrant model
 18311 ;;
 18312                           
 18313                           	psect	text63
 18314  00830E                     __ptext63:
 18315                           	callstack 0
 18316  00830E                     _HopCHK:
 18317                           	callstack 22
 18318                           
 18319                           ; BSR set to: 0
 18320                           ;keeloqDecrypt_MC50.c: 237:     int16_t hopDiff;;keeloqDecrypt_MC50.c: 238:     Hop = da
      +                          ta->sync;
 18321                           
 18322                           ;incstack = 0
 18323  00830E  EE20 F008          	lfsr	2,8
 18324  008312  5024               	movf	HopCHK@data^0,w,c
 18325  008314  26D9               	addwf	fsr2l,f,c
 18326  008316  5025               	movf	(HopCHK@data+1)^0,w,c
 18327  008318  22DA               	addwfc	fsr2h,f,c
 18328  00831A  CFDE F07C          	movff	postinc2,_Hop
 18329  00831E  CFDD F07D          	movff	postdec2,_Hop+1
 18330                           
 18331                           ; BSR set to: 0
 18332                           ;keeloqDecrypt_MC50.c: 239:     EHop=getHopCode(data);
 18333  008322  C024  F016         	movff	HopCHK@data,getHopCode@data
 18334  008326  C025  F017         	movff	HopCHK@data+1,getHopCode@data+1
 18335  00832A  EC6F  F036         	call	_getHopCode	;wreg free
 18336  00832E  C016  F28C         	movff	?_getHopCode,_EHop
 18337  008332  C017  F28D         	movff	?_getHopCode+1,_EHop+1
 18338                           
 18339                           ;keeloqDecrypt_MC50.c: 241:     if (F2Chance)
 18340  008336  0101               	movlb	1	; () banked
 18341  008338  519A               	movf	_F2Chance& (0+255),w,b
 18342  00833A  B4D8               	btfsc	status,2,c
 18343  00833C  D00F               	goto	l21523
 18344                           
 18345                           ; BSR set to: 1
 18346                           ;keeloqDecrypt_MC50.c: 242:         if (NextHop == Hop) {
 18347  00833E  0100               	movlb	0	; () banked
 18348  008340  517C               	movf	_Hop& (0+255),w,b
 18349  008342  0101               	movlb	1	; () banked
 18350  008344  1987               	xorwf	_NextHop& (0+255),w,b
 18351  008346  E10A               	bnz	l21523
 18352  008348  0100               	movlb	0	; () banked
 18353  00834A  517D               	movf	(_Hop+1)& (0+255),w,b
 18354  00834C  0101               	movlb	1	; () banked
 18355  00834E  1988               	xorwf	(_NextHop+1)& (0+255),w,b
 18356  008350  A4D8               	btfss	status,2,c
 18357  008352  D004               	goto	l21523
 18358                           
 18359                           ; BSR set to: 1
 18360                           ;keeloqDecrypt_MC50.c: 243:             F2Chance = 0;
 18361  008354  0E00               	movlw	0
 18362  008356  6F9A               	movwf	_F2Chance& (0+255),b
 18363  008358                     l21519:
 18364                           
 18365                           ;keeloqDecrypt_MC50.c: 245:             return VALID_PACKET;
 18366  008358  0E01               	movlw	1
 18367  00835A  0012               	return	
 18368  00835C                     l21523:
 18369                           
 18370                           ; BSR set to: 1
 18371                           ;keeloqDecrypt_MC50.c: 249:     hopDiff = Hop - EHop;
 18372  00835C  0102               	movlb	2	; () banked
 18373  00835E  518C               	movf	_EHop& (0+255),w,b
 18374  008360  0100               	movlb	0	; () banked
 18375  008362  5D7C               	subwf	_Hop& (0+255),w,b
 18376  008364  6E26               	movwf	HopCHK@hopDiff^0,c
 18377  008366  0102               	movlb	2	; () banked
 18378  008368  518D               	movf	(_EHop+1)& (0+255),w,b
 18379  00836A  0100               	movlb	0	; () banked
 18380  00836C  597D               	subwfb	(_Hop+1)& (0+255),w,b
 18381  00836E  6E27               	movwf	(HopCHK@hopDiff+1)^0,c
 18382                           
 18383                           ;keeloqDecrypt_MC50.c: 251:     if (hopDiff < 0) {
 18384  008370  AE27               	btfss	(HopCHK@hopDiff+1)^0,7,c
 18385  008372  D002               	goto	l21531
 18386                           
 18387                           ; BSR set to: 0
 18388                           ;keeloqDecrypt_MC50.c: 254:         return HOP_CHECK_FAIL;
 18389  008374  0E0A               	movlw	10
 18390  008376  0012               	return	
 18391  008378                     l21531:
 18392                           
 18393                           ; BSR set to: 0
 18394  008378  BE27               	btfsc	(HopCHK@hopDiff+1)^0,7,c
 18395  00837A  D7EE               	goto	l21519
 18396  00837C  5027               	movf	(HopCHK@hopDiff+1)^0,w,c
 18397  00837E  E104               	bnz	u24880
 18398  008380  0E11               	movlw	17
 18399  008382  5C26               	subwf	HopCHK@hopDiff^0,w,c
 18400  008384  A0D8               	btfss	status,0,c
 18401  008386  D7E8               	goto	l21519
 18402  008388                     u24880:
 18403                           
 18404                           ; BSR set to: 0
 18405                           ;keeloqDecrypt_MC50.c: 257:         return ReqResync(Hop);
 18406  008388  C07C  F010         	movff	_Hop,ReqResync@CurrentHop
 18407  00838C  C07D  F011         	movff	_Hop+1,ReqResync@CurrentHop+1
 18408  008390  EC3B  F04E         	call	_ReqResync	;wreg free
 18409  008394  0012               	return		;funcret
 18410  008396                     __end_of_HopCHK:
 18411                           	callstack 0
 18412                           
 18413 ;; *************** function _getHopCode *****************
 18414 ;; Defined at:
 18415 ;;		line 266 in file "keeloqDecrypt_MC50.c"
 18416 ;; Parameters:    Size  Location     Type
 18417 ;;  data            2   21[COMRAM] PTR struct .
 18418 ;;		 -> classic_data(16), 
 18419 ;; Auto vars:     Size  Location     Type
 18420 ;;  tempHop         2   31[COMRAM] unsigned short 
 18421 ;;  i               1   34[COMRAM] unsigned char 
 18422 ;;  tempPos         1   33[COMRAM] char 
 18423 ;; Return value:  Size  Location     Type
 18424 ;;                  2   21[COMRAM] unsigned short 
 18425 ;; Registers used:
 18426 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18427 ;; Tracked objects:
 18428 ;;		On entry : 3F/0
 18429 ;;		On exit  : 3E/0
 18430 ;;		Unchanged: 0/0
 18431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18432 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18433 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18434 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18435 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18436 ;;Total ram usage:       14 bytes
 18437 ;; Hardware stack levels used: 1
 18438 ;; Hardware stack levels required when called: 5
 18439 ;; This function calls:
 18440 ;;		_ReqResync
 18441 ;;		___wmul
 18442 ;; This function is called by:
 18443 ;;		_HopCHK
 18444 ;; This function uses a non-reentrant model
 18445 ;;
 18446                           
 18447                           	psect	text64
 18448  006CDE                     __ptext64:
 18449                           	callstack 0
 18450  006CDE                     _getHopCode:
 18451                           	callstack 22
 18452                           
 18453                           ; BSR set to: 0
 18454                           ;keeloqDecrypt_MC50.c: 268:     uint16_t tempHop=0;
 18455                           
 18456                           ;incstack = 0
 18457  006CDE  0E00               	movlw	0
 18458  006CE0  6E21               	movwf	(getHopCode@tempHop+1)^0,c
 18459  006CE2  0E00               	movlw	0
 18460  006CE4  6E20               	movwf	getHopCode@tempHop^0,c
 18461                           
 18462                           ; BSR set to: 0
 18463                           ;keeloqDecrypt_MC50.c: 269:     int8_t tempPos=-1;
 18464  006CE6  6822               	setf	getHopCode@tempPos^0,c
 18465                           
 18466                           ;keeloqDecrypt_MC50.c: 270:     for(i=0;i<25;i++)
 18467  006CE8  0E00               	movlw	0
 18468  006CEA  6E23               	movwf	getHopCode@i^0,c
 18469  006CEC                     l20815:
 18470                           
 18471                           ; BSR set to: 0
 18472                           ;keeloqDecrypt_MC50.c: 271:     {;keeloqDecrypt_MC50.c: 272:         if(listSyncValues[i
      +                          ].serial==data->serialnumber)
 18473  006CEC  EE20 F004          	lfsr	2,4
 18474  006CF0  5016               	movf	getHopCode@data^0,w,c
 18475  006CF2  26D9               	addwf	fsr2l,f,c
 18476  006CF4  5017               	movf	(getHopCode@data+1)^0,w,c
 18477  006CF6  22DA               	addwfc	fsr2h,f,c
 18478  006CF8  5023               	movf	getHopCode@i^0,w,c
 18479  006CFA  0D06               	mullw	6
 18480  006CFC  0E00               	movlw	low _listSyncValues
 18481  006CFE  24F3               	addwf	243,w,c
 18482  006D00  6EE1               	movwf	fsr1l,c
 18483  006D02  0E03               	movlw	high _listSyncValues
 18484  006D04  20F4               	addwfc	prodh,w,c
 18485  006D06  6EE2               	movwf	fsr1h,c
 18486  006D08  50DE               	movf	postinc2,w,c
 18487  006D0A  18E6               	xorwf	postinc1,w,c
 18488  006D0C  E118               	bnz	l20821
 18489  006D0E  50DE               	movf	postinc2,w,c
 18490  006D10  18E6               	xorwf	postinc1,w,c
 18491  006D12  E115               	bnz	l20821
 18492  006D14  50DE               	movf	postinc2,w,c
 18493  006D16  18E6               	xorwf	postinc1,w,c
 18494  006D18  E112               	bnz	l20821
 18495  006D1A  50DE               	movf	postinc2,w,c
 18496  006D1C  18E6               	xorwf	postinc1,w,c
 18497  006D1E  A4D8               	btfss	status,2,c
 18498  006D20  D00E               	goto	l20821
 18499                           
 18500                           ; BSR set to: 0
 18501                           ;keeloqDecrypt_MC50.c: 273:         {;keeloqDecrypt_MC50.c: 274:             tempHop=lis
      +                          tSyncValues[i].sync;
 18502  006D22  5023               	movf	getHopCode@i^0,w,c
 18503  006D24  0D06               	mullw	6
 18504  006D26  0E04               	movlw	low (_listSyncValues+4)
 18505  006D28  24F3               	addwf	243,w,c
 18506  006D2A  6ED9               	movwf	fsr2l,c
 18507  006D2C  0E03               	movlw	high (_listSyncValues+4)
 18508  006D2E  20F4               	addwfc	prodh,w,c
 18509  006D30  6EDA               	movwf	fsr2h,c
 18510  006D32  CFDE F020          	movff	postinc2,getHopCode@tempHop
 18511  006D36  CFDD F021          	movff	postdec2,getHopCode@tempHop+1
 18512                           
 18513                           ; BSR set to: 0
 18514                           ;keeloqDecrypt_MC50.c: 275:             tempPos=i;
 18515  006D3A  C023  F022         	movff	getHopCode@i,getHopCode@tempPos
 18516  006D3E                     l20821:
 18517                           
 18518                           ; BSR set to: 0
 18519                           ;keeloqDecrypt_MC50.c: 278:     }
 18520  006D3E  2A23               	incf	getHopCode@i^0,f,c
 18521                           
 18522                           ; BSR set to: 0
 18523  006D40  0E18               	movlw	24
 18524  006D42  6423               	cpfsgt	getHopCode@i^0,c
 18525  006D44  D7D3               	goto	l20815
 18526                           
 18527                           ; BSR set to: 0
 18528                           ;keeloqDecrypt_MC50.c: 280:     if(tempPos<0)
 18529  006D46  AE22               	btfss	getHopCode@tempPos^0,7,c
 18530  006D48  D050               	goto	l20841
 18531                           
 18532                           ; BSR set to: 0
 18533                           ;keeloqDecrypt_MC50.c: 281:     {;keeloqDecrypt_MC50.c: 282:         listSyncValues[poin
      +                          tSync].serial=data->serialnumber;
 18534  006D4A  EE20 F004          	lfsr	2,4
 18535  006D4E  5016               	movf	getHopCode@data^0,w,c
 18536  006D50  26D9               	addwf	fsr2l,f,c
 18537  006D52  5017               	movf	(getHopCode@data+1)^0,w,c
 18538  006D54  22DA               	addwfc	fsr2h,f,c
 18539  006D56  C07A  F010         	movff	_pointSync,___wmul@multiplier	;volatile
 18540  006D5A  C07B  F011         	movff	_pointSync+1,___wmul@multiplier+1	;volatile
 18541  006D5E  0E00               	movlw	0
 18542  006D60  6E13               	movwf	(___wmul@multiplicand+1)^0,c
 18543  006D62  0E06               	movlw	6
 18544  006D64  6E12               	movwf	___wmul@multiplicand^0,c
 18545  006D66  ECF7  F04C         	call	___wmul	;wreg free
 18546  006D6A  0E00               	movlw	low _listSyncValues
 18547  006D6C  2410               	addwf	?___wmul^0,w,c
 18548  006D6E  6EE1               	movwf	fsr1l,c
 18549  006D70  0E03               	movlw	high _listSyncValues
 18550  006D72  2011               	addwfc	(?___wmul+1)^0,w,c
 18551  006D74  6EE2               	movwf	fsr1h,c
 18552  006D76  CFDE FFE6          	movff	postinc2,postinc1
 18553  006D7A  CFDE FFE6          	movff	postinc2,postinc1
 18554  006D7E  CFDE FFE6          	movff	postinc2,postinc1
 18555  006D82  CFDE FFE6          	movff	postinc2,postinc1
 18556                           
 18557                           ;keeloqDecrypt_MC50.c: 283:         listSyncValues[pointSync].sync=data->sync;
 18558  006D86  EE20 F008          	lfsr	2,8
 18559  006D8A  5016               	movf	getHopCode@data^0,w,c
 18560  006D8C  26D9               	addwf	fsr2l,f,c
 18561  006D8E  5017               	movf	(getHopCode@data+1)^0,w,c
 18562  006D90  22DA               	addwfc	fsr2h,f,c
 18563  006D92  C07A  F010         	movff	_pointSync,___wmul@multiplier	;volatile
 18564  006D96  C07B  F011         	movff	_pointSync+1,___wmul@multiplier+1	;volatile
 18565  006D9A  0E00               	movlw	0
 18566  006D9C  6E13               	movwf	(___wmul@multiplicand+1)^0,c
 18567  006D9E  0E06               	movlw	6
 18568  006DA0  6E12               	movwf	___wmul@multiplicand^0,c
 18569  006DA2  ECF7  F04C         	call	___wmul	;wreg free
 18570  006DA6  0E04               	movlw	low (_listSyncValues+4)
 18571  006DA8  2410               	addwf	?___wmul^0,w,c
 18572  006DAA  6EE1               	movwf	fsr1l,c
 18573  006DAC  0E03               	movlw	high (_listSyncValues+4)
 18574  006DAE  2011               	addwfc	(?___wmul+1)^0,w,c
 18575  006DB0  6EE2               	movwf	fsr1h,c
 18576  006DB2  CFDE FFE6          	movff	postinc2,postinc1
 18577  006DB6  CFDD FFE5          	movff	postdec2,postdec1
 18578                           
 18579                           ;keeloqDecrypt_MC50.c: 284:         pointSync++;
 18580  006DBA  0100               	movlb	0	; () banked
 18581  006DBC  4B7A               	infsnz	_pointSync& (0+255),f,b	;volatile
 18582  006DBE  2B7B               	incf	(_pointSync+1)& (0+255),f,b	;volatile
 18583                           
 18584                           ; BSR set to: 0
 18585                           ;keeloqDecrypt_MC50.c: 285:         if(pointSync>=25)
 18586  006DC0  517B               	movf	(_pointSync+1)& (0+255),w,b	;volatile
 18587  006DC2  E104               	bnz	u23930
 18588  006DC4  0E19               	movlw	25
 18589  006DC6  5D7A               	subwf	_pointSync& (0+255),w,b	;volatile
 18590  006DC8  A0D8               	btfss	status,0,c
 18591  006DCA  D004               	goto	l20835
 18592  006DCC                     u23930:
 18593                           
 18594                           ; BSR set to: 0
 18595                           ;keeloqDecrypt_MC50.c: 286:         {;keeloqDecrypt_MC50.c: 287:             pointSync=0
      +                          ;
 18596  006DCC  0E00               	movlw	0
 18597  006DCE  6F7B               	movwf	(_pointSync+1)& (0+255),b	;volatile
 18598  006DD0  0E00               	movlw	0
 18599  006DD2  6F7A               	movwf	_pointSync& (0+255),b	;volatile
 18600  006DD4                     l20835:
 18601                           
 18602                           ; BSR set to: 0
 18603                           ;keeloqDecrypt_MC50.c: 289:         return ReqResync(Hop);
 18604  006DD4  C07C  F010         	movff	_Hop,ReqResync@CurrentHop
 18605  006DD8  C07D  F011         	movff	_Hop+1,ReqResync@CurrentHop+1
 18606  006DDC  EC3B  F04E         	call	_ReqResync	;wreg free
 18607  006DE0  6E18               	movwf	??_getHopCode^0,c
 18608  006DE2  5018               	movf	??_getHopCode^0,w,c
 18609  006DE4  6E16               	movwf	?_getHopCode^0,c
 18610  006DE6  6A17               	clrf	(?_getHopCode+1)^0,c
 18611  006DE8  0012               	return	
 18612  006DEA                     l20841:
 18613                           
 18614                           ; BSR set to: 0
 18615                           ;keeloqDecrypt_MC50.c: 292:     {;keeloqDecrypt_MC50.c: 293:         listSyncValues[temp
      +                          Pos].sync=Hop;
 18616  006DEA  5022               	movf	getHopCode@tempPos^0,w,c
 18617  006DEC  0D06               	mullw	6
 18618  006DEE  0E04               	movlw	low (_listSyncValues+4)
 18619  006DF0  24F3               	addwf	243,w,c
 18620  006DF2  6ED9               	movwf	fsr2l,c
 18621  006DF4  0E03               	movlw	high (_listSyncValues+4)
 18622  006DF6  20F4               	addwfc	prodh,w,c
 18623  006DF8  6EDA               	movwf	fsr2h,c
 18624  006DFA  C07C  FFDE         	movff	_Hop,postinc2
 18625  006DFE  C07D  FFDD         	movff	_Hop+1,postdec2
 18626                           
 18627                           ; BSR set to: 0
 18628                           ;keeloqDecrypt_MC50.c: 296:     return tempHop;
 18629  006E02  C020  F016         	movff	getHopCode@tempHop,?_getHopCode
 18630  006E06  C021  F017         	movff	getHopCode@tempHop+1,?_getHopCode+1
 18631  006E0A  0012               	return		;funcret
 18632  006E0C                     __end_of_getHopCode:
 18633                           	callstack 0
 18634                           
 18635 ;; *************** function _ReqResync *****************
 18636 ;; Defined at:
 18637 ;;		line 224 in file "keeloqDecrypt_MC50.c"
 18638 ;; Parameters:    Size  Location     Type
 18639 ;;  CurrentHop      2   15[COMRAM] unsigned short 
 18640 ;; Auto vars:     Size  Location     Type
 18641 ;;		None
 18642 ;; Return value:  Size  Location     Type
 18643 ;;                  1    wreg      enum E10730
 18644 ;; Registers used:
 18645 ;;		wreg, status,2, status,0
 18646 ;; Tracked objects:
 18647 ;;		On entry : 3F/0
 18648 ;;		On exit  : 3F/1
 18649 ;;		Unchanged: 0/0
 18650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18651 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18652 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18654 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18655 ;;Total ram usage:        2 bytes
 18656 ;; Hardware stack levels used: 1
 18657 ;; Hardware stack levels required when called: 4
 18658 ;; This function calls:
 18659 ;;		Nothing
 18660 ;; This function is called by:
 18661 ;;		_HopCHK
 18662 ;;		_getHopCode
 18663 ;; This function uses a non-reentrant model
 18664 ;;
 18665                           
 18666                           	psect	text65
 18667  009C76                     __ptext65:
 18668                           	callstack 0
 18669  009C76                     _ReqResync:
 18670                           	callstack 22
 18671                           
 18672                           ; BSR set to: 0
 18673                           ;keeloqDecrypt_MC50.c: 225:     F2Chance = 1;
 18674                           
 18675                           ;incstack = 0
 18676  009C76  0E01               	movlw	1
 18677  009C78  0101               	movlb	1	; () banked
 18678  009C7A  6F9A               	movwf	_F2Chance& (0+255),b
 18679                           
 18680                           ; BSR set to: 1
 18681                           ;keeloqDecrypt_MC50.c: 226:     NextHop = CurrentHop + 1;
 18682  009C7C  0E01               	movlw	1
 18683  009C7E  2410               	addwf	ReqResync@CurrentHop^0,w,c
 18684  009C80  6F87               	movwf	_NextHop& (0+255),b
 18685  009C82  0E00               	movlw	0
 18686  009C84  2011               	addwfc	(ReqResync@CurrentHop+1)^0,w,c
 18687  009C86  6F88               	movwf	(_NextHop+1)& (0+255),b
 18688                           
 18689                           ; BSR set to: 1
 18690                           ;keeloqDecrypt_MC50.c: 228:     return RESYNC_REQ;
 18691  009C88  0E09               	movlw	9
 18692                           
 18693                           ; BSR set to: 1
 18694  009C8A  0012               	return		;funcret
 18695  009C8C                     __end_of_ReqResync:
 18696                           	callstack 0
 18697                           
 18698 ;; *************** function _DecCHK *****************
 18699 ;; Defined at:
 18700 ;;		line 206 in file "keeloqDecrypt_MC50.c"
 18701 ;; Parameters:    Size  Location     Type
 18702 ;;  data            2   15[COMRAM] PTR struct .
 18703 ;;		 -> classic_data(16), 
 18704 ;; Auto vars:     Size  Location     Type
 18705 ;;		None
 18706 ;; Return value:  Size  Location     Type
 18707 ;;                  1    wreg      _Bool 
 18708 ;; Registers used:
 18709 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 18710 ;; Tracked objects:
 18711 ;;		On entry : 3F/0
 18712 ;;		On exit  : 3F/0
 18713 ;;		Unchanged: 3F/0
 18714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18715 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18717 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18718 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18719 ;;Total ram usage:        4 bytes
 18720 ;; Hardware stack levels used: 1
 18721 ;; Hardware stack levels required when called: 4
 18722 ;; This function calls:
 18723 ;;		Nothing
 18724 ;; This function is called by:
 18725 ;;		_keeloqDecryptPacket
 18726 ;; This function uses a non-reentrant model
 18727 ;;
 18728                           
 18729                           	psect	text66
 18730  009622                     __ptext66:
 18731                           	callstack 0
 18732  009622                     _DecCHK:
 18733                           	callstack 24
 18734                           
 18735                           ; BSR set to: 0
 18736                           ;keeloqDecrypt_MC50.c: 208:     if (((data->fcode1 ^ data->fcode2) & 0x0f) != 0)
 18737                           
 18738                           ; BSR set to: 1
 18739                           ;incstack = 0
 18740  009622  EE20 F00D          	lfsr	2,13
 18741  009626  5010               	movf	DecCHK@data^0,w,c
 18742  009628  26D9               	addwf	fsr2l,f,c
 18743  00962A  5011               	movf	(DecCHK@data+1)^0,w,c
 18744  00962C  22DA               	addwfc	fsr2h,f,c
 18745  00962E  50DF               	movf	indf2,w,c
 18746  009630  6E12               	movwf	??_DecCHK^0,c
 18747  009632  EE20 F00C          	lfsr	2,12
 18748  009636  5010               	movf	DecCHK@data^0,w,c
 18749  009638  26D9               	addwf	fsr2l,f,c
 18750  00963A  5011               	movf	(DecCHK@data+1)^0,w,c
 18751  00963C  22DA               	addwfc	fsr2h,f,c
 18752  00963E  50DF               	movf	indf2,w,c
 18753  009640  1812               	xorwf	??_DecCHK^0,w,c
 18754  009642  6E13               	movwf	(??_DecCHK+1)^0,c
 18755  009644  0E0F               	movlw	15
 18756  009646  1613               	andwf	(??_DecCHK+1)^0,f,c
 18757  009648  B4D8               	btfsc	status,2,c
 18758  00964A  D002               	goto	l21505
 18759                           
 18760                           ; BSR set to: 0
 18761                           ;keeloqDecrypt_MC50.c: 209:         return 0;
 18762  00964C  0E00               	movlw	0
 18763  00964E  0012               	return	
 18764  009650                     l21505:
 18765                           
 18766                           ; BSR set to: 0
 18767                           ;keeloqDecrypt_MC50.c: 211:     return 1;
 18768  009650  0E01               	movlw	1
 18769                           
 18770                           ; BSR set to: 0
 18771  009652  0012               	return		;funcret
 18772  009654                     __end_of_DecCHK:
 18773                           	callstack 0
 18774                           
 18775 ;; *************** function _DecryptPacket_12BIT *****************
 18776 ;; Defined at:
 18777 ;;		line 370 in file "keeloqDecrypt_MC50.c"
 18778 ;; Parameters:    Size  Location     Type
 18779 ;;  data            2    8[BANK0 ] PTR unsigned char 
 18780 ;;		 -> BufferRF(9), 
 18781 ;;  classic_data    2   10[BANK0 ] PTR struct .
 18782 ;;		 -> classic_data(16), 
 18783 ;; Auto vars:     Size  Location     Type
 18784 ;;  commandType     1   12[BANK0 ] enum E10539
 18785 ;; Return value:  Size  Location     Type
 18786 ;;                  1    wreg      enum E10539
 18787 ;; Registers used:
 18788 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18789 ;; Tracked objects:
 18790 ;;		On entry : 3F/0
 18791 ;;		On exit  : 3F/0
 18792 ;;		Unchanged: 0/0
 18793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18794 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18795 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18797 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18798 ;;Total ram usage:        5 bytes
 18799 ;; Hardware stack levels used: 1
 18800 ;; Hardware stack levels required when called: 14
 18801 ;; This function calls:
 18802 ;;		_memcpy
 18803 ;;		_validateRemoteSerialNumber
 18804 ;; This function is called by:
 18805 ;;		_readRFButtons
 18806 ;; This function uses a non-reentrant model
 18807 ;;
 18808                           
 18809                           	psect	text67
 18810  00816A                     __ptext67:
 18811                           	callstack 0
 18812  00816A                     _DecryptPacket_12BIT:
 18813                           	callstack 15
 18814                           
 18815                           ; BSR set to: 0
 18816                           ;keeloqDecrypt_MC50.c: 370: TypeCMD DecryptPacket_12BIT (char* data,classic_encoder_t* c
      +                          lassic_data);keeloqDecrypt_MC50.c: 371: {;keeloqDecrypt_MC50.c: 372:     TypeCMD command
      +                          Type;;keeloqDecrypt_MC50.c: 373:     memcpy(&classic_data->serialnumber, data, 4);
 18817                           
 18818                           ; BSR set to: 0
 18819                           ;incstack = 0
 18820  00816A  0E04               	movlw	4
 18821  00816C  25E2               	addwf	DecryptPacket_12BIT@classic_data& (0+255),w,b
 18822  00816E  6E10               	movwf	memcpy@d1^0,c
 18823  008170  0E00               	movlw	0
 18824  008172  21E3               	addwfc	(DecryptPacket_12BIT@classic_data+1)& (0+255),w,b
 18825  008174  6E11               	movwf	(memcpy@d1+1)^0,c
 18826  008176  C0E0  F012         	movff	DecryptPacket_12BIT@data,memcpy@s1
 18827  00817A  C0E1  F013         	movff	DecryptPacket_12BIT@data+1,memcpy@s1+1
 18828  00817E  0E00               	movlw	0
 18829  008180  6E15               	movwf	(memcpy@n+1)^0,c
 18830  008182  0E04               	movlw	4
 18831  008184  6E14               	movwf	memcpy@n^0,c
 18832  008186  ECDD  F049         	call	_memcpy	;wreg free
 18833                           
 18834                           ;keeloqDecrypt_MC50.c: 374:     commandType=validateRemoteSerialNumber(classic_data->ser
      +                          ialnumber,NO,&classic_data->positionMem);
 18835  00818A  0100               	movlb	0	; () banked
 18836  00818C  EE20 F004          	lfsr	2,4
 18837  008190  51E2               	movf	DecryptPacket_12BIT@classic_data& (0+255),w,b
 18838  008192  26D9               	addwf	fsr2l,f,c
 18839  008194  51E3               	movf	(DecryptPacket_12BIT@classic_data+1)& (0+255),w,b
 18840  008196  22DA               	addwfc	fsr2h,f,c
 18841  008198  CFDE F02E          	movff	postinc2,validateRemoteSerialNumber@serial
 18842  00819C  CFDE F02F          	movff	postinc2,validateRemoteSerialNumber@serial+1
 18843  0081A0  CFDE F030          	movff	postinc2,validateRemoteSerialNumber@serial+2
 18844  0081A4  CFDE F031          	movff	postinc2,validateRemoteSerialNumber@serial+3
 18845  0081A8  0E00               	movlw	0
 18846  0081AA  6E32               	movwf	validateRemoteSerialNumber@VerifyOnlySerial^0,c
 18847  0081AC  0E0F               	movlw	15
 18848  0081AE  25E2               	addwf	DecryptPacket_12BIT@classic_data& (0+255),w,b
 18849  0081B0  6E33               	movwf	validateRemoteSerialNumber@position^0,c
 18850  0081B2  0E00               	movlw	0
 18851  0081B4  21E3               	addwfc	(DecryptPacket_12BIT@classic_data+1)& (0+255),w,b
 18852  0081B6  6E34               	movwf	(validateRemoteSerialNumber@position+1)^0,c
 18853  0081B8  EC52  F030         	call	_validateRemoteSerialNumber	;wreg free
 18854  0081BC  6FE4               	movwf	DecryptPacket_12BIT@commandType& (0+255),b
 18855                           
 18856                           ; BSR set to: 0
 18857                           ;keeloqDecrypt_MC50.c: 375:     classic_data->fcode1 = 0;
 18858  0081BE  EE20 F00C          	lfsr	2,12
 18859  0081C2  51E2               	movf	DecryptPacket_12BIT@classic_data& (0+255),w,b
 18860  0081C4  26D9               	addwf	fsr2l,f,c
 18861  0081C6  51E3               	movf	(DecryptPacket_12BIT@classic_data+1)& (0+255),w,b
 18862  0081C8  22DA               	addwfc	fsr2h,f,c
 18863  0081CA  0E00               	movlw	0
 18864  0081CC  6EDF               	movwf	indf2,c
 18865                           
 18866                           ; BSR set to: 0
 18867                           ;keeloqDecrypt_MC50.c: 376:     classic_data->sync = 0;
 18868  0081CE  EE20 F008          	lfsr	2,8
 18869  0081D2  51E2               	movf	DecryptPacket_12BIT@classic_data& (0+255),w,b
 18870  0081D4  26D9               	addwf	fsr2l,f,c
 18871  0081D6  51E3               	movf	(DecryptPacket_12BIT@classic_data+1)& (0+255),w,b
 18872  0081D8  22DA               	addwfc	fsr2h,f,c
 18873  0081DA  0E00               	movlw	0
 18874  0081DC  6EDE               	movwf	postinc2,c
 18875  0081DE  0E00               	movlw	0
 18876  0081E0  6EDD               	movwf	postdec2,c
 18877                           
 18878                           ; BSR set to: 0
 18879                           ;keeloqDecrypt_MC50.c: 377:     classic_data->type=DIP_12BIT;
 18880  0081E2  EE20 F00E          	lfsr	2,14
 18881  0081E6  51E2               	movf	DecryptPacket_12BIT@classic_data& (0+255),w,b
 18882  0081E8  26D9               	addwf	fsr2l,f,c
 18883  0081EA  51E3               	movf	(DecryptPacket_12BIT@classic_data+1)& (0+255),w,b
 18884  0081EC  22DA               	addwfc	fsr2h,f,c
 18885  0081EE  0E02               	movlw	2
 18886  0081F0  6EDF               	movwf	indf2,c
 18887                           
 18888                           ; BSR set to: 0
 18889                           ;keeloqDecrypt_MC50.c: 386:     return commandType;
 18890  0081F2  51E4               	movf	DecryptPacket_12BIT@commandType& (0+255),w,b
 18891                           
 18892                           ; BSR set to: 0
 18893  0081F4  0012               	return		;funcret
 18894  0081F6                     __end_of_DecryptPacket_12BIT:
 18895                           	callstack 0
 18896                           
 18897 ;; *************** function _readInputs *****************
 18898 ;; Defined at:
 18899 ;;		line 528 in file "inputs_MC50.c"
 18900 ;; Parameters:    Size  Location     Type
 18901 ;;		None
 18902 ;; Auto vars:     Size  Location     Type
 18903 ;;		None
 18904 ;; Return value:  Size  Location     Type
 18905 ;;                  1    wreg      void 
 18906 ;; Registers used:
 18907 ;;		wreg, status,2, status,0
 18908 ;; Tracked objects:
 18909 ;;		On entry : 3F/1
 18910 ;;		On exit  : 3E/0
 18911 ;;		Unchanged: 0/0
 18912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18913 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18914 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18916 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18917 ;;Total ram usage:        0 bytes
 18918 ;; Hardware stack levels used: 1
 18919 ;; Hardware stack levels required when called: 4
 18920 ;; This function calls:
 18921 ;;		Nothing
 18922 ;; This function is called by:
 18923 ;;		_main
 18924 ;; This function uses a non-reentrant model
 18925 ;;
 18926                           
 18927                           	psect	text68
 18928  0073A4                     __ptext68:
 18929                           	callstack 0
 18930  0073A4                     _readInputs:
 18931                           	callstack 26
 18932                           
 18933                           ; BSR set to: 1
 18934                           ;inputs_MC50.c: 533:     if(var_sys_NVM.Direction_motor == 0){fimdecurso.FimdeCursoClose
      +                          AUX=PORTAbits.RA1;}
 18935                           
 18936                           ; BSR set to: 0
 18937                           ;incstack = 0
 18938  0073A4  0100               	movlb	0	; () banked
 18939  0073A6  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 18940  0073A8  A4D8               	btfss	status,2,c
 18941  0073AA  D006               	goto	l24717
 18942                           
 18943                           ; BSR set to: 0
 18944  0073AC  0E00               	movlw	0
 18945  0073AE  B28D               	btfsc	141,1,c	;volatile
 18946  0073B0  0E01               	movlw	1
 18947  0073B2  0101               	movlb	1	; () banked
 18948  0073B4  6F78               	movwf	(_fimdecurso+3)& (0+255),b	;volatile
 18949  0073B6  D005               	goto	l24719
 18950  0073B8                     l24717:
 18951                           
 18952                           ; BSR set to: 0
 18953  0073B8  0E00               	movlw	0
 18954  0073BA  B48D               	btfsc	141,2,c	;volatile
 18955  0073BC  0E01               	movlw	1
 18956  0073BE  0101               	movlb	1	; () banked
 18957  0073C0  6F78               	movwf	(_fimdecurso+3)& (0+255),b	;volatile
 18958  0073C2                     l24719:
 18959                           
 18960                           ; BSR set to: 1
 18961                           ;inputs_MC50.c: 541:     if (fimdecurso.FimdeCursoCloseAUX==fimdecurso.FimdeCursoCloseOL
      +                          D)
 18962  0073C2  5179               	movf	(_fimdecurso+4)& (0+255),w,b	;volatile
 18963  0073C4  1978               	xorwf	(_fimdecurso+3)& (0+255),w,b	;volatile
 18964  0073C6  A4D8               	btfss	status,2,c
 18965  0073C8  D002               	goto	l1731
 18966                           
 18967                           ; BSR set to: 1
 18968                           ;inputs_MC50.c: 542:     {;inputs_MC50.c: 543:            fimdecurso.FimdeCursoCloseTime
      +                          r++;
 18969  0073CA  2B7A               	incf	(_fimdecurso+5)& (0+255),f,b	;volatile
 18970                           
 18971                           ;inputs_MC50.c: 544:     }
 18972  0073CC  D004               	goto	l1732
 18973  0073CE                     l1731:
 18974                           
 18975                           ; BSR set to: 1
 18976                           ;inputs_MC50.c: 547:     {;inputs_MC50.c: 548:             fimdecurso.FimdeCursoCloseOLD
      +                           = fimdecurso.FimdeCursoCloseAUX;
 18977  0073CE  C178  F179         	movff	_fimdecurso+3,_fimdecurso+4	;volatile
 18978                           
 18979                           ; BSR set to: 1
 18980                           ;inputs_MC50.c: 549:             fimdecurso.FimdeCursoCloseTimer=0;
 18981  0073D2  0E00               	movlw	0
 18982  0073D4  6F7A               	movwf	(_fimdecurso+5)& (0+255),b	;volatile
 18983  0073D6                     l1732:
 18984                           
 18985                           ; BSR set to: 1
 18986                           ;inputs_MC50.c: 553:     if (fimdecurso.FimdeCursoCloseTimer>=( 50/50))
 18987  0073D6  517A               	movf	(_fimdecurso+5)& (0+255),w,b	;volatile
 18988  0073D8  A4D8               	btfss	status,2,c
 18989                           
 18990                           ; BSR set to: 1
 18991                           ;inputs_MC50.c: 554:     {;inputs_MC50.c: 555:         var_sys.FimCurso_CloseIsEnabled=f
      +                          imdecurso.FimdeCursoCloseAUX;
 18992  0073DA  C178  F103         	movff	_fimdecurso+3,_var_sys+3	;volatile
 18993                           
 18994                           ; BSR set to: 1
 18995                           ;inputs_MC50.c: 564:     if(var_sys_NVM.Direction_motor == 0){fimdecurso.FimdeCursoOpenA
      +                          UX=PORTAbits.RA2;}
 18996  0073DE  0100               	movlb	0	; () banked
 18997  0073E0  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 18998  0073E2  A4D8               	btfss	status,2,c
 18999  0073E4  D006               	goto	l24731
 19000                           
 19001                           ; BSR set to: 0
 19002  0073E6  0E00               	movlw	0
 19003  0073E8  B48D               	btfsc	141,2,c	;volatile
 19004  0073EA  0E01               	movlw	1
 19005  0073EC  0101               	movlb	1	; () banked
 19006  0073EE  6F75               	movwf	_fimdecurso& (0+255),b	;volatile
 19007  0073F0  D005               	goto	l24733
 19008  0073F2                     l24731:
 19009                           
 19010                           ; BSR set to: 0
 19011  0073F2  0E00               	movlw	0
 19012  0073F4  B28D               	btfsc	141,1,c	;volatile
 19013  0073F6  0E01               	movlw	1
 19014  0073F8  0101               	movlb	1	; () banked
 19015  0073FA  6F75               	movwf	_fimdecurso& (0+255),b	;volatile
 19016  0073FC                     l24733:
 19017                           
 19018                           ; BSR set to: 1
 19019                           ;inputs_MC50.c: 570:     if (fimdecurso.FimdeCursoOpenAUX==fimdecurso.FimdeCursoOpenOLD)
 19020  0073FC  5175               	movf	_fimdecurso& (0+255),w,b	;volatile
 19021  0073FE  1976               	xorwf	(_fimdecurso+1)& (0+255),w,b	;volatile
 19022  007400  A4D8               	btfss	status,2,c
 19023  007402  D002               	goto	l1736
 19024                           
 19025                           ; BSR set to: 1
 19026                           ;inputs_MC50.c: 571:     {;inputs_MC50.c: 572:            fimdecurso.FimdeCursoOpenTimer
      +                          ++;
 19027  007404  2B77               	incf	(_fimdecurso+2)& (0+255),f,b	;volatile
 19028                           
 19029                           ;inputs_MC50.c: 573:     }
 19030  007406  D004               	goto	l1737
 19031  007408                     l1736:
 19032                           
 19033                           ; BSR set to: 1
 19034                           ;inputs_MC50.c: 576:     {;inputs_MC50.c: 577:             fimdecurso.FimdeCursoOpenOLD 
      +                          = fimdecurso.FimdeCursoOpenAUX;
 19035  007408  C175  F176         	movff	_fimdecurso,_fimdecurso+1	;volatile
 19036                           
 19037                           ; BSR set to: 1
 19038                           ;inputs_MC50.c: 578:             fimdecurso.FimdeCursoOpenTimer=0;
 19039  00740C  0E00               	movlw	0
 19040  00740E  6F77               	movwf	(_fimdecurso+2)& (0+255),b	;volatile
 19041  007410                     l1737:
 19042                           
 19043                           ; BSR set to: 1
 19044                           ;inputs_MC50.c: 582:     if (fimdecurso.FimdeCursoOpenTimer>=( 50/50))
 19045  007410  5177               	movf	(_fimdecurso+2)& (0+255),w,b	;volatile
 19046  007412  A4D8               	btfss	status,2,c
 19047                           
 19048                           ; BSR set to: 1
 19049                           ;inputs_MC50.c: 583:     {;inputs_MC50.c: 584:         var_sys.FimCurso_OpenIsEnabled=fi
      +                          mdecurso.FimdeCursoOpenAUX;
 19050  007414  C175  F104         	movff	_fimdecurso,_var_sys+4	;volatile
 19051                           
 19052                           ; BSR set to: 1
 19053                           ;inputs_MC50.c: 589:     security.PhotoCellAUX=PORTAbits.RA4;
 19054  007418  0E00               	movlw	0
 19055  00741A  B88D               	btfsc	141,4,c	;volatile
 19056  00741C  0E01               	movlw	1
 19057  00741E  6F6A               	movwf	_security& (0+255),b	;volatile
 19058                           
 19059                           ; BSR set to: 1
 19060                           ;inputs_MC50.c: 594:     if (security.PhotoCellAUX==security.PhotoCellOLD)
 19061  007420  516A               	movf	_security& (0+255),w,b	;volatile
 19062  007422  196B               	xorwf	(_security+1)& (0+255),w,b	;volatile
 19063  007424  A4D8               	btfss	status,2,c
 19064  007426  D002               	goto	l1739
 19065                           
 19066                           ; BSR set to: 1
 19067                           ;inputs_MC50.c: 595:     {;inputs_MC50.c: 596:            security.PhotoCellTimer++;
 19068  007428  2B6C               	incf	(_security+2)& (0+255),f,b	;volatile
 19069                           
 19070                           ;inputs_MC50.c: 597:     }
 19071  00742A  D004               	goto	l1740
 19072  00742C                     l1739:
 19073                           
 19074                           ; BSR set to: 1
 19075                           ;inputs_MC50.c: 600:     {;inputs_MC50.c: 601:             security.PhotoCellOLD = secur
      +                          ity.PhotoCellAUX;
 19076  00742C  C16A  F16B         	movff	_security,_security+1	;volatile
 19077                           
 19078                           ; BSR set to: 1
 19079                           ;inputs_MC50.c: 602:             security.PhotoCellTimer=0;
 19080  007430  0E00               	movlw	0
 19081  007432  6F6C               	movwf	(_security+2)& (0+255),b	;volatile
 19082  007434                     l1740:
 19083                           
 19084                           ; BSR set to: 1
 19085                           ;inputs_MC50.c: 606:     if (security.PhotoCellTimer>=( 50/50))
 19086  007434  516C               	movf	(_security+2)& (0+255),w,b	;volatile
 19087  007436  A4D8               	btfss	status,2,c
 19088                           
 19089                           ; BSR set to: 1
 19090                           ;inputs_MC50.c: 607:     {;inputs_MC50.c: 608:         var_sys.photoCellIsObstructed=sec
      +                          urity.PhotoCellAUX;
 19091  007438  C16A  F101         	movff	_security,_var_sys+1	;volatile
 19092                           
 19093                           ; BSR set to: 1
 19094                           ;inputs_MC50.c: 612:     security.SecurityBarAUX=PORTAbits.RA5;
 19095  00743C  0E00               	movlw	0
 19096  00743E  BA8D               	btfsc	141,5,c	;volatile
 19097  007440  0E01               	movlw	1
 19098  007442  6F6D               	movwf	(_security+3)& (0+255),b	;volatile
 19099                           
 19100                           ; BSR set to: 1
 19101                           ;inputs_MC50.c: 616:     if (security.SecurityBarAUX==security.SecurityBarOLD)
 19102  007444  516E               	movf	(_security+4)& (0+255),w,b	;volatile
 19103  007446  196D               	xorwf	(_security+3)& (0+255),w,b	;volatile
 19104  007448  A4D8               	btfss	status,2,c
 19105  00744A  D002               	goto	l1742
 19106                           
 19107                           ; BSR set to: 1
 19108                           ;inputs_MC50.c: 617:     {;inputs_MC50.c: 618:            security.SecurityBarTimer++;
 19109  00744C  2B6F               	incf	(_security+5)& (0+255),f,b	;volatile
 19110                           
 19111                           ;inputs_MC50.c: 619:     }
 19112  00744E  D004               	goto	l1743
 19113  007450                     l1742:
 19114                           
 19115                           ; BSR set to: 1
 19116                           ;inputs_MC50.c: 622:     {;inputs_MC50.c: 623:             security.SecurityBarOLD = sec
      +                          urity.SecurityBarAUX;
 19117  007450  C16D  F16E         	movff	_security+3,_security+4	;volatile
 19118                           
 19119                           ; BSR set to: 1
 19120                           ;inputs_MC50.c: 624:             security.SecurityBarTimer=0;
 19121  007454  0E00               	movlw	0
 19122  007456  6F6F               	movwf	(_security+5)& (0+255),b	;volatile
 19123  007458                     l1743:
 19124                           
 19125                           ; BSR set to: 1
 19126                           ;inputs_MC50.c: 628:     if (security.SecurityBarTimer>=( 50/50))
 19127  007458  516F               	movf	(_security+5)& (0+255),w,b	;volatile
 19128  00745A  A4D8               	btfss	status,2,c
 19129                           
 19130                           ; BSR set to: 1
 19131                           ;inputs_MC50.c: 629:     {;inputs_MC50.c: 630:         security.SecurityBarSTATE=securit
      +                          y.SecurityBarAUX;
 19132  00745C  C16D  F170         	movff	_security+3,_security+6	;volatile
 19133                           
 19134                           ; BSR set to: 1
 19135                           ;inputs_MC50.c: 633:     security.SecurityBar8K2AUX=PORTAbits.RA6;
 19136  007460  0E00               	movlw	0
 19137  007462  BC8D               	btfsc	141,6,c	;volatile
 19138  007464  0E01               	movlw	1
 19139  007466  6F71               	movwf	(_security+7)& (0+255),b	;volatile
 19140                           
 19141                           ; BSR set to: 1
 19142                           ;inputs_MC50.c: 637:     if (security.SecurityBar8K2AUX==security.SecurityBar8K2OLD)
 19143  007468  5172               	movf	(_security+8)& (0+255),w,b	;volatile
 19144  00746A  1971               	xorwf	(_security+7)& (0+255),w,b	;volatile
 19145  00746C  A4D8               	btfss	status,2,c
 19146  00746E  D002               	goto	l1745
 19147                           
 19148                           ; BSR set to: 1
 19149                           ;inputs_MC50.c: 638:     {;inputs_MC50.c: 639:            security.SecurityBar8K2Timer++
      +                          ;
 19150  007470  2B73               	incf	(_security+9)& (0+255),f,b	;volatile
 19151                           
 19152                           ;inputs_MC50.c: 640:     }
 19153  007472  D004               	goto	l1746
 19154  007474                     l1745:
 19155                           
 19156                           ; BSR set to: 1
 19157                           ;inputs_MC50.c: 643:     {;inputs_MC50.c: 644:             security.SecurityBar8K2OLD = 
      +                          security.SecurityBar8K2AUX;
 19158  007474  C171  F172         	movff	_security+7,_security+8	;volatile
 19159                           
 19160                           ; BSR set to: 1
 19161                           ;inputs_MC50.c: 645:             security.SecurityBar8K2Timer=0;
 19162  007478  0E00               	movlw	0
 19163  00747A  6F73               	movwf	(_security+9)& (0+255),b	;volatile
 19164  00747C                     l1746:
 19165                           
 19166                           ; BSR set to: 1
 19167                           ;inputs_MC50.c: 649:     if (security.SecurityBar8K2Timer>=( 50/50))
 19168  00747C  5173               	movf	(_security+9)& (0+255),w,b	;volatile
 19169  00747E  A4D8               	btfss	status,2,c
 19170                           
 19171                           ; BSR set to: 1
 19172                           ;inputs_MC50.c: 650:     {;inputs_MC50.c: 651:         security.SecurityBar8K2STATE=secu
      +                          rity.SecurityBar8K2AUX;
 19173  007480  C171  F174         	movff	_security+7,_security+10	;volatile
 19174                           
 19175                           ; BSR set to: 1
 19176                           ;inputs_MC50.c: 655:     if (var_sys_NVM.securityBandType == 0)
 19177  007484  0100               	movlb	0	; () banked
 19178  007486  51A2               	movf	(_var_sys_NVM+10)& (0+255),w,b	;volatile
 19179  007488  A4D8               	btfss	status,2,c
 19180  00748A  D00D               	goto	l1748
 19181                           
 19182                           ; BSR set to: 0
 19183                           ;inputs_MC50.c: 656:     {;inputs_MC50.c: 657:         if(security.SecurityBarSTATE==0 &
      +                          & security.SecurityBar8K2STATE==1)
 19184  00748C  0101               	movlb	1	; () banked
 19185  00748E  5170               	movf	(_security+6)& (0+255),w,b	;volatile
 19186  007490  A4D8               	btfss	status,2,c
 19187  007492  D006               	goto	l24779
 19188                           
 19189                           ; BSR set to: 1
 19190  007494  0574               	decf	(_security+10)& (0+255),w,b	;volatile
 19191  007496  A4D8               	btfss	status,2,c
 19192  007498  D003               	goto	l24779
 19193                           
 19194                           ; BSR set to: 1
 19195                           ;inputs_MC50.c: 658:         {;inputs_MC50.c: 659:             var_sys.SecurityBarIsObst
      +                          ructed = NO;
 19196  00749A  0E00               	movlw	0
 19197  00749C  6F02               	movwf	(_var_sys+2)& (0+255),b	;volatile
 19198                           
 19199                           ;inputs_MC50.c: 660:         }
 19200  00749E  0012               	return	
 19201  0074A0                     l24779:
 19202                           
 19203                           ; BSR set to: 1
 19204                           ;inputs_MC50.c: 662:         {;inputs_MC50.c: 663:             var_sys.SecurityBarIsObst
      +                          ructed = YES;
 19205  0074A0  0E01               	movlw	1
 19206  0074A2  6F02               	movwf	(_var_sys+2)& (0+255),b	;volatile
 19207  0074A4  0012               	return	
 19208  0074A6                     l1748:
 19209                           
 19210                           ; BSR set to: 0
 19211                           ;inputs_MC50.c: 667:     {;inputs_MC50.c: 668:         var_sys.SecurityBarIsObstructed =
      +                           security.SecurityBarSTATE;
 19212  0074A6  C170  F102         	movff	_security+6,_var_sys+2	;volatile
 19213  0074AA  0012               	return		;funcret
 19214  0074AC                     __end_of_readInputs:
 19215                           	callstack 0
 19216                           
 19217 ;; *************** function _loadNVM_VarSystem *****************
 19218 ;; Defined at:
 19219 ;;		line 151 in file "controlMemory_MC50.c"
 19220 ;; Parameters:    Size  Location     Type
 19221 ;;		None
 19222 ;; Auto vars:     Size  Location     Type
 19223 ;;		None
 19224 ;; Return value:  Size  Location     Type
 19225 ;;                  1    wreg      void 
 19226 ;; Registers used:
 19227 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19228 ;; Tracked objects:
 19229 ;;		On entry : 3F/0
 19230 ;;		On exit  : 0/0
 19231 ;;		Unchanged: 0/0
 19232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19233 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19234 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19236 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19237 ;;Total ram usage:        0 bytes
 19238 ;; Hardware stack levels used: 1
 19239 ;; Hardware stack levels required when called: 15
 19240 ;; This function calls:
 19241 ;;		_I2C1_Read1ByteRegister
 19242 ;;		_ResetDefaultMemory
 19243 ;;		_SaveNVM_VarSystem
 19244 ;;		_checkNVM_VarSystem
 19245 ;;		_i2c_readDataBlock
 19246 ;; This function is called by:
 19247 ;;		_main
 19248 ;; This function uses a non-reentrant model
 19249 ;;
 19250                           
 19251                           	psect	text69
 19252  006E0C                     __ptext69:
 19253                           	callstack 0
 19254  006E0C                     _loadNVM_VarSystem:
 19255                           	callstack 15
 19256                           
 19257                           ; BSR set to: 0
 19258                           ;controlMemory_MC50.c: 153:     if((I2C1_Read1ByteRegister(0x50, 0) == 0xFF) && (I2C1_Re
      +                          ad1ByteRegister(0x50, 16) == 0xFF))
 19259                           
 19260                           ;incstack = 0
 19261  006E0C  0E00               	movlw	0
 19262  006E0E  6E22               	movwf	I2C1_Read1ByteRegister@reg^0,c
 19263  006E10  0E50               	movlw	80
 19264  006E12  EC29  F047         	call	_I2C1_Read1ByteRegister
 19265  006E16  0AFF               	xorlw	255
 19266  006E18  A4D8               	btfss	status,2,c
 19267  006E1A  D04C               	goto	l24583
 19268  006E1C  0E10               	movlw	16
 19269  006E1E  6E22               	movwf	I2C1_Read1ByteRegister@reg^0,c
 19270  006E20  0E50               	movlw	80
 19271  006E22  EC29  F047         	call	_I2C1_Read1ByteRegister
 19272  006E26  0AFF               	xorlw	255
 19273  006E28  A4D8               	btfss	status,2,c
 19274  006E2A  D044               	goto	l24583
 19275                           
 19276                           ;controlMemory_MC50.c: 154:     {;controlMemory_MC50.c: 155:         ResetDefaultMemory(
      +                          SC);
 19277  006E2C  0E00               	movlw	0
 19278  006E2E  EC85  F033         	call	_ResetDefaultMemory
 19279                           
 19280                           ;controlMemory_MC50.c: 156:         var_sys_NVM.learningTimeToClose = 0;
 19281  006E32  0E00               	movlw	0
 19282  006E34  0100               	movlb	0	; () banked
 19283  006E36  6FD0               	movwf	(_var_sys_NVM+56)& (0+255),b	;volatile
 19284  006E38  0E00               	movlw	0
 19285  006E3A  6FD1               	movwf	(_var_sys_NVM+57)& (0+255),b	;volatile
 19286  006E3C  0E00               	movlw	0
 19287  006E3E  6FD2               	movwf	(_var_sys_NVM+58)& (0+255),b	;volatile
 19288  006E40  0E00               	movlw	0
 19289  006E42  6FD3               	movwf	(_var_sys_NVM+59)& (0+255),b	;volatile
 19290                           
 19291                           ; BSR set to: 0
 19292                           ;controlMemory_MC50.c: 157:         var_sys_NVM.learningTimeToOpen = 0;
 19293  006E44  0E00               	movlw	0
 19294  006E46  6FCC               	movwf	(_var_sys_NVM+52)& (0+255),b	;volatile
 19295  006E48  0E00               	movlw	0
 19296  006E4A  6FCD               	movwf	(_var_sys_NVM+53)& (0+255),b	;volatile
 19297  006E4C  0E00               	movlw	0
 19298  006E4E  6FCE               	movwf	(_var_sys_NVM+54)& (0+255),b	;volatile
 19299  006E50  0E00               	movlw	0
 19300  006E52  6FCF               	movwf	(_var_sys_NVM+55)& (0+255),b	;volatile
 19301                           
 19302                           ; BSR set to: 0
 19303                           ;controlMemory_MC50.c: 158:         var_sys_NVM.learningCurrentNormalClose = 0;
 19304  006E54  0E00               	movlw	0
 19305  006E56  6FC9               	movwf	(_var_sys_NVM+49)& (0+255),b	;volatile
 19306  006E58  0E00               	movlw	0
 19307  006E5A  6FC8               	movwf	(_var_sys_NVM+48)& (0+255),b	;volatile
 19308                           
 19309                           ; BSR set to: 0
 19310                           ;controlMemory_MC50.c: 159:         var_sys_NVM.learningCurrentNormalOpen = 0;
 19311  006E5C  0E00               	movlw	0
 19312  006E5E  6FCB               	movwf	(_var_sys_NVM+51)& (0+255),b	;volatile
 19313  006E60  0E00               	movlw	0
 19314  006E62  6FCA               	movwf	(_var_sys_NVM+50)& (0+255),b	;volatile
 19315                           
 19316                           ; BSR set to: 0
 19317                           ;controlMemory_MC50.c: 160:         var_sys_NVM.learningCurrentDecelarationClose = 0;
 19318  006E64  0E00               	movlw	0
 19319  006E66  6FC0               	movwf	(_var_sys_NVM+40)& (0+255),b	;volatile
 19320  006E68  0E00               	movlw	0
 19321  006E6A  6FC1               	movwf	(_var_sys_NVM+41)& (0+255),b	;volatile
 19322  006E6C  0E00               	movlw	0
 19323  006E6E  6FC2               	movwf	(_var_sys_NVM+42)& (0+255),b	;volatile
 19324  006E70  0E00               	movlw	0
 19325  006E72  6FC3               	movwf	(_var_sys_NVM+43)& (0+255),b	;volatile
 19326                           
 19327                           ; BSR set to: 0
 19328                           ;controlMemory_MC50.c: 161:         var_sys_NVM.learningCurrentDecelarationOpen = 0;
 19329  006E74  0E00               	movlw	0
 19330  006E76  6FC4               	movwf	(_var_sys_NVM+44)& (0+255),b	;volatile
 19331  006E78  0E00               	movlw	0
 19332  006E7A  6FC5               	movwf	(_var_sys_NVM+45)& (0+255),b	;volatile
 19333  006E7C  0E00               	movlw	0
 19334  006E7E  6FC6               	movwf	(_var_sys_NVM+46)& (0+255),b	;volatile
 19335  006E80  0E00               	movlw	0
 19336  006E82  6FC7               	movwf	(_var_sys_NVM+47)& (0+255),b	;volatile
 19337                           
 19338                           ;controlMemory_MC50.c: 162:         SaveNVM_VarSystem(pageMemoryLearningVars);
 19339  006E84  0E03               	movlw	3
 19340  006E86  ECDB  F04A         	call	_SaveNVM_VarSystem
 19341                           
 19342                           ;controlMemory_MC50.c: 163:         var_sys_NVM.positionRemotesFull = 0;
 19343  006E8A  0E00               	movlw	0
 19344  006E8C  0100               	movlb	0	; () banked
 19345  006E8E  6FB8               	movwf	(_var_sys_NVM+32)& (0+255),b	;volatile
 19346                           
 19347                           ; BSR set to: 0
 19348                           ;controlMemory_MC50.c: 164:         var_sys_NVM.positionRemotesWalk = 0;
 19349  006E90  0E00               	movlw	0
 19350  006E92  6FB9               	movwf	(_var_sys_NVM+33)& (0+255),b	;volatile
 19351                           
 19352                           ; BSR set to: 0
 19353                           ;controlMemory_MC50.c: 165:         var_sys_NVM.OnlyRollingCode = NO;
 19354  006E94  0E00               	movlw	0
 19355  006E96  6FBE               	movwf	(_var_sys_NVM+38)& (0+255),b	;volatile
 19356                           
 19357                           ; BSR set to: 0
 19358                           ;controlMemory_MC50.c: 166:         var_sys_NVM.counterMoves = 0;
 19359  006E98  0E00               	movlw	0
 19360  006E9A  6FBA               	movwf	(_var_sys_NVM+34)& (0+255),b	;volatile
 19361  006E9C  0E00               	movlw	0
 19362  006E9E  6FBB               	movwf	(_var_sys_NVM+35)& (0+255),b	;volatile
 19363  006EA0  0E00               	movlw	0
 19364  006EA2  6FBC               	movwf	(_var_sys_NVM+36)& (0+255),b	;volatile
 19365  006EA4  0E00               	movlw	0
 19366  006EA6  6FBD               	movwf	(_var_sys_NVM+37)& (0+255),b	;volatile
 19367                           
 19368                           ;controlMemory_MC50.c: 167:        SaveNVM_VarSystem(pageMemoryCounters);
 19369  006EA8  0E02               	movlw	2
 19370  006EAA  ECDB  F04A         	call	_SaveNVM_VarSystem
 19371                           
 19372                           ;controlMemory_MC50.c: 169:          var_sys_NVM.TypeofMotor = 0;
 19373  006EAE  0E00               	movlw	0
 19374  006EB0  0100               	movlb	0	; () banked
 19375  006EB2  6FB4               	movwf	(_var_sys_NVM+28)& (0+255),b	;volatile
 19376  006EB4                     l24583:
 19377                           
 19378                           ;controlMemory_MC50.c: 172:     i2c_readDataBlock(0x50, (uint16_t)(pageMemoryP * 16),(ch
      +                          ar*)&var_sys_NVM,16);
 19379  006EB4  0E00               	movlw	0
 19380  006EB6  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 19381  006EB8  0E00               	movlw	0
 19382  006EBA  6E22               	movwf	i2c_readDataBlock@reg^0,c
 19383  006EBC  0E98               	movlw	low _var_sys_NVM
 19384  006EBE  6E24               	movwf	i2c_readDataBlock@data^0,c
 19385  006EC0  6A25               	clrf	(i2c_readDataBlock@data+1)^0,c
 19386  006EC2  0E00               	movlw	0
 19387  006EC4  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 19388  006EC6  0E10               	movlw	16
 19389  006EC8  6E26               	movwf	i2c_readDataBlock@len^0,c
 19390  006ECA  0E50               	movlw	80
 19391  006ECC  EC45  F044         	call	_i2c_readDataBlock
 19392                           
 19393                           ;controlMemory_MC50.c: 173:     i2c_readDataBlock(0x50, (uint16_t)(pageMemoryE * 16),(ch
      +                          ar*)&var_sys_NVM.homemPresente, 16);
 19394  006ED0  0E00               	movlw	0
 19395  006ED2  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 19396  006ED4  0E10               	movlw	16
 19397  006ED6  6E22               	movwf	i2c_readDataBlock@reg^0,c
 19398  006ED8  0EA8               	movlw	low (_var_sys_NVM+16)
 19399  006EDA  6E24               	movwf	i2c_readDataBlock@data^0,c
 19400  006EDC  6A25               	clrf	(i2c_readDataBlock@data+1)^0,c
 19401  006EDE  0E00               	movlw	0
 19402  006EE0  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 19403  006EE2  0E10               	movlw	16
 19404  006EE4  6E26               	movwf	i2c_readDataBlock@len^0,c
 19405  006EE6  0E50               	movlw	80
 19406  006EE8  EC45  F044         	call	_i2c_readDataBlock
 19407                           
 19408                           ;controlMemory_MC50.c: 174:     i2c_readDataBlock(0x50, (uint16_t)(pageMemoryCounters * 
      +                          16),(char*)&var_sys_NVM.positionRemotesFull,16);
 19409  006EEC  0E00               	movlw	0
 19410  006EEE  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 19411  006EF0  0E20               	movlw	32
 19412  006EF2  6E22               	movwf	i2c_readDataBlock@reg^0,c
 19413  006EF4  0EB8               	movlw	low (_var_sys_NVM+32)
 19414  006EF6  6E24               	movwf	i2c_readDataBlock@data^0,c
 19415  006EF8  6A25               	clrf	(i2c_readDataBlock@data+1)^0,c
 19416  006EFA  0E00               	movlw	0
 19417  006EFC  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 19418  006EFE  0E10               	movlw	16
 19419  006F00  6E26               	movwf	i2c_readDataBlock@len^0,c
 19420  006F02  0E50               	movlw	80
 19421  006F04  EC45  F044         	call	_i2c_readDataBlock
 19422                           
 19423                           ;controlMemory_MC50.c: 175:     i2c_readDataBlock(0x50, (uint16_t)(pageMemoryLearningVar
      +                          s * 16),(char*)&var_sys_NVM.learningCurrentNormalClose, 16);
 19424  006F08  0E00               	movlw	0
 19425  006F0A  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 19426  006F0C  0E30               	movlw	48
 19427  006F0E  6E22               	movwf	i2c_readDataBlock@reg^0,c
 19428  006F10  0EC8               	movlw	low (_var_sys_NVM+48)
 19429  006F12  6E24               	movwf	i2c_readDataBlock@data^0,c
 19430  006F14  6A25               	clrf	(i2c_readDataBlock@data+1)^0,c
 19431  006F16  0E00               	movlw	0
 19432  006F18  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 19433  006F1A  0E10               	movlw	16
 19434  006F1C  6E26               	movwf	i2c_readDataBlock@len^0,c
 19435  006F1E  0E50               	movlw	80
 19436  006F20  EC45  F044         	call	_i2c_readDataBlock
 19437                           
 19438                           ;controlMemory_MC50.c: 178:     checkNVM_VarSystem();
 19439  006F24  EC82  F02F         	call	_checkNVM_VarSystem	;wreg free
 19440                           
 19441                           ;controlMemory_MC50.c: 180:     var_sys.actualCounterMoves=var_sys_NVM.counterMoves;
 19442  006F28  C0BA  F13C         	movff	_var_sys_NVM+34,_var_sys+60	;volatile
 19443  006F2C  C0BB  F13D         	movff	_var_sys_NVM+35,_var_sys+61	;volatile
 19444  006F30  C0BC  F13E         	movff	_var_sys_NVM+36,_var_sys+62	;volatile
 19445  006F34  C0BD  F13F         	movff	_var_sys_NVM+37,_var_sys+63	;volatile
 19446  006F38  0012               	return		;funcret
 19447  006F3A                     __end_of_loadNVM_VarSystem:
 19448                           	callstack 0
 19449                           
 19450 ;; *************** function _checkNVM_VarSystem *****************
 19451 ;; Defined at:
 19452 ;;		line 326 in file "controlMemory_MC50.c"
 19453 ;; Parameters:    Size  Location     Type
 19454 ;;		None
 19455 ;; Auto vars:     Size  Location     Type
 19456 ;;  saveParam       1   57[COMRAM] unsigned char 
 19457 ;; Return value:  Size  Location     Type
 19458 ;;                  1    wreg      void 
 19459 ;; Registers used:
 19460 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19461 ;; Tracked objects:
 19462 ;;		On entry : 0/2
 19463 ;;		On exit  : 0/0
 19464 ;;		Unchanged: 0/0
 19465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19466 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19467 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19469 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19470 ;;Total ram usage:        1 bytes
 19471 ;; Hardware stack levels used: 1
 19472 ;; Hardware stack levels required when called: 14
 19473 ;; This function calls:
 19474 ;;		_SaveNVM_VarSystem
 19475 ;; This function is called by:
 19476 ;;		_loadNVM_VarSystem
 19477 ;; This function uses a non-reentrant model
 19478 ;;
 19479                           
 19480                           	psect	text70
 19481  005F04                     __ptext70:
 19482                           	callstack 0
 19483  005F04                     _checkNVM_VarSystem:
 19484                           	callstack 15
 19485                           
 19486                           ;controlMemory_MC50.c: 328:     char saveParam;;controlMemory_MC50.c: 331:     saveParam
      +                           = 0;
 19487                           
 19488                           ;incstack = 0
 19489  005F04  0E00               	movlw	0
 19490  005F06  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19491                           
 19492                           ;controlMemory_MC50.c: 339:     if ( var_sys_NVM.decelarationOpen>45 )
 19493  005F08  0E2D               	movlw	45
 19494  005F0A  0100               	movlb	0	; () banked
 19495  005F0C  6598               	cpfsgt	_var_sys_NVM& (0+255),b	;volatile
 19496  005F0E  D004               	goto	l22735
 19497                           
 19498                           ; BSR set to: 0
 19499                           ;controlMemory_MC50.c: 340:     {;controlMemory_MC50.c: 342:         var_sys_NVM.decelar
      +                          ationOpen = 3;
 19500  005F10  0E03               	movlw	3
 19501  005F12  6F98               	movwf	_var_sys_NVM& (0+255),b	;volatile
 19502                           
 19503                           ;controlMemory_MC50.c: 343:         saveParam=1;
 19504  005F14  0E01               	movlw	1
 19505  005F16  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19506  005F18                     l22735:
 19507                           
 19508                           ; BSR set to: 0
 19509                           ;controlMemory_MC50.c: 346:     if ( var_sys_NVM.decelarationClose>45 )
 19510  005F18  0E2D               	movlw	45
 19511  005F1A  6599               	cpfsgt	(_var_sys_NVM+1)& (0+255),b	;volatile
 19512  005F1C  D004               	goto	l1495
 19513                           
 19514                           ; BSR set to: 0
 19515                           ;controlMemory_MC50.c: 347:     {;controlMemory_MC50.c: 349:         var_sys_NVM.decelar
      +                          ationClose = 3;
 19516  005F1E  0E03               	movlw	3
 19517  005F20  6F99               	movwf	(_var_sys_NVM+1)& (0+255),b	;volatile
 19518                           
 19519                           ;controlMemory_MC50.c: 350:         saveParam=1;
 19520  005F22  0E01               	movlw	1
 19521  005F24  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19522  005F26                     l1495:
 19523                           
 19524                           ; BSR set to: 0
 19525                           ;controlMemory_MC50.c: 353:     if ( (var_sys_NVM.motorPower<1) || (var_sys_NVM.motorPow
      +                          er>9) )
 19526  005F26  519A               	movf	(_var_sys_NVM+2)& (0+255),w,b	;volatile
 19527  005F28  B4D8               	btfsc	status,2,c
 19528  005F2A  D003               	goto	u26250
 19529                           
 19530                           ; BSR set to: 0
 19531  005F2C  0E09               	movlw	9
 19532  005F2E  659A               	cpfsgt	(_var_sys_NVM+2)& (0+255),b	;volatile
 19533  005F30  D004               	goto	l22743
 19534  005F32                     u26250:
 19535                           
 19536                           ; BSR set to: 0
 19537                           ;controlMemory_MC50.c: 354:     {;controlMemory_MC50.c: 356:         var_sys_NVM.motorPo
      +                          wer = 9;
 19538  005F32  0E09               	movlw	9
 19539  005F34  6F9A               	movwf	(_var_sys_NVM+2)& (0+255),b	;volatile
 19540                           
 19541                           ;controlMemory_MC50.c: 357:         saveParam=1;
 19542  005F36  0E01               	movlw	1
 19543  005F38  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19544  005F3A                     l22743:
 19545                           
 19546                           ; BSR set to: 0
 19547                           ;controlMemory_MC50.c: 360:     if ( var_sys_NVM.motorSensitivity>9 )
 19548  005F3A  0E09               	movlw	9
 19549  005F3C  659B               	cpfsgt	(_var_sys_NVM+3)& (0+255),b	;volatile
 19550  005F3E  D004               	goto	l22747
 19551                           
 19552                           ; BSR set to: 0
 19553                           ;controlMemory_MC50.c: 361:     {;controlMemory_MC50.c: 363:         var_sys_NVM.motorSe
      +                          nsitivity = 0;
 19554  005F40  0E00               	movlw	0
 19555  005F42  6F9B               	movwf	(_var_sys_NVM+3)& (0+255),b	;volatile
 19556                           
 19557                           ;controlMemory_MC50.c: 364:         saveParam=1;
 19558  005F44  0E01               	movlw	1
 19559  005F46  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19560  005F48                     l22747:
 19561                           
 19562                           ; BSR set to: 0
 19563                           ;controlMemory_MC50.c: 367:     if ( var_sys_NVM.walkTime>99 )
 19564  005F48  0E63               	movlw	99
 19565  005F4A  659C               	cpfsgt	(_var_sys_NVM+4)& (0+255),b	;volatile
 19566  005F4C  D004               	goto	l22751
 19567                           
 19568                           ; BSR set to: 0
 19569                           ;controlMemory_MC50.c: 368:     {;controlMemory_MC50.c: 370:         var_sys_NVM.walkTim
      +                          e = 10;
 19570  005F4E  0E0A               	movlw	10
 19571  005F50  6F9C               	movwf	(_var_sys_NVM+4)& (0+255),b	;volatile
 19572                           
 19573                           ;controlMemory_MC50.c: 371:         saveParam=1;
 19574  005F52  0E01               	movlw	1
 19575  005F54  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19576  005F56                     l22751:
 19577                           
 19578                           ; BSR set to: 0
 19579                           ;controlMemory_MC50.c: 374:     if ( var_sys_NVM.autoTimeFullClose>99 )
 19580  005F56  0E63               	movlw	99
 19581  005F58  659D               	cpfsgt	(_var_sys_NVM+5)& (0+255),b	;volatile
 19582  005F5A  D004               	goto	l22755
 19583                           
 19584                           ; BSR set to: 0
 19585                           ;controlMemory_MC50.c: 375:     {;controlMemory_MC50.c: 377:         var_sys_NVM.autoTim
      +                          eFullClose = 0;
 19586  005F5C  0E00               	movlw	0
 19587  005F5E  6F9D               	movwf	(_var_sys_NVM+5)& (0+255),b	;volatile
 19588                           
 19589                           ;controlMemory_MC50.c: 378:         saveParam=1;
 19590  005F60  0E01               	movlw	1
 19591  005F62  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19592  005F64                     l22755:
 19593                           
 19594                           ; BSR set to: 0
 19595                           ;controlMemory_MC50.c: 381:     if ( var_sys_NVM.autoTimeWalkClose>99 )
 19596  005F64  0E63               	movlw	99
 19597  005F66  659E               	cpfsgt	(_var_sys_NVM+6)& (0+255),b	;volatile
 19598  005F68  D004               	goto	l22759
 19599                           
 19600                           ; BSR set to: 0
 19601                           ;controlMemory_MC50.c: 382:     {;controlMemory_MC50.c: 384:         var_sys_NVM.autoTim
      +                          eWalkClose = 0;
 19602  005F6A  0E00               	movlw	0
 19603  005F6C  6F9E               	movwf	(_var_sys_NVM+6)& (0+255),b	;volatile
 19604                           
 19605                           ;controlMemory_MC50.c: 385:         saveParam=1;
 19606  005F6E  0E01               	movlw	1
 19607  005F70  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19608  005F72                     l22759:
 19609                           
 19610                           ; BSR set to: 0
 19611                           ;controlMemory_MC50.c: 388:     if ( var_sys_NVM.photoCellIsON>1 )
 19612  005F72  0E01               	movlw	1
 19613  005F74  659F               	cpfsgt	(_var_sys_NVM+7)& (0+255),b	;volatile
 19614  005F76  D004               	goto	l22763
 19615                           
 19616                           ; BSR set to: 0
 19617                           ;controlMemory_MC50.c: 389:     {;controlMemory_MC50.c: 391:         var_sys_NVM.photoCe
      +                          llIsON = 0;
 19618  005F78  0E00               	movlw	0
 19619  005F7A  6F9F               	movwf	(_var_sys_NVM+7)& (0+255),b	;volatile
 19620                           
 19621                           ;controlMemory_MC50.c: 392:         saveParam=1;
 19622  005F7C  0E01               	movlw	1
 19623  005F7E  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19624  005F80                     l22763:
 19625                           
 19626                           ; BSR set to: 0
 19627                           ;controlMemory_MC50.c: 395:     if ( var_sys_NVM.photoCellInOpen>1 )
 19628  005F80  0E01               	movlw	1
 19629  005F82  65A0               	cpfsgt	(_var_sys_NVM+8)& (0+255),b	;volatile
 19630  005F84  D004               	goto	l22767
 19631                           
 19632                           ; BSR set to: 0
 19633                           ;controlMemory_MC50.c: 396:     {;controlMemory_MC50.c: 398:         var_sys_NVM.photoCe
      +                          llInOpen = 0;
 19634  005F86  0E00               	movlw	0
 19635  005F88  6FA0               	movwf	(_var_sys_NVM+8)& (0+255),b	;volatile
 19636                           
 19637                           ;controlMemory_MC50.c: 399:         saveParam=1;
 19638  005F8A  0E01               	movlw	1
 19639  005F8C  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19640  005F8E                     l22767:
 19641                           
 19642                           ; BSR set to: 0
 19643                           ;controlMemory_MC50.c: 402:     if ( var_sys_NVM.securityBandIsON>1 )
 19644  005F8E  0E01               	movlw	1
 19645  005F90  65A1               	cpfsgt	(_var_sys_NVM+9)& (0+255),b	;volatile
 19646  005F92  D004               	goto	l22771
 19647                           
 19648                           ; BSR set to: 0
 19649                           ;controlMemory_MC50.c: 403:     {;controlMemory_MC50.c: 405:         var_sys_NVM.securit
      +                          yBandIsON = 0 ;
 19650  005F94  0E00               	movlw	0
 19651  005F96  6FA1               	movwf	(_var_sys_NVM+9)& (0+255),b	;volatile
 19652                           
 19653                           ;controlMemory_MC50.c: 406:         saveParam=1;
 19654  005F98  0E01               	movlw	1
 19655  005F9A  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19656  005F9C                     l22771:
 19657                           
 19658                           ; BSR set to: 0
 19659                           ;controlMemory_MC50.c: 409:     if ( var_sys_NVM.securityBandType>1 )
 19660  005F9C  0E01               	movlw	1
 19661  005F9E  65A2               	cpfsgt	(_var_sys_NVM+10)& (0+255),b	;volatile
 19662  005FA0  D004               	goto	l22775
 19663                           
 19664                           ; BSR set to: 0
 19665                           ;controlMemory_MC50.c: 410:     {;controlMemory_MC50.c: 412:         var_sys_NVM.securit
      +                          yBandType = 1;
 19666  005FA2  0E01               	movlw	1
 19667  005FA4  6FA2               	movwf	(_var_sys_NVM+10)& (0+255),b	;volatile
 19668                           
 19669                           ;controlMemory_MC50.c: 413:         saveParam=1;
 19670  005FA6  0E01               	movlw	1
 19671  005FA8  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19672  005FAA                     l22775:
 19673                           
 19674                           ; BSR set to: 0
 19675                           ;controlMemory_MC50.c: 416:     if ( var_sys_NVM.securityBandInOpen>1 )
 19676  005FAA  0E01               	movlw	1
 19677  005FAC  65A3               	cpfsgt	(_var_sys_NVM+11)& (0+255),b	;volatile
 19678  005FAE  D004               	goto	l22779
 19679                           
 19680                           ; BSR set to: 0
 19681                           ;controlMemory_MC50.c: 417:     {;controlMemory_MC50.c: 419:         var_sys_NVM.securit
      +                          yBandInOpen = 0;
 19682  005FB0  0E00               	movlw	0
 19683  005FB2  6FA3               	movwf	(_var_sys_NVM+11)& (0+255),b	;volatile
 19684                           
 19685                           ;controlMemory_MC50.c: 420:         saveParam=1;
 19686  005FB4  0E01               	movlw	1
 19687  005FB6  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19688  005FB8                     l22779:
 19689                           
 19690                           ; BSR set to: 0
 19691                           ;controlMemory_MC50.c: 423:     if ( var_sys_NVM.operationMode>2 )
 19692  005FB8  0E02               	movlw	2
 19693  005FBA  65A4               	cpfsgt	(_var_sys_NVM+12)& (0+255),b	;volatile
 19694  005FBC  D004               	goto	l22783
 19695                           
 19696                           ; BSR set to: 0
 19697                           ;controlMemory_MC50.c: 424:     {;controlMemory_MC50.c: 426:         var_sys_NVM.operati
      +                          onMode = 0;
 19698  005FBE  0E00               	movlw	0
 19699  005FC0  6FA4               	movwf	(_var_sys_NVM+12)& (0+255),b	;volatile
 19700                           
 19701                           ;controlMemory_MC50.c: 427:         saveParam=1;
 19702  005FC2  0E01               	movlw	1
 19703  005FC4  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19704  005FC6                     l22783:
 19705                           
 19706                           ; BSR set to: 0
 19707                           ;controlMemory_MC50.c: 430:     if ( var_sys_NVM.flashLightMode>3 )
 19708  005FC6  0E03               	movlw	3
 19709  005FC8  65A5               	cpfsgt	(_var_sys_NVM+13)& (0+255),b	;volatile
 19710  005FCA  D004               	goto	l22787
 19711                           
 19712                           ; BSR set to: 0
 19713                           ;controlMemory_MC50.c: 431:     {;controlMemory_MC50.c: 433:         var_sys_NVM.flashLi
      +                          ghtMode = 0;
 19714  005FCC  0E00               	movlw	0
 19715  005FCE  6FA5               	movwf	(_var_sys_NVM+13)& (0+255),b	;volatile
 19716                           
 19717                           ;controlMemory_MC50.c: 434:         saveParam=1;
 19718  005FD0  0E01               	movlw	1
 19719  005FD2  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19720  005FD4                     l22787:
 19721                           
 19722                           ; BSR set to: 0
 19723                           ;controlMemory_MC50.c: 437:     if ( var_sys_NVM.programmingDistance>1 )
 19724  005FD4  0E01               	movlw	1
 19725  005FD6  65A6               	cpfsgt	(_var_sys_NVM+14)& (0+255),b	;volatile
 19726  005FD8  D004               	goto	l22791
 19727                           
 19728                           ; BSR set to: 0
 19729                           ;controlMemory_MC50.c: 438:     {;controlMemory_MC50.c: 440:         var_sys_NVM.program
      +                          mingDistance = 0;
 19730  005FDA  0E00               	movlw	0
 19731  005FDC  6FA6               	movwf	(_var_sys_NVM+14)& (0+255),b	;volatile
 19732                           
 19733                           ;controlMemory_MC50.c: 441:         saveParam=1;
 19734  005FDE  0E01               	movlw	1
 19735  005FE0  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19736  005FE2                     l22791:
 19737                           
 19738                           ; BSR set to: 0
 19739                           ;controlMemory_MC50.c: 444:     if ( var_sys_NVM.decelarationSensivity>9 )
 19740  005FE2  0E09               	movlw	9
 19741  005FE4  65A7               	cpfsgt	(_var_sys_NVM+15)& (0+255),b	;volatile
 19742  005FE6  D004               	goto	l22795
 19743                           
 19744                           ; BSR set to: 0
 19745                           ;controlMemory_MC50.c: 445:     {;controlMemory_MC50.c: 447:         var_sys_NVM.decelar
      +                          ationSensivity = 0;
 19746  005FE8  0E00               	movlw	0
 19747  005FEA  6FA7               	movwf	(_var_sys_NVM+15)& (0+255),b	;volatile
 19748                           
 19749                           ;controlMemory_MC50.c: 448:         saveParam=1;
 19750  005FEC  0E01               	movlw	1
 19751  005FEE  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19752  005FF0                     l22795:
 19753                           
 19754                           ; BSR set to: 0
 19755                           ;controlMemory_MC50.c: 453:     if ( var_sys_NVM.homemPresente>2 )
 19756  005FF0  0E02               	movlw	2
 19757  005FF2  65A8               	cpfsgt	(_var_sys_NVM+16)& (0+255),b	;volatile
 19758  005FF4  D004               	goto	l22799
 19759                           
 19760                           ; BSR set to: 0
 19761                           ;controlMemory_MC50.c: 454:     {;controlMemory_MC50.c: 456:         var_sys_NVM.homemPr
      +                          esente = 0;
 19762  005FF6  0E00               	movlw	0
 19763  005FF8  6FA8               	movwf	(_var_sys_NVM+16)& (0+255),b	;volatile
 19764                           
 19765                           ;controlMemory_MC50.c: 457:         saveParam=1;
 19766  005FFA  0E01               	movlw	1
 19767  005FFC  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19768  005FFE                     l22799:
 19769                           
 19770                           ; BSR set to: 0
 19771                           ;controlMemory_MC50.c: 460:     if ( var_sys_NVM.logicDigital>1 )
 19772  005FFE  0E01               	movlw	1
 19773  006000  65A9               	cpfsgt	(_var_sys_NVM+17)& (0+255),b	;volatile
 19774  006002  D004               	goto	l22803
 19775                           
 19776                           ; BSR set to: 0
 19777                           ;controlMemory_MC50.c: 461:     {;controlMemory_MC50.c: 463:         var_sys_NVM.logicDi
      +                          gital = 0;
 19778  006004  0E00               	movlw	0
 19779  006006  6FA9               	movwf	(_var_sys_NVM+17)& (0+255),b	;volatile
 19780                           
 19781                           ;controlMemory_MC50.c: 464:         saveParam=1;
 19782  006008  0E01               	movlw	1
 19783  00600A  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19784  00600C                     l22803:
 19785                           
 19786                           ; BSR set to: 0
 19787                           ;controlMemory_MC50.c: 467:     if ( var_sys_NVM.softStart>9 )
 19788  00600C  0E09               	movlw	9
 19789  00600E  65AA               	cpfsgt	(_var_sys_NVM+18)& (0+255),b	;volatile
 19790  006010  D004               	goto	l22807
 19791                           
 19792                           ; BSR set to: 0
 19793                           ;controlMemory_MC50.c: 468:     {;controlMemory_MC50.c: 470:         var_sys_NVM.softSta
      +                          rt = 0;
 19794  006012  0E00               	movlw	0
 19795  006014  6FAA               	movwf	(_var_sys_NVM+18)& (0+255),b	;volatile
 19796                           
 19797                           ;controlMemory_MC50.c: 471:         saveParam=1;
 19798  006016  0E01               	movlw	1
 19799  006018  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19800  00601A                     l22807:
 19801                           
 19802                           ; BSR set to: 0
 19803                           ;controlMemory_MC50.c: 475:     if ( var_sys_NVM.ligthTime>99 )
 19804  00601A  0E63               	movlw	99
 19805  00601C  65AC               	cpfsgt	(_var_sys_NVM+20)& (0+255),b	;volatile
 19806  00601E  D004               	goto	l22811
 19807                           
 19808                           ; BSR set to: 0
 19809                           ;controlMemory_MC50.c: 476:     {;controlMemory_MC50.c: 478:         var_sys_NVM.ligthTi
      +                          me = 3;
 19810  006020  0E03               	movlw	3
 19811  006022  6FAC               	movwf	(_var_sys_NVM+20)& (0+255),b	;volatile
 19812                           
 19813                           ;controlMemory_MC50.c: 479:         saveParam=1;
 19814  006024  0E01               	movlw	1
 19815  006026  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19816  006028                     l22811:
 19817                           
 19818                           ; BSR set to: 0
 19819                           ;controlMemory_MC50.c: 482:     if ( var_sys_NVM.folow_me>9 )
 19820  006028  0E09               	movlw	9
 19821  00602A  65AD               	cpfsgt	(_var_sys_NVM+21)& (0+255),b	;volatile
 19822  00602C  D004               	goto	l22815
 19823                           
 19824                           ; BSR set to: 0
 19825                           ;controlMemory_MC50.c: 483:     {;controlMemory_MC50.c: 485:         var_sys_NVM.folow_m
      +                          e = 0;
 19826  00602E  0E00               	movlw	0
 19827  006030  6FAD               	movwf	(_var_sys_NVM+21)& (0+255),b	;volatile
 19828                           
 19829                           ;controlMemory_MC50.c: 486:         saveParam=1;
 19830  006032  0E01               	movlw	1
 19831  006034  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19832  006036                     l22815:
 19833                           
 19834                           ; BSR set to: 0
 19835                           ;controlMemory_MC50.c: 491:     if ( var_sys_NVM.electricBrake>1 )
 19836  006036  0E01               	movlw	1
 19837  006038  65AF               	cpfsgt	(_var_sys_NVM+23)& (0+255),b	;volatile
 19838  00603A  D004               	goto	l1517
 19839                           
 19840                           ; BSR set to: 0
 19841                           ;controlMemory_MC50.c: 492:     {;controlMemory_MC50.c: 494:         var_sys_NVM.electri
      +                          cBrake = 0;
 19842  00603C  0E00               	movlw	0
 19843  00603E  6FAF               	movwf	(_var_sys_NVM+23)& (0+255),b	;volatile
 19844                           
 19845                           ;controlMemory_MC50.c: 495:         saveParam=1;
 19846  006040  0E01               	movlw	1
 19847  006042  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19848  006044                     l1517:
 19849                           
 19850                           ; BSR set to: 0
 19851                           ;controlMemory_MC50.c: 498:     if ( (var_sys_NVM.velocityDecelaration<1) || (var_sys_NV
      +                          M.velocityDecelaration>9) )
 19852  006044  51B0               	movf	(_var_sys_NVM+24)& (0+255),w,b	;volatile
 19853  006046  B4D8               	btfsc	status,2,c
 19854  006048  D003               	goto	u26460
 19855                           
 19856                           ; BSR set to: 0
 19857  00604A  0E09               	movlw	9
 19858  00604C  65B0               	cpfsgt	(_var_sys_NVM+24)& (0+255),b	;volatile
 19859  00604E  D004               	goto	l22823
 19860  006050                     u26460:
 19861                           
 19862                           ; BSR set to: 0
 19863                           ;controlMemory_MC50.c: 499:     {;controlMemory_MC50.c: 501:         var_sys_NVM.velocit
      +                          yDecelaration = 5;
 19864  006050  0E05               	movlw	5
 19865  006052  6FB0               	movwf	(_var_sys_NVM+24)& (0+255),b	;volatile
 19866                           
 19867                           ;controlMemory_MC50.c: 502:         saveParam=1;
 19868  006054  0E01               	movlw	1
 19869  006056  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19870  006058                     l22823:
 19871                           
 19872                           ; BSR set to: 0
 19873                           ;controlMemory_MC50.c: 505:     if ( var_sys_NVM.flashRGBMode>3 )
 19874  006058  0E03               	movlw	3
 19875  00605A  65B1               	cpfsgt	(_var_sys_NVM+25)& (0+255),b	;volatile
 19876  00605C  D004               	goto	l22827
 19877                           
 19878                           ; BSR set to: 0
 19879                           ;controlMemory_MC50.c: 506:     {;controlMemory_MC50.c: 508:         var_sys_NVM.flashRG
      +                          BMode = 3;
 19880  00605E  0E03               	movlw	3
 19881  006060  6FB1               	movwf	(_var_sys_NVM+25)& (0+255),b	;volatile
 19882                           
 19883                           ;controlMemory_MC50.c: 509:         saveParam=1;
 19884  006062  0E01               	movlw	1
 19885  006064  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19886  006066                     l22827:
 19887                           
 19888                           ; BSR set to: 0
 19889                           ;controlMemory_MC50.c: 511:         if ( var_sys_NVM.Stopboton > 1 )
 19890  006066  0E01               	movlw	1
 19891  006068  65AE               	cpfsgt	(_var_sys_NVM+22)& (0+255),b	;volatile
 19892  00606A  D004               	goto	l22831
 19893                           
 19894                           ; BSR set to: 0
 19895                           ;controlMemory_MC50.c: 512:     {;controlMemory_MC50.c: 514:         var_sys_NVM.Stopbot
      +                          on = 0 ;
 19896  00606C  0E00               	movlw	0
 19897  00606E  6FAE               	movwf	(_var_sys_NVM+22)& (0+255),b	;volatile
 19898                           
 19899                           ;controlMemory_MC50.c: 515:         saveParam=1;
 19900  006070  0E01               	movlw	1
 19901  006072  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19902  006074                     l22831:
 19903                           
 19904                           ; BSR set to: 0
 19905                           ;controlMemory_MC50.c: 517:         if ( var_sys_NVM.Direction_motor>1 )
 19906  006074  0E01               	movlw	1
 19907  006076  65B3               	cpfsgt	(_var_sys_NVM+27)& (0+255),b	;volatile
 19908  006078  D004               	goto	l22835
 19909                           
 19910                           ; BSR set to: 0
 19911                           ;controlMemory_MC50.c: 518:     {;controlMemory_MC50.c: 520:         var_sys_NVM.Directi
      +                          on_motor = 1;
 19912  00607A  0E01               	movlw	1
 19913  00607C  6FB3               	movwf	(_var_sys_NVM+27)& (0+255),b	;volatile
 19914                           
 19915                           ;controlMemory_MC50.c: 521:         saveParam=1;
 19916  00607E  0E01               	movlw	1
 19917  006080  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19918  006082                     l22835:
 19919                           
 19920                           ; BSR set to: 0
 19921                           ;controlMemory_MC50.c: 523:         if ( var_sys_NVM.softstop>9 )
 19922  006082  0E09               	movlw	9
 19923  006084  65AB               	cpfsgt	(_var_sys_NVM+19)& (0+255),b	;volatile
 19924  006086  D004               	goto	l1524
 19925                           
 19926                           ; BSR set to: 0
 19927                           ;controlMemory_MC50.c: 524:     {;controlMemory_MC50.c: 526:         var_sys_NVM.softsto
      +                          p = 0;
 19928  006088  0E00               	movlw	0
 19929  00608A  6FAB               	movwf	(_var_sys_NVM+19)& (0+255),b	;volatile
 19930                           
 19931                           ;controlMemory_MC50.c: 527:         saveParam=1;
 19932  00608C  0E01               	movlw	1
 19933  00608E  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19934  006090                     l1524:
 19935                           
 19936                           ; BSR set to: 0
 19937                           ;controlMemory_MC50.c: 552:     if ( saveParam != 0 )
 19938  006090  503A               	movf	checkNVM_VarSystem@saveParam^0,w,c
 19939  006092  B4D8               	btfsc	status,2,c
 19940  006094  0012               	return	
 19941                           
 19942                           ; BSR set to: 0
 19943                           ;controlMemory_MC50.c: 553:     {;controlMemory_MC50.c: 554:         SaveNVM_VarSystem(p
      +                          ageMemoryP);
 19944  006096  0E00               	movlw	0
 19945  006098  ECDB  F04A         	call	_SaveNVM_VarSystem
 19946                           
 19947                           ;controlMemory_MC50.c: 555:         SaveNVM_VarSystem(pageMemoryE);
 19948  00609C  0E01               	movlw	1
 19949  00609E  ECDB  F04A         	call	_SaveNVM_VarSystem
 19950  0060A2  0012               	return		;funcret
 19951  0060A4                     __end_of_checkNVM_VarSystem:
 19952                           	callstack 0
 19953                           
 19954 ;; *************** function _ResetDefaultMemory *****************
 19955 ;; Defined at:
 19956 ;;		line 198 in file "controlMemory_MC50.c"
 19957 ;; Parameters:    Size  Location     Type
 19958 ;;  type            1    wreg     unsigned char 
 19959 ;; Auto vars:     Size  Location     Type
 19960 ;;  type            1   57[COMRAM] unsigned char 
 19961 ;; Return value:  Size  Location     Type
 19962 ;;                  1    wreg      void 
 19963 ;; Registers used:
 19964 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19965 ;; Tracked objects:
 19966 ;;		On entry : 31/0
 19967 ;;		On exit  : 0/0
 19968 ;;		Unchanged: 0/0
 19969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19970 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19971 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19973 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19974 ;;Total ram usage:        1 bytes
 19975 ;; Hardware stack levels used: 1
 19976 ;; Hardware stack levels required when called: 14
 19977 ;; This function calls:
 19978 ;;		_SaveNVM_VarSystem
 19979 ;; This function is called by:
 19980 ;;		_loadNVM_VarSystem
 19981 ;;		_sm_execute_menuConfiguration
 19982 ;; This function uses a non-reentrant model
 19983 ;;
 19984                           
 19985                           	psect	text71
 19986  00670A                     __ptext71:
 19987                           	callstack 0
 19988  00670A                     _ResetDefaultMemory:
 19989                           	callstack 14
 19990                           
 19991                           ;incstack = 0
 19992                           ;ResetDefaultMemory@type stored from wreg
 19993  00670A  6E3A               	movwf	ResetDefaultMemory@type^0,c
 19994                           
 19995                           ;controlMemory_MC50.c: 198: void ResetDefaultMemory(unsigned char type);controlMemory_MC
      +                          50.c: 199: {;controlMemory_MC50.c: 202:     var_sys_NVM.decelarationOpen = 3;
 19996  00670C  0E03               	movlw	3
 19997  00670E  0100               	movlb	0	; () banked
 19998  006710  6F98               	movwf	_var_sys_NVM& (0+255),b	;volatile
 19999                           
 20000                           ;controlMemory_MC50.c: 203:     var_sys_NVM.motorPower = 9;
 20001  006712  0E09               	movlw	9
 20002  006714  6F9A               	movwf	(_var_sys_NVM+2)& (0+255),b	;volatile
 20003                           
 20004                           ;controlMemory_MC50.c: 204:     var_sys_NVM.decelarationClose = 3;
 20005  006716  0E03               	movlw	3
 20006  006718  6F99               	movwf	(_var_sys_NVM+1)& (0+255),b	;volatile
 20007                           
 20008                           ;controlMemory_MC50.c: 205:     var_sys_NVM.photoCellIsON = 0;
 20009  00671A  0E00               	movlw	0
 20010  00671C  6F9F               	movwf	(_var_sys_NVM+7)& (0+255),b	;volatile
 20011                           
 20012                           ;controlMemory_MC50.c: 206:     var_sys_NVM.photoCellInOpen = 0;
 20013  00671E  0E00               	movlw	0
 20014  006720  6FA0               	movwf	(_var_sys_NVM+8)& (0+255),b	;volatile
 20015                           
 20016                           ;controlMemory_MC50.c: 207:     var_sys_NVM.securityBandIsON = 0 ;
 20017  006722  0E00               	movlw	0
 20018  006724  6FA1               	movwf	(_var_sys_NVM+9)& (0+255),b	;volatile
 20019                           
 20020                           ;controlMemory_MC50.c: 208:     var_sys_NVM.securityBandType = 1;
 20021  006726  0E01               	movlw	1
 20022  006728  6FA2               	movwf	(_var_sys_NVM+10)& (0+255),b	;volatile
 20023                           
 20024                           ;controlMemory_MC50.c: 209:     var_sys_NVM.securityBandInOpen = 0;
 20025  00672A  0E00               	movlw	0
 20026  00672C  6FA3               	movwf	(_var_sys_NVM+11)& (0+255),b	;volatile
 20027                           
 20028                           ;controlMemory_MC50.c: 210:     var_sys_NVM.flashLightMode = 0;
 20029  00672E  0E00               	movlw	0
 20030  006730  6FA5               	movwf	(_var_sys_NVM+13)& (0+255),b	;volatile
 20031                           
 20032                           ;controlMemory_MC50.c: 211:     var_sys_NVM.programmingDistance = 0;
 20033  006732  0E00               	movlw	0
 20034  006734  6FA6               	movwf	(_var_sys_NVM+14)& (0+255),b	;volatile
 20035                           
 20036                           ;controlMemory_MC50.c: 212:     var_sys_NVM.decelarationSensivity = 0;
 20037  006736  0E00               	movlw	0
 20038  006738  6FA7               	movwf	(_var_sys_NVM+15)& (0+255),b	;volatile
 20039                           
 20040                           ;controlMemory_MC50.c: 213:     var_sys_NVM.homemPresente = 0;
 20041  00673A  0E00               	movlw	0
 20042  00673C  6FA8               	movwf	(_var_sys_NVM+16)& (0+255),b	;volatile
 20043                           
 20044                           ;controlMemory_MC50.c: 214:     var_sys_NVM.autoTimeWalkClose = 0;
 20045  00673E  0E00               	movlw	0
 20046  006740  6F9E               	movwf	(_var_sys_NVM+6)& (0+255),b	;volatile
 20047                           
 20048                           ;controlMemory_MC50.c: 215:     var_sys_NVM.ligthTime = 3;
 20049  006742  0E03               	movlw	3
 20050  006744  6FAC               	movwf	(_var_sys_NVM+20)& (0+255),b	;volatile
 20051                           
 20052                           ;controlMemory_MC50.c: 216:     var_sys_NVM.folow_me = 0;
 20053  006746  0E00               	movlw	0
 20054  006748  6FAD               	movwf	(_var_sys_NVM+21)& (0+255),b	;volatile
 20055                           
 20056                           ;controlMemory_MC50.c: 217:     var_sys_NVM.electricBrake = 0;
 20057  00674A  0E00               	movlw	0
 20058  00674C  6FAF               	movwf	(_var_sys_NVM+23)& (0+255),b	;volatile
 20059                           
 20060                           ;controlMemory_MC50.c: 218:     var_sys_NVM.autoTimeWalkClose = 0;
 20061  00674E  0E00               	movlw	0
 20062  006750  6F9E               	movwf	(_var_sys_NVM+6)& (0+255),b	;volatile
 20063                           
 20064                           ;controlMemory_MC50.c: 219:     var_sys_NVM.Direction_motor = 1 ;
 20065  006752  0E01               	movlw	1
 20066  006754  6FB3               	movwf	(_var_sys_NVM+27)& (0+255),b	;volatile
 20067                           
 20068                           ; BSR set to: 0
 20069                           ;controlMemory_MC50.c: 222:     if (type == SC){
 20070  006756  503A               	movf	ResetDefaultMemory@type^0,w,c
 20071  006758  A4D8               	btfss	status,2,c
 20072  00675A  D014               	goto	l21231
 20073                           
 20074                           ; BSR set to: 0
 20075                           ;controlMemory_MC50.c: 224:         var_sys_NVM.motorSensitivity = 0;
 20076  00675C  0E00               	movlw	0
 20077  00675E  6F9B               	movwf	(_var_sys_NVM+3)& (0+255),b	;volatile
 20078                           
 20079                           ;controlMemory_MC50.c: 225:         var_sys_NVM.logicDigital = 0;
 20080  006760  0E00               	movlw	0
 20081  006762  6FA9               	movwf	(_var_sys_NVM+17)& (0+255),b	;volatile
 20082                           
 20083                           ;controlMemory_MC50.c: 226:         var_sys_NVM.Stopboton = 0;
 20084  006764  0E00               	movlw	0
 20085  006766  6FAE               	movwf	(_var_sys_NVM+22)& (0+255),b	;volatile
 20086                           
 20087                           ;controlMemory_MC50.c: 227:         var_sys_NVM.autoTimeFullClose = 0;
 20088  006768  0E00               	movlw	0
 20089  00676A  6F9D               	movwf	(_var_sys_NVM+5)& (0+255),b	;volatile
 20090                           
 20091                           ;controlMemory_MC50.c: 228:         var_sys_NVM.operationMode = 0;
 20092  00676C  0E00               	movlw	0
 20093  00676E  6FA4               	movwf	(_var_sys_NVM+12)& (0+255),b	;volatile
 20094                           
 20095                           ;controlMemory_MC50.c: 229:         var_sys_NVM.velocityDecelaration = 5;
 20096  006770  0E05               	movlw	5
 20097  006772  6FB0               	movwf	(_var_sys_NVM+24)& (0+255),b	;volatile
 20098                           
 20099                           ;controlMemory_MC50.c: 230:         var_sys_NVM.flashRGBMode = 3;
 20100  006774  0E03               	movlw	3
 20101  006776  6FB1               	movwf	(_var_sys_NVM+25)& (0+255),b	;volatile
 20102                           
 20103                           ;controlMemory_MC50.c: 231:         var_sys_NVM.softstop = 0;
 20104  006778  0E00               	movlw	0
 20105  00677A  6FAB               	movwf	(_var_sys_NVM+19)& (0+255),b	;volatile
 20106                           
 20107                           ;controlMemory_MC50.c: 232:         var_sys_NVM.softStart = 0;
 20108  00677C  0E00               	movlw	0
 20109  00677E  6FAA               	movwf	(_var_sys_NVM+18)& (0+255),b	;volatile
 20110                           
 20111                           ;controlMemory_MC50.c: 233:         var_sys_NVM.walkTime = 10;
 20112  006780  0E0A               	movlw	10
 20113  006782  D039               	goto	L82
 20114  006784                     l21231:
 20115                           
 20116                           ; BSR set to: 0
 20117  006784  043A               	decf	ResetDefaultMemory@type^0,w,c
 20118  006786  A4D8               	btfss	status,2,c
 20119  006788  D01B               	goto	l21235
 20120                           
 20121                           ; BSR set to: 0
 20122                           ;controlMemory_MC50.c: 237:         var_sys_NVM.decelarationClose = 4;
 20123  00678A  0E04               	movlw	4
 20124  00678C  6F99               	movwf	(_var_sys_NVM+1)& (0+255),b	;volatile
 20125                           
 20126                           ;controlMemory_MC50.c: 238:         var_sys_NVM.decelarationOpen = 4;
 20127  00678E  0E04               	movlw	4
 20128  006790  6F98               	movwf	_var_sys_NVM& (0+255),b	;volatile
 20129                           
 20130                           ;controlMemory_MC50.c: 239:         var_sys_NVM.motorSensitivity = 4;
 20131  006792  0E04               	movlw	4
 20132  006794  6F9B               	movwf	(_var_sys_NVM+3)& (0+255),b	;volatile
 20133                           
 20134                           ;controlMemory_MC50.c: 240:         var_sys_NVM.logicDigital = 1;
 20135  006796  0E01               	movlw	1
 20136  006798  6FA9               	movwf	(_var_sys_NVM+17)& (0+255),b	;volatile
 20137                           
 20138                           ;controlMemory_MC50.c: 241:         var_sys_NVM.Stopboton = 1;
 20139  00679A  0E01               	movlw	1
 20140  00679C  6FAE               	movwf	(_var_sys_NVM+22)& (0+255),b	;volatile
 20141                           
 20142                           ;controlMemory_MC50.c: 242:         var_sys_NVM.autoTimeFullClose = 0;
 20143  00679E  0E00               	movlw	0
 20144  0067A0  6F9D               	movwf	(_var_sys_NVM+5)& (0+255),b	;volatile
 20145                           
 20146                           ;controlMemory_MC50.c: 243:         var_sys_NVM.operationMode = 0;
 20147  0067A2  0E00               	movlw	0
 20148  0067A4  6FA4               	movwf	(_var_sys_NVM+12)& (0+255),b	;volatile
 20149                           
 20150                           ;controlMemory_MC50.c: 244:         var_sys_NVM.velocityDecelaration = 5;
 20151  0067A6  0E05               	movlw	5
 20152  0067A8  6FB0               	movwf	(_var_sys_NVM+24)& (0+255),b	;volatile
 20153                           
 20154                           ;controlMemory_MC50.c: 245:         var_sys_NVM.flashRGBMode = 3;
 20155  0067AA  0E03               	movlw	3
 20156  0067AC  6FB1               	movwf	(_var_sys_NVM+25)& (0+255),b	;volatile
 20157                           
 20158                           ;controlMemory_MC50.c: 246:         var_sys_NVM.softstop = 0;
 20159  0067AE  0E00               	movlw	0
 20160  0067B0  6FAB               	movwf	(_var_sys_NVM+19)& (0+255),b	;volatile
 20161                           
 20162                           ;controlMemory_MC50.c: 247:         var_sys_NVM.softStart = 5;
 20163  0067B2  0E05               	movlw	5
 20164  0067B4  6FAA               	movwf	(_var_sys_NVM+18)& (0+255),b	;volatile
 20165                           
 20166                           ;controlMemory_MC50.c: 248:         var_sys_NVM.walkTime = 0;
 20167  0067B6  0E00               	movlw	0
 20168  0067B8  6F9C               	movwf	(_var_sys_NVM+4)& (0+255),b	;volatile
 20169                           
 20170                           ;controlMemory_MC50.c: 249:         var_sys_NVM.Direction_motor = 0 ;
 20171  0067BA  0E00               	movlw	0
 20172  0067BC  6FB3               	movwf	(_var_sys_NVM+27)& (0+255),b	;volatile
 20173                           
 20174                           ;controlMemory_MC50.c: 251:     }
 20175  0067BE  D01C               	goto	l21239
 20176  0067C0                     l21235:
 20177                           
 20178                           ; BSR set to: 0
 20179  0067C0  0E02               	movlw	2
 20180  0067C2  183A               	xorwf	ResetDefaultMemory@type^0,w,c
 20181  0067C4  A4D8               	btfss	status,2,c
 20182  0067C6  D018               	goto	l21239
 20183                           
 20184                           ; BSR set to: 0
 20185                           ;controlMemory_MC50.c: 253:         var_sys_NVM.decelarationClose = 6;
 20186  0067C8  0E06               	movlw	6
 20187  0067CA  6F99               	movwf	(_var_sys_NVM+1)& (0+255),b	;volatile
 20188                           
 20189                           ;controlMemory_MC50.c: 254:         var_sys_NVM.decelarationOpen = 2;
 20190  0067CC  0E02               	movlw	2
 20191  0067CE  6F98               	movwf	_var_sys_NVM& (0+255),b	;volatile
 20192                           
 20193                           ;controlMemory_MC50.c: 255:         var_sys_NVM.motorSensitivity = 0;
 20194  0067D0  0E00               	movlw	0
 20195  0067D2  6F9B               	movwf	(_var_sys_NVM+3)& (0+255),b	;volatile
 20196                           
 20197                           ;controlMemory_MC50.c: 256:         var_sys_NVM.logicDigital = 0;
 20198  0067D4  0E00               	movlw	0
 20199  0067D6  6FA9               	movwf	(_var_sys_NVM+17)& (0+255),b	;volatile
 20200                           
 20201                           ;controlMemory_MC50.c: 257:         var_sys_NVM.Stopboton = 0;
 20202  0067D8  0E00               	movlw	0
 20203  0067DA  6FAE               	movwf	(_var_sys_NVM+22)& (0+255),b	;volatile
 20204                           
 20205                           ;controlMemory_MC50.c: 258:         var_sys_NVM.autoTimeFullClose = 0;
 20206  0067DC  0E00               	movlw	0
 20207  0067DE  6F9D               	movwf	(_var_sys_NVM+5)& (0+255),b	;volatile
 20208                           
 20209                           ;controlMemory_MC50.c: 259:         var_sys_NVM.operationMode = 2;
 20210  0067E0  0E02               	movlw	2
 20211  0067E2  6FA4               	movwf	(_var_sys_NVM+12)& (0+255),b	;volatile
 20212                           
 20213                           ;controlMemory_MC50.c: 260:         var_sys_NVM.velocityDecelaration = 5;
 20214  0067E4  0E05               	movlw	5
 20215  0067E6  6FB0               	movwf	(_var_sys_NVM+24)& (0+255),b	;volatile
 20216                           
 20217                           ;controlMemory_MC50.c: 261:         var_sys_NVM.flashRGBMode = 1;
 20218  0067E8  0E01               	movlw	1
 20219  0067EA  6FB1               	movwf	(_var_sys_NVM+25)& (0+255),b	;volatile
 20220                           
 20221                           ;controlMemory_MC50.c: 262:         var_sys_NVM.softstop = 5;
 20222  0067EC  0E05               	movlw	5
 20223  0067EE  6FAB               	movwf	(_var_sys_NVM+19)& (0+255),b	;volatile
 20224                           
 20225                           ;controlMemory_MC50.c: 263:         var_sys_NVM.softStart = 0;
 20226  0067F0  0E00               	movlw	0
 20227  0067F2  6FAA               	movwf	(_var_sys_NVM+18)& (0+255),b	;volatile
 20228                           
 20229                           ;controlMemory_MC50.c: 264:         var_sys_NVM.walkTime = 0;
 20230  0067F4  0E00               	movlw	0
 20231  0067F6                     L82:
 20232  0067F6  6F9C               	movwf	(_var_sys_NVM+4)& (0+255),b	;volatile
 20233  0067F8                     l21239:
 20234                           
 20235                           ; BSR set to: 0
 20236                           ;controlMemory_MC50.c: 272:     SaveNVM_VarSystem(pageMemoryE);
 20237  0067F8  0E01               	movlw	1
 20238  0067FA  ECDB  F04A         	call	_SaveNVM_VarSystem
 20239                           
 20240                           ;controlMemory_MC50.c: 273:     SaveNVM_VarSystem(pageMemoryP);
 20241  0067FE  0E00               	movlw	0
 20242  006800  ECDB  F04A         	call	_SaveNVM_VarSystem
 20243                           
 20244                           ;controlMemory_MC50.c: 278:     var_sys_NVM.learningTimeToClose = 0;
 20245  006804  0E00               	movlw	0
 20246  006806  0100               	movlb	0	; () banked
 20247  006808  6FD0               	movwf	(_var_sys_NVM+56)& (0+255),b	;volatile
 20248  00680A  0E00               	movlw	0
 20249  00680C  6FD1               	movwf	(_var_sys_NVM+57)& (0+255),b	;volatile
 20250  00680E  0E00               	movlw	0
 20251  006810  6FD2               	movwf	(_var_sys_NVM+58)& (0+255),b	;volatile
 20252  006812  0E00               	movlw	0
 20253  006814  6FD3               	movwf	(_var_sys_NVM+59)& (0+255),b	;volatile
 20254                           
 20255                           ;controlMemory_MC50.c: 279:     var_sys_NVM.learningTimeToOpen = 0;
 20256  006816  0E00               	movlw	0
 20257  006818  6FCC               	movwf	(_var_sys_NVM+52)& (0+255),b	;volatile
 20258  00681A  0E00               	movlw	0
 20259  00681C  6FCD               	movwf	(_var_sys_NVM+53)& (0+255),b	;volatile
 20260  00681E  0E00               	movlw	0
 20261  006820  6FCE               	movwf	(_var_sys_NVM+54)& (0+255),b	;volatile
 20262  006822  0E00               	movlw	0
 20263  006824  6FCF               	movwf	(_var_sys_NVM+55)& (0+255),b	;volatile
 20264                           
 20265                           ;controlMemory_MC50.c: 280:     var_sys_NVM.learningCurrentNormalClose = 0;
 20266  006826  0E00               	movlw	0
 20267  006828  6FC9               	movwf	(_var_sys_NVM+49)& (0+255),b	;volatile
 20268  00682A  0E00               	movlw	0
 20269  00682C  6FC8               	movwf	(_var_sys_NVM+48)& (0+255),b	;volatile
 20270                           
 20271                           ;controlMemory_MC50.c: 281:     var_sys_NVM.learningCurrentNormalOpen = 0;
 20272  00682E  0E00               	movlw	0
 20273  006830  6FCB               	movwf	(_var_sys_NVM+51)& (0+255),b	;volatile
 20274  006832  0E00               	movlw	0
 20275  006834  6FCA               	movwf	(_var_sys_NVM+50)& (0+255),b	;volatile
 20276                           
 20277                           ;controlMemory_MC50.c: 282:     var_sys_NVM.learningCurrentDecelarationClose = 0;
 20278  006836  0E00               	movlw	0
 20279  006838  6FC0               	movwf	(_var_sys_NVM+40)& (0+255),b	;volatile
 20280  00683A  0E00               	movlw	0
 20281  00683C  6FC1               	movwf	(_var_sys_NVM+41)& (0+255),b	;volatile
 20282  00683E  0E00               	movlw	0
 20283  006840  6FC2               	movwf	(_var_sys_NVM+42)& (0+255),b	;volatile
 20284  006842  0E00               	movlw	0
 20285  006844  6FC3               	movwf	(_var_sys_NVM+43)& (0+255),b	;volatile
 20286                           
 20287                           ;controlMemory_MC50.c: 283:     var_sys_NVM.learningCurrentDecelarationOpen = 0;
 20288  006846  0E00               	movlw	0
 20289  006848  6FC4               	movwf	(_var_sys_NVM+44)& (0+255),b	;volatile
 20290  00684A  0E00               	movlw	0
 20291  00684C  6FC5               	movwf	(_var_sys_NVM+45)& (0+255),b	;volatile
 20292  00684E  0E00               	movlw	0
 20293  006850  6FC6               	movwf	(_var_sys_NVM+46)& (0+255),b	;volatile
 20294  006852  0E00               	movlw	0
 20295  006854  6FC7               	movwf	(_var_sys_NVM+47)& (0+255),b	;volatile
 20296                           
 20297                           ; BSR set to: 0
 20298                           ;controlMemory_MC50.c: 289:     if ((PORTAbits.RA2 == 0) && (PORTAbits.RA1 == 0) && (POR
      +                          TBbits.RB0 == 0)&&(PORTAbits.RA5==0)){
 20299  006856  A48D               	btfss	141,2,c	;volatile
 20300                           
 20301                           ; BSR set to: 0
 20302  006858  B28D               	btfsc	141,1,c	;volatile
 20303  00685A  D015               	goto	l21253
 20304                           
 20305                           ; BSR set to: 0
 20306  00685C  A08E               	btfss	142,0,c	;volatile
 20307                           
 20308                           ; BSR set to: 0
 20309  00685E  BA8D               	btfsc	141,5,c	;volatile
 20310  006860  D012               	goto	l21253
 20311                           
 20312                           ; BSR set to: 0
 20313                           ;controlMemory_MC50.c: 290:      var_sys.actualCounterMoves = 0;
 20314  006862  0E00               	movlw	0
 20315  006864  0101               	movlb	1	; () banked
 20316  006866  6F3C               	movwf	(_var_sys+60)& (0+255),b	;volatile
 20317  006868  0E00               	movlw	0
 20318  00686A  6F3D               	movwf	(_var_sys+61)& (0+255),b	;volatile
 20319  00686C  0E00               	movlw	0
 20320  00686E  6F3E               	movwf	(_var_sys+62)& (0+255),b	;volatile
 20321  006870  0E00               	movlw	0
 20322  006872  6F3F               	movwf	(_var_sys+63)& (0+255),b	;volatile
 20323                           
 20324                           ;controlMemory_MC50.c: 291:      var_sys_NVM.counterMoves = 0;
 20325  006874  0E00               	movlw	0
 20326  006876  0100               	movlb	0	; () banked
 20327  006878  6FBA               	movwf	(_var_sys_NVM+34)& (0+255),b	;volatile
 20328  00687A  0E00               	movlw	0
 20329  00687C  6FBB               	movwf	(_var_sys_NVM+35)& (0+255),b	;volatile
 20330  00687E  0E00               	movlw	0
 20331  006880  6FBC               	movwf	(_var_sys_NVM+36)& (0+255),b	;volatile
 20332  006882  0E00               	movlw	0
 20333  006884  6FBD               	movwf	(_var_sys_NVM+37)& (0+255),b	;volatile
 20334  006886                     l21253:
 20335                           
 20336                           ; BSR set to: 0
 20337                           ;controlMemory_MC50.c: 296:     SaveNVM_VarSystem(pageMemoryCounters);
 20338  006886  0E02               	movlw	2
 20339  006888  ECDB  F04A         	call	_SaveNVM_VarSystem
 20340                           
 20341                           ;controlMemory_MC50.c: 297:     SaveNVM_VarSystem(pageMemoryLearningVars);
 20342  00688C  0E03               	movlw	3
 20343  00688E  ECDB  F04A         	call	_SaveNVM_VarSystem
 20344  006892  0012               	return		;funcret
 20345  006894                     __end_of_ResetDefaultMemory:
 20346                           	callstack 0
 20347                           
 20348 ;; *************** function _I2C1_Read1ByteRegister *****************
 20349 ;; Defined at:
 20350 ;;		line 65 in file "mcc_generated_files/examples/i2c1_master_example.c"
 20351 ;; Parameters:    Size  Location     Type
 20352 ;;  address         1    wreg     unsigned char 
 20353 ;;  reg             1   33[COMRAM] unsigned char 
 20354 ;; Auto vars:     Size  Location     Type
 20355 ;;  address         1   34[COMRAM] unsigned char 
 20356 ;;  returnValue     1   35[COMRAM] unsigned char 
 20357 ;; Return value:  Size  Location     Type
 20358 ;;                  1    wreg      unsigned char 
 20359 ;; Registers used:
 20360 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20361 ;; Tracked objects:
 20362 ;;		On entry : 31/0
 20363 ;;		On exit  : 33/2
 20364 ;;		Unchanged: 0/0
 20365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20366 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20367 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20369 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20370 ;;Total ram usage:        3 bytes
 20371 ;; Hardware stack levels used: 1
 20372 ;; Hardware stack levels required when called: 12
 20373 ;; This function calls:
 20374 ;;		_I2C1_Close
 20375 ;;		_I2C1_MasterWrite
 20376 ;;		_I2C1_Open
 20377 ;;		_I2C1_SetAddressNackCallback
 20378 ;;		_I2C1_SetBuffer
 20379 ;;		_I2C1_SetDataCompleteCallback
 20380 ;; This function is called by:
 20381 ;;		_loadNVM_VarSystem
 20382 ;; This function uses a non-reentrant model
 20383 ;;
 20384                           
 20385                           	psect	text72
 20386  008E52                     __ptext72:
 20387                           	callstack 0
 20388  008E52                     _I2C1_Read1ByteRegister:
 20389                           	callstack 17
 20390                           
 20391                           ;incstack = 0
 20392                           ;I2C1_Read1ByteRegister@address stored from wreg
 20393  008E52  6E23               	movwf	I2C1_Read1ByteRegister@address^0,c
 20394                           
 20395                           ;mcc_generated_files/examples/i2c1_master_example.c: 65: uint8_t I2C1_Read1ByteRegister(
      +                          i2c1_address_t address, uint8_t reg);mcc_generated_files/examples/i2c1_master_example.c:
      +                           66: {;mcc_generated_files/examples/i2c1_master_example.c: 67:     uint8_t returnValue =
      +                           0x00;
 20396  008E54  0E00               	movlw	0
 20397  008E56  6E24               	movwf	I2C1_Read1ByteRegister@returnValue^0,c
 20398  008E58                     l22539:
 20399  008E58  5023               	movf	I2C1_Read1ByteRegister@address^0,w,c
 20400  008E5A  EC50  F042         	call	_I2C1_Open
 20401  008E5E  0900               	iorlw	0
 20402  008E60  B4D8               	btfsc	status,2,c
 20403  008E62  D7FA               	goto	l22539
 20404                           
 20405                           ;mcc_generated_files/examples/i2c1_master_example.c: 70:     I2C1_SetDataCompleteCallbac
      +                          k(rd1RegCompleteHandler,&returnValue);
 20406  008E64  0E1E               	movlw	low _rd1RegCompleteHandler@i2c1_master_example$F500
 20407  008E66  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 20408  008E68  0E98               	movlw	high _rd1RegCompleteHandler@i2c1_master_example$F500
 20409  008E6A  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 20410  008E6C  0E24               	movlw	low I2C1_Read1ByteRegister@returnValue
 20411  008E6E  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 20412  008E70  6A18               	clrf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 20413  008E72  EC2F  F04E         	call	_I2C1_SetDataCompleteCallback	;wreg free
 20414                           
 20415                           ;mcc_generated_files/examples/i2c1_master_example.c: 71:     I2C1_SetBuffer(&reg,1);
 20416  008E76  0E22               	movlw	low I2C1_Read1ByteRegister@reg
 20417  008E78  6E10               	movwf	I2C1_SetBuffer@buffer^0,c
 20418  008E7A  6A11               	clrf	(I2C1_SetBuffer@buffer+1)^0,c
 20419  008E7C  0E00               	movlw	0
 20420  008E7E  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 20421  008E80  0E01               	movlw	1
 20422  008E82  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 20423  008E84  ECF2  F04D         	call	_I2C1_SetBuffer	;wreg free
 20424                           
 20425                           ; BSR set to: 2
 20426                           ;mcc_generated_files/examples/i2c1_master_example.c: 72:     I2C1_SetAddressNackCallback
      +                          (((void*)0),((void*)0));
 20427  008E88  0E00               	movlw	0
 20428  008E8A  6E15               	movwf	I2C1_SetAddressNackCallback@cb^0,c
 20429  008E8C  0E00               	movlw	0
 20430  008E8E  6E16               	movwf	(I2C1_SetAddressNackCallback@cb+1)^0,c
 20431  008E90  0E00               	movlw	0
 20432  008E92  6E17               	movwf	I2C1_SetAddressNackCallback@ptr^0,c
 20433  008E94  0E00               	movlw	0
 20434  008E96  6E18               	movwf	(I2C1_SetAddressNackCallback@ptr+1)^0,c
 20435  008E98  EC17  F04E         	call	_I2C1_SetAddressNackCallback	;wreg free
 20436                           
 20437                           ;mcc_generated_files/examples/i2c1_master_example.c: 73:     I2C1_MasterWrite();
 20438  008E9C  ECF0  F04E         	call	_I2C1_MasterWrite	;wreg free
 20439  008EA0                     l22549:
 20440  008EA0  EC64  F04D         	call	_I2C1_Close	;wreg free
 20441  008EA4  06E8               	decf	wreg,f,c
 20442  008EA6  B4D8               	btfsc	status,2,c
 20443  008EA8  D7FB               	goto	l22549
 20444                           
 20445                           ;mcc_generated_files/examples/i2c1_master_example.c: 76:     return returnValue;
 20446  008EAA  5024               	movf	I2C1_Read1ByteRegister@returnValue^0,w,c
 20447  008EAC  0012               	return		;funcret
 20448  008EAE                     __end_of_I2C1_Read1ByteRegister:
 20449                           	callstack 0
 20450                           
 20451 ;; *************** function _getKeyPressed *****************
 20452 ;; Defined at:
 20453 ;;		line 217 in file "inputs_MC50.c"
 20454 ;; Parameters:    Size  Location     Type
 20455 ;;		None
 20456 ;; Auto vars:     Size  Location     Type
 20457 ;;  temp            1   15[COMRAM] char 
 20458 ;; Return value:  Size  Location     Type
 20459 ;;                  1    wreg      char 
 20460 ;; Registers used:
 20461 ;;		wreg, status,2, status,0
 20462 ;; Tracked objects:
 20463 ;;		On entry : 3E/1
 20464 ;;		On exit  : 3D/0
 20465 ;;		Unchanged: 0/0
 20466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20468 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20470 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20471 ;;Total ram usage:        1 bytes
 20472 ;; Hardware stack levels used: 1
 20473 ;; Hardware stack levels required when called: 4
 20474 ;; This function calls:
 20475 ;;		Nothing
 20476 ;; This function is called by:
 20477 ;;		_main
 20478 ;; This function uses a non-reentrant model
 20479 ;;
 20480                           
 20481                           	psect	text73
 20482  009C16                     __ptext73:
 20483                           	callstack 0
 20484  009C16                     _getKeyPressed:
 20485                           	callstack 26
 20486                           
 20487                           ;inputs_MC50.c: 218:     signed char temp=-1;
 20488                           
 20489                           ;incstack = 0
 20490  009C16  6810               	setf	getKeyPressed@temp^0,c
 20491                           
 20492                           ;inputs_MC50.c: 219:     if(RFFull)
 20493  009C18  0100               	movlb	0	; () banked
 20494  009C1A  518B               	movf	_RFFull& (0+255),w,b	;volatile
 20495  009C1C  B4D8               	btfsc	status,2,c
 20496  009C1E  D005               	goto	l24611
 20497                           
 20498                           ; BSR set to: 0
 20499                           ;inputs_MC50.c: 220:     {;inputs_MC50.c: 221:         temp=(BufferRF[7]&0xF0)>>4;
 20500  009C20  0102               	movlb	2	; () banked
 20501  009C22  39CD               	swapf	(_BufferRF+7)& (0+255),w,b
 20502  009C24  0B0F               	andlw	15
 20503  009C26  0B0F               	andlw	15
 20504  009C28  6E10               	movwf	getKeyPressed@temp^0,c
 20505  009C2A                     l24611:
 20506                           
 20507                           ;inputs_MC50.c: 223:     return temp;
 20508  009C2A  5010               	movf	getKeyPressed@temp^0,w,c
 20509  009C2C  0012               	return		;funcret
 20510  009C2E                     __end_of_getKeyPressed:
 20511                           	callstack 0
 20512                           
 20513 ;; *************** function _eusartparser *****************
 20514 ;; Defined at:
 20515 ;;		line 357 in file "eusartparser.c"
 20516 ;; Parameters:    Size  Location     Type
 20517 ;;  package         2    8[BANK0 ] PTR struct package_t
 20518 ;;		 -> main@package(7), 
 20519 ;; Auto vars:     Size  Location     Type
 20520 ;;  i               1   28[BANK0 ] unsigned char 
 20521 ;;  i               1   25[BANK0 ] unsigned char 
 20522 ;;  i               1   29[BANK0 ] unsigned char 
 20523 ;;  i               1   26[BANK0 ] unsigned char 
 20524 ;;  i               1   30[BANK0 ] unsigned char 
 20525 ;;  i               1   24[BANK0 ] unsigned char 
 20526 ;;  i               1   23[BANK0 ] unsigned char 
 20527 ;;  i               1   19[BANK0 ] unsigned char 
 20528 ;;  i               1   18[BANK0 ] unsigned char 
 20529 ;;  i               1   27[BANK0 ] unsigned char 
 20530 ;;  i               1   22[BANK0 ] unsigned char 
 20531 ;;  i               1   21[BANK0 ] unsigned char 
 20532 ;;  i               1   17[BANK0 ] unsigned char 
 20533 ;;  i               1   16[BANK0 ] unsigned char 
 20534 ;;  a               7    0        struct package_t
 20535 ;;  serial          4   32[BANK0 ] unsigned long 
 20536 ;;  relcounter      1   31[BANK0 ] unsigned char 
 20537 ;;  pos             1   20[BANK0 ] unsigned char 
 20538 ;; Return value:  Size  Location     Type
 20539 ;;                  1    wreg      void 
 20540 ;; Registers used:
 20541 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 20542 ;; Tracked objects:
 20543 ;;		On entry : 3F/0
 20544 ;;		On exit  : 0/0
 20545 ;;		Unchanged: 0/0
 20546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20547 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20548 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20549 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20550 ;;      Totals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20551 ;;Total ram usage:       28 bytes
 20552 ;; Hardware stack levels used: 1
 20553 ;; Hardware stack levels required when called: 14
 20554 ;; This function calls:
 20555 ;;		_ReadSerial
 20556 ;;		_RemoveSerial
 20557 ;;		_SaveNVM_VarSystem
 20558 ;;		_cmdMemoryIsEmpty
 20559 ;;		_confirmpackage
 20560 ;;		_read_eusartparser
 20561 ;;		_saveNewSerial
 20562 ;;		_validateRemoteSerialNumber
 20563 ;;		_write_eusartparser
 20564 ;;		_write_package
 20565 ;; This function is called by:
 20566 ;;		_main
 20567 ;; This function uses a non-reentrant model
 20568 ;;
 20569                           
 20570                           	psect	text74
 20571  001886                     __ptext74:
 20572                           	callstack 0
 20573  001886                     _eusartparser:
 20574                           	callstack 16
 20575                           
 20576                           ; BSR set to: 0
 20577                           ;eusartparser.c: 358:         struct package_t a;;eusartparser.c: 359:         uint8_t r
      +                          elcounter;;eusartparser.c: 360:         static _Bool save_f=0;;eusartparser.c: 361:     
      +                              static uint16_t buffer=0x0000;;eusartparser.c: 362:         uint32_t serial;;eusartp
      +                          arser.c: 363:         char pos;;eusartparser.c: 365:         switch(package->functioncod
      +                          e){
 20578                           
 20579                           ;incstack = 0
 20580  001886  EF9B  F010         	goto	l27819
 20581  00188A                     l27379:
 20582                           
 20583                           ; BSR set to: 0
 20584                           ;eusartparser.c: 367:                 read_eusartparser(package);
 20585  00188A  C0E0  F018         	movff	eusartparser@package,read_eusartparser@package
 20586  00188E  C0E1  F019         	movff	eusartparser@package+1,read_eusartparser@package+1
 20587  001892  EC3E  F017         	call	_read_eusartparser	;wreg free
 20588  001896                     l27381:
 20589                           
 20590                           ;eusartparser.c: 368:                 confirmpackage(package, 1);
 20591  001896  C0E0  F012         	movff	eusartparser@package,confirmpackage@package
 20592  00189A  C0E1  F013         	movff	eusartparser@package+1,confirmpackage@package+1
 20593  00189E  0E01               	movlw	1
 20594  0018A0  6E14               	movwf	confirmpackage@confirm^0,c
 20595  0018A2  EC57  F047         	call	_confirmpackage	;wreg free
 20596  0018A6                     l27383:
 20597                           
 20598                           ;eusartparser.c: 369:                 write_package(*package);
 20599  0018A6  C0E0  FFD9         	movff	eusartparser@package,fsr2l
 20600  0018AA  C0E1  FFDA         	movff	eusartparser@package+1,fsr2h
 20601  0018AE  EE00  F011         	lfsr	0,write_package@package
 20602  0018B2  0E06               	movlw	6
 20603  0018B4                     u33401:
 20604  0018B4  CFDB FFEB          	movff	plusw2,plusw0
 20605  0018B8  06E8               	decf	wreg,f,c
 20606  0018BA  E2FC               	bc	u33401
 20607  0018BC  ECA1  F04B         	call	_write_package	;wreg free
 20608                           
 20609                           ;eusartparser.c: 370:                 break;
 20610  0018C0  0012               	return	
 20611  0018C2                     l27385:
 20612                           
 20613                           ; BSR set to: 0
 20614                           ;eusartparser.c: 373:                 if(programmer_enable){
 20615  0018C2  5185               	movf	_programmer_enable& (0+255),w,b
 20616  0018C4  B4D8               	btfsc	status,2,c
 20617  0018C6  D00E               	goto	l27393
 20618                           
 20619                           ; BSR set to: 0
 20620                           ;eusartparser.c: 374:                     write_eusartparser(*package);
 20621  0018C8  C0E0  FFD9         	movff	eusartparser@package,fsr2l
 20622  0018CC  C0E1  FFDA         	movff	eusartparser@package+1,fsr2h
 20623  0018D0  EE00  F010         	lfsr	0,write_eusartparser@package
 20624  0018D4  0E06               	movlw	6
 20625  0018D6                     u33421:
 20626  0018D6  CFDB FFEB          	movff	plusw2,plusw0
 20627  0018DA  06E8               	decf	wreg,f,c
 20628  0018DC  E2FC               	bc	u33421
 20629  0018DE  EC6C  F014         	call	_write_eusartparser	;wreg free
 20630  0018E2  D7D9               	goto	l27381
 20631  0018E4                     l27393:
 20632                           
 20633                           ; BSR set to: 0
 20634                           ;eusartparser.c: 379:                     confirmpackage(package, 0);
 20635  0018E4  C0E0  F012         	movff	eusartparser@package,confirmpackage@package
 20636  0018E8  C0E1  F013         	movff	eusartparser@package+1,confirmpackage@package+1
 20637  0018EC  0E00               	movlw	0
 20638  0018EE  6E14               	movwf	confirmpackage@confirm^0,c
 20639  0018F0  EC57  F047         	call	_confirmpackage	;wreg free
 20640  0018F4  D7D8               	goto	l27383
 20641  0018F6                     l27397:
 20642                           
 20643                           ; BSR set to: 0
 20644                           ;eusartparser.c: 385:                 if(programmer_enable){
 20645  0018F6  5185               	movf	_programmer_enable& (0+255),w,b
 20646  0018F8  B4D8               	btfsc	status,2,c
 20647  0018FA  D008               	goto	l27403
 20648                           
 20649                           ; BSR set to: 0
 20650                           ;eusartparser.c: 386:                     SaveNVM_VarSystem(pageMemoryE);
 20651  0018FC  0E01               	movlw	1
 20652  0018FE  ECDB  F04A         	call	_SaveNVM_VarSystem
 20653                           
 20654                           ;eusartparser.c: 387:                     SaveNVM_VarSystem(pageMemoryP);
 20655  001902  0E00               	movlw	0
 20656  001904  ECDB  F04A         	call	_SaveNVM_VarSystem
 20657                           
 20658                           ;eusartparser.c: 388:                     programmer_enable=0;
 20659  001908  0E00               	movlw	0
 20660  00190A  D005               	goto	L83
 20661  00190C                     l27403:
 20662                           
 20663                           ; BSR set to: 0
 20664                           ;eusartparser.c: 391:                     if((sm_state_Main_t)main_stateMachine.current_
      +                          state==st_standBy)
 20665  00190C  0101               	movlb	1	; () banked
 20666  00190E  51F2               	movf	_main_stateMachine& (0+255),w,b
 20667  001910  A4D8               	btfss	status,2,c
 20668  001912  D004               	goto	l27407
 20669                           
 20670                           ; BSR set to: 1
 20671                           ;eusartparser.c: 392:                         programmer_enable=1;
 20672  001914  0E01               	movlw	1
 20673  001916                     L83:
 20674  001916  0100               	movlb	0	; () banked
 20675  001918  6F85               	movwf	_programmer_enable& (0+255),b
 20676  00191A  D019               	goto	l27415
 20677  00191C                     l27407:
 20678                           
 20679                           ; BSR set to: 1
 20680                           ;eusartparser.c: 394:                         package->data.data16=(uint16_t)2;
 20681  00191C  0100               	movlb	0	; () banked
 20682  00191E  EE20 F002          	lfsr	2,2
 20683  001922  51E0               	movf	eusartparser@package& (0+255),w,b
 20684  001924  26D9               	addwf	fsr2l,f,c
 20685  001926  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 20686  001928  22DA               	addwfc	fsr2h,f,c
 20687  00192A  0E02               	movlw	2
 20688  00192C  6EDE               	movwf	postinc2,c
 20689  00192E  0E00               	movlw	0
 20690  001930  6EDD               	movwf	postdec2,c
 20691  001932                     l27409:
 20692                           
 20693                           ; BSR set to: 0
 20694                           ;eusartparser.c: 395:                         write_package(*package);
 20695  001932  C0E0  FFD9         	movff	eusartparser@package,fsr2l
 20696  001936  C0E1  FFDA         	movff	eusartparser@package+1,fsr2h
 20697  00193A  EE00  F011         	lfsr	0,write_package@package
 20698  00193E  0E06               	movlw	6
 20699  001940                     u33451:
 20700  001940  CFDB FFEB          	movff	plusw2,plusw0
 20701  001944  06E8               	decf	wreg,f,c
 20702  001946  E2FC               	bc	u33451
 20703  001948  ECA1  F04B         	call	_write_package	;wreg free
 20704  00194C  D7A4               	goto	l27381
 20705  00194E                     l27415:
 20706                           
 20707                           ; BSR set to: 0
 20708                           ;eusartparser.c: 402:                 package->data.data16=(uint16_t)programmer_enable;
 20709  00194E  5185               	movf	_programmer_enable& (0+255),w,b
 20710  001950  6FE2               	movwf	??_eusartparser& (0+255),b
 20711  001952  6BE3               	clrf	(??_eusartparser+1)& (0+255),b
 20712  001954  EE20 F002          	lfsr	2,2
 20713  001958  51E0               	movf	eusartparser@package& (0+255),w,b
 20714  00195A  26D9               	addwf	fsr2l,f,c
 20715  00195C  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 20716  00195E  22DA               	addwfc	fsr2h,f,c
 20717  001960  C0E2  FFDE         	movff	??_eusartparser,postinc2
 20718  001964  C0E3  FFDD         	movff	??_eusartparser+1,postdec2
 20719  001968  D7E4               	goto	l27409
 20720  00196A                     l27427:
 20721                           
 20722                           ; BSR set to: 0
 20723                           ;eusartparser.c: 412:                     package->address=0x00;
 20724  00196A  EE20 F001          	lfsr	2,1
 20725  00196E  51E0               	movf	eusartparser@package& (0+255),w,b
 20726  001970  26D9               	addwf	fsr2l,f,c
 20727  001972  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 20728  001974  22DA               	addwfc	fsr2h,f,c
 20729  001976  0E00               	movlw	0
 20730  001978  6EDF               	movwf	indf2,c
 20731                           
 20732                           ;eusartparser.c: 413:                     package->data.data16=var_sys_NVM.positionRemot
      +                          esFull;
 20733  00197A  51B8               	movf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
 20734  00197C  6FE2               	movwf	??_eusartparser& (0+255),b
 20735  00197E  6BE3               	clrf	(??_eusartparser+1)& (0+255),b
 20736  001980  EE20 F002          	lfsr	2,2
 20737  001984  51E0               	movf	eusartparser@package& (0+255),w,b
 20738  001986  26D9               	addwf	fsr2l,f,c
 20739  001988  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 20740  00198A  22DA               	addwfc	fsr2h,f,c
 20741  00198C  C0E2  FFDE         	movff	??_eusartparser,postinc2
 20742  001990  C0E3  FFDD         	movff	??_eusartparser+1,postdec2
 20743                           
 20744                           ; BSR set to: 0
 20745                           ;eusartparser.c: 414:                     for(uint8_t i=0;i<var_sys_NVM.positionRemotesF
      +                          ull;i++)
 20746  001994  0E00               	movlw	0
 20747  001996  6FE8               	movwf	eusartparser@i& (0+255),b
 20748  001998  D014               	goto	l27437
 20749  00199A                     l27431:
 20750                           
 20751                           ; BSR set to: 0
 20752                           ;eusartparser.c: 415:                     if(cmdMemoryIsEmpty(0,i)==1)
 20753  00199A  C0E8  F02E         	movff	eusartparser@i,cmdMemoryIsEmpty@position
 20754  00199E  0E00               	movlw	0
 20755  0019A0  EC24  F040         	call	_cmdMemoryIsEmpty
 20756  0019A4  06E8               	decf	wreg,f,c
 20757  0019A6  A4D8               	btfss	status,2,c
 20758  0019A8  D00A               	goto	l27435
 20759                           
 20760                           ;eusartparser.c: 416:                         package->data.data16--;
 20761  0019AA  0100               	movlb	0	; () banked
 20762  0019AC  EE20 F002          	lfsr	2,2
 20763  0019B0  51E0               	movf	eusartparser@package& (0+255),w,b
 20764  0019B2  26D9               	addwf	fsr2l,f,c
 20765  0019B4  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 20766  0019B6  22DA               	addwfc	fsr2h,f,c
 20767  0019B8  06DE               	decf	postinc2,f,c
 20768  0019BA  0E00               	movlw	0
 20769  0019BC  5ADD               	subwfb	postdec2,f,c
 20770  0019BE                     l27435:
 20771  0019BE  0100               	movlb	0	; () banked
 20772  0019C0  2BE8               	incf	eusartparser@i& (0+255),f,b
 20773  0019C2                     l27437:
 20774                           
 20775                           ; BSR set to: 0
 20776  0019C2  51B8               	movf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
 20777  0019C4  5DE8               	subwf	eusartparser@i& (0+255),w,b
 20778  0019C6  B0D8               	btfsc	status,0,c
 20779  0019C8  D7B4               	goto	l27409
 20780  0019CA  D7E7               	goto	l27431
 20781  0019CC                     l27445:
 20782                           
 20783                           ; BSR set to: 0
 20784                           ;eusartparser.c: 423:                 package->address=0x00;
 20785  0019CC  EE20 F001          	lfsr	2,1
 20786  0019D0  51E0               	movf	eusartparser@package& (0+255),w,b
 20787  0019D2  26D9               	addwf	fsr2l,f,c
 20788  0019D4  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 20789  0019D6  22DA               	addwfc	fsr2h,f,c
 20790  0019D8  0E00               	movlw	0
 20791  0019DA  6EDF               	movwf	indf2,c
 20792                           
 20793                           ;eusartparser.c: 424:                 package->data.data16=0;
 20794  0019DC  EE20 F002          	lfsr	2,2
 20795  0019E0  51E0               	movf	eusartparser@package& (0+255),w,b
 20796  0019E2  26D9               	addwf	fsr2l,f,c
 20797  0019E4  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 20798  0019E6  22DA               	addwfc	fsr2h,f,c
 20799  0019E8  0E00               	movlw	0
 20800  0019EA  6EDE               	movwf	postinc2,c
 20801  0019EC  0E00               	movlw	0
 20802  0019EE  6EDD               	movwf	postdec2,c
 20803                           
 20804                           ; BSR set to: 0
 20805                           ;eusartparser.c: 425:                 for(uint8_t i=0;i<var_sys_NVM.positionRemotesFull;
      +                          i++)
 20806  0019F0  0E00               	movlw	0
 20807  0019F2  6FE9               	movwf	eusartparser@i_7303& (0+255),b
 20808  0019F4  D014               	goto	l27455
 20809  0019F6                     l27449:
 20810                           
 20811                           ; BSR set to: 0
 20812                           ;eusartparser.c: 426:                 if(cmdMemoryIsEmpty(0,i)==1)
 20813  0019F6  C0E9  F02E         	movff	eusartparser@i_7303,cmdMemoryIsEmpty@position
 20814  0019FA  0E00               	movlw	0
 20815  0019FC  EC24  F040         	call	_cmdMemoryIsEmpty
 20816  001A00  06E8               	decf	wreg,f,c
 20817  001A02  A4D8               	btfss	status,2,c
 20818  001A04  D00A               	goto	l27453
 20819                           
 20820                           ;eusartparser.c: 427:                     package->data.data16++;
 20821  001A06  0100               	movlb	0	; () banked
 20822  001A08  EE20 F002          	lfsr	2,2
 20823  001A0C  51E0               	movf	eusartparser@package& (0+255),w,b
 20824  001A0E  26D9               	addwf	fsr2l,f,c
 20825  001A10  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 20826  001A12  22DA               	addwfc	fsr2h,f,c
 20827  001A14  2ADE               	incf	postinc2,f,c
 20828  001A16  0E00               	movlw	0
 20829  001A18  22DD               	addwfc	postdec2,f,c
 20830  001A1A                     l27453:
 20831  001A1A  0100               	movlb	0	; () banked
 20832  001A1C  2BE9               	incf	eusartparser@i_7303& (0+255),f,b
 20833  001A1E                     l27455:
 20834                           
 20835                           ; BSR set to: 0
 20836  001A1E  51B8               	movf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
 20837  001A20  5DE9               	subwf	eusartparser@i_7303& (0+255),w,b
 20838  001A22  B0D8               	btfsc	status,0,c
 20839  001A24  D786               	goto	l27409
 20840  001A26  D7E7               	goto	l27449
 20841  001A28                     l27463:
 20842                           
 20843                           ; BSR set to: 0
 20844                           ;eusartparser.c: 433:                 relcounter=0;
 20845  001A28  0E00               	movlw	0
 20846  001A2A  6FF7               	movwf	eusartparser@relcounter& (0+255),b
 20847                           
 20848                           ;eusartparser.c: 434:                 for(uint8_t i=0;i<var_sys_NVM.positionRemotesFull;
      +                          i++)
 20849  001A2C  0E00               	movlw	0
 20850  001A2E  6FED               	movwf	eusartparser@i_7304& (0+255),b
 20851  001A30  D02E               	goto	l27475
 20852  001A32                     l27465:
 20853                           
 20854                           ; BSR set to: 0
 20855                           ;eusartparser.c: 435:                     if(cmdMemoryIsEmpty(0,i)==0){
 20856  001A32  C0ED  F02E         	movff	eusartparser@i_7304,cmdMemoryIsEmpty@position
 20857  001A36  0E00               	movlw	0
 20858  001A38  EC24  F040         	call	_cmdMemoryIsEmpty
 20859  001A3C  0900               	iorlw	0
 20860  001A3E  A4D8               	btfss	status,2,c
 20861  001A40  D024               	goto	l27473
 20862                           
 20863                           ;eusartparser.c: 436:                         package->data.data16=(uint16_t)i;
 20864  001A42  0100               	movlb	0	; () banked
 20865  001A44  51ED               	movf	eusartparser@i_7304& (0+255),w,b
 20866  001A46  6FE2               	movwf	??_eusartparser& (0+255),b
 20867  001A48  6BE3               	clrf	(??_eusartparser+1)& (0+255),b
 20868  001A4A  EE20 F002          	lfsr	2,2
 20869  001A4E  51E0               	movf	eusartparser@package& (0+255),w,b
 20870  001A50  26D9               	addwf	fsr2l,f,c
 20871  001A52  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 20872  001A54  22DA               	addwfc	fsr2h,f,c
 20873  001A56  C0E2  FFDE         	movff	??_eusartparser,postinc2
 20874  001A5A  C0E3  FFDD         	movff	??_eusartparser+1,postdec2
 20875                           
 20876                           ;eusartparser.c: 437:                         package->address=relcounter;
 20877  001A5E  EE20 F001          	lfsr	2,1
 20878  001A62  51E0               	movf	eusartparser@package& (0+255),w,b
 20879  001A64  26D9               	addwf	fsr2l,f,c
 20880  001A66  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 20881  001A68  22DA               	addwfc	fsr2h,f,c
 20882  001A6A  C0F7  FFDF         	movff	eusartparser@relcounter,indf2
 20883                           
 20884                           ; BSR set to: 0
 20885                           ;eusartparser.c: 438:                         relcounter++;
 20886  001A6E  2BF7               	incf	eusartparser@relcounter& (0+255),f,b
 20887                           
 20888                           ; BSR set to: 0
 20889                           ;eusartparser.c: 439:                         write_package(*package);
 20890  001A70  C0E0  FFD9         	movff	eusartparser@package,fsr2l
 20891  001A74  C0E1  FFDA         	movff	eusartparser@package+1,fsr2h
 20892  001A78  EE00  F011         	lfsr	0,write_package@package
 20893  001A7C  0E06               	movlw	6
 20894  001A7E                     u33511:
 20895  001A7E  CFDB FFEB          	movff	plusw2,plusw0
 20896  001A82  06E8               	decf	wreg,f,c
 20897  001A84  E2FC               	bc	u33511
 20898  001A86  ECA1  F04B         	call	_write_package	;wreg free
 20899  001A8A                     l27473:
 20900  001A8A  0100               	movlb	0	; () banked
 20901  001A8C  2BED               	incf	eusartparser@i_7304& (0+255),f,b
 20902  001A8E                     l27475:
 20903                           
 20904                           ; BSR set to: 0
 20905  001A8E  51B8               	movf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
 20906  001A90  5DED               	subwf	eusartparser@i_7304& (0+255),w,b
 20907  001A92  B0D8               	btfsc	status,0,c
 20908  001A94  D700               	goto	l27381
 20909  001A96  D7CD               	goto	l27465
 20910  001A98                     l27481:
 20911                           
 20912                           ; BSR set to: 0
 20913                           ;eusartparser.c: 445:                 relcounter=0;
 20914  001A98  0E00               	movlw	0
 20915  001A9A  6FF7               	movwf	eusartparser@relcounter& (0+255),b
 20916                           
 20917                           ;eusartparser.c: 446:                 for(uint8_t i=0;i<var_sys_NVM.positionRemotesFull;
      +                          i++)
 20918  001A9C  0E00               	movlw	0
 20919  001A9E  6FEE               	movwf	eusartparser@i_7305& (0+255),b
 20920  001AA0  D02E               	goto	l27493
 20921  001AA2                     l27483:
 20922                           
 20923                           ; BSR set to: 0
 20924                           ;eusartparser.c: 447:                     if(cmdMemoryIsEmpty(0,i)==1){
 20925  001AA2  C0EE  F02E         	movff	eusartparser@i_7305,cmdMemoryIsEmpty@position
 20926  001AA6  0E00               	movlw	0
 20927  001AA8  EC24  F040         	call	_cmdMemoryIsEmpty
 20928  001AAC  06E8               	decf	wreg,f,c
 20929  001AAE  A4D8               	btfss	status,2,c
 20930  001AB0  D024               	goto	l27491
 20931                           
 20932                           ;eusartparser.c: 448:                         package->data.data16=(uint16_t)i;
 20933  001AB2  0100               	movlb	0	; () banked
 20934  001AB4  51EE               	movf	eusartparser@i_7305& (0+255),w,b
 20935  001AB6  6FE2               	movwf	??_eusartparser& (0+255),b
 20936  001AB8  6BE3               	clrf	(??_eusartparser+1)& (0+255),b
 20937  001ABA  EE20 F002          	lfsr	2,2
 20938  001ABE  51E0               	movf	eusartparser@package& (0+255),w,b
 20939  001AC0  26D9               	addwf	fsr2l,f,c
 20940  001AC2  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 20941  001AC4  22DA               	addwfc	fsr2h,f,c
 20942  001AC6  C0E2  FFDE         	movff	??_eusartparser,postinc2
 20943  001ACA  C0E3  FFDD         	movff	??_eusartparser+1,postdec2
 20944                           
 20945                           ;eusartparser.c: 449:                         package->address=relcounter;
 20946  001ACE  EE20 F001          	lfsr	2,1
 20947  001AD2  51E0               	movf	eusartparser@package& (0+255),w,b
 20948  001AD4  26D9               	addwf	fsr2l,f,c
 20949  001AD6  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 20950  001AD8  22DA               	addwfc	fsr2h,f,c
 20951  001ADA  C0F7  FFDF         	movff	eusartparser@relcounter,indf2
 20952                           
 20953                           ; BSR set to: 0
 20954                           ;eusartparser.c: 450:                         relcounter++;
 20955  001ADE  2BF7               	incf	eusartparser@relcounter& (0+255),f,b
 20956                           
 20957                           ; BSR set to: 0
 20958                           ;eusartparser.c: 451:                         write_package(*package);
 20959  001AE0  C0E0  FFD9         	movff	eusartparser@package,fsr2l
 20960  001AE4  C0E1  FFDA         	movff	eusartparser@package+1,fsr2h
 20961  001AE8  EE00  F011         	lfsr	0,write_package@package
 20962  001AEC  0E06               	movlw	6
 20963  001AEE                     u33541:
 20964  001AEE  CFDB FFEB          	movff	plusw2,plusw0
 20965  001AF2  06E8               	decf	wreg,f,c
 20966  001AF4  E2FC               	bc	u33541
 20967  001AF6  ECA1  F04B         	call	_write_package	;wreg free
 20968  001AFA                     l27491:
 20969  001AFA  0100               	movlb	0	; () banked
 20970  001AFC  2BEE               	incf	eusartparser@i_7305& (0+255),f,b
 20971  001AFE                     l27493:
 20972                           
 20973                           ; BSR set to: 0
 20974  001AFE  51B8               	movf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
 20975  001B00  5DEE               	subwf	eusartparser@i_7305& (0+255),w,b
 20976  001B02  B0D8               	btfsc	status,0,c
 20977  001B04  D6C8               	goto	l27381
 20978  001B06  D7CD               	goto	l27483
 20979  001B08                     l27499:
 20980                           
 20981                           ; BSR set to: 0
 20982                           ;eusartparser.c: 457:                 if(programmer_enable){
 20983  001B08  5185               	movf	_programmer_enable& (0+255),w,b
 20984  001B0A  B4D8               	btfsc	status,2,c
 20985  001B0C  D6EB               	goto	l27393
 20986                           
 20987                           ; BSR set to: 0
 20988                           ;eusartparser.c: 458:                     if(save_f==0){
 20989  001B0E  0101               	movlb	1	; () banked
 20990  001B10  518F               	movf	eusartparser@save_f& (0+255),w,b
 20991  001B12  A4D8               	btfss	status,2,c
 20992  001B14  D024               	goto	l27511
 20993  001B16                     u33570:
 20994                           
 20995                           ; BSR set to: 1
 20996                           ;eusartparser.c: 459:                         buffer=package->data.data16;
 20997  001B16  0100               	movlb	0	; () banked
 20998  001B18  EE20 F002          	lfsr	2,2
 20999  001B1C  51E0               	movf	eusartparser@package& (0+255),w,b
 21000  001B1E  26D9               	addwf	fsr2l,f,c
 21001  001B20  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21002  001B22  22DA               	addwfc	fsr2h,f,c
 21003  001B24  CFDE F185          	movff	postinc2,eusartparser@buffer
 21004  001B28  CFDD F186          	movff	postdec2,eusartparser@buffer+1
 21005                           
 21006                           ; BSR set to: 0
 21007                           ;eusartparser.c: 460:                         confirmpackage(package, 1);
 21008  001B2C  C0E0  F012         	movff	eusartparser@package,confirmpackage@package
 21009  001B30  C0E1  F013         	movff	eusartparser@package+1,confirmpackage@package+1
 21010  001B34  0E01               	movlw	1
 21011  001B36  6E14               	movwf	confirmpackage@confirm^0,c
 21012  001B38  EC57  F047         	call	_confirmpackage	;wreg free
 21013                           
 21014                           ;eusartparser.c: 461:                         write_package(*package);
 21015  001B3C  C0E0  FFD9         	movff	eusartparser@package,fsr2l
 21016  001B40  C0E1  FFDA         	movff	eusartparser@package+1,fsr2h
 21017  001B44  EE00  F011         	lfsr	0,write_package@package
 21018  001B48  0E06               	movlw	6
 21019  001B4A                     u33581:
 21020  001B4A  CFDB FFEB          	movff	plusw2,plusw0
 21021  001B4E  06E8               	decf	wreg,f,c
 21022  001B50  E2FC               	bc	u33581
 21023  001B52  ECA1  F04B         	call	_write_package	;wreg free
 21024                           
 21025                           ;eusartparser.c: 462:                         save_f=1;
 21026  001B56  0E01               	movlw	1
 21027  001B58  0101               	movlb	1	; () banked
 21028  001B5A  6F8F               	movwf	eusartparser@save_f& (0+255),b
 21029                           
 21030                           ;eusartparser.c: 463:                     }
 21031  001B5C  0012               	return	
 21032  001B5E                     l27511:
 21033                           
 21034                           ; BSR set to: 1
 21035                           ;eusartparser.c: 465:                         serial=((uint32_t)buffer<<16)+(uint32_t)pa
      +                          ckage->data.data16;
 21036  001B5E  0100               	movlb	0	; () banked
 21037  001B60  EE20 F002          	lfsr	2,2
 21038  001B64  51E0               	movf	eusartparser@package& (0+255),w,b
 21039  001B66  26D9               	addwf	fsr2l,f,c
 21040  001B68  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21041  001B6A  22DA               	addwfc	fsr2h,f,c
 21042  001B6C  CFDE F0E2          	movff	postinc2,??_eusartparser
 21043  001B70  CFDD F0E3          	movff	postdec2,??_eusartparser+1
 21044  001B74  0101               	movlb	1	; () banked
 21045  001B76  5185               	movf	eusartparser@buffer& (0+255),w,b
 21046  001B78  0100               	movlb	0	; () banked
 21047  001B7A  6FE4               	movwf	(??_eusartparser+2)& (0+255),b
 21048  001B7C  0101               	movlb	1	; () banked
 21049  001B7E  5186               	movf	(eusartparser@buffer+1)& (0+255),w,b
 21050  001B80  0100               	movlb	0	; () banked
 21051  001B82  6FE5               	movwf	(??_eusartparser+3)& (0+255),b
 21052  001B84  6BE6               	clrf	(??_eusartparser+4)& (0+255),b
 21053  001B86  6BE7               	clrf	(??_eusartparser+5)& (0+255),b
 21054  001B88  C0E5  F0E7         	movff	??_eusartparser+3,??_eusartparser+5
 21055  001B8C  C0E4  F0E6         	movff	??_eusartparser+2,??_eusartparser+4
 21056  001B90  6BE5               	clrf	(??_eusartparser+3)& (0+255),b
 21057  001B92  6BE4               	clrf	(??_eusartparser+2)& (0+255),b
 21058  001B94  51E2               	movf	??_eusartparser& (0+255),w,b
 21059  001B96  25E4               	addwf	(??_eusartparser+2)& (0+255),w,b
 21060  001B98  6FF8               	movwf	eusartparser@serial& (0+255),b
 21061  001B9A  51E3               	movf	(??_eusartparser+1)& (0+255),w,b
 21062  001B9C  21E5               	addwfc	(??_eusartparser+3)& (0+255),w,b
 21063  001B9E  6FF9               	movwf	(eusartparser@serial+1)& (0+255),b
 21064  001BA0  0E00               	movlw	0
 21065  001BA2  21E6               	addwfc	(??_eusartparser+4)& (0+255),w,b
 21066  001BA4  6FFA               	movwf	(eusartparser@serial+2)& (0+255),b
 21067  001BA6  0E00               	movlw	0
 21068  001BA8  21E7               	addwfc	(??_eusartparser+5)& (0+255),w,b
 21069  001BAA  6FFB               	movwf	(eusartparser@serial+3)& (0+255),b
 21070                           
 21071                           ; BSR set to: 0
 21072                           ;eusartparser.c: 466:                         if(validateRemoteSerialNumber(serial, NO, 
      +                          &pos)==NoCMD){
 21073  001BAC  C0F8  F02E         	movff	eusartparser@serial,validateRemoteSerialNumber@serial
 21074  001BB0  C0F9  F02F         	movff	eusartparser@serial+1,validateRemoteSerialNumber@serial+1
 21075  001BB4  C0FA  F030         	movff	eusartparser@serial+2,validateRemoteSerialNumber@serial+2
 21076  001BB8  C0FB  F031         	movff	eusartparser@serial+3,validateRemoteSerialNumber@serial+3
 21077  001BBC  0E00               	movlw	0
 21078  001BBE  6E32               	movwf	validateRemoteSerialNumber@VerifyOnlySerial^0,c
 21079  001BC0  0EEC               	movlw	low eusartparser@pos
 21080  001BC2  6E33               	movwf	validateRemoteSerialNumber@position^0,c
 21081  001BC4  6A34               	clrf	(validateRemoteSerialNumber@position+1)^0,c
 21082  001BC6  EC52  F030         	call	_validateRemoteSerialNumber	;wreg free
 21083  001BCA  0900               	iorlw	0
 21084  001BCC  A4D8               	btfss	status,2,c
 21085  001BCE  D04D               	goto	u33640
 21086                           
 21087                           ; BSR set to: 0
 21088                           ;eusartparser.c: 467:                             for(uint8_t i=0;;i++)
 21089  001BD0  0E00               	movlw	0
 21090  001BD2  6FF1               	movwf	eusartparser@i_7306& (0+255),b
 21091  001BD4                     l27517:
 21092                           
 21093                           ; BSR set to: 0
 21094                           ;eusartparser.c: 468:                                 if(cmdMemoryIsEmpty(0,i)==1&&packa
      +                          ge->address==0){
 21095  001BD4  C0F1  F02E         	movff	eusartparser@i_7306,cmdMemoryIsEmpty@position
 21096  001BD8  0E00               	movlw	0
 21097  001BDA  EC24  F040         	call	_cmdMemoryIsEmpty
 21098  001BDE  06E8               	decf	wreg,f,c
 21099  001BE0  A4D8               	btfss	status,2,c
 21100  001BE2  D02D               	goto	l27529
 21101  001BE4  0100               	movlb	0	; () banked
 21102  001BE6  EE20 F001          	lfsr	2,1
 21103  001BEA  51E0               	movf	eusartparser@package& (0+255),w,b
 21104  001BEC  26D9               	addwf	fsr2l,f,c
 21105  001BEE  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21106  001BF0  22DA               	addwfc	fsr2h,f,c
 21107  001BF2  50DF               	movf	indf2,w,c
 21108  001BF4  A4D8               	btfss	status,2,c
 21109  001BF6  D023               	goto	l27529
 21110                           
 21111                           ; BSR set to: 0
 21112                           ;eusartparser.c: 469:                                     saveNewSerial(0,serial,i);
 21113  001BF8  C0F8  F0D8         	movff	eusartparser@serial,saveNewSerial@tempSerial
 21114  001BFC  C0F9  F0D9         	movff	eusartparser@serial+1,saveNewSerial@tempSerial+1
 21115  001C00  C0FA  F0DA         	movff	eusartparser@serial+2,saveNewSerial@tempSerial+2
 21116  001C04  C0FB  F0DB         	movff	eusartparser@serial+3,saveNewSerial@tempSerial+3
 21117  001C08  C0F1  F0DC         	movff	eusartparser@i_7306,saveNewSerial@position
 21118  001C0C  0E00               	movlw	0
 21119  001C0E  ECF2  F044         	call	_saveNewSerial
 21120  001C12                     l27523:
 21121                           
 21122                           ;eusartparser.c: 470:                                     confirmpackage(package, 1);
 21123  001C12  C0E0  F012         	movff	eusartparser@package,confirmpackage@package
 21124  001C16  C0E1  F013         	movff	eusartparser@package+1,confirmpackage@package+1
 21125  001C1A  0E01               	movlw	1
 21126  001C1C  6E14               	movwf	confirmpackage@confirm^0,c
 21127  001C1E  EC57  F047         	call	_confirmpackage	;wreg free
 21128  001C22                     l27525:
 21129                           
 21130                           ;eusartparser.c: 471:                                     write_package(*package);
 21131  001C22  C0E0  FFD9         	movff	eusartparser@package,fsr2l
 21132  001C26  C0E1  FFDA         	movff	eusartparser@package+1,fsr2h
 21133  001C2A  EE00  F011         	lfsr	0,write_package@package
 21134  001C2E  0E06               	movlw	6
 21135  001C30                     u33621:
 21136  001C30  CFDB FFEB          	movff	plusw2,plusw0
 21137  001C34  06E8               	decf	wreg,f,c
 21138  001C36  E2FC               	bc	u33621
 21139  001C38  ECA1  F04B         	call	_write_package	;wreg free
 21140                           
 21141                           ;eusartparser.c: 472:                                     break;
 21142  001C3C  D021               	goto	l27545
 21143  001C3E                     l27529:
 21144  001C3E  C0F1  F02E         	movff	eusartparser@i_7306,cmdMemoryIsEmpty@position
 21145  001C42  0E00               	movlw	0
 21146  001C44  EC24  F040         	call	_cmdMemoryIsEmpty
 21147  001C48  06E8               	decf	wreg,f,c
 21148  001C4A  A4D8               	btfss	status,2,c
 21149  001C4C  D009               	goto	l27533
 21150                           
 21151                           ;eusartparser.c: 475:                                     package->address--;
 21152  001C4E  0100               	movlb	0	; () banked
 21153  001C50  EE20 F001          	lfsr	2,1
 21154  001C54  51E0               	movf	eusartparser@package& (0+255),w,b
 21155  001C56  26D9               	addwf	fsr2l,f,c
 21156  001C58  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21157  001C5A  22DA               	addwfc	fsr2h,f,c
 21158  001C5C  06DF               	decf	indf2,f,c
 21159                           
 21160                           ;eusartparser.c: 476:                                 }
 21161  001C5E  D00E               	goto	l27539
 21162  001C60                     l27533:
 21163  001C60  0100               	movlb	0	; () banked
 21164  001C62  51F1               	movf	eusartparser@i_7306& (0+255),w,b
 21165  001C64  19B8               	xorwf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
 21166  001C66  A4D8               	btfss	status,2,c
 21167  001C68  D009               	goto	l27539
 21168  001C6A                     u33640:
 21169                           
 21170                           ; BSR set to: 0
 21171                           ;eusartparser.c: 478:                                     confirmpackage(package, 0);
 21172  001C6A  C0E0  F012         	movff	eusartparser@package,confirmpackage@package
 21173  001C6E  C0E1  F013         	movff	eusartparser@package+1,confirmpackage@package+1
 21174  001C72  0E00               	movlw	0
 21175  001C74  6E14               	movwf	confirmpackage@confirm^0,c
 21176  001C76  EC57  F047         	call	_confirmpackage	;wreg free
 21177  001C7A  D7D3               	goto	l27525
 21178  001C7C                     l27539:
 21179                           
 21180                           ; BSR set to: 0
 21181  001C7C  2BF1               	incf	eusartparser@i_7306& (0+255),f,b
 21182  001C7E  D7AA               	goto	l27517
 21183  001C80                     l27545:
 21184                           
 21185                           ;eusartparser.c: 487:                         save_f=0;
 21186  001C80  0E00               	movlw	0
 21187  001C82  0101               	movlb	1	; () banked
 21188  001C84  6F8F               	movwf	eusartparser@save_f& (0+255),b
 21189  001C86  0012               	return	
 21190  001C88                     l27551:
 21191                           
 21192                           ; BSR set to: 0
 21193                           ;eusartparser.c: 496:                 if(programmer_enable){
 21194  001C88  5185               	movf	_programmer_enable& (0+255),w,b
 21195  001C8A  B4D8               	btfsc	status,2,c
 21196  001C8C  D62B               	goto	l27393
 21197                           
 21198                           ; BSR set to: 0
 21199                           ;eusartparser.c: 497:                     for(uint8_t i=0;;i++)
 21200  001C8E  0E00               	movlw	0
 21201  001C90  6FF2               	movwf	eusartparser@i_7307& (0+255),b
 21202  001C92                     l27555:
 21203                           
 21204                           ; BSR set to: 0
 21205                           ;eusartparser.c: 498:                         if(cmdMemoryIsEmpty(0,i)==0&&package->addr
      +                          ess==0){
 21206  001C92  C0F2  F02E         	movff	eusartparser@i_7307,cmdMemoryIsEmpty@position
 21207  001C96  0E00               	movlw	0
 21208  001C98  EC24  F040         	call	_cmdMemoryIsEmpty
 21209  001C9C  0900               	iorlw	0
 21210  001C9E  A4D8               	btfss	status,2,c
 21211  001CA0  D010               	goto	l27569
 21212  001CA2  0100               	movlb	0	; () banked
 21213  001CA4  EE20 F001          	lfsr	2,1
 21214  001CA8  51E0               	movf	eusartparser@package& (0+255),w,b
 21215  001CAA  26D9               	addwf	fsr2l,f,c
 21216  001CAC  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21217  001CAE  22DA               	addwfc	fsr2h,f,c
 21218  001CB0  50DF               	movf	indf2,w,c
 21219  001CB2  A4D8               	btfss	status,2,c
 21220  001CB4  D006               	goto	l27569
 21221                           
 21222                           ; BSR set to: 0
 21223                           ;eusartparser.c: 499:                             RemoveSerial(0, i);
 21224  001CB6  C0F2  F03A         	movff	eusartparser@i_7307,RemoveSerial@position
 21225  001CBA  0E00               	movlw	0
 21226  001CBC  ECD3  F042         	call	_RemoveSerial
 21227  001CC0  D7A8               	goto	l27523
 21228  001CC2                     l27569:
 21229  001CC2  C0F2  F02E         	movff	eusartparser@i_7307,cmdMemoryIsEmpty@position
 21230  001CC6  0E00               	movlw	0
 21231  001CC8  EC24  F040         	call	_cmdMemoryIsEmpty
 21232  001CCC  0900               	iorlw	0
 21233  001CCE  A4D8               	btfss	status,2,c
 21234  001CD0  D009               	goto	l27573
 21235                           
 21236                           ;eusartparser.c: 506:                             package->address--;
 21237  001CD2  0100               	movlb	0	; () banked
 21238  001CD4  EE20 F001          	lfsr	2,1
 21239  001CD8  51E0               	movf	eusartparser@package& (0+255),w,b
 21240  001CDA  26D9               	addwf	fsr2l,f,c
 21241  001CDC  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21242  001CDE  22DA               	addwfc	fsr2h,f,c
 21243  001CE0  06DF               	decf	indf2,f,c
 21244                           
 21245                           ;eusartparser.c: 507:                         }
 21246  001CE2  D005               	goto	l27581
 21247  001CE4                     l27573:
 21248  001CE4  0100               	movlb	0	; () banked
 21249  001CE6  51F2               	movf	eusartparser@i_7307& (0+255),w,b
 21250  001CE8  19B8               	xorwf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
 21251  001CEA  B4D8               	btfsc	status,2,c
 21252  001CEC  D7BE               	goto	u33640
 21253  001CEE                     l27581:
 21254                           
 21255                           ; BSR set to: 0
 21256  001CEE  2BF2               	incf	eusartparser@i_7307& (0+255),f,b
 21257  001CF0  D7D0               	goto	l27555
 21258  001CF2                     l27587:
 21259                           
 21260                           ; BSR set to: 0
 21261                           ;eusartparser.c: 521:                 for(uint8_t i=0;;i++)
 21262  001CF2  0E00               	movlw	0
 21263  001CF4  6FF3               	movwf	eusartparser@i_7308& (0+255),b
 21264  001CF6                     l27589:
 21265                           
 21266                           ; BSR set to: 0
 21267                           ;eusartparser.c: 522:                     if(cmdMemoryIsEmpty(0,i)==0&&package->address=
      +                          =0){
 21268  001CF6  C0F3  F02E         	movff	eusartparser@i_7308,cmdMemoryIsEmpty@position
 21269  001CFA  0E00               	movlw	0
 21270  001CFC  EC24  F040         	call	_cmdMemoryIsEmpty
 21271  001D00  0900               	iorlw	0
 21272  001D02  A4D8               	btfss	status,2,c
 21273  001D04  D02A               	goto	l27609
 21274  001D06  0100               	movlb	0	; () banked
 21275  001D08  EE20 F001          	lfsr	2,1
 21276  001D0C  51E0               	movf	eusartparser@package& (0+255),w,b
 21277  001D0E  26D9               	addwf	fsr2l,f,c
 21278  001D10  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21279  001D12  22DA               	addwfc	fsr2h,f,c
 21280  001D14  50DF               	movf	indf2,w,c
 21281  001D16  A4D8               	btfss	status,2,c
 21282  001D18  D020               	goto	l27609
 21283                           
 21284                           ; BSR set to: 0
 21285                           ;eusartparser.c: 523:                         ReadSerial(0, &serial, i);
 21286  001D1A  0EF8               	movlw	low eusartparser@serial
 21287  001D1C  6E2E               	movwf	ReadSerial@tempSerial^0,c
 21288  001D1E  C0F3  F02F         	movff	eusartparser@i_7308,ReadSerial@position
 21289  001D22  0E00               	movlw	0
 21290  001D24  EC2A  F045         	call	_ReadSerial
 21291                           
 21292                           ;eusartparser.c: 524:                         package->data.data16=(uint16_t)serial;
 21293  001D28  0100               	movlb	0	; () banked
 21294  001D2A  EE20 F002          	lfsr	2,2
 21295  001D2E  51E0               	movf	eusartparser@package& (0+255),w,b
 21296  001D30  26D9               	addwf	fsr2l,f,c
 21297  001D32  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21298  001D34  22DA               	addwfc	fsr2h,f,c
 21299  001D36  C0F8  FFDE         	movff	eusartparser@serial,postinc2
 21300  001D3A  C0F9  FFDD         	movff	eusartparser@serial+1,postdec2
 21301                           
 21302                           ; BSR set to: 0
 21303                           ;eusartparser.c: 525:                         write_package(*package);
 21304  001D3E  C0E0  FFD9         	movff	eusartparser@package,fsr2l
 21305  001D42  C0E1  FFDA         	movff	eusartparser@package+1,fsr2h
 21306  001D46  EE00  F011         	lfsr	0,write_package@package
 21307  001D4A  0E06               	movlw	6
 21308  001D4C                     u33721:
 21309  001D4C  CFDB FFEB          	movff	plusw2,plusw0
 21310  001D50  06E8               	decf	wreg,f,c
 21311  001D52  E2FC               	bc	u33721
 21312  001D54  ECA1  F04B         	call	_write_package	;wreg free
 21313  001D58  D1C9               	goto	l27793
 21314  001D5A                     l27609:
 21315  001D5A  C0F3  F02E         	movff	eusartparser@i_7308,cmdMemoryIsEmpty@position
 21316  001D5E  0E00               	movlw	0
 21317  001D60  EC24  F040         	call	_cmdMemoryIsEmpty
 21318  001D64  0900               	iorlw	0
 21319  001D66  A4D8               	btfss	status,2,c
 21320  001D68  D009               	goto	l27613
 21321                           
 21322                           ;eusartparser.c: 533:                         package->address--;
 21323  001D6A  0100               	movlb	0	; () banked
 21324  001D6C  EE20 F001          	lfsr	2,1
 21325  001D70  51E0               	movf	eusartparser@package& (0+255),w,b
 21326  001D72  26D9               	addwf	fsr2l,f,c
 21327  001D74  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21328  001D76  22DA               	addwfc	fsr2h,f,c
 21329  001D78  06DF               	decf	indf2,f,c
 21330                           
 21331                           ;eusartparser.c: 534:                     }
 21332  001D7A  D005               	goto	l27619
 21333  001D7C                     l27613:
 21334  001D7C  0100               	movlb	0	; () banked
 21335  001D7E  51F3               	movf	eusartparser@i_7308& (0+255),w,b
 21336  001D80  19B8               	xorwf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
 21337  001D82  B4D8               	btfsc	status,2,c
 21338  001D84  D5AF               	goto	l27393
 21339  001D86                     l27619:
 21340                           
 21341                           ; BSR set to: 0
 21342  001D86  2BF3               	incf	eusartparser@i_7308& (0+255),f,b
 21343  001D88  D7B6               	goto	l27589
 21344  001D8A                     l27621:
 21345                           
 21346                           ; BSR set to: 0
 21347                           ;eusartparser.c: 542:                     package->address=0x00;
 21348  001D8A  EE20 F001          	lfsr	2,1
 21349  001D8E  51E0               	movf	eusartparser@package& (0+255),w,b
 21350  001D90  26D9               	addwf	fsr2l,f,c
 21351  001D92  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21352  001D94  22DA               	addwfc	fsr2h,f,c
 21353  001D96  0E00               	movlw	0
 21354  001D98  6EDF               	movwf	indf2,c
 21355                           
 21356                           ;eusartparser.c: 543:                     package->data.data16=var_sys_NVM.positionRemot
      +                          esWalk;
 21357  001D9A  51B9               	movf	(_var_sys_NVM+33)& (0+255),w,b	;volatile
 21358  001D9C  6FE2               	movwf	??_eusartparser& (0+255),b
 21359  001D9E  6BE3               	clrf	(??_eusartparser+1)& (0+255),b
 21360  001DA0  EE20 F002          	lfsr	2,2
 21361  001DA4  51E0               	movf	eusartparser@package& (0+255),w,b
 21362  001DA6  26D9               	addwf	fsr2l,f,c
 21363  001DA8  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21364  001DAA  22DA               	addwfc	fsr2h,f,c
 21365  001DAC  C0E2  FFDE         	movff	??_eusartparser,postinc2
 21366  001DB0  C0E3  FFDD         	movff	??_eusartparser+1,postdec2
 21367                           
 21368                           ; BSR set to: 0
 21369                           ;eusartparser.c: 544:                     for(uint8_t i=0;i<var_sys_NVM.positionRemotesW
      +                          alk;i++)
 21370  001DB4  0E00               	movlw	0
 21371  001DB6  6FEA               	movwf	eusartparser@i_7310& (0+255),b
 21372  001DB8  D014               	goto	l27631
 21373  001DBA                     l27625:
 21374                           
 21375                           ; BSR set to: 0
 21376                           ;eusartparser.c: 545:                     if(cmdMemoryIsEmpty(1,i)==1)
 21377  001DBA  C0EA  F02E         	movff	eusartparser@i_7310,cmdMemoryIsEmpty@position
 21378  001DBE  0E01               	movlw	1
 21379  001DC0  EC24  F040         	call	_cmdMemoryIsEmpty
 21380  001DC4  06E8               	decf	wreg,f,c
 21381  001DC6  A4D8               	btfss	status,2,c
 21382  001DC8  D00A               	goto	l27629
 21383                           
 21384                           ;eusartparser.c: 546:                         package->data.data16--;
 21385  001DCA  0100               	movlb	0	; () banked
 21386  001DCC  EE20 F002          	lfsr	2,2
 21387  001DD0  51E0               	movf	eusartparser@package& (0+255),w,b
 21388  001DD2  26D9               	addwf	fsr2l,f,c
 21389  001DD4  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21390  001DD6  22DA               	addwfc	fsr2h,f,c
 21391  001DD8  06DE               	decf	postinc2,f,c
 21392  001DDA  0E00               	movlw	0
 21393  001DDC  5ADD               	subwfb	postdec2,f,c
 21394  001DDE                     l27629:
 21395  001DDE  0100               	movlb	0	; () banked
 21396  001DE0  2BEA               	incf	eusartparser@i_7310& (0+255),f,b
 21397  001DE2                     l27631:
 21398                           
 21399                           ; BSR set to: 0
 21400  001DE2  51B9               	movf	(_var_sys_NVM+33)& (0+255),w,b	;volatile
 21401  001DE4  5DEA               	subwf	eusartparser@i_7310& (0+255),w,b
 21402  001DE6  B0D8               	btfsc	status,0,c
 21403  001DE8  D5A4               	goto	l27409
 21404  001DEA  D7E7               	goto	l27625
 21405  001DEC                     l27639:
 21406                           
 21407                           ; BSR set to: 0
 21408                           ;eusartparser.c: 553:                 package->address=0x00;
 21409  001DEC  EE20 F001          	lfsr	2,1
 21410  001DF0  51E0               	movf	eusartparser@package& (0+255),w,b
 21411  001DF2  26D9               	addwf	fsr2l,f,c
 21412  001DF4  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21413  001DF6  22DA               	addwfc	fsr2h,f,c
 21414  001DF8  0E00               	movlw	0
 21415  001DFA  6EDF               	movwf	indf2,c
 21416                           
 21417                           ;eusartparser.c: 554:                 package->data.data16=0;
 21418  001DFC  EE20 F002          	lfsr	2,2
 21419  001E00  51E0               	movf	eusartparser@package& (0+255),w,b
 21420  001E02  26D9               	addwf	fsr2l,f,c
 21421  001E04  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21422  001E06  22DA               	addwfc	fsr2h,f,c
 21423  001E08  0E00               	movlw	0
 21424  001E0A  6EDE               	movwf	postinc2,c
 21425  001E0C  0E00               	movlw	0
 21426  001E0E  6EDD               	movwf	postdec2,c
 21427                           
 21428                           ; BSR set to: 0
 21429                           ;eusartparser.c: 555:                 for(uint8_t i=0;i<var_sys_NVM.positionRemotesWalk;
      +                          i++)
 21430  001E10  0E00               	movlw	0
 21431  001E12  6FEB               	movwf	eusartparser@i_7311& (0+255),b
 21432  001E14  D014               	goto	l27649
 21433  001E16                     l27643:
 21434                           
 21435                           ; BSR set to: 0
 21436                           ;eusartparser.c: 556:                 if(cmdMemoryIsEmpty(1,i)==1)
 21437  001E16  C0EB  F02E         	movff	eusartparser@i_7311,cmdMemoryIsEmpty@position
 21438  001E1A  0E01               	movlw	1
 21439  001E1C  EC24  F040         	call	_cmdMemoryIsEmpty
 21440  001E20  06E8               	decf	wreg,f,c
 21441  001E22  A4D8               	btfss	status,2,c
 21442  001E24  D00A               	goto	l27647
 21443                           
 21444                           ;eusartparser.c: 557:                     package->data.data16++;
 21445  001E26  0100               	movlb	0	; () banked
 21446  001E28  EE20 F002          	lfsr	2,2
 21447  001E2C  51E0               	movf	eusartparser@package& (0+255),w,b
 21448  001E2E  26D9               	addwf	fsr2l,f,c
 21449  001E30  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21450  001E32  22DA               	addwfc	fsr2h,f,c
 21451  001E34  2ADE               	incf	postinc2,f,c
 21452  001E36  0E00               	movlw	0
 21453  001E38  22DD               	addwfc	postdec2,f,c
 21454  001E3A                     l27647:
 21455  001E3A  0100               	movlb	0	; () banked
 21456  001E3C  2BEB               	incf	eusartparser@i_7311& (0+255),f,b
 21457  001E3E                     l27649:
 21458                           
 21459                           ; BSR set to: 0
 21460  001E3E  51B9               	movf	(_var_sys_NVM+33)& (0+255),w,b	;volatile
 21461  001E40  5DEB               	subwf	eusartparser@i_7311& (0+255),w,b
 21462  001E42  B0D8               	btfsc	status,0,c
 21463  001E44  D576               	goto	l27409
 21464  001E46  D7E7               	goto	l27643
 21465  001E48                     l27657:
 21466                           
 21467                           ; BSR set to: 0
 21468                           ;eusartparser.c: 563:                 relcounter=0;
 21469  001E48  0E00               	movlw	0
 21470  001E4A  6FF7               	movwf	eusartparser@relcounter& (0+255),b
 21471                           
 21472                           ;eusartparser.c: 564:                 for(uint8_t i=0;i<var_sys_NVM.positionRemotesWalk;
      +                          i++)
 21473  001E4C  0E00               	movlw	0
 21474  001E4E  6FEF               	movwf	eusartparser@i_7312& (0+255),b
 21475  001E50  D02E               	goto	l27669
 21476  001E52                     l27659:
 21477                           
 21478                           ; BSR set to: 0
 21479                           ;eusartparser.c: 565:                     if(cmdMemoryIsEmpty(1,i)==0){
 21480  001E52  C0EF  F02E         	movff	eusartparser@i_7312,cmdMemoryIsEmpty@position
 21481  001E56  0E01               	movlw	1
 21482  001E58  EC24  F040         	call	_cmdMemoryIsEmpty
 21483  001E5C  0900               	iorlw	0
 21484  001E5E  A4D8               	btfss	status,2,c
 21485  001E60  D024               	goto	l27667
 21486                           
 21487                           ;eusartparser.c: 566:                         package->data.data16=(uint16_t)i;
 21488  001E62  0100               	movlb	0	; () banked
 21489  001E64  51EF               	movf	eusartparser@i_7312& (0+255),w,b
 21490  001E66  6FE2               	movwf	??_eusartparser& (0+255),b
 21491  001E68  6BE3               	clrf	(??_eusartparser+1)& (0+255),b
 21492  001E6A  EE20 F002          	lfsr	2,2
 21493  001E6E  51E0               	movf	eusartparser@package& (0+255),w,b
 21494  001E70  26D9               	addwf	fsr2l,f,c
 21495  001E72  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21496  001E74  22DA               	addwfc	fsr2h,f,c
 21497  001E76  C0E2  FFDE         	movff	??_eusartparser,postinc2
 21498  001E7A  C0E3  FFDD         	movff	??_eusartparser+1,postdec2
 21499                           
 21500                           ;eusartparser.c: 567:                         package->address=relcounter;
 21501  001E7E  EE20 F001          	lfsr	2,1
 21502  001E82  51E0               	movf	eusartparser@package& (0+255),w,b
 21503  001E84  26D9               	addwf	fsr2l,f,c
 21504  001E86  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21505  001E88  22DA               	addwfc	fsr2h,f,c
 21506  001E8A  C0F7  FFDF         	movff	eusartparser@relcounter,indf2
 21507                           
 21508                           ; BSR set to: 0
 21509                           ;eusartparser.c: 568:                         relcounter++;
 21510  001E8E  2BF7               	incf	eusartparser@relcounter& (0+255),f,b
 21511                           
 21512                           ; BSR set to: 0
 21513                           ;eusartparser.c: 569:                         write_package(*package);
 21514  001E90  C0E0  FFD9         	movff	eusartparser@package,fsr2l
 21515  001E94  C0E1  FFDA         	movff	eusartparser@package+1,fsr2h
 21516  001E98  EE00  F011         	lfsr	0,write_package@package
 21517  001E9C  0E06               	movlw	6
 21518  001E9E                     u33801:
 21519  001E9E  CFDB FFEB          	movff	plusw2,plusw0
 21520  001EA2  06E8               	decf	wreg,f,c
 21521  001EA4  E2FC               	bc	u33801
 21522  001EA6  ECA1  F04B         	call	_write_package	;wreg free
 21523  001EAA                     l27667:
 21524  001EAA  0100               	movlb	0	; () banked
 21525  001EAC  2BEF               	incf	eusartparser@i_7312& (0+255),f,b
 21526  001EAE                     l27669:
 21527                           
 21528                           ; BSR set to: 0
 21529  001EAE  51B9               	movf	(_var_sys_NVM+33)& (0+255),w,b	;volatile
 21530  001EB0  5DEF               	subwf	eusartparser@i_7312& (0+255),w,b
 21531  001EB2  B0D8               	btfsc	status,0,c
 21532  001EB4  D4F0               	goto	l27381
 21533  001EB6  D7CD               	goto	l27659
 21534  001EB8                     l27675:
 21535                           
 21536                           ; BSR set to: 0
 21537                           ;eusartparser.c: 575:                 relcounter=0;
 21538  001EB8  0E00               	movlw	0
 21539  001EBA  6FF7               	movwf	eusartparser@relcounter& (0+255),b
 21540                           
 21541                           ;eusartparser.c: 576:                 for(uint8_t i=0;i<var_sys_NVM.positionRemotesWalk;
      +                          i++)
 21542  001EBC  0E00               	movlw	0
 21543  001EBE  6FF0               	movwf	eusartparser@i_7313& (0+255),b
 21544  001EC0  D02E               	goto	l27687
 21545  001EC2                     l27677:
 21546                           
 21547                           ; BSR set to: 0
 21548                           ;eusartparser.c: 577:                     if(cmdMemoryIsEmpty(1,i)==1){
 21549  001EC2  C0F0  F02E         	movff	eusartparser@i_7313,cmdMemoryIsEmpty@position
 21550  001EC6  0E01               	movlw	1
 21551  001EC8  EC24  F040         	call	_cmdMemoryIsEmpty
 21552  001ECC  06E8               	decf	wreg,f,c
 21553  001ECE  A4D8               	btfss	status,2,c
 21554  001ED0  D024               	goto	l27685
 21555                           
 21556                           ;eusartparser.c: 578:                         package->data.data16=(uint16_t)i;
 21557  001ED2  0100               	movlb	0	; () banked
 21558  001ED4  51F0               	movf	eusartparser@i_7313& (0+255),w,b
 21559  001ED6  6FE2               	movwf	??_eusartparser& (0+255),b
 21560  001ED8  6BE3               	clrf	(??_eusartparser+1)& (0+255),b
 21561  001EDA  EE20 F002          	lfsr	2,2
 21562  001EDE  51E0               	movf	eusartparser@package& (0+255),w,b
 21563  001EE0  26D9               	addwf	fsr2l,f,c
 21564  001EE2  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21565  001EE4  22DA               	addwfc	fsr2h,f,c
 21566  001EE6  C0E2  FFDE         	movff	??_eusartparser,postinc2
 21567  001EEA  C0E3  FFDD         	movff	??_eusartparser+1,postdec2
 21568                           
 21569                           ;eusartparser.c: 579:                         package->address=relcounter;
 21570  001EEE  EE20 F001          	lfsr	2,1
 21571  001EF2  51E0               	movf	eusartparser@package& (0+255),w,b
 21572  001EF4  26D9               	addwf	fsr2l,f,c
 21573  001EF6  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21574  001EF8  22DA               	addwfc	fsr2h,f,c
 21575  001EFA  C0F7  FFDF         	movff	eusartparser@relcounter,indf2
 21576                           
 21577                           ; BSR set to: 0
 21578                           ;eusartparser.c: 580:                         relcounter++;
 21579  001EFE  2BF7               	incf	eusartparser@relcounter& (0+255),f,b
 21580                           
 21581                           ; BSR set to: 0
 21582                           ;eusartparser.c: 581:                         write_package(*package);
 21583  001F00  C0E0  FFD9         	movff	eusartparser@package,fsr2l
 21584  001F04  C0E1  FFDA         	movff	eusartparser@package+1,fsr2h
 21585  001F08  EE00  F011         	lfsr	0,write_package@package
 21586  001F0C  0E06               	movlw	6
 21587  001F0E                     u33831:
 21588  001F0E  CFDB FFEB          	movff	plusw2,plusw0
 21589  001F12  06E8               	decf	wreg,f,c
 21590  001F14  E2FC               	bc	u33831
 21591  001F16  ECA1  F04B         	call	_write_package	;wreg free
 21592  001F1A                     l27685:
 21593  001F1A  0100               	movlb	0	; () banked
 21594  001F1C  2BF0               	incf	eusartparser@i_7313& (0+255),f,b
 21595  001F1E                     l27687:
 21596                           
 21597                           ; BSR set to: 0
 21598  001F1E  51B9               	movf	(_var_sys_NVM+33)& (0+255),w,b	;volatile
 21599  001F20  5DF0               	subwf	eusartparser@i_7313& (0+255),w,b
 21600  001F22  B0D8               	btfsc	status,0,c
 21601  001F24  D4B8               	goto	l27381
 21602  001F26  D7CD               	goto	l27677
 21603  001F28                     l27693:
 21604                           
 21605                           ; BSR set to: 0
 21606                           ;eusartparser.c: 587:                 if(programmer_enable){
 21607  001F28  5185               	movf	_programmer_enable& (0+255),w,b
 21608  001F2A  B4D8               	btfsc	status,2,c
 21609  001F2C  D4DB               	goto	l27393
 21610                           
 21611                           ; BSR set to: 0
 21612                           ;eusartparser.c: 588:                     if(save_f==0){
 21613  001F2E  0101               	movlb	1	; () banked
 21614  001F30  518F               	movf	eusartparser@save_f& (0+255),w,b
 21615  001F32  B4D8               	btfsc	status,2,c
 21616  001F34  D5F0               	goto	u33570
 21617                           
 21618                           ; BSR set to: 1
 21619                           ;eusartparser.c: 595:                         serial=((uint32_t)buffer<<16)+(uint32_t)pa
      +                          ckage->data.data16;
 21620                           
 21621                           ; BSR set to: 1
 21622                           ;eusartparser.c: 589:                         buffer=package->data.data16;
 21623  001F36  0100               	movlb	0	; () banked
 21624  001F38  EE20 F002          	lfsr	2,2
 21625  001F3C  51E0               	movf	eusartparser@package& (0+255),w,b
 21626  001F3E  26D9               	addwf	fsr2l,f,c
 21627  001F40  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21628  001F42  22DA               	addwfc	fsr2h,f,c
 21629  001F44  CFDE F0E2          	movff	postinc2,??_eusartparser
 21630  001F48  CFDD F0E3          	movff	postdec2,??_eusartparser+1
 21631  001F4C  0101               	movlb	1	; () banked
 21632  001F4E  5185               	movf	eusartparser@buffer& (0+255),w,b
 21633  001F50  0100               	movlb	0	; () banked
 21634  001F52  6FE4               	movwf	(??_eusartparser+2)& (0+255),b
 21635  001F54  0101               	movlb	1	; () banked
 21636  001F56  5186               	movf	(eusartparser@buffer+1)& (0+255),w,b
 21637  001F58  0100               	movlb	0	; () banked
 21638  001F5A  6FE5               	movwf	(??_eusartparser+3)& (0+255),b
 21639  001F5C  6BE6               	clrf	(??_eusartparser+4)& (0+255),b
 21640  001F5E  6BE7               	clrf	(??_eusartparser+5)& (0+255),b
 21641  001F60  C0E5  F0E7         	movff	??_eusartparser+3,??_eusartparser+5
 21642  001F64  C0E4  F0E6         	movff	??_eusartparser+2,??_eusartparser+4
 21643  001F68  6BE5               	clrf	(??_eusartparser+3)& (0+255),b
 21644  001F6A  6BE4               	clrf	(??_eusartparser+2)& (0+255),b
 21645  001F6C  51E2               	movf	??_eusartparser& (0+255),w,b
 21646  001F6E  25E4               	addwf	(??_eusartparser+2)& (0+255),w,b
 21647  001F70  6FF8               	movwf	eusartparser@serial& (0+255),b
 21648  001F72  51E3               	movf	(??_eusartparser+1)& (0+255),w,b
 21649  001F74  21E5               	addwfc	(??_eusartparser+3)& (0+255),w,b
 21650  001F76  6FF9               	movwf	(eusartparser@serial+1)& (0+255),b
 21651  001F78  0E00               	movlw	0
 21652  001F7A  21E6               	addwfc	(??_eusartparser+4)& (0+255),w,b
 21653  001F7C  6FFA               	movwf	(eusartparser@serial+2)& (0+255),b
 21654  001F7E  0E00               	movlw	0
 21655  001F80  21E7               	addwfc	(??_eusartparser+5)& (0+255),w,b
 21656  001F82  6FFB               	movwf	(eusartparser@serial+3)& (0+255),b
 21657                           
 21658                           ; BSR set to: 0
 21659                           ;eusartparser.c: 596:                         if(validateRemoteSerialNumber(serial, NO, 
      +                          &pos)==NoCMD){
 21660  001F84  C0F8  F02E         	movff	eusartparser@serial,validateRemoteSerialNumber@serial
 21661  001F88  C0F9  F02F         	movff	eusartparser@serial+1,validateRemoteSerialNumber@serial+1
 21662  001F8C  C0FA  F030         	movff	eusartparser@serial+2,validateRemoteSerialNumber@serial+2
 21663  001F90  C0FB  F031         	movff	eusartparser@serial+3,validateRemoteSerialNumber@serial+3
 21664  001F94  0E00               	movlw	0
 21665  001F96  6E32               	movwf	validateRemoteSerialNumber@VerifyOnlySerial^0,c
 21666  001F98  0EEC               	movlw	low eusartparser@pos
 21667  001F9A  6E33               	movwf	validateRemoteSerialNumber@position^0,c
 21668  001F9C  6A34               	clrf	(validateRemoteSerialNumber@position+1)^0,c
 21669  001F9E  EC52  F030         	call	_validateRemoteSerialNumber	;wreg free
 21670  001FA2  0900               	iorlw	0
 21671  001FA4  A4D8               	btfss	status,2,c
 21672  001FA6  D661               	goto	u33640
 21673                           
 21674                           ; BSR set to: 0
 21675                           ;eusartparser.c: 597:                             for(uint8_t i=0;;i++)
 21676  001FA8  0E00               	movlw	0
 21677  001FAA  6FF4               	movwf	eusartparser@i_7314& (0+255),b
 21678  001FAC                     l27711:
 21679                           
 21680                           ; BSR set to: 0
 21681                           ;eusartparser.c: 598:                                 if(cmdMemoryIsEmpty(1,i)==1&&packa
      +                          ge->address==0){
 21682  001FAC  C0F4  F02E         	movff	eusartparser@i_7314,cmdMemoryIsEmpty@position
 21683  001FB0  0E01               	movlw	1
 21684  001FB2  EC24  F040         	call	_cmdMemoryIsEmpty
 21685  001FB6  06E8               	decf	wreg,f,c
 21686  001FB8  A4D8               	btfss	status,2,c
 21687  001FBA  D018               	goto	l27723
 21688  001FBC  0100               	movlb	0	; () banked
 21689  001FBE  EE20 F001          	lfsr	2,1
 21690  001FC2  51E0               	movf	eusartparser@package& (0+255),w,b
 21691  001FC4  26D9               	addwf	fsr2l,f,c
 21692  001FC6  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21693  001FC8  22DA               	addwfc	fsr2h,f,c
 21694  001FCA  50DF               	movf	indf2,w,c
 21695  001FCC  A4D8               	btfss	status,2,c
 21696  001FCE  D00E               	goto	l27723
 21697                           
 21698                           ; BSR set to: 0
 21699                           ;eusartparser.c: 599:                                     saveNewSerial(1,serial,i);
 21700  001FD0  C0F8  F0D8         	movff	eusartparser@serial,saveNewSerial@tempSerial
 21701  001FD4  C0F9  F0D9         	movff	eusartparser@serial+1,saveNewSerial@tempSerial+1
 21702  001FD8  C0FA  F0DA         	movff	eusartparser@serial+2,saveNewSerial@tempSerial+2
 21703  001FDC  C0FB  F0DB         	movff	eusartparser@serial+3,saveNewSerial@tempSerial+3
 21704  001FE0  C0F4  F0DC         	movff	eusartparser@i_7314,saveNewSerial@position
 21705  001FE4  0E01               	movlw	1
 21706  001FE6  ECF2  F044         	call	_saveNewSerial
 21707  001FEA  D613               	goto	l27523
 21708  001FEC                     l27723:
 21709  001FEC  C0F4  F02E         	movff	eusartparser@i_7314,cmdMemoryIsEmpty@position
 21710  001FF0  0E01               	movlw	1
 21711  001FF2  EC24  F040         	call	_cmdMemoryIsEmpty
 21712  001FF6  06E8               	decf	wreg,f,c
 21713  001FF8  A4D8               	btfss	status,2,c
 21714  001FFA  D009               	goto	l27727
 21715                           
 21716                           ;eusartparser.c: 605:                                     package->address--;
 21717  001FFC  0100               	movlb	0	; () banked
 21718  001FFE  EE20 F001          	lfsr	2,1
 21719  002002  51E0               	movf	eusartparser@package& (0+255),w,b
 21720  002004  26D9               	addwf	fsr2l,f,c
 21721  002006  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21722  002008  22DA               	addwfc	fsr2h,f,c
 21723  00200A  06DF               	decf	indf2,f,c
 21724                           
 21725                           ;eusartparser.c: 606:                                 }
 21726  00200C  D005               	goto	l27733
 21727  00200E                     l27727:
 21728  00200E  0100               	movlb	0	; () banked
 21729  002010  51F4               	movf	eusartparser@i_7314& (0+255),w,b
 21730  002012  19B9               	xorwf	(_var_sys_NVM+33)& (0+255),w,b	;volatile
 21731  002014  B4D8               	btfsc	status,2,c
 21732  002016  D629               	goto	u33640
 21733  002018                     l27733:
 21734                           
 21735                           ; BSR set to: 0
 21736  002018  2BF4               	incf	eusartparser@i_7314& (0+255),f,b
 21737  00201A  D7C8               	goto	l27711
 21738  00201C                     l27745:
 21739                           
 21740                           ; BSR set to: 0
 21741                           ;eusartparser.c: 626:                 if(programmer_enable){
 21742  00201C  5185               	movf	_programmer_enable& (0+255),w,b
 21743  00201E  B4D8               	btfsc	status,2,c
 21744  002020  D461               	goto	l27393
 21745                           
 21746                           ; BSR set to: 0
 21747                           ;eusartparser.c: 627:                     for(uint8_t i=0;;i++)
 21748  002022  0E00               	movlw	0
 21749  002024  6FF5               	movwf	eusartparser@i_7315& (0+255),b
 21750  002026                     l27749:
 21751                           
 21752                           ; BSR set to: 0
 21753                           ;eusartparser.c: 628:                         if(cmdMemoryIsEmpty(1,i)==0&&package->addr
      +                          ess==0){
 21754  002026  C0F5  F02E         	movff	eusartparser@i_7315,cmdMemoryIsEmpty@position
 21755  00202A  0E01               	movlw	1
 21756  00202C  EC24  F040         	call	_cmdMemoryIsEmpty
 21757  002030  0900               	iorlw	0
 21758  002032  A4D8               	btfss	status,2,c
 21759  002034  D010               	goto	l27763
 21760  002036  0100               	movlb	0	; () banked
 21761  002038  EE20 F001          	lfsr	2,1
 21762  00203C  51E0               	movf	eusartparser@package& (0+255),w,b
 21763  00203E  26D9               	addwf	fsr2l,f,c
 21764  002040  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21765  002042  22DA               	addwfc	fsr2h,f,c
 21766  002044  50DF               	movf	indf2,w,c
 21767  002046  A4D8               	btfss	status,2,c
 21768  002048  D006               	goto	l27763
 21769                           
 21770                           ; BSR set to: 0
 21771                           ;eusartparser.c: 629:                             RemoveSerial(1, i);
 21772  00204A  C0F5  F03A         	movff	eusartparser@i_7315,RemoveSerial@position
 21773  00204E  0E01               	movlw	1
 21774  002050  ECD3  F042         	call	_RemoveSerial
 21775  002054  D5DE               	goto	l27523
 21776  002056                     l27763:
 21777  002056  C0F5  F02E         	movff	eusartparser@i_7315,cmdMemoryIsEmpty@position
 21778  00205A  0E01               	movlw	1
 21779  00205C  EC24  F040         	call	_cmdMemoryIsEmpty
 21780  002060  0900               	iorlw	0
 21781  002062  A4D8               	btfss	status,2,c
 21782  002064  D009               	goto	l27767
 21783                           
 21784                           ;eusartparser.c: 636:                             package->address--;
 21785  002066  0100               	movlb	0	; () banked
 21786  002068  EE20 F001          	lfsr	2,1
 21787  00206C  51E0               	movf	eusartparser@package& (0+255),w,b
 21788  00206E  26D9               	addwf	fsr2l,f,c
 21789  002070  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21790  002072  22DA               	addwfc	fsr2h,f,c
 21791  002074  06DF               	decf	indf2,f,c
 21792                           
 21793                           ;eusartparser.c: 637:                         }
 21794  002076  D005               	goto	l27775
 21795  002078                     l27767:
 21796  002078  0100               	movlb	0	; () banked
 21797  00207A  51F5               	movf	eusartparser@i_7315& (0+255),w,b
 21798  00207C  19B9               	xorwf	(_var_sys_NVM+33)& (0+255),w,b	;volatile
 21799  00207E  B4D8               	btfsc	status,2,c
 21800  002080  D5F4               	goto	u33640
 21801  002082                     l27775:
 21802                           
 21803                           ; BSR set to: 0
 21804  002082  2BF5               	incf	eusartparser@i_7315& (0+255),f,b
 21805  002084  D7D0               	goto	l27749
 21806  002086                     l27781:
 21807                           
 21808                           ; BSR set to: 0
 21809                           ;eusartparser.c: 651:                 for(uint8_t i=0;;i++)
 21810  002086  0E00               	movlw	0
 21811  002088  6FF6               	movwf	eusartparser@i_7316& (0+255),b
 21812  00208A                     l27783:
 21813                           
 21814                           ; BSR set to: 0
 21815                           ;eusartparser.c: 652:                     if(cmdMemoryIsEmpty(1,i)==0&&package->address=
      +                          =0){
 21816  00208A  C0F6  F02E         	movff	eusartparser@i_7316,cmdMemoryIsEmpty@position
 21817  00208E  0E01               	movlw	1
 21818  002090  EC24  F040         	call	_cmdMemoryIsEmpty
 21819  002094  0900               	iorlw	0
 21820  002096  A4D8               	btfss	status,2,c
 21821  002098  D035               	goto	l27803
 21822  00209A  0100               	movlb	0	; () banked
 21823  00209C  EE20 F001          	lfsr	2,1
 21824  0020A0  51E0               	movf	eusartparser@package& (0+255),w,b
 21825  0020A2  26D9               	addwf	fsr2l,f,c
 21826  0020A4  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21827  0020A6  22DA               	addwfc	fsr2h,f,c
 21828  0020A8  50DF               	movf	indf2,w,c
 21829  0020AA  A4D8               	btfss	status,2,c
 21830  0020AC  D02B               	goto	l27803
 21831                           
 21832                           ; BSR set to: 0
 21833                           ;eusartparser.c: 653:                         ReadSerial(1, &serial, i);
 21834  0020AE  0EF8               	movlw	low eusartparser@serial
 21835  0020B0  6E2E               	movwf	ReadSerial@tempSerial^0,c
 21836  0020B2  C0F6  F02F         	movff	eusartparser@i_7316,ReadSerial@position
 21837  0020B6  0E01               	movlw	1
 21838  0020B8  EC2A  F045         	call	_ReadSerial
 21839                           
 21840                           ;eusartparser.c: 654:                         package->data.data16=(uint16_t)serial;
 21841  0020BC  0100               	movlb	0	; () banked
 21842  0020BE  EE20 F002          	lfsr	2,2
 21843  0020C2  51E0               	movf	eusartparser@package& (0+255),w,b
 21844  0020C4  26D9               	addwf	fsr2l,f,c
 21845  0020C6  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21846  0020C8  22DA               	addwfc	fsr2h,f,c
 21847  0020CA  C0F8  FFDE         	movff	eusartparser@serial,postinc2
 21848  0020CE  C0F9  FFDD         	movff	eusartparser@serial+1,postdec2
 21849                           
 21850                           ; BSR set to: 0
 21851                           ;eusartparser.c: 655:                         write_package(*package);
 21852  0020D2  C0E0  FFD9         	movff	eusartparser@package,fsr2l
 21853  0020D6  C0E1  FFDA         	movff	eusartparser@package+1,fsr2h
 21854  0020DA  EE00  F011         	lfsr	0,write_package@package
 21855  0020DE  0E06               	movlw	6
 21856  0020E0                     u33991:
 21857  0020E0  CFDB FFEB          	movff	plusw2,plusw0
 21858  0020E4  06E8               	decf	wreg,f,c
 21859  0020E6  E2FC               	bc	u33991
 21860  0020E8  ECA1  F04B         	call	_write_package	;wreg free
 21861  0020EC                     l27793:
 21862                           
 21863                           ;eusartparser.c: 656:                         package->data.data16=(uint16_t)(serial>>16
      +                          );
 21864  0020EC  0100               	movlb	0	; () banked
 21865  0020EE  EE20 F002          	lfsr	2,2
 21866  0020F2  51E0               	movf	eusartparser@package& (0+255),w,b
 21867  0020F4  26D9               	addwf	fsr2l,f,c
 21868  0020F6  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21869  0020F8  22DA               	addwfc	fsr2h,f,c
 21870  0020FA  C0FA  FFDE         	movff	eusartparser@serial+2,postinc2
 21871  0020FE  C0FB  FFDD         	movff	eusartparser@serial+3,postdec2
 21872  002102  D417               	goto	l27409
 21873  002104                     l27803:
 21874  002104  C0F6  F02E         	movff	eusartparser@i_7316,cmdMemoryIsEmpty@position
 21875  002108  0E01               	movlw	1
 21876  00210A  EC24  F040         	call	_cmdMemoryIsEmpty
 21877  00210E  0900               	iorlw	0
 21878  002110  A4D8               	btfss	status,2,c
 21879  002112  D009               	goto	l27807
 21880                           
 21881                           ;eusartparser.c: 663:                         package->address--;
 21882  002114  0100               	movlb	0	; () banked
 21883  002116  EE20 F001          	lfsr	2,1
 21884  00211A  51E0               	movf	eusartparser@package& (0+255),w,b
 21885  00211C  26D9               	addwf	fsr2l,f,c
 21886  00211E  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21887  002120  22DA               	addwfc	fsr2h,f,c
 21888  002122  06DF               	decf	indf2,f,c
 21889                           
 21890                           ;eusartparser.c: 664:                     }
 21891  002124  D006               	goto	l27813
 21892  002126                     l27807:
 21893  002126  0100               	movlb	0	; () banked
 21894  002128  51F6               	movf	eusartparser@i_7316& (0+255),w,b
 21895  00212A  19B9               	xorwf	(_var_sys_NVM+33)& (0+255),w,b	;volatile
 21896  00212C  B4D8               	btfsc	status,2,c
 21897  00212E  EF72  F00C         	goto	l27393
 21898  002132                     l27813:
 21899                           
 21900                           ; BSR set to: 0
 21901  002132  2BF6               	incf	eusartparser@i_7316& (0+255),f,b
 21902  002134  D7AA               	goto	l27783
 21903  002136                     l27819:
 21904                           
 21905                           ; BSR set to: 0
 21906  002136  C0E0  FFD9         	movff	eusartparser@package,fsr2l
 21907  00213A  C0E1  FFDA         	movff	eusartparser@package+1,fsr2h
 21908  00213E  50DF               	movf	indf2,w,c
 21909  002140  6FE2               	movwf	??_eusartparser& (0+255),b
 21910  002142  6BE3               	clrf	(??_eusartparser+1)& (0+255),b
 21911                           
 21912                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 21913                           ; Switch size 1, requested type "simple"
 21914                           ; Number of cases is 1, Range of values is 0 to 0
 21915                           ; switch strategies available:
 21916                           ; Name         Instructions Cycles
 21917                           ; simple_byte            4     3 (average)
 21918                           ;	Chosen strategy is simple_byte
 21919  002144  51E3               	movf	(??_eusartparser+1)& (0+255),w,b
 21920  002146  0A00               	xorlw	0	; case 0
 21921  002148  A4D8               	btfss	status,2,c
 21922  00214A  EF72  F00C         	goto	l27393
 21923                           
 21924                           ; BSR set to: 0
 21925                           ; Switch size 1, requested type "simple"
 21926                           ; Number of cases is 18, Range of values is 0 to 17
 21927                           ; switch strategies available:
 21928                           ; Name         Instructions Cycles
 21929                           ; simple_byte           55    28 (average)
 21930                           ;	Chosen strategy is simple_byte
 21931  00214E  51E2               	movf	??_eusartparser& (0+255),w,b
 21932  002150  0A00               	xorlw	0	; case 0
 21933  002152  B4D8               	btfsc	status,2,c
 21934  002154  EF45  F00C         	goto	l27379
 21935  002158  0A01               	xorlw	1	; case 1
 21936  00215A  B4D8               	btfsc	status,2,c
 21937  00215C  EF61  F00C         	goto	l27385
 21938  002160  0A03               	xorlw	3	; case 2
 21939  002162  B4D8               	btfsc	status,2,c
 21940  002164  EF7B  F00C         	goto	l27397
 21941  002168  0A01               	xorlw	1	; case 3
 21942  00216A  B4D8               	btfsc	status,2,c
 21943  00216C  EF4B  F00C         	goto	l27381
 21944  002170  0A07               	xorlw	7	; case 4
 21945  002172  B4D8               	btfsc	status,2,c
 21946  002174  EFB5  F00C         	goto	l27427
 21947  002178  0A01               	xorlw	1	; case 5
 21948  00217A  B4D8               	btfsc	status,2,c
 21949  00217C  D427               	goto	l27445
 21950  00217E  0A03               	xorlw	3	; case 6
 21951  002180  B4D8               	btfsc	status,2,c
 21952  002182  D452               	goto	l27463
 21953  002184  0A01               	xorlw	1	; case 7
 21954  002186  B4D8               	btfsc	status,2,c
 21955  002188  D487               	goto	l27481
 21956  00218A  0A0F               	xorlw	15	; case 8
 21957  00218C  B4D8               	btfsc	status,2,c
 21958  00218E  D4BC               	goto	l27499
 21959  002190  0A01               	xorlw	1	; case 9
 21960  002192  B4D8               	btfsc	status,2,c
 21961  002194  D579               	goto	l27551
 21962  002196  0A03               	xorlw	3	; case 10
 21963  002198  B4D8               	btfsc	status,2,c
 21964  00219A  D5AB               	goto	l27587
 21965  00219C  0A01               	xorlw	1	; case 11
 21966  00219E  B4D8               	btfsc	status,2,c
 21967  0021A0  D5F4               	goto	l27621
 21968  0021A2  0A07               	xorlw	7	; case 12
 21969  0021A4  B4D8               	btfsc	status,2,c
 21970  0021A6  D622               	goto	l27639
 21971  0021A8  0A01               	xorlw	1	; case 13
 21972  0021AA  B4D8               	btfsc	status,2,c
 21973  0021AC  D64D               	goto	l27657
 21974  0021AE  0A03               	xorlw	3	; case 14
 21975  0021B0  B4D8               	btfsc	status,2,c
 21976  0021B2  D682               	goto	l27675
 21977  0021B4  0A01               	xorlw	1	; case 15
 21978  0021B6  B4D8               	btfsc	status,2,c
 21979  0021B8  D6B7               	goto	l27693
 21980  0021BA  0A1F               	xorlw	31	; case 16
 21981  0021BC  B4D8               	btfsc	status,2,c
 21982  0021BE  D72E               	goto	l27745
 21983  0021C0  0A01               	xorlw	1	; case 17
 21984  0021C2  B4D8               	btfsc	status,2,c
 21985  0021C4  D760               	goto	l27781
 21986  0021C6  EF72  F00C         	goto	l27393
 21987  0021CA                     __end_of_eusartparser:
 21988                           	callstack 0
 21989                           
 21990 ;; *************** function _write_eusartparser *****************
 21991 ;; Defined at:
 21992 ;;		line 195 in file "eusartparser.c"
 21993 ;; Parameters:    Size  Location     Type
 21994 ;;  package         7   15[COMRAM] struct package_t
 21995 ;; Auto vars:     Size  Location     Type
 21996 ;;  debug2          2   32[COMRAM] volatile int 
 21997 ;;  debug           2   30[COMRAM] volatile int 
 21998 ;; Return value:  Size  Location     Type
 21999 ;;                  1    wreg      void 
 22000 ;; Registers used:
 22001 ;;		wreg, status,2, status,0
 22002 ;; Tracked objects:
 22003 ;;		On entry : 3F/0
 22004 ;;		On exit  : 3F/0
 22005 ;;		Unchanged: 0/0
 22006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22007 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22008 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22009 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22010 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22011 ;;Total ram usage:       19 bytes
 22012 ;; Hardware stack levels used: 1
 22013 ;; Hardware stack levels required when called: 4
 22014 ;; This function calls:
 22015 ;;		Nothing
 22016 ;; This function is called by:
 22017 ;;		_eusartparser
 22018 ;; This function uses a non-reentrant model
 22019 ;;
 22020                           
 22021                           	psect	text75
 22022  0028D8                     __ptext75:
 22023                           	callstack 0
 22024  0028D8                     _write_eusartparser:
 22025                           	callstack 25
 22026                           
 22027                           ; BSR set to: 0
 22028                           ;eusartparser.c: 196:         volatile int debug=(uint8_t)package.address;
 22029                           
 22030                           ;incstack = 0
 22031  0028D8  C011  F01F         	movff	write_eusartparser@package+1,write_eusartparser@debug	;volatile
 22032  0028DC  6A20               	clrf	(write_eusartparser@debug+1)^0,c	;volatile
 22033                           
 22034                           ; BSR set to: 0
 22035                           ;eusartparser.c: 197:         volatile int debug2=0x10;
 22036  0028DE  0E00               	movlw	0
 22037  0028E0  6E22               	movwf	(write_eusartparser@debug2+1)^0,c	;volatile
 22038  0028E2  0E10               	movlw	16
 22039  0028E4  6E21               	movwf	write_eusartparser@debug2^0,c	;volatile
 22040                           
 22041                           ;eusartparser.c: 198:         switch((uint8_t)package.address){
 22042  0028E6  D240               	goto	l24439
 22043  0028E8                     l3612:
 22044                           
 22045                           ; BSR set to: 0
 22046                           ;eusartparser.c: 201:                 var_sys_NVM.decelarationOpen=package.data.data8[0]
      +                          ;
 22047  0028E8  C012  F098         	movff	write_eusartparser@package+2,_var_sys_NVM	;volatile
 22048                           
 22049                           ;eusartparser.c: 202:                 var_sys_NVM.decelarationClose=package.data.data8[1
      +                          ];
 22050  0028EC  C013  F099         	movff	write_eusartparser@package+3,_var_sys_NVM+1	;volatile
 22051                           
 22052                           ;eusartparser.c: 203:                 break;
 22053  0028F0  0012               	return	
 22054  0028F2                     l3614:
 22055                           
 22056                           ; BSR set to: 0
 22057                           ;eusartparser.c: 205:                 var_sys_NVM.motorPower=package.data.data8[0];
 22058  0028F2  C012  F09A         	movff	write_eusartparser@package+2,_var_sys_NVM+2	;volatile
 22059                           
 22060                           ;eusartparser.c: 206:                 var_sys_NVM.motorSensitivity=package.data.data8[1]
      +                          ;
 22061  0028F6  C013  F09B         	movff	write_eusartparser@package+3,_var_sys_NVM+3	;volatile
 22062                           
 22063                           ;eusartparser.c: 207:                 break;
 22064  0028FA  0012               	return	
 22065  0028FC                     l3615:
 22066                           
 22067                           ; BSR set to: 0
 22068                           ;eusartparser.c: 209:                 var_sys_NVM.walkTime=package.data.data8[1];
 22069  0028FC  C013  F09C         	movff	write_eusartparser@package+3,_var_sys_NVM+4	;volatile
 22070                           
 22071                           ;eusartparser.c: 210:                 break;
 22072  002900  0012               	return	
 22073  002902                     l3617:
 22074                           
 22075                           ; BSR set to: 0
 22076                           ;eusartparser.c: 213:                 var_sys_NVM.autoTimeFullClose=package.data.data8[0
      +                          ];
 22077  002902  C012  F09D         	movff	write_eusartparser@package+2,_var_sys_NVM+5	;volatile
 22078                           
 22079                           ;eusartparser.c: 214:                 var_sys_NVM.autoTimeWalkClose=package.data.data8[1
      +                          ];
 22080  002906  C013  F09E         	movff	write_eusartparser@package+3,_var_sys_NVM+6	;volatile
 22081                           
 22082                           ;eusartparser.c: 215:                 break;
 22083  00290A  0012               	return	
 22084  00290C                     l3619:
 22085                           
 22086                           ; BSR set to: 0
 22087                           ;eusartparser.c: 218:                 var_sys_NVM.photoCellIsON=package.data.data8[0];
 22088  00290C  C012  F09F         	movff	write_eusartparser@package+2,_var_sys_NVM+7	;volatile
 22089                           
 22090                           ;eusartparser.c: 219:                 var_sys_NVM.photoCellInOpen=package.data.data8[1];
 22091  002910  C013  F0A0         	movff	write_eusartparser@package+3,_var_sys_NVM+8	;volatile
 22092                           
 22093                           ;eusartparser.c: 220:                 break;
 22094  002914  0012               	return	
 22095  002916                     l3620:
 22096                           
 22097                           ; BSR set to: 0
 22098                           ;eusartparser.c: 222:                 var_sys_NVM.securityBandIsON=package.data.data8[0]
      +                          ;
 22099  002916  C012  F0A1         	movff	write_eusartparser@package+2,_var_sys_NVM+9	;volatile
 22100                           
 22101                           ;eusartparser.c: 223:                 var_sys_NVM.securityBandType=package.data.data8[1]
      +                          ;
 22102  00291A  C013  F0A2         	movff	write_eusartparser@package+3,_var_sys_NVM+10	;volatile
 22103                           
 22104                           ;eusartparser.c: 224:                 break;
 22105  00291E  0012               	return	
 22106  002920                     l3621:
 22107                           
 22108                           ; BSR set to: 0
 22109                           ;eusartparser.c: 226:                 var_sys_NVM.securityBandInOpen=package.data.data8[
      +                          1];
 22110  002920  C013  F0A3         	movff	write_eusartparser@package+3,_var_sys_NVM+11	;volatile
 22111                           
 22112                           ;eusartparser.c: 227:                 break;
 22113  002924  0012               	return	
 22114  002926                     l3622:
 22115                           
 22116                           ; BSR set to: 0
 22117                           ;eusartparser.c: 229:                 var_sys_NVM.operationMode=package.data.data8[1];
 22118  002926  C013  F0A4         	movff	write_eusartparser@package+3,_var_sys_NVM+12	;volatile
 22119                           
 22120                           ;eusartparser.c: 230:                 break;
 22121  00292A  0012               	return	
 22122  00292C                     l3623:
 22123                           
 22124                           ; BSR set to: 0
 22125                           ;eusartparser.c: 232:                 var_sys_NVM.flashLightMode=package.data.data8[1];
 22126  00292C  C013  F0A5         	movff	write_eusartparser@package+3,_var_sys_NVM+13	;volatile
 22127                           
 22128                           ;eusartparser.c: 233:                 break;
 22129  002930  0012               	return	
 22130  002932                     l3624:
 22131                           
 22132                           ; BSR set to: 0
 22133                           ;eusartparser.c: 235:                 var_sys_NVM.programmingDistance=package.data.data8
      +                          [1];
 22134  002932  C013  F0A6         	movff	write_eusartparser@package+3,_var_sys_NVM+14	;volatile
 22135                           
 22136                           ;eusartparser.c: 236:                 break;
 22137  002936  0012               	return	
 22138  002938                     l3625:
 22139                           
 22140                           ; BSR set to: 0
 22141                           ;eusartparser.c: 238:                 var_sys_NVM.decelarationSensivity=package.data.dat
      +                          a8[1];
 22142  002938  C013  F0A7         	movff	write_eusartparser@package+3,_var_sys_NVM+15	;volatile
 22143                           
 22144                           ;eusartparser.c: 239:                 break;
 22145  00293C  0012               	return	
 22146  00293E                     l3626:
 22147                           
 22148                           ; BSR set to: 0
 22149                           ;eusartparser.c: 242:                 var_sys_NVM.homemPresente=package.data.data8[1];
 22150  00293E  C013  F0A8         	movff	write_eusartparser@package+3,_var_sys_NVM+16	;volatile
 22151                           
 22152                           ;eusartparser.c: 243:                 break;
 22153  002942  0012               	return	
 22154  002944                     l3628:
 22155                           
 22156                           ; BSR set to: 0
 22157                           ;eusartparser.c: 246:                 var_sys_NVM.logicDigital=package.data.data8[1];
 22158  002944  C013  F0A9         	movff	write_eusartparser@package+3,_var_sys_NVM+17	;volatile
 22159                           
 22160                           ;eusartparser.c: 247:                 break;
 22161  002948  0012               	return	
 22162  00294A                     l3629:
 22163                           
 22164                           ; BSR set to: 0
 22165                           ;eusartparser.c: 249:                 var_sys_NVM.softStart=package.data.data8[0];
 22166  00294A  C012  F0AA         	movff	write_eusartparser@package+2,_var_sys_NVM+18	;volatile
 22167                           
 22168                           ;eusartparser.c: 250:                 var_sys_NVM.softstop=package.data.data8[1];
 22169  00294E  C013  F0AB         	movff	write_eusartparser@package+3,_var_sys_NVM+19	;volatile
 22170                           
 22171                           ;eusartparser.c: 251:                 break;
 22172  002952  0012               	return	
 22173  002954                     l3631:
 22174                           
 22175                           ; BSR set to: 0
 22176                           ;eusartparser.c: 254:                 var_sys_NVM.ligthTime=package.data.data8[1];
 22177  002954  C013  F0AC         	movff	write_eusartparser@package+3,_var_sys_NVM+20	;volatile
 22178                           
 22179                           ;eusartparser.c: 255:                 break;
 22180  002958  0012               	return	
 22181  00295A                     l3633:
 22182                           
 22183                           ; BSR set to: 0
 22184                           ;eusartparser.c: 258:                 var_sys_NVM.folow_me=package.data.data8[1];
 22185  00295A  C013  F0AD         	movff	write_eusartparser@package+3,_var_sys_NVM+21	;volatile
 22186                           
 22187                           ;eusartparser.c: 259:                 break;
 22188  00295E  0012               	return	
 22189  002960                     l3634:
 22190                           
 22191                           ; BSR set to: 0
 22192                           ;eusartparser.c: 261:                 var_sys_NVM.Stopboton=package.data.data8[1];
 22193  002960  C013  F0AE         	movff	write_eusartparser@package+3,_var_sys_NVM+22	;volatile
 22194                           
 22195                           ;eusartparser.c: 262:                 break;
 22196  002964  0012               	return	
 22197  002966                     l3635:
 22198                           
 22199                           ; BSR set to: 0
 22200                           ;eusartparser.c: 264:                 var_sys_NVM.electricBrake=package.data.data8[1];
 22201  002966  C013  F0AF         	movff	write_eusartparser@package+3,_var_sys_NVM+23	;volatile
 22202                           
 22203                           ;eusartparser.c: 265:                 break;
 22204  00296A  0012               	return	
 22205  00296C                     l3636:
 22206                           
 22207                           ; BSR set to: 0
 22208                           ;eusartparser.c: 267:                 var_sys_NVM.velocityDecelaration=package.data.data
      +                          8[1];
 22209  00296C  C013  F0B0         	movff	write_eusartparser@package+3,_var_sys_NVM+24	;volatile
 22210                           
 22211                           ;eusartparser.c: 268:                 break;
 22212  002970  0012               	return	
 22213  002972                     l3638:
 22214                           
 22215                           ; BSR set to: 0
 22216                           ;eusartparser.c: 271:                 var_sys_NVM.flashRGBMode=package.data.data8[1];
 22217  002972  C013  F0B1         	movff	write_eusartparser@package+3,_var_sys_NVM+25	;volatile
 22218                           
 22219                           ;eusartparser.c: 272:                 break;
 22220  002976  0012               	return	
 22221  002978                     l3639:
 22222                           
 22223                           ; BSR set to: 0
 22224                           ;eusartparser.c: 274:                 var_sys_NVM.Direction_motor=package.data.data8[1];
 22225  002978  C013  F0B3         	movff	write_eusartparser@package+3,_var_sys_NVM+27	;volatile
 22226                           
 22227                           ;eusartparser.c: 275:                 break;
 22228  00297C  0012               	return	
 22229  00297E                     l3640:
 22230                           
 22231                           ; BSR set to: 0
 22232                           ;eusartparser.c: 277:                 var_sys_NVM.TypeofMotor=package.data.data8[1];
 22233  00297E  C013  F0B4         	movff	write_eusartparser@package+3,_var_sys_NVM+28	;volatile
 22234                           
 22235                           ;eusartparser.c: 278:                 break;
 22236  002982  0012               	return	
 22237  002984                     l3641:
 22238                           
 22239                           ; BSR set to: 0
 22240                           ;eusartparser.c: 280:                 var_sys_NVM.positionRemotesFull=package.data.data8
      +                          [0];
 22241  002984  C012  F0B8         	movff	write_eusartparser@package+2,_var_sys_NVM+32	;volatile
 22242                           
 22243                           ;eusartparser.c: 281:                 var_sys_NVM.positionRemotesWalk=package.data.data8
      +                          [1];
 22244  002988  C013  F0B9         	movff	write_eusartparser@package+3,_var_sys_NVM+33	;volatile
 22245                           
 22246                           ;eusartparser.c: 282:                 break;
 22247  00298C  0012               	return	
 22248  00298E                     l24417:
 22249                           
 22250                           ; BSR set to: 0
 22251                           ;eusartparser.c: 285:                 var_sys_NVM.counterMoves=var_sys_NVM.counterMoves|
      +                          ((uint32_t)(package.data.data16&0xFFFF)<<(uint8_t)(1*16));
 22252  00298E  5012               	movf	(write_eusartparser@package+2)^0,w,c
 22253  002990  6E17               	movwf	??_write_eusartparser^0,c
 22254  002992  5013               	movf	(write_eusartparser@package+3)^0,w,c
 22255  002994  6E18               	movwf	(??_write_eusartparser+1)^0,c
 22256  002996  6A19               	clrf	(??_write_eusartparser+2)^0,c
 22257  002998  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 22258  00299A  C018  F01A         	movff	??_write_eusartparser+1,??_write_eusartparser+3
 22259  00299E  C017  F019         	movff	??_write_eusartparser,??_write_eusartparser+2
 22260  0029A2  6A18               	clrf	(??_write_eusartparser+1)^0,c
 22261  0029A4  6A17               	clrf	??_write_eusartparser^0,c
 22262  0029A6  51BA               	movf	(_var_sys_NVM+34)& (0+255),w,b	;volatile
 22263  0029A8  1017               	iorwf	??_write_eusartparser^0,w,c
 22264  0029AA  6FBA               	movwf	(_var_sys_NVM+34)& (0+255),b	;volatile
 22265  0029AC  51BB               	movf	(_var_sys_NVM+35)& (0+255),w,b	;volatile
 22266  0029AE  1018               	iorwf	(??_write_eusartparser+1)^0,w,c
 22267  0029B0  6FBB               	movwf	(_var_sys_NVM+35)& (0+255),b	;volatile
 22268  0029B2  51BC               	movf	(_var_sys_NVM+36)& (0+255),w,b	;volatile
 22269  0029B4  1019               	iorwf	(??_write_eusartparser+2)^0,w,c
 22270  0029B6  6FBC               	movwf	(_var_sys_NVM+36)& (0+255),b	;volatile
 22271  0029B8  51BD               	movf	(_var_sys_NVM+37)& (0+255),w,b	;volatile
 22272  0029BA  101A               	iorwf	(??_write_eusartparser+3)^0,w,c
 22273  0029BC  6FBD               	movwf	(_var_sys_NVM+37)& (0+255),b	;volatile
 22274                           
 22275                           ;eusartparser.c: 286:                 var_sys_NVM.counterMoves=var_sys_NVM.counterMoves&
      +                          ~((uint32_t)(~package.data.data16&0xFFFF)<<(uint8_t)(1*16));
 22276  0029BE  1C12               	comf	(write_eusartparser@package+2)^0,w,c
 22277  0029C0  6E17               	movwf	??_write_eusartparser^0,c
 22278  0029C2  1C13               	comf	(write_eusartparser@package+3)^0,w,c
 22279  0029C4  6E18               	movwf	(??_write_eusartparser+1)^0,c
 22280  0029C6  6A19               	clrf	(??_write_eusartparser+2)^0,c
 22281  0029C8  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 22282  0029CA  C018  F01A         	movff	??_write_eusartparser+1,??_write_eusartparser+3
 22283  0029CE  C017  F019         	movff	??_write_eusartparser,??_write_eusartparser+2
 22284  0029D2  6A18               	clrf	(??_write_eusartparser+1)^0,c
 22285  0029D4  6A17               	clrf	??_write_eusartparser^0,c
 22286  0029D6  1C17               	comf	??_write_eusartparser^0,w,c
 22287  0029D8  6E1B               	movwf	(??_write_eusartparser+4)^0,c
 22288  0029DA  1C18               	comf	(??_write_eusartparser+1)^0,w,c
 22289  0029DC  6E1C               	movwf	(??_write_eusartparser+5)^0,c
 22290  0029DE  1C19               	comf	(??_write_eusartparser+2)^0,w,c
 22291  0029E0  6E1D               	movwf	(??_write_eusartparser+6)^0,c
 22292  0029E2  1C1A               	comf	(??_write_eusartparser+3)^0,w,c
 22293  0029E4  6E1E               	movwf	(??_write_eusartparser+7)^0,c
 22294  0029E6  51BA               	movf	(_var_sys_NVM+34)& (0+255),w,b	;volatile
 22295  0029E8  141B               	andwf	(??_write_eusartparser+4)^0,w,c
 22296  0029EA  6FBA               	movwf	(_var_sys_NVM+34)& (0+255),b	;volatile
 22297  0029EC  51BB               	movf	(_var_sys_NVM+35)& (0+255),w,b	;volatile
 22298  0029EE  141C               	andwf	(??_write_eusartparser+5)^0,w,c
 22299  0029F0  6FBB               	movwf	(_var_sys_NVM+35)& (0+255),b	;volatile
 22300  0029F2  51BC               	movf	(_var_sys_NVM+36)& (0+255),w,b	;volatile
 22301  0029F4  141D               	andwf	(??_write_eusartparser+6)^0,w,c
 22302  0029F6  6FBC               	movwf	(_var_sys_NVM+36)& (0+255),b	;volatile
 22303  0029F8  51BD               	movf	(_var_sys_NVM+37)& (0+255),w,b	;volatile
 22304  0029FA  141E               	andwf	(??_write_eusartparser+7)^0,w,c
 22305  0029FC  6FBD               	movwf	(_var_sys_NVM+37)& (0+255),b	;volatile
 22306                           
 22307                           ;eusartparser.c: 287:                 break;
 22308  0029FE  0012               	return	
 22309  002A00                     l24419:
 22310                           
 22311                           ; BSR set to: 0
 22312                           ;eusartparser.c: 289:                 var_sys_NVM.counterMoves=var_sys_NVM.counterMoves|
      +                          ((uint32_t)(package.data.data16&0xFFFF)<<(uint8_t)(0*16));
 22313  002A00  5012               	movf	(write_eusartparser@package+2)^0,w,c
 22314  002A02  11BA               	iorwf	(_var_sys_NVM+34)& (0+255),w,b	;volatile
 22315  002A04  6FBA               	movwf	(_var_sys_NVM+34)& (0+255),b	;volatile
 22316  002A06  5013               	movf	(write_eusartparser@package+3)^0,w,c
 22317  002A08  11BB               	iorwf	(_var_sys_NVM+35)& (0+255),w,b	;volatile
 22318  002A0A  6FBB               	movwf	(_var_sys_NVM+35)& (0+255),b	;volatile
 22319  002A0C  0E00               	movlw	0
 22320  002A0E  11BC               	iorwf	(_var_sys_NVM+36)& (0+255),w,b	;volatile
 22321  002A10  6FBC               	movwf	(_var_sys_NVM+36)& (0+255),b	;volatile
 22322  002A12  0E00               	movlw	0
 22323  002A14  11BD               	iorwf	(_var_sys_NVM+37)& (0+255),w,b	;volatile
 22324  002A16  6FBD               	movwf	(_var_sys_NVM+37)& (0+255),b	;volatile
 22325                           
 22326                           ;eusartparser.c: 290:                 var_sys_NVM.counterMoves=var_sys_NVM.counterMoves&
      +                          ~((uint32_t)(~package.data.data16&0xFFFF)<<(uint8_t)(0*16));
 22327  002A18  1C12               	comf	(write_eusartparser@package+2)^0,w,c
 22328  002A1A  6E17               	movwf	??_write_eusartparser^0,c
 22329  002A1C  1C13               	comf	(write_eusartparser@package+3)^0,w,c
 22330  002A1E  6E18               	movwf	(??_write_eusartparser+1)^0,c
 22331  002A20  6A19               	clrf	(??_write_eusartparser+2)^0,c
 22332  002A22  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 22333  002A24  1C17               	comf	??_write_eusartparser^0,w,c
 22334  002A26  6E1B               	movwf	(??_write_eusartparser+4)^0,c
 22335  002A28  1C18               	comf	(??_write_eusartparser+1)^0,w,c
 22336  002A2A  6E1C               	movwf	(??_write_eusartparser+5)^0,c
 22337  002A2C  1C19               	comf	(??_write_eusartparser+2)^0,w,c
 22338  002A2E  6E1D               	movwf	(??_write_eusartparser+6)^0,c
 22339  002A30  1C1A               	comf	(??_write_eusartparser+3)^0,w,c
 22340  002A32  6E1E               	movwf	(??_write_eusartparser+7)^0,c
 22341  002A34  51BA               	movf	(_var_sys_NVM+34)& (0+255),w,b	;volatile
 22342  002A36  141B               	andwf	(??_write_eusartparser+4)^0,w,c
 22343  002A38  6FBA               	movwf	(_var_sys_NVM+34)& (0+255),b	;volatile
 22344  002A3A  51BB               	movf	(_var_sys_NVM+35)& (0+255),w,b	;volatile
 22345  002A3C  141C               	andwf	(??_write_eusartparser+5)^0,w,c
 22346  002A3E  6FBB               	movwf	(_var_sys_NVM+35)& (0+255),b	;volatile
 22347  002A40  51BC               	movf	(_var_sys_NVM+36)& (0+255),w,b	;volatile
 22348  002A42  141D               	andwf	(??_write_eusartparser+6)^0,w,c
 22349  002A44  6FBC               	movwf	(_var_sys_NVM+36)& (0+255),b	;volatile
 22350  002A46  51BD               	movf	(_var_sys_NVM+37)& (0+255),w,b	;volatile
 22351  002A48  141E               	andwf	(??_write_eusartparser+7)^0,w,c
 22352  002A4A  6FBD               	movwf	(_var_sys_NVM+37)& (0+255),b	;volatile
 22353                           
 22354                           ;eusartparser.c: 291:                 break;
 22355  002A4C  0012               	return	
 22356  002A4E                     l3644:
 22357                           
 22358                           ; BSR set to: 0
 22359                           ;eusartparser.c: 294:                 var_sys_NVM.OnlyRollingCode=package.data.data8[1];
 22360  002A4E  C013  F0BE         	movff	write_eusartparser@package+3,_var_sys_NVM+38	;volatile
 22361                           
 22362                           ;eusartparser.c: 295:                 break;
 22363  002A52  0012               	return	
 22364  002A54                     l24421:
 22365                           
 22366                           ; BSR set to: 0
 22367                           ;eusartparser.c: 298:                 var_sys_NVM.learningCurrentDecelarationClose=var_s
      +                          ys_NVM.learningCurrentDecelarationClose|((uint32_t)(package.data.data16&0xFFFF)<<(uint8_
      +                          t)(1*16));
 22368  002A54  5012               	movf	(write_eusartparser@package+2)^0,w,c
 22369  002A56  6E17               	movwf	??_write_eusartparser^0,c
 22370  002A58  5013               	movf	(write_eusartparser@package+3)^0,w,c
 22371  002A5A  6E18               	movwf	(??_write_eusartparser+1)^0,c
 22372  002A5C  6A19               	clrf	(??_write_eusartparser+2)^0,c
 22373  002A5E  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 22374  002A60  C018  F01A         	movff	??_write_eusartparser+1,??_write_eusartparser+3
 22375  002A64  C017  F019         	movff	??_write_eusartparser,??_write_eusartparser+2
 22376  002A68  6A18               	clrf	(??_write_eusartparser+1)^0,c
 22377  002A6A  6A17               	clrf	??_write_eusartparser^0,c
 22378  002A6C  51C0               	movf	(_var_sys_NVM+40)& (0+255),w,b	;volatile
 22379  002A6E  1017               	iorwf	??_write_eusartparser^0,w,c
 22380  002A70  6FC0               	movwf	(_var_sys_NVM+40)& (0+255),b	;volatile
 22381  002A72  51C1               	movf	(_var_sys_NVM+41)& (0+255),w,b	;volatile
 22382  002A74  1018               	iorwf	(??_write_eusartparser+1)^0,w,c
 22383  002A76  6FC1               	movwf	(_var_sys_NVM+41)& (0+255),b	;volatile
 22384  002A78  51C2               	movf	(_var_sys_NVM+42)& (0+255),w,b	;volatile
 22385  002A7A  1019               	iorwf	(??_write_eusartparser+2)^0,w,c
 22386  002A7C  6FC2               	movwf	(_var_sys_NVM+42)& (0+255),b	;volatile
 22387  002A7E  51C3               	movf	(_var_sys_NVM+43)& (0+255),w,b	;volatile
 22388  002A80  101A               	iorwf	(??_write_eusartparser+3)^0,w,c
 22389  002A82  6FC3               	movwf	(_var_sys_NVM+43)& (0+255),b	;volatile
 22390                           
 22391                           ;eusartparser.c: 299:                 var_sys_NVM.learningCurrentDecelarationClose=var_s
      +                          ys_NVM.learningCurrentDecelarationClose&~((uint32_t)(~package.data.data16&0xFFFF)<<(uint
      +                          8_t)(1*16));
 22392  002A84  1C12               	comf	(write_eusartparser@package+2)^0,w,c
 22393  002A86  6E17               	movwf	??_write_eusartparser^0,c
 22394  002A88  1C13               	comf	(write_eusartparser@package+3)^0,w,c
 22395  002A8A  6E18               	movwf	(??_write_eusartparser+1)^0,c
 22396  002A8C  6A19               	clrf	(??_write_eusartparser+2)^0,c
 22397  002A8E  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 22398  002A90  C018  F01A         	movff	??_write_eusartparser+1,??_write_eusartparser+3
 22399  002A94  C017  F019         	movff	??_write_eusartparser,??_write_eusartparser+2
 22400  002A98  6A18               	clrf	(??_write_eusartparser+1)^0,c
 22401  002A9A  6A17               	clrf	??_write_eusartparser^0,c
 22402  002A9C  1C17               	comf	??_write_eusartparser^0,w,c
 22403  002A9E  6E1B               	movwf	(??_write_eusartparser+4)^0,c
 22404  002AA0  1C18               	comf	(??_write_eusartparser+1)^0,w,c
 22405  002AA2  6E1C               	movwf	(??_write_eusartparser+5)^0,c
 22406  002AA4  1C19               	comf	(??_write_eusartparser+2)^0,w,c
 22407  002AA6  6E1D               	movwf	(??_write_eusartparser+6)^0,c
 22408  002AA8  1C1A               	comf	(??_write_eusartparser+3)^0,w,c
 22409  002AAA  6E1E               	movwf	(??_write_eusartparser+7)^0,c
 22410  002AAC  51C0               	movf	(_var_sys_NVM+40)& (0+255),w,b	;volatile
 22411  002AAE  141B               	andwf	(??_write_eusartparser+4)^0,w,c
 22412  002AB0  6FC0               	movwf	(_var_sys_NVM+40)& (0+255),b	;volatile
 22413  002AB2  51C1               	movf	(_var_sys_NVM+41)& (0+255),w,b	;volatile
 22414  002AB4  141C               	andwf	(??_write_eusartparser+5)^0,w,c
 22415  002AB6  6FC1               	movwf	(_var_sys_NVM+41)& (0+255),b	;volatile
 22416  002AB8  51C2               	movf	(_var_sys_NVM+42)& (0+255),w,b	;volatile
 22417  002ABA  141D               	andwf	(??_write_eusartparser+6)^0,w,c
 22418  002ABC  6FC2               	movwf	(_var_sys_NVM+42)& (0+255),b	;volatile
 22419  002ABE  51C3               	movf	(_var_sys_NVM+43)& (0+255),w,b	;volatile
 22420  002AC0  141E               	andwf	(??_write_eusartparser+7)^0,w,c
 22421  002AC2  6FC3               	movwf	(_var_sys_NVM+43)& (0+255),b	;volatile
 22422                           
 22423                           ;eusartparser.c: 300:                 break;
 22424  002AC4  0012               	return	
 22425  002AC6                     l24423:
 22426                           
 22427                           ; BSR set to: 0
 22428                           ;eusartparser.c: 302:                 var_sys_NVM.learningCurrentDecelarationClose=var_s
      +                          ys_NVM.learningCurrentDecelarationClose|((uint32_t)(package.data.data16&0xFFFF)<<(uint8_
      +                          t)(0*16));
 22429  002AC6  5012               	movf	(write_eusartparser@package+2)^0,w,c
 22430  002AC8  11C0               	iorwf	(_var_sys_NVM+40)& (0+255),w,b	;volatile
 22431  002ACA  6FC0               	movwf	(_var_sys_NVM+40)& (0+255),b	;volatile
 22432  002ACC  5013               	movf	(write_eusartparser@package+3)^0,w,c
 22433  002ACE  11C1               	iorwf	(_var_sys_NVM+41)& (0+255),w,b	;volatile
 22434  002AD0  6FC1               	movwf	(_var_sys_NVM+41)& (0+255),b	;volatile
 22435  002AD2  0E00               	movlw	0
 22436  002AD4  11C2               	iorwf	(_var_sys_NVM+42)& (0+255),w,b	;volatile
 22437  002AD6  6FC2               	movwf	(_var_sys_NVM+42)& (0+255),b	;volatile
 22438  002AD8  0E00               	movlw	0
 22439  002ADA  11C3               	iorwf	(_var_sys_NVM+43)& (0+255),w,b	;volatile
 22440  002ADC  6FC3               	movwf	(_var_sys_NVM+43)& (0+255),b	;volatile
 22441                           
 22442                           ;eusartparser.c: 303:                 var_sys_NVM.learningCurrentDecelarationClose=var_s
      +                          ys_NVM.learningCurrentDecelarationClose&~((uint32_t)(~package.data.data16&0xFFFF)<<(uint
      +                          8_t)(0*16));
 22443  002ADE  1C12               	comf	(write_eusartparser@package+2)^0,w,c
 22444  002AE0  6E17               	movwf	??_write_eusartparser^0,c
 22445  002AE2  1C13               	comf	(write_eusartparser@package+3)^0,w,c
 22446  002AE4  6E18               	movwf	(??_write_eusartparser+1)^0,c
 22447  002AE6  6A19               	clrf	(??_write_eusartparser+2)^0,c
 22448  002AE8  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 22449  002AEA  1C17               	comf	??_write_eusartparser^0,w,c
 22450  002AEC  6E1B               	movwf	(??_write_eusartparser+4)^0,c
 22451  002AEE  1C18               	comf	(??_write_eusartparser+1)^0,w,c
 22452  002AF0  6E1C               	movwf	(??_write_eusartparser+5)^0,c
 22453  002AF2  1C19               	comf	(??_write_eusartparser+2)^0,w,c
 22454  002AF4  6E1D               	movwf	(??_write_eusartparser+6)^0,c
 22455  002AF6  1C1A               	comf	(??_write_eusartparser+3)^0,w,c
 22456  002AF8  6E1E               	movwf	(??_write_eusartparser+7)^0,c
 22457  002AFA  51C0               	movf	(_var_sys_NVM+40)& (0+255),w,b	;volatile
 22458  002AFC  141B               	andwf	(??_write_eusartparser+4)^0,w,c
 22459  002AFE  6FC0               	movwf	(_var_sys_NVM+40)& (0+255),b	;volatile
 22460  002B00  51C1               	movf	(_var_sys_NVM+41)& (0+255),w,b	;volatile
 22461  002B02  141C               	andwf	(??_write_eusartparser+5)^0,w,c
 22462  002B04  6FC1               	movwf	(_var_sys_NVM+41)& (0+255),b	;volatile
 22463  002B06  51C2               	movf	(_var_sys_NVM+42)& (0+255),w,b	;volatile
 22464  002B08  141D               	andwf	(??_write_eusartparser+6)^0,w,c
 22465  002B0A  6FC2               	movwf	(_var_sys_NVM+42)& (0+255),b	;volatile
 22466  002B0C  51C3               	movf	(_var_sys_NVM+43)& (0+255),w,b	;volatile
 22467  002B0E  141E               	andwf	(??_write_eusartparser+7)^0,w,c
 22468  002B10  6FC3               	movwf	(_var_sys_NVM+43)& (0+255),b	;volatile
 22469                           
 22470                           ;eusartparser.c: 304:                 break;
 22471  002B12  0012               	return	
 22472  002B14                     l24425:
 22473                           
 22474                           ; BSR set to: 0
 22475                           ;eusartparser.c: 307:                 var_sys_NVM.learningCurrentDecelarationOpen=var_sy
      +                          s_NVM.learningCurrentDecelarationOpen|((uint32_t)(package.data.data16&0xFFFF)<<(uint8_t)
      +                          (1*16));
 22476  002B14  5012               	movf	(write_eusartparser@package+2)^0,w,c
 22477  002B16  6E17               	movwf	??_write_eusartparser^0,c
 22478  002B18  5013               	movf	(write_eusartparser@package+3)^0,w,c
 22479  002B1A  6E18               	movwf	(??_write_eusartparser+1)^0,c
 22480  002B1C  6A19               	clrf	(??_write_eusartparser+2)^0,c
 22481  002B1E  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 22482  002B20  C018  F01A         	movff	??_write_eusartparser+1,??_write_eusartparser+3
 22483  002B24  C017  F019         	movff	??_write_eusartparser,??_write_eusartparser+2
 22484  002B28  6A18               	clrf	(??_write_eusartparser+1)^0,c
 22485  002B2A  6A17               	clrf	??_write_eusartparser^0,c
 22486  002B2C  51C4               	movf	(_var_sys_NVM+44)& (0+255),w,b	;volatile
 22487  002B2E  1017               	iorwf	??_write_eusartparser^0,w,c
 22488  002B30  6FC4               	movwf	(_var_sys_NVM+44)& (0+255),b	;volatile
 22489  002B32  51C5               	movf	(_var_sys_NVM+45)& (0+255),w,b	;volatile
 22490  002B34  1018               	iorwf	(??_write_eusartparser+1)^0,w,c
 22491  002B36  6FC5               	movwf	(_var_sys_NVM+45)& (0+255),b	;volatile
 22492  002B38  51C6               	movf	(_var_sys_NVM+46)& (0+255),w,b	;volatile
 22493  002B3A  1019               	iorwf	(??_write_eusartparser+2)^0,w,c
 22494  002B3C  6FC6               	movwf	(_var_sys_NVM+46)& (0+255),b	;volatile
 22495  002B3E  51C7               	movf	(_var_sys_NVM+47)& (0+255),w,b	;volatile
 22496  002B40  101A               	iorwf	(??_write_eusartparser+3)^0,w,c
 22497  002B42  6FC7               	movwf	(_var_sys_NVM+47)& (0+255),b	;volatile
 22498                           
 22499                           ;eusartparser.c: 308:                 var_sys_NVM.learningCurrentDecelarationOpen=var_sy
      +                          s_NVM.learningCurrentDecelarationOpen&~((uint32_t)(~package.data.data16&0xFFFF)<<(uint8_
      +                          t)(1*16));
 22500  002B44  1C12               	comf	(write_eusartparser@package+2)^0,w,c
 22501  002B46  6E17               	movwf	??_write_eusartparser^0,c
 22502  002B48  1C13               	comf	(write_eusartparser@package+3)^0,w,c
 22503  002B4A  6E18               	movwf	(??_write_eusartparser+1)^0,c
 22504  002B4C  6A19               	clrf	(??_write_eusartparser+2)^0,c
 22505  002B4E  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 22506  002B50  C018  F01A         	movff	??_write_eusartparser+1,??_write_eusartparser+3
 22507  002B54  C017  F019         	movff	??_write_eusartparser,??_write_eusartparser+2
 22508  002B58  6A18               	clrf	(??_write_eusartparser+1)^0,c
 22509  002B5A  6A17               	clrf	??_write_eusartparser^0,c
 22510  002B5C  1C17               	comf	??_write_eusartparser^0,w,c
 22511  002B5E  6E1B               	movwf	(??_write_eusartparser+4)^0,c
 22512  002B60  1C18               	comf	(??_write_eusartparser+1)^0,w,c
 22513  002B62  6E1C               	movwf	(??_write_eusartparser+5)^0,c
 22514  002B64  1C19               	comf	(??_write_eusartparser+2)^0,w,c
 22515  002B66  6E1D               	movwf	(??_write_eusartparser+6)^0,c
 22516  002B68  1C1A               	comf	(??_write_eusartparser+3)^0,w,c
 22517  002B6A  6E1E               	movwf	(??_write_eusartparser+7)^0,c
 22518  002B6C  51C4               	movf	(_var_sys_NVM+44)& (0+255),w,b	;volatile
 22519  002B6E  141B               	andwf	(??_write_eusartparser+4)^0,w,c
 22520  002B70  6FC4               	movwf	(_var_sys_NVM+44)& (0+255),b	;volatile
 22521  002B72  51C5               	movf	(_var_sys_NVM+45)& (0+255),w,b	;volatile
 22522  002B74  141C               	andwf	(??_write_eusartparser+5)^0,w,c
 22523  002B76  6FC5               	movwf	(_var_sys_NVM+45)& (0+255),b	;volatile
 22524  002B78  51C6               	movf	(_var_sys_NVM+46)& (0+255),w,b	;volatile
 22525  002B7A  141D               	andwf	(??_write_eusartparser+6)^0,w,c
 22526  002B7C  6FC6               	movwf	(_var_sys_NVM+46)& (0+255),b	;volatile
 22527  002B7E  51C7               	movf	(_var_sys_NVM+47)& (0+255),w,b	;volatile
 22528  002B80  141E               	andwf	(??_write_eusartparser+7)^0,w,c
 22529  002B82  6FC7               	movwf	(_var_sys_NVM+47)& (0+255),b	;volatile
 22530                           
 22531                           ;eusartparser.c: 309:                 break;
 22532  002B84  0012               	return	
 22533  002B86                     l24427:
 22534                           
 22535                           ; BSR set to: 0
 22536                           ;eusartparser.c: 311:                 var_sys_NVM.learningCurrentDecelarationOpen=var_sy
      +                          s_NVM.learningCurrentDecelarationOpen|((uint32_t)(package.data.data16&0xFFFF)<<(uint8_t)
      +                          (0*16));
 22537  002B86  5012               	movf	(write_eusartparser@package+2)^0,w,c
 22538  002B88  11C4               	iorwf	(_var_sys_NVM+44)& (0+255),w,b	;volatile
 22539  002B8A  6FC4               	movwf	(_var_sys_NVM+44)& (0+255),b	;volatile
 22540  002B8C  5013               	movf	(write_eusartparser@package+3)^0,w,c
 22541  002B8E  11C5               	iorwf	(_var_sys_NVM+45)& (0+255),w,b	;volatile
 22542  002B90  6FC5               	movwf	(_var_sys_NVM+45)& (0+255),b	;volatile
 22543  002B92  0E00               	movlw	0
 22544  002B94  11C6               	iorwf	(_var_sys_NVM+46)& (0+255),w,b	;volatile
 22545  002B96  6FC6               	movwf	(_var_sys_NVM+46)& (0+255),b	;volatile
 22546  002B98  0E00               	movlw	0
 22547  002B9A  11C7               	iorwf	(_var_sys_NVM+47)& (0+255),w,b	;volatile
 22548  002B9C  6FC7               	movwf	(_var_sys_NVM+47)& (0+255),b	;volatile
 22549                           
 22550                           ;eusartparser.c: 312:                 var_sys_NVM.learningCurrentDecelarationOpen=var_sy
      +                          s_NVM.learningCurrentDecelarationOpen&~((uint32_t)(~package.data.data16&0xFFFF)<<(uint8_
      +                          t)(0*16));
 22551  002B9E  1C12               	comf	(write_eusartparser@package+2)^0,w,c
 22552  002BA0  6E17               	movwf	??_write_eusartparser^0,c
 22553  002BA2  1C13               	comf	(write_eusartparser@package+3)^0,w,c
 22554  002BA4  6E18               	movwf	(??_write_eusartparser+1)^0,c
 22555  002BA6  6A19               	clrf	(??_write_eusartparser+2)^0,c
 22556  002BA8  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 22557  002BAA  1C17               	comf	??_write_eusartparser^0,w,c
 22558  002BAC  6E1B               	movwf	(??_write_eusartparser+4)^0,c
 22559  002BAE  1C18               	comf	(??_write_eusartparser+1)^0,w,c
 22560  002BB0  6E1C               	movwf	(??_write_eusartparser+5)^0,c
 22561  002BB2  1C19               	comf	(??_write_eusartparser+2)^0,w,c
 22562  002BB4  6E1D               	movwf	(??_write_eusartparser+6)^0,c
 22563  002BB6  1C1A               	comf	(??_write_eusartparser+3)^0,w,c
 22564  002BB8  6E1E               	movwf	(??_write_eusartparser+7)^0,c
 22565  002BBA  51C4               	movf	(_var_sys_NVM+44)& (0+255),w,b	;volatile
 22566  002BBC  141B               	andwf	(??_write_eusartparser+4)^0,w,c
 22567  002BBE  6FC4               	movwf	(_var_sys_NVM+44)& (0+255),b	;volatile
 22568  002BC0  51C5               	movf	(_var_sys_NVM+45)& (0+255),w,b	;volatile
 22569  002BC2  141C               	andwf	(??_write_eusartparser+5)^0,w,c
 22570  002BC4  6FC5               	movwf	(_var_sys_NVM+45)& (0+255),b	;volatile
 22571  002BC6  51C6               	movf	(_var_sys_NVM+46)& (0+255),w,b	;volatile
 22572  002BC8  141D               	andwf	(??_write_eusartparser+6)^0,w,c
 22573  002BCA  6FC6               	movwf	(_var_sys_NVM+46)& (0+255),b	;volatile
 22574  002BCC  51C7               	movf	(_var_sys_NVM+47)& (0+255),w,b	;volatile
 22575  002BCE  141E               	andwf	(??_write_eusartparser+7)^0,w,c
 22576  002BD0  6FC7               	movwf	(_var_sys_NVM+47)& (0+255),b	;volatile
 22577                           
 22578                           ;eusartparser.c: 313:                 break;
 22579  002BD2  0012               	return	
 22580  002BD4                     l3649:
 22581                           
 22582                           ; BSR set to: 0
 22583                           ;eusartparser.c: 316:                 var_sys_NVM.learningCurrentNormalClose=package.dat
      +                          a.data16;
 22584  002BD4  C012  F0C8         	movff	write_eusartparser@package+2,_var_sys_NVM+48	;volatile
 22585  002BD8  C013  F0C9         	movff	write_eusartparser@package+3,_var_sys_NVM+49	;volatile
 22586                           
 22587                           ;eusartparser.c: 317:                 break;
 22588  002BDC  0012               	return	
 22589  002BDE                     l3650:
 22590                           
 22591                           ; BSR set to: 0
 22592                           ;eusartparser.c: 320:                 var_sys_NVM.learningCurrentNormalOpen=package.data
      +                          .data16;
 22593  002BDE  C012  F0CA         	movff	write_eusartparser@package+2,_var_sys_NVM+50	;volatile
 22594  002BE2  C013  F0CB         	movff	write_eusartparser@package+3,_var_sys_NVM+51	;volatile
 22595                           
 22596                           ;eusartparser.c: 321:                 break;
 22597  002BE6  0012               	return	
 22598  002BE8                     l24429:
 22599                           
 22600                           ; BSR set to: 0
 22601                           ;eusartparser.c: 324:                 var_sys_NVM.learningTimeToOpen=var_sys_NVM.learnin
      +                          gTimeToOpen|((uint32_t)(package.data.data16&0xFFFF)<<(uint8_t)(1*16));
 22602  002BE8  5012               	movf	(write_eusartparser@package+2)^0,w,c
 22603  002BEA  6E17               	movwf	??_write_eusartparser^0,c
 22604  002BEC  5013               	movf	(write_eusartparser@package+3)^0,w,c
 22605  002BEE  6E18               	movwf	(??_write_eusartparser+1)^0,c
 22606  002BF0  6A19               	clrf	(??_write_eusartparser+2)^0,c
 22607  002BF2  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 22608  002BF4  C018  F01A         	movff	??_write_eusartparser+1,??_write_eusartparser+3
 22609  002BF8  C017  F019         	movff	??_write_eusartparser,??_write_eusartparser+2
 22610  002BFC  6A18               	clrf	(??_write_eusartparser+1)^0,c
 22611  002BFE  6A17               	clrf	??_write_eusartparser^0,c
 22612  002C00  51CC               	movf	(_var_sys_NVM+52)& (0+255),w,b	;volatile
 22613  002C02  1017               	iorwf	??_write_eusartparser^0,w,c
 22614  002C04  6FCC               	movwf	(_var_sys_NVM+52)& (0+255),b	;volatile
 22615  002C06  51CD               	movf	(_var_sys_NVM+53)& (0+255),w,b	;volatile
 22616  002C08  1018               	iorwf	(??_write_eusartparser+1)^0,w,c
 22617  002C0A  6FCD               	movwf	(_var_sys_NVM+53)& (0+255),b	;volatile
 22618  002C0C  51CE               	movf	(_var_sys_NVM+54)& (0+255),w,b	;volatile
 22619  002C0E  1019               	iorwf	(??_write_eusartparser+2)^0,w,c
 22620  002C10  6FCE               	movwf	(_var_sys_NVM+54)& (0+255),b	;volatile
 22621  002C12  51CF               	movf	(_var_sys_NVM+55)& (0+255),w,b	;volatile
 22622  002C14  101A               	iorwf	(??_write_eusartparser+3)^0,w,c
 22623  002C16  6FCF               	movwf	(_var_sys_NVM+55)& (0+255),b	;volatile
 22624                           
 22625                           ;eusartparser.c: 325:                 var_sys_NVM.learningTimeToOpen=var_sys_NVM.learnin
      +                          gTimeToOpen&~((uint32_t)(~package.data.data16&0xFFFF)<<(uint8_t)(1*16));
 22626  002C18  1C12               	comf	(write_eusartparser@package+2)^0,w,c
 22627  002C1A  6E17               	movwf	??_write_eusartparser^0,c
 22628  002C1C  1C13               	comf	(write_eusartparser@package+3)^0,w,c
 22629  002C1E  6E18               	movwf	(??_write_eusartparser+1)^0,c
 22630  002C20  6A19               	clrf	(??_write_eusartparser+2)^0,c
 22631  002C22  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 22632  002C24  C018  F01A         	movff	??_write_eusartparser+1,??_write_eusartparser+3
 22633  002C28  C017  F019         	movff	??_write_eusartparser,??_write_eusartparser+2
 22634  002C2C  6A18               	clrf	(??_write_eusartparser+1)^0,c
 22635  002C2E  6A17               	clrf	??_write_eusartparser^0,c
 22636  002C30  1C17               	comf	??_write_eusartparser^0,w,c
 22637  002C32  6E1B               	movwf	(??_write_eusartparser+4)^0,c
 22638  002C34  1C18               	comf	(??_write_eusartparser+1)^0,w,c
 22639  002C36  6E1C               	movwf	(??_write_eusartparser+5)^0,c
 22640  002C38  1C19               	comf	(??_write_eusartparser+2)^0,w,c
 22641  002C3A  6E1D               	movwf	(??_write_eusartparser+6)^0,c
 22642  002C3C  1C1A               	comf	(??_write_eusartparser+3)^0,w,c
 22643  002C3E  6E1E               	movwf	(??_write_eusartparser+7)^0,c
 22644  002C40  51CC               	movf	(_var_sys_NVM+52)& (0+255),w,b	;volatile
 22645  002C42  141B               	andwf	(??_write_eusartparser+4)^0,w,c
 22646  002C44  6FCC               	movwf	(_var_sys_NVM+52)& (0+255),b	;volatile
 22647  002C46  51CD               	movf	(_var_sys_NVM+53)& (0+255),w,b	;volatile
 22648  002C48  141C               	andwf	(??_write_eusartparser+5)^0,w,c
 22649  002C4A  6FCD               	movwf	(_var_sys_NVM+53)& (0+255),b	;volatile
 22650  002C4C  51CE               	movf	(_var_sys_NVM+54)& (0+255),w,b	;volatile
 22651  002C4E  141D               	andwf	(??_write_eusartparser+6)^0,w,c
 22652  002C50  6FCE               	movwf	(_var_sys_NVM+54)& (0+255),b	;volatile
 22653  002C52  51CF               	movf	(_var_sys_NVM+55)& (0+255),w,b	;volatile
 22654  002C54  141E               	andwf	(??_write_eusartparser+7)^0,w,c
 22655  002C56  6FCF               	movwf	(_var_sys_NVM+55)& (0+255),b	;volatile
 22656                           
 22657                           ;eusartparser.c: 326:                 break;
 22658  002C58  0012               	return	
 22659  002C5A                     l24431:
 22660                           
 22661                           ; BSR set to: 0
 22662                           ;eusartparser.c: 328:                 var_sys_NVM.learningTimeToOpen=var_sys_NVM.learnin
      +                          gTimeToOpen|((uint32_t)(package.data.data16&0xFFFF)<<(uint8_t)(0*16));
 22663  002C5A  5012               	movf	(write_eusartparser@package+2)^0,w,c
 22664  002C5C  11CC               	iorwf	(_var_sys_NVM+52)& (0+255),w,b	;volatile
 22665  002C5E  6FCC               	movwf	(_var_sys_NVM+52)& (0+255),b	;volatile
 22666  002C60  5013               	movf	(write_eusartparser@package+3)^0,w,c
 22667  002C62  11CD               	iorwf	(_var_sys_NVM+53)& (0+255),w,b	;volatile
 22668  002C64  6FCD               	movwf	(_var_sys_NVM+53)& (0+255),b	;volatile
 22669  002C66  0E00               	movlw	0
 22670  002C68  11CE               	iorwf	(_var_sys_NVM+54)& (0+255),w,b	;volatile
 22671  002C6A  6FCE               	movwf	(_var_sys_NVM+54)& (0+255),b	;volatile
 22672  002C6C  0E00               	movlw	0
 22673  002C6E  11CF               	iorwf	(_var_sys_NVM+55)& (0+255),w,b	;volatile
 22674  002C70  6FCF               	movwf	(_var_sys_NVM+55)& (0+255),b	;volatile
 22675                           
 22676                           ;eusartparser.c: 329:                 var_sys_NVM.learningTimeToOpen=var_sys_NVM.learnin
      +                          gTimeToOpen&~((uint32_t)(~package.data.data16&0xFFFF)<<(uint8_t)(0*16));
 22677  002C72  1C12               	comf	(write_eusartparser@package+2)^0,w,c
 22678  002C74  6E17               	movwf	??_write_eusartparser^0,c
 22679  002C76  1C13               	comf	(write_eusartparser@package+3)^0,w,c
 22680  002C78  6E18               	movwf	(??_write_eusartparser+1)^0,c
 22681  002C7A  6A19               	clrf	(??_write_eusartparser+2)^0,c
 22682  002C7C  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 22683  002C7E  1C17               	comf	??_write_eusartparser^0,w,c
 22684  002C80  6E1B               	movwf	(??_write_eusartparser+4)^0,c
 22685  002C82  1C18               	comf	(??_write_eusartparser+1)^0,w,c
 22686  002C84  6E1C               	movwf	(??_write_eusartparser+5)^0,c
 22687  002C86  1C19               	comf	(??_write_eusartparser+2)^0,w,c
 22688  002C88  6E1D               	movwf	(??_write_eusartparser+6)^0,c
 22689  002C8A  1C1A               	comf	(??_write_eusartparser+3)^0,w,c
 22690  002C8C  6E1E               	movwf	(??_write_eusartparser+7)^0,c
 22691  002C8E  51CC               	movf	(_var_sys_NVM+52)& (0+255),w,b	;volatile
 22692  002C90  141B               	andwf	(??_write_eusartparser+4)^0,w,c
 22693  002C92  6FCC               	movwf	(_var_sys_NVM+52)& (0+255),b	;volatile
 22694  002C94  51CD               	movf	(_var_sys_NVM+53)& (0+255),w,b	;volatile
 22695  002C96  141C               	andwf	(??_write_eusartparser+5)^0,w,c
 22696  002C98  6FCD               	movwf	(_var_sys_NVM+53)& (0+255),b	;volatile
 22697  002C9A  51CE               	movf	(_var_sys_NVM+54)& (0+255),w,b	;volatile
 22698  002C9C  141D               	andwf	(??_write_eusartparser+6)^0,w,c
 22699  002C9E  6FCE               	movwf	(_var_sys_NVM+54)& (0+255),b	;volatile
 22700  002CA0  51CF               	movf	(_var_sys_NVM+55)& (0+255),w,b	;volatile
 22701  002CA2  141E               	andwf	(??_write_eusartparser+7)^0,w,c
 22702  002CA4  6FCF               	movwf	(_var_sys_NVM+55)& (0+255),b	;volatile
 22703                           
 22704                           ;eusartparser.c: 330:                 break;
 22705  002CA6  0012               	return	
 22706  002CA8                     l24433:
 22707                           
 22708                           ; BSR set to: 0
 22709                           ;eusartparser.c: 333:                 var_sys_NVM.learningTimeToClose=var_sys_NVM.learni
      +                          ngTimeToClose|((uint32_t)(package.data.data16&0xFFFF)<<(uint8_t)(1*16));
 22710  002CA8  5012               	movf	(write_eusartparser@package+2)^0,w,c
 22711  002CAA  6E17               	movwf	??_write_eusartparser^0,c
 22712  002CAC  5013               	movf	(write_eusartparser@package+3)^0,w,c
 22713  002CAE  6E18               	movwf	(??_write_eusartparser+1)^0,c
 22714  002CB0  6A19               	clrf	(??_write_eusartparser+2)^0,c
 22715  002CB2  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 22716  002CB4  C018  F01A         	movff	??_write_eusartparser+1,??_write_eusartparser+3
 22717  002CB8  C017  F019         	movff	??_write_eusartparser,??_write_eusartparser+2
 22718  002CBC  6A18               	clrf	(??_write_eusartparser+1)^0,c
 22719  002CBE  6A17               	clrf	??_write_eusartparser^0,c
 22720  002CC0  51D0               	movf	(_var_sys_NVM+56)& (0+255),w,b	;volatile
 22721  002CC2  1017               	iorwf	??_write_eusartparser^0,w,c
 22722  002CC4  6FD0               	movwf	(_var_sys_NVM+56)& (0+255),b	;volatile
 22723  002CC6  51D1               	movf	(_var_sys_NVM+57)& (0+255),w,b	;volatile
 22724  002CC8  1018               	iorwf	(??_write_eusartparser+1)^0,w,c
 22725  002CCA  6FD1               	movwf	(_var_sys_NVM+57)& (0+255),b	;volatile
 22726  002CCC  51D2               	movf	(_var_sys_NVM+58)& (0+255),w,b	;volatile
 22727  002CCE  1019               	iorwf	(??_write_eusartparser+2)^0,w,c
 22728  002CD0  6FD2               	movwf	(_var_sys_NVM+58)& (0+255),b	;volatile
 22729  002CD2  51D3               	movf	(_var_sys_NVM+59)& (0+255),w,b	;volatile
 22730  002CD4  101A               	iorwf	(??_write_eusartparser+3)^0,w,c
 22731  002CD6  6FD3               	movwf	(_var_sys_NVM+59)& (0+255),b	;volatile
 22732                           
 22733                           ;eusartparser.c: 334:                 var_sys_NVM.learningTimeToClose=var_sys_NVM.learni
      +                          ngTimeToClose&~((uint32_t)(~package.data.data16&0xFFFF)<<(uint8_t)(1*16));
 22734  002CD8  1C12               	comf	(write_eusartparser@package+2)^0,w,c
 22735  002CDA  6E17               	movwf	??_write_eusartparser^0,c
 22736  002CDC  1C13               	comf	(write_eusartparser@package+3)^0,w,c
 22737  002CDE  6E18               	movwf	(??_write_eusartparser+1)^0,c
 22738  002CE0  6A19               	clrf	(??_write_eusartparser+2)^0,c
 22739  002CE2  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 22740  002CE4  C018  F01A         	movff	??_write_eusartparser+1,??_write_eusartparser+3
 22741  002CE8  C017  F019         	movff	??_write_eusartparser,??_write_eusartparser+2
 22742  002CEC  6A18               	clrf	(??_write_eusartparser+1)^0,c
 22743  002CEE  6A17               	clrf	??_write_eusartparser^0,c
 22744  002CF0  1C17               	comf	??_write_eusartparser^0,w,c
 22745  002CF2  6E1B               	movwf	(??_write_eusartparser+4)^0,c
 22746  002CF4  1C18               	comf	(??_write_eusartparser+1)^0,w,c
 22747  002CF6  6E1C               	movwf	(??_write_eusartparser+5)^0,c
 22748  002CF8  1C19               	comf	(??_write_eusartparser+2)^0,w,c
 22749  002CFA  6E1D               	movwf	(??_write_eusartparser+6)^0,c
 22750  002CFC  1C1A               	comf	(??_write_eusartparser+3)^0,w,c
 22751  002CFE  6E1E               	movwf	(??_write_eusartparser+7)^0,c
 22752  002D00  51D0               	movf	(_var_sys_NVM+56)& (0+255),w,b	;volatile
 22753  002D02  141B               	andwf	(??_write_eusartparser+4)^0,w,c
 22754  002D04  6FD0               	movwf	(_var_sys_NVM+56)& (0+255),b	;volatile
 22755  002D06  51D1               	movf	(_var_sys_NVM+57)& (0+255),w,b	;volatile
 22756  002D08  141C               	andwf	(??_write_eusartparser+5)^0,w,c
 22757  002D0A  6FD1               	movwf	(_var_sys_NVM+57)& (0+255),b	;volatile
 22758  002D0C  51D2               	movf	(_var_sys_NVM+58)& (0+255),w,b	;volatile
 22759  002D0E  141D               	andwf	(??_write_eusartparser+6)^0,w,c
 22760  002D10  6FD2               	movwf	(_var_sys_NVM+58)& (0+255),b	;volatile
 22761  002D12  51D3               	movf	(_var_sys_NVM+59)& (0+255),w,b	;volatile
 22762  002D14  141E               	andwf	(??_write_eusartparser+7)^0,w,c
 22763  002D16  6FD3               	movwf	(_var_sys_NVM+59)& (0+255),b	;volatile
 22764                           
 22765                           ;eusartparser.c: 335:                 break;
 22766  002D18  0012               	return	
 22767  002D1A                     l24435:
 22768                           
 22769                           ; BSR set to: 0
 22770                           ;eusartparser.c: 337:                 var_sys_NVM.learningTimeToClose=var_sys_NVM.learni
      +                          ngTimeToClose|((uint32_t)(package.data.data16&0xFFFF)<<(uint8_t)(0*16));
 22771  002D1A  5012               	movf	(write_eusartparser@package+2)^0,w,c
 22772  002D1C  11D0               	iorwf	(_var_sys_NVM+56)& (0+255),w,b	;volatile
 22773  002D1E  6FD0               	movwf	(_var_sys_NVM+56)& (0+255),b	;volatile
 22774  002D20  5013               	movf	(write_eusartparser@package+3)^0,w,c
 22775  002D22  11D1               	iorwf	(_var_sys_NVM+57)& (0+255),w,b	;volatile
 22776  002D24  6FD1               	movwf	(_var_sys_NVM+57)& (0+255),b	;volatile
 22777  002D26  0E00               	movlw	0
 22778  002D28  11D2               	iorwf	(_var_sys_NVM+58)& (0+255),w,b	;volatile
 22779  002D2A  6FD2               	movwf	(_var_sys_NVM+58)& (0+255),b	;volatile
 22780  002D2C  0E00               	movlw	0
 22781  002D2E  11D3               	iorwf	(_var_sys_NVM+59)& (0+255),w,b	;volatile
 22782  002D30  6FD3               	movwf	(_var_sys_NVM+59)& (0+255),b	;volatile
 22783                           
 22784                           ;eusartparser.c: 338:                 var_sys_NVM.learningTimeToClose=var_sys_NVM.learni
      +                          ngTimeToClose&~((uint32_t)(~package.data.data16&0xFFFF)<<(uint8_t)(0*16));
 22785  002D32  1C12               	comf	(write_eusartparser@package+2)^0,w,c
 22786  002D34  6E17               	movwf	??_write_eusartparser^0,c
 22787  002D36  1C13               	comf	(write_eusartparser@package+3)^0,w,c
 22788  002D38  6E18               	movwf	(??_write_eusartparser+1)^0,c
 22789  002D3A  6A19               	clrf	(??_write_eusartparser+2)^0,c
 22790  002D3C  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 22791  002D3E  1C17               	comf	??_write_eusartparser^0,w,c
 22792  002D40  6E1B               	movwf	(??_write_eusartparser+4)^0,c
 22793  002D42  1C18               	comf	(??_write_eusartparser+1)^0,w,c
 22794  002D44  6E1C               	movwf	(??_write_eusartparser+5)^0,c
 22795  002D46  1C19               	comf	(??_write_eusartparser+2)^0,w,c
 22796  002D48  6E1D               	movwf	(??_write_eusartparser+6)^0,c
 22797  002D4A  1C1A               	comf	(??_write_eusartparser+3)^0,w,c
 22798  002D4C  6E1E               	movwf	(??_write_eusartparser+7)^0,c
 22799  002D4E  51D0               	movf	(_var_sys_NVM+56)& (0+255),w,b	;volatile
 22800  002D50  141B               	andwf	(??_write_eusartparser+4)^0,w,c
 22801  002D52  6FD0               	movwf	(_var_sys_NVM+56)& (0+255),b	;volatile
 22802  002D54  51D1               	movf	(_var_sys_NVM+57)& (0+255),w,b	;volatile
 22803  002D56  141C               	andwf	(??_write_eusartparser+5)^0,w,c
 22804  002D58  6FD1               	movwf	(_var_sys_NVM+57)& (0+255),b	;volatile
 22805  002D5A  51D2               	movf	(_var_sys_NVM+58)& (0+255),w,b	;volatile
 22806  002D5C  141D               	andwf	(??_write_eusartparser+6)^0,w,c
 22807  002D5E  6FD2               	movwf	(_var_sys_NVM+58)& (0+255),b	;volatile
 22808  002D60  51D3               	movf	(_var_sys_NVM+59)& (0+255),w,b	;volatile
 22809  002D62  141E               	andwf	(??_write_eusartparser+7)^0,w,c
 22810  002D64  6FD3               	movwf	(_var_sys_NVM+59)& (0+255),b	;volatile
 22811                           
 22812                           ;eusartparser.c: 339:                 break;
 22813  002D66  0012               	return	
 22814  002D68                     l24439:
 22815                           
 22816                           ; BSR set to: 0
 22817  002D68  5011               	movf	(write_eusartparser@package+1)^0,w,c
 22818  002D6A  6E17               	movwf	??_write_eusartparser^0,c
 22819  002D6C  6A18               	clrf	(??_write_eusartparser+1)^0,c
 22820                           
 22821                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 22822                           ; Switch size 1, requested type "simple"
 22823                           ; Number of cases is 1, Range of values is 0 to 0
 22824                           ; switch strategies available:
 22825                           ; Name         Instructions Cycles
 22826                           ; simple_byte            4     3 (average)
 22827                           ;	Chosen strategy is simple_byte
 22828  002D6E  5018               	movf	(??_write_eusartparser+1)^0,w,c
 22829  002D70  0A00               	xorlw	0	; case 0
 22830  002D72  A4D8               	btfss	status,2,c
 22831  002D74  0012               	return	
 22832                           
 22833                           ; BSR set to: 0
 22834                           ; Switch size 1, requested type "simple"
 22835                           ; Number of cases is 43, Range of values is 0 to 51
 22836                           ; switch strategies available:
 22837                           ; Name         Instructions Cycles
 22838                           ; simple_byte          130    66 (average)
 22839                           ;	Chosen strategy is simple_byte
 22840  002D76  5017               	movf	??_write_eusartparser^0,w,c
 22841  002D78  0A00               	xorlw	0	; case 0
 22842  002D7A  B4D8               	btfsc	status,2,c
 22843  002D7C  D5B5               	goto	l3612
 22844  002D7E  0A02               	xorlw	2	; case 2
 22845  002D80  B4D8               	btfsc	status,2,c
 22846  002D82  D5BF               	goto	l3617
 22847  002D84  0A01               	xorlw	1	; case 3
 22848  002D86  B4D8               	btfsc	status,2,c
 22849  002D88  D5E5               	goto	l3631
 22850  002D8A  0A06               	xorlw	6	; case 5
 22851  002D8C  B4D8               	btfsc	status,2,c
 22852  002D8E  D5BE               	goto	l3619
 22853  002D90  0A02               	xorlw	2	; case 7
 22854  002D92  B4D8               	btfsc	status,2,c
 22855  002D94  D5D7               	goto	l3628
 22856  002D96  0A0F               	xorlw	15	; case 8
 22857  002D98  B4D8               	btfsc	status,2,c
 22858  002D9A  D5EB               	goto	l3638
 22859  002D9C  0A02               	xorlw	2	; case 10
 22860  002D9E  B4D8               	btfsc	status,2,c
 22861  002DA0  D5DC               	goto	l3633
 22862  002DA2  0A1A               	xorlw	26	; case 16
 22863  002DA4  B4D8               	btfsc	status,2,c
 22864  002DA6  D5A0               	goto	l3612
 22865  002DA8  0A01               	xorlw	1	; case 17
 22866  002DAA  B4D8               	btfsc	status,2,c
 22867  002DAC  D5A2               	goto	l3614
 22868  002DAE  0A03               	xorlw	3	; case 18
 22869  002DB0  B4D8               	btfsc	status,2,c
 22870  002DB2  D5A4               	goto	l3615
 22871  002DB4  0A01               	xorlw	1	; case 19
 22872  002DB6  B4D8               	btfsc	status,2,c
 22873  002DB8  D5A4               	goto	l3617
 22874  002DBA  0A07               	xorlw	7	; case 20
 22875  002DBC  B4D8               	btfsc	status,2,c
 22876  002DBE  D5A6               	goto	l3619
 22877  002DC0  0A01               	xorlw	1	; case 21
 22878  002DC2  B4D8               	btfsc	status,2,c
 22879  002DC4  D5A8               	goto	l3620
 22880  002DC6  0A03               	xorlw	3	; case 22
 22881  002DC8  B4D8               	btfsc	status,2,c
 22882  002DCA  D5AA               	goto	l3621
 22883  002DCC  0A01               	xorlw	1	; case 23
 22884  002DCE  B4D8               	btfsc	status,2,c
 22885  002DD0  D5AA               	goto	l3622
 22886  002DD2  0A0F               	xorlw	15	; case 24
 22887  002DD4  B4D8               	btfsc	status,2,c
 22888  002DD6  D5AA               	goto	l3623
 22889  002DD8  0A01               	xorlw	1	; case 25
 22890  002DDA  B4D8               	btfsc	status,2,c
 22891  002DDC  D5AA               	goto	l3624
 22892  002DDE  0A03               	xorlw	3	; case 26
 22893  002DE0  B4D8               	btfsc	status,2,c
 22894  002DE2  D5AA               	goto	l3625
 22895  002DE4  0A01               	xorlw	1	; case 27
 22896  002DE6  B4D8               	btfsc	status,2,c
 22897  002DE8  D5AA               	goto	l3626
 22898  002DEA  0A07               	xorlw	7	; case 28
 22899  002DEC  B4D8               	btfsc	status,2,c
 22900  002DEE  D5AA               	goto	l3628
 22901  002DF0  0A01               	xorlw	1	; case 29
 22902  002DF2  B4D8               	btfsc	status,2,c
 22903  002DF4  D5AA               	goto	l3629
 22904  002DF6  0A03               	xorlw	3	; case 30
 22905  002DF8  B4D8               	btfsc	status,2,c
 22906  002DFA  D5AC               	goto	l3631
 22907  002DFC  0A01               	xorlw	1	; case 31
 22908  002DFE  B4D8               	btfsc	status,2,c
 22909  002E00  D5AC               	goto	l3633
 22910  002E02  0A3F               	xorlw	63	; case 32
 22911  002E04  B4D8               	btfsc	status,2,c
 22912  002E06  D5AC               	goto	l3634
 22913  002E08  0A01               	xorlw	1	; case 33
 22914  002E0A  B4D8               	btfsc	status,2,c
 22915  002E0C  D5AC               	goto	l3635
 22916  002E0E  0A03               	xorlw	3	; case 34
 22917  002E10  B4D8               	btfsc	status,2,c
 22918  002E12  D5AC               	goto	l3636
 22919  002E14  0A01               	xorlw	1	; case 35
 22920  002E16  B4D8               	btfsc	status,2,c
 22921  002E18  D5AC               	goto	l3638
 22922  002E1A  0A07               	xorlw	7	; case 36
 22923  002E1C  B4D8               	btfsc	status,2,c
 22924  002E1E  D5AC               	goto	l3639
 22925  002E20  0A01               	xorlw	1	; case 37
 22926  002E22  B4D8               	btfsc	status,2,c
 22927  002E24  D5AC               	goto	l3640
 22928  002E26  0A03               	xorlw	3	; case 38
 22929  002E28  B4D8               	btfsc	status,2,c
 22930  002E2A  D5AC               	goto	l3641
 22931  002E2C  0A01               	xorlw	1	; case 39
 22932  002E2E  B4D8               	btfsc	status,2,c
 22933  002E30  D5AE               	goto	l24417
 22934  002E32  0A0F               	xorlw	15	; case 40
 22935  002E34  B4D8               	btfsc	status,2,c
 22936  002E36  D5E4               	goto	l24419
 22937  002E38  0A01               	xorlw	1	; case 41
 22938  002E3A  B4D8               	btfsc	status,2,c
 22939  002E3C  D608               	goto	l3644
 22940  002E3E  0A03               	xorlw	3	; case 42
 22941  002E40  B4D8               	btfsc	status,2,c
 22942  002E42  D608               	goto	l24421
 22943  002E44  0A01               	xorlw	1	; case 43
 22944  002E46  B4D8               	btfsc	status,2,c
 22945  002E48  D63E               	goto	l24423
 22946  002E4A  0A07               	xorlw	7	; case 44
 22947  002E4C  B4D8               	btfsc	status,2,c
 22948  002E4E  D662               	goto	l24425
 22949  002E50  0A01               	xorlw	1	; case 45
 22950  002E52  B4D8               	btfsc	status,2,c
 22951  002E54  D698               	goto	l24427
 22952  002E56  0A03               	xorlw	3	; case 46
 22953  002E58  B4D8               	btfsc	status,2,c
 22954  002E5A  D6BC               	goto	l3649
 22955  002E5C  0A01               	xorlw	1	; case 47
 22956  002E5E  B4D8               	btfsc	status,2,c
 22957  002E60  D6BE               	goto	l3650
 22958  002E62  0A1F               	xorlw	31	; case 48
 22959  002E64  B4D8               	btfsc	status,2,c
 22960  002E66  D6C0               	goto	l24429
 22961  002E68  0A01               	xorlw	1	; case 49
 22962  002E6A  B4D8               	btfsc	status,2,c
 22963  002E6C  D6F6               	goto	l24431
 22964  002E6E  0A03               	xorlw	3	; case 50
 22965  002E70  B4D8               	btfsc	status,2,c
 22966  002E72  D71A               	goto	l24433
 22967  002E74  0A01               	xorlw	1	; case 51
 22968  002E76  A4D8               	btfss	status,2,c
 22969  002E78  0012               	return	
 22970  002E7A  D74F               	goto	l24435
 22971  002E7C                     __end_of_write_eusartparser:
 22972                           	callstack 0
 22973                           
 22974 ;; *************** function _validateRemoteSerialNumber *****************
 22975 ;; Defined at:
 22976 ;;		line 27 in file "controlMemory_MC50.c"
 22977 ;; Parameters:    Size  Location     Type
 22978 ;;  serial          4   45[COMRAM] unsigned long 
 22979 ;;  VerifyOnlySe    1   49[COMRAM] enum E10564
 22980 ;;  position        2   50[COMRAM] PTR unsigned char 
 22981 ;;		 -> eusartparser@pos(1), controlSelectRemote@pos(1), classic_data(16), 
 22982 ;; Auto vars:     Size  Location     Type
 22983 ;;  mask            4   52[COMRAM] unsigned long 
 22984 ;;  i               1   57[COMRAM] unsigned char 
 22985 ;;  j               1   56[COMRAM] unsigned char 
 22986 ;; Return value:  Size  Location     Type
 22987 ;;                  1    wreg      enum E10539
 22988 ;; Registers used:
 22989 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22990 ;; Tracked objects:
 22991 ;;		On entry : 3F/0
 22992 ;;		On exit  : 3F/0
 22993 ;;		Unchanged: 0/0
 22994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22995 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22996 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22997 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22998 ;;      Totals:        13       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22999 ;;Total ram usage:       21 bytes
 23000 ;; Hardware stack levels used: 1
 23001 ;; Hardware stack levels required when called: 13
 23002 ;; This function calls:
 23003 ;;		_i2c_readDataBlock
 23004 ;; This function is called by:
 23005 ;;		_keeloqDecryptPacket
 23006 ;;		_DecryptPacket_12BIT
 23007 ;;		_controlSelectRemote
 23008 ;;		_eusartparser
 23009 ;; This function uses a non-reentrant model
 23010 ;;
 23011                           
 23012                           	psect	text76
 23013  0060A4                     __ptext76:
 23014                           	callstack 0
 23015  0060A4                     _validateRemoteSerialNumber:
 23016                           	callstack 14
 23017                           
 23018                           ; BSR set to: 0
 23019                           ;controlMemory_MC50.c: 29:     char j=0;
 23020                           
 23021                           ; BSR set to: 0
 23022                           ;incstack = 0
 23023  0060A4  0E00               	movlw	0
 23024  0060A6  6E39               	movwf	validateRemoteSerialNumber@j^0,c
 23025                           
 23026                           ; BSR set to: 0
 23027                           ;controlMemory_MC50.c: 30:     unsigned long mask;;controlMemory_MC50.c: 33:     if(Veri
      +                          fyOnlySerial==YES)
 23028  0060A8  0432               	decf	validateRemoteSerialNumber@VerifyOnlySerial^0,w,c
 23029  0060AA  A4D8               	btfss	status,2,c
 23030  0060AC  D009               	goto	l1436
 23031                           
 23032                           ; BSR set to: 0
 23033                           ;controlMemory_MC50.c: 34:     {;controlMemory_MC50.c: 35:         mask=0x0FFFFFFF;
 23034  0060AE  0EFF               	movlw	255
 23035  0060B0  6E35               	movwf	validateRemoteSerialNumber@mask^0,c
 23036  0060B2  0EFF               	movlw	255
 23037  0060B4  6E36               	movwf	(validateRemoteSerialNumber@mask+1)^0,c
 23038  0060B6  0EFF               	movlw	255
 23039  0060B8  6E37               	movwf	(validateRemoteSerialNumber@mask+2)^0,c
 23040  0060BA  0E0F               	movlw	15
 23041  0060BC  6E38               	movwf	(validateRemoteSerialNumber@mask+3)^0,c
 23042                           
 23043                           ;controlMemory_MC50.c: 36:     }
 23044  0060BE  D004               	goto	l20659
 23045  0060C0                     l1436:
 23046                           
 23047                           ; BSR set to: 0
 23048                           ;controlMemory_MC50.c: 38:     {;controlMemory_MC50.c: 39:         mask=0xFFFFFFFF;
 23049  0060C0  6835               	setf	validateRemoteSerialNumber@mask^0,c
 23050  0060C2  6836               	setf	(validateRemoteSerialNumber@mask+1)^0,c
 23051  0060C4  6837               	setf	(validateRemoteSerialNumber@mask+2)^0,c
 23052  0060C6  6838               	setf	(validateRemoteSerialNumber@mask+3)^0,c
 23053  0060C8                     l20659:
 23054                           
 23055                           ; BSR set to: 0
 23056                           ;controlMemory_MC50.c: 42:     for (i=0;i<var_sys_NVM.positionRemotesFull;i++)
 23057  0060C8  0E00               	movlw	0
 23058  0060CA  6E3A               	movwf	validateRemoteSerialNumber@i^0,c
 23059  0060CC  D056               	goto	l20677
 23060  0060CE                     l20661:
 23061                           
 23062                           ; BSR set to: 0
 23063                           ;controlMemory_MC50.c: 43:     {;controlMemory_MC50.c: 44:         if(i%4==0)
 23064  0060CE  C03A  F0D8         	movff	validateRemoteSerialNumber@i,??_validateRemoteSerialNumber
 23065  0060D2  0E03               	movlw	3
 23066  0060D4  17D8               	andwf	??_validateRemoteSerialNumber& (0+255),f,b
 23067  0060D6  A4D8               	btfss	status,2,c
 23068  0060D8  D01C               	goto	l20667
 23069                           
 23070                           ; BSR set to: 0
 23071                           ;controlMemory_MC50.c: 45:         {;controlMemory_MC50.c: 46:             j=0;
 23072  0060DA  0E00               	movlw	0
 23073  0060DC  6E39               	movwf	validateRemoteSerialNumber@j^0,c
 23074                           
 23075                           ; BSR set to: 0
 23076                           ;controlMemory_MC50.c: 48:             i2c_readDataBlock(0x50, (uint16_t)(0x0200 + (i * 
      +                          4)),(char*)memoryTEMP, 16);
 23077  0060DE  503A               	movf	validateRemoteSerialNumber@i^0,w,c
 23078  0060E0  6FD8               	movwf	??_validateRemoteSerialNumber& (0+255),b
 23079  0060E2  6BD9               	clrf	(??_validateRemoteSerialNumber+1)& (0+255),b
 23080  0060E4  90D8               	bcf	status,0,c
 23081  0060E6  37D8               	rlcf	??_validateRemoteSerialNumber& (0+255),f,b
 23082  0060E8  37D9               	rlcf	(??_validateRemoteSerialNumber+1)& (0+255),f,b
 23083  0060EA  90D8               	bcf	status,0,c
 23084  0060EC  37D8               	rlcf	??_validateRemoteSerialNumber& (0+255),f,b
 23085  0060EE  37D9               	rlcf	(??_validateRemoteSerialNumber+1)& (0+255),f,b
 23086  0060F0  0E00               	movlw	0
 23087  0060F2  25D8               	addwf	??_validateRemoteSerialNumber& (0+255),w,b
 23088  0060F4  6E22               	movwf	i2c_readDataBlock@reg^0,c
 23089  0060F6  0E02               	movlw	2
 23090  0060F8  21D9               	addwfc	(??_validateRemoteSerialNumber+1)& (0+255),w,b
 23091  0060FA  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 23092  0060FC  0EA0               	movlw	low _memoryTEMP
 23093  0060FE  6E24               	movwf	i2c_readDataBlock@data^0,c
 23094  006100  0E02               	movlw	high _memoryTEMP
 23095  006102  6E25               	movwf	(i2c_readDataBlock@data+1)^0,c
 23096  006104  0E00               	movlw	0
 23097  006106  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 23098  006108  0E10               	movlw	16
 23099  00610A  6E26               	movwf	i2c_readDataBlock@len^0,c
 23100  00610C  0E50               	movlw	80
 23101  00610E  EC45  F044         	call	_i2c_readDataBlock
 23102  006112                     l20667:
 23103                           
 23104                           ;controlMemory_MC50.c: 50:         if((unsigned long)serial==((unsigned long)memoryTEMP[
      +                          j]&mask))
 23105  006112  5039               	movf	validateRemoteSerialNumber@j^0,w,c
 23106  006114  0D04               	mullw	4
 23107  006116  0EA0               	movlw	low _memoryTEMP
 23108  006118  24F3               	addwf	243,w,c
 23109  00611A  6ED9               	movwf	fsr2l,c
 23110  00611C  0E02               	movlw	high _memoryTEMP
 23111  00611E  20F4               	addwfc	prodh,w,c
 23112  006120  6EDA               	movwf	fsr2h,c
 23113  006122  CFDE F0D8          	movff	postinc2,??_validateRemoteSerialNumber
 23114  006126  CFDE F0D9          	movff	postinc2,??_validateRemoteSerialNumber+1
 23115  00612A  CFDE F0DA          	movff	postinc2,??_validateRemoteSerialNumber+2
 23116  00612E  CFDE F0DB          	movff	postinc2,??_validateRemoteSerialNumber+3
 23117  006132  5035               	movf	validateRemoteSerialNumber@mask^0,w,c
 23118  006134  0100               	movlb	0	; () banked
 23119  006136  15D8               	andwf	??_validateRemoteSerialNumber& (0+255),w,b
 23120  006138  6FDC               	movwf	(??_validateRemoteSerialNumber+4)& (0+255),b
 23121  00613A  5036               	movf	(validateRemoteSerialNumber@mask+1)^0,w,c
 23122  00613C  15D9               	andwf	(??_validateRemoteSerialNumber+1)& (0+255),w,b
 23123  00613E  6FDD               	movwf	(??_validateRemoteSerialNumber+5)& (0+255),b
 23124  006140  5037               	movf	(validateRemoteSerialNumber@mask+2)^0,w,c
 23125  006142  15DA               	andwf	(??_validateRemoteSerialNumber+2)& (0+255),w,b
 23126  006144  6FDE               	movwf	(??_validateRemoteSerialNumber+6)& (0+255),b
 23127  006146  5038               	movf	(validateRemoteSerialNumber@mask+3)^0,w,c
 23128  006148  15DB               	andwf	(??_validateRemoteSerialNumber+3)& (0+255),w,b
 23129  00614A  6FDF               	movwf	(??_validateRemoteSerialNumber+7)& (0+255),b
 23130  00614C  502E               	movf	validateRemoteSerialNumber@serial^0,w,c
 23131  00614E  19DC               	xorwf	(??_validateRemoteSerialNumber+4)& (0+255),w,b
 23132  006150  E112               	bnz	l20675
 23133  006152  502F               	movf	(validateRemoteSerialNumber@serial+1)^0,w,c
 23134  006154  19DD               	xorwf	(??_validateRemoteSerialNumber+5)& (0+255),w,b
 23135  006156  E10F               	bnz	l20675
 23136  006158  5030               	movf	(validateRemoteSerialNumber@serial+2)^0,w,c
 23137  00615A  19DE               	xorwf	(??_validateRemoteSerialNumber+6)& (0+255),w,b
 23138  00615C  E10C               	bnz	l20675
 23139  00615E  5031               	movf	(validateRemoteSerialNumber@serial+3)^0,w,c
 23140  006160  19DF               	xorwf	(??_validateRemoteSerialNumber+7)& (0+255),w,b
 23141  006162  A4D8               	btfss	status,2,c
 23142  006164  D008               	goto	l20675
 23143                           
 23144                           ; BSR set to: 0
 23145                           ;controlMemory_MC50.c: 51:         {;controlMemory_MC50.c: 53:             position[0]=i
      +                          ;
 23146  006166  C033  FFD9         	movff	validateRemoteSerialNumber@position,fsr2l
 23147  00616A  C034  FFDA         	movff	validateRemoteSerialNumber@position+1,fsr2h
 23148  00616E  C03A  FFDF         	movff	validateRemoteSerialNumber@i,indf2
 23149                           
 23150                           ; BSR set to: 0
 23151                           ;controlMemory_MC50.c: 54:             return TypeFull;
 23152  006172  0E01               	movlw	1
 23153  006174  0012               	return	
 23154  006176                     l20675:
 23155                           
 23156                           ; BSR set to: 0
 23157                           ;controlMemory_MC50.c: 57:         j++;
 23158  006176  2A39               	incf	validateRemoteSerialNumber@j^0,f,c
 23159                           
 23160                           ;controlMemory_MC50.c: 59:     }
 23161  006178  2A3A               	incf	validateRemoteSerialNumber@i^0,f,c
 23162  00617A                     l20677:
 23163                           
 23164                           ; BSR set to: 0
 23165  00617A  51B8               	movf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
 23166  00617C  5C3A               	subwf	validateRemoteSerialNumber@i^0,w,c
 23167  00617E  A0D8               	btfss	status,0,c
 23168  006180  D7A6               	goto	l20661
 23169                           
 23170                           ; BSR set to: 0
 23171                           ;controlMemory_MC50.c: 61:     for (i=0;i<var_sys_NVM.positionRemotesWalk;i++)
 23172  006182  0E00               	movlw	0
 23173  006184  6E3A               	movwf	validateRemoteSerialNumber@i^0,c
 23174  006186  D056               	goto	l20697
 23175  006188                     l20681:
 23176                           
 23177                           ; BSR set to: 0
 23178                           ;controlMemory_MC50.c: 62:     {;controlMemory_MC50.c: 63:         if(i%4==0)
 23179  006188  C03A  F0D8         	movff	validateRemoteSerialNumber@i,??_validateRemoteSerialNumber
 23180  00618C  0E03               	movlw	3
 23181  00618E  17D8               	andwf	??_validateRemoteSerialNumber& (0+255),f,b
 23182  006190  A4D8               	btfss	status,2,c
 23183  006192  D01C               	goto	l20687
 23184                           
 23185                           ; BSR set to: 0
 23186                           ;controlMemory_MC50.c: 64:         {;controlMemory_MC50.c: 65:             j=0;
 23187  006194  0E00               	movlw	0
 23188  006196  6E39               	movwf	validateRemoteSerialNumber@j^0,c
 23189                           
 23190                           ; BSR set to: 0
 23191                           ;controlMemory_MC50.c: 66:             i2c_readDataBlock(0x50, (uint16_t)(0x0500 + (i * 
      +                          4)),(char*)memoryTEMP, 16);
 23192  006198  503A               	movf	validateRemoteSerialNumber@i^0,w,c
 23193  00619A  6FD8               	movwf	??_validateRemoteSerialNumber& (0+255),b
 23194  00619C  6BD9               	clrf	(??_validateRemoteSerialNumber+1)& (0+255),b
 23195  00619E  90D8               	bcf	status,0,c
 23196  0061A0  37D8               	rlcf	??_validateRemoteSerialNumber& (0+255),f,b
 23197  0061A2  37D9               	rlcf	(??_validateRemoteSerialNumber+1)& (0+255),f,b
 23198  0061A4  90D8               	bcf	status,0,c
 23199  0061A6  37D8               	rlcf	??_validateRemoteSerialNumber& (0+255),f,b
 23200  0061A8  37D9               	rlcf	(??_validateRemoteSerialNumber+1)& (0+255),f,b
 23201  0061AA  0E00               	movlw	0
 23202  0061AC  25D8               	addwf	??_validateRemoteSerialNumber& (0+255),w,b
 23203  0061AE  6E22               	movwf	i2c_readDataBlock@reg^0,c
 23204  0061B0  0E05               	movlw	5
 23205  0061B2  21D9               	addwfc	(??_validateRemoteSerialNumber+1)& (0+255),w,b
 23206  0061B4  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 23207  0061B6  0EA0               	movlw	low _memoryTEMP
 23208  0061B8  6E24               	movwf	i2c_readDataBlock@data^0,c
 23209  0061BA  0E02               	movlw	high _memoryTEMP
 23210  0061BC  6E25               	movwf	(i2c_readDataBlock@data+1)^0,c
 23211  0061BE  0E00               	movlw	0
 23212  0061C0  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 23213  0061C2  0E10               	movlw	16
 23214  0061C4  6E26               	movwf	i2c_readDataBlock@len^0,c
 23215  0061C6  0E50               	movlw	80
 23216  0061C8  EC45  F044         	call	_i2c_readDataBlock
 23217  0061CC                     l20687:
 23218                           
 23219                           ;controlMemory_MC50.c: 69:         if((unsigned long)serial==((unsigned long)memoryTEMP[
      +                          j]&mask))
 23220  0061CC  5039               	movf	validateRemoteSerialNumber@j^0,w,c
 23221  0061CE  0D04               	mullw	4
 23222  0061D0  0EA0               	movlw	low _memoryTEMP
 23223  0061D2  24F3               	addwf	243,w,c
 23224  0061D4  6ED9               	movwf	fsr2l,c
 23225  0061D6  0E02               	movlw	high _memoryTEMP
 23226  0061D8  20F4               	addwfc	prodh,w,c
 23227  0061DA  6EDA               	movwf	fsr2h,c
 23228  0061DC  CFDE F0D8          	movff	postinc2,??_validateRemoteSerialNumber
 23229  0061E0  CFDE F0D9          	movff	postinc2,??_validateRemoteSerialNumber+1
 23230  0061E4  CFDE F0DA          	movff	postinc2,??_validateRemoteSerialNumber+2
 23231  0061E8  CFDE F0DB          	movff	postinc2,??_validateRemoteSerialNumber+3
 23232  0061EC  5035               	movf	validateRemoteSerialNumber@mask^0,w,c
 23233  0061EE  0100               	movlb	0	; () banked
 23234  0061F0  15D8               	andwf	??_validateRemoteSerialNumber& (0+255),w,b
 23235  0061F2  6FDC               	movwf	(??_validateRemoteSerialNumber+4)& (0+255),b
 23236  0061F4  5036               	movf	(validateRemoteSerialNumber@mask+1)^0,w,c
 23237  0061F6  15D9               	andwf	(??_validateRemoteSerialNumber+1)& (0+255),w,b
 23238  0061F8  6FDD               	movwf	(??_validateRemoteSerialNumber+5)& (0+255),b
 23239  0061FA  5037               	movf	(validateRemoteSerialNumber@mask+2)^0,w,c
 23240  0061FC  15DA               	andwf	(??_validateRemoteSerialNumber+2)& (0+255),w,b
 23241  0061FE  6FDE               	movwf	(??_validateRemoteSerialNumber+6)& (0+255),b
 23242  006200  5038               	movf	(validateRemoteSerialNumber@mask+3)^0,w,c
 23243  006202  15DB               	andwf	(??_validateRemoteSerialNumber+3)& (0+255),w,b
 23244  006204  6FDF               	movwf	(??_validateRemoteSerialNumber+7)& (0+255),b
 23245  006206  502E               	movf	validateRemoteSerialNumber@serial^0,w,c
 23246  006208  19DC               	xorwf	(??_validateRemoteSerialNumber+4)& (0+255),w,b
 23247  00620A  E112               	bnz	l20695
 23248  00620C  502F               	movf	(validateRemoteSerialNumber@serial+1)^0,w,c
 23249  00620E  19DD               	xorwf	(??_validateRemoteSerialNumber+5)& (0+255),w,b
 23250  006210  E10F               	bnz	l20695
 23251  006212  5030               	movf	(validateRemoteSerialNumber@serial+2)^0,w,c
 23252  006214  19DE               	xorwf	(??_validateRemoteSerialNumber+6)& (0+255),w,b
 23253  006216  E10C               	bnz	l20695
 23254  006218  5031               	movf	(validateRemoteSerialNumber@serial+3)^0,w,c
 23255  00621A  19DF               	xorwf	(??_validateRemoteSerialNumber+7)& (0+255),w,b
 23256  00621C  A4D8               	btfss	status,2,c
 23257  00621E  D008               	goto	l20695
 23258                           
 23259                           ; BSR set to: 0
 23260                           ;controlMemory_MC50.c: 70:         {;controlMemory_MC50.c: 72:             position[0]=i
      +                          ;
 23261  006220  C033  FFD9         	movff	validateRemoteSerialNumber@position,fsr2l
 23262  006224  C034  FFDA         	movff	validateRemoteSerialNumber@position+1,fsr2h
 23263  006228  C03A  FFDF         	movff	validateRemoteSerialNumber@i,indf2
 23264                           
 23265                           ; BSR set to: 0
 23266                           ;controlMemory_MC50.c: 73:             return TypeWalk;
 23267  00622C  0E02               	movlw	2
 23268  00622E  0012               	return	
 23269  006230                     l20695:
 23270                           
 23271                           ; BSR set to: 0
 23272                           ;controlMemory_MC50.c: 75:         j++;
 23273  006230  2A39               	incf	validateRemoteSerialNumber@j^0,f,c
 23274                           
 23275                           ;controlMemory_MC50.c: 76:     }
 23276  006232  2A3A               	incf	validateRemoteSerialNumber@i^0,f,c
 23277  006234                     l20697:
 23278                           
 23279                           ; BSR set to: 0
 23280  006234  51B9               	movf	(_var_sys_NVM+33)& (0+255),w,b	;volatile
 23281  006236  5C3A               	subwf	validateRemoteSerialNumber@i^0,w,c
 23282  006238  A0D8               	btfss	status,0,c
 23283  00623A  D7A6               	goto	l20681
 23284                           
 23285                           ; BSR set to: 0
 23286                           ;controlMemory_MC50.c: 78:     return NoCMD;
 23287  00623C  0E00               	movlw	0
 23288                           
 23289                           ; BSR set to: 0
 23290  00623E  0012               	return		;funcret
 23291  006240                     __end_of_validateRemoteSerialNumber:
 23292                           	callstack 0
 23293                           
 23294 ;; *************** function _saveNewSerial *****************
 23295 ;; Defined at:
 23296 ;;		line 81 in file "controlMemory_MC50.c"
 23297 ;; Parameters:    Size  Location     Type
 23298 ;;  cmdType         1    wreg     unsigned char 
 23299 ;;  tempSerial      4    0[BANK0 ] unsigned long 
 23300 ;;  position        1    4[BANK0 ] unsigned char 
 23301 ;; Auto vars:     Size  Location     Type
 23302 ;;  cmdType         1   57[COMRAM] unsigned char 
 23303 ;; Return value:  Size  Location     Type
 23304 ;;                  1    wreg      void 
 23305 ;; Registers used:
 23306 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23307 ;; Tracked objects:
 23308 ;;		On entry : 3E/1
 23309 ;;		On exit  : 0/0
 23310 ;;		Unchanged: 0/0
 23311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23312 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23313 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23314 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23315 ;;      Totals:         1       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23316 ;;Total ram usage:        8 bytes
 23317 ;; Hardware stack levels used: 1
 23318 ;; Hardware stack levels required when called: 13
 23319 ;; This function calls:
 23320 ;;		_i2c_writeNBytes
 23321 ;; This function is called by:
 23322 ;;		_controlSelectRemote
 23323 ;;		_eusartparser
 23324 ;; This function uses a non-reentrant model
 23325 ;;
 23326                           
 23327                           	psect	text77
 23328  0089E4                     __ptext77:
 23329                           	callstack 0
 23330  0089E4                     _saveNewSerial:
 23331                           	callstack 14
 23332                           
 23333                           ; BSR set to: 0
 23334                           ;incstack = 0
 23335                           ;saveNewSerial@cmdType stored from wreg
 23336  0089E4  6E3A               	movwf	saveNewSerial@cmdType^0,c
 23337                           
 23338                           ;controlMemory_MC50.c: 81: void saveNewSerial(char cmdType,unsigned long tempSerial, cha
      +                          r position);controlMemory_MC50.c: 82: {;controlMemory_MC50.c: 83:     if(cmdType==0)
 23339  0089E6  503A               	movf	saveNewSerial@cmdType^0,w,c
 23340  0089E8  A4D8               	btfss	status,2,c
 23341  0089EA  D01A               	goto	l20707
 23342                           
 23343                           ;controlMemory_MC50.c: 84:     {;controlMemory_MC50.c: 86:         i2c_writeNBytes(0x50,
      +                           (uint16_t)(0x0200 + (position * 4)), (char*)&tempSerial, 4);
 23344  0089EC  0100               	movlb	0	; () banked
 23345  0089EE  51DC               	movf	saveNewSerial@position& (0+255),w,b
 23346  0089F0  6FDD               	movwf	??_saveNewSerial& (0+255),b
 23347  0089F2  6BDE               	clrf	(??_saveNewSerial+1)& (0+255),b
 23348  0089F4  90D8               	bcf	status,0,c
 23349  0089F6  37DD               	rlcf	??_saveNewSerial& (0+255),f,b
 23350  0089F8  37DE               	rlcf	(??_saveNewSerial+1)& (0+255),f,b
 23351  0089FA  90D8               	bcf	status,0,c
 23352  0089FC  37DD               	rlcf	??_saveNewSerial& (0+255),f,b
 23353  0089FE  37DE               	rlcf	(??_saveNewSerial+1)& (0+255),f,b
 23354  008A00  0E00               	movlw	0
 23355  008A02  25DD               	addwf	??_saveNewSerial& (0+255),w,b
 23356  008A04  6E22               	movwf	i2c_writeNBytes@reg^0,c
 23357  008A06  0E02               	movlw	2
 23358  008A08  21DE               	addwfc	(??_saveNewSerial+1)& (0+255),w,b
 23359  008A0A  6E23               	movwf	(i2c_writeNBytes@reg+1)^0,c
 23360  008A0C  0ED8               	movlw	low saveNewSerial@tempSerial
 23361  008A0E  6E24               	movwf	i2c_writeNBytes@data^0,c
 23362  008A10  0E00               	movlw	0
 23363  008A12  6E26               	movwf	(i2c_writeNBytes@len+1)^0,c
 23364  008A14  0E04               	movlw	4
 23365  008A16  6E25               	movwf	i2c_writeNBytes@len^0,c
 23366  008A18  0E50               	movlw	80
 23367  008A1A  EC80  F044         	call	_i2c_writeNBytes
 23368                           
 23369                           ;controlMemory_MC50.c: 87:     }
 23370  008A1E  0012               	return	
 23371  008A20                     l20707:
 23372                           
 23373                           ;controlMemory_MC50.c: 89:     {;controlMemory_MC50.c: 91:         i2c_writeNBytes(0x50,
      +                           (uint16_t)(0x0500 + (position * 4)), (char*)&tempSerial, 4);
 23374  008A20  0100               	movlb	0	; () banked
 23375  008A22  51DC               	movf	saveNewSerial@position& (0+255),w,b
 23376  008A24  6FDD               	movwf	??_saveNewSerial& (0+255),b
 23377  008A26  6BDE               	clrf	(??_saveNewSerial+1)& (0+255),b
 23378  008A28  90D8               	bcf	status,0,c
 23379  008A2A  37DD               	rlcf	??_saveNewSerial& (0+255),f,b
 23380  008A2C  37DE               	rlcf	(??_saveNewSerial+1)& (0+255),f,b
 23381  008A2E  90D8               	bcf	status,0,c
 23382  008A30  37DD               	rlcf	??_saveNewSerial& (0+255),f,b
 23383  008A32  37DE               	rlcf	(??_saveNewSerial+1)& (0+255),f,b
 23384  008A34  0E00               	movlw	0
 23385  008A36  25DD               	addwf	??_saveNewSerial& (0+255),w,b
 23386  008A38  6E22               	movwf	i2c_writeNBytes@reg^0,c
 23387  008A3A  0E05               	movlw	5
 23388  008A3C  21DE               	addwfc	(??_saveNewSerial+1)& (0+255),w,b
 23389  008A3E  6E23               	movwf	(i2c_writeNBytes@reg+1)^0,c
 23390  008A40  0ED8               	movlw	low saveNewSerial@tempSerial
 23391  008A42  6E24               	movwf	i2c_writeNBytes@data^0,c
 23392  008A44  0E00               	movlw	0
 23393  008A46  6E26               	movwf	(i2c_writeNBytes@len+1)^0,c
 23394  008A48  0E04               	movlw	4
 23395  008A4A  6E25               	movwf	i2c_writeNBytes@len^0,c
 23396  008A4C  0E50               	movlw	80
 23397  008A4E  EC80  F044         	call	_i2c_writeNBytes
 23398  008A52  0012               	return		;funcret
 23399  008A54                     __end_of_saveNewSerial:
 23400                           	callstack 0
 23401                           
 23402 ;; *************** function _read_eusartparser *****************
 23403 ;; Defined at:
 23404 ;;		line 12 in file "eusartparser.c"
 23405 ;; Parameters:    Size  Location     Type
 23406 ;;  package         2   23[COMRAM] PTR struct package_t
 23407 ;;		 -> main@package(7), 
 23408 ;; Auto vars:     Size  Location     Type
 23409 ;;		None
 23410 ;; Return value:  Size  Location     Type
 23411 ;;                  1    wreg      void 
 23412 ;; Registers used:
 23413 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 23414 ;; Tracked objects:
 23415 ;;		On entry : 3F/0
 23416 ;;		On exit  : 0/0
 23417 ;;		Unchanged: 0/0
 23418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23419 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23420 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23421 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23422 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23423 ;;Total ram usage:        4 bytes
 23424 ;; Hardware stack levels used: 1
 23425 ;; Hardware stack levels required when called: 6
 23426 ;; This function calls:
 23427 ;;		_write_package
 23428 ;; This function is called by:
 23429 ;;		_eusartparser
 23430 ;; This function uses a non-reentrant model
 23431 ;;
 23432                           
 23433                           	psect	text78
 23434  002E7C                     __ptext78:
 23435                           	callstack 0
 23436  002E7C                     _read_eusartparser:
 23437                           	callstack 23
 23438                           
 23439                           ; BSR set to: 0
 23440                           ;eusartparser.c: 13:         switch(package->address){
 23441                           
 23442                           ;incstack = 0
 23443  002E7C  D24B               	goto	l27359
 23444  002E7E                     l27221:
 23445                           
 23446                           ; BSR set to: 0
 23447                           ;eusartparser.c: 16:                 package->data.data8[1]=var_sys_NVM.decelarationClos
      +                          e;
 23448  002E7E  EE20 F003          	lfsr	2,3
 23449  002E82  5018               	movf	read_eusartparser@package^0,w,c
 23450  002E84  26D9               	addwf	fsr2l,f,c
 23451  002E86  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23452  002E88  22DA               	addwfc	fsr2h,f,c
 23453  002E8A  C099  FFDF         	movff	_var_sys_NVM+1,indf2	;volatile
 23454                           
 23455                           ;eusartparser.c: 17:                 package->data.data8[0]=var_sys_NVM.decelarationOpen
      +                          ;
 23456  002E8E  EE20 F002          	lfsr	2,2
 23457  002E92  5018               	movf	read_eusartparser@package^0,w,c
 23458  002E94  26D9               	addwf	fsr2l,f,c
 23459  002E96  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23460  002E98  22DA               	addwfc	fsr2h,f,c
 23461  002E9A  C098  FFDF         	movff	_var_sys_NVM,indf2	;volatile
 23462  002E9E                     l27223:
 23463                           
 23464                           ; BSR set to: 0
 23465                           ;eusartparser.c: 18:                 write_package(*package);
 23466  002E9E  C018  FFD9         	movff	read_eusartparser@package,fsr2l
 23467  002EA2  C019  FFDA         	movff	read_eusartparser@package+1,fsr2h
 23468  002EA6  EE00  F011         	lfsr	0,write_package@package
 23469  002EAA  0E06               	movlw	6
 23470  002EAC                     u33281:
 23471  002EAC  CFDB FFEB          	movff	plusw2,plusw0
 23472  002EB0  06E8               	decf	wreg,f,c
 23473  002EB2  E2FC               	bc	u33281
 23474  002EB4  ECA1  F04B         	call	_write_package	;wreg free
 23475                           
 23476                           ;eusartparser.c: 19:                 break;
 23477  002EB8  0012               	return	
 23478  002EBA                     l27225:
 23479                           
 23480                           ; BSR set to: 0
 23481                           ;eusartparser.c: 21:                 package->data.data8[1]=var_sys_NVM.motorSensitivity
      +                          ;
 23482  002EBA  EE20 F003          	lfsr	2,3
 23483  002EBE  5018               	movf	read_eusartparser@package^0,w,c
 23484  002EC0  26D9               	addwf	fsr2l,f,c
 23485  002EC2  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23486  002EC4  22DA               	addwfc	fsr2h,f,c
 23487  002EC6  C09B  FFDF         	movff	_var_sys_NVM+3,indf2	;volatile
 23488                           
 23489                           ;eusartparser.c: 22:                 package->data.data8[0]=var_sys_NVM.motorPower;
 23490  002ECA  EE20 F002          	lfsr	2,2
 23491  002ECE  5018               	movf	read_eusartparser@package^0,w,c
 23492  002ED0  26D9               	addwf	fsr2l,f,c
 23493  002ED2  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23494  002ED4  22DA               	addwfc	fsr2h,f,c
 23495  002ED6  C09A  FFDF         	movff	_var_sys_NVM+2,indf2	;volatile
 23496  002EDA  D7E1               	goto	l27223
 23497  002EDC                     l27229:
 23498                           
 23499                           ; BSR set to: 0
 23500                           ;eusartparser.c: 26:                 package->data.data8[1]=var_sys_NVM.walkTime;
 23501  002EDC  EE20 F003          	lfsr	2,3
 23502  002EE0  5018               	movf	read_eusartparser@package^0,w,c
 23503  002EE2  26D9               	addwf	fsr2l,f,c
 23504  002EE4  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23505  002EE6  22DA               	addwfc	fsr2h,f,c
 23506  002EE8  C09C  FFDF         	movff	_var_sys_NVM+4,indf2	;volatile
 23507  002EEC  D117               	goto	L99
 23508  002EEE                     l27233:
 23509                           
 23510                           ; BSR set to: 0
 23511                           ;eusartparser.c: 32:                 package->data.data8[1]=var_sys_NVM.autoTimeWalkClos
      +                          e;
 23512  002EEE  EE20 F003          	lfsr	2,3
 23513  002EF2  5018               	movf	read_eusartparser@package^0,w,c
 23514  002EF4  26D9               	addwf	fsr2l,f,c
 23515  002EF6  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23516  002EF8  22DA               	addwfc	fsr2h,f,c
 23517  002EFA  C09E  FFDF         	movff	_var_sys_NVM+6,indf2	;volatile
 23518                           
 23519                           ;eusartparser.c: 33:                 package->data.data8[0]=var_sys_NVM.autoTimeFullClos
      +                          e;
 23520  002EFE  EE20 F002          	lfsr	2,2
 23521  002F02  5018               	movf	read_eusartparser@package^0,w,c
 23522  002F04  26D9               	addwf	fsr2l,f,c
 23523  002F06  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23524  002F08  22DA               	addwfc	fsr2h,f,c
 23525  002F0A  C09D  FFDF         	movff	_var_sys_NVM+5,indf2	;volatile
 23526  002F0E  D7C7               	goto	l27223
 23527  002F10                     l27237:
 23528                           
 23529                           ; BSR set to: 0
 23530                           ;eusartparser.c: 38:                 package->data.data8[1]=var_sys_NVM.photoCellInOpen;
 23531  002F10  EE20 F003          	lfsr	2,3
 23532  002F14  5018               	movf	read_eusartparser@package^0,w,c
 23533  002F16  26D9               	addwf	fsr2l,f,c
 23534  002F18  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23535  002F1A  22DA               	addwfc	fsr2h,f,c
 23536  002F1C  C0A0  FFDF         	movff	_var_sys_NVM+8,indf2	;volatile
 23537                           
 23538                           ;eusartparser.c: 39:                 package->data.data8[0]=var_sys_NVM.photoCellIsON;
 23539  002F20  EE20 F002          	lfsr	2,2
 23540  002F24  5018               	movf	read_eusartparser@package^0,w,c
 23541  002F26  26D9               	addwf	fsr2l,f,c
 23542  002F28  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23543  002F2A  22DA               	addwfc	fsr2h,f,c
 23544  002F2C  C09F  FFDF         	movff	_var_sys_NVM+7,indf2	;volatile
 23545  002F30  D7B6               	goto	l27223
 23546  002F32                     l27241:
 23547                           
 23548                           ; BSR set to: 0
 23549                           ;eusartparser.c: 43:                 package->data.data8[1]=var_sys_NVM.securityBandType
      +                          ;
 23550  002F32  EE20 F003          	lfsr	2,3
 23551  002F36  5018               	movf	read_eusartparser@package^0,w,c
 23552  002F38  26D9               	addwf	fsr2l,f,c
 23553  002F3A  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23554  002F3C  22DA               	addwfc	fsr2h,f,c
 23555  002F3E  C0A2  FFDF         	movff	_var_sys_NVM+10,indf2	;volatile
 23556                           
 23557                           ;eusartparser.c: 44:                 package->data.data8[0]=var_sys_NVM.securityBandIsON
      +                          ;
 23558  002F42  EE20 F002          	lfsr	2,2
 23559  002F46  5018               	movf	read_eusartparser@package^0,w,c
 23560  002F48  26D9               	addwf	fsr2l,f,c
 23561  002F4A  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23562  002F4C  22DA               	addwfc	fsr2h,f,c
 23563  002F4E  C0A1  FFDF         	movff	_var_sys_NVM+9,indf2	;volatile
 23564  002F52  D7A5               	goto	l27223
 23565  002F54                     l27245:
 23566                           
 23567                           ; BSR set to: 0
 23568                           ;eusartparser.c: 48:                 package->data.data8[1]=var_sys_NVM.securityBandInOp
      +                          en;
 23569  002F54  EE20 F003          	lfsr	2,3
 23570  002F58  5018               	movf	read_eusartparser@package^0,w,c
 23571  002F5A  26D9               	addwf	fsr2l,f,c
 23572  002F5C  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23573  002F5E  22DA               	addwfc	fsr2h,f,c
 23574  002F60  C0A3  FFDF         	movff	_var_sys_NVM+11,indf2	;volatile
 23575  002F64  D0DB               	goto	L99
 23576  002F66                     l27249:
 23577                           
 23578                           ; BSR set to: 0
 23579                           ;eusartparser.c: 53:                 package->data.data8[1]=var_sys_NVM.operationMode;
 23580  002F66  EE20 F003          	lfsr	2,3
 23581  002F6A  5018               	movf	read_eusartparser@package^0,w,c
 23582  002F6C  26D9               	addwf	fsr2l,f,c
 23583  002F6E  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23584  002F70  22DA               	addwfc	fsr2h,f,c
 23585  002F72  C0A4  FFDF         	movff	_var_sys_NVM+12,indf2	;volatile
 23586  002F76  D0D2               	goto	L99
 23587  002F78                     l27253:
 23588                           
 23589                           ; BSR set to: 0
 23590                           ;eusartparser.c: 58:                 package->data.data8[1]=var_sys_NVM.flashLightMode;
 23591  002F78  EE20 F003          	lfsr	2,3
 23592  002F7C  5018               	movf	read_eusartparser@package^0,w,c
 23593  002F7E  26D9               	addwf	fsr2l,f,c
 23594  002F80  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23595  002F82  22DA               	addwfc	fsr2h,f,c
 23596  002F84  C0A5  FFDF         	movff	_var_sys_NVM+13,indf2	;volatile
 23597  002F88  D0C9               	goto	L99
 23598  002F8A                     l27257:
 23599                           
 23600                           ; BSR set to: 0
 23601                           ;eusartparser.c: 63:                 package->data.data8[1]=var_sys_NVM.programmingDista
      +                          nce;
 23602  002F8A  EE20 F003          	lfsr	2,3
 23603  002F8E  5018               	movf	read_eusartparser@package^0,w,c
 23604  002F90  26D9               	addwf	fsr2l,f,c
 23605  002F92  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23606  002F94  22DA               	addwfc	fsr2h,f,c
 23607  002F96  C0A6  FFDF         	movff	_var_sys_NVM+14,indf2	;volatile
 23608  002F9A  D0C0               	goto	L99
 23609  002F9C                     l27261:
 23610                           
 23611                           ; BSR set to: 0
 23612                           ;eusartparser.c: 68:                 package->data.data8[1]=var_sys_NVM.decelarationSens
      +                          ivity;
 23613  002F9C  EE20 F003          	lfsr	2,3
 23614  002FA0  5018               	movf	read_eusartparser@package^0,w,c
 23615  002FA2  26D9               	addwf	fsr2l,f,c
 23616  002FA4  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23617  002FA6  22DA               	addwfc	fsr2h,f,c
 23618  002FA8  C0A7  FFDF         	movff	_var_sys_NVM+15,indf2	;volatile
 23619  002FAC  D0B7               	goto	L99
 23620  002FAE                     l27265:
 23621                           
 23622                           ; BSR set to: 0
 23623                           ;eusartparser.c: 74:                 package->data.data8[1]=var_sys_NVM.homemPresente;
 23624  002FAE  EE20 F003          	lfsr	2,3
 23625  002FB2  5018               	movf	read_eusartparser@package^0,w,c
 23626  002FB4  26D9               	addwf	fsr2l,f,c
 23627  002FB6  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23628  002FB8  22DA               	addwfc	fsr2h,f,c
 23629  002FBA  C0A8  FFDF         	movff	_var_sys_NVM+16,indf2	;volatile
 23630  002FBE  D0AE               	goto	L99
 23631  002FC0                     l27269:
 23632                           
 23633                           ; BSR set to: 0
 23634                           ;eusartparser.c: 80:                 package->data.data8[1]=var_sys_NVM.logicDigital;
 23635  002FC0  EE20 F003          	lfsr	2,3
 23636  002FC4  5018               	movf	read_eusartparser@package^0,w,c
 23637  002FC6  26D9               	addwf	fsr2l,f,c
 23638  002FC8  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23639  002FCA  22DA               	addwfc	fsr2h,f,c
 23640  002FCC  C0A9  FFDF         	movff	_var_sys_NVM+17,indf2	;volatile
 23641  002FD0  D0A5               	goto	L99
 23642  002FD2                     l27273:
 23643                           
 23644                           ; BSR set to: 0
 23645                           ;eusartparser.c: 85:                 package->data.data8[1]=var_sys_NVM.softstop;
 23646  002FD2  EE20 F003          	lfsr	2,3
 23647  002FD6  5018               	movf	read_eusartparser@package^0,w,c
 23648  002FD8  26D9               	addwf	fsr2l,f,c
 23649  002FDA  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23650  002FDC  22DA               	addwfc	fsr2h,f,c
 23651  002FDE  C0AB  FFDF         	movff	_var_sys_NVM+19,indf2	;volatile
 23652                           
 23653                           ;eusartparser.c: 86:                 package->data.data8[0]=var_sys_NVM.softStart;
 23654  002FE2  EE20 F002          	lfsr	2,2
 23655  002FE6  5018               	movf	read_eusartparser@package^0,w,c
 23656  002FE8  26D9               	addwf	fsr2l,f,c
 23657  002FEA  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23658  002FEC  22DA               	addwfc	fsr2h,f,c
 23659  002FEE  C0AA  FFDF         	movff	_var_sys_NVM+18,indf2	;volatile
 23660  002FF2  D755               	goto	l27223
 23661  002FF4                     l27277:
 23662                           
 23663                           ; BSR set to: 0
 23664                           ;eusartparser.c: 91:                 package->data.data8[1]=var_sys_NVM.ligthTime;
 23665  002FF4  EE20 F003          	lfsr	2,3
 23666  002FF8  5018               	movf	read_eusartparser@package^0,w,c
 23667  002FFA  26D9               	addwf	fsr2l,f,c
 23668  002FFC  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23669  002FFE  22DA               	addwfc	fsr2h,f,c
 23670  003000  C0AC  FFDF         	movff	_var_sys_NVM+20,indf2	;volatile
 23671  003004  D08B               	goto	L99
 23672  003006                     l27281:
 23673                           
 23674                           ; BSR set to: 0
 23675                           ;eusartparser.c: 97:                 package->data.data8[1]=var_sys_NVM.folow_me;
 23676  003006  EE20 F003          	lfsr	2,3
 23677  00300A  5018               	movf	read_eusartparser@package^0,w,c
 23678  00300C  26D9               	addwf	fsr2l,f,c
 23679  00300E  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23680  003010  22DA               	addwfc	fsr2h,f,c
 23681  003012  C0AD  FFDF         	movff	_var_sys_NVM+21,indf2	;volatile
 23682  003016  D082               	goto	L99
 23683  003018                     l27285:
 23684                           
 23685                           ; BSR set to: 0
 23686                           ;eusartparser.c: 102:                 package->data.data8[1]=var_sys_NVM.Stopboton;
 23687  003018  EE20 F003          	lfsr	2,3
 23688  00301C  5018               	movf	read_eusartparser@package^0,w,c
 23689  00301E  26D9               	addwf	fsr2l,f,c
 23690  003020  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23691  003022  22DA               	addwfc	fsr2h,f,c
 23692  003024  C0AE  FFDF         	movff	_var_sys_NVM+22,indf2	;volatile
 23693  003028  D079               	goto	L99
 23694  00302A                     l27289:
 23695                           
 23696                           ; BSR set to: 0
 23697                           ;eusartparser.c: 107:                 package->data.data8[1]=var_sys_NVM.electricBrake;
 23698  00302A  EE20 F003          	lfsr	2,3
 23699  00302E  5018               	movf	read_eusartparser@package^0,w,c
 23700  003030  26D9               	addwf	fsr2l,f,c
 23701  003032  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23702  003034  22DA               	addwfc	fsr2h,f,c
 23703  003036  C0AF  FFDF         	movff	_var_sys_NVM+23,indf2	;volatile
 23704  00303A  D070               	goto	L99
 23705  00303C                     l27293:
 23706                           
 23707                           ; BSR set to: 0
 23708                           ;eusartparser.c: 112:                 package->data.data8[1]=var_sys_NVM.velocityDecelar
      +                          ation;
 23709  00303C  EE20 F003          	lfsr	2,3
 23710  003040  5018               	movf	read_eusartparser@package^0,w,c
 23711  003042  26D9               	addwf	fsr2l,f,c
 23712  003044  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23713  003046  22DA               	addwfc	fsr2h,f,c
 23714  003048  C0B0  FFDF         	movff	_var_sys_NVM+24,indf2	;volatile
 23715  00304C  D067               	goto	L99
 23716  00304E                     l27297:
 23717                           
 23718                           ; BSR set to: 0
 23719                           ;eusartparser.c: 118:                 package->data.data8[1]=var_sys_NVM.flashRGBMode;
 23720  00304E  EE20 F003          	lfsr	2,3
 23721  003052  5018               	movf	read_eusartparser@package^0,w,c
 23722  003054  26D9               	addwf	fsr2l,f,c
 23723  003056  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23724  003058  22DA               	addwfc	fsr2h,f,c
 23725  00305A  C0B1  FFDF         	movff	_var_sys_NVM+25,indf2	;volatile
 23726  00305E  D05E               	goto	L99
 23727  003060                     l27301:
 23728                           
 23729                           ; BSR set to: 0
 23730                           ;eusartparser.c: 123:                 package->data.data8[1]=var_sys_NVM.Direction_motor
      +                          ;
 23731  003060  EE20 F003          	lfsr	2,3
 23732  003064  5018               	movf	read_eusartparser@package^0,w,c
 23733  003066  26D9               	addwf	fsr2l,f,c
 23734  003068  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23735  00306A  22DA               	addwfc	fsr2h,f,c
 23736  00306C  C0B3  FFDF         	movff	_var_sys_NVM+27,indf2	;volatile
 23737  003070  D055               	goto	L99
 23738  003072                     l27305:
 23739                           
 23740                           ; BSR set to: 0
 23741                           ;eusartparser.c: 128:                 package->data.data8[1]=var_sys_NVM.TypeofMotor;
 23742  003072  EE20 F003          	lfsr	2,3
 23743  003076  5018               	movf	read_eusartparser@package^0,w,c
 23744  003078  26D9               	addwf	fsr2l,f,c
 23745  00307A  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23746  00307C  22DA               	addwfc	fsr2h,f,c
 23747  00307E  C0B4  FFDF         	movff	_var_sys_NVM+28,indf2	;volatile
 23748  003082  D04C               	goto	L99
 23749  003084                     l27309:
 23750                           
 23751                           ; BSR set to: 0
 23752                           ;eusartparser.c: 133:                 package->data.data8[1]=var_sys_NVM.positionRemotes
      +                          Walk;
 23753  003084  EE20 F003          	lfsr	2,3
 23754  003088  5018               	movf	read_eusartparser@package^0,w,c
 23755  00308A  26D9               	addwf	fsr2l,f,c
 23756  00308C  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23757  00308E  22DA               	addwfc	fsr2h,f,c
 23758  003090  C0B9  FFDF         	movff	_var_sys_NVM+33,indf2	;volatile
 23759                           
 23760                           ;eusartparser.c: 134:                 package->data.data8[0]=var_sys_NVM.positionRemotes
      +                          Full;
 23761  003094  EE20 F002          	lfsr	2,2
 23762  003098  5018               	movf	read_eusartparser@package^0,w,c
 23763  00309A  26D9               	addwf	fsr2l,f,c
 23764  00309C  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23765  00309E  22DA               	addwfc	fsr2h,f,c
 23766  0030A0  C0B8  FFDF         	movff	_var_sys_NVM+32,indf2	;volatile
 23767  0030A4  D6FC               	goto	l27223
 23768  0030A6                     l27313:
 23769                           
 23770                           ; BSR set to: 0
 23771                           ;eusartparser.c: 138:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.c
      +                          ounterMoves))+1);
 23772  0030A6  EE20  F0BC         	lfsr	2,_var_sys_NVM+36
 23773  0030AA  EE10 F002          	lfsr	1,2
 23774  0030AE  5018               	movf	read_eusartparser@package^0,w,c
 23775  0030B0  26E1               	addwf	fsr1l,f,c
 23776  0030B2  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23777  0030B4  22E2               	addwfc	fsr1h,f,c
 23778  0030B6  CFDE FFE6          	movff	postinc2,postinc1
 23779  0030BA  CFDD FFE5          	movff	postdec2,postdec1
 23780                           
 23781                           ; BSR set to: 0
 23782                           ;eusartparser.c: 139:                 write_package(*package);
 23783  0030BE  C018  FFD9         	movff	read_eusartparser@package,fsr2l
 23784  0030C2  C019  FFDA         	movff	read_eusartparser@package+1,fsr2h
 23785  0030C6  EE00  F011         	lfsr	0,write_package@package
 23786  0030CA  0E06               	movlw	6
 23787  0030CC                     u33291:
 23788  0030CC  CFDB FFEB          	movff	plusw2,plusw0
 23789  0030D0  06E8               	decf	wreg,f,c
 23790  0030D2  E2FC               	bc	u33291
 23791  0030D4  ECA1  F04B         	call	_write_package	;wreg free
 23792                           
 23793                           ;eusartparser.c: 140:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.c
      +                          ounterMoves))+0);
 23794  0030D8  EE20  F0BA         	lfsr	2,_var_sys_NVM+34
 23795  0030DC  EE10 F002          	lfsr	1,2
 23796  0030E0  5018               	movf	read_eusartparser@package^0,w,c
 23797  0030E2  26E1               	addwf	fsr1l,f,c
 23798  0030E4  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23799  0030E6  22E2               	addwfc	fsr1h,f,c
 23800  0030E8  CFDE FFE6          	movff	postinc2,postinc1
 23801  0030EC  CFDD FFE5          	movff	postdec2,postdec1
 23802                           
 23803                           ;eusartparser.c: 141:                 write_package(*package);
 23804  0030F0  C018  FFD9         	movff	read_eusartparser@package,fsr2l
 23805  0030F4  C019  FFDA         	movff	read_eusartparser@package+1,fsr2h
 23806  0030F8  EE00  F011         	lfsr	0,write_package@package
 23807  0030FC  0E06               	movlw	6
 23808  0030FE                     u33301:
 23809  0030FE  CFDB FFEB          	movff	plusw2,plusw0
 23810  003102  06E8               	decf	wreg,f,c
 23811  003104  E2FC               	bc	u33301
 23812  003106  ECA1  F04B         	call	_write_package	;wreg free
 23813                           
 23814                           ;eusartparser.c: 142:                 break;
 23815  00310A  0012               	return	
 23816  00310C                     l27319:
 23817                           
 23818                           ; BSR set to: 0
 23819                           ;eusartparser.c: 144:                 package->data.data8[1]=var_sys_NVM.OnlyRollingCode
      +                          ;
 23820  00310C  EE20 F003          	lfsr	2,3
 23821  003110  5018               	movf	read_eusartparser@package^0,w,c
 23822  003112  26D9               	addwf	fsr2l,f,c
 23823  003114  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23824  003116  22DA               	addwfc	fsr2h,f,c
 23825  003118  C0BE  FFDF         	movff	_var_sys_NVM+38,indf2	;volatile
 23826  00311C                     L99:
 23827                           
 23828                           ;eusartparser.c: 145:                 package->data.data8[0]=0x00;
 23829  00311C  EE20 F002          	lfsr	2,2
 23830  003120  5018               	movf	read_eusartparser@package^0,w,c
 23831  003122  26D9               	addwf	fsr2l,f,c
 23832  003124  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23833  003126  22DA               	addwfc	fsr2h,f,c
 23834  003128  0E00               	movlw	0
 23835  00312A  6EDF               	movwf	indf2,c
 23836  00312C  D6B8               	goto	l27223
 23837  00312E                     l27323:
 23838                           
 23839                           ; BSR set to: 0
 23840                           ;eusartparser.c: 149:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.l
      +                          earningCurrentDecelarationClose))+1);
 23841  00312E  EE20  F0C2         	lfsr	2,_var_sys_NVM+42
 23842  003132  EE10 F002          	lfsr	1,2
 23843  003136  5018               	movf	read_eusartparser@package^0,w,c
 23844  003138  26E1               	addwf	fsr1l,f,c
 23845  00313A  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23846  00313C  22E2               	addwfc	fsr1h,f,c
 23847  00313E  CFDE FFE6          	movff	postinc2,postinc1
 23848  003142  CFDD FFE5          	movff	postdec2,postdec1
 23849                           
 23850                           ; BSR set to: 0
 23851                           ;eusartparser.c: 150:                 write_package(*package);
 23852  003146  C018  FFD9         	movff	read_eusartparser@package,fsr2l
 23853  00314A  C019  FFDA         	movff	read_eusartparser@package+1,fsr2h
 23854  00314E  EE00  F011         	lfsr	0,write_package@package
 23855  003152  0E06               	movlw	6
 23856  003154                     u33311:
 23857  003154  CFDB FFEB          	movff	plusw2,plusw0
 23858  003158  06E8               	decf	wreg,f,c
 23859  00315A  E2FC               	bc	u33311
 23860  00315C  ECA1  F04B         	call	_write_package	;wreg free
 23861                           
 23862                           ;eusartparser.c: 151:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.l
      +                          earningCurrentDecelarationClose))+0);
 23863  003160  EE20  F0C0         	lfsr	2,_var_sys_NVM+40
 23864  003164  EE10 F002          	lfsr	1,2
 23865  003168  5018               	movf	read_eusartparser@package^0,w,c
 23866  00316A  26E1               	addwf	fsr1l,f,c
 23867  00316C  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23868  00316E  22E2               	addwfc	fsr1h,f,c
 23869  003170  CFDE FFE6          	movff	postinc2,postinc1
 23870  003174  CFDD FFE5          	movff	postdec2,postdec1
 23871                           
 23872                           ;eusartparser.c: 152:                 write_package(*package);
 23873  003178  C018  FFD9         	movff	read_eusartparser@package,fsr2l
 23874  00317C  C019  FFDA         	movff	read_eusartparser@package+1,fsr2h
 23875  003180  EE00  F011         	lfsr	0,write_package@package
 23876  003184  0E06               	movlw	6
 23877  003186                     u33321:
 23878  003186  CFDB FFEB          	movff	plusw2,plusw0
 23879  00318A  06E8               	decf	wreg,f,c
 23880  00318C  E2FC               	bc	u33321
 23881  00318E  ECA1  F04B         	call	_write_package	;wreg free
 23882                           
 23883                           ;eusartparser.c: 153:                 break;
 23884  003192  0012               	return	
 23885  003194                     l27329:
 23886                           
 23887                           ; BSR set to: 0
 23888                           ;eusartparser.c: 155:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.l
      +                          earningCurrentDecelarationOpen))+1);
 23889  003194  EE20  F0C6         	lfsr	2,_var_sys_NVM+46
 23890  003198  EE10 F002          	lfsr	1,2
 23891  00319C  5018               	movf	read_eusartparser@package^0,w,c
 23892  00319E  26E1               	addwf	fsr1l,f,c
 23893  0031A0  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23894  0031A2  22E2               	addwfc	fsr1h,f,c
 23895  0031A4  CFDE FFE6          	movff	postinc2,postinc1
 23896  0031A8  CFDD FFE5          	movff	postdec2,postdec1
 23897                           
 23898                           ; BSR set to: 0
 23899                           ;eusartparser.c: 156:                 write_package(*package);
 23900  0031AC  C018  FFD9         	movff	read_eusartparser@package,fsr2l
 23901  0031B0  C019  FFDA         	movff	read_eusartparser@package+1,fsr2h
 23902  0031B4  EE00  F011         	lfsr	0,write_package@package
 23903  0031B8  0E06               	movlw	6
 23904  0031BA                     u33331:
 23905  0031BA  CFDB FFEB          	movff	plusw2,plusw0
 23906  0031BE  06E8               	decf	wreg,f,c
 23907  0031C0  E2FC               	bc	u33331
 23908  0031C2  ECA1  F04B         	call	_write_package	;wreg free
 23909                           
 23910                           ;eusartparser.c: 157:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.l
      +                          earningCurrentDecelarationOpen))+0);
 23911  0031C6  EE20  F0C4         	lfsr	2,_var_sys_NVM+44
 23912  0031CA  EE10 F002          	lfsr	1,2
 23913  0031CE  5018               	movf	read_eusartparser@package^0,w,c
 23914  0031D0  26E1               	addwf	fsr1l,f,c
 23915  0031D2  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23916  0031D4  22E2               	addwfc	fsr1h,f,c
 23917  0031D6  CFDE FFE6          	movff	postinc2,postinc1
 23918  0031DA  CFDD FFE5          	movff	postdec2,postdec1
 23919                           
 23920                           ;eusartparser.c: 158:                 write_package(*package);
 23921  0031DE  C018  FFD9         	movff	read_eusartparser@package,fsr2l
 23922  0031E2  C019  FFDA         	movff	read_eusartparser@package+1,fsr2h
 23923  0031E6  EE00  F011         	lfsr	0,write_package@package
 23924  0031EA  0E06               	movlw	6
 23925  0031EC                     u33341:
 23926  0031EC  CFDB FFEB          	movff	plusw2,plusw0
 23927  0031F0  06E8               	decf	wreg,f,c
 23928  0031F2  E2FC               	bc	u33341
 23929  0031F4  ECA1  F04B         	call	_write_package	;wreg free
 23930                           
 23931                           ;eusartparser.c: 159:                 break;
 23932  0031F8  0012               	return	
 23933  0031FA                     l27335:
 23934                           
 23935                           ; BSR set to: 0
 23936                           ;eusartparser.c: 161:                 package->data.data16=var_sys_NVM.learningCurrentNo
      +                          rmalClose;
 23937  0031FA  EE20 F002          	lfsr	2,2
 23938  0031FE  5018               	movf	read_eusartparser@package^0,w,c
 23939  003200  26D9               	addwf	fsr2l,f,c
 23940  003202  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23941  003204  22DA               	addwfc	fsr2h,f,c
 23942  003206  C0C8  FFDE         	movff	_var_sys_NVM+48,postinc2	;volatile
 23943  00320A  C0C9  FFDD         	movff	_var_sys_NVM+49,postdec2	;volatile
 23944  00320E  D647               	goto	l27223
 23945  003210                     l27339:
 23946                           
 23947                           ; BSR set to: 0
 23948                           ;eusartparser.c: 165:                 package->data.data16=var_sys_NVM.learningCurrentNo
      +                          rmalOpen;
 23949  003210  EE20 F002          	lfsr	2,2
 23950  003214  5018               	movf	read_eusartparser@package^0,w,c
 23951  003216  26D9               	addwf	fsr2l,f,c
 23952  003218  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23953  00321A  22DA               	addwfc	fsr2h,f,c
 23954  00321C  C0CA  FFDE         	movff	_var_sys_NVM+50,postinc2	;volatile
 23955  003220  C0CB  FFDD         	movff	_var_sys_NVM+51,postdec2	;volatile
 23956  003224  D63C               	goto	l27223
 23957  003226                     l27343:
 23958                           
 23959                           ; BSR set to: 0
 23960                           ;eusartparser.c: 169:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.l
      +                          earningTimeToOpen))+1);
 23961  003226  EE20  F0CE         	lfsr	2,_var_sys_NVM+54
 23962  00322A  EE10 F002          	lfsr	1,2
 23963  00322E  5018               	movf	read_eusartparser@package^0,w,c
 23964  003230  26E1               	addwf	fsr1l,f,c
 23965  003232  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23966  003234  22E2               	addwfc	fsr1h,f,c
 23967  003236  CFDE FFE6          	movff	postinc2,postinc1
 23968  00323A  CFDD FFE5          	movff	postdec2,postdec1
 23969                           
 23970                           ; BSR set to: 0
 23971                           ;eusartparser.c: 170:                 write_package(*package);
 23972  00323E  C018  FFD9         	movff	read_eusartparser@package,fsr2l
 23973  003242  C019  FFDA         	movff	read_eusartparser@package+1,fsr2h
 23974  003246  EE00  F011         	lfsr	0,write_package@package
 23975  00324A  0E06               	movlw	6
 23976  00324C                     u33351:
 23977  00324C  CFDB FFEB          	movff	plusw2,plusw0
 23978  003250  06E8               	decf	wreg,f,c
 23979  003252  E2FC               	bc	u33351
 23980  003254  ECA1  F04B         	call	_write_package	;wreg free
 23981                           
 23982                           ;eusartparser.c: 171:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.l
      +                          earningTimeToOpen))+0);
 23983  003258  EE20  F0CC         	lfsr	2,_var_sys_NVM+52
 23984  00325C  EE10 F002          	lfsr	1,2
 23985  003260  5018               	movf	read_eusartparser@package^0,w,c
 23986  003262  26E1               	addwf	fsr1l,f,c
 23987  003264  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23988  003266  22E2               	addwfc	fsr1h,f,c
 23989  003268  CFDE FFE6          	movff	postinc2,postinc1
 23990  00326C  CFDD FFE5          	movff	postdec2,postdec1
 23991                           
 23992                           ;eusartparser.c: 172:                 write_package(*package);
 23993  003270  C018  FFD9         	movff	read_eusartparser@package,fsr2l
 23994  003274  C019  FFDA         	movff	read_eusartparser@package+1,fsr2h
 23995  003278  EE00  F011         	lfsr	0,write_package@package
 23996  00327C  0E06               	movlw	6
 23997  00327E                     u33361:
 23998  00327E  CFDB FFEB          	movff	plusw2,plusw0
 23999  003282  06E8               	decf	wreg,f,c
 24000  003284  E2FC               	bc	u33361
 24001  003286  ECA1  F04B         	call	_write_package	;wreg free
 24002                           
 24003                           ;eusartparser.c: 173:                 break;
 24004  00328A  0012               	return	
 24005  00328C                     l27349:
 24006                           
 24007                           ; BSR set to: 0
 24008                           ;eusartparser.c: 175:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.l
      +                          earningTimeToClose))+1);
 24009  00328C  EE20  F0D2         	lfsr	2,_var_sys_NVM+58
 24010  003290  EE10 F002          	lfsr	1,2
 24011  003294  5018               	movf	read_eusartparser@package^0,w,c
 24012  003296  26E1               	addwf	fsr1l,f,c
 24013  003298  5019               	movf	(read_eusartparser@package+1)^0,w,c
 24014  00329A  22E2               	addwfc	fsr1h,f,c
 24015  00329C  CFDE FFE6          	movff	postinc2,postinc1
 24016  0032A0  CFDD FFE5          	movff	postdec2,postdec1
 24017                           
 24018                           ; BSR set to: 0
 24019                           ;eusartparser.c: 176:                 write_package(*package);
 24020  0032A4  C018  FFD9         	movff	read_eusartparser@package,fsr2l
 24021  0032A8  C019  FFDA         	movff	read_eusartparser@package+1,fsr2h
 24022  0032AC  EE00  F011         	lfsr	0,write_package@package
 24023  0032B0  0E06               	movlw	6
 24024  0032B2                     u33371:
 24025  0032B2  CFDB FFEB          	movff	plusw2,plusw0
 24026  0032B6  06E8               	decf	wreg,f,c
 24027  0032B8  E2FC               	bc	u33371
 24028  0032BA  ECA1  F04B         	call	_write_package	;wreg free
 24029                           
 24030                           ;eusartparser.c: 177:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.l
      +                          earningTimeToClose))+0);
 24031  0032BE  EE20  F0D0         	lfsr	2,_var_sys_NVM+56
 24032  0032C2  EE10 F002          	lfsr	1,2
 24033  0032C6  5018               	movf	read_eusartparser@package^0,w,c
 24034  0032C8  26E1               	addwf	fsr1l,f,c
 24035  0032CA  5019               	movf	(read_eusartparser@package+1)^0,w,c
 24036  0032CC  22E2               	addwfc	fsr1h,f,c
 24037  0032CE  CFDE FFE6          	movff	postinc2,postinc1
 24038  0032D2  CFDD FFE5          	movff	postdec2,postdec1
 24039                           
 24040                           ;eusartparser.c: 178:                 write_package(*package);
 24041  0032D6  C018  FFD9         	movff	read_eusartparser@package,fsr2l
 24042  0032DA  C019  FFDA         	movff	read_eusartparser@package+1,fsr2h
 24043  0032DE  EE00  F011         	lfsr	0,write_package@package
 24044  0032E2  0E06               	movlw	6
 24045  0032E4                     u33381:
 24046  0032E4  CFDB FFEB          	movff	plusw2,plusw0
 24047  0032E8  06E8               	decf	wreg,f,c
 24048  0032EA  E2FC               	bc	u33381
 24049  0032EC  ECA1  F04B         	call	_write_package	;wreg free
 24050                           
 24051                           ;eusartparser.c: 179:                 break;
 24052  0032F0  0012               	return	
 24053  0032F2                     l27355:
 24054                           
 24055                           ; BSR set to: 0
 24056                           ;eusartparser.c: 184:                 package->data.data8[1]=RFFull;
 24057  0032F2  EE20 F003          	lfsr	2,3
 24058  0032F6  5018               	movf	read_eusartparser@package^0,w,c
 24059  0032F8  26D9               	addwf	fsr2l,f,c
 24060  0032FA  5019               	movf	(read_eusartparser@package+1)^0,w,c
 24061  0032FC  22DA               	addwfc	fsr2h,f,c
 24062  0032FE  C08B  FFDF         	movff	_RFFull,indf2	;volatile
 24063                           
 24064                           ;eusartparser.c: 185:                 package->data.data8[0]=0x00;
 24065  003302  EE20 F002          	lfsr	2,2
 24066  003306  5018               	movf	read_eusartparser@package^0,w,c
 24067  003308  26D9               	addwf	fsr2l,f,c
 24068  00330A  5019               	movf	(read_eusartparser@package+1)^0,w,c
 24069  00330C  22DA               	addwfc	fsr2h,f,c
 24070  00330E  0E00               	movlw	0
 24071  003310  6EDF               	movwf	indf2,c
 24072                           
 24073                           ;eusartparser.c: 186:                 break;
 24074  003312  0012               	return	
 24075  003314                     l27359:
 24076                           
 24077                           ; BSR set to: 0
 24078  003314  EE20 F001          	lfsr	2,1
 24079  003318  5018               	movf	read_eusartparser@package^0,w,c
 24080  00331A  26D9               	addwf	fsr2l,f,c
 24081  00331C  5019               	movf	(read_eusartparser@package+1)^0,w,c
 24082  00331E  22DA               	addwfc	fsr2h,f,c
 24083  003320  50DF               	movf	indf2,w,c
 24084  003322  6E1A               	movwf	??_read_eusartparser^0,c
 24085  003324  6A1B               	clrf	(??_read_eusartparser+1)^0,c
 24086                           
 24087                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 24088                           ; Switch size 1, requested type "simple"
 24089                           ; Number of cases is 1, Range of values is 0 to 0
 24090                           ; switch strategies available:
 24091                           ; Name         Instructions Cycles
 24092                           ; simple_byte            4     3 (average)
 24093                           ;	Chosen strategy is simple_byte
 24094  003326  501B               	movf	(??_read_eusartparser+1)^0,w,c
 24095  003328  0A00               	xorlw	0	; case 0
 24096  00332A  A4D8               	btfss	status,2,c
 24097  00332C  0012               	return	
 24098                           
 24099                           ; BSR set to: 0
 24100                           ; Switch size 1, requested type "simple"
 24101                           ; Number of cases is 39, Range of values is 0 to 52
 24102                           ; switch strategies available:
 24103                           ; Name         Instructions Cycles
 24104                           ; simple_byte          118    60 (average)
 24105                           ;	Chosen strategy is simple_byte
 24106  00332E  501A               	movf	??_read_eusartparser^0,w,c
 24107  003330  0A00               	xorlw	0	; case 0
 24108  003332  B4D8               	btfsc	status,2,c
 24109  003334  D5A4               	goto	l27221
 24110  003336  0A02               	xorlw	2	; case 2
 24111  003338  B4D8               	btfsc	status,2,c
 24112  00333A  D5D9               	goto	l27233
 24113  00333C  0A01               	xorlw	1	; case 3
 24114  00333E  B4D8               	btfsc	status,2,c
 24115  003340  D659               	goto	l27277
 24116  003342  0A06               	xorlw	6	; case 5
 24117  003344  B4D8               	btfsc	status,2,c
 24118  003346  D5E4               	goto	l27237
 24119  003348  0A02               	xorlw	2	; case 7
 24120  00334A  B4D8               	btfsc	status,2,c
 24121  00334C  D639               	goto	l27269
 24122  00334E  0A0F               	xorlw	15	; case 8
 24123  003350  B4D8               	btfsc	status,2,c
 24124  003352  D67D               	goto	l27297
 24125  003354  0A02               	xorlw	2	; case 10
 24126  003356  B4D8               	btfsc	status,2,c
 24127  003358  D656               	goto	l27281
 24128  00335A  0A1A               	xorlw	26	; case 16
 24129  00335C  B4D8               	btfsc	status,2,c
 24130  00335E  D58F               	goto	l27221
 24131  003360  0A01               	xorlw	1	; case 17
 24132  003362  B4D8               	btfsc	status,2,c
 24133  003364  D5AA               	goto	l27225
 24134  003366  0A03               	xorlw	3	; case 18
 24135  003368  B4D8               	btfsc	status,2,c
 24136  00336A  D5B8               	goto	l27229
 24137  00336C  0A01               	xorlw	1	; case 19
 24138  00336E  B4D8               	btfsc	status,2,c
 24139  003370  D5BE               	goto	l27233
 24140  003372  0A07               	xorlw	7	; case 20
 24141  003374  B4D8               	btfsc	status,2,c
 24142  003376  D5CC               	goto	l27237
 24143  003378  0A01               	xorlw	1	; case 21
 24144  00337A  B4D8               	btfsc	status,2,c
 24145  00337C  D5DA               	goto	l27241
 24146  00337E  0A03               	xorlw	3	; case 22
 24147  003380  B4D8               	btfsc	status,2,c
 24148  003382  D5E8               	goto	l27245
 24149  003384  0A01               	xorlw	1	; case 23
 24150  003386  B4D8               	btfsc	status,2,c
 24151  003388  D5EE               	goto	l27249
 24152  00338A  0A0F               	xorlw	15	; case 24
 24153  00338C  B4D8               	btfsc	status,2,c
 24154  00338E  D5F4               	goto	l27253
 24155  003390  0A01               	xorlw	1	; case 25
 24156  003392  B4D8               	btfsc	status,2,c
 24157  003394  D5FA               	goto	l27257
 24158  003396  0A03               	xorlw	3	; case 26
 24159  003398  B4D8               	btfsc	status,2,c
 24160  00339A  D600               	goto	l27261
 24161  00339C  0A01               	xorlw	1	; case 27
 24162  00339E  B4D8               	btfsc	status,2,c
 24163  0033A0  D606               	goto	l27265
 24164  0033A2  0A07               	xorlw	7	; case 28
 24165  0033A4  B4D8               	btfsc	status,2,c
 24166  0033A6  D60C               	goto	l27269
 24167  0033A8  0A01               	xorlw	1	; case 29
 24168  0033AA  B4D8               	btfsc	status,2,c
 24169  0033AC  D612               	goto	l27273
 24170  0033AE  0A03               	xorlw	3	; case 30
 24171  0033B0  B4D8               	btfsc	status,2,c
 24172  0033B2  D620               	goto	l27277
 24173  0033B4  0A01               	xorlw	1	; case 31
 24174  0033B6  B4D8               	btfsc	status,2,c
 24175  0033B8  D626               	goto	l27281
 24176  0033BA  0A3F               	xorlw	63	; case 32
 24177  0033BC  B4D8               	btfsc	status,2,c
 24178  0033BE  D62C               	goto	l27285
 24179  0033C0  0A01               	xorlw	1	; case 33
 24180  0033C2  B4D8               	btfsc	status,2,c
 24181  0033C4  D632               	goto	l27289
 24182  0033C6  0A03               	xorlw	3	; case 34
 24183  0033C8  B4D8               	btfsc	status,2,c
 24184  0033CA  D638               	goto	l27293
 24185  0033CC  0A01               	xorlw	1	; case 35
 24186  0033CE  B4D8               	btfsc	status,2,c
 24187  0033D0  D63E               	goto	l27297
 24188  0033D2  0A07               	xorlw	7	; case 36
 24189  0033D4  B4D8               	btfsc	status,2,c
 24190  0033D6  D644               	goto	l27301
 24191  0033D8  0A01               	xorlw	1	; case 37
 24192  0033DA  B4D8               	btfsc	status,2,c
 24193  0033DC  D64A               	goto	l27305
 24194  0033DE  0A03               	xorlw	3	; case 38
 24195  0033E0  B4D8               	btfsc	status,2,c
 24196  0033E2  D650               	goto	l27309
 24197  0033E4  0A01               	xorlw	1	; case 39
 24198  0033E6  B4D8               	btfsc	status,2,c
 24199  0033E8  D65E               	goto	l27313
 24200  0033EA  0A0E               	xorlw	14	; case 41
 24201  0033EC  B4D8               	btfsc	status,2,c
 24202  0033EE  D68E               	goto	l27319
 24203  0033F0  0A03               	xorlw	3	; case 42
 24204  0033F2  B4D8               	btfsc	status,2,c
 24205  0033F4  D69C               	goto	l27323
 24206  0033F6  0A06               	xorlw	6	; case 44
 24207  0033F8  B4D8               	btfsc	status,2,c
 24208  0033FA  D6CC               	goto	l27329
 24209  0033FC  0A02               	xorlw	2	; case 46
 24210  0033FE  B4D8               	btfsc	status,2,c
 24211  003400  D6FC               	goto	l27335
 24212  003402  0A01               	xorlw	1	; case 47
 24213  003404  B4D8               	btfsc	status,2,c
 24214  003406  D704               	goto	l27339
 24215  003408  0A1F               	xorlw	31	; case 48
 24216  00340A  B4D8               	btfsc	status,2,c
 24217  00340C  D70C               	goto	l27343
 24218  00340E  0A02               	xorlw	2	; case 50
 24219  003410  B4D8               	btfsc	status,2,c
 24220  003412  D73C               	goto	l27349
 24221  003414  0A06               	xorlw	6	; case 52
 24222  003416  A4D8               	btfss	status,2,c
 24223  003418  0012               	return	
 24224  00341A  D76B               	goto	l27355
 24225  00341C                     __end_of_read_eusartparser:
 24226                           	callstack 0
 24227                           
 24228 ;; *************** function _write_package *****************
 24229 ;; Defined at:
 24230 ;;		line 50 in file "eusartpackage.c"
 24231 ;; Parameters:    Size  Location     Type
 24232 ;;  package         7   16[COMRAM] const struct package_t
 24233 ;; Auto vars:     Size  Location     Type
 24234 ;;		None
 24235 ;; Return value:  Size  Location     Type
 24236 ;;                  1    wreg      void 
 24237 ;; Registers used:
 24238 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24239 ;; Tracked objects:
 24240 ;;		On entry : 0/0
 24241 ;;		On exit  : 0/0
 24242 ;;		Unchanged: 0/0
 24243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24244 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24245 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24247 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24248 ;;Total ram usage:        7 bytes
 24249 ;; Hardware stack levels used: 1
 24250 ;; Hardware stack levels required when called: 5
 24251 ;; This function calls:
 24252 ;;		_EUSART1_Write
 24253 ;; This function is called by:
 24254 ;;		_read_eusartparser
 24255 ;;		_eusartparser
 24256 ;; This function uses a non-reentrant model
 24257 ;;
 24258                           
 24259                           	psect	text79
 24260  009742                     __ptext79:
 24261                           	callstack 0
 24262  009742                     _write_package:
 24263                           	callstack 24
 24264                           
 24265                           ;eusartpackage.c: 52:         if(package.valid==0)
 24266                           
 24267                           ;incstack = 0
 24268  009742  5017               	movf	(write_package@package+6)^0,w,c
 24269  009744  B4D8               	btfsc	status,2,c
 24270  009746  0012               	return	
 24271                           
 24272                           ;eusartpackage.c: 56:         EUSART1_Write(package.startbyte);
 24273  009748  5015               	movf	(write_package@package+4)^0,w,c
 24274  00974A  EC20  F04A         	call	_EUSART1_Write
 24275                           
 24276                           ;eusartpackage.c: 57:         EUSART1_Write(package.functioncode);
 24277  00974E  5011               	movf	write_package@package^0,w,c
 24278  009750  EC20  F04A         	call	_EUSART1_Write
 24279                           
 24280                           ;eusartpackage.c: 58:         EUSART1_Write(package.address);
 24281  009754  5012               	movf	(write_package@package+1)^0,w,c
 24282  009756  EC20  F04A         	call	_EUSART1_Write
 24283                           
 24284                           ;eusartpackage.c: 59:         EUSART1_Write(package.data.data8[0]);
 24285  00975A  5013               	movf	(write_package@package+2)^0,w,c
 24286  00975C  EC20  F04A         	call	_EUSART1_Write
 24287                           
 24288                           ;eusartpackage.c: 60:         EUSART1_Write(package.data.data8[1]);
 24289  009760  5014               	movf	(write_package@package+3)^0,w,c
 24290  009762  EC20  F04A         	call	_EUSART1_Write
 24291                           
 24292                           ;eusartpackage.c: 61:         EUSART1_Write(package.endbyte);
 24293  009766  5016               	movf	(write_package@package+5)^0,w,c
 24294  009768  EC20  F04A         	call	_EUSART1_Write
 24295  00976C  0012               	return		;funcret
 24296  00976E                     __end_of_write_package:
 24297                           	callstack 0
 24298                           
 24299 ;; *************** function _EUSART1_Write *****************
 24300 ;; Defined at:
 24301 ;;		line 173 in file "mcc_generated_files/eusart1.c"
 24302 ;; Parameters:    Size  Location     Type
 24303 ;;  txData          1    wreg     unsigned char 
 24304 ;; Auto vars:     Size  Location     Type
 24305 ;;  txData          1   15[COMRAM] unsigned char 
 24306 ;; Return value:  Size  Location     Type
 24307 ;;                  1    wreg      void 
 24308 ;; Registers used:
 24309 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 24310 ;; Tracked objects:
 24311 ;;		On entry : 0/0
 24312 ;;		On exit  : 3F/E
 24313 ;;		Unchanged: 0/0
 24314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24316 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24318 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24319 ;;Total ram usage:        1 bytes
 24320 ;; Hardware stack levels used: 1
 24321 ;; Hardware stack levels required when called: 4
 24322 ;; This function calls:
 24323 ;;		Nothing
 24324 ;; This function is called by:
 24325 ;;		_write_package
 24326 ;; This function uses a non-reentrant model
 24327 ;;
 24328                           
 24329                           	psect	text80
 24330  009440                     __ptext80:
 24331                           	callstack 0
 24332  009440                     _EUSART1_Write:
 24333                           	callstack 24
 24334                           
 24335                           ;incstack = 0
 24336                           ;EUSART1_Write@txData stored from wreg
 24337  009440  6E10               	movwf	EUSART1_Write@txData^0,c
 24338  009442                     
 24339                           ;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBufferRemaining)
 24340                           
 24341                           ;mcc_generated_files/eusart1.c: 173: void EUSART1_Write(uint8_t txData);mcc_generated_fi
      +                          les/eusart1.c: 174: {;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBuffer
      +                          Remaining)
 24342  009442  0101               	movlb	1	; () banked
 24343  009444  51FE               	movf	_eusart1TxBufferRemaining& (0+255),w,b	;volatile
 24344  009446  B4D8               	btfsc	status,2,c
 24345  009448  D7FC               	goto	l20635
 24346                           
 24347                           ; BSR set to: 1
 24348                           ;mcc_generated_files/eusart1.c: 179:     if(0 == PIE3bits.TX1IE)
 24349  00944A  010E               	movlb	14	; () banked
 24350  00944C  B9C5               	btfsc	197,4,b	;volatile
 24351  00944E  D003               	goto	l100
 24352                           
 24353                           ; BSR set to: 14
 24354                           ;mcc_generated_files/eusart1.c: 180:     {;mcc_generated_files/eusart1.c: 181:         T
      +                          X1REG = txData;
 24355  009450  C010  FF9A         	movff	EUSART1_Write@txData,3994	;volatile
 24356                           
 24357                           ;mcc_generated_files/eusart1.c: 182:     }
 24358  009454  D012               	goto	l20651
 24359  009456                     l100:
 24360                           
 24361                           ; BSR set to: 14
 24362                           ;mcc_generated_files/eusart1.c: 184:     {;mcc_generated_files/eusart1.c: 185:         P
      +                          IE3bits.TX1IE = 0;
 24363  009456  99C5               	bcf	197,4,b	;volatile
 24364                           
 24365                           ; BSR set to: 14
 24366                           ;mcc_generated_files/eusart1.c: 186:         eusart1TxBuffer[eusart1TxHead++] = txData;
 24367  009458  0E84               	movlw	low _eusart1TxBuffer
 24368  00945A  0100               	movlb	0	; () banked
 24369  00945C  2597               	addwf	_eusart1TxHead& (0+255),w,b	;volatile
 24370  00945E  6ED9               	movwf	fsr2l,c
 24371  009460  6ADA               	clrf	fsr2h,c
 24372  009462  0E02               	movlw	high _eusart1TxBuffer
 24373  009464  22DA               	addwfc	fsr2h,f,c
 24374  009466  C010  FFDF         	movff	EUSART1_Write@txData,indf2
 24375                           
 24376                           ; BSR set to: 0
 24377  00946A  2B97               	incf	_eusart1TxHead& (0+255),f,b	;volatile
 24378                           
 24379                           ; BSR set to: 0
 24380                           ;mcc_generated_files/eusart1.c: 187:         if(sizeof(eusart1TxBuffer) <= eusart1TxHead
      +                          )
 24381  00946C  0E07               	movlw	7
 24382  00946E  6597               	cpfsgt	_eusart1TxHead& (0+255),b
 24383  009470  D002               	goto	l20649
 24384                           
 24385                           ; BSR set to: 0
 24386                           ;mcc_generated_files/eusart1.c: 188:         {;mcc_generated_files/eusart1.c: 189:      
      +                                 eusart1TxHead = 0;
 24387  009472  0E00               	movlw	0
 24388  009474  6F97               	movwf	_eusart1TxHead& (0+255),b	;volatile
 24389  009476                     l20649:
 24390                           
 24391                           ; BSR set to: 0
 24392                           ;mcc_generated_files/eusart1.c: 191:         eusart1TxBufferRemaining--;
 24393  009476  0101               	movlb	1	; () banked
 24394  009478  07FE               	decf	_eusart1TxBufferRemaining& (0+255),f,b	;volatile
 24395  00947A                     l20651:
 24396                           
 24397                           ;mcc_generated_files/eusart1.c: 193:     PIE3bits.TX1IE = 1;
 24398  00947A  010E               	movlb	14	; () banked
 24399  00947C  89C5               	bsf	197,4,b	;volatile
 24400                           
 24401                           ; BSR set to: 14
 24402  00947E  0012               	return		;funcret
 24403  009480                     __end_of_EUSART1_Write:
 24404                           	callstack 0
 24405                           
 24406 ;; *************** function _confirmpackage *****************
 24407 ;; Defined at:
 24408 ;;		line 347 in file "eusartparser.c"
 24409 ;; Parameters:    Size  Location     Type
 24410 ;;  package         2   17[COMRAM] PTR struct package_t
 24411 ;;		 -> main@package(7), 
 24412 ;;  confirm         1   19[COMRAM] _Bool 
 24413 ;; Auto vars:     Size  Location     Type
 24414 ;;		None
 24415 ;; Return value:  Size  Location     Type
 24416 ;;                  1    wreg      void 
 24417 ;; Registers used:
 24418 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24419 ;; Tracked objects:
 24420 ;;		On entry : 0/0
 24421 ;;		On exit  : 0/0
 24422 ;;		Unchanged: 0/0
 24423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24424 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24425 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24427 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24428 ;;Total ram usage:        3 bytes
 24429 ;; Hardware stack levels used: 1
 24430 ;; Hardware stack levels required when called: 5
 24431 ;; This function calls:
 24432 ;;		_init_package
 24433 ;; This function is called by:
 24434 ;;		_eusartparser
 24435 ;; This function uses a non-reentrant model
 24436 ;;
 24437                           
 24438                           	psect	text81
 24439  008EAE                     __ptext81:
 24440                           	callstack 0
 24441  008EAE                     _confirmpackage:
 24442                           	callstack 24
 24443                           
 24444                           ;eusartparser.c: 348:         init_package(package);
 24445                           
 24446                           ; BSR set to: 14
 24447                           ;incstack = 0
 24448  008EAE  C012  F010         	movff	confirmpackage@package,init_package@package
 24449  008EB2  C013  F011         	movff	confirmpackage@package+1,init_package@package+1
 24450  008EB6  EC2A  F04B         	call	_init_package	;wreg free
 24451                           
 24452                           ;eusartparser.c: 349:         package->functioncode=0x03;
 24453  008EBA  C012  FFD9         	movff	confirmpackage@package,fsr2l
 24454  008EBE  C013  FFDA         	movff	confirmpackage@package+1,fsr2h
 24455  008EC2  0E03               	movlw	3
 24456  008EC4  6EDF               	movwf	indf2,c
 24457                           
 24458                           ;eusartparser.c: 350:         package->address=0x00;
 24459  008EC6  EE20 F001          	lfsr	2,1
 24460  008ECA  5012               	movf	confirmpackage@package^0,w,c
 24461  008ECC  26D9               	addwf	fsr2l,f,c
 24462  008ECE  5013               	movf	(confirmpackage@package+1)^0,w,c
 24463  008ED0  22DA               	addwfc	fsr2h,f,c
 24464  008ED2  0E00               	movlw	0
 24465  008ED4  6EDF               	movwf	indf2,c
 24466                           
 24467                           ;eusartparser.c: 351:         if(confirm==1)
 24468  008ED6  0414               	decf	confirmpackage@confirm^0,w,c
 24469  008ED8  A4D8               	btfss	status,2,c
 24470  008EDA  D00B               	goto	l27375
 24471                           
 24472                           ;eusartparser.c: 352:             package->data.data16=0x0001;
 24473  008EDC  EE20 F002          	lfsr	2,2
 24474  008EE0  5012               	movf	confirmpackage@package^0,w,c
 24475  008EE2  26D9               	addwf	fsr2l,f,c
 24476  008EE4  5013               	movf	(confirmpackage@package+1)^0,w,c
 24477  008EE6  22DA               	addwfc	fsr2h,f,c
 24478  008EE8  0E01               	movlw	1
 24479  008EEA  6EDE               	movwf	postinc2,c
 24480  008EEC  0E00               	movlw	0
 24481  008EEE  6EDD               	movwf	postdec2,c
 24482  008EF0  0012               	return	
 24483  008EF2                     l27375:
 24484                           
 24485                           ;eusartparser.c: 354:             package->data.data16=0x0000;
 24486  008EF2  EE20 F002          	lfsr	2,2
 24487  008EF6  5012               	movf	confirmpackage@package^0,w,c
 24488  008EF8  26D9               	addwf	fsr2l,f,c
 24489  008EFA  5013               	movf	(confirmpackage@package+1)^0,w,c
 24490  008EFC  22DA               	addwfc	fsr2h,f,c
 24491  008EFE  0E00               	movlw	0
 24492  008F00  6EDE               	movwf	postinc2,c
 24493  008F02  0E00               	movlw	0
 24494  008F04  6EDD               	movwf	postdec2,c
 24495  008F06  0012               	return		;funcret
 24496  008F08                     __end_of_confirmpackage:
 24497                           	callstack 0
 24498                           
 24499 ;; *************** function _init_package *****************
 24500 ;; Defined at:
 24501 ;;		line 11 in file "eusartpackage.c"
 24502 ;; Parameters:    Size  Location     Type
 24503 ;;  package         2   15[COMRAM] PTR struct package_t
 24504 ;;		 -> main@package(7), 
 24505 ;; Auto vars:     Size  Location     Type
 24506 ;;		None
 24507 ;; Return value:  Size  Location     Type
 24508 ;;                  1    wreg      void 
 24509 ;; Registers used:
 24510 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 24511 ;; Tracked objects:
 24512 ;;		On entry : 0/0
 24513 ;;		On exit  : 0/0
 24514 ;;		Unchanged: 0/0
 24515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24516 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24517 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24519 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24520 ;;Total ram usage:        2 bytes
 24521 ;; Hardware stack levels used: 1
 24522 ;; Hardware stack levels required when called: 4
 24523 ;; This function calls:
 24524 ;;		Nothing
 24525 ;; This function is called by:
 24526 ;;		_confirmpackage
 24527 ;; This function uses a non-reentrant model
 24528 ;;
 24529                           
 24530                           	psect	text82
 24531  009654                     __ptext82:
 24532                           	callstack 0
 24533  009654                     _init_package:
 24534                           	callstack 24
 24535                           
 24536                           ;eusartpackage.c: 12:         package->startbyte=0x0A;
 24537                           
 24538                           ;incstack = 0
 24539  009654  EE20 F004          	lfsr	2,4
 24540  009658  5010               	movf	init_package@package^0,w,c
 24541  00965A  26D9               	addwf	fsr2l,f,c
 24542  00965C  5011               	movf	(init_package@package+1)^0,w,c
 24543  00965E  22DA               	addwfc	fsr2h,f,c
 24544  009660  0E0A               	movlw	10
 24545  009662  6EDF               	movwf	indf2,c
 24546                           
 24547                           ;eusartpackage.c: 13:         package->endbyte=0x0D;
 24548  009664  EE20 F005          	lfsr	2,5
 24549  009668  5010               	movf	init_package@package^0,w,c
 24550  00966A  26D9               	addwf	fsr2l,f,c
 24551  00966C  5011               	movf	(init_package@package+1)^0,w,c
 24552  00966E  22DA               	addwfc	fsr2h,f,c
 24553  009670  0E0D               	movlw	13
 24554  009672  6EDF               	movwf	indf2,c
 24555                           
 24556                           ;eusartpackage.c: 14:         package->valid=1;
 24557  009674  EE20 F006          	lfsr	2,6
 24558  009678  5010               	movf	init_package@package^0,w,c
 24559  00967A  26D9               	addwf	fsr2l,f,c
 24560  00967C  5011               	movf	(init_package@package+1)^0,w,c
 24561  00967E  22DA               	addwfc	fsr2h,f,c
 24562  009680  0E01               	movlw	1
 24563  009682  6EDF               	movwf	indf2,c
 24564  009684  0012               	return		;funcret
 24565  009686                     __end_of_init_package:
 24566                           	callstack 0
 24567                           
 24568 ;; *************** function _cmdMemoryIsEmpty *****************
 24569 ;; Defined at:
 24570 ;;		line 122 in file "controlMemory_MC50.c"
 24571 ;; Parameters:    Size  Location     Type
 24572 ;;  cmdType         1    wreg     unsigned char 
 24573 ;;  position        1   45[COMRAM] unsigned char 
 24574 ;; Auto vars:     Size  Location     Type
 24575 ;;  cmdType         1   48[COMRAM] unsigned char 
 24576 ;;  tempSerial      4   49[COMRAM] unsigned long 
 24577 ;; Return value:  Size  Location     Type
 24578 ;;                  1    wreg      unsigned char 
 24579 ;; Registers used:
 24580 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24581 ;; Tracked objects:
 24582 ;;		On entry : 0/1
 24583 ;;		On exit  : 0/0
 24584 ;;		Unchanged: 0/0
 24585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24586 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24587 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24588 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24589 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24590 ;;Total ram usage:        8 bytes
 24591 ;; Hardware stack levels used: 1
 24592 ;; Hardware stack levels required when called: 13
 24593 ;; This function calls:
 24594 ;;		_i2c_readDataBlock
 24595 ;; This function is called by:
 24596 ;;		_setValueToEdit
 24597 ;;		_controlSelectRemote
 24598 ;;		_eusartparser
 24599 ;; This function uses a non-reentrant model
 24600 ;;
 24601                           
 24602                           	psect	text83
 24603  008048                     __ptext83:
 24604                           	callstack 0
 24605  008048                     _cmdMemoryIsEmpty:
 24606                           	callstack 14
 24607                           
 24608                           ;incstack = 0
 24609                           ;cmdMemoryIsEmpty@cmdType stored from wreg
 24610  008048  6E31               	movwf	cmdMemoryIsEmpty@cmdType^0,c
 24611                           
 24612                           ;controlMemory_MC50.c: 122: char cmdMemoryIsEmpty(char cmdType, char position);controlMe
      +                          mory_MC50.c: 123: {;controlMemory_MC50.c: 124:     unsigned long tempSerial=0;
 24613  00804A  0E00               	movlw	0
 24614  00804C  6E32               	movwf	cmdMemoryIsEmpty@tempSerial^0,c
 24615  00804E  0E00               	movlw	0
 24616  008050  6E33               	movwf	(cmdMemoryIsEmpty@tempSerial+1)^0,c
 24617  008052  0E00               	movlw	0
 24618  008054  6E34               	movwf	(cmdMemoryIsEmpty@tempSerial+2)^0,c
 24619  008056  0E00               	movlw	0
 24620  008058  6E35               	movwf	(cmdMemoryIsEmpty@tempSerial+3)^0,c
 24621                           
 24622                           ;controlMemory_MC50.c: 127:      if(cmdType==0)
 24623  00805A  5031               	movf	cmdMemoryIsEmpty@cmdType^0,w,c
 24624  00805C  A4D8               	btfss	status,2,c
 24625  00805E  D01A               	goto	l20723
 24626                           
 24627                           ;controlMemory_MC50.c: 128:     {;controlMemory_MC50.c: 129:          i2c_readDataBlock(
      +                          0x50, (uint16_t)(0x0200 + (position * 4)),(char*)&tempSerial, 4);
 24628  008060  502E               	movf	cmdMemoryIsEmpty@position^0,w,c
 24629  008062  6E2F               	movwf	??_cmdMemoryIsEmpty^0,c
 24630  008064  6A30               	clrf	(??_cmdMemoryIsEmpty+1)^0,c
 24631  008066  90D8               	bcf	status,0,c
 24632  008068  362F               	rlcf	??_cmdMemoryIsEmpty^0,f,c
 24633  00806A  3630               	rlcf	(??_cmdMemoryIsEmpty+1)^0,f,c
 24634  00806C  90D8               	bcf	status,0,c
 24635  00806E  362F               	rlcf	??_cmdMemoryIsEmpty^0,f,c
 24636  008070  3630               	rlcf	(??_cmdMemoryIsEmpty+1)^0,f,c
 24637  008072  0E00               	movlw	0
 24638  008074  242F               	addwf	??_cmdMemoryIsEmpty^0,w,c
 24639  008076  6E22               	movwf	i2c_readDataBlock@reg^0,c
 24640  008078  0E02               	movlw	2
 24641  00807A  2030               	addwfc	(??_cmdMemoryIsEmpty+1)^0,w,c
 24642  00807C  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 24643  00807E  0E32               	movlw	low cmdMemoryIsEmpty@tempSerial
 24644  008080  6E24               	movwf	i2c_readDataBlock@data^0,c
 24645  008082  6A25               	clrf	(i2c_readDataBlock@data+1)^0,c
 24646  008084  0E00               	movlw	0
 24647  008086  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 24648  008088  0E04               	movlw	4
 24649  00808A  6E26               	movwf	i2c_readDataBlock@len^0,c
 24650  00808C  0E50               	movlw	80
 24651  00808E  EC45  F044         	call	_i2c_readDataBlock
 24652                           
 24653                           ;controlMemory_MC50.c: 130:     }
 24654  008092  D019               	goto	l20725
 24655  008094                     l20723:
 24656                           
 24657                           ;controlMemory_MC50.c: 132:     {;controlMemory_MC50.c: 133:          i2c_readDataBlock(
      +                          0x50, (uint16_t)(0x0500 + (position * 4)),(char*)&tempSerial, 4);
 24658  008094  502E               	movf	cmdMemoryIsEmpty@position^0,w,c
 24659  008096  6E2F               	movwf	??_cmdMemoryIsEmpty^0,c
 24660  008098  6A30               	clrf	(??_cmdMemoryIsEmpty+1)^0,c
 24661  00809A  90D8               	bcf	status,0,c
 24662  00809C  362F               	rlcf	??_cmdMemoryIsEmpty^0,f,c
 24663  00809E  3630               	rlcf	(??_cmdMemoryIsEmpty+1)^0,f,c
 24664  0080A0  90D8               	bcf	status,0,c
 24665  0080A2  362F               	rlcf	??_cmdMemoryIsEmpty^0,f,c
 24666  0080A4  3630               	rlcf	(??_cmdMemoryIsEmpty+1)^0,f,c
 24667  0080A6  0E00               	movlw	0
 24668  0080A8  242F               	addwf	??_cmdMemoryIsEmpty^0,w,c
 24669  0080AA  6E22               	movwf	i2c_readDataBlock@reg^0,c
 24670  0080AC  0E05               	movlw	5
 24671  0080AE  2030               	addwfc	(??_cmdMemoryIsEmpty+1)^0,w,c
 24672  0080B0  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 24673  0080B2  0E32               	movlw	low cmdMemoryIsEmpty@tempSerial
 24674  0080B4  6E24               	movwf	i2c_readDataBlock@data^0,c
 24675  0080B6  6A25               	clrf	(i2c_readDataBlock@data+1)^0,c
 24676  0080B8  0E00               	movlw	0
 24677  0080BA  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 24678  0080BC  0E04               	movlw	4
 24679  0080BE  6E26               	movwf	i2c_readDataBlock@len^0,c
 24680  0080C0  0E50               	movlw	80
 24681  0080C2  EC45  F044         	call	_i2c_readDataBlock
 24682  0080C6                     l20725:
 24683                           
 24684                           ;controlMemory_MC50.c: 136:      if( tempSerial==0)
 24685  0080C6  5032               	movf	cmdMemoryIsEmpty@tempSerial^0,w,c
 24686  0080C8  1033               	iorwf	(cmdMemoryIsEmpty@tempSerial+1)^0,w,c
 24687  0080CA  1034               	iorwf	(cmdMemoryIsEmpty@tempSerial+2)^0,w,c
 24688  0080CC  1035               	iorwf	(cmdMemoryIsEmpty@tempSerial+3)^0,w,c
 24689  0080CE  A4D8               	btfss	status,2,c
 24690  0080D0  D002               	goto	l20733
 24691                           
 24692                           ;controlMemory_MC50.c: 137:      {;controlMemory_MC50.c: 138:          return 1;
 24693  0080D2  0E01               	movlw	1
 24694  0080D4  0012               	return	
 24695  0080D6                     l20733:
 24696                           
 24697                           ;controlMemory_MC50.c: 141:      {;controlMemory_MC50.c: 142:          return 0;
 24698  0080D6  0E00               	movlw	0
 24699  0080D8  0012               	return		;funcret
 24700  0080DA                     __end_of_cmdMemoryIsEmpty:
 24701                           	callstack 0
 24702                           
 24703 ;; *************** function _RemoveSerial *****************
 24704 ;; Defined at:
 24705 ;;		line 95 in file "controlMemory_MC50.c"
 24706 ;; Parameters:    Size  Location     Type
 24707 ;;  cmdType         1    wreg     unsigned char 
 24708 ;;  position        1   57[COMRAM] unsigned char 
 24709 ;; Auto vars:     Size  Location     Type
 24710 ;;  cmdType         1    2[BANK0 ] unsigned char 
 24711 ;;  tempSerial      4    3[BANK0 ] unsigned long 
 24712 ;; Return value:  Size  Location     Type
 24713 ;;                  1    wreg      void 
 24714 ;; Registers used:
 24715 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24716 ;; Tracked objects:
 24717 ;;		On entry : 3E/1
 24718 ;;		On exit  : 0/0
 24719 ;;		Unchanged: 0/0
 24720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24721 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24722 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24723 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24724 ;;      Totals:         1       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24725 ;;Total ram usage:        8 bytes
 24726 ;; Hardware stack levels used: 1
 24727 ;; Hardware stack levels required when called: 13
 24728 ;; This function calls:
 24729 ;;		_i2c_writeNBytes
 24730 ;; This function is called by:
 24731 ;;		_controlSelectRemote
 24732 ;;		_eusartparser
 24733 ;; This function uses a non-reentrant model
 24734 ;;
 24735                           
 24736                           	psect	text84
 24737  0085A6                     __ptext84:
 24738                           	callstack 0
 24739  0085A6                     _RemoveSerial:
 24740                           	callstack 14
 24741                           
 24742                           ;incstack = 0
 24743                           ;RemoveSerial@cmdType stored from wreg
 24744  0085A6  0100               	movlb	0	; () banked
 24745  0085A8  6FDA               	movwf	RemoveSerial@cmdType& (0+255),b
 24746                           
 24747                           ;controlMemory_MC50.c: 95: void RemoveSerial(char cmdType, char position);controlMemory_
      +                          MC50.c: 96: {;controlMemory_MC50.c: 97:     unsigned long tempSerial=0;
 24748  0085AA  0E00               	movlw	0
 24749  0085AC  0100               	movlb	0	; () banked
 24750  0085AE  6FDB               	movwf	RemoveSerial@tempSerial& (0+255),b
 24751  0085B0  0E00               	movlw	0
 24752  0085B2  6FDC               	movwf	(RemoveSerial@tempSerial+1)& (0+255),b
 24753  0085B4  0E00               	movlw	0
 24754  0085B6  6FDD               	movwf	(RemoveSerial@tempSerial+2)& (0+255),b
 24755  0085B8  0E00               	movlw	0
 24756  0085BA  6FDE               	movwf	(RemoveSerial@tempSerial+3)& (0+255),b
 24757                           
 24758                           ; BSR set to: 0
 24759                           ;controlMemory_MC50.c: 100:     if(cmdType==0)
 24760  0085BC  51DA               	movf	RemoveSerial@cmdType& (0+255),w,b
 24761  0085BE  A4D8               	btfss	status,2,c
 24762  0085C0  D019               	goto	l20715
 24763                           
 24764                           ; BSR set to: 0
 24765                           ;controlMemory_MC50.c: 101:     {;controlMemory_MC50.c: 102:        i2c_writeNBytes(0x50
      +                          , (uint16_t)(0x0200 + (position * 4)), (char*)&tempSerial, 4);
 24766  0085C2  503A               	movf	RemoveSerial@position^0,w,c
 24767  0085C4  6FD8               	movwf	??_RemoveSerial& (0+255),b
 24768  0085C6  6BD9               	clrf	(??_RemoveSerial+1)& (0+255),b
 24769  0085C8  90D8               	bcf	status,0,c
 24770  0085CA  37D8               	rlcf	??_RemoveSerial& (0+255),f,b
 24771  0085CC  37D9               	rlcf	(??_RemoveSerial+1)& (0+255),f,b
 24772  0085CE  90D8               	bcf	status,0,c
 24773  0085D0  37D8               	rlcf	??_RemoveSerial& (0+255),f,b
 24774  0085D2  37D9               	rlcf	(??_RemoveSerial+1)& (0+255),f,b
 24775  0085D4  0E00               	movlw	0
 24776  0085D6  25D8               	addwf	??_RemoveSerial& (0+255),w,b
 24777  0085D8  6E22               	movwf	i2c_writeNBytes@reg^0,c
 24778  0085DA  0E02               	movlw	2
 24779  0085DC  21D9               	addwfc	(??_RemoveSerial+1)& (0+255),w,b
 24780  0085DE  6E23               	movwf	(i2c_writeNBytes@reg+1)^0,c
 24781  0085E0  0EDB               	movlw	low RemoveSerial@tempSerial
 24782  0085E2  6E24               	movwf	i2c_writeNBytes@data^0,c
 24783  0085E4  0E00               	movlw	0
 24784  0085E6  6E26               	movwf	(i2c_writeNBytes@len+1)^0,c
 24785  0085E8  0E04               	movlw	4
 24786  0085EA  6E25               	movwf	i2c_writeNBytes@len^0,c
 24787  0085EC  0E50               	movlw	80
 24788  0085EE  EC80  F044         	call	_i2c_writeNBytes
 24789                           
 24790                           ;controlMemory_MC50.c: 103:     }
 24791  0085F2  0012               	return	
 24792  0085F4                     l20715:
 24793                           
 24794                           ; BSR set to: 0
 24795                           ;controlMemory_MC50.c: 105:     {;controlMemory_MC50.c: 106:        i2c_writeNBytes(0x50
      +                          , (uint16_t)(0x0500 + (position * 4)), (char*)&tempSerial, 4);
 24796  0085F4  503A               	movf	RemoveSerial@position^0,w,c
 24797  0085F6  6FD8               	movwf	??_RemoveSerial& (0+255),b
 24798  0085F8  6BD9               	clrf	(??_RemoveSerial+1)& (0+255),b
 24799  0085FA  90D8               	bcf	status,0,c
 24800  0085FC  37D8               	rlcf	??_RemoveSerial& (0+255),f,b
 24801  0085FE  37D9               	rlcf	(??_RemoveSerial+1)& (0+255),f,b
 24802  008600  90D8               	bcf	status,0,c
 24803  008602  37D8               	rlcf	??_RemoveSerial& (0+255),f,b
 24804  008604  37D9               	rlcf	(??_RemoveSerial+1)& (0+255),f,b
 24805  008606  0E00               	movlw	0
 24806  008608  25D8               	addwf	??_RemoveSerial& (0+255),w,b
 24807  00860A  6E22               	movwf	i2c_writeNBytes@reg^0,c
 24808  00860C  0E05               	movlw	5
 24809  00860E  21D9               	addwfc	(??_RemoveSerial+1)& (0+255),w,b
 24810  008610  6E23               	movwf	(i2c_writeNBytes@reg+1)^0,c
 24811  008612  0EDB               	movlw	low RemoveSerial@tempSerial
 24812  008614  6E24               	movwf	i2c_writeNBytes@data^0,c
 24813  008616  0E00               	movlw	0
 24814  008618  6E26               	movwf	(i2c_writeNBytes@len+1)^0,c
 24815  00861A  0E04               	movlw	4
 24816  00861C  6E25               	movwf	i2c_writeNBytes@len^0,c
 24817  00861E  0E50               	movlw	80
 24818  008620  EC80  F044         	call	_i2c_writeNBytes
 24819  008624  0012               	return		;funcret
 24820  008626                     __end_of_RemoveSerial:
 24821                           	callstack 0
 24822                           
 24823 ;; *************** function _ReadSerial *****************
 24824 ;; Defined at:
 24825 ;;		line 110 in file "controlMemory_MC50.c"
 24826 ;; Parameters:    Size  Location     Type
 24827 ;;  cmdType         1    wreg     unsigned char 
 24828 ;;  tempSerial      1   45[COMRAM] PTR unsigned long 
 24829 ;;		 -> eusartparser@serial(4), 
 24830 ;;  position        1   46[COMRAM] unsigned char 
 24831 ;; Auto vars:     Size  Location     Type
 24832 ;;  cmdType         1   49[COMRAM] unsigned char 
 24833 ;; Return value:  Size  Location     Type
 24834 ;;                  1    wreg      void 
 24835 ;; Registers used:
 24836 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24837 ;; Tracked objects:
 24838 ;;		On entry : 3F/0
 24839 ;;		On exit  : 0/0
 24840 ;;		Unchanged: 0/0
 24841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24842 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24843 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24844 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24845 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24846 ;;Total ram usage:        5 bytes
 24847 ;; Hardware stack levels used: 1
 24848 ;; Hardware stack levels required when called: 13
 24849 ;; This function calls:
 24850 ;;		_i2c_readDataBlock
 24851 ;; This function is called by:
 24852 ;;		_eusartparser
 24853 ;; This function uses a non-reentrant model
 24854 ;;
 24855                           
 24856                           	psect	text85
 24857  008A54                     __ptext85:
 24858                           	callstack 0
 24859  008A54                     _ReadSerial:
 24860                           	callstack 16
 24861                           
 24862                           ;incstack = 0
 24863                           ;ReadSerial@cmdType stored from wreg
 24864  008A54  6E32               	movwf	ReadSerial@cmdType^0,c
 24865                           
 24866                           ;controlMemory_MC50.c: 110: void ReadSerial(char cmdType, unsigned long* tempSerial, cha
      +                          r position);controlMemory_MC50.c: 111: {;controlMemory_MC50.c: 112:     if(cmdType==0)
 24867  008A56  5032               	movf	ReadSerial@cmdType^0,w,c
 24868  008A58  A4D8               	btfss	status,2,c
 24869  008A5A  D01A               	goto	l22727
 24870                           
 24871                           ;controlMemory_MC50.c: 113:     {;controlMemory_MC50.c: 114:        i2c_readDataBlock(0x
      +                          50, (uint16_t)(0x0200 + (position * 4)), (char*)tempSerial, 4);
 24872  008A5C  502F               	movf	ReadSerial@position^0,w,c
 24873  008A5E  6E30               	movwf	??_ReadSerial^0,c
 24874  008A60  6A31               	clrf	(??_ReadSerial+1)^0,c
 24875  008A62  90D8               	bcf	status,0,c
 24876  008A64  3630               	rlcf	??_ReadSerial^0,f,c
 24877  008A66  3631               	rlcf	(??_ReadSerial+1)^0,f,c
 24878  008A68  90D8               	bcf	status,0,c
 24879  008A6A  3630               	rlcf	??_ReadSerial^0,f,c
 24880  008A6C  3631               	rlcf	(??_ReadSerial+1)^0,f,c
 24881  008A6E  0E00               	movlw	0
 24882  008A70  2430               	addwf	??_ReadSerial^0,w,c
 24883  008A72  6E22               	movwf	i2c_readDataBlock@reg^0,c
 24884  008A74  0E02               	movlw	2
 24885  008A76  2031               	addwfc	(??_ReadSerial+1)^0,w,c
 24886  008A78  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 24887  008A7A  C02E  F024         	movff	ReadSerial@tempSerial,i2c_readDataBlock@data
 24888  008A7E  6A25               	clrf	(i2c_readDataBlock@data+1)^0,c
 24889  008A80  0E00               	movlw	0
 24890  008A82  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 24891  008A84  0E04               	movlw	4
 24892  008A86  6E26               	movwf	i2c_readDataBlock@len^0,c
 24893  008A88  0E50               	movlw	80
 24894  008A8A  EC45  F044         	call	_i2c_readDataBlock
 24895                           
 24896                           ;controlMemory_MC50.c: 115:     }
 24897  008A8E  0012               	return	
 24898  008A90                     l22727:
 24899                           
 24900                           ;controlMemory_MC50.c: 117:     {;controlMemory_MC50.c: 118:        i2c_readDataBlock(0x
      +                          50, (uint16_t)(0x0500 + (position * 4)), (char*)tempSerial, 4);
 24901  008A90  502F               	movf	ReadSerial@position^0,w,c
 24902  008A92  6E30               	movwf	??_ReadSerial^0,c
 24903  008A94  6A31               	clrf	(??_ReadSerial+1)^0,c
 24904  008A96  90D8               	bcf	status,0,c
 24905  008A98  3630               	rlcf	??_ReadSerial^0,f,c
 24906  008A9A  3631               	rlcf	(??_ReadSerial+1)^0,f,c
 24907  008A9C  90D8               	bcf	status,0,c
 24908  008A9E  3630               	rlcf	??_ReadSerial^0,f,c
 24909  008AA0  3631               	rlcf	(??_ReadSerial+1)^0,f,c
 24910  008AA2  0E00               	movlw	0
 24911  008AA4  2430               	addwf	??_ReadSerial^0,w,c
 24912  008AA6  6E22               	movwf	i2c_readDataBlock@reg^0,c
 24913  008AA8  0E05               	movlw	5
 24914  008AAA  2031               	addwfc	(??_ReadSerial+1)^0,w,c
 24915  008AAC  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 24916  008AAE  C02E  F024         	movff	ReadSerial@tempSerial,i2c_readDataBlock@data
 24917  008AB2  6A25               	clrf	(i2c_readDataBlock@data+1)^0,c
 24918  008AB4  0E00               	movlw	0
 24919  008AB6  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 24920  008AB8  0E04               	movlw	4
 24921  008ABA  6E26               	movwf	i2c_readDataBlock@len^0,c
 24922  008ABC  0E50               	movlw	80
 24923  008ABE  EC45  F044         	call	_i2c_readDataBlock
 24924  008AC2  0012               	return		;funcret
 24925  008AC4                     __end_of_ReadSerial:
 24926                           	callstack 0
 24927                           
 24928 ;; *************** function _i2c_readDataBlock *****************
 24929 ;; Defined at:
 24930 ;;		line 147 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 24931 ;; Parameters:    Size  Location     Type
 24932 ;;  address         1    wreg     unsigned char 
 24933 ;;  reg             2   33[COMRAM] unsigned short 
 24934 ;;  data            2   35[COMRAM] PTR void 
 24935 ;;		 -> eusartparser@serial(4), var_sys_NVM.homemPresente(1), cmdMemoryIsEmpty@tempSerial(4), var_sys_NVM.positionRemote
      +sFull(1), 
 24936 ;;		 -> memoryTEMP(16), var_sys_NVM.learningCurrentNormalClose(2), var_sys_NVM(64), 
 24937 ;;  len             2   37[COMRAM] unsigned int 
 24938 ;; Auto vars:     Size  Location     Type
 24939 ;;  address         1   40[COMRAM] unsigned char 
 24940 ;;  d               4   41[COMRAM] struct .
 24941 ;; Return value:  Size  Location     Type
 24942 ;;                  1    wreg      void 
 24943 ;; Registers used:
 24944 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24945 ;; Tracked objects:
 24946 ;;		On entry : 0/2
 24947 ;;		On exit  : 0/0
 24948 ;;		Unchanged: 0/0
 24949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24950 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24951 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24952 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24953 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24954 ;;Total ram usage:       12 bytes
 24955 ;; Hardware stack levels used: 1
 24956 ;; Hardware stack levels required when called: 12
 24957 ;; This function calls:
 24958 ;;		_I2C1_Close
 24959 ;;		_I2C1_MasterWrite
 24960 ;;		_I2C1_Open
 24961 ;;		_I2C1_SetAddressNackCallback
 24962 ;;		_I2C1_SetBuffer
 24963 ;;		_I2C1_SetDataCompleteCallback
 24964 ;; This function is called by:
 24965 ;;		_validateRemoteSerialNumber
 24966 ;;		_ReadSerial
 24967 ;;		_cmdMemoryIsEmpty
 24968 ;;		_loadNVM_VarSystem
 24969 ;; This function uses a non-reentrant model
 24970 ;;
 24971                           
 24972                           	psect	text86
 24973  00888A                     __ptext86:
 24974                           	callstack 0
 24975  00888A                     _i2c_readDataBlock:
 24976                           	callstack 14
 24977                           
 24978                           ;incstack = 0
 24979                           ;i2c_readDataBlock@address stored from wreg
 24980  00888A  6E29               	movwf	i2c_readDataBlock@address^0,c
 24981                           
 24982                           ;mcc_generated_files/drivers/i2c_simple_master.c: 147: void i2c_readDataBlock(i2c1_addre
      +                          ss_t address, uint16_t reg, void *data, size_t len);mcc_generated_files/drivers/i2c_simp
      +                          le_master.c: 148: {;mcc_generated_files/drivers/i2c_simple_master.c: 149:     buf_t d;;m
      +                          cc_generated_files/drivers/i2c_simple_master.c: 150:     d.data = data;
 24983  00888C  C024  F02C         	movff	i2c_readDataBlock@data,i2c_readDataBlock@d+2
 24984  008890  C025  F02D         	movff	i2c_readDataBlock@data+1,i2c_readDataBlock@d+3
 24985                           
 24986                           ;mcc_generated_files/drivers/i2c_simple_master.c: 151:     d.len = len;
 24987  008894  C026  F02A         	movff	i2c_readDataBlock@len,i2c_readDataBlock@d
 24988  008898  C027  F02B         	movff	i2c_readDataBlock@len+1,i2c_readDataBlock@d+1
 24989  00889C                     l20483:
 24990  00889C  5023               	movf	(i2c_readDataBlock@reg+1)^0,w,c
 24991  00889E  1029               	iorwf	i2c_readDataBlock@address^0,w,c
 24992  0088A0  EC50  F042         	call	_I2C1_Open
 24993  0088A4  0900               	iorlw	0
 24994  0088A6  B4D8               	btfsc	status,2,c
 24995  0088A8  D7F9               	goto	l20483
 24996                           
 24997                           ;mcc_generated_files/drivers/i2c_simple_master.c: 154:     I2C1_SetDataCompleteCallback(
      +                          rdBlkRegCompleteHandler,&d);
 24998  0088AA  0EC0               	movlw	low _rdBlkRegCompleteHandler
 24999  0088AC  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 25000  0088AE  0E94               	movlw	high _rdBlkRegCompleteHandler
 25001  0088B0  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 25002  0088B2  0E2A               	movlw	low i2c_readDataBlock@d
 25003  0088B4  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 25004  0088B6  6A18               	clrf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 25005  0088B8  EC2F  F04E         	call	_I2C1_SetDataCompleteCallback	;wreg free
 25006                           
 25007                           ;mcc_generated_files/drivers/i2c_simple_master.c: 155:     I2C1_SetBuffer(&reg,1);
 25008  0088BC  0E22               	movlw	low i2c_readDataBlock@reg
 25009  0088BE  6E10               	movwf	I2C1_SetBuffer@buffer^0,c
 25010  0088C0  6A11               	clrf	(I2C1_SetBuffer@buffer+1)^0,c
 25011  0088C2  0E00               	movlw	0
 25012  0088C4  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 25013  0088C6  0E01               	movlw	1
 25014  0088C8  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 25015  0088CA  ECF2  F04D         	call	_I2C1_SetBuffer	;wreg free
 25016                           
 25017                           ; BSR set to: 2
 25018                           ;mcc_generated_files/drivers/i2c_simple_master.c: 156:     I2C1_SetAddressNackCallback((
      +                          (void*)0),((void*)0));
 25019  0088CE  0E00               	movlw	0
 25020  0088D0  6E15               	movwf	I2C1_SetAddressNackCallback@cb^0,c
 25021  0088D2  0E00               	movlw	0
 25022  0088D4  6E16               	movwf	(I2C1_SetAddressNackCallback@cb+1)^0,c
 25023  0088D6  0E00               	movlw	0
 25024  0088D8  6E17               	movwf	I2C1_SetAddressNackCallback@ptr^0,c
 25025  0088DA  0E00               	movlw	0
 25026  0088DC  6E18               	movwf	(I2C1_SetAddressNackCallback@ptr+1)^0,c
 25027  0088DE  EC17  F04E         	call	_I2C1_SetAddressNackCallback	;wreg free
 25028                           
 25029                           ;mcc_generated_files/drivers/i2c_simple_master.c: 157:     I2C1_MasterWrite();
 25030  0088E2  ECF0  F04E         	call	_I2C1_MasterWrite	;wreg free
 25031  0088E6                     l20493:
 25032  0088E6  EC64  F04D         	call	_I2C1_Close	;wreg free
 25033  0088EA  06E8               	decf	wreg,f,c
 25034  0088EC  B4D8               	btfsc	status,2,c
 25035  0088EE  D7FB               	goto	l20493
 25036                           
 25037                           ;mcc_generated_files/drivers/i2c_simple_master.c: 159:     _delay((unsigned long)((10)*(
      +                          64000000/4000.0)));
 25038  0088F0  0ED0               	movlw	208
 25039  0088F2  6E28               	movwf	??_i2c_readDataBlock^0,c
 25040  0088F4  0ECA               	movlw	202
 25041  0088F6                     u34097:
 25042  0088F6  2EE8               	decfsz	wreg,f,c
 25043  0088F8  D7FE               	bra	u34097
 25044  0088FA  2E28               	decfsz	??_i2c_readDataBlock^0,f,c
 25045  0088FC  D7FC               	bra	u34097
 25046  0088FE  0012               	return		;funcret
 25047  008900                     __end_of_i2c_readDataBlock:
 25048                           	callstack 0
 25049                           
 25050 ;; *************** function _WWDT_TimerClear *****************
 25051 ;; Defined at:
 25052 ;;		line 128 in file "mcc_generated_files/mcc.c"
 25053 ;; Parameters:    Size  Location     Type
 25054 ;;		None
 25055 ;; Auto vars:     Size  Location     Type
 25056 ;;  state           1   15[COMRAM] _Bool 
 25057 ;;  readBack        1    0        unsigned char 
 25058 ;; Return value:  Size  Location     Type
 25059 ;;                  1    wreg      void 
 25060 ;; Registers used:
 25061 ;;		wreg, status,2
 25062 ;; Tracked objects:
 25063 ;;		On entry : 0/0
 25064 ;;		On exit  : 0/0
 25065 ;;		Unchanged: 0/0
 25066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25067 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25068 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25070 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25071 ;;Total ram usage:        1 bytes
 25072 ;; Hardware stack levels used: 1
 25073 ;; Hardware stack levels required when called: 4
 25074 ;; This function calls:
 25075 ;;		Nothing
 25076 ;; This function is called by:
 25077 ;;		_main
 25078 ;; This function uses a non-reentrant model
 25079 ;;
 25080                           
 25081                           	psect	text87
 25082  009B28                     __ptext87:
 25083                           	callstack 0
 25084  009B28                     _WWDT_TimerClear:
 25085                           	callstack 26
 25086                           
 25087                           ;mcc_generated_files/mcc.c: 134:     _Bool state = GIE;
 25088                           
 25089                           ;incstack = 0
 25090  009B28  0E00               	movlw	0
 25091  009B2A  BEF2               	btfsc	4082,7,c	;volatile
 25092  009B2C  0E01               	movlw	1
 25093  009B2E  6E10               	movwf	WWDT_TimerClear@state^0,c
 25094                           
 25095                           ;mcc_generated_files/mcc.c: 135:     GIE = 0;
 25096  009B30  9EF2               	bcf	4082,7,c	;volatile
 25097  009B32  010E               	movlb	14	; () banked
 25098  009B34  51D2               	movf	210,w,b	;volatile
 25099  009B36  0004               	clrwdt		;# 
 25100                           
 25101                           ;mcc_generated_files/mcc.c: 138:     GIE = state;
 25102  009B38  B010               	btfsc	WWDT_TimerClear@state^0,0,c
 25103  009B3A  D002               	bra	u29595
 25104  009B3C  9EF2               	bcf	4082,7,c	;volatile
 25105  009B3E  D001               	bra	u29596
 25106  009B40                     u29595:
 25107  009B40  8EF2               	bsf	4082,7,c	;volatile
 25108  009B42                     u29596:
 25109  009B42  0012               	return		;funcret
 25110  009B44                     __end_of_WWDT_TimerClear:
 25111                           	callstack 0
 25112                           
 25113 ;; *************** function _WWDT_SoftEnable *****************
 25114 ;; Defined at:
 25115 ;;		line 104 in file "mcc_generated_files/mcc.c"
 25116 ;; Parameters:    Size  Location     Type
 25117 ;;		None
 25118 ;; Auto vars:     Size  Location     Type
 25119 ;;		None
 25120 ;; Return value:  Size  Location     Type
 25121 ;;                  1    wreg      void 
 25122 ;; Registers used:
 25123 ;;		None
 25124 ;; Tracked objects:
 25125 ;;		On entry : 3F/E
 25126 ;;		On exit  : 3F/E
 25127 ;;		Unchanged: 0/0
 25128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25132 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25133 ;;Total ram usage:        0 bytes
 25134 ;; Hardware stack levels used: 1
 25135 ;; Hardware stack levels required when called: 4
 25136 ;; This function calls:
 25137 ;;		Nothing
 25138 ;; This function is called by:
 25139 ;;		_main
 25140 ;; This function uses a non-reentrant model
 25141 ;;
 25142                           
 25143                           	psect	text88
 25144  009E66                     __ptext88:
 25145                           	callstack 0
 25146  009E66                     _WWDT_SoftEnable:
 25147                           	callstack 26
 25148                           
 25149                           ; BSR set to: 14
 25150                           ;mcc_generated_files/mcc.c: 107:     WDTCON0bits.SEN=1;
 25151                           
 25152                           ;incstack = 0
 25153  009E66  81D2               	bsf	210,0,b	;volatile
 25154                           
 25155                           ; BSR set to: 14
 25156  009E68  0012               	return		;funcret
 25157  009E6A                     __end_of_WWDT_SoftEnable:
 25158                           	callstack 0
 25159                           
 25160 ;; *************** function _ShowVersion *****************
 25161 ;; Defined at:
 25162 ;;		line 254 in file "main_MC50.c"
 25163 ;; Parameters:    Size  Location     Type
 25164 ;;		None
 25165 ;; Auto vars:     Size  Location     Type
 25166 ;;		None
 25167 ;; Return value:  Size  Location     Type
 25168 ;;                  1    wreg      void 
 25169 ;; Registers used:
 25170 ;;		wreg, status,2, status,0, cstack
 25171 ;; Tracked objects:
 25172 ;;		On entry : 3F/1
 25173 ;;		On exit  : 3F/1
 25174 ;;		Unchanged: 0/0
 25175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25176 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25179 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25180 ;;Total ram usage:        0 bytes
 25181 ;; Hardware stack levels used: 1
 25182 ;; Hardware stack levels required when called: 5
 25183 ;; This function calls:
 25184 ;;		_SetSegmentValue
 25185 ;; This function is called by:
 25186 ;;		_main
 25187 ;; This function uses a non-reentrant model
 25188 ;;
 25189                           
 25190                           	psect	text89
 25191  008C74                     __ptext89:
 25192                           	callstack 0
 25193  008C74                     _ShowVersion:
 25194                           	callstack 25
 25195                           
 25196                           ; BSR set to: 1
 25197                           ;main_MC50.c: 256:     if(ts_system.TimeShowVersion<=0)
 25198                           
 25199                           ; BSR set to: 14
 25200                           ;incstack = 0
 25201  008C74  BFDC               	btfsc	(_ts_system+61)& (0+255),7,b	;volatile
 25202  008C76  D005               	goto	u31240
 25203  008C78  51DC               	movf	(_ts_system+61)& (0+255),w,b	;volatile
 25204  008C7A  E12E               	bnz	l2044
 25205  008C7C  05DB               	decf	(_ts_system+60)& (0+255),w,b	;volatile
 25206  008C7E  B0D8               	btfsc	status,0,c
 25207  008C80  0012               	return	
 25208  008C82                     u31240:
 25209                           
 25210                           ; BSR set to: 1
 25211                           ;main_MC50.c: 257:     {;main_MC50.c: 259:             if(var_sys.StateVersion==0)
 25212  008C82  5149               	movf	(_var_sys+73)& (0+255),w,b	;volatile
 25213  008C84  A4D8               	btfss	status,2,c
 25214  008C86  D006               	goto	l25349
 25215                           
 25216                           ; BSR set to: 1
 25217                           ;main_MC50.c: 260:             {;main_MC50.c: 261:                 SetSegmentValue((1/10
      +                          )%10,(1/1)%10);
 25218  008C88  0E01               	movlw	1
 25219  008C8A  6E1C               	movwf	SetSegmentValue@d2^0,c
 25220  008C8C  0E00               	movlw	0
 25221  008C8E  ECE5  F04D         	call	_SetSegmentValue
 25222                           
 25223                           ;main_MC50.c: 262:             }
 25224  008C92  D01C               	goto	l2039
 25225  008C94                     l25349:
 25226                           
 25227                           ; BSR set to: 1
 25228  008C94  0549               	decf	(_var_sys+73)& (0+255),w,b	;volatile
 25229  008C96  A4D8               	btfss	status,2,c
 25230  008C98  D006               	goto	l25353
 25231                           
 25232                           ; BSR set to: 1
 25233                           ;main_MC50.c: 264:             {;main_MC50.c: 265:                 SetSegmentValue(dr, (
      +                          180/100)%10);
 25234  008C9A  0E01               	movlw	1
 25235  008C9C  6E1C               	movwf	SetSegmentValue@d2^0,c
 25236  008C9E  0E14               	movlw	20
 25237  008CA0  ECE5  F04D         	call	_SetSegmentValue
 25238                           
 25239                           ;main_MC50.c: 266:             }
 25240  008CA4  D013               	goto	l2039
 25241  008CA6                     l25353:
 25242                           
 25243                           ; BSR set to: 1
 25244  008CA6  0E02               	movlw	2
 25245  008CA8  1949               	xorwf	(_var_sys+73)& (0+255),w,b	;volatile
 25246  008CAA  A4D8               	btfss	status,2,c
 25247  008CAC  D006               	goto	l25357
 25248                           
 25249                           ; BSR set to: 1
 25250                           ;main_MC50.c: 268:             {;main_MC50.c: 269:                 SetSegmentValue((180/
      +                          10)%10,(180/1)%10);
 25251  008CAE  0E00               	movlw	0
 25252  008CB0  6E1C               	movwf	SetSegmentValue@d2^0,c
 25253  008CB2  0E08               	movlw	8
 25254  008CB4  ECE5  F04D         	call	_SetSegmentValue
 25255                           
 25256                           ;main_MC50.c: 270:             }
 25257  008CB8  D009               	goto	l2039
 25258  008CBA                     l25357:
 25259                           
 25260                           ; BSR set to: 1
 25261  008CBA  0E03               	movlw	3
 25262  008CBC  1949               	xorwf	(_var_sys+73)& (0+255),w,b	;volatile
 25263  008CBE  A4D8               	btfss	status,2,c
 25264  008CC0  D005               	goto	l2039
 25265                           
 25266                           ; BSR set to: 1
 25267                           ;main_MC50.c: 272:             {;main_MC50.c: 273:                SetSegmentValue(dr, d2
      +                          );
 25268  008CC2  0E02               	movlw	2
 25269  008CC4  6E1C               	movwf	SetSegmentValue@d2^0,c
 25270  008CC6  0E14               	movlw	20
 25271  008CC8  ECE5  F04D         	call	_SetSegmentValue
 25272  008CCC                     l2039:
 25273                           
 25274                           ;main_MC50.c: 282:         var_sys.StateVersion++;
 25275                           
 25276                           ; BSR set to: 1
 25277  008CCC  0101               	movlb	1	; () banked
 25278  008CCE  2B49               	incf	(_var_sys+73)& (0+255),f,b	;volatile
 25279                           
 25280                           ; BSR set to: 1
 25281                           ;main_MC50.c: 283:         ts_system.TimeShowVersion=(1000/50);
 25282  008CD0  0E00               	movlw	0
 25283  008CD2  6FDC               	movwf	(_ts_system+61)& (0+255),b	;volatile
 25284  008CD4  0E14               	movlw	20
 25285  008CD6  6FDB               	movwf	(_ts_system+60)& (0+255),b	;volatile
 25286  008CD8                     l2044:
 25287                           
 25288                           ; BSR set to: 1
 25289  008CD8  0012               	return		;funcret
 25290  008CDA                     __end_of_ShowVersion:
 25291                           	callstack 0
 25292                           
 25293 ;; *************** function _SetSegmentValue *****************
 25294 ;; Defined at:
 25295 ;;		line 112 in file "outputs_MC50.c"
 25296 ;; Parameters:    Size  Location     Type
 25297 ;;  d1              1    wreg     unsigned char 
 25298 ;;  d2              1   27[COMRAM] unsigned char 
 25299 ;; Auto vars:     Size  Location     Type
 25300 ;;  d1              1   28[COMRAM] unsigned char 
 25301 ;; Return value:  Size  Location     Type
 25302 ;;                  1    wreg      void 
 25303 ;; Registers used:
 25304 ;;		wreg, status,2
 25305 ;; Tracked objects:
 25306 ;;		On entry : 0/0
 25307 ;;		On exit  : 3F/0
 25308 ;;		Unchanged: 0/0
 25309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25310 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25311 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25313 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25314 ;;Total ram usage:        2 bytes
 25315 ;; Hardware stack levels used: 1
 25316 ;; Hardware stack levels required when called: 4
 25317 ;; This function calls:
 25318 ;;		Nothing
 25319 ;; This function is called by:
 25320 ;;		_main
 25321 ;;		_ShowVersion
 25322 ;;		_controlSelectRemote
 25323 ;; This function uses a non-reentrant model
 25324 ;;
 25325                           
 25326                           	psect	text90
 25327  009BCA                     __ptext90:
 25328                           	callstack 0
 25329  009BCA                     _SetSegmentValue:
 25330                           	callstack 23
 25331                           
 25332                           ; BSR set to: 1
 25333                           ;incstack = 0
 25334                           ;SetSegmentValue@d1 stored from wreg
 25335  009BCA  6E1D               	movwf	SetSegmentValue@d1^0,c
 25336                           
 25337                           ;outputs_MC50.c: 112: void SetSegmentValue(char d1, char d2);outputs_MC50.c: 113: {;outp
      +                          uts_MC50.c: 117:         dispStruct.display_grp.value_display1=d1;
 25338  009BCC  C01D  F072         	movff	SetSegmentValue@d1,_dispStruct	;volatile
 25339                           
 25340                           ;outputs_MC50.c: 118:         dispStruct.display_grp.value_display2=d2;
 25341  009BD0  C01C  F073         	movff	SetSegmentValue@d2,_dispStruct+1	;volatile
 25342                           
 25343                           ;outputs_MC50.c: 119:         dispStruct.intermitentFreq=0;
 25344  009BD4  0E00               	movlw	0
 25345  009BD6  0100               	movlb	0	; () banked
 25346  009BD8  6F76               	movwf	(_dispStruct+4)& (0+255),b	;volatile
 25347  009BDA  0E00               	movlw	0
 25348  009BDC  6F75               	movwf	(_dispStruct+3)& (0+255),b	;volatile
 25349                           
 25350                           ; BSR set to: 0
 25351                           ;outputs_MC50.c: 120:         dispStruct.upFase=0;
 25352  009BDE  0E00               	movlw	0
 25353  009BE0  6F77               	movwf	(_dispStruct+5)& (0+255),b	;volatile
 25354                           
 25355                           ; BSR set to: 0
 25356  009BE2  0012               	return		;funcret
 25357  009BE4                     __end_of_SetSegmentValue:
 25358                           	callstack 0
 25359                           
 25360 ;; *************** function _SYSTEM_Initialize *****************
 25361 ;; Defined at:
 25362 ;;		line 50 in file "mcc_generated_files/mcc.c"
 25363 ;; Parameters:    Size  Location     Type
 25364 ;;		None
 25365 ;; Auto vars:     Size  Location     Type
 25366 ;;		None
 25367 ;; Return value:  Size  Location     Type
 25368 ;;                  1    wreg      void 
 25369 ;; Registers used:
 25370 ;;		wreg, status,2, status,0, cstack
 25371 ;; Tracked objects:
 25372 ;;		On entry : 3F/0
 25373 ;;		On exit  : 3F/E
 25374 ;;		Unchanged: 0/0
 25375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25379 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25380 ;;Total ram usage:        0 bytes
 25381 ;; Hardware stack levels used: 1
 25382 ;; Hardware stack levels required when called: 6
 25383 ;; This function calls:
 25384 ;;		_ADCC_Initialize
 25385 ;;		_EUSART1_Initialize
 25386 ;;		_I2C1_Initialize
 25387 ;;		_INTERRUPT_Initialize
 25388 ;;		_OSCILLATOR_Initialize
 25389 ;;		_PIN_MANAGER_Initialize
 25390 ;;		_PMD_Initialize
 25391 ;;		_TMR0_Initialize
 25392 ;;		_TMR1_Initialize
 25393 ;;		_TMR2_Initialize
 25394 ;;		_WWDT_Initialize
 25395 ;; This function is called by:
 25396 ;;		_main
 25397 ;; This function uses a non-reentrant model
 25398 ;;
 25399                           
 25400                           	psect	text91
 25401  0096E8                     __ptext91:
 25402                           	callstack 0
 25403  0096E8                     _SYSTEM_Initialize:
 25404                           	callstack 24
 25405                           
 25406                           ; BSR set to: 0
 25407                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 25408                           
 25409                           ; BSR set to: 0
 25410                           ;incstack = 0
 25411  0096E8  EC35  F04F         	call	_INTERRUPT_Initialize	;wreg free
 25412                           
 25413                           ; BSR set to: 0
 25414                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 25415  0096EC  ECA2  F04D         	call	_PMD_Initialize	;wreg free
 25416                           
 25417                           ; BSR set to: 14
 25418                           ;mcc_generated_files/mcc.c: 54:     I2C1_Initialize();
 25419  0096F0  EC70  F04E         	call	_I2C1_Initialize	;wreg free
 25420                           
 25421                           ; BSR set to: 14
 25422                           ;mcc_generated_files/mcc.c: 55:     PIN_MANAGER_Initialize();
 25423  0096F4  ECD8  F03F         	call	_PIN_MANAGER_Initialize	;wreg free
 25424                           
 25425                           ; BSR set to: 14
 25426                           ;mcc_generated_files/mcc.c: 56:     OSCILLATOR_Initialize();
 25427  0096F8  EC46  F04E         	call	_OSCILLATOR_Initialize	;wreg free
 25428                           
 25429                           ; BSR set to: 14
 25430                           ;mcc_generated_files/mcc.c: 57:     WWDT_Initialize();
 25431  0096FC  ECB4  F04E         	call	_WWDT_Initialize	;wreg free
 25432                           
 25433                           ; BSR set to: 14
 25434                           ;mcc_generated_files/mcc.c: 58:     ADCC_Initialize();
 25435  009700  ECD9  F048         	call	_ADCC_Initialize	;wreg free
 25436                           
 25437                           ; BSR set to: 15
 25438                           ;mcc_generated_files/mcc.c: 59:     TMR2_Initialize();
 25439  009704  ECB7  F04B         	call	_TMR2_Initialize	;wreg free
 25440                           
 25441                           ; BSR set to: 14
 25442                           ;mcc_generated_files/mcc.c: 60:     TMR1_Initialize();
 25443  009708  ECFF  F049         	call	_TMR1_Initialize	;wreg free
 25444                           
 25445                           ; BSR set to: 14
 25446                           ;mcc_generated_files/mcc.c: 61:     TMR0_Initialize();
 25447  00970C  EC53  F04D         	call	_TMR0_Initialize	;wreg free
 25448                           
 25449                           ; BSR set to: 14
 25450                           ;mcc_generated_files/mcc.c: 62:     EUSART1_Initialize();
 25451  009710  EC13  F043         	call	_EUSART1_Initialize	;wreg free
 25452                           
 25453                           ; BSR set to: 14
 25454  009714  0012               	return		;funcret
 25455  009716                     __end_of_SYSTEM_Initialize:
 25456                           	callstack 0
 25457                           
 25458 ;; *************** function _WWDT_Initialize *****************
 25459 ;; Defined at:
 25460 ;;		line 96 in file "mcc_generated_files/mcc.c"
 25461 ;; Parameters:    Size  Location     Type
 25462 ;;		None
 25463 ;; Auto vars:     Size  Location     Type
 25464 ;;		None
 25465 ;; Return value:  Size  Location     Type
 25466 ;;                  1    wreg      void 
 25467 ;; Registers used:
 25468 ;;		wreg, status,2
 25469 ;; Tracked objects:
 25470 ;;		On entry : 3F/E
 25471 ;;		On exit  : 3F/E
 25472 ;;		Unchanged: 0/0
 25473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25474 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25477 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25478 ;;Total ram usage:        0 bytes
 25479 ;; Hardware stack levels used: 1
 25480 ;; Hardware stack levels required when called: 4
 25481 ;; This function calls:
 25482 ;;		Nothing
 25483 ;; This function is called by:
 25484 ;;		_SYSTEM_Initialize
 25485 ;; This function uses a non-reentrant model
 25486 ;;
 25487                           
 25488                           	psect	text92
 25489  009D68                     __ptext92:
 25490                           	callstack 0
 25491  009D68                     _WWDT_Initialize:
 25492                           	callstack 25
 25493                           
 25494                           ; BSR set to: 14
 25495                           ;mcc_generated_files/mcc.c: 99:     WDTCON0 = 22;
 25496                           
 25497                           ; BSR set to: 14
 25498                           ;incstack = 0
 25499  009D68  0E16               	movlw	22
 25500  009D6A  6FD2               	movwf	210,b	;volatile
 25501                           
 25502                           ;mcc_generated_files/mcc.c: 100:     WDTCON1 = 7|32;
 25503  009D6C  0E27               	movlw	39
 25504  009D6E  6FD3               	movwf	211,b	;volatile
 25505                           
 25506                           ; BSR set to: 14
 25507  009D70  0012               	return		;funcret
 25508  009D72                     __end_of_WWDT_Initialize:
 25509                           	callstack 0
 25510                           
 25511 ;; *************** function _TMR2_Initialize *****************
 25512 ;; Defined at:
 25513 ;;		line 79 in file "mcc_generated_files/tmr2.c"
 25514 ;; Parameters:    Size  Location     Type
 25515 ;;		None
 25516 ;; Auto vars:     Size  Location     Type
 25517 ;;		None
 25518 ;; Return value:  Size  Location     Type
 25519 ;;                  1    wreg      void 
 25520 ;; Registers used:
 25521 ;;		wreg, status,2, status,0, cstack
 25522 ;; Tracked objects:
 25523 ;;		On entry : 3F/F
 25524 ;;		On exit  : 3F/E
 25525 ;;		Unchanged: 0/0
 25526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25527 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25530 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25531 ;;Total ram usage:        0 bytes
 25532 ;; Hardware stack levels used: 1
 25533 ;; Hardware stack levels required when called: 5
 25534 ;; This function calls:
 25535 ;;		_TMR2_SetInterruptHandler
 25536 ;; This function is called by:
 25537 ;;		_SYSTEM_Initialize
 25538 ;; This function uses a non-reentrant model
 25539 ;;
 25540                           
 25541                           	psect	text93
 25542  00976E                     __ptext93:
 25543                           	callstack 0
 25544  00976E                     _TMR2_Initialize:
 25545                           	callstack 24
 25546                           
 25547                           ; BSR set to: 15
 25548                           ;mcc_generated_files/tmr2.c: 84:     T2CLKCON = 0x02;
 25549                           
 25550                           ; BSR set to: 14
 25551                           ;incstack = 0
 25552  00976E  0E02               	movlw	2
 25553  009770  6EBF               	movwf	191,c	;volatile
 25554                           
 25555                           ;mcc_generated_files/tmr2.c: 87:     T2HLT = 0x40;
 25556  009772  0E40               	movlw	64
 25557  009774  6EBE               	movwf	190,c	;volatile
 25558                           
 25559                           ;mcc_generated_files/tmr2.c: 90:     T2RST = 0x00;
 25560  009776  0E00               	movlw	0
 25561  009778  6EC0               	movwf	192,c	;volatile
 25562                           
 25563                           ;mcc_generated_files/tmr2.c: 93:     T2PR = 0xC7;
 25564  00977A  0EC7               	movlw	199
 25565  00977C  6EBC               	movwf	188,c	;volatile
 25566                           
 25567                           ;mcc_generated_files/tmr2.c: 96:     T2TMR = 0x00;
 25568  00977E  0E00               	movlw	0
 25569  009780  6EBB               	movwf	187,c	;volatile
 25570                           
 25571                           ; BSR set to: 15
 25572                           ;mcc_generated_files/tmr2.c: 99:     PIR4bits.TMR2IF = 0;
 25573  009782  010E               	movlb	14	; () banked
 25574  009784  93CE               	bcf	206,1,b	;volatile
 25575                           
 25576                           ; BSR set to: 14
 25577                           ;mcc_generated_files/tmr2.c: 102:     PIE4bits.TMR2IE = 1;
 25578  009786  83C6               	bsf	198,1,b	;volatile
 25579                           
 25580                           ; BSR set to: 14
 25581                           ;mcc_generated_files/tmr2.c: 105:     TMR2_SetInterruptHandler(TMR2_DefaultInterruptHand
      +                          ler);
 25582  009788  0E94               	movlw	low _TMR2_DefaultInterruptHandler
 25583  00978A  6E10               	movwf	TMR2_SetInterruptHandler@InterruptHandler^0,c
 25584  00978C  0E9E               	movlw	high _TMR2_DefaultInterruptHandler
 25585  00978E  6E11               	movwf	(TMR2_SetInterruptHandler@InterruptHandler+1)^0,c
 25586  009790  ECB9  F04E         	call	_TMR2_SetInterruptHandler	;wreg free
 25587                           
 25588                           ; BSR set to: 14
 25589                           ;mcc_generated_files/tmr2.c: 108:     T2CON = 0xD9;
 25590  009794  0ED9               	movlw	217
 25591  009796  6EBD               	movwf	189,c	;volatile
 25592                           
 25593                           ; BSR set to: 14
 25594  009798  0012               	return		;funcret
 25595  00979A                     __end_of_TMR2_Initialize:
 25596                           	callstack 0
 25597                           
 25598 ;; *************** function _TMR2_SetInterruptHandler *****************
 25599 ;; Defined at:
 25600 ;;		line 342 in file "mcc_generated_files/tmr2.c"
 25601 ;; Parameters:    Size  Location     Type
 25602 ;;  InterruptHan    2   15[COMRAM] PTR FTN()void 
 25603 ;;		 -> TMR2_DefaultInterruptHandler(1), 
 25604 ;; Auto vars:     Size  Location     Type
 25605 ;;		None
 25606 ;; Return value:  Size  Location     Type
 25607 ;;                  1    wreg      void 
 25608 ;; Registers used:
 25609 ;;		wreg, status,2, status,0
 25610 ;; Tracked objects:
 25611 ;;		On entry : 3F/E
 25612 ;;		On exit  : 3F/E
 25613 ;;		Unchanged: 3F/0
 25614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25615 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25616 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25618 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25619 ;;Total ram usage:        2 bytes
 25620 ;; Hardware stack levels used: 1
 25621 ;; Hardware stack levels required when called: 4
 25622 ;; This function calls:
 25623 ;;		Nothing
 25624 ;; This function is called by:
 25625 ;;		_TMR2_Initialize
 25626 ;; This function uses a non-reentrant model
 25627 ;;
 25628                           
 25629                           	psect	text94
 25630  009D72                     __ptext94:
 25631                           	callstack 0
 25632  009D72                     _TMR2_SetInterruptHandler:
 25633                           	callstack 24
 25634                           
 25635                           ; BSR set to: 14
 25636                           ;mcc_generated_files/tmr2.c: 343:     TMR2_InterruptHandler = InterruptHandler;
 25637                           
 25638                           ; BSR set to: 14
 25639                           ;incstack = 0
 25640  009D72  C010  F2DB         	movff	TMR2_SetInterruptHandler@InterruptHandler,_TMR2_InterruptHandler
 25641  009D76  C011  F2DC         	movff	TMR2_SetInterruptHandler@InterruptHandler+1,_TMR2_InterruptHandler+1
 25642                           
 25643                           ; BSR set to: 14
 25644  009D7A  0012               	return		;funcret
 25645  009D7C                     __end_of_TMR2_SetInterruptHandler:
 25646                           	callstack 0
 25647                           
 25648 ;; *************** function _TMR1_Initialize *****************
 25649 ;; Defined at:
 25650 ;;		line 66 in file "mcc_generated_files/tmr1.c"
 25651 ;; Parameters:    Size  Location     Type
 25652 ;;		None
 25653 ;; Auto vars:     Size  Location     Type
 25654 ;;		None
 25655 ;; Return value:  Size  Location     Type
 25656 ;;                  1    wreg      void 
 25657 ;; Registers used:
 25658 ;;		wreg, status,2, status,0, cstack
 25659 ;; Tracked objects:
 25660 ;;		On entry : 3F/E
 25661 ;;		On exit  : 3F/E
 25662 ;;		Unchanged: 0/0
 25663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25665 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25666 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25667 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25668 ;;Total ram usage:        2 bytes
 25669 ;; Hardware stack levels used: 1
 25670 ;; Hardware stack levels required when called: 5
 25671 ;; This function calls:
 25672 ;;		_TMR1_SetInterruptHandler
 25673 ;; This function is called by:
 25674 ;;		_SYSTEM_Initialize
 25675 ;; This function uses a non-reentrant model
 25676 ;;
 25677                           
 25678                           	psect	text95
 25679  0093FE                     __ptext95:
 25680                           	callstack 0
 25681  0093FE                     _TMR1_Initialize:
 25682                           	callstack 24
 25683                           
 25684                           ; BSR set to: 14
 25685                           ;mcc_generated_files/tmr1.c: 71:     T1GCON = 0x00;
 25686                           
 25687                           ; BSR set to: 14
 25688                           ;incstack = 0
 25689  0093FE  0E00               	movlw	0
 25690  009400  6ED0               	movwf	208,c	;volatile
 25691                           
 25692                           ;mcc_generated_files/tmr1.c: 74:     T1GATE = 0x00;
 25693  009402  0E00               	movlw	0
 25694  009404  6ED1               	movwf	209,c	;volatile
 25695                           
 25696                           ;mcc_generated_files/tmr1.c: 77:     T1CLK = 0x01;
 25697  009406  0E01               	movlw	1
 25698  009408  6ED2               	movwf	210,c	;volatile
 25699                           
 25700                           ; BSR set to: 14
 25701                           ;mcc_generated_files/tmr1.c: 80:     TMR1H = 0xFF;
 25702  00940A  68CE               	setf	206,c	;volatile
 25703                           
 25704                           ;mcc_generated_files/tmr1.c: 83:     TMR1L = 0x38;
 25705  00940C  0E38               	movlw	56
 25706  00940E  6ECD               	movwf	205,c	;volatile
 25707                           
 25708                           ; BSR set to: 14
 25709                           ;mcc_generated_files/tmr1.c: 86:     PIR4bits.TMR1IF = 0;
 25710  009410  91CE               	bcf	206,0,b	;volatile
 25711                           
 25712                           ; BSR set to: 14
 25713                           ;mcc_generated_files/tmr1.c: 89:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
 25714  009412  50CD               	movf	205,w,c	;volatile
 25715  009414  CFCE F012          	movff	4046,??_TMR1_Initialize	;volatile
 25716  009418  6A13               	clrf	(??_TMR1_Initialize+1)^0,c
 25717  00941A  C012  F013         	movff	??_TMR1_Initialize,??_TMR1_Initialize+1
 25718  00941E  6A12               	clrf	??_TMR1_Initialize^0,c
 25719  009420  1012               	iorwf	??_TMR1_Initialize^0,w,c
 25720  009422  0102               	movlb	2	; () banked
 25721  009424  6FDF               	movwf	_timer1ReloadVal& (0+255),b	;volatile
 25722  009426  5013               	movf	(??_TMR1_Initialize+1)^0,w,c
 25723  009428  6FE0               	movwf	(_timer1ReloadVal+1)& (0+255),b	;volatile
 25724                           
 25725                           ; BSR set to: 2
 25726                           ;mcc_generated_files/tmr1.c: 92:     PIE4bits.TMR1IE = 1;
 25727  00942A  010E               	movlb	14	; () banked
 25728  00942C  81C6               	bsf	198,0,b	;volatile
 25729                           
 25730                           ; BSR set to: 14
 25731                           ;mcc_generated_files/tmr1.c: 95:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
 25732  00942E  0E96               	movlw	low _TMR1_DefaultInterruptHandler
 25733  009430  6E10               	movwf	TMR1_SetInterruptHandler@InterruptHandler^0,c
 25734  009432  0E9E               	movlw	high _TMR1_DefaultInterruptHandler
 25735  009434  6E11               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)^0,c
 25736  009436  ECBE  F04E         	call	_TMR1_SetInterruptHandler	;wreg free
 25737                           
 25738                           ; BSR set to: 14
 25739                           ;mcc_generated_files/tmr1.c: 98:     T1CON = 0x31;
 25740  00943A  0E31               	movlw	49
 25741  00943C  6ECF               	movwf	207,c	;volatile
 25742                           
 25743                           ; BSR set to: 14
 25744  00943E  0012               	return		;funcret
 25745  009440                     __end_of_TMR1_Initialize:
 25746                           	callstack 0
 25747                           
 25748 ;; *************** function _TMR1_SetInterruptHandler *****************
 25749 ;; Defined at:
 25750 ;;		line 192 in file "mcc_generated_files/tmr1.c"
 25751 ;; Parameters:    Size  Location     Type
 25752 ;;  InterruptHan    2   15[COMRAM] PTR FTN()void 
 25753 ;;		 -> TMR1_DefaultInterruptHandler(1), 
 25754 ;; Auto vars:     Size  Location     Type
 25755 ;;		None
 25756 ;; Return value:  Size  Location     Type
 25757 ;;                  1    wreg      void 
 25758 ;; Registers used:
 25759 ;;		wreg, status,2, status,0
 25760 ;; Tracked objects:
 25761 ;;		On entry : 3F/E
 25762 ;;		On exit  : 3F/E
 25763 ;;		Unchanged: 3F/0
 25764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25765 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25766 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25767 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25768 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25769 ;;Total ram usage:        2 bytes
 25770 ;; Hardware stack levels used: 1
 25771 ;; Hardware stack levels required when called: 4
 25772 ;; This function calls:
 25773 ;;		Nothing
 25774 ;; This function is called by:
 25775 ;;		_TMR1_Initialize
 25776 ;; This function uses a non-reentrant model
 25777 ;;
 25778                           
 25779                           	psect	text96
 25780  009D7C                     __ptext96:
 25781                           	callstack 0
 25782  009D7C                     _TMR1_SetInterruptHandler:
 25783                           	callstack 24
 25784                           
 25785                           ; BSR set to: 14
 25786                           ;mcc_generated_files/tmr1.c: 193:     TMR1_InterruptHandler = InterruptHandler;
 25787                           
 25788                           ; BSR set to: 14
 25789                           ;incstack = 0
 25790  009D7C  C010  F2DD         	movff	TMR1_SetInterruptHandler@InterruptHandler,_TMR1_InterruptHandler
 25791  009D80  C011  F2DE         	movff	TMR1_SetInterruptHandler@InterruptHandler+1,_TMR1_InterruptHandler+1
 25792                           
 25793                           ; BSR set to: 14
 25794  009D84  0012               	return		;funcret
 25795  009D86                     __end_of_TMR1_SetInterruptHandler:
 25796                           	callstack 0
 25797                           
 25798 ;; *************** function _TMR0_Initialize *****************
 25799 ;; Defined at:
 25800 ;;		line 67 in file "mcc_generated_files/tmr0.c"
 25801 ;; Parameters:    Size  Location     Type
 25802 ;;		None
 25803 ;; Auto vars:     Size  Location     Type
 25804 ;;		None
 25805 ;; Return value:  Size  Location     Type
 25806 ;;                  1    wreg      void 
 25807 ;; Registers used:
 25808 ;;		wreg, status,2, status,0, cstack
 25809 ;; Tracked objects:
 25810 ;;		On entry : 3F/E
 25811 ;;		On exit  : 3F/E
 25812 ;;		Unchanged: 0/0
 25813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25815 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25817 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25818 ;;Total ram usage:        0 bytes
 25819 ;; Hardware stack levels used: 1
 25820 ;; Hardware stack levels required when called: 5
 25821 ;; This function calls:
 25822 ;;		_TMR0_SetInterruptHandler
 25823 ;; This function is called by:
 25824 ;;		_SYSTEM_Initialize
 25825 ;; This function uses a non-reentrant model
 25826 ;;
 25827                           
 25828                           	psect	text97
 25829  009AA6                     __ptext97:
 25830                           	callstack 0
 25831  009AA6                     _TMR0_Initialize:
 25832                           	callstack 24
 25833                           
 25834                           ; BSR set to: 14
 25835                           ;mcc_generated_files/tmr0.c: 72:     T0CON1 = 0x41;
 25836                           
 25837                           ; BSR set to: 14
 25838                           ;incstack = 0
 25839  009AA6  0E41               	movlw	65
 25840  009AA8  6ED6               	movwf	214,c	;volatile
 25841                           
 25842                           ;mcc_generated_files/tmr0.c: 75:     TMR0H = 0x84;
 25843  009AAA  0E84               	movlw	132
 25844  009AAC  6ED4               	movwf	212,c	;volatile
 25845                           
 25846                           ;mcc_generated_files/tmr0.c: 78:     TMR0L = 0x00;
 25847  009AAE  0E00               	movlw	0
 25848  009AB0  6ED3               	movwf	211,c	;volatile
 25849                           
 25850                           ; BSR set to: 14
 25851                           ;mcc_generated_files/tmr0.c: 81:     PIR0bits.TMR0IF = 0;
 25852  009AB2  9BCA               	bcf	202,5,b	;volatile
 25853                           
 25854                           ; BSR set to: 14
 25855                           ;mcc_generated_files/tmr0.c: 84:     PIE0bits.TMR0IE = 1;
 25856  009AB4  8BC2               	bsf	194,5,b	;volatile
 25857                           
 25858                           ; BSR set to: 14
 25859                           ;mcc_generated_files/tmr0.c: 87:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
 25860  009AB6  0E98               	movlw	low _TMR0_DefaultInterruptHandler
 25861  009AB8  6E10               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
 25862  009ABA  0E9E               	movlw	high _TMR0_DefaultInterruptHandler
 25863  009ABC  6E11               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
 25864  009ABE  ECC3  F04E         	call	_TMR0_SetInterruptHandler	;wreg free
 25865                           
 25866                           ; BSR set to: 14
 25867                           ;mcc_generated_files/tmr0.c: 90:     T0CON0 = 0x87;
 25868  009AC2  0E87               	movlw	135
 25869  009AC4  6ED5               	movwf	213,c	;volatile
 25870                           
 25871                           ; BSR set to: 14
 25872  009AC6  0012               	return		;funcret
 25873  009AC8                     __end_of_TMR0_Initialize:
 25874                           	callstack 0
 25875                           
 25876 ;; *************** function _TMR0_SetInterruptHandler *****************
 25877 ;; Defined at:
 25878 ;;		line 143 in file "mcc_generated_files/tmr0.c"
 25879 ;; Parameters:    Size  Location     Type
 25880 ;;  InterruptHan    2   15[COMRAM] PTR FTN()void 
 25881 ;;		 -> TMR0_DefaultInterruptHandler(1), 
 25882 ;; Auto vars:     Size  Location     Type
 25883 ;;		None
 25884 ;; Return value:  Size  Location     Type
 25885 ;;                  1    wreg      void 
 25886 ;; Registers used:
 25887 ;;		wreg, status,2, status,0
 25888 ;; Tracked objects:
 25889 ;;		On entry : 3F/E
 25890 ;;		On exit  : 3F/E
 25891 ;;		Unchanged: 3F/0
 25892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25893 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25894 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25896 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25897 ;;Total ram usage:        2 bytes
 25898 ;; Hardware stack levels used: 1
 25899 ;; Hardware stack levels required when called: 4
 25900 ;; This function calls:
 25901 ;;		Nothing
 25902 ;; This function is called by:
 25903 ;;		_TMR0_Initialize
 25904 ;; This function uses a non-reentrant model
 25905 ;;
 25906                           
 25907                           	psect	text98
 25908  009D86                     __ptext98:
 25909                           	callstack 0
 25910  009D86                     _TMR0_SetInterruptHandler:
 25911                           	callstack 24
 25912                           
 25913                           ; BSR set to: 14
 25914                           ;mcc_generated_files/tmr0.c: 144:     TMR0_InterruptHandler = InterruptHandler;
 25915                           
 25916                           ; BSR set to: 14
 25917                           ;incstack = 0
 25918  009D86  C010  F2E1         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
 25919  009D8A  C011  F2E2         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
 25920                           
 25921                           ; BSR set to: 14
 25922  009D8E  0012               	return		;funcret
 25923  009D90                     __end_of_TMR0_SetInterruptHandler:
 25924                           	callstack 0
 25925                           
 25926 ;; *************** function _PMD_Initialize *****************
 25927 ;; Defined at:
 25928 ;;		line 79 in file "mcc_generated_files/mcc.c"
 25929 ;; Parameters:    Size  Location     Type
 25930 ;;		None
 25931 ;; Auto vars:     Size  Location     Type
 25932 ;;		None
 25933 ;; Return value:  Size  Location     Type
 25934 ;;                  1    wreg      void 
 25935 ;; Registers used:
 25936 ;;		wreg, status,2
 25937 ;; Tracked objects:
 25938 ;;		On entry : 3F/0
 25939 ;;		On exit  : 3F/E
 25940 ;;		Unchanged: 0/0
 25941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25943 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25945 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25946 ;;Total ram usage:        0 bytes
 25947 ;; Hardware stack levels used: 1
 25948 ;; Hardware stack levels required when called: 4
 25949 ;; This function calls:
 25950 ;;		Nothing
 25951 ;; This function is called by:
 25952 ;;		_SYSTEM_Initialize
 25953 ;; This function uses a non-reentrant model
 25954 ;;
 25955                           
 25956                           	psect	text99
 25957  009B44                     __ptext99:
 25958                           	callstack 0
 25959  009B44                     _PMD_Initialize:
 25960                           	callstack 25
 25961                           
 25962                           ; BSR set to: 0
 25963                           ;mcc_generated_files/mcc.c: 82:     PMD0 = 0x00;
 25964                           
 25965                           ; BSR set to: 14
 25966                           ;incstack = 0
 25967  009B44  0E00               	movlw	0
 25968  009B46  010E               	movlb	14	; () banked
 25969  009B48  6FE1               	movwf	225,b	;volatile
 25970                           
 25971                           ;mcc_generated_files/mcc.c: 84:     PMD1 = 0x00;
 25972  009B4A  0E00               	movlw	0
 25973  009B4C  6FE2               	movwf	226,b	;volatile
 25974                           
 25975                           ;mcc_generated_files/mcc.c: 86:     PMD2 = 0x00;
 25976  009B4E  0E00               	movlw	0
 25977  009B50  6FE3               	movwf	227,b	;volatile
 25978                           
 25979                           ;mcc_generated_files/mcc.c: 88:     PMD3 = 0x00;
 25980  009B52  0E00               	movlw	0
 25981  009B54  6FE4               	movwf	228,b	;volatile
 25982                           
 25983                           ;mcc_generated_files/mcc.c: 90:     PMD4 = 0x00;
 25984  009B56  0E00               	movlw	0
 25985  009B58  6FE5               	movwf	229,b	;volatile
 25986                           
 25987                           ;mcc_generated_files/mcc.c: 92:     PMD5 = 0x00;
 25988  009B5A  0E00               	movlw	0
 25989  009B5C  6FE6               	movwf	230,b	;volatile
 25990                           
 25991                           ; BSR set to: 14
 25992  009B5E  0012               	return		;funcret
 25993  009B60                     __end_of_PMD_Initialize:
 25994                           	callstack 0
 25995                           
 25996 ;; *************** function _PIN_MANAGER_Initialize *****************
 25997 ;; Defined at:
 25998 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 25999 ;; Parameters:    Size  Location     Type
 26000 ;;		None
 26001 ;; Auto vars:     Size  Location     Type
 26002 ;;		None
 26003 ;; Return value:  Size  Location     Type
 26004 ;;                  1    wreg      void 
 26005 ;; Registers used:
 26006 ;;		wreg, status,2
 26007 ;; Tracked objects:
 26008 ;;		On entry : 3F/E
 26009 ;;		On exit  : 3F/E
 26010 ;;		Unchanged: 0/0
 26011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26012 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26013 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26014 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26015 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26016 ;;Total ram usage:        0 bytes
 26017 ;; Hardware stack levels used: 1
 26018 ;; Hardware stack levels required when called: 4
 26019 ;; This function calls:
 26020 ;;		Nothing
 26021 ;; This function is called by:
 26022 ;;		_SYSTEM_Initialize
 26023 ;; This function uses a non-reentrant model
 26024 ;;
 26025                           
 26026                           	psect	text100
 26027  007FB0                     __ptext100:
 26028                           	callstack 0
 26029  007FB0                     _PIN_MANAGER_Initialize:
 26030                           	callstack 25
 26031                           
 26032                           ; BSR set to: 14
 26033                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
 26034                           
 26035                           ; BSR set to: 14
 26036                           ;incstack = 0
 26037  007FB0  0E00               	movlw	0
 26038  007FB2  6E87               	movwf	135,c	;volatile
 26039                           
 26040                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
 26041  007FB4  0E00               	movlw	0
 26042  007FB6  6E86               	movwf	134,c	;volatile
 26043                           
 26044                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
 26045  007FB8  0E00               	movlw	0
 26046  007FBA  6E83               	movwf	131,c	;volatile
 26047                           
 26048                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
 26049  007FBC  0E00               	movlw	0
 26050  007FBE  6E84               	movwf	132,c	;volatile
 26051                           
 26052                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
 26053  007FC0  0E00               	movlw	0
 26054  007FC2  6E85               	movwf	133,c	;volatile
 26055                           
 26056                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x00;
 26057  007FC4  0E00               	movlw	0
 26058  007FC6  6E8C               	movwf	140,c	;volatile
 26059                           
 26060                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0x7F;
 26061  007FC8  0E7F               	movlw	127
 26062  007FCA  6E88               	movwf	136,c	;volatile
 26063                           
 26064                           ; BSR set to: 14
 26065                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
 26066  007FCC  6889               	setf	137,c	;volatile
 26067                           
 26068                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0x58;
 26069  007FCE  0E58               	movlw	88
 26070  007FD0  6E8A               	movwf	138,c	;volatile
 26071                           
 26072                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0x00;
 26073  007FD2  0E00               	movlw	0
 26074  007FD4  6E8B               	movwf	139,c	;volatile
 26075                           
 26076                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0x00;
 26077  007FD6  0E00               	movlw	0
 26078  007FD8  010F               	movlb	15	; () banked
 26079  007FDA  6F26               	movwf	38,b	;volatile
 26080                           
 26081                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0x00;
 26082  007FDC  0E00               	movlw	0
 26083  007FDE  6F21               	movwf	33,b	;volatile
 26084                           
 26085                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0x00;
 26086  007FE0  0E00               	movlw	0
 26087  007FE2  6F19               	movwf	25,b	;volatile
 26088                           
 26089                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x00;
 26090  007FE4  0E00               	movlw	0
 26091  007FE6  6F2E               	movwf	46,b	;volatile
 26092                           
 26093                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0x01;
 26094  007FE8  0E01               	movlw	1
 26095  007FEA  6F11               	movwf	17,b	;volatile
 26096                           
 26097                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
 26098  007FEC  0E00               	movlw	0
 26099  007FEE  6F25               	movwf	37,b	;volatile
 26100                           
 26101                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
 26102  007FF0  0E00               	movlw	0
 26103  007FF2  6F2D               	movwf	45,b	;volatile
 26104                           
 26105                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0xF7;
 26106  007FF4  0EF7               	movlw	247
 26107  007FF6  6F18               	movwf	24,b	;volatile
 26108                           
 26109                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
 26110  007FF8  0E00               	movlw	0
 26111  007FFA  6F10               	movwf	16,b	;volatile
 26112                           
 26113                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
 26114  007FFC  0E00               	movlw	0
 26115  007FFE  6F20               	movwf	32,b	;volatile
 26116                           
 26117                           ;mcc_generated_files/pin_manager.c: 96:     ODCONE = 0x00;
 26118  008000  0E00               	movlw	0
 26119  008002  6F2C               	movwf	44,b	;volatile
 26120                           
 26121                           ;mcc_generated_files/pin_manager.c: 97:     ODCONA = 0x00;
 26122  008004  0E00               	movlw	0
 26123  008006  6F0F               	movwf	15,b	;volatile
 26124                           
 26125                           ;mcc_generated_files/pin_manager.c: 98:     ODCONB = 0x00;
 26126  008008  0E00               	movlw	0
 26127  00800A  6F17               	movwf	23,b	;volatile
 26128                           
 26129                           ;mcc_generated_files/pin_manager.c: 99:     ODCONC = 0x00;
 26130  00800C  0E00               	movlw	0
 26131  00800E  6F1F               	movwf	31,b	;volatile
 26132                           
 26133                           ;mcc_generated_files/pin_manager.c: 100:     ODCOND = 0x00;
 26134  008010  0E00               	movlw	0
 26135  008012  6F24               	movwf	36,b	;volatile
 26136                           
 26137                           ; BSR set to: 15
 26138                           ;mcc_generated_files/pin_manager.c: 105:     SLRCONA = 0xFF;
 26139  008014  690E               	setf	14,b	;volatile
 26140                           
 26141                           ; BSR set to: 15
 26142                           ;mcc_generated_files/pin_manager.c: 106:     SLRCONB = 0xFF;
 26143  008016  6916               	setf	22,b	;volatile
 26144                           
 26145                           ; BSR set to: 15
 26146                           ;mcc_generated_files/pin_manager.c: 107:     SLRCONC = 0xFF;
 26147  008018  691E               	setf	30,b	;volatile
 26148                           
 26149                           ; BSR set to: 15
 26150                           ;mcc_generated_files/pin_manager.c: 108:     SLRCOND = 0xFF;
 26151  00801A  6923               	setf	35,b	;volatile
 26152                           
 26153                           ;mcc_generated_files/pin_manager.c: 109:     SLRCONE = 0x07;
 26154  00801C  0E07               	movlw	7
 26155  00801E  6F2B               	movwf	43,b	;volatile
 26156                           
 26157                           ; BSR set to: 15
 26158                           ;mcc_generated_files/pin_manager.c: 114:     INLVLA = 0xFF;
 26159  008020  690D               	setf	13,b	;volatile
 26160                           
 26161                           ; BSR set to: 15
 26162                           ;mcc_generated_files/pin_manager.c: 115:     INLVLB = 0xFF;
 26163  008022  6915               	setf	21,b	;volatile
 26164                           
 26165                           ; BSR set to: 15
 26166                           ;mcc_generated_files/pin_manager.c: 116:     INLVLC = 0xFF;
 26167  008024  691D               	setf	29,b	;volatile
 26168                           
 26169                           ; BSR set to: 15
 26170                           ;mcc_generated_files/pin_manager.c: 117:     INLVLD = 0xFF;
 26171  008026  6922               	setf	34,b	;volatile
 26172                           
 26173                           ;mcc_generated_files/pin_manager.c: 118:     INLVLE = 0x0F;
 26174  008028  0E0F               	movlw	15
 26175  00802A  6F2A               	movwf	42,b	;volatile
 26176                           
 26177                           ;mcc_generated_files/pin_manager.c: 127:     SSP1CLKPPS = 0x13;
 26178  00802C  0E13               	movlw	19
 26179  00802E  010E               	movlb	14	; () banked
 26180  008030  6FB7               	movwf	183,b	;volatile
 26181                           
 26182                           ;mcc_generated_files/pin_manager.c: 128:     RX1PPS = 0x16;
 26183  008032  0E16               	movlw	22
 26184  008034  6FB5               	movwf	181,b	;volatile
 26185                           
 26186                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x0F;
 26187  008036  0E0F               	movlw	15
 26188  008038  6FFA               	movwf	250,b	;volatile
 26189                           
 26190                           ;mcc_generated_files/pin_manager.c: 130:     RC4PPS = 0x10;
 26191  00803A  0E10               	movlw	16
 26192  00803C  6FFB               	movwf	251,b	;volatile
 26193                           
 26194                           ;mcc_generated_files/pin_manager.c: 131:     RC7PPS = 0x09;
 26195  00803E  0E09               	movlw	9
 26196  008040  6FFE               	movwf	254,b	;volatile
 26197                           
 26198                           ;mcc_generated_files/pin_manager.c: 132:     SSP1DATPPS = 0x14;
 26199  008042  0E14               	movlw	20
 26200  008044  6FB8               	movwf	184,b	;volatile
 26201                           
 26202                           ; BSR set to: 14
 26203  008046  0012               	return		;funcret
 26204  008048                     __end_of_PIN_MANAGER_Initialize:
 26205                           	callstack 0
 26206                           
 26207 ;; *************** function _OSCILLATOR_Initialize *****************
 26208 ;; Defined at:
 26209 ;;		line 65 in file "mcc_generated_files/mcc.c"
 26210 ;; Parameters:    Size  Location     Type
 26211 ;;		None
 26212 ;; Auto vars:     Size  Location     Type
 26213 ;;		None
 26214 ;; Return value:  Size  Location     Type
 26215 ;;                  1    wreg      void 
 26216 ;; Registers used:
 26217 ;;		wreg, status,2
 26218 ;; Tracked objects:
 26219 ;;		On entry : 3F/E
 26220 ;;		On exit  : 3F/E
 26221 ;;		Unchanged: 0/0
 26222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26223 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26224 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26226 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26227 ;;Total ram usage:        0 bytes
 26228 ;; Hardware stack levels used: 1
 26229 ;; Hardware stack levels required when called: 4
 26230 ;; This function calls:
 26231 ;;		Nothing
 26232 ;; This function is called by:
 26233 ;;		_SYSTEM_Initialize
 26234 ;; This function uses a non-reentrant model
 26235 ;;
 26236                           
 26237                           	psect	text101
 26238  009C8C                     __ptext101:
 26239                           	callstack 0
 26240  009C8C                     _OSCILLATOR_Initialize:
 26241                           	callstack 25
 26242                           
 26243                           ; BSR set to: 14
 26244                           ;mcc_generated_files/mcc.c: 68:     OSCCON1 = 0x60;
 26245                           
 26246                           ; BSR set to: 14
 26247                           ;incstack = 0
 26248  009C8C  0E60               	movlw	96
 26249  009C8E  6FD8               	movwf	216,b	;volatile
 26250                           
 26251                           ;mcc_generated_files/mcc.c: 70:     OSCCON3 = 0x00;
 26252  009C90  0E00               	movlw	0
 26253  009C92  6FDA               	movwf	218,b	;volatile
 26254                           
 26255                           ;mcc_generated_files/mcc.c: 72:     OSCEN = 0x00;
 26256  009C94  0E00               	movlw	0
 26257  009C96  6FDC               	movwf	220,b	;volatile
 26258                           
 26259                           ;mcc_generated_files/mcc.c: 74:     OSCFRQ = 0x08;
 26260  009C98  0E08               	movlw	8
 26261  009C9A  6FDE               	movwf	222,b	;volatile
 26262                           
 26263                           ;mcc_generated_files/mcc.c: 76:     OSCTUNE = 0x00;
 26264  009C9C  0E00               	movlw	0
 26265  009C9E  6FDD               	movwf	221,b	;volatile
 26266                           
 26267                           ; BSR set to: 14
 26268  009CA0  0012               	return		;funcret
 26269  009CA2                     __end_of_OSCILLATOR_Initialize:
 26270                           	callstack 0
 26271                           
 26272 ;; *************** function _INTERRUPT_Initialize *****************
 26273 ;; Defined at:
 26274 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 26275 ;; Parameters:    Size  Location     Type
 26276 ;;		None
 26277 ;; Auto vars:     Size  Location     Type
 26278 ;;		None
 26279 ;; Return value:  Size  Location     Type
 26280 ;;                  1    wreg      void 
 26281 ;; Registers used:
 26282 ;;		None
 26283 ;; Tracked objects:
 26284 ;;		On entry : 3F/0
 26285 ;;		On exit  : 3F/0
 26286 ;;		Unchanged: 3F/0
 26287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26291 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26292 ;;Total ram usage:        0 bytes
 26293 ;; Hardware stack levels used: 1
 26294 ;; Hardware stack levels required when called: 4
 26295 ;; This function calls:
 26296 ;;		Nothing
 26297 ;; This function is called by:
 26298 ;;		_SYSTEM_Initialize
 26299 ;; This function uses a non-reentrant model
 26300 ;;
 26301                           
 26302                           	psect	text102
 26303  009E6A                     __ptext102:
 26304                           	callstack 0
 26305  009E6A                     _INTERRUPT_Initialize:
 26306                           	callstack 25
 26307                           
 26308                           ; BSR set to: 0
 26309                           ;mcc_generated_files/interrupt_manager.c: 55:     INTCONbits.IPEN = 0;
 26310                           
 26311                           ; BSR set to: 14
 26312                           ;incstack = 0
 26313  009E6A  9AF2               	bcf	242,5,c	;volatile
 26314                           
 26315                           ; BSR set to: 0
 26316  009E6C  0012               	return		;funcret
 26317  009E6E                     __end_of_INTERRUPT_Initialize:
 26318                           	callstack 0
 26319                           
 26320 ;; *************** function _I2C1_Initialize *****************
 26321 ;; Defined at:
 26322 ;;		line 167 in file "mcc_generated_files/i2c1_master.c"
 26323 ;; Parameters:    Size  Location     Type
 26324 ;;		None
 26325 ;; Auto vars:     Size  Location     Type
 26326 ;;		None
 26327 ;; Return value:  Size  Location     Type
 26328 ;;                  1    wreg      void 
 26329 ;; Registers used:
 26330 ;;		wreg, status,2
 26331 ;; Tracked objects:
 26332 ;;		On entry : 3F/E
 26333 ;;		On exit  : 3F/E
 26334 ;;		Unchanged: 3F/0
 26335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26337 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26339 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26340 ;;Total ram usage:        0 bytes
 26341 ;; Hardware stack levels used: 1
 26342 ;; Hardware stack levels required when called: 4
 26343 ;; This function calls:
 26344 ;;		Nothing
 26345 ;; This function is called by:
 26346 ;;		_SYSTEM_Initialize
 26347 ;; This function uses a non-reentrant model
 26348 ;;
 26349                           
 26350                           	psect	text103
 26351  009CE0                     __ptext103:
 26352                           	callstack 0
 26353  009CE0                     _I2C1_Initialize:
 26354                           	callstack 25
 26355                           
 26356                           ; BSR set to: 14
 26357                           ;mcc_generated_files/i2c1_master.c: 169:     SSP1STAT = 0x80;
 26358                           
 26359                           ; BSR set to: 0
 26360                           ;incstack = 0
 26361  009CE0  0E80               	movlw	128
 26362  009CE2  6E95               	movwf	149,c	;volatile
 26363                           
 26364                           ;mcc_generated_files/i2c1_master.c: 170:     SSP1CON1 = 0x08;
 26365  009CE4  0E08               	movlw	8
 26366  009CE6  6E96               	movwf	150,c	;volatile
 26367                           
 26368                           ;mcc_generated_files/i2c1_master.c: 171:     SSP1CON2 = 0x00;
 26369  009CE8  0E00               	movlw	0
 26370  009CEA  6E97               	movwf	151,c	;volatile
 26371                           
 26372                           ;mcc_generated_files/i2c1_master.c: 172:     SSP1ADD = 0x9F;
 26373  009CEC  0E9F               	movlw	159
 26374  009CEE  6E93               	movwf	147,c	;volatile
 26375                           
 26376                           ; BSR set to: 14
 26377                           ;mcc_generated_files/i2c1_master.c: 173:     SSP1CON1bits.SSPEN = 0;
 26378  009CF0  9A96               	bcf	150,5,c	;volatile
 26379                           
 26380                           ; BSR set to: 14
 26381  009CF2  0012               	return		;funcret
 26382  009CF4                     __end_of_I2C1_Initialize:
 26383                           	callstack 0
 26384                           
 26385 ;; *************** function _EUSART1_Initialize *****************
 26386 ;; Defined at:
 26387 ;;		line 88 in file "mcc_generated_files/eusart1.c"
 26388 ;; Parameters:    Size  Location     Type
 26389 ;;		None
 26390 ;; Auto vars:     Size  Location     Type
 26391 ;;		None
 26392 ;; Return value:  Size  Location     Type
 26393 ;;                  1    wreg      void 
 26394 ;; Registers used:
 26395 ;;		wreg, status,2, status,0, cstack
 26396 ;; Tracked objects:
 26397 ;;		On entry : 3F/E
 26398 ;;		On exit  : 3F/E
 26399 ;;		Unchanged: 0/0
 26400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26401 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26402 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26404 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26405 ;;Total ram usage:        0 bytes
 26406 ;; Hardware stack levels used: 1
 26407 ;; Hardware stack levels required when called: 5
 26408 ;; This function calls:
 26409 ;;		_EUSART1_SetErrorHandler
 26410 ;;		_EUSART1_SetFramingErrorHandler
 26411 ;;		_EUSART1_SetOverrunErrorHandler
 26412 ;;		_EUSART1_SetRxInterruptHandler
 26413 ;;		_EUSART1_SetTxInterruptHandler
 26414 ;; This function is called by:
 26415 ;;		_SYSTEM_Initialize
 26416 ;; This function uses a non-reentrant model
 26417 ;;
 26418                           
 26419                           	psect	text104
 26420  008626                     __ptext104:
 26421                           	callstack 0
 26422  008626                     _EUSART1_Initialize:
 26423                           	callstack 24
 26424                           
 26425                           ; BSR set to: 14
 26426                           ;mcc_generated_files/eusart1.c: 91:     PIE3bits.RC1IE = 0;
 26427                           
 26428                           ; BSR set to: 14
 26429                           ;incstack = 0
 26430  008626  9BC5               	bcf	197,5,b	;volatile
 26431                           
 26432                           ; BSR set to: 14
 26433                           ;mcc_generated_files/eusart1.c: 92:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
 26434  008628  0E16               	movlw	low _EUSART1_Receive_ISR
 26435  00862A  6E10               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler^0,c
 26436  00862C  0E7F               	movlw	high _EUSART1_Receive_ISR
 26437  00862E  6E11               	movwf	(EUSART1_SetRxInterruptHandler@interruptHandler+1)^0,c
 26438  008630  ECCD  F04E         	call	_EUSART1_SetRxInterruptHandler	;wreg free
 26439                           
 26440                           ; BSR set to: 14
 26441                           ;mcc_generated_files/eusart1.c: 93:     PIE3bits.TX1IE = 0;
 26442  008634  99C5               	bcf	197,4,b	;volatile
 26443                           
 26444                           ;mcc_generated_files/eusart1.c: 94:     EUSART1_SetTxInterruptHandler(EUSART1_Transmit_I
      +                          SR);
 26445  008636  0E86               	movlw	low _EUSART1_Transmit_ISR
 26446  008638  6E10               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler^0,c
 26447  00863A  0E96               	movlw	high _EUSART1_Transmit_ISR
 26448  00863C  6E11               	movwf	(EUSART1_SetTxInterruptHandler@interruptHandler+1)^0,c
 26449  00863E  ECC8  F04E         	call	_EUSART1_SetTxInterruptHandler	;wreg free
 26450                           
 26451                           ; BSR set to: 14
 26452                           ;mcc_generated_files/eusart1.c: 98:     BAUD1CON = 0x08;
 26453  008642  0E08               	movlw	8
 26454  008644  6E9F               	movwf	159,c	;volatile
 26455                           
 26456                           ; BSR set to: 14
 26457                           ;mcc_generated_files/eusart1.c: 101:     RC1STA = 0x90;
 26458  008646  0E90               	movlw	144
 26459  008648  6E9D               	movwf	157,c	;volatile
 26460                           
 26461                           ; BSR set to: 14
 26462                           ;mcc_generated_files/eusart1.c: 104:     TX1STA = 0x24;
 26463  00864A  0E24               	movlw	36
 26464  00864C  6E9E               	movwf	158,c	;volatile
 26465                           
 26466                           ; BSR set to: 14
 26467                           ;mcc_generated_files/eusart1.c: 107:     SP1BRGL = 0x82;
 26468  00864E  0E82               	movlw	130
 26469  008650  6E9B               	movwf	155,c	;volatile
 26470                           
 26471                           ; BSR set to: 14
 26472                           ;mcc_generated_files/eusart1.c: 110:     SP1BRGH = 0x06;
 26473  008652  0E06               	movlw	6
 26474  008654  6E9C               	movwf	156,c	;volatile
 26475                           
 26476                           ; BSR set to: 14
 26477                           ;mcc_generated_files/eusart1.c: 113:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
 26478  008656  0E9A               	movlw	low _EUSART1_DefaultFramingErrorHandler
 26479  008658  6E10               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
 26480  00865A  0E9E               	movlw	high _EUSART1_DefaultFramingErrorHandler
 26481  00865C  6E11               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
 26482  00865E  ECD7  F04E         	call	_EUSART1_SetFramingErrorHandler	;wreg free
 26483                           
 26484                           ; BSR set to: 14
 26485                           ;mcc_generated_files/eusart1.c: 114:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
 26486  008662  0E5A               	movlw	low _EUSART1_DefaultOverrunErrorHandler
 26487  008664  6E10               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
 26488  008666  0E9E               	movlw	high _EUSART1_DefaultOverrunErrorHandler
 26489  008668  6E11               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
 26490  00866A  ECD2  F04E         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
 26491                           
 26492                           ; BSR set to: 14
 26493                           ;mcc_generated_files/eusart1.c: 115:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
 26494  00866E  0E60               	movlw	low _EUSART1_DefaultErrorHandler
 26495  008670  6E10               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
 26496  008672  0E9E               	movlw	high _EUSART1_DefaultErrorHandler
 26497  008674  6E11               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
 26498  008676  ECDC  F04E         	call	_EUSART1_SetErrorHandler	;wreg free
 26499                           
 26500                           ;mcc_generated_files/eusart1.c: 117:     eusart1RxLastError.status = 0;
 26501  00867A  0E00               	movlw	0
 26502  00867C  0101               	movlb	1	; () banked
 26503  00867E  6F9E               	movwf	_eusart1RxLastError& (0+255),b	;volatile
 26504                           
 26505                           ;mcc_generated_files/eusart1.c: 120:     eusart1TxHead = 0;
 26506  008680  0E00               	movlw	0
 26507  008682  0100               	movlb	0	; () banked
 26508  008684  6F97               	movwf	_eusart1TxHead& (0+255),b	;volatile
 26509                           
 26510                           ;mcc_generated_files/eusart1.c: 121:     eusart1TxTail = 0;
 26511  008686  0E00               	movlw	0
 26512  008688  6F96               	movwf	_eusart1TxTail& (0+255),b	;volatile
 26513                           
 26514                           ;mcc_generated_files/eusart1.c: 122:     eusart1TxBufferRemaining = sizeof(eusart1TxBuff
      +                          er);
 26515  00868A  0E08               	movlw	8
 26516  00868C  0101               	movlb	1	; () banked
 26517  00868E  6FFE               	movwf	_eusart1TxBufferRemaining& (0+255),b	;volatile
 26518                           
 26519                           ;mcc_generated_files/eusart1.c: 124:     eusart1RxHead = 0;
 26520  008690  0E00               	movlw	0
 26521  008692  0100               	movlb	0	; () banked
 26522  008694  6F95               	movwf	_eusart1RxHead& (0+255),b	;volatile
 26523                           
 26524                           ;mcc_generated_files/eusart1.c: 125:     eusart1RxTail = 0;
 26525  008696  0E00               	movlw	0
 26526  008698  6F94               	movwf	_eusart1RxTail& (0+255),b	;volatile
 26527                           
 26528                           ;mcc_generated_files/eusart1.c: 126:     eusart1RxCount = 0;
 26529  00869A  0E00               	movlw	0
 26530  00869C  6F93               	movwf	_eusart1RxCount& (0+255),b	;volatile
 26531                           
 26532                           ; BSR set to: 0
 26533                           ;mcc_generated_files/eusart1.c: 129:     PIE3bits.RC1IE = 1;
 26534  00869E  010E               	movlb	14	; () banked
 26535  0086A0  8BC5               	bsf	197,5,b	;volatile
 26536                           
 26537                           ; BSR set to: 14
 26538  0086A2  0012               	return		;funcret
 26539  0086A4                     __end_of_EUSART1_Initialize:
 26540                           	callstack 0
 26541                           
 26542 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
 26543 ;; Defined at:
 26544 ;;		line 276 in file "mcc_generated_files/eusart1.c"
 26545 ;; Parameters:    Size  Location     Type
 26546 ;;  interruptHan    2   15[COMRAM] PTR FTN()void 
 26547 ;;		 -> EUSART1_Transmit_ISR(1), 
 26548 ;; Auto vars:     Size  Location     Type
 26549 ;;		None
 26550 ;; Return value:  Size  Location     Type
 26551 ;;                  1    wreg      void 
 26552 ;; Registers used:
 26553 ;;		wreg, status,2, status,0
 26554 ;; Tracked objects:
 26555 ;;		On entry : 3F/E
 26556 ;;		On exit  : 3F/E
 26557 ;;		Unchanged: 3F/0
 26558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26559 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26560 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26562 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26563 ;;Total ram usage:        2 bytes
 26564 ;; Hardware stack levels used: 1
 26565 ;; Hardware stack levels required when called: 4
 26566 ;; This function calls:
 26567 ;;		Nothing
 26568 ;; This function is called by:
 26569 ;;		_EUSART1_Initialize
 26570 ;; This function uses a non-reentrant model
 26571 ;;
 26572                           
 26573                           	psect	text105
 26574  009D90                     __ptext105:
 26575                           	callstack 0
 26576  009D90                     _EUSART1_SetTxInterruptHandler:
 26577                           	callstack 24
 26578                           
 26579                           ; BSR set to: 14
 26580                           ;mcc_generated_files/eusart1.c: 277:     EUSART1_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
 26581                           
 26582                           ; BSR set to: 14
 26583                           ;incstack = 0
 26584  009D90  C010  F2EB         	movff	EUSART1_SetTxInterruptHandler@interruptHandler,_EUSART1_TxDefaultInterruptHandler
 26585  009D94  C011  F2EC         	movff	EUSART1_SetTxInterruptHandler@interruptHandler+1,_EUSART1_TxDefaultInterruptHandl
      +                          er+1
 26586                           
 26587                           ; BSR set to: 14
 26588  009D98  0012               	return		;funcret
 26589  009D9A                     __end_of_EUSART1_SetTxInterruptHandler:
 26590                           	callstack 0
 26591                           
 26592 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
 26593 ;; Defined at:
 26594 ;;		line 280 in file "mcc_generated_files/eusart1.c"
 26595 ;; Parameters:    Size  Location     Type
 26596 ;;  interruptHan    2   15[COMRAM] PTR FTN()void 
 26597 ;;		 -> EUSART1_Receive_ISR(1), 
 26598 ;; Auto vars:     Size  Location     Type
 26599 ;;		None
 26600 ;; Return value:  Size  Location     Type
 26601 ;;                  1    wreg      void 
 26602 ;; Registers used:
 26603 ;;		wreg, status,2, status,0
 26604 ;; Tracked objects:
 26605 ;;		On entry : 3F/E
 26606 ;;		On exit  : 3F/E
 26607 ;;		Unchanged: 3F/0
 26608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26609 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26610 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26612 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26613 ;;Total ram usage:        2 bytes
 26614 ;; Hardware stack levels used: 1
 26615 ;; Hardware stack levels required when called: 4
 26616 ;; This function calls:
 26617 ;;		Nothing
 26618 ;; This function is called by:
 26619 ;;		_EUSART1_Initialize
 26620 ;; This function uses a non-reentrant model
 26621 ;;
 26622                           
 26623                           	psect	text106
 26624  009D9A                     __ptext106:
 26625                           	callstack 0
 26626  009D9A                     _EUSART1_SetRxInterruptHandler:
 26627                           	callstack 24
 26628                           
 26629                           ; BSR set to: 14
 26630                           ;mcc_generated_files/eusart1.c: 281:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
 26631                           
 26632                           ; BSR set to: 14
 26633                           ;incstack = 0
 26634  009D9A  C010  F2E9         	movff	EUSART1_SetRxInterruptHandler@interruptHandler,_EUSART1_RxDefaultInterruptHandler
 26635  009D9E  C011  F2EA         	movff	EUSART1_SetRxInterruptHandler@interruptHandler+1,_EUSART1_RxDefaultInterruptHandl
      +                          er+1
 26636                           
 26637                           ; BSR set to: 14
 26638  009DA2  0012               	return		;funcret
 26639  009DA4                     __end_of_EUSART1_SetRxInterruptHandler:
 26640                           	callstack 0
 26641                           
 26642 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
 26643 ;; Defined at:
 26644 ;;		line 268 in file "mcc_generated_files/eusart1.c"
 26645 ;; Parameters:    Size  Location     Type
 26646 ;;  interruptHan    2   15[COMRAM] PTR FTN()void 
 26647 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
 26648 ;; Auto vars:     Size  Location     Type
 26649 ;;		None
 26650 ;; Return value:  Size  Location     Type
 26651 ;;                  1    wreg      void 
 26652 ;; Registers used:
 26653 ;;		wreg, status,2, status,0
 26654 ;; Tracked objects:
 26655 ;;		On entry : 3F/E
 26656 ;;		On exit  : 3F/E
 26657 ;;		Unchanged: 3F/0
 26658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26659 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26662 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26663 ;;Total ram usage:        2 bytes
 26664 ;; Hardware stack levels used: 1
 26665 ;; Hardware stack levels required when called: 4
 26666 ;; This function calls:
 26667 ;;		Nothing
 26668 ;; This function is called by:
 26669 ;;		_EUSART1_Initialize
 26670 ;; This function uses a non-reentrant model
 26671 ;;
 26672                           
 26673                           	psect	text107
 26674  009DA4                     __ptext107:
 26675                           	callstack 0
 26676  009DA4                     _EUSART1_SetOverrunErrorHandler:
 26677                           	callstack 24
 26678                           
 26679                           ; BSR set to: 14
 26680                           ;mcc_generated_files/eusart1.c: 269:     EUSART1_OverrunErrorHandler = interruptHandler;
 26681                           
 26682                           ; BSR set to: 14
 26683                           ;incstack = 0
 26684  009DA4  C010  F2E5         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
 26685  009DA8  C011  F2E6         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
 26686                           
 26687                           ; BSR set to: 14
 26688  009DAC  0012               	return		;funcret
 26689  009DAE                     __end_of_EUSART1_SetOverrunErrorHandler:
 26690                           	callstack 0
 26691                           
 26692 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
 26693 ;; Defined at:
 26694 ;;		line 264 in file "mcc_generated_files/eusart1.c"
 26695 ;; Parameters:    Size  Location     Type
 26696 ;;  interruptHan    2   15[COMRAM] PTR FTN()void 
 26697 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
 26698 ;; Auto vars:     Size  Location     Type
 26699 ;;		None
 26700 ;; Return value:  Size  Location     Type
 26701 ;;                  1    wreg      void 
 26702 ;; Registers used:
 26703 ;;		wreg, status,2, status,0
 26704 ;; Tracked objects:
 26705 ;;		On entry : 3F/E
 26706 ;;		On exit  : 3F/E
 26707 ;;		Unchanged: 3F/0
 26708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26709 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26710 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26712 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26713 ;;Total ram usage:        2 bytes
 26714 ;; Hardware stack levels used: 1
 26715 ;; Hardware stack levels required when called: 4
 26716 ;; This function calls:
 26717 ;;		Nothing
 26718 ;; This function is called by:
 26719 ;;		_EUSART1_Initialize
 26720 ;; This function uses a non-reentrant model
 26721 ;;
 26722                           
 26723                           	psect	text108
 26724  009DAE                     __ptext108:
 26725                           	callstack 0
 26726  009DAE                     _EUSART1_SetFramingErrorHandler:
 26727                           	callstack 24
 26728                           
 26729                           ; BSR set to: 14
 26730                           ;mcc_generated_files/eusart1.c: 265:     EUSART1_FramingErrorHandler = interruptHandler;
 26731                           
 26732                           ; BSR set to: 14
 26733                           ;incstack = 0
 26734  009DAE  C010  F2E7         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
 26735  009DB2  C011  F2E8         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
 26736                           
 26737                           ; BSR set to: 14
 26738  009DB6  0012               	return		;funcret
 26739  009DB8                     __end_of_EUSART1_SetFramingErrorHandler:
 26740                           	callstack 0
 26741                           
 26742 ;; *************** function _EUSART1_SetErrorHandler *****************
 26743 ;; Defined at:
 26744 ;;		line 272 in file "mcc_generated_files/eusart1.c"
 26745 ;; Parameters:    Size  Location     Type
 26746 ;;  interruptHan    2   15[COMRAM] PTR FTN()void 
 26747 ;;		 -> EUSART1_DefaultErrorHandler(1), 
 26748 ;; Auto vars:     Size  Location     Type
 26749 ;;		None
 26750 ;; Return value:  Size  Location     Type
 26751 ;;                  1    wreg      void 
 26752 ;; Registers used:
 26753 ;;		wreg, status,2, status,0
 26754 ;; Tracked objects:
 26755 ;;		On entry : 3F/E
 26756 ;;		On exit  : 3F/E
 26757 ;;		Unchanged: 3F/0
 26758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26759 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26762 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26763 ;;Total ram usage:        2 bytes
 26764 ;; Hardware stack levels used: 1
 26765 ;; Hardware stack levels required when called: 4
 26766 ;; This function calls:
 26767 ;;		Nothing
 26768 ;; This function is called by:
 26769 ;;		_EUSART1_Initialize
 26770 ;; This function uses a non-reentrant model
 26771 ;;
 26772                           
 26773                           	psect	text109
 26774  009DB8                     __ptext109:
 26775                           	callstack 0
 26776  009DB8                     _EUSART1_SetErrorHandler:
 26777                           	callstack 24
 26778                           
 26779                           ; BSR set to: 14
 26780                           ;mcc_generated_files/eusart1.c: 273:     EUSART1_ErrorHandler = interruptHandler;
 26781                           
 26782                           ; BSR set to: 14
 26783                           ;incstack = 0
 26784  009DB8  C010  F2E3         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
 26785  009DBC  C011  F2E4         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
 26786                           
 26787                           ; BSR set to: 14
 26788  009DC0  0012               	return		;funcret
 26789  009DC2                     __end_of_EUSART1_SetErrorHandler:
 26790                           	callstack 0
 26791                           
 26792 ;; *************** function _ADCC_Initialize *****************
 26793 ;; Defined at:
 26794 ;;		line 62 in file "mcc_generated_files/adcc.c"
 26795 ;; Parameters:    Size  Location     Type
 26796 ;;		None
 26797 ;; Auto vars:     Size  Location     Type
 26798 ;;		None
 26799 ;; Return value:  Size  Location     Type
 26800 ;;                  1    wreg      void 
 26801 ;; Registers used:
 26802 ;;		wreg, status,2
 26803 ;; Tracked objects:
 26804 ;;		On entry : 3F/E
 26805 ;;		On exit  : 3F/F
 26806 ;;		Unchanged: 0/0
 26807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26808 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26809 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26811 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26812 ;;Total ram usage:        0 bytes
 26813 ;; Hardware stack levels used: 1
 26814 ;; Hardware stack levels required when called: 4
 26815 ;; This function calls:
 26816 ;;		Nothing
 26817 ;; This function is called by:
 26818 ;;		_SYSTEM_Initialize
 26819 ;; This function uses a non-reentrant model
 26820 ;;
 26821                           
 26822                           	psect	text110
 26823  0091B2                     __ptext110:
 26824                           	callstack 0
 26825  0091B2                     _ADCC_Initialize:
 26826                           	callstack 25
 26827                           
 26828                           ; BSR set to: 14
 26829                           ;mcc_generated_files/adcc.c: 66:     ADLTHL = 0x00;
 26830                           
 26831                           ; BSR set to: 14
 26832                           ;incstack = 0
 26833  0091B2  0E00               	movlw	0
 26834  0091B4  6E6A               	movwf	106,c	;volatile
 26835                           
 26836                           ;mcc_generated_files/adcc.c: 68:     ADLTHH = 0x00;
 26837  0091B6  0E00               	movlw	0
 26838  0091B8  6E6B               	movwf	107,c	;volatile
 26839                           
 26840                           ;mcc_generated_files/adcc.c: 70:     ADUTHL = 0x00;
 26841  0091BA  0E00               	movlw	0
 26842  0091BC  6E6C               	movwf	108,c	;volatile
 26843                           
 26844                           ;mcc_generated_files/adcc.c: 72:     ADUTHH = 0x00;
 26845  0091BE  0E00               	movlw	0
 26846  0091C0  6E6D               	movwf	109,c	;volatile
 26847                           
 26848                           ;mcc_generated_files/adcc.c: 74:     ADSTPTL = 0x00;
 26849  0091C2  0E00               	movlw	0
 26850  0091C4  6E68               	movwf	104,c	;volatile
 26851                           
 26852                           ;mcc_generated_files/adcc.c: 76:     ADSTPTH = 0x00;
 26853  0091C6  0E00               	movlw	0
 26854  0091C8  6E69               	movwf	105,c	;volatile
 26855                           
 26856                           ;mcc_generated_files/adcc.c: 78:     ADRPT = 0x00;
 26857  0091CA  0E00               	movlw	0
 26858  0091CC  6E66               	movwf	102,c	;volatile
 26859                           
 26860                           ;mcc_generated_files/adcc.c: 80:     ADPCH = 0x00;
 26861  0091CE  0E00               	movlw	0
 26862  0091D0  010F               	movlb	15	; () banked
 26863  0091D2  6F5F               	movwf	95,b	;volatile
 26864                           
 26865                           ;mcc_generated_files/adcc.c: 82:     ADCAP = 0x00;
 26866  0091D4  0E00               	movlw	0
 26867  0091D6  6F5D               	movwf	93,b	;volatile
 26868                           
 26869                           ;mcc_generated_files/adcc.c: 84:     ADPRE = 0x00;
 26870  0091D8  0E00               	movlw	0
 26871  0091DA  6F5E               	movwf	94,b	;volatile
 26872                           
 26873                           ;mcc_generated_files/adcc.c: 86:     ADCON1 = 0x00;
 26874  0091DC  0E00               	movlw	0
 26875  0091DE  6F59               	movwf	89,b	;volatile
 26876                           
 26877                           ;mcc_generated_files/adcc.c: 88:     ADCON2 = 0x00;
 26878  0091E0  0E00               	movlw	0
 26879  0091E2  6F5A               	movwf	90,b	;volatile
 26880                           
 26881                           ;mcc_generated_files/adcc.c: 90:     ADCON3 = 0x00;
 26882  0091E4  0E00               	movlw	0
 26883  0091E6  6F5B               	movwf	91,b	;volatile
 26884                           
 26885                           ;mcc_generated_files/adcc.c: 92:     ADSTAT = 0x00;
 26886  0091E8  0E00               	movlw	0
 26887  0091EA  6E65               	movwf	101,c	;volatile
 26888                           
 26889                           ;mcc_generated_files/adcc.c: 94:     ADREF = 0x00;
 26890  0091EC  0E00               	movlw	0
 26891  0091EE  6F58               	movwf	88,b	;volatile
 26892                           
 26893                           ;mcc_generated_files/adcc.c: 96:     ADACT = 0x00;
 26894  0091F0  0E00               	movlw	0
 26895  0091F2  6F56               	movwf	86,b	;volatile
 26896                           
 26897                           ;mcc_generated_files/adcc.c: 98:     ADCLK = 0x3F;
 26898  0091F4  0E3F               	movlw	63
 26899  0091F6  6F57               	movwf	87,b	;volatile
 26900                           
 26901                           ;mcc_generated_files/adcc.c: 100:     ADCON0 = 0x80;
 26902  0091F8  0E80               	movlw	128
 26903  0091FA  6E60               	movwf	96,c	;volatile
 26904                           
 26905                           ;mcc_generated_files/adcc.c: 102:     ADACQ = 0x00;
 26906  0091FC  0E00               	movlw	0
 26907  0091FE  6F5C               	movwf	92,b	;volatile
 26908                           
 26909                           ; BSR set to: 15
 26910  009200  0012               	return		;funcret
 26911  009202                     __end_of_ADCC_Initialize:
 26912                           	callstack 0
 26913                           
 26914 ;; *************** function _EUSART1_is_rx_ready *****************
 26915 ;; Defined at:
 26916 ;;		line 137 in file "mcc_generated_files/eusart1.c"
 26917 ;; Parameters:    Size  Location     Type
 26918 ;;		None
 26919 ;; Auto vars:     Size  Location     Type
 26920 ;;		None
 26921 ;; Return value:  Size  Location     Type
 26922 ;;                  1    wreg      _Bool 
 26923 ;; Registers used:
 26924 ;;		wreg, status,2
 26925 ;; Tracked objects:
 26926 ;;		On entry : 0/1
 26927 ;;		On exit  : 3F/0
 26928 ;;		Unchanged: 0/0
 26929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26930 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26931 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26933 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26934 ;;Total ram usage:        0 bytes
 26935 ;; Hardware stack levels used: 1
 26936 ;; Hardware stack levels required when called: 4
 26937 ;; This function calls:
 26938 ;;		Nothing
 26939 ;; This function is called by:
 26940 ;;		_main
 26941 ;; This function uses a non-reentrant model
 26942 ;;
 26943                           
 26944                           	psect	text111
 26945  009D06                     __ptext111:
 26946                           	callstack 0
 26947  009D06                     _EUSART1_is_rx_ready:
 26948                           	callstack 26
 26949                           
 26950                           ;mcc_generated_files/eusart1.c: 139:     return (eusart1RxCount ? 1 : 0);
 26951                           
 26952                           ; BSR set to: 15
 26953                           ;incstack = 0
 26954  009D06  0100               	movlb	0	; () banked
 26955  009D08  5193               	movf	_eusart1RxCount& (0+255),w,b	;volatile
 26956  009D0A  B4D8               	btfsc	status,2,c
 26957  009D0C  D002               	goto	u29570
 26958  009D0E  0E01               	movlw	1
 26959  009D10  0012               	return	
 26960  009D12                     u29570:
 26961  009D12  0E00               	movlw	0
 26962                           
 26963                           ; BSR set to: 0
 26964  009D14  0012               	return		;funcret
 26965  009D16                     __end_of_EUSART1_is_rx_ready:
 26966                           	callstack 0
 26967                           
 26968 ;; *************** function _ControlMotor *****************
 26969 ;; Defined at:
 26970 ;;		line 703 in file "outputs_MC50.c"
 26971 ;; Parameters:    Size  Location     Type
 26972 ;;		None
 26973 ;; Auto vars:     Size  Location     Type
 26974 ;;  stateMotor      1   23[COMRAM] enum E10381
 26975 ;; Return value:  Size  Location     Type
 26976 ;;                  1    wreg      void 
 26977 ;; Registers used:
 26978 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 26979 ;; Tracked objects:
 26980 ;;		On entry : 3E/1
 26981 ;;		On exit  : 3E/0
 26982 ;;		Unchanged: 0/0
 26983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26984 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26985 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26986 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26987 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26988 ;;Total ram usage:        7 bytes
 26989 ;; Hardware stack levels used: 1
 26990 ;; Hardware stack levels required when called: 5
 26991 ;; This function calls:
 26992 ;;		_VerifyElectricalBrake
 26993 ;; This function is called by:
 26994 ;;		_main
 26995 ;; This function uses a non-reentrant model
 26996 ;;
 26997                           
 26998                           	psect	text112
 26999  0052F2                     __ptext112:
 27000                           	callstack 0
 27001  0052F2                     _ControlMotor:
 27002                           	callstack 25
 27003                           
 27004                           ;outputs_MC50.c: 707:     if((var_sys.TimeMaxMotorIsON<=0) && (var_sys.WorkTimeMaxAlarmS
      +                          tate!=Clear) && (var_sys.LearningIsEnabled==NO) && (var_sys.PositionIsLost==NO)){
 27005                           
 27006                           ; BSR set to: 0
 27007                           ;incstack = 0
 27008  0052F2  0101               	movlb	1	; () banked
 27009  0052F4  5118               	movf	(_var_sys+24)& (0+255),w,b	;volatile
 27010  0052F6  1119               	iorwf	(_var_sys+25)& (0+255),w,b	;volatile
 27011  0052F8  111A               	iorwf	(_var_sys+26)& (0+255),w,b	;volatile
 27012  0052FA  111B               	iorwf	(_var_sys+27)& (0+255),w,b	;volatile
 27013  0052FC  A4D8               	btfss	status,2,c
 27014  0052FE  D00D               	goto	l25375
 27015                           
 27016                           ; BSR set to: 1
 27017  005300  5142               	movf	(_var_sys+66)& (0+255),w,b	;volatile
 27018  005302  B4D8               	btfsc	status,2,c
 27019  005304  D00A               	goto	l25375
 27020                           
 27021                           ; BSR set to: 1
 27022  005306  5126               	movf	(_var_sys+38)& (0+255),w,b	;volatile
 27023  005308  A4D8               	btfss	status,2,c
 27024  00530A  D007               	goto	l25375
 27025                           
 27026                           ; BSR set to: 1
 27027  00530C  5148               	movf	(_var_sys+72)& (0+255),w,b	;volatile
 27028  00530E  A4D8               	btfss	status,2,c
 27029  005310  D004               	goto	l25375
 27030                           
 27031                           ; BSR set to: 1
 27032                           ;outputs_MC50.c: 708:         var_sys.StateMotor = Stopped;
 27033  005312  0E00               	movlw	0
 27034  005314  6F00               	movwf	_var_sys& (0+255),b	;volatile
 27035                           
 27036                           ;outputs_MC50.c: 709:         var_sys.WorkTimeMaxAlarmState=EmAlarme;
 27037  005316  0E02               	movlw	2
 27038  005318  D007               	goto	L100
 27039  00531A                     l25375:
 27040                           
 27041                           ; BSR set to: 1
 27042  00531A  0542               	decf	(_var_sys+66)& (0+255),w,b	;volatile
 27043  00531C  A4D8               	btfss	status,2,c
 27044  00531E  D005               	goto	l25381
 27045                           
 27046                           ; BSR set to: 1
 27047  005320  5100               	movf	_var_sys& (0+255),w,b	;volatile
 27048  005322  A4D8               	btfss	status,2,c
 27049  005324  D002               	goto	l25381
 27050                           
 27051                           ; BSR set to: 1
 27052                           ;outputs_MC50.c: 716:     {;outputs_MC50.c: 717:          var_sys.WorkTimeMaxAlarmState=
      +                          Clear;
 27053  005326  0E00               	movlw	0
 27054  005328                     L100:
 27055  005328  6F42               	movwf	(_var_sys+66)& (0+255),b	;volatile
 27056  00532A                     l25381:
 27057                           
 27058                           ; BSR set to: 1
 27059                           ;outputs_MC50.c: 721:     stateMotor_enum stateMotor=VerifyElectricalBrake(var_sys.State
      +                          Motor);
 27060  00532A  5100               	movf	_var_sys& (0+255),w,b	;volatile
 27061  00532C  ECCD  F043         	call	_VerifyElectricalBrake
 27062  005330  6E18               	movwf	ControlMotor@stateMotor^0,c
 27063                           
 27064                           ;outputs_MC50.c: 722:     if(stateMotor == Stopped )
 27065  005332  5018               	movf	ControlMotor@stateMotor^0,w,c
 27066  005334  A4D8               	btfss	status,2,c
 27067  005336  D00A               	goto	l25391
 27068                           
 27069                           ;outputs_MC50.c: 723:     {;outputs_MC50.c: 724:         var_sys.InStoping = YES;
 27070  005338  0E01               	movlw	1
 27071  00533A  0101               	movlb	1	; () banked
 27072  00533C  6F0D               	movwf	(_var_sys+13)& (0+255),b	;volatile
 27073                           
 27074                           ; BSR set to: 1
 27075                           ;outputs_MC50.c: 725:         if(ts_system.ts_TRIACWait>=0)
 27076  00533E  BFA6               	btfsc	(_ts_system+7)& (0+255),7,b	;volatile
 27077  005340  0012               	return	
 27078                           
 27079                           ; BSR set to: 1
 27080                           
 27081                           ;outputs_MC50.c: 726:         {;outputs_MC50.c: 727:             do { LATEbits.LATE1 = 0
      +                          ; } while(0);
 27082  005342  9287               	bcf	135,1,c	;volatile
 27083                           
 27084                           ; BSR set to: 1
 27085                           
 27086                           ;outputs_MC50.c: 728:             do { LATEbits.LATE0 = 0; } while(0);
 27087  005344  9087               	bcf	135,0,c	;volatile
 27088  005346                     l25389:
 27089                           
 27090                           ; BSR set to: 1
 27091                           ;outputs_MC50.c: 729:             var_sys.Activatecounter = stoped ;
 27092  005346  0E00               	movlw	0
 27093  005348  6F16               	movwf	(_var_sys+22)& (0+255),b	;volatile
 27094  00534A  0012               	return	
 27095  00534C                     l25391:
 27096  00534C  0100               	movlb	0	; () banked
 27097  00534E  05AF               	decf	(_var_sys_NVM+23)& (0+255),w,b	;volatile
 27098  005350  A4D8               	btfss	status,2,c
 27099  005352  D022               	goto	l25407
 27100                           
 27101                           ; BSR set to: 0
 27102  005354  0579               	decf	(_brakeElectric_st+1)& (0+255),w,b
 27103  005356  A4D8               	btfss	status,2,c
 27104  005358  D01F               	goto	l25407
 27105                           
 27106                           ; BSR set to: 0
 27107  00535A  0101               	movlb	1	; () banked
 27108  00535C  5100               	movf	_var_sys& (0+255),w,b	;volatile
 27109  00535E  A4D8               	btfss	status,2,c
 27110  005360  D01B               	goto	l25407
 27111                           
 27112                           ; BSR set to: 1
 27113  005362  5018               	movf	ControlMotor@stateMotor^0,w,c
 27114  005364  A4D8               	btfss	status,2,c
 27115                           
 27116                           ; BSR set to: 1
 27117  005366  BFC8               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 27118  005368  D017               	goto	l25407
 27119  00536A  51C8               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 27120  00536C  E103               	bnz	u31410
 27121  00536E  05C7               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 27122  005370  A0D8               	btfss	status,0,c
 27123  005372  D012               	goto	l25407
 27124  005374                     u31410:
 27125                           
 27126                           ; BSR set to: 1
 27127  005374  BFE0               	btfsc	(_ts_system+65)& (0+255),7,b	;volatile
 27128  005376  D005               	goto	u31420
 27129  005378  51E0               	movf	(_ts_system+65)& (0+255),w,b	;volatile
 27130  00537A  E10E               	bnz	l25407
 27131  00537C  05DF               	decf	(_ts_system+64)& (0+255),w,b	;volatile
 27132  00537E  B0D8               	btfsc	status,0,c
 27133  005380  D00B               	goto	l25407
 27134  005382                     u31420:
 27135                           
 27136                           ; BSR set to: 1
 27137                           ;outputs_MC50.c: 739:     {;outputs_MC50.c: 742:         if ( ts_system.TimeElectricBrak
      +                          e<(((5+6)*( 100/50))-(2*( 100/50))) )
 27138  005382  BFC8               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 27139  005384  D006               	goto	u31430
 27140  005386  51C8               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 27141  005388  E103               	bnz	u31431
 27142  00538A  0E12               	movlw	18
 27143  00538C  5DC7               	subwf	(_ts_system+40)& (0+255),w,b	;volatile
 27144  00538E  B0D8               	btfsc	status,0,c
 27145  005390                     u31431:
 27146  005390  0012               	return	
 27147  005392                     u31430:
 27148                           
 27149                           ; BSR set to: 1
 27150                           
 27151                           ;outputs_MC50.c: 743:         {;outputs_MC50.c: 748:             do { LATEbits.LATE1 = 1
      +                          ; } while(0);
 27152  005392  8287               	bsf	135,1,c	;volatile
 27153                           
 27154                           ; BSR set to: 1
 27155                           
 27156                           ;outputs_MC50.c: 749:             do { LATEbits.LATE0 = 1; } while(0);
 27157  005394  8087               	bsf	135,0,c	;volatile
 27158  005396  D7D7               	goto	l25389
 27159  005398                     l25407:
 27160  005398  0418               	decf	ControlMotor@stateMotor^0,w,c
 27161  00539A  B4D8               	btfsc	status,2,c
 27162  00539C  D004               	goto	u31450
 27163  00539E  0E02               	movlw	2
 27164  0053A0  1818               	xorwf	ControlMotor@stateMotor^0,w,c
 27165  0053A2  A4D8               	btfss	status,2,c
 27166  0053A4  D063               	goto	l25437
 27167  0053A6                     u31450:
 27168  0053A6  0101               	movlb	1	; () banked
 27169  0053A8  5104               	movf	(_var_sys+4)& (0+255),w,b	;volatile
 27170  0053AA  A4D8               	btfss	status,2,c
 27171  0053AC  D05F               	goto	l25437
 27172                           
 27173                           ; BSR set to: 1
 27174                           ;outputs_MC50.c: 761:     {;outputs_MC50.c: 762:         if((PORTEbits.RE1==0 && var_sys
      +                          _NVM.Direction_motor == 0)||(PORTEbits.RE0==0 && var_sys_NVM.Direction_motor == 1))
 27175  0053AE  B291               	btfsc	145,1,c	;volatile
 27176  0053B0  D004               	goto	u31480
 27177                           
 27178                           ; BSR set to: 1
 27179  0053B2  0100               	movlb	0	; () banked
 27180  0053B4  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 27181  0053B6  B4D8               	btfsc	status,2,c
 27182  0053B8  D006               	goto	u31500
 27183  0053BA                     u31480:
 27184  0053BA  B091               	btfsc	145,0,c	;volatile
 27185  0053BC  D04F               	goto	l2353
 27186  0053BE  0100               	movlb	0	; () banked
 27187  0053C0  05B3               	decf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 27188  0053C2  A4D8               	btfss	status,2,c
 27189  0053C4  D04B               	goto	l2353
 27190  0053C6                     u31500:
 27191                           
 27192                           ; BSR set to: 0
 27193                           ;outputs_MC50.c: 763:         {;outputs_MC50.c: 764:             if((PORTEbits.RE0==0 &&
      +                           var_sys_NVM.Direction_motor == 0)||(PORTEbits.RE1==0 && var_sys_NVM.Direction_motor == 
      +                          1))
 27194  0053C6  B091               	btfsc	145,0,c	;volatile
 27195  0053C8  D003               	goto	u31520
 27196                           
 27197                           ; BSR set to: 0
 27198  0053CA  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 27199  0053CC  B4D8               	btfsc	status,2,c
 27200  0053CE  D005               	goto	u31540
 27201  0053D0                     u31520:
 27202                           
 27203                           ; BSR set to: 0
 27204  0053D0  B291               	btfsc	145,1,c	;volatile
 27205  0053D2  D03A               	goto	l25433
 27206                           
 27207                           ; BSR set to: 0
 27208  0053D4  05B3               	decf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 27209  0053D6  A4D8               	btfss	status,2,c
 27210  0053D8  D037               	goto	l25433
 27211  0053DA                     u31540:
 27212                           
 27213                           ; BSR set to: 0
 27214                           ;outputs_MC50.c: 765:             {;outputs_MC50.c: 766:                 var_sys.InStopi
      +                          ng = NO;
 27215  0053DA  0E00               	movlw	0
 27216  0053DC  0101               	movlb	1	; () banked
 27217  0053DE  6F0D               	movwf	(_var_sys+13)& (0+255),b	;volatile
 27218                           
 27219                           ;outputs_MC50.c: 767:                 ts_system.ts_TRIACWait=200;
 27220  0053E0  0E00               	movlw	0
 27221  0053E2  6FA6               	movwf	(_ts_system+7)& (0+255),b	;volatile
 27222  0053E4  0EC8               	movlw	200
 27223  0053E6  6FA5               	movwf	(_ts_system+6)& (0+255),b	;volatile
 27224                           
 27225                           ;outputs_MC50.c: 768:                 ts_system.TimeChargeCondesador=(1000/50);
 27226  0053E8  0E00               	movlw	0
 27227  0053EA  6FBA               	movwf	(_ts_system+27)& (0+255),b	;volatile
 27228  0053EC  0E14               	movlw	20
 27229  0053EE  6FB9               	movwf	(_ts_system+26)& (0+255),b	;volatile
 27230                           
 27231                           ; BSR set to: 1
 27232                           ;outputs_MC50.c: 769:                 if (var_sys.FimCurso_CloseIsEnabled == YES|| var_s
      +                          ys.Statedoorcontrol == st_Closed ){
 27233  0053F0  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
 27234  0053F2  B4D8               	btfsc	status,2,c
 27235  0053F4  D003               	goto	u31560
 27236                           
 27237                           ; BSR set to: 1
 27238  0053F6  051C               	decf	(_var_sys+28)& (0+255),w,b	;volatile
 27239  0053F8  A4D8               	btfss	status,2,c
 27240  0053FA  D024               	goto	l25431
 27241  0053FC                     u31560:
 27242                           
 27243                           ; BSR set to: 1
 27244                           ;outputs_MC50.c: 770:                 var_sys.TimeMaxMotorIsON=((unsigned int)var_sys_NV
      +                          M.velocityDecelaration+((unsigned int)var_sys_NVM.decelarationOpen)*( 500/50))+var_sys_N
      +                          VM.learningTimeToOpen + (1000/50)*4;
 27245  0053FC  0100               	movlb	0	; () banked
 27246  0053FE  5198               	movf	_var_sys_NVM& (0+255),w,b	;volatile
 27247  005400  0D0A               	mullw	10
 27248  005402  CFF3 F012          	movff	prodl,??_ControlMotor
 27249  005406  CFF4 F013          	movff	prodh,??_ControlMotor+1
 27250  00540A  51B0               	movf	(_var_sys_NVM+24)& (0+255),w,b	;volatile
 27251  00540C  2612               	addwf	??_ControlMotor^0,f,c
 27252  00540E  0E00               	movlw	0
 27253  005410  2213               	addwfc	(??_ControlMotor+1)^0,f,c
 27254  005412  5012               	movf	??_ControlMotor^0,w,c
 27255  005414  25CC               	addwf	(_var_sys_NVM+52)& (0+255),w,b	;volatile
 27256  005416  6E14               	movwf	(??_ControlMotor+2)^0,c
 27257  005418  5013               	movf	(??_ControlMotor+1)^0,w,c
 27258  00541A  21CD               	addwfc	(_var_sys_NVM+53)& (0+255),w,b	;volatile
 27259  00541C  6E15               	movwf	(??_ControlMotor+3)^0,c
 27260  00541E  0E00               	movlw	0
 27261  005420  21CE               	addwfc	(_var_sys_NVM+54)& (0+255),w,b	;volatile
 27262  005422  6E16               	movwf	(??_ControlMotor+4)^0,c
 27263  005424  0E00               	movlw	0
 27264  005426  21CF               	addwfc	(_var_sys_NVM+55)& (0+255),w,b	;volatile
 27265  005428  6E17               	movwf	(??_ControlMotor+5)^0,c
 27266  00542A  0E50               	movlw	80
 27267  00542C  2414               	addwf	(??_ControlMotor+2)^0,w,c
 27268  00542E  0101               	movlb	1	; () banked
 27269  005430  6F18               	movwf	(_var_sys+24)& (0+255),b	;volatile
 27270  005432  0E00               	movlw	0
 27271  005434  2015               	addwfc	(??_ControlMotor+3)^0,w,c
 27272  005436  6F19               	movwf	(_var_sys+25)& (0+255),b	;volatile
 27273  005438  0E00               	movlw	0
 27274  00543A  2016               	addwfc	(??_ControlMotor+4)^0,w,c
 27275  00543C  6F1A               	movwf	(_var_sys+26)& (0+255),b	;volatile
 27276  00543E  0E00               	movlw	0
 27277  005440  2017               	addwfc	(??_ControlMotor+5)^0,w,c
 27278  005442  6F1B               	movwf	(_var_sys+27)& (0+255),b	;volatile
 27279  005444                     l25431:
 27280                           
 27281                           ; BSR set to: 1
 27282                           ;outputs_MC50.c: 775:                 var_sys.Statedoorcontrol = st_Opening;
 27283  005444  0E02               	movlw	2
 27284  005446  6F1C               	movwf	(_var_sys+28)& (0+255),b	;volatile
 27285  005448                     l25433:
 27286                           
 27287                           ;outputs_MC50.c: 779:             if (var_sys_NVM.Direction_motor == 0){do { LATEbits.LA
      +                          TE0 = 1; } while(0);}
 27288  005448  0100               	movlb	0	; () banked
 27289  00544A  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 27290  00544C  A4D8               	btfss	status,2,c
 27291  00544E  D002               	goto	l2370
 27292                           
 27293                           ; BSR set to: 0
 27294  005450  8087               	bsf	135,0,c	;volatile
 27295  005452  D001               	goto	l25435
 27296  005454                     l2370:
 27297                           
 27298                           ; BSR set to: 0
 27299  005454  8287               	bsf	135,1,c	;volatile
 27300  005456                     l25435:
 27301                           
 27302                           ; BSR set to: 0
 27303                           ;outputs_MC50.c: 781:             var_sys.Activatecounter = open ;
 27304  005456  0E01               	movlw	1
 27305  005458  0101               	movlb	1	; () banked
 27306  00545A  6F16               	movwf	(_var_sys+22)& (0+255),b	;volatile
 27307  00545C                     l2353:
 27308                           
 27309                           ;outputs_MC50.c: 785:            if (var_sys_NVM.Direction_motor == 0){do { LATEbits.LAT
      +                          E1 = 0; } while(0);}
 27310  00545C  0100               	movlb	0	; () banked
 27311  00545E  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 27312  005460  A4D8               	btfss	status,2,c
 27313  005462  D002               	goto	l2376
 27314                           
 27315                           ; BSR set to: 0
 27316  005464  9287               	bcf	135,1,c	;volatile
 27317  005466  0012               	return	
 27318  005468                     l2376:
 27319                           
 27320                           ; BSR set to: 0
 27321  005468  9087               	bcf	135,0,c	;volatile
 27322  00546A  0012               	return	
 27323  00546C                     l25437:
 27324  00546C  0E03               	movlw	3
 27325  00546E  1818               	xorwf	ControlMotor@stateMotor^0,w,c
 27326  005470  A4D8               	btfss	status,2,c
 27327  005472  0012               	return	
 27328  005474  0101               	movlb	1	; () banked
 27329  005476  5103               	movf	(_var_sys+3)& (0+255),w,b	;volatile
 27330  005478  A4D8               	btfss	status,2,c
 27331  00547A  0012               	return	
 27332                           
 27333                           ; BSR set to: 1
 27334                           ;outputs_MC50.c: 791:     {;outputs_MC50.c: 792:         if((PORTEbits.RE0==0 && var_sys
      +                          _NVM.Direction_motor == 0)||(PORTEbits.RE1==0 && var_sys_NVM.Direction_motor == 1))
 27335  00547C  B091               	btfsc	145,0,c	;volatile
 27336  00547E  D004               	goto	u31620
 27337                           
 27338                           ; BSR set to: 1
 27339  005480  0100               	movlb	0	; () banked
 27340  005482  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 27341  005484  B4D8               	btfsc	status,2,c
 27342  005486  D006               	goto	u31640
 27343  005488                     u31620:
 27344  005488  B291               	btfsc	145,1,c	;volatile
 27345  00548A  D050               	goto	l2380
 27346  00548C  0100               	movlb	0	; () banked
 27347  00548E  05B3               	decf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 27348  005490  A4D8               	btfss	status,2,c
 27349  005492  D04C               	goto	l2380
 27350  005494                     u31640:
 27351                           
 27352                           ; BSR set to: 0
 27353                           ;outputs_MC50.c: 793:         {;outputs_MC50.c: 794:             if((PORTEbits.RE1==0 &&
      +                           var_sys_NVM.Direction_motor == 0)||(PORTEbits.RE0==0 && var_sys_NVM.Direction_motor == 
      +                          1))
 27354  005494  B291               	btfsc	145,1,c	;volatile
 27355  005496  D003               	goto	u31660
 27356                           
 27357                           ; BSR set to: 0
 27358  005498  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 27359  00549A  B4D8               	btfsc	status,2,c
 27360  00549C  D005               	goto	u31680
 27361  00549E                     u31660:
 27362                           
 27363                           ; BSR set to: 0
 27364  00549E  B091               	btfsc	145,0,c	;volatile
 27365  0054A0  D03B               	goto	l25461
 27366                           
 27367                           ; BSR set to: 0
 27368  0054A2  05B3               	decf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 27369  0054A4  A4D8               	btfss	status,2,c
 27370  0054A6  D038               	goto	l25461
 27371  0054A8                     u31680:
 27372                           
 27373                           ; BSR set to: 0
 27374                           ;outputs_MC50.c: 795:             {;outputs_MC50.c: 796:                 var_sys.InStopi
      +                          ng = NO;
 27375  0054A8  0E00               	movlw	0
 27376  0054AA  0101               	movlb	1	; () banked
 27377  0054AC  6F0D               	movwf	(_var_sys+13)& (0+255),b	;volatile
 27378                           
 27379                           ;outputs_MC50.c: 797:                 ts_system.ts_TRIACWait=200;
 27380  0054AE  0E00               	movlw	0
 27381  0054B0  6FA6               	movwf	(_ts_system+7)& (0+255),b	;volatile
 27382  0054B2  0EC8               	movlw	200
 27383  0054B4  6FA5               	movwf	(_ts_system+6)& (0+255),b	;volatile
 27384                           
 27385                           ;outputs_MC50.c: 798:                 ts_system.TimeChargeCondesador=(1000/50);
 27386  0054B6  0E00               	movlw	0
 27387  0054B8  6FBA               	movwf	(_ts_system+27)& (0+255),b	;volatile
 27388  0054BA  0E14               	movlw	20
 27389  0054BC  6FB9               	movwf	(_ts_system+26)& (0+255),b	;volatile
 27390                           
 27391                           ; BSR set to: 1
 27392                           ;outputs_MC50.c: 799:                 if (var_sys.FimCurso_OpenIsEnabled == YES|| var_sy
      +                          s.Statedoorcontrol == st_Opened){
 27393  0054BE  0504               	decf	(_var_sys+4)& (0+255),w,b	;volatile
 27394  0054C0  B4D8               	btfsc	status,2,c
 27395  0054C2  D004               	goto	u31700
 27396                           
 27397                           ; BSR set to: 1
 27398  0054C4  0E04               	movlw	4
 27399  0054C6  191C               	xorwf	(_var_sys+28)& (0+255),w,b	;volatile
 27400  0054C8  A4D8               	btfss	status,2,c
 27401  0054CA  D024               	goto	l25459
 27402  0054CC                     u31700:
 27403                           
 27404                           ; BSR set to: 1
 27405                           ;outputs_MC50.c: 800:                 var_sys.TimeMaxMotorIsON=((unsigned int)var_sys_NV
      +                          M.velocityDecelaration+(unsigned int)var_sys_NVM.decelarationClose*( 500/50))+var_sys_NV
      +                          M.learningTimeToClose + (1000/50)*4;
 27406  0054CC  0100               	movlb	0	; () banked
 27407  0054CE  5199               	movf	(_var_sys_NVM+1)& (0+255),w,b	;volatile
 27408  0054D0  0D0A               	mullw	10
 27409  0054D2  CFF3 F012          	movff	prodl,??_ControlMotor
 27410  0054D6  CFF4 F013          	movff	prodh,??_ControlMotor+1
 27411  0054DA  51B0               	movf	(_var_sys_NVM+24)& (0+255),w,b	;volatile
 27412  0054DC  2612               	addwf	??_ControlMotor^0,f,c
 27413  0054DE  0E00               	movlw	0
 27414  0054E0  2213               	addwfc	(??_ControlMotor+1)^0,f,c
 27415  0054E2  5012               	movf	??_ControlMotor^0,w,c
 27416  0054E4  25D0               	addwf	(_var_sys_NVM+56)& (0+255),w,b	;volatile
 27417  0054E6  6E14               	movwf	(??_ControlMotor+2)^0,c
 27418  0054E8  5013               	movf	(??_ControlMotor+1)^0,w,c
 27419  0054EA  21D1               	addwfc	(_var_sys_NVM+57)& (0+255),w,b	;volatile
 27420  0054EC  6E15               	movwf	(??_ControlMotor+3)^0,c
 27421  0054EE  0E00               	movlw	0
 27422  0054F0  21D2               	addwfc	(_var_sys_NVM+58)& (0+255),w,b	;volatile
 27423  0054F2  6E16               	movwf	(??_ControlMotor+4)^0,c
 27424  0054F4  0E00               	movlw	0
 27425  0054F6  21D3               	addwfc	(_var_sys_NVM+59)& (0+255),w,b	;volatile
 27426  0054F8  6E17               	movwf	(??_ControlMotor+5)^0,c
 27427  0054FA  0E50               	movlw	80
 27428  0054FC  2414               	addwf	(??_ControlMotor+2)^0,w,c
 27429  0054FE  0101               	movlb	1	; () banked
 27430  005500  6F18               	movwf	(_var_sys+24)& (0+255),b	;volatile
 27431  005502  0E00               	movlw	0
 27432  005504  2015               	addwfc	(??_ControlMotor+3)^0,w,c
 27433  005506  6F19               	movwf	(_var_sys+25)& (0+255),b	;volatile
 27434  005508  0E00               	movlw	0
 27435  00550A  2016               	addwfc	(??_ControlMotor+4)^0,w,c
 27436  00550C  6F1A               	movwf	(_var_sys+26)& (0+255),b	;volatile
 27437  00550E  0E00               	movlw	0
 27438  005510  2017               	addwfc	(??_ControlMotor+5)^0,w,c
 27439  005512  6F1B               	movwf	(_var_sys+27)& (0+255),b	;volatile
 27440  005514                     l25459:
 27441                           
 27442                           ; BSR set to: 1
 27443                           ;outputs_MC50.c: 803:                 var_sys.Statedoorcontrol = st_Closing;
 27444  005514  0E03               	movlw	3
 27445  005516  6F1C               	movwf	(_var_sys+28)& (0+255),b	;volatile
 27446  005518                     l25461:
 27447                           
 27448                           ;outputs_MC50.c: 806:             if (var_sys_NVM.Direction_motor == 0){do { LATEbits.LA
      +                          TE1 = 1; } while(0);}
 27449  005518  0100               	movlb	0	; () banked
 27450  00551A  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 27451  00551C  A4D8               	btfss	status,2,c
 27452  00551E  D002               	goto	l2397
 27453                           
 27454                           ; BSR set to: 0
 27455  005520  8287               	bsf	135,1,c	;volatile
 27456  005522  D001               	goto	l25463
 27457  005524                     l2397:
 27458                           
 27459                           ; BSR set to: 0
 27460  005524  8087               	bsf	135,0,c	;volatile
 27461  005526                     l25463:
 27462                           
 27463                           ; BSR set to: 0
 27464                           ;outputs_MC50.c: 808:             var_sys.Activatecounter = close ;
 27465  005526  0E02               	movlw	2
 27466  005528  0101               	movlb	1	; () banked
 27467  00552A  6F16               	movwf	(_var_sys+22)& (0+255),b	;volatile
 27468  00552C                     l2380:
 27469                           
 27470                           ;outputs_MC50.c: 811:            if (var_sys_NVM.Direction_motor == 0){do { LATEbits.LAT
      +                          E0 = 0; } while(0);}
 27471  00552C  0100               	movlb	0	; () banked
 27472  00552E  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 27473  005530  A4D8               	btfss	status,2,c
 27474  005532  D002               	goto	l2403
 27475                           
 27476                           ; BSR set to: 0
 27477  005534  9087               	bcf	135,0,c	;volatile
 27478  005536  0012               	return	
 27479  005538                     l2403:
 27480                           
 27481                           ; BSR set to: 0
 27482  005538  9287               	bcf	135,1,c	;volatile
 27483  00553A  0012               	return		;funcret
 27484  00553C                     __end_of_ControlMotor:
 27485                           	callstack 0
 27486                           
 27487 ;; *************** function _VerifyElectricalBrake *****************
 27488 ;; Defined at:
 27489 ;;		line 658 in file "outputs_MC50.c"
 27490 ;; Parameters:    Size  Location     Type
 27491 ;;  actualState     1    wreg     enum E10381
 27492 ;; Auto vars:     Size  Location     Type
 27493 ;;  actualState     1   16[COMRAM] enum E10381
 27494 ;;  tempState       1   15[COMRAM] enum E10381
 27495 ;; Return value:  Size  Location     Type
 27496 ;;                  1    wreg      enum E10381
 27497 ;; Registers used:
 27498 ;;		wreg, status,2, status,0
 27499 ;; Tracked objects:
 27500 ;;		On entry : 3F/1
 27501 ;;		On exit  : 3E/0
 27502 ;;		Unchanged: 0/0
 27503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27504 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27505 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27507 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27508 ;;Total ram usage:        2 bytes
 27509 ;; Hardware stack levels used: 1
 27510 ;; Hardware stack levels required when called: 4
 27511 ;; This function calls:
 27512 ;;		Nothing
 27513 ;; This function is called by:
 27514 ;;		_ControlMotor
 27515 ;; This function uses a non-reentrant model
 27516 ;;
 27517                           
 27518                           	psect	text113
 27519  00879A                     __ptext113:
 27520                           	callstack 0
 27521  00879A                     _VerifyElectricalBrake:
 27522                           	callstack 25
 27523                           
 27524                           ;incstack = 0
 27525                           ;VerifyElectricalBrake@actualState stored from wreg
 27526  00879A  6E11               	movwf	VerifyElectricalBrake@actualState^0,c
 27527                           
 27528                           ;outputs_MC50.c: 658: stateMotor_enum VerifyElectricalBrake(stateMotor_enum actualState)
      +                          ;outputs_MC50.c: 659: {;outputs_MC50.c: 660:     stateMotor_enum tempState;;outputs_MC50
      +                          .c: 661:     tempState=actualState;
 27529  00879C  C011  F010         	movff	VerifyElectricalBrake@actualState,VerifyElectricalBrake@tempState
 27530                           
 27531                           ;outputs_MC50.c: 662:     if(var_sys_NVM.electricBrake==1 && actualState==Stopped && ts_
      +                          system.TimeStopElectricBrake<=0)
 27532  0087A0  0100               	movlb	0	; () banked
 27533  0087A2  05AF               	decf	(_var_sys_NVM+23)& (0+255),w,b	;volatile
 27534  0087A4  A4D8               	btfss	status,2,c
 27535  0087A6  D02E               	goto	l2323
 27536                           
 27537                           ; BSR set to: 0
 27538  0087A8  5011               	movf	VerifyElectricalBrake@actualState^0,w,c
 27539  0087AA  A4D8               	btfss	status,2,c
 27540  0087AC  D02B               	goto	l2323
 27541                           
 27542                           ; BSR set to: 0
 27543  0087AE  0101               	movlb	1	; () banked
 27544  0087B0  BFE0               	btfsc	(_ts_system+65)& (0+255),7,b	;volatile
 27545  0087B2  D005               	goto	u26640
 27546  0087B4  51E0               	movf	(_ts_system+65)& (0+255),w,b	;volatile
 27547  0087B6  E126               	bnz	l2323
 27548  0087B8  05DF               	decf	(_ts_system+64)& (0+255),w,b	;volatile
 27549  0087BA  B0D8               	btfsc	status,0,c
 27550  0087BC  D023               	goto	l2323
 27551  0087BE                     u26640:
 27552                           
 27553                           ; BSR set to: 1
 27554                           ;outputs_MC50.c: 663:     {;outputs_MC50.c: 664:         if(actualState!=brakeElectric_s
      +                          t.lastState && brakeElectric_st.ElectricBrakeIsActive==NO )
 27555  0087BE  5011               	movf	VerifyElectricalBrake@actualState^0,w,c
 27556  0087C0  0100               	movlb	0	; () banked
 27557  0087C2  1978               	xorwf	_brakeElectric_st& (0+255),w,b
 27558  0087C4  B4D8               	btfsc	status,2,c
 27559  0087C6  D00B               	goto	l22941
 27560                           
 27561                           ; BSR set to: 0
 27562  0087C8  5179               	movf	(_brakeElectric_st+1)& (0+255),w,b
 27563  0087CA  A4D8               	btfss	status,2,c
 27564  0087CC  D008               	goto	l22941
 27565                           
 27566                           ; BSR set to: 0
 27567                           ;outputs_MC50.c: 665:         {;outputs_MC50.c: 666:             brakeElectric_st.Electr
      +                          icBrakeIsActive=YES;
 27568  0087CE  0E01               	movlw	1
 27569  0087D0  6F79               	movwf	(_brakeElectric_st+1)& (0+255),b
 27570                           
 27571                           ;outputs_MC50.c: 668:             ts_system.TimeElectricBrake=((5+6)*( 100/50));
 27572  0087D2  0E00               	movlw	0
 27573  0087D4  0101               	movlb	1	; () banked
 27574  0087D6  6FC8               	movwf	(_ts_system+41)& (0+255),b	;volatile
 27575  0087D8  0E16               	movlw	22
 27576  0087DA  6FC7               	movwf	(_ts_system+40)& (0+255),b	;volatile
 27577                           
 27578                           ;outputs_MC50.c: 670:         }
 27579  0087DC  D018               	goto	l2328
 27580  0087DE                     l22941:
 27581                           
 27582                           ; BSR set to: 0
 27583  0087DE  0579               	decf	(_brakeElectric_st+1)& (0+255),w,b
 27584  0087E0  A4D8               	btfss	status,2,c
 27585  0087E2  D00B               	goto	l22947
 27586                           
 27587                           ; BSR set to: 0
 27588  0087E4  0101               	movlb	1	; () banked
 27589  0087E6  BFC8               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 27590  0087E8  D008               	goto	l22947
 27591  0087EA  51C8               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 27592  0087EC  E103               	bnz	u26680
 27593  0087EE  05C7               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 27594  0087F0  A0D8               	btfss	status,0,c
 27595  0087F2  D003               	goto	l22947
 27596  0087F4                     u26680:
 27597                           
 27598                           ; BSR set to: 1
 27599                           ;outputs_MC50.c: 672:         {;outputs_MC50.c: 673:             tempState=InOpenFull;
 27600  0087F4  0E01               	movlw	1
 27601  0087F6  6E10               	movwf	VerifyElectricalBrake@tempState^0,c
 27602                           
 27603                           ;outputs_MC50.c: 686:         }
 27604  0087F8  D00A               	goto	l2328
 27605  0087FA                     l22947:
 27606                           
 27607                           ;outputs_MC50.c: 688:         {;outputs_MC50.c: 689:             brakeElectric_st.lastSt
      +                          ate=Stopped;
 27608  0087FA  0E00               	movlw	0
 27609  0087FC  0100               	movlb	0	; () banked
 27610  0087FE  6F78               	movwf	_brakeElectric_st& (0+255),b
 27611                           
 27612                           ;outputs_MC50.c: 690:             brakeElectric_st.ElectricBrakeIsActive=NO;
 27613  008800  0E00               	movlw	0
 27614  008802  D004               	goto	L101
 27615  008804                     l2323:
 27616                           
 27617                           ;outputs_MC50.c: 695:     {;outputs_MC50.c: 696:         brakeElectric_st.lastState=actu
      +                          alState;
 27618  008804  C011  F078         	movff	VerifyElectricalBrake@actualState,_brakeElectric_st
 27619                           
 27620                           ;outputs_MC50.c: 697:         brakeElectric_st.ElectricBrakeIsActive=NO;
 27621  008808  0E00               	movlw	0
 27622  00880A  0100               	movlb	0	; () banked
 27623  00880C                     L101:
 27624  00880C  6F79               	movwf	(_brakeElectric_st+1)& (0+255),b
 27625  00880E                     l2328:
 27626                           
 27627                           ;outputs_MC50.c: 700:     return tempState;
 27628  00880E  5010               	movf	VerifyElectricalBrake@tempState^0,w,c
 27629  008810  0012               	return		;funcret
 27630  008812                     __end_of_VerifyElectricalBrake:
 27631                           	callstack 0
 27632                           
 27633 ;; *************** function _ControlLights *****************
 27634 ;; Defined at:
 27635 ;;		line 816 in file "outputs_MC50.c"
 27636 ;; Parameters:    Size  Location     Type
 27637 ;;		None
 27638 ;; Auto vars:     Size  Location     Type
 27639 ;;		None
 27640 ;; Return value:  Size  Location     Type
 27641 ;;                  1    wreg      void 
 27642 ;; Registers used:
 27643 ;;		wreg, status,2, status,0, cstack
 27644 ;; Tracked objects:
 27645 ;;		On entry : 3E/1
 27646 ;;		On exit  : 3E/0
 27647 ;;		Unchanged: 0/0
 27648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27650 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27652 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27653 ;;Total ram usage:        0 bytes
 27654 ;; Hardware stack levels used: 1
 27655 ;; Hardware stack levels required when called: 6
 27656 ;; This function calls:
 27657 ;;		_setFlashLigth_ON
 27658 ;;		_setRGB_ON
 27659 ;; This function is called by:
 27660 ;;		_main
 27661 ;; This function uses a non-reentrant model
 27662 ;;
 27663                           
 27664                           	psect	text114
 27665  004582                     __ptext114:
 27666                           	callstack 0
 27667  004582                     _ControlLights:
 27668                           	callstack 24
 27669                           
 27670                           ;outputs_MC50.c: 818:     if(var_sys.DistanceProgrammingActive==YES)
 27671                           
 27672                           ;incstack = 0
 27673  004582  0101               	movlb	1	; () banked
 27674  004584  0540               	decf	(_var_sys+64)& (0+255),w,b	;volatile
 27675  004586  A4D8               	btfss	status,2,c
 27676  004588  D007               	goto	l25469
 27677                           
 27678                           ; BSR set to: 1
 27679                           ;outputs_MC50.c: 819:     {;outputs_MC50.c: 820:         setFlashLigth_ON((1000/50));
 27680  00458A  0E00               	movlw	0
 27681  00458C  6E11               	movwf	(setFlashLigth_ON@Freq+1)^0,c
 27682  00458E  0E14               	movlw	20
 27683  004590  6E10               	movwf	setFlashLigth_ON@Freq^0,c
 27684  004592  ECA0  F04A         	call	_setFlashLigth_ON	;wreg free
 27685                           
 27686                           ;outputs_MC50.c: 821:     }
 27687  004596  D010               	goto	l25475
 27688  004598                     l25469:
 27689                           
 27690                           ; BSR set to: 1
 27691  004598  51E7               	movf	_controlGate_stateMachine& (0+255),w,b
 27692  00459A  11E8               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
 27693  00459C  A4D8               	btfss	status,2,c
 27694  00459E  D00C               	goto	l25475
 27695                           
 27696                           ; BSR set to: 1
 27697                           ;outputs_MC50.c: 823:     {;outputs_MC50.c: 824:         var_sys.ControlReleCapacitorOpe
      +                          n = 0;
 27698  0045A0  0E00               	movlw	0
 27699  0045A2  6F28               	movwf	(_var_sys+40)& (0+255),b	;volatile
 27700                           
 27701                           ;outputs_MC50.c: 825:         var_sys.ControlReleCapacitorClose = 0;
 27702  0045A4  0E00               	movlw	0
 27703  0045A6  6F29               	movwf	(_var_sys+41)& (0+255),b	;volatile
 27704                           
 27705                           ; BSR set to: 1
 27706                           ;outputs_MC50.c: 826:         if (var_sys_NVM.flashLightMode !=3){
 27707  0045A8  0E03               	movlw	3
 27708  0045AA  0100               	movlb	0	; () banked
 27709  0045AC  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 27710  0045AE  B4D8               	btfsc	status,2,c
 27711  0045B0  D002               	goto	l2415
 27712                           
 27713                           ; BSR set to: 0
 27714                           
 27715                           ;outputs_MC50.c: 827:            do { LATEbits.LATE2 = 0; } while(0);
 27716  0045B2  9487               	bcf	135,2,c	;volatile
 27717  0045B4  D001               	goto	l25475
 27718  0045B6                     l2415:
 27719                           
 27720                           ; BSR set to: 0
 27721  0045B6  8487               	bsf	135,2,c	;volatile
 27722  0045B8                     l25475:
 27723                           
 27724                           ;outputs_MC50.c: 835:     if (((var_sys.preflashingcontrol == YES || controlGate_stateMa
      +                          chine.current_state==st_Opened) && (ts_system.timeWaitToClose >0) && (ts_system.timeWait
      +                          ToClose <= 3 * (1000/50))) && var_sys_NVM.flashRGBMode == rgb_pre){
 27725  0045B8  0101               	movlb	1	; () banked
 27726  0045BA  051D               	decf	(_var_sys+29)& (0+255),w,b	;volatile
 27727  0045BC  B4D8               	btfsc	status,2,c
 27728  0045BE  D005               	goto	u31770
 27729                           
 27730                           ; BSR set to: 1
 27731  0045C0  0E04               	movlw	4
 27732  0045C2  19E7               	xorwf	_controlGate_stateMachine& (0+255),w,b
 27733  0045C4  11E8               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
 27734  0045C6  A4D8               	btfss	status,2,c
 27735  0045C8  D01C               	goto	l25487
 27736  0045CA                     u31770:
 27737                           
 27738                           ; BSR set to: 1
 27739  0045CA  BFB2               	btfsc	(_ts_system+19)& (0+255),7,b	;volatile
 27740  0045CC  D01A               	goto	l25487
 27741  0045CE  51B2               	movf	(_ts_system+19)& (0+255),w,b	;volatile
 27742  0045D0  E103               	bnz	u31780
 27743  0045D2  05B1               	decf	(_ts_system+18)& (0+255),w,b	;volatile
 27744  0045D4  A0D8               	btfss	status,0,c
 27745  0045D6  D015               	goto	l25487
 27746  0045D8                     u31780:
 27747                           
 27748                           ; BSR set to: 1
 27749  0045D8  BFB2               	btfsc	(_ts_system+19)& (0+255),7,b	;volatile
 27750  0045DA  D006               	goto	u31790
 27751  0045DC  51B2               	movf	(_ts_system+19)& (0+255),w,b	;volatile
 27752  0045DE  E111               	bnz	l25487
 27753  0045E0  0E3D               	movlw	61
 27754  0045E2  5DB1               	subwf	(_ts_system+18)& (0+255),w,b	;volatile
 27755  0045E4  B0D8               	btfsc	status,0,c
 27756  0045E6  D00D               	goto	l25487
 27757  0045E8                     u31790:
 27758                           
 27759                           ; BSR set to: 1
 27760  0045E8  0E02               	movlw	2
 27761  0045EA  0100               	movlb	0	; () banked
 27762  0045EC  19B1               	xorwf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 27763  0045EE  A4D8               	btfss	status,2,c
 27764  0045F0  D008               	goto	l25487
 27765                           
 27766                           ; BSR set to: 0
 27767                           ;outputs_MC50.c: 836:         setRGB_ON(BLUE,( 200/50));
 27768  0045F2  0E00               	movlw	0
 27769  0045F4  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 27770  0045F6  0E04               	movlw	4
 27771  0045F8  6E11               	movwf	setRGB_ON@Freq^0,c
 27772  0045FA  0E01               	movlw	1
 27773  0045FC  EC6D  F040         	call	_setRGB_ON
 27774                           
 27775                           ;outputs_MC50.c: 838:     }
 27776  004600  0012               	return	
 27777  004602                     l25487:
 27778  004602  0E03               	movlw	3
 27779  004604  0101               	movlb	1	; () banked
 27780  004606  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 27781  004608  A4D8               	btfss	status,2,c
 27782  00460A  D04F               	goto	l25517
 27783                           
 27784                           ; BSR set to: 1
 27785                           ;outputs_MC50.c: 842:     {;outputs_MC50.c: 843:         var_sys.ControlReleCapacitorOpe
      +                          n = 0;
 27786  00460C  0E00               	movlw	0
 27787  00460E  6F28               	movwf	(_var_sys+40)& (0+255),b	;volatile
 27788                           
 27789                           ;outputs_MC50.c: 846:         if (var_sys.ControlReleCapacitorClose==0 && var_sys_NVM.fl
      +                          ashRGBMode==rgb_capacitor)
 27790  004610  5129               	movf	(_var_sys+41)& (0+255),w,b	;volatile
 27791  004612  A4D8               	btfss	status,2,c
 27792  004614  D013               	goto	l25499
 27793                           
 27794                           ; BSR set to: 1
 27795  004616  0E03               	movlw	3
 27796  004618  0100               	movlb	0	; () banked
 27797  00461A  19B1               	xorwf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 27798  00461C  A4D8               	btfss	status,2,c
 27799  00461E  D00E               	goto	l25499
 27800                           
 27801                           ; BSR set to: 0
 27802                           ;outputs_MC50.c: 847:         {;outputs_MC50.c: 848:          ts_system.TimeReleCapacito
      +                          r = (1000/50)*2;
 27803  004620  0E00               	movlw	0
 27804  004622  0101               	movlb	1	; () banked
 27805  004624  6FE2               	movwf	(_ts_system+67)& (0+255),b	;volatile
 27806  004626  0E28               	movlw	40
 27807  004628  6FE1               	movwf	(_ts_system+66)& (0+255),b	;volatile
 27808                           
 27809                           ; BSR set to: 1
 27810                           ;outputs_MC50.c: 849:             setRGB_ON(YELLOW,0);
 27811  00462A  0E00               	movlw	0
 27812  00462C  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 27813  00462E  0E00               	movlw	0
 27814  004630  6E11               	movwf	setRGB_ON@Freq^0,c
 27815  004632  0E04               	movlw	4
 27816  004634  EC6D  F040         	call	_setRGB_ON
 27817                           
 27818                           ; BSR set to: 1
 27819                           ;outputs_MC50.c: 850:          var_sys.ControlReleCapacitorClose = 1;
 27820  004638  0E01               	movlw	1
 27821  00463A  6F29               	movwf	(_var_sys+41)& (0+255),b	;volatile
 27822  00463C                     l25499:
 27823                           
 27824                           ;outputs_MC50.c: 852:         if(ts_system.TimeReleCapacitor<=0 && var_sys_NVM.flashRGBM
      +                          ode==rgb_capacitor)
 27825  00463C  0101               	movlb	1	; () banked
 27826  00463E  BFE2               	btfsc	(_ts_system+67)& (0+255),7,b	;volatile
 27827  004640  D005               	goto	u31840
 27828  004642  51E2               	movf	(_ts_system+67)& (0+255),w,b	;volatile
 27829  004644  E105               	bnz	l25503
 27830  004646  05E1               	decf	(_ts_system+66)& (0+255),w,b	;volatile
 27831  004648  B0D8               	btfsc	status,0,c
 27832  00464A  D002               	goto	l25503
 27833  00464C                     u31840:
 27834                           
 27835                           ; BSR set to: 1
 27836  00464C  0100               	movlb	0	; () banked
 27837  00464E  51B1               	movf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 27838  004650                     l25503:
 27839                           
 27840                           ;outputs_MC50.c: 858:         if(var_sys_NVM.flashRGBMode==rgb_pisca && ts_system.TimeRe
      +                          leCapacitor<=0)
 27841  004650  0100               	movlb	0	; () banked
 27842  004652  05B1               	decf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 27843  004654  A4D8               	btfss	status,2,c
 27844  004656  D010               	goto	l25509
 27845                           
 27846                           ; BSR set to: 0
 27847  004658  0101               	movlb	1	; () banked
 27848  00465A  BFE2               	btfsc	(_ts_system+67)& (0+255),7,b	;volatile
 27849  00465C  D005               	goto	u31860
 27850  00465E  51E2               	movf	(_ts_system+67)& (0+255),w,b	;volatile
 27851  004660  E10B               	bnz	l25509
 27852  004662  05E1               	decf	(_ts_system+66)& (0+255),w,b	;volatile
 27853  004664  B0D8               	btfsc	status,0,c
 27854  004666  D008               	goto	l25509
 27855  004668                     u31860:
 27856                           
 27857                           ; BSR set to: 1
 27858                           ;outputs_MC50.c: 860:         {;outputs_MC50.c: 861:             setRGB_ON(RED,( 200/50)
      +                           +( 50/50));
 27859  004668  0E00               	movlw	0
 27860  00466A  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 27861  00466C  0E05               	movlw	5
 27862  00466E  6E11               	movwf	setRGB_ON@Freq^0,c
 27863  004670  0E03               	movlw	3
 27864  004672  EC6D  F040         	call	_setRGB_ON
 27865                           
 27866                           ;outputs_MC50.c: 862:         }
 27867  004676  D007               	goto	l25511
 27868  004678                     l25509:
 27869                           
 27870                           ;outputs_MC50.c: 864:         {;outputs_MC50.c: 865:             setRGB_ON(RED,0);
 27871  004678  0E00               	movlw	0
 27872  00467A  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 27873  00467C  0E00               	movlw	0
 27874  00467E  6E11               	movwf	setRGB_ON@Freq^0,c
 27875  004680  0E03               	movlw	3
 27876  004682  EC6D  F040         	call	_setRGB_ON
 27877  004686                     l25511:
 27878                           
 27879                           ; BSR set to: 1
 27880                           ;outputs_MC50.c: 868:         if(var_sys_NVM.flashLightMode==fixo)
 27881  004686  0100               	movlb	0	; () banked
 27882  004688  51A5               	movf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 27883  00468A  A4D8               	btfss	status,2,c
 27884  00468C  D007               	goto	l25515
 27885                           
 27886                           ; BSR set to: 0
 27887                           ;outputs_MC50.c: 869:         {;outputs_MC50.c: 871:             setFlashLigth_ON(( 500/
      +                          50));
 27888  00468E  0E00               	movlw	0
 27889  004690  6E11               	movwf	(setFlashLigth_ON@Freq+1)^0,c
 27890  004692  0E0A               	movlw	10
 27891  004694  6E10               	movwf	setFlashLigth_ON@Freq^0,c
 27892  004696  ECA0  F04A         	call	_setFlashLigth_ON	;wreg free
 27893                           
 27894                           ;outputs_MC50.c: 873:         }
 27895  00469A  0012               	return	
 27896  00469C                     l25515:
 27897                           
 27898                           ;outputs_MC50.c: 875:             setFlashLigth_ON(0);
 27899  00469C  0E00               	movlw	0
 27900  00469E  6E11               	movwf	(setFlashLigth_ON@Freq+1)^0,c
 27901  0046A0  0E00               	movlw	0
 27902  0046A2  6E10               	movwf	setFlashLigth_ON@Freq^0,c
 27903  0046A4  ECA0  F04A         	call	_setFlashLigth_ON	;wreg free
 27904  0046A8  0012               	return	
 27905  0046AA                     l25517:
 27906                           
 27907                           ; BSR set to: 1
 27908  0046AA  5100               	movf	_var_sys& (0+255),w,b	;volatile
 27909  0046AC  A4D8               	btfss	status,2,c
 27910  0046AE  D042               	goto	l25545
 27911                           
 27912                           ; BSR set to: 1
 27913  0046B0  05E7               	decf	_controlGate_stateMachine& (0+255),w,b
 27914  0046B2  11E8               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
 27915  0046B4  A4D8               	btfss	status,2,c
 27916  0046B6  D03E               	goto	l25545
 27917                           
 27918                           ; BSR set to: 1
 27919                           ;outputs_MC50.c: 881:     {;outputs_MC50.c: 882:         if(var_sys.preflashingcontrol !
      +                          = YES){
 27920  0046B8  051D               	decf	(_var_sys+29)& (0+255),w,b	;volatile
 27921  0046BA  A4D8               	btfss	status,2,c
 27922                           
 27923                           ; BSR set to: 1
 27924                           
 27925                           ;outputs_MC50.c: 883:             do { LATAbits.LATA7 = 1; } while(0);
 27926  0046BC  8E83               	bsf	131,7,c	;volatile
 27927                           
 27928                           ; BSR set to: 1
 27929                           ;outputs_MC50.c: 888:         if(var_sys_NVM.flashRGBMode==rgb_pisca)
 27930  0046BE  0100               	movlb	0	; () banked
 27931  0046C0  05B1               	decf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 27932  0046C2  A4D8               	btfss	status,2,c
 27933  0046C4  D017               	goto	l25533
 27934                           
 27935                           ; BSR set to: 0
 27936                           ;outputs_MC50.c: 889:         {;outputs_MC50.c: 890:             if (var_sys_NVM.TypeofM
      +                          otor == br || var_sys_NVM.TypeofMotor == SE)setRGB_ON(YELLOW,0);
 27937  0046C6  0E02               	movlw	2
 27938  0046C8  19B4               	xorwf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 27939  0046CA  B4D8               	btfsc	status,2,c
 27940  0046CC  D003               	goto	u31930
 27941                           
 27942                           ; BSR set to: 0
 27943  0046CE  05B4               	decf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 27944  0046D0  A4D8               	btfss	status,2,c
 27945  0046D2  D008               	goto	l25531
 27946  0046D4                     u31930:
 27947                           
 27948                           ; BSR set to: 0
 27949  0046D4  0E00               	movlw	0
 27950  0046D6  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 27951  0046D8  0E00               	movlw	0
 27952  0046DA  6E11               	movwf	setRGB_ON@Freq^0,c
 27953  0046DC  0E04               	movlw	4
 27954  0046DE  EC6D  F040         	call	_setRGB_ON
 27955  0046E2  D013               	goto	l25537
 27956  0046E4                     l25531:
 27957                           
 27958                           ; BSR set to: 0
 27959  0046E4  0E00               	movlw	0
 27960  0046E6  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 27961  0046E8  0E28               	movlw	40
 27962  0046EA  6E11               	movwf	setRGB_ON@Freq^0,c
 27963  0046EC  0E04               	movlw	4
 27964  0046EE  EC6D  F040         	call	_setRGB_ON
 27965  0046F2  D00B               	goto	l25537
 27966  0046F4                     l25533:
 27967                           
 27968                           ; BSR set to: 0
 27969  0046F4  0E03               	movlw	3
 27970  0046F6  19B1               	xorwf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 27971  0046F8  B4D8               	btfsc	status,2,c
 27972  0046FA  D007               	goto	l25537
 27973                           
 27974                           ; BSR set to: 0
 27975  0046FC  0E00               	movlw	0
 27976  0046FE  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 27977  004700  0E00               	movlw	0
 27978  004702  6E11               	movwf	setRGB_ON@Freq^0,c
 27979  004704  0E04               	movlw	4
 27980  004706  EC6D  F040         	call	_setRGB_ON
 27981  00470A                     l25537:
 27982                           
 27983                           ;outputs_MC50.c: 895:         if (var_sys_NVM.flashLightMode != electroiman)
 27984  00470A  0E03               	movlw	3
 27985  00470C  0100               	movlb	0	; () banked
 27986  00470E  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 27987  004710  B4D8               	btfsc	status,2,c
 27988  004712  0012               	return	
 27989                           
 27990                           ; BSR set to: 0
 27991                           ;outputs_MC50.c: 896:         {;outputs_MC50.c: 897:         if (ts_system.TimeOnFlashLi
      +                          gth>0)
 27992  004714  0101               	movlb	1	; () banked
 27993  004716  BFC2               	btfsc	(_ts_system+35)& (0+255),7,b	;volatile
 27994  004718  D007               	goto	l2443
 27995  00471A  51C2               	movf	(_ts_system+35)& (0+255),w,b	;volatile
 27996  00471C  11C1               	iorwf	(_ts_system+34)& (0+255),w,b	;volatile
 27997  00471E  11C0               	iorwf	(_ts_system+33)& (0+255),w,b	;volatile
 27998  004720  E1BD               	bnz	l25515
 27999  004722  05BF               	decf	(_ts_system+32)& (0+255),w,b	;volatile
 28000  004724  B0D8               	btfsc	status,0,c
 28001  004726  D7BA               	goto	l25515
 28002  004728                     l2443:
 28003                           
 28004                           ; BSR set to: 1
 28005  004728  9487               	bcf	135,2,c	;volatile
 28006                           
 28007                           ; BSR set to: 1
 28008                           ;outputs_MC50.c: 904:             ts_system.timeFreqFlashligth=0;
 28009  00472A  0E00               	movlw	0
 28010  00472C  6FBE               	movwf	(_ts_system+31)& (0+255),b	;volatile
 28011  00472E  0E00               	movlw	0
 28012  004730  6FBD               	movwf	(_ts_system+30)& (0+255),b	;volatile
 28013                           
 28014                           ; BSR set to: 0
 28015                           ;outputs_MC50.c: 907:     }
 28016                           
 28017                           ;outputs_MC50.c: 906:         }
 28018  004732  0012               	return	
 28019  004734                     l25545:
 28020                           
 28021                           ; BSR set to: 1
 28022  004734  5100               	movf	_var_sys& (0+255),w,b	;volatile
 28023  004736  A4D8               	btfss	status,2,c
 28024  004738  D048               	goto	l25579
 28025                           
 28026                           ; BSR set to: 1
 28027                           ;outputs_MC50.c: 911:     {;outputs_MC50.c: 912:         if (( var_sys_NVM.autoTimeFullC
      +                          lose==0 && var_sys.StateMotor == InOpenFull)||((var_sys_NVM.autoTimeWalkClose==0) && var
      +                          _sys_NVM.walkTime >0 && var_sys.StateMotor == InOpenWalk))
 28028  00473A  0100               	movlb	0	; () banked
 28029  00473C  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 28030  00473E  A4D8               	btfss	status,2,c
 28031  004740  D004               	goto	u31990
 28032                           
 28033                           ; BSR set to: 0
 28034  004742  0101               	movlb	1	; () banked
 28035  004744  0500               	decf	_var_sys& (0+255),w,b	;volatile
 28036  004746  B4D8               	btfsc	status,2,c
 28037  004748  D00C               	goto	u32020
 28038  00474A                     u31990:
 28039  00474A  0100               	movlb	0	; () banked
 28040  00474C  519E               	movf	(_var_sys_NVM+6)& (0+255),w,b	;volatile
 28041  00474E  A4D8               	btfss	status,2,c
 28042  004750  D017               	goto	l25563
 28043                           
 28044                           ; BSR set to: 0
 28045  004752  519C               	movf	(_var_sys_NVM+4)& (0+255),w,b	;volatile
 28046  004754  B4D8               	btfsc	status,2,c
 28047  004756  D014               	goto	l25563
 28048                           
 28049                           ; BSR set to: 0
 28050  004758  0E02               	movlw	2
 28051  00475A  0101               	movlb	1	; () banked
 28052  00475C  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 28053  00475E  A4D8               	btfss	status,2,c
 28054  004760  D00F               	goto	l25563
 28055  004762                     u32020:
 28056                           
 28057                           ; BSR set to: 1
 28058                           ;outputs_MC50.c: 913:         {;outputs_MC50.c: 916:             var_sys.ControlReleCapa
      +                          citorOpen = 0;
 28059  004762  0E00               	movlw	0
 28060  004764  6F28               	movwf	(_var_sys+40)& (0+255),b	;volatile
 28061                           
 28062                           ;outputs_MC50.c: 917:             var_sys.ControlReleCapacitorClose = 0;
 28063  004766  0E00               	movlw	0
 28064  004768  6F29               	movwf	(_var_sys+41)& (0+255),b	;volatile
 28065                           
 28066                           ; BSR set to: 1
 28067                           ;outputs_MC50.c: 921:             if (var_sys_NVM.flashLightMode != electroiman && var_s
      +                          ys_NVM.flashLightMode != condominio ){
 28068  00476A  0E03               	movlw	3
 28069  00476C  0100               	movlb	0	; () banked
 28070  00476E  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 28071  004770  B4D8               	btfsc	status,2,c
 28072  004772  0012               	return	
 28073                           
 28074                           ; BSR set to: 0
 28075  004774  0E02               	movlw	2
 28076  004776  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 28077  004778  B4D8               	btfsc	status,2,c
 28078  00477A  0012               	return	
 28079                           
 28080                           ; BSR set to: 0
 28081                           
 28082                           ;outputs_MC50.c: 922:               do { LATEbits.LATE2 = 0; } while(0);
 28083  00477C  9487               	bcf	135,2,c	;volatile
 28084  00477E  0012               	return	
 28085  004780                     l25563:
 28086                           
 28087                           ;outputs_MC50.c: 927:         {;outputs_MC50.c: 928:             if(var_sys_NVM.flashRGB
      +                          Mode==rgb_pisca)
 28088  004780  0100               	movlb	0	; () banked
 28089  004782  05B1               	decf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 28090  004784  A4D8               	btfss	status,2,c
 28091  004786  D008               	goto	l25567
 28092                           
 28093                           ; BSR set to: 0
 28094                           ;outputs_MC50.c: 929:             {;outputs_MC50.c: 930:                 setRGB_ON(BLUE,
      +                          (1000/50));
 28095  004788  0E00               	movlw	0
 28096  00478A  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 28097  00478C  0E14               	movlw	20
 28098  00478E  6E11               	movwf	setRGB_ON@Freq^0,c
 28099  004790  0E01               	movlw	1
 28100  004792  EC6D  F040         	call	_setRGB_ON
 28101                           
 28102                           ;outputs_MC50.c: 932:             }
 28103  004796  D007               	goto	l25569
 28104  004798                     l25567:
 28105                           
 28106                           ; BSR set to: 0
 28107                           ;outputs_MC50.c: 934:             {;outputs_MC50.c: 935:                 setRGB_ON(BLUE,
      +                          0);
 28108  004798  0E00               	movlw	0
 28109  00479A  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 28110  00479C  0E00               	movlw	0
 28111  00479E  6E11               	movwf	setRGB_ON@Freq^0,c
 28112  0047A0  0E01               	movlw	1
 28113  0047A2  EC6D  F040         	call	_setRGB_ON
 28114  0047A6                     l25569:
 28115                           
 28116                           ; BSR set to: 1
 28117                           ;outputs_MC50.c: 939:             if(var_sys_NVM.flashLightMode==pisca ||var_sys_NVM.fla
      +                          shLightMode==electroiman)
 28118  0047A6  0100               	movlb	0	; () banked
 28119  0047A8  05A5               	decf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 28120  0047AA  B4D8               	btfsc	status,2,c
 28121  0047AC  D004               	goto	u32070
 28122                           
 28123                           ; BSR set to: 0
 28124  0047AE  0E03               	movlw	3
 28125  0047B0  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 28126  0047B2  A4D8               	btfss	status,2,c
 28127  0047B4  D002               	goto	l25573
 28128  0047B6                     u32070:
 28129                           
 28130                           ; BSR set to: 0
 28131                           
 28132                           ;outputs_MC50.c: 940:             {;outputs_MC50.c: 941:                  do { LATEbits.
      +                          LATE2 = 0; } while(0);
 28133  0047B6  9487               	bcf	135,2,c	;volatile
 28134  0047B8  0012               	return	
 28135  0047BA                     l25573:
 28136                           
 28137                           ; BSR set to: 0
 28138  0047BA  51A5               	movf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 28139  0047BC  B4D8               	btfsc	status,2,c
 28140  0047BE  D76E               	goto	l25515
 28141                           
 28142                           ; BSR set to: 0
 28143  0047C0  0E02               	movlw	2
 28144  0047C2  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 28145  0047C4  A4D8               	btfss	status,2,c
 28146  0047C6  0012               	return	
 28147  0047C8  D769               	goto	l25515
 28148  0047CA                     l25579:
 28149                           
 28150                           ; BSR set to: 1
 28151                           ;outputs_MC50.c: 955:     {;outputs_MC50.c: 957:         var_sys.ControlReleCapacitorClo
      +                          se=0;
 28152  0047CA  0E00               	movlw	0
 28153  0047CC  6F29               	movwf	(_var_sys+41)& (0+255),b	;volatile
 28154                           
 28155                           ;outputs_MC50.c: 958:         if (var_sys.ControlReleCapacitorOpen==0 && var_sys_NVM.fla
      +                          shRGBMode==rgb_capacitor)
 28156  0047CE  5128               	movf	(_var_sys+40)& (0+255),w,b	;volatile
 28157  0047D0  A4D8               	btfss	status,2,c
 28158  0047D2  D00C               	goto	l25585
 28159                           
 28160                           ; BSR set to: 1
 28161  0047D4  0E03               	movlw	3
 28162  0047D6  0100               	movlb	0	; () banked
 28163  0047D8  19B1               	xorwf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 28164  0047DA  A4D8               	btfss	status,2,c
 28165  0047DC  D007               	goto	l25585
 28166                           
 28167                           ; BSR set to: 0
 28168                           ;outputs_MC50.c: 959:         {;outputs_MC50.c: 960:          ts_system.TimeReleCapacito
      +                          r = (1000/50)*2;
 28169  0047DE  0E00               	movlw	0
 28170  0047E0  0101               	movlb	1	; () banked
 28171  0047E2  6FE2               	movwf	(_ts_system+67)& (0+255),b	;volatile
 28172  0047E4  0E28               	movlw	40
 28173  0047E6  6FE1               	movwf	(_ts_system+66)& (0+255),b	;volatile
 28174                           
 28175                           ;outputs_MC50.c: 962:          var_sys.ControlReleCapacitorOpen = 1;
 28176  0047E8  0E01               	movlw	1
 28177  0047EA  6F28               	movwf	(_var_sys+40)& (0+255),b	;volatile
 28178  0047EC                     l25585:
 28179                           
 28180                           ;outputs_MC50.c: 964:         if(ts_system.TimeReleCapacitor <=0 && var_sys_NVM.flashRGB
      +                          Mode==rgb_capacitor)
 28181  0047EC  0101               	movlb	1	; () banked
 28182  0047EE  BFE2               	btfsc	(_ts_system+67)& (0+255),7,b	;volatile
 28183  0047F0  D005               	goto	u32120
 28184  0047F2  51E2               	movf	(_ts_system+67)& (0+255),w,b	;volatile
 28185  0047F4  E105               	bnz	l25589
 28186  0047F6  05E1               	decf	(_ts_system+66)& (0+255),w,b	;volatile
 28187  0047F8  B0D8               	btfsc	status,0,c
 28188  0047FA  D002               	goto	l25589
 28189  0047FC                     u32120:
 28190                           
 28191                           ; BSR set to: 1
 28192  0047FC  0100               	movlb	0	; () banked
 28193  0047FE  51B1               	movf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 28194  004800                     l25589:
 28195                           
 28196                           ;outputs_MC50.c: 969:         if (controlGate_stateMachine.current_state==st_Opened)
 28197  004800  0E04               	movlw	4
 28198  004802  0101               	movlb	1	; () banked
 28199  004804  19E7               	xorwf	_controlGate_stateMachine& (0+255),w,b
 28200  004806  11E8               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
 28201  004808  A4D8               	btfss	status,2,c
 28202  00480A  D01B               	goto	l25601
 28203                           
 28204                           ; BSR set to: 1
 28205                           ;outputs_MC50.c: 970:         {;outputs_MC50.c: 973:             var_sys.ControlReleCapa
      +                          citorOpen = 0;
 28206  00480C  0E00               	movlw	0
 28207  00480E  6F28               	movwf	(_var_sys+40)& (0+255),b	;volatile
 28208                           
 28209                           ;outputs_MC50.c: 974:             var_sys.ControlReleCapacitorClose = 0;
 28210  004810  0E00               	movlw	0
 28211  004812  6F29               	movwf	(_var_sys+41)& (0+255),b	;volatile
 28212                           
 28213                           ;outputs_MC50.c: 977:             if (var_sys_NVM.autoTimeFullClose != 0 || ((var_sys_NV
      +                          M.autoTimeWalkClose!=0) && var_sys_NVM.walkTime >0)|| var_sys_NVM.operationMode==2)
 28214  004814  0100               	movlb	0	; () banked
 28215  004816  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 28216  004818  A4D8               	btfss	status,2,c
 28217  00481A  D00A               	goto	u32170
 28218                           
 28219                           ; BSR set to: 0
 28220  00481C  519E               	movf	(_var_sys_NVM+6)& (0+255),w,b	;volatile
 28221  00481E  B4D8               	btfsc	status,2,c
 28222  004820  D003               	goto	u32160
 28223                           
 28224                           ; BSR set to: 0
 28225  004822  519C               	movf	(_var_sys_NVM+4)& (0+255),w,b	;volatile
 28226  004824  A4D8               	btfss	status,2,c
 28227  004826  D004               	goto	u32170
 28228  004828                     u32160:
 28229                           
 28230                           ; BSR set to: 0
 28231  004828  0E02               	movlw	2
 28232  00482A  19A4               	xorwf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 28233  00482C  A4D8               	btfss	status,2,c
 28234  00482E  D007               	goto	l2477
 28235  004830                     u32170:
 28236                           
 28237                           ; BSR set to: 0
 28238                           ;outputs_MC50.c: 978:             {;outputs_MC50.c: 979:                    setRGB_ON(BL
      +                          UE,0);
 28239  004830  0E00               	movlw	0
 28240  004832  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 28241  004834  0E00               	movlw	0
 28242  004836  6E11               	movwf	setRGB_ON@Freq^0,c
 28243  004838  0E01               	movlw	1
 28244  00483A  EC6D  F040         	call	_setRGB_ON
 28245  00483E                     l2477:
 28246  00483E  9487               	bcf	135,2,c	;volatile
 28247  004840  0012               	return	
 28248  004842                     l25601:
 28249                           
 28250                           ; BSR set to: 1
 28251                           ;outputs_MC50.c: 993:         {;outputs_MC50.c: 996:             if(var_sys_NVM.flashRGB
      +                          Mode==rgb_pisca)
 28252  004842  0100               	movlb	0	; () banked
 28253  004844  05B1               	decf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 28254  004846  A4D8               	btfss	status,2,c
 28255  004848  D008               	goto	l25605
 28256                           
 28257                           ; BSR set to: 0
 28258                           ;outputs_MC50.c: 997:             {;outputs_MC50.c: 998:                 setRGB_ON(GREEN
      +                          ,( 500/50));
 28259  00484A  0E00               	movlw	0
 28260  00484C  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 28261  00484E  0E0A               	movlw	10
 28262  004850  6E11               	movwf	setRGB_ON@Freq^0,c
 28263  004852  0E02               	movlw	2
 28264  004854  EC6D  F040         	call	_setRGB_ON
 28265                           
 28266                           ;outputs_MC50.c: 999:             }
 28267  004858  D007               	goto	l25607
 28268  00485A                     l25605:
 28269                           
 28270                           ; BSR set to: 0
 28271                           ;outputs_MC50.c: 1001:             {;outputs_MC50.c: 1002:                 setRGB_ON(GRE
      +                          EN,0);
 28272  00485A  0E00               	movlw	0
 28273  00485C  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 28274  00485E  0E00               	movlw	0
 28275  004860  6E11               	movwf	setRGB_ON@Freq^0,c
 28276  004862  0E02               	movlw	2
 28277  004864  EC6D  F040         	call	_setRGB_ON
 28278  004868                     l25607:
 28279                           
 28280                           ; BSR set to: 1
 28281                           ;outputs_MC50.c: 1006:             if(var_sys_NVM.flashLightMode==fixo)
 28282  004868  0100               	movlb	0	; () banked
 28283  00486A  51A5               	movf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 28284  00486C  A4D8               	btfss	status,2,c
 28285  00486E  D007               	goto	l25611
 28286                           
 28287                           ; BSR set to: 0
 28288                           ;outputs_MC50.c: 1007:             {;outputs_MC50.c: 1010:                 setFlashLigth
      +                          _ON((1000/50));
 28289  004870  0E00               	movlw	0
 28290  004872  6E11               	movwf	(setFlashLigth_ON@Freq+1)^0,c
 28291  004874  0E14               	movlw	20
 28292  004876  6E10               	movwf	setFlashLigth_ON@Freq^0,c
 28293  004878  ECA0  F04A         	call	_setFlashLigth_ON	;wreg free
 28294                           
 28295                           ;outputs_MC50.c: 1011:             }
 28296  00487C  D00D               	goto	l25617
 28297  00487E                     l25611:
 28298                           
 28299                           ; BSR set to: 0
 28300  00487E  05A5               	decf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 28301  004880  B4D8               	btfsc	status,2,c
 28302  004882  D004               	goto	u32210
 28303                           
 28304                           ; BSR set to: 0
 28305  004884  0E02               	movlw	2
 28306  004886  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 28307  004888  A4D8               	btfss	status,2,c
 28308  00488A  D006               	goto	l25617
 28309  00488C                     u32210:
 28310                           
 28311                           ; BSR set to: 0
 28312                           ;outputs_MC50.c: 1013:             {;outputs_MC50.c: 1014:                 setFlashLigth
      +                          _ON(0);
 28313  00488C  0E00               	movlw	0
 28314  00488E  6E11               	movwf	(setFlashLigth_ON@Freq+1)^0,c
 28315  004890  0E00               	movlw	0
 28316  004892  6E10               	movwf	setFlashLigth_ON@Freq^0,c
 28317  004894  ECA0  F04A         	call	_setFlashLigth_ON	;wreg free
 28318  004898                     l25617:
 28319                           
 28320                           ;outputs_MC50.c: 1017:             if (var_sys_NVM.flashLightMode == electroiman)
 28321  004898  0E03               	movlw	3
 28322  00489A  0100               	movlb	0	; () banked
 28323  00489C  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 28324  00489E  A4D8               	btfss	status,2,c
 28325  0048A0  0012               	return	
 28326                           
 28327                           ; BSR set to: 0
 28328                           
 28329                           ;outputs_MC50.c: 1018:             {;outputs_MC50.c: 1019:             do { LATEbits.LAT
      +                          E2 = 0; } while(0);
 28330  0048A2  9487               	bcf	135,2,c	;volatile
 28331  0048A4  0012               	return		;funcret
 28332  0048A6                     __end_of_ControlLights:
 28333                           	callstack 0
 28334                           
 28335 ;; *************** function _setRGB_ON *****************
 28336 ;; Defined at:
 28337 ;;		line 1028 in file "outputs_MC50.c"
 28338 ;; Parameters:    Size  Location     Type
 28339 ;;  RGBLigth        1    wreg     enum E10611
 28340 ;;  Freq            2   16[COMRAM] int 
 28341 ;; Auto vars:     Size  Location     Type
 28342 ;;  RGBLigth        1   20[COMRAM] enum E10611
 28343 ;; Return value:  Size  Location     Type
 28344 ;;                  1    wreg      void 
 28345 ;; Registers used:
 28346 ;;		wreg, status,2, status,0, cstack
 28347 ;; Tracked objects:
 28348 ;;		On entry : 3E/0
 28349 ;;		On exit  : 3F/1
 28350 ;;		Unchanged: 0/0
 28351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28352 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28353 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28354 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28355 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28356 ;;Total ram usage:        5 bytes
 28357 ;; Hardware stack levels used: 1
 28358 ;; Hardware stack levels required when called: 5
 28359 ;; This function calls:
 28360 ;;		_RGB_Set
 28361 ;; This function is called by:
 28362 ;;		_ControlLights
 28363 ;; This function uses a non-reentrant model
 28364 ;;
 28365                           
 28366                           	psect	text115
 28367  0080DA                     __ptext115:
 28368                           	callstack 0
 28369  0080DA                     _setRGB_ON:
 28370                           	callstack 24
 28371                           
 28372                           ;incstack = 0
 28373                           ;setRGB_ON@RGBLigth stored from wreg
 28374  0080DA  6E15               	movwf	setRGB_ON@RGBLigth^0,c
 28375                           
 28376                           ;outputs_MC50.c: 1028: void setRGB_ON(RGBY_enum RGBLigth,int Freq);outputs_MC50.c: 1029:
      +                           {;outputs_MC50.c: 1031:     do { LATAbits.LATA7 = 1; } while(0);
 28377  0080DC  8E83               	bsf	131,7,c	;volatile
 28378                           
 28379                           ;outputs_MC50.c: 1037:     if(Freq==0 || var_sys.upFaseRGB==1)
 28380  0080DE  5011               	movf	setRGB_ON@Freq^0,w,c
 28381  0080E0  1012               	iorwf	(setRGB_ON@Freq+1)^0,w,c
 28382  0080E2  B4D8               	btfsc	status,2,c
 28383  0080E4  D015               	goto	l22979
 28384  0080E6  0101               	movlb	1	; () banked
 28385  0080E8  0524               	decf	(_var_sys+36)& (0+255),w,b	;volatile
 28386  0080EA  B4D8               	btfsc	status,2,c
 28387  0080EC  D011               	goto	l22979
 28388  0080EE  D024               	goto	l22981
 28389  0080F0                     l22969:
 28390                           
 28391                           ;outputs_MC50.c: 1043:                 RGB_Set(0x20);
 28392  0080F0  0E20               	movlw	32
 28393  0080F2  EC93  F04E         	call	_RGB_Set
 28394                           
 28395                           ;outputs_MC50.c: 1044:             break;
 28396  0080F6  D020               	goto	l22981
 28397  0080F8                     l22971:
 28398                           
 28399                           ;outputs_MC50.c: 1047:                 RGB_Set(0x04);
 28400  0080F8  0E04               	movlw	4
 28401  0080FA  EC93  F04E         	call	_RGB_Set
 28402                           
 28403                           ;outputs_MC50.c: 1048:             break;
 28404  0080FE  D01C               	goto	l22981
 28405  008100                     l22973:
 28406                           
 28407                           ;outputs_MC50.c: 1051:                 RGB_Set(0x00);
 28408  008100  0E00               	movlw	0
 28409  008102  EC93  F04E         	call	_RGB_Set
 28410                           
 28411                           ;outputs_MC50.c: 1052:             break;
 28412  008106  D018               	goto	l22981
 28413  008108                     l22975:
 28414                           
 28415                           ;outputs_MC50.c: 1055:                 RGB_Set(0x24);
 28416  008108  0E24               	movlw	36
 28417  00810A  EC93  F04E         	call	_RGB_Set
 28418                           
 28419                           ;outputs_MC50.c: 1056:             break;
 28420  00810E  D014               	goto	l22981
 28421  008110                     l22979:
 28422  008110  5015               	movf	setRGB_ON@RGBLigth^0,w,c
 28423  008112  6E13               	movwf	??_setRGB_ON^0,c
 28424  008114  6A14               	clrf	(??_setRGB_ON+1)^0,c
 28425                           
 28426                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 28427                           ; Switch size 1, requested type "simple"
 28428                           ; Number of cases is 1, Range of values is 0 to 0
 28429                           ; switch strategies available:
 28430                           ; Name         Instructions Cycles
 28431                           ; simple_byte            4     3 (average)
 28432                           ;	Chosen strategy is simple_byte
 28433  008116  5014               	movf	(??_setRGB_ON+1)^0,w,c
 28434  008118  0A00               	xorlw	0	; case 0
 28435  00811A  A4D8               	btfss	status,2,c
 28436  00811C  D00D               	goto	l22981
 28437                           
 28438                           ; Switch size 1, requested type "simple"
 28439                           ; Number of cases is 4, Range of values is 1 to 4
 28440                           ; switch strategies available:
 28441                           ; Name         Instructions Cycles
 28442                           ; simple_byte           13     7 (average)
 28443                           ;	Chosen strategy is simple_byte
 28444  00811E  5013               	movf	??_setRGB_ON^0,w,c
 28445  008120  0A01               	xorlw	1	; case 1
 28446  008122  B4D8               	btfsc	status,2,c
 28447  008124  D7ED               	goto	l22973
 28448  008126  0A03               	xorlw	3	; case 2
 28449  008128  B4D8               	btfsc	status,2,c
 28450  00812A  D7E6               	goto	l22971
 28451  00812C  0A01               	xorlw	1	; case 3
 28452  00812E  B4D8               	btfsc	status,2,c
 28453  008130  D7DF               	goto	l22969
 28454  008132  0A07               	xorlw	7	; case 4
 28455  008134  B4D8               	btfsc	status,2,c
 28456  008136  D7E8               	goto	l22975
 28457  008138                     l22981:
 28458                           
 28459                           ;outputs_MC50.c: 1061:     if(ts_system.timeFreqRGB<=0 && Freq!=0)
 28460  008138  0101               	movlb	1	; () banked
 28461  00813A  BFBC               	btfsc	(_ts_system+29)& (0+255),7,b	;volatile
 28462  00813C  D005               	goto	u26750
 28463  00813E  51BC               	movf	(_ts_system+29)& (0+255),w,b	;volatile
 28464  008140  E113               	bnz	l2507
 28465  008142  05BB               	decf	(_ts_system+28)& (0+255),w,b	;volatile
 28466  008144  B0D8               	btfsc	status,0,c
 28467  008146  0012               	return	
 28468  008148                     u26750:
 28469                           
 28470                           ; BSR set to: 1
 28471  008148  5011               	movf	setRGB_ON@Freq^0,w,c
 28472  00814A  1012               	iorwf	(setRGB_ON@Freq+1)^0,w,c
 28473  00814C  B4D8               	btfsc	status,2,c
 28474  00814E  0012               	return	
 28475                           
 28476                           ; BSR set to: 1
 28477                           ;outputs_MC50.c: 1062:     {;outputs_MC50.c: 1063:         ts_system.timeFreqRGB=Freq;
 28478  008150  C011  F1BB         	movff	setRGB_ON@Freq,_ts_system+28	;volatile
 28479  008154  C012  F1BC         	movff	setRGB_ON@Freq+1,_ts_system+29	;volatile
 28480                           
 28481                           ; BSR set to: 1
 28482                           ;outputs_MC50.c: 1064:         if(var_sys.upFaseRGB==1)
 28483  008158  0524               	decf	(_var_sys+36)& (0+255),w,b	;volatile
 28484  00815A  A4D8               	btfss	status,2,c
 28485  00815C  D003               	goto	l22991
 28486                           
 28487                           ; BSR set to: 1
 28488                           ;outputs_MC50.c: 1065:         {;outputs_MC50.c: 1066:             var_sys.upFaseRGB=0;
 28489  00815E  0E00               	movlw	0
 28490  008160  6F24               	movwf	(_var_sys+36)& (0+255),b	;volatile
 28491                           
 28492                           ;outputs_MC50.c: 1067:         }
 28493  008162  0012               	return	
 28494  008164                     l22991:
 28495                           
 28496                           ; BSR set to: 1
 28497                           ;outputs_MC50.c: 1069:         {;outputs_MC50.c: 1070:             var_sys.upFaseRGB=1;
 28498  008164  0E01               	movlw	1
 28499  008166  6F24               	movwf	(_var_sys+36)& (0+255),b	;volatile
 28500  008168                     l2507:
 28501                           
 28502                           ; BSR set to: 1
 28503  008168  0012               	return		;funcret
 28504  00816A                     __end_of_setRGB_ON:
 28505                           	callstack 0
 28506                           
 28507 ;; *************** function _RGB_Set *****************
 28508 ;; Defined at:
 28509 ;;		line 98 in file "outputs_MC50.c"
 28510 ;; Parameters:    Size  Location     Type
 28511 ;;  value           1    wreg     unsigned char 
 28512 ;; Auto vars:     Size  Location     Type
 28513 ;;  value           1   15[COMRAM] unsigned char 
 28514 ;; Return value:  Size  Location     Type
 28515 ;;                  1    wreg      void 
 28516 ;; Registers used:
 28517 ;;		wreg, status,2, status,0
 28518 ;; Tracked objects:
 28519 ;;		On entry : 0/0
 28520 ;;		On exit  : 0/0
 28521 ;;		Unchanged: 0/0
 28522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28523 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28524 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28525 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28526 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28527 ;;Total ram usage:        1 bytes
 28528 ;; Hardware stack levels used: 1
 28529 ;; Hardware stack levels required when called: 4
 28530 ;; This function calls:
 28531 ;;		Nothing
 28532 ;; This function is called by:
 28533 ;;		_setRGB_ON
 28534 ;; This function uses a non-reentrant model
 28535 ;;
 28536                           
 28537                           	psect	text116
 28538  009D26                     __ptext116:
 28539                           	callstack 0
 28540  009D26                     _RGB_Set:
 28541                           	callstack 24
 28542                           
 28543                           ; BSR set to: 1
 28544                           ;incstack = 0
 28545                           ;RGB_Set@value stored from wreg
 28546  009D26  6E10               	movwf	RGB_Set@value^0,c
 28547                           
 28548                           ;outputs_MC50.c: 98: void RGB_Set(char value);outputs_MC50.c: 99: {;outputs_MC50.c: 100:
      +                              LATC &= 0xdb ;
 28549  009D28  0EDB               	movlw	219
 28550  009D2A  1685               	andwf	133,f,c	;volatile
 28551                           
 28552                           ;outputs_MC50.c: 101:    LATC |= value;
 28553  009D2C  5010               	movf	RGB_Set@value^0,w,c	;volatile
 28554  009D2E  1285               	iorwf	133,f,c	;volatile
 28555  009D30  9E83               	bcf	131,7,c	;volatile
 28556  009D32  0012               	return		;funcret
 28557  009D34                     __end_of_RGB_Set:
 28558                           	callstack 0
 28559                           
 28560 ;; *************** function _setFlashLigth_ON *****************
 28561 ;; Defined at:
 28562 ;;		line 1077 in file "outputs_MC50.c"
 28563 ;; Parameters:    Size  Location     Type
 28564 ;;  Freq            2   15[COMRAM] int 
 28565 ;; Auto vars:     Size  Location     Type
 28566 ;;		None
 28567 ;; Return value:  Size  Location     Type
 28568 ;;                  1    wreg      void 
 28569 ;; Registers used:
 28570 ;;		wreg, status,2, status,0
 28571 ;; Tracked objects:
 28572 ;;		On entry : 3E/1
 28573 ;;		On exit  : 3F/1
 28574 ;;		Unchanged: 0/0
 28575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28576 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28577 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28578 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28579 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28580 ;;Total ram usage:        2 bytes
 28581 ;; Hardware stack levels used: 1
 28582 ;; Hardware stack levels required when called: 4
 28583 ;; This function calls:
 28584 ;;		Nothing
 28585 ;; This function is called by:
 28586 ;;		_ControlLights
 28587 ;; This function uses a non-reentrant model
 28588 ;;
 28589                           
 28590                           	psect	text117
 28591  009540                     __ptext117:
 28592                           	callstack 0
 28593  009540                     _setFlashLigth_ON:
 28594                           	callstack 25
 28595                           
 28596                           ;outputs_MC50.c: 1077: void setFlashLigth_ON(int Freq);outputs_MC50.c: 1078: {;outputs_M
      +                          C50.c: 1079:     if(Freq==0 || var_sys.upFaseFlashligth==1)
 28597                           
 28598                           ;incstack = 0
 28599  009540  5010               	movf	setFlashLigth_ON@Freq^0,w,c
 28600  009542  1011               	iorwf	(setFlashLigth_ON@Freq+1)^0,w,c
 28601  009544  B4D8               	btfsc	status,2,c
 28602  009546  D004               	goto	u26700
 28603  009548  0101               	movlb	1	; () banked
 28604  00954A  0525               	decf	(_var_sys+37)& (0+255),w,b	;volatile
 28605  00954C  A4D8               	btfss	status,2,c
 28606  00954E  D002               	goto	l2516
 28607  009550                     u26700:
 28608                           
 28609                           ;outputs_MC50.c: 1080:     {;outputs_MC50.c: 1081:         do { LATEbits.LATE2 = 1; } wh
      +                          ile(0);
 28610  009550  8487               	bsf	135,2,c	;volatile
 28611  009552  D001               	goto	l22957
 28612  009554                     l2516:
 28613                           
 28614                           ; BSR set to: 1
 28615  009554  9487               	bcf	135,2,c	;volatile
 28616  009556                     l22957:
 28617                           
 28618                           ;outputs_MC50.c: 1088:     if(ts_system.timeFreqFlashligth<=0 && Freq!=0)
 28619  009556  0101               	movlb	1	; () banked
 28620  009558  BFBE               	btfsc	(_ts_system+31)& (0+255),7,b	;volatile
 28621  00955A  D005               	goto	u26710
 28622  00955C  51BE               	movf	(_ts_system+31)& (0+255),w,b	;volatile
 28623  00955E  E10D               	bnz	l2519
 28624  009560  05BD               	decf	(_ts_system+30)& (0+255),w,b	;volatile
 28625  009562  B0D8               	btfsc	status,0,c
 28626  009564  0012               	return	
 28627  009566                     u26710:
 28628                           
 28629                           ; BSR set to: 1
 28630  009566  5010               	movf	setFlashLigth_ON@Freq^0,w,c
 28631  009568  1011               	iorwf	(setFlashLigth_ON@Freq+1)^0,w,c
 28632  00956A  B4D8               	btfsc	status,2,c
 28633  00956C  0012               	return	
 28634                           
 28635                           ; BSR set to: 1
 28636                           ;outputs_MC50.c: 1089:     {;outputs_MC50.c: 1090:         ts_system.timeFreqFlashligth=
      +                          Freq;
 28637  00956E  C010  F1BD         	movff	setFlashLigth_ON@Freq,_ts_system+30	;volatile
 28638  009572  C011  F1BE         	movff	setFlashLigth_ON@Freq+1,_ts_system+31	;volatile
 28639                           
 28640                           ; BSR set to: 1
 28641                           ;outputs_MC50.c: 1091:         var_sys.upFaseFlashligth ^= (1 << 0);
 28642  009576  0E01               	movlw	1
 28643  009578  1B25               	xorwf	(_var_sys+37)& (0+255),f,b	;volatile
 28644  00957A                     l2519:
 28645                           
 28646                           ; BSR set to: 1
 28647  00957A  0012               	return		;funcret
 28648  00957C                     __end_of_setFlashLigth_ON:
 28649                           	callstack 0
 28650                           
 28651 ;; *************** function _ControlInputs *****************
 28652 ;; Defined at:
 28653 ;;		line 674 in file "inputs_MC50.c"
 28654 ;; Parameters:    Size  Location     Type
 28655 ;;		None
 28656 ;; Auto vars:     Size  Location     Type
 28657 ;;		None
 28658 ;; Return value:  Size  Location     Type
 28659 ;;                  1    wreg      void 
 28660 ;; Registers used:
 28661 ;;		wreg, status,2, status,0
 28662 ;; Tracked objects:
 28663 ;;		On entry : 3E/1
 28664 ;;		On exit  : 3E/0
 28665 ;;		Unchanged: 0/0
 28666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28667 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28668 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28669 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28670 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28671 ;;Total ram usage:        0 bytes
 28672 ;; Hardware stack levels used: 1
 28673 ;; Hardware stack levels required when called: 4
 28674 ;; This function calls:
 28675 ;;		Nothing
 28676 ;; This function is called by:
 28677 ;;		_main
 28678 ;; This function uses a non-reentrant model
 28679 ;;
 28680                           
 28681                           	psect	text118
 28682  007062                     __ptext118:
 28683                           	callstack 0
 28684  007062                     _ControlInputs:
 28685                           	callstack 26
 28686                           
 28687                           ;inputs_MC50.c: 678:     if (( var_sys.StateMotor==InClose || (((PORTEbits.RE1 == 1)&& v
      +                          ar_sys_NVM.Direction_motor == 0)||((PORTEbits.RE0 == 1)&&var_sys_NVM.Direction_motor == 
      +                          1))) && (var_sys.FimCurso_CloseIsEnabled == YES))
 28688                           
 28689                           ; BSR set to: 1
 28690                           ;incstack = 0
 28691  007062  0E03               	movlw	3
 28692  007064  0101               	movlb	1	; () banked
 28693  007066  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 28694  007068  B4D8               	btfsc	status,2,c
 28695  00706A  D00C               	goto	u30290
 28696                           
 28697                           ; BSR set to: 1
 28698  00706C  A291               	btfss	145,1,c	;volatile
 28699  00706E  D004               	goto	u30270
 28700                           
 28701                           ; BSR set to: 1
 28702  007070  0100               	movlb	0	; () banked
 28703  007072  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 28704  007074  B4D8               	btfsc	status,2,c
 28705  007076  D006               	goto	u30290
 28706  007078                     u30270:
 28707  007078  A091               	btfss	145,0,c	;volatile
 28708  00707A  D00A               	goto	l24793
 28709  00707C  0100               	movlb	0	; () banked
 28710  00707E  05B3               	decf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 28711  007080  A4D8               	btfss	status,2,c
 28712  007082  D006               	goto	l24793
 28713  007084                     u30290:
 28714  007084  0101               	movlb	1	; () banked
 28715  007086  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
 28716  007088  A4D8               	btfss	status,2,c
 28717  00708A  D002               	goto	l24793
 28718                           
 28719                           ; BSR set to: 1
 28720                           ;inputs_MC50.c: 679:     {;inputs_MC50.c: 680:         var_sys.StateMotor = Stopped;
 28721  00708C  0E00               	movlw	0
 28722  00708E  6F00               	movwf	_var_sys& (0+255),b	;volatile
 28723  007090                     l24793:
 28724                           
 28725                           ;inputs_MC50.c: 683:     if((var_sys.StateMotor==InOpenFull || var_sys.StateMotor==InOpe
      +                          nWalk || (((PORTEbits.RE0 == 1) &&var_sys_NVM.Direction_motor == 0)||((PORTEbits.RE1 == 
      +                          1) && var_sys_NVM.Direction_motor == 1))) && (var_sys.FimCurso_OpenIsEnabled == YES))
 28726  007090  0101               	movlb	1	; () banked
 28727  007092  0500               	decf	_var_sys& (0+255),w,b	;volatile
 28728  007094  B4D8               	btfsc	status,2,c
 28729  007096  D010               	goto	u30360
 28730                           
 28731                           ; BSR set to: 1
 28732  007098  0E02               	movlw	2
 28733  00709A  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 28734  00709C  B4D8               	btfsc	status,2,c
 28735  00709E  D00C               	goto	u30360
 28736                           
 28737                           ; BSR set to: 1
 28738  0070A0  A091               	btfss	145,0,c	;volatile
 28739  0070A2  D004               	goto	u30340
 28740                           
 28741                           ; BSR set to: 1
 28742  0070A4  0100               	movlb	0	; () banked
 28743  0070A6  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 28744  0070A8  B4D8               	btfsc	status,2,c
 28745  0070AA  D006               	goto	u30360
 28746  0070AC                     u30340:
 28747  0070AC  A291               	btfss	145,1,c	;volatile
 28748  0070AE  D00A               	goto	l24807
 28749  0070B0  0100               	movlb	0	; () banked
 28750  0070B2  05B3               	decf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 28751  0070B4  A4D8               	btfss	status,2,c
 28752  0070B6  D006               	goto	l24807
 28753  0070B8                     u30360:
 28754  0070B8  0101               	movlb	1	; () banked
 28755  0070BA  0504               	decf	(_var_sys+4)& (0+255),w,b	;volatile
 28756  0070BC  A4D8               	btfss	status,2,c
 28757  0070BE  D002               	goto	l24807
 28758                           
 28759                           ; BSR set to: 1
 28760                           ;inputs_MC50.c: 684:     {;inputs_MC50.c: 685:         var_sys.StateMotor = Stopped;
 28761  0070C0  0E00               	movlw	0
 28762  0070C2  6F00               	movwf	_var_sys& (0+255),b	;volatile
 28763  0070C4                     l24807:
 28764                           
 28765                           ;inputs_MC50.c: 688:     if (var_sys.LearningIsEnabled != YES){
 28766  0070C4  0101               	movlb	1	; () banked
 28767  0070C6  0526               	decf	(_var_sys+38)& (0+255),w,b	;volatile
 28768  0070C8  B4D8               	btfsc	status,2,c
 28769  0070CA  0012               	return	
 28770                           
 28771                           ; BSR set to: 1
 28772                           ;inputs_MC50.c: 690:         if((var_sys_NVM.photoCellIsON == 1) && (var_sys.photoCellIs
      +                          Obstructed == YES) && var_sys.AutoInversionActive==NO)
 28773  0070CC  0100               	movlb	0	; () banked
 28774  0070CE  059F               	decf	(_var_sys_NVM+7)& (0+255),w,b	;volatile
 28775  0070D0  A4D8               	btfss	status,2,c
 28776  0070D2  D02B               	goto	l24833
 28777                           
 28778                           ; BSR set to: 0
 28779  0070D4  0101               	movlb	1	; () banked
 28780  0070D6  0501               	decf	(_var_sys+1)& (0+255),w,b	;volatile
 28781  0070D8  A4D8               	btfss	status,2,c
 28782  0070DA  D027               	goto	l24833
 28783                           
 28784                           ; BSR set to: 1
 28785  0070DC  5127               	movf	(_var_sys+39)& (0+255),w,b	;volatile
 28786  0070DE  A4D8               	btfss	status,2,c
 28787  0070E0  D024               	goto	l24833
 28788                           
 28789                           ; BSR set to: 1
 28790                           ;inputs_MC50.c: 691:         {;inputs_MC50.c: 699:             if((var_sys.StateMotor==I
      +                          nOpenFull || var_sys.StateMotor==InOpenWalk) && (var_sys_NVM.photoCellInOpen==1))
 28791  0070E2  0500               	decf	_var_sys& (0+255),w,b	;volatile
 28792  0070E4  B4D8               	btfsc	status,2,c
 28793  0070E6  D004               	goto	u30430
 28794                           
 28795                           ; BSR set to: 1
 28796  0070E8  0E02               	movlw	2
 28797  0070EA  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 28798  0070EC  A4D8               	btfss	status,2,c
 28799  0070EE  D007               	goto	l24823
 28800  0070F0                     u30430:
 28801                           
 28802                           ; BSR set to: 1
 28803  0070F0  0100               	movlb	0	; () banked
 28804  0070F2  05A0               	decf	(_var_sys_NVM+8)& (0+255),w,b	;volatile
 28805  0070F4  A4D8               	btfss	status,2,c
 28806  0070F6  D003               	goto	l24823
 28807                           
 28808                           ; BSR set to: 0
 28809                           ;inputs_MC50.c: 700:             {;inputs_MC50.c: 701:                 var_sys.StateMoto
      +                          r = Stopped;
 28810  0070F8  0E00               	movlw	0
 28811  0070FA  0101               	movlb	1	; () banked
 28812  0070FC  D015               	goto	L102
 28813  0070FE                     l24823:
 28814  0070FE  0E03               	movlw	3
 28815  007100  0101               	movlb	1	; () banked
 28816  007102  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 28817  007104  A4D8               	btfss	status,2,c
 28818  007106  D011               	goto	l24833
 28819                           
 28820                           ; BSR set to: 1
 28821  007108  0100               	movlb	0	; () banked
 28822  00710A  51A0               	movf	(_var_sys_NVM+8)& (0+255),w,b	;volatile
 28823  00710C  A4D8               	btfss	status,2,c
 28824  00710E  D00D               	goto	l24833
 28825                           
 28826                           ; BSR set to: 0
 28827  007110  0101               	movlb	1	; () banked
 28828  007112  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 28829  007114  D005               	goto	u30470
 28830  007116  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 28831  007118  E108               	bnz	l24833
 28832  00711A  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 28833  00711C  B0D8               	btfsc	status,0,c
 28834  00711E  D005               	goto	l24833
 28835  007120                     u30470:
 28836                           
 28837                           ; BSR set to: 1
 28838  007120  0527               	decf	(_var_sys+39)& (0+255),w,b	;volatile
 28839  007122  A4D8               	btfss	status,2,c
 28840  007124  D002               	goto	l24833
 28841                           
 28842                           ; BSR set to: 1
 28843                           ;inputs_MC50.c: 706:             {;inputs_MC50.c: 707:                 var_sys.StateMoto
      +                          r = Stopped;
 28844  007126  0E00               	movlw	0
 28845  007128                     L102:
 28846  007128  6F00               	movwf	_var_sys& (0+255),b	;volatile
 28847  00712A                     l24833:
 28848                           
 28849                           ;inputs_MC50.c: 713:         if((var_sys_NVM.securityBandIsON == 1 || var_sys_NVM.Stopbo
      +                          ton == 1) && (var_sys.SecurityBarIsObstructed == YES && var_sys.AutoInversionActive == N
      +                          O))
 28850  00712A  0100               	movlb	0	; () banked
 28851  00712C  05A1               	decf	(_var_sys_NVM+9)& (0+255),w,b	;volatile
 28852  00712E  B4D8               	btfsc	status,2,c
 28853  007130  D003               	goto	u30500
 28854                           
 28855                           ; BSR set to: 0
 28856  007132  05AE               	decf	(_var_sys_NVM+22)& (0+255),w,b	;volatile
 28857  007134  A4D8               	btfss	status,2,c
 28858  007136  0012               	return	
 28859  007138                     u30500:
 28860                           
 28861                           ; BSR set to: 0
 28862  007138  0101               	movlb	1	; () banked
 28863  00713A  0502               	decf	(_var_sys+2)& (0+255),w,b	;volatile
 28864  00713C  A4D8               	btfss	status,2,c
 28865  00713E  0012               	return	
 28866                           
 28867                           ; BSR set to: 1
 28868  007140  5127               	movf	(_var_sys+39)& (0+255),w,b	;volatile
 28869  007142  A4D8               	btfss	status,2,c
 28870  007144  0012               	return	
 28871                           
 28872                           ; BSR set to: 1
 28873                           ;inputs_MC50.c: 714:         {;inputs_MC50.c: 723:             if(var_sys.StateMotor == 
      +                          InClose && (var_sys_NVM.securityBandInOpen == 0))
 28874  007146  0E03               	movlw	3
 28875  007148  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 28876  00714A  A4D8               	btfss	status,2,c
 28877  00714C  D008               	goto	l24847
 28878                           
 28879                           ; BSR set to: 1
 28880  00714E  0100               	movlb	0	; () banked
 28881  007150  51A3               	movf	(_var_sys_NVM+11)& (0+255),w,b	;volatile
 28882  007152  A4D8               	btfss	status,2,c
 28883  007154  D004               	goto	l24847
 28884                           
 28885                           ; BSR set to: 0
 28886                           ;inputs_MC50.c: 724:             {;inputs_MC50.c: 725:                 var_sys.StateMoto
      +                          r = Stopped;
 28887  007156  0E00               	movlw	0
 28888  007158  0101               	movlb	1	; () banked
 28889  00715A  6F00               	movwf	_var_sys& (0+255),b	;volatile
 28890                           
 28891                           ;inputs_MC50.c: 727:             }
 28892  00715C  0012               	return	
 28893  00715E                     l24847:
 28894  00715E  0101               	movlb	1	; () banked
 28895  007160  0500               	decf	_var_sys& (0+255),w,b	;volatile
 28896  007162  B4D8               	btfsc	status,2,c
 28897  007164  D004               	goto	u30560
 28898                           
 28899                           ; BSR set to: 1
 28900  007166  0E02               	movlw	2
 28901  007168  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 28902  00716A  A4D8               	btfss	status,2,c
 28903  00716C  D004               	goto	u30570
 28904  00716E                     u30560:
 28905                           
 28906                           ; BSR set to: 1
 28907  00716E  0100               	movlb	0	; () banked
 28908  007170  05A3               	decf	(_var_sys_NVM+11)& (0+255),w,b	;volatile
 28909  007172  B4D8               	btfsc	status,2,c
 28910  007174  D004               	goto	u30580
 28911  007176                     u30570:
 28912  007176  0100               	movlb	0	; () banked
 28913  007178  05AE               	decf	(_var_sys_NVM+22)& (0+255),w,b	;volatile
 28914  00717A  A4D8               	btfss	status,2,c
 28915  00717C  0012               	return	
 28916  00717E                     u30580:
 28917                           
 28918                           ; BSR set to: 0
 28919                           ;inputs_MC50.c: 730:             {;inputs_MC50.c: 731:                 var_sys.StateMoto
      +                          r = Stopped;
 28920  00717E  0E00               	movlw	0
 28921  007180  0101               	movlb	1	; () banked
 28922  007182  6F00               	movwf	_var_sys& (0+255),b	;volatile
 28923  007184  0012               	return	
 28924  007186                     __end_of_ControlInputs:
 28925                           	callstack 0
 28926                           
 28927 ;; *************** function _ControlCurrent *****************
 28928 ;; Defined at:
 28929 ;;		line 342 in file "controlCurrent_MC50.c"
 28930 ;; Parameters:    Size  Location     Type
 28931 ;;		None
 28932 ;; Auto vars:     Size  Location     Type
 28933 ;;		None
 28934 ;; Return value:  Size  Location     Type
 28935 ;;                  1    wreg      void 
 28936 ;; Registers used:
 28937 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28938 ;; Tracked objects:
 28939 ;;		On entry : 3E/1
 28940 ;;		On exit  : 3E/0
 28941 ;;		Unchanged: 0/0
 28942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28943 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28944 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28945 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28946 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28947 ;;Total ram usage:        4 bytes
 28948 ;; Hardware stack levels used: 1
 28949 ;; Hardware stack levels required when called: 6
 28950 ;; This function calls:
 28951 ;;		_GetMotorPower
 28952 ;;		_getCurrentComparator
 28953 ;;		_refreshADCZeroOffset
 28954 ;;		_refreshCurrent
 28955 ;; This function is called by:
 28956 ;;		_main
 28957 ;; This function uses a non-reentrant model
 28958 ;;
 28959                           
 28960                           	psect	text119
 28961  006A1C                     __ptext119:
 28962                           	callstack 0
 28963  006A1C                     _ControlCurrent:
 28964                           	callstack 24
 28965                           
 28966                           ;controlCurrent_MC50.c: 345:     refreshCurrent();
 28967                           
 28968                           ;incstack = 0
 28969  006A1C  EC98  F049         	call	_refreshCurrent	;wreg free
 28970                           
 28971                           ;controlCurrent_MC50.c: 351:     refreshADCZeroOffset();
 28972  006A20  EC56  F03A         	call	_refreshADCZeroOffset	;wreg free
 28973                           
 28974                           ;controlCurrent_MC50.c: 354:     var_sys.velocityActual = GetMotorPower();
 28975  006A24  EC18  F03D         	call	_GetMotorPower	;wreg free
 28976  006A28  6E23               	movwf	??_ControlCurrent^0,c
 28977  006A2A  5023               	movf	??_ControlCurrent^0,w,c
 28978  006A2C  6F38               	movwf	(_var_sys+56)& (0+255),b	;volatile
 28979  006A2E  6B39               	clrf	(_var_sys+57)& (0+255),b	;volatile
 28980                           
 28981                           ; BSR set to: 1
 28982                           ;controlCurrent_MC50.c: 355:     var_sys.ActualComparatorCurrent = getCurrentComparator(
      +                          );
 28983  006A30  EC20  F031         	call	_getCurrentComparator	;wreg free
 28984  006A34  C016  F134         	movff	?_getCurrentComparator,_var_sys+52	;volatile
 28985  006A38  C017  F135         	movff	?_getCurrentComparator+1,_var_sys+53	;volatile
 28986  006A3C  C018  F136         	movff	?_getCurrentComparator+2,_var_sys+54	;volatile
 28987  006A40  C019  F137         	movff	?_getCurrentComparator+3,_var_sys+55	;volatile
 28988                           
 28989                           ; BSR set to: 1
 28990                           ;controlCurrent_MC50.c: 357:     if(var_sys.StateMotor == Stopped)
 28991  006A44  5100               	movf	_var_sys& (0+255),w,b	;volatile
 28992  006A46  A4D8               	btfss	status,2,c
 28993  006A48  D00F               	goto	l24503
 28994                           
 28995                           ; BSR set to: 1
 28996                           ;controlCurrent_MC50.c: 358:     {;controlCurrent_MC50.c: 360:         numberOfErrorCurr
      +                          ent=0;
 28997  006A4A  0E00               	movlw	0
 28998  006A4C  0100               	movlb	0	; () banked
 28999  006A4E  6F8E               	movwf	_numberOfErrorCurrent& (0+255),b	;volatile
 29000                           
 29001                           ;controlCurrent_MC50.c: 361:         var_sys.CurrentAlarmIsOn=NO;
 29002  006A50  0E00               	movlw	0
 29003  006A52  0101               	movlb	1	; () banked
 29004  006A54  6F41               	movwf	(_var_sys+65)& (0+255),b	;volatile
 29005                           
 29006                           ;controlCurrent_MC50.c: 362:         var_sys.InvertionCurrentOpening=NO;
 29007  006A56  0E00               	movlw	0
 29008  006A58  6F45               	movwf	(_var_sys+69)& (0+255),b	;volatile
 29009                           
 29010                           ;controlCurrent_MC50.c: 363:         var_sys.InvertionCurrentClosing=NO;
 29011  006A5A  0E00               	movlw	0
 29012  006A5C  6F44               	movwf	(_var_sys+68)& (0+255),b	;volatile
 29013                           
 29014                           ;controlCurrent_MC50.c: 364:         ts_system.TimeTransitionDecelaration=(1000/50);
 29015  006A5E  0E00               	movlw	0
 29016  006A60  6FD8               	movwf	(_ts_system+57)& (0+255),b	;volatile
 29017  006A62  0E14               	movlw	20
 29018  006A64  6FD7               	movwf	(_ts_system+56)& (0+255),b	;volatile
 29019                           
 29020                           ;controlCurrent_MC50.c: 365:     }
 29021  006A66  0012               	return	
 29022  006A68                     l24503:
 29023                           
 29024                           ; BSR set to: 1
 29025  006A68  517B               	movf	_powerControl_st& (0+255),w,b
 29026  006A6A  A4D8               	btfss	status,2,c
 29027  006A6C  D05D               	goto	l24537
 29028                           
 29029                           ; BSR set to: 1
 29030                           ;controlCurrent_MC50.c: 368:     {;controlCurrent_MC50.c: 376:         ts_system.TimeTra
      +                          nsitionDecelaration=(1000/50);
 29031  006A6E  0E00               	movlw	0
 29032  006A70  6FD8               	movwf	(_ts_system+57)& (0+255),b	;volatile
 29033  006A72  0E14               	movlw	20
 29034  006A74  6FD7               	movwf	(_ts_system+56)& (0+255),b	;volatile
 29035                           
 29036                           ; BSR set to: 1
 29037                           ;controlCurrent_MC50.c: 377:         if (( var_sys.ActualCurrent>var_sys.ActualComparato
      +                          rCurrent ) && (ts_system.TimeChargeCondesador<=0)&&var_sys_NVM.motorSensitivity!=0 && ts
      +                          _system.TimeReleCapacitor<=0)
 29038  006A76  512E               	movf	(_var_sys+46)& (0+255),w,b	;volatile
 29039  006A78  6E23               	movwf	??_ControlCurrent^0,c
 29040  006A7A  512F               	movf	(_var_sys+47)& (0+255),w,b	;volatile
 29041  006A7C  6E24               	movwf	(??_ControlCurrent+1)^0,c
 29042  006A7E  6A25               	clrf	(??_ControlCurrent+2)^0,c
 29043  006A80  6A26               	clrf	(??_ControlCurrent+3)^0,c
 29044  006A82  5023               	movf	??_ControlCurrent^0,w,c
 29045  006A84  5D34               	subwf	(_var_sys+52)& (0+255),w,b	;volatile
 29046  006A86  5024               	movf	(??_ControlCurrent+1)^0,w,c
 29047  006A88  5935               	subwfb	(_var_sys+53)& (0+255),w,b	;volatile
 29048  006A8A  5025               	movf	(??_ControlCurrent+2)^0,w,c
 29049  006A8C  5936               	subwfb	(_var_sys+54)& (0+255),w,b	;volatile
 29050  006A8E  5026               	movf	(??_ControlCurrent+3)^0,w,c
 29051  006A90  5937               	subwfb	(_var_sys+55)& (0+255),w,b	;volatile
 29052  006A92  B0D8               	btfsc	status,0,c
 29053  006A94  D03E               	goto	l24535
 29054                           
 29055                           ; BSR set to: 1
 29056  006A96  BFBA               	btfsc	(_ts_system+27)& (0+255),7,b	;volatile
 29057  006A98  D005               	goto	u29630
 29058  006A9A  51BA               	movf	(_ts_system+27)& (0+255),w,b	;volatile
 29059  006A9C  E13A               	bnz	l24535
 29060  006A9E  05B9               	decf	(_ts_system+26)& (0+255),w,b	;volatile
 29061  006AA0  B0D8               	btfsc	status,0,c
 29062  006AA2  D037               	goto	l24535
 29063  006AA4                     u29630:
 29064                           
 29065                           ; BSR set to: 1
 29066  006AA4  0100               	movlb	0	; () banked
 29067  006AA6  519B               	movf	(_var_sys_NVM+3)& (0+255),w,b	;volatile
 29068  006AA8  B4D8               	btfsc	status,2,c
 29069  006AAA  D033               	goto	l24535
 29070                           
 29071                           ; BSR set to: 0
 29072  006AAC  0101               	movlb	1	; () banked
 29073  006AAE  BFE2               	btfsc	(_ts_system+67)& (0+255),7,b	;volatile
 29074  006AB0  D005               	goto	u29650
 29075  006AB2  51E2               	movf	(_ts_system+67)& (0+255),w,b	;volatile
 29076  006AB4  E12E               	bnz	l24535
 29077  006AB6  05E1               	decf	(_ts_system+66)& (0+255),w,b	;volatile
 29078  006AB8  B0D8               	btfsc	status,0,c
 29079  006ABA  D02B               	goto	l24535
 29080  006ABC                     u29650:
 29081                           
 29082                           ; BSR set to: 1
 29083                           ;controlCurrent_MC50.c: 378:         {;controlCurrent_MC50.c: 379:              if (numb
      +                          erOfErrorCurrent >=1)
 29084  006ABC  0100               	movlb	0	; () banked
 29085  006ABE  518E               	movf	_numberOfErrorCurrent& (0+255),w,b	;volatile
 29086  006AC0  B4D8               	btfsc	status,2,c
 29087  006AC2  D00B               	goto	l24521
 29088                           
 29089                           ; BSR set to: 0
 29090                           ;controlCurrent_MC50.c: 380:              {;controlCurrent_MC50.c: 381:                 
      +                           if(erroranterior > var_sys.ActualCurrent )
 29091  006AC4  0101               	movlb	1	; () banked
 29092  006AC6  518D               	movf	_erroranterior& (0+255),w,b	;volatile
 29093  006AC8  5D2E               	subwf	(_var_sys+46)& (0+255),w,b	;volatile
 29094  006ACA  518E               	movf	(_erroranterior+1)& (0+255),w,b	;volatile
 29095  006ACC  592F               	subwfb	(_var_sys+47)& (0+255),w,b	;volatile
 29096  006ACE  B0D8               	btfsc	status,0,c
 29097  006AD0  D004               	goto	l24521
 29098                           
 29099                           ; BSR set to: 1
 29100                           ;controlCurrent_MC50.c: 382:                  {;controlCurrent_MC50.c: 383:             
      +                                 numberOfErrorCurrent = 0;
 29101  006AD2  0E00               	movlw	0
 29102  006AD4  0100               	movlb	0	; () banked
 29103  006AD6  6F8E               	movwf	_numberOfErrorCurrent& (0+255),b	;volatile
 29104                           
 29105                           ;controlCurrent_MC50.c: 384:                  }
 29106  006AD8  D002               	goto	l24523
 29107  006ADA                     l24521:
 29108                           
 29109                           ;controlCurrent_MC50.c: 386:                  {;controlCurrent_MC50.c: 387:             
      +                                 numberOfErrorCurrent++;
 29110  006ADA  0100               	movlb	0	; () banked
 29111  006ADC  2B8E               	incf	_numberOfErrorCurrent& (0+255),f,b	;volatile
 29112  006ADE                     l24523:
 29113                           
 29114                           ; BSR set to: 0
 29115                           ;controlCurrent_MC50.c: 389:                  erroranterior = var_sys.ActualCurrent;
 29116  006ADE  C12E  F18D         	movff	_var_sys+46,_erroranterior	;volatile
 29117  006AE2  C12F  F18E         	movff	_var_sys+47,_erroranterior+1	;volatile
 29118                           
 29119                           ; BSR set to: 0
 29120                           ;controlCurrent_MC50.c: 398:             if(ts_system.TimeCurrentWaitForAlarm<=0&&number
      +                          OfErrorCurrent>1)
 29121                           
 29122                           ;controlCurrent_MC50.c: 390:              }
 29123  006AE6  0101               	movlb	1	; () banked
 29124  006AE8  BFCE               	btfsc	(_ts_system+47)& (0+255),7,b	;volatile
 29125  006AEA  D005               	goto	u29680
 29126  006AEC  51CE               	movf	(_ts_system+47)& (0+255),w,b	;volatile
 29127  006AEE  E14F               	bnz	l1405
 29128  006AF0  05CD               	decf	(_ts_system+46)& (0+255),w,b	;volatile
 29129  006AF2  B0D8               	btfsc	status,0,c
 29130  006AF4  0012               	return	
 29131  006AF6                     u29680:
 29132                           
 29133                           ; BSR set to: 1
 29134  006AF6  0E01               	movlw	1
 29135  006AF8  0100               	movlb	0	; () banked
 29136  006AFA  658E               	cpfsgt	_numberOfErrorCurrent& (0+255),b	;volatile
 29137  006AFC  0012               	return	
 29138                           
 29139                           ; BSR set to: 0
 29140                           ;controlCurrent_MC50.c: 399:             {;controlCurrent_MC50.c: 400:                 v
      +                          ar_sys.StateMotor = Stopped;
 29141  006AFE  0E00               	movlw	0
 29142  006B00  0101               	movlb	1	; () banked
 29143  006B02  6F00               	movwf	_var_sys& (0+255),b	;volatile
 29144                           
 29145                           ;controlCurrent_MC50.c: 401:                 ts_system.TimeCurrentAlarm= (1000/50)*10;
 29146  006B04  0E00               	movlw	0
 29147  006B06  6FCA               	movwf	(_ts_system+43)& (0+255),b	;volatile
 29148  006B08  0EC8               	movlw	200
 29149  006B0A  6FC9               	movwf	(_ts_system+42)& (0+255),b	;volatile
 29150                           
 29151                           ;controlCurrent_MC50.c: 402:                 var_sys.CurrentAlarmIsOn=YES;
 29152  006B0C  0E01               	movlw	1
 29153  006B0E  6F41               	movwf	(_var_sys+65)& (0+255),b	;volatile
 29154  006B10  0012               	return	
 29155  006B12                     l24535:
 29156                           
 29157                           ;controlCurrent_MC50.c: 409:         {;controlCurrent_MC50.c: 410:             numberOfE
      +                          rrorCurrent=0;
 29158  006B12  0E00               	movlw	0
 29159  006B14  0100               	movlb	0	; () banked
 29160  006B16  6F8E               	movwf	_numberOfErrorCurrent& (0+255),b	;volatile
 29161                           
 29162                           ;controlCurrent_MC50.c: 411:             var_sys.CurrentAlarmIsOn=NO;
 29163  006B18  0E00               	movlw	0
 29164  006B1A  0101               	movlb	1	; () banked
 29165  006B1C  6F41               	movwf	(_var_sys+65)& (0+255),b	;volatile
 29166                           
 29167                           ;controlCurrent_MC50.c: 412:             var_sys.InvertionCurrentOpening=NO;
 29168  006B1E  0E00               	movlw	0
 29169  006B20  6F45               	movwf	(_var_sys+69)& (0+255),b	;volatile
 29170                           
 29171                           ;controlCurrent_MC50.c: 413:             var_sys.InvertionCurrentClosing=NO;
 29172  006B22  0E00               	movlw	0
 29173  006B24  6F44               	movwf	(_var_sys+68)& (0+255),b	;volatile
 29174  006B26  0012               	return	
 29175  006B28                     l24537:
 29176                           
 29177                           ; BSR set to: 1
 29178                           ;controlCurrent_MC50.c: 419:     {;controlCurrent_MC50.c: 420:         if( ( var_sys.Act
      +                          ualHistCurrent<var_sys.ActualComparatorCurrent ) && (ts_system.TimeChargeCondesador<=0)&
      +                          &ts_system.TimeTransitionDecelaration<=0&&var_sys_NVM.decelarationSensivity!=0)
 29179  006B28  5134               	movf	(_var_sys+52)& (0+255),w,b	;volatile
 29180  006B2A  5D30               	subwf	(_var_sys+48)& (0+255),w,b	;volatile
 29181  006B2C  5135               	movf	(_var_sys+53)& (0+255),w,b	;volatile
 29182  006B2E  5931               	subwfb	(_var_sys+49)& (0+255),w,b	;volatile
 29183  006B30  5136               	movf	(_var_sys+54)& (0+255),w,b	;volatile
 29184  006B32  5932               	subwfb	(_var_sys+50)& (0+255),w,b	;volatile
 29185  006B34  5137               	movf	(_var_sys+55)& (0+255),w,b	;volatile
 29186  006B36  5933               	subwfb	(_var_sys+51)& (0+255),w,b	;volatile
 29187  006B38  B0D8               	btfsc	status,0,c
 29188  006B3A  D7EB               	goto	l24535
 29189                           
 29190                           ; BSR set to: 1
 29191  006B3C  BFBA               	btfsc	(_ts_system+27)& (0+255),7,b	;volatile
 29192  006B3E  D005               	goto	u29710
 29193  006B40  51BA               	movf	(_ts_system+27)& (0+255),w,b	;volatile
 29194  006B42  E1E7               	bnz	l24535
 29195  006B44  05B9               	decf	(_ts_system+26)& (0+255),w,b	;volatile
 29196  006B46  B0D8               	btfsc	status,0,c
 29197  006B48  D7E4               	goto	l24535
 29198  006B4A                     u29710:
 29199                           
 29200                           ; BSR set to: 1
 29201  006B4A  BFD8               	btfsc	(_ts_system+57)& (0+255),7,b	;volatile
 29202  006B4C  D005               	goto	u29720
 29203  006B4E  51D8               	movf	(_ts_system+57)& (0+255),w,b	;volatile
 29204  006B50  E1E0               	bnz	l24535
 29205  006B52  05D7               	decf	(_ts_system+56)& (0+255),w,b	;volatile
 29206  006B54  B0D8               	btfsc	status,0,c
 29207  006B56  D7DD               	goto	l24535
 29208  006B58                     u29720:
 29209                           
 29210                           ; BSR set to: 1
 29211  006B58  0100               	movlb	0	; () banked
 29212  006B5A  51A7               	movf	(_var_sys_NVM+15)& (0+255),w,b	;volatile
 29213  006B5C  B4D8               	btfsc	status,2,c
 29214  006B5E  D7D9               	goto	l24535
 29215                           
 29216                           ; BSR set to: 0
 29217                           ;controlCurrent_MC50.c: 421:         {;controlCurrent_MC50.c: 423:             numberOfE
      +                          rrorCurrent++;
 29218  006B60  2B8E               	incf	_numberOfErrorCurrent& (0+255),f,b	;volatile
 29219                           
 29220                           ; BSR set to: 0
 29221                           ;controlCurrent_MC50.c: 424:             if(ts_system.TimeCurrentWaitForAlarm<=0&&number
      +                          OfErrorCurrent>2)
 29222  006B62  0101               	movlb	1	; () banked
 29223  006B64  BFCE               	btfsc	(_ts_system+47)& (0+255),7,b	;volatile
 29224  006B66  D005               	goto	u29740
 29225  006B68  51CE               	movf	(_ts_system+47)& (0+255),w,b	;volatile
 29226  006B6A  E111               	bnz	l1405
 29227  006B6C  05CD               	decf	(_ts_system+46)& (0+255),w,b	;volatile
 29228  006B6E  B0D8               	btfsc	status,0,c
 29229  006B70  0012               	return	
 29230  006B72                     u29740:
 29231                           
 29232                           ; BSR set to: 1
 29233  006B72  0E02               	movlw	2
 29234  006B74  0100               	movlb	0	; () banked
 29235  006B76  658E               	cpfsgt	_numberOfErrorCurrent& (0+255),b	;volatile
 29236  006B78  0012               	return	
 29237                           
 29238                           ; BSR set to: 0
 29239                           ;controlCurrent_MC50.c: 425:             {;controlCurrent_MC50.c: 426:                 v
      +                          ar_sys.StateMotor = Stopped;
 29240  006B7A  0E00               	movlw	0
 29241  006B7C  0101               	movlb	1	; () banked
 29242  006B7E  6F00               	movwf	_var_sys& (0+255),b	;volatile
 29243                           
 29244                           ;controlCurrent_MC50.c: 427:                 ts_system.TimeCurrentAlarm= (1000/50)*10;
 29245  006B80  0E00               	movlw	0
 29246  006B82  6FCA               	movwf	(_ts_system+43)& (0+255),b	;volatile
 29247  006B84  0EC8               	movlw	200
 29248  006B86  6FC9               	movwf	(_ts_system+42)& (0+255),b	;volatile
 29249                           
 29250                           ;controlCurrent_MC50.c: 428:                 var_sys.CurrentAlarmIsOn=YES;
 29251  006B88  0E01               	movlw	1
 29252  006B8A  6F41               	movwf	(_var_sys+65)& (0+255),b	;volatile
 29253  006B8C  0012               	return	
 29254  006B8E                     l1405:
 29255  006B8E  0012               	return		;funcret
 29256  006B90                     __end_of_ControlCurrent:
 29257                           	callstack 0
 29258                           
 29259 ;; *************** function _refreshCurrent *****************
 29260 ;; Defined at:
 29261 ;;		line 233 in file "controlCurrent_MC50.c"
 29262 ;; Parameters:    Size  Location     Type
 29263 ;;		None
 29264 ;; Auto vars:     Size  Location     Type
 29265 ;;		None
 29266 ;; Return value:  Size  Location     Type
 29267 ;;                  1    wreg      void 
 29268 ;; Registers used:
 29269 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29270 ;; Tracked objects:
 29271 ;;		On entry : 3E/1
 29272 ;;		On exit  : 3F/0
 29273 ;;		Unchanged: 0/0
 29274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29275 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29276 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29277 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29278 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29279 ;;Total ram usage:        0 bytes
 29280 ;; Hardware stack levels used: 1
 29281 ;; Hardware stack levels required when called: 5
 29282 ;; This function calls:
 29283 ;;		_saveEnergyADCHist
 29284 ;;		_sumEnergyADC
 29285 ;;		_sumHIST
 29286 ;; This function is called by:
 29287 ;;		_ControlCurrent
 29288 ;; This function uses a non-reentrant model
 29289 ;;
 29290                           
 29291                           	psect	text120
 29292  009330                     __ptext120:
 29293                           	callstack 0
 29294  009330                     _refreshCurrent:
 29295                           	callstack 24
 29296                           
 29297                           ;controlCurrent_MC50.c: 238:     if ( (var_sys_NVM.electricBrake==1) && (ts_system.TimeE
      +                          lectricBrake>0) )
 29298                           
 29299                           ;incstack = 0
 29300  009330  0100               	movlb	0	; () banked
 29301  009332  05AF               	decf	(_var_sys_NVM+23)& (0+255),w,b	;volatile
 29302  009334  A4D8               	btfss	status,2,c
 29303  009336  D008               	goto	l22681
 29304                           
 29305                           ; BSR set to: 0
 29306  009338  0101               	movlb	1	; () banked
 29307  00933A  BFC8               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 29308  00933C  D005               	goto	l22681
 29309  00933E  51C8               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 29310  009340  E109               	bnz	l1372
 29311  009342  05C7               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 29312  009344  B0D8               	btfsc	status,0,c
 29313  009346  D006               	goto	l1372
 29314  009348                     l22681:
 29315                           
 29316                           ;controlCurrent_MC50.c: 243:     {;controlCurrent_MC50.c: 245:         var_sys.ActualCur
      +                          rent=sumEnergyADC();
 29317  009348  ECFB  F040         	call	_sumEnergyADC	;wreg free
 29318  00934C  C010  F12E         	movff	?_sumEnergyADC,_var_sys+46	;volatile
 29319  009350  C011  F12F         	movff	?_sumEnergyADC+1,_var_sys+47	;volatile
 29320  009354                     l1372:
 29321                           
 29322                           ; BSR set to: 1
 29323                           ;controlCurrent_MC50.c: 248:     saveEnergyADCHist(var_sys.ActualCurrent);
 29324  009354  C12E  F010         	movff	_var_sys+46,saveEnergyADCHist@valueToSave	;volatile
 29325  009358  C12F  F011         	movff	_var_sys+47,saveEnergyADCHist@valueToSave+1	;volatile
 29326  00935C  ECBD  F04C         	call	_saveEnergyADCHist	;wreg free
 29327                           
 29328                           ;controlCurrent_MC50.c: 250:     var_sys.ActualHistCurrent=sumHIST();
 29329  009360  EC53  F03B         	call	_sumHIST	;wreg free
 29330  009364  C010  F130         	movff	?_sumHIST,_var_sys+48	;volatile
 29331  009368  C011  F131         	movff	?_sumHIST+1,_var_sys+49	;volatile
 29332  00936C  C012  F132         	movff	?_sumHIST+2,_var_sys+50	;volatile
 29333  009370  C013  F133         	movff	?_sumHIST+3,_var_sys+51	;volatile
 29334                           
 29335                           ; BSR set to: 0
 29336  009374  0012               	return		;funcret
 29337  009376                     __end_of_refreshCurrent:
 29338                           	callstack 0
 29339                           
 29340 ;; *************** function _sumHIST *****************
 29341 ;; Defined at:
 29342 ;;		line 199 in file "controlCurrent_MC50.c"
 29343 ;; Parameters:    Size  Location     Type
 29344 ;;		None
 29345 ;; Auto vars:     Size  Location     Type
 29346 ;;  sumH            4   27[COMRAM] unsigned long 
 29347 ;;  min             2   25[COMRAM] unsigned int 
 29348 ;;  max             2   23[COMRAM] unsigned int 
 29349 ;;  i               1   31[COMRAM] unsigned char 
 29350 ;; Return value:  Size  Location     Type
 29351 ;;                  4   15[COMRAM] unsigned long 
 29352 ;; Registers used:
 29353 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 29354 ;; Tracked objects:
 29355 ;;		On entry : 3F/0
 29356 ;;		On exit  : 3F/0
 29357 ;;		Unchanged: 3F/0
 29358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29359 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29360 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29361 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29362 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29363 ;;Total ram usage:       17 bytes
 29364 ;; Hardware stack levels used: 1
 29365 ;; Hardware stack levels required when called: 4
 29366 ;; This function calls:
 29367 ;;		Nothing
 29368 ;; This function is called by:
 29369 ;;		_refreshCurrent
 29370 ;; This function uses a non-reentrant model
 29371 ;;
 29372                           
 29373                           	psect	text121
 29374  0076A6                     __ptext121:
 29375                           	callstack 0
 29376  0076A6                     _sumHIST:
 29377                           	callstack 24
 29378                           
 29379                           ; BSR set to: 0
 29380                           ;controlCurrent_MC50.c: 201:     unsigned char i;;controlCurrent_MC50.c: 202:     unsign
      +                          ed long sumH = 0;
 29381                           
 29382                           ; BSR set to: 0
 29383                           ;incstack = 0
 29384  0076A6  0E00               	movlw	0
 29385  0076A8  6E1C               	movwf	sumHIST@sumH^0,c
 29386  0076AA  0E00               	movlw	0
 29387  0076AC  6E1D               	movwf	(sumHIST@sumH+1)^0,c
 29388  0076AE  0E00               	movlw	0
 29389  0076B0  6E1E               	movwf	(sumHIST@sumH+2)^0,c
 29390  0076B2  0E00               	movlw	0
 29391  0076B4  6E1F               	movwf	(sumHIST@sumH+3)^0,c
 29392                           
 29393                           ;controlCurrent_MC50.c: 203:     unsigned int max=0;
 29394  0076B6  0E00               	movlw	0
 29395  0076B8  6E19               	movwf	(sumHIST@max+1)^0,c
 29396  0076BA  0E00               	movlw	0
 29397  0076BC  6E18               	movwf	sumHIST@max^0,c
 29398                           
 29399                           ; BSR set to: 0
 29400                           ;controlCurrent_MC50.c: 204:     unsigned int min=0xFFFF;
 29401  0076BE  681A               	setf	sumHIST@min^0,c
 29402  0076C0  681B               	setf	(sumHIST@min+1)^0,c
 29403                           
 29404                           ;controlCurrent_MC50.c: 207:     for( i = 0; i<(10); i++)
 29405  0076C2  0E00               	movlw	0
 29406  0076C4  6E20               	movwf	sumHIST@i^0,c
 29407  0076C6                     l21209:
 29408                           
 29409                           ; BSR set to: 0
 29410                           ;controlCurrent_MC50.c: 208:     {;controlCurrent_MC50.c: 209:         sumH=sumH+SumEner
      +                          gyADCHist_array[i];
 29411  0076C6  5020               	movf	sumHIST@i^0,w,c
 29412  0076C8  0D02               	mullw	2
 29413  0076CA  0E60               	movlw	low _SumEnergyADCHist_array
 29414  0076CC  24F3               	addwf	243,w,c
 29415  0076CE  6ED9               	movwf	fsr2l,c
 29416  0076D0  0E02               	movlw	high _SumEnergyADCHist_array
 29417  0076D2  20F4               	addwfc	prodh,w,c
 29418  0076D4  6EDA               	movwf	fsr2h,c
 29419  0076D6  CFDE F014          	movff	postinc2,??_sumHIST
 29420  0076DA  CFDD F015          	movff	postdec2,??_sumHIST+1
 29421  0076DE  5014               	movf	??_sumHIST^0,w,c
 29422  0076E0  241C               	addwf	sumHIST@sumH^0,w,c
 29423  0076E2  6E1C               	movwf	sumHIST@sumH^0,c
 29424  0076E4  5015               	movf	(??_sumHIST+1)^0,w,c
 29425  0076E6  201D               	addwfc	(sumHIST@sumH+1)^0,w,c
 29426  0076E8  6E1D               	movwf	(sumHIST@sumH+1)^0,c
 29427  0076EA  0E00               	movlw	0
 29428  0076EC  201E               	addwfc	(sumHIST@sumH+2)^0,w,c
 29429  0076EE  6E1E               	movwf	(sumHIST@sumH+2)^0,c
 29430  0076F0  0E00               	movlw	0
 29431  0076F2  201F               	addwfc	(sumHIST@sumH+3)^0,w,c
 29432  0076F4  6E1F               	movwf	(sumHIST@sumH+3)^0,c
 29433                           
 29434                           ;controlCurrent_MC50.c: 212:         if(SumEnergyADCHist_array[i]>max)
 29435  0076F6  5020               	movf	sumHIST@i^0,w,c
 29436  0076F8  0D02               	mullw	2
 29437  0076FA  0E60               	movlw	low _SumEnergyADCHist_array
 29438  0076FC  24F3               	addwf	243,w,c
 29439  0076FE  6ED9               	movwf	fsr2l,c
 29440  007700  0E02               	movlw	high _SumEnergyADCHist_array
 29441  007702  20F4               	addwfc	prodh,w,c
 29442  007704  6EDA               	movwf	fsr2h,c
 29443  007706  50DE               	movf	postinc2,w,c
 29444  007708  5C18               	subwf	sumHIST@max^0,w,c
 29445  00770A  50DE               	movf	postinc2,w,c
 29446  00770C  5819               	subwfb	(sumHIST@max+1)^0,w,c
 29447  00770E  B0D8               	btfsc	status,0,c
 29448  007710  D00C               	goto	l1366
 29449                           
 29450                           ; BSR set to: 0
 29451                           ;controlCurrent_MC50.c: 213:         {;controlCurrent_MC50.c: 214:             max=SumEn
      +                          ergyADCHist_array[i];
 29452  007712  5020               	movf	sumHIST@i^0,w,c
 29453  007714  0D02               	mullw	2
 29454  007716  0E60               	movlw	low _SumEnergyADCHist_array
 29455  007718  24F3               	addwf	243,w,c
 29456  00771A  6ED9               	movwf	fsr2l,c
 29457  00771C  0E02               	movlw	high _SumEnergyADCHist_array
 29458  00771E  20F4               	addwfc	prodh,w,c
 29459  007720  6EDA               	movwf	fsr2h,c
 29460  007722  CFDE F018          	movff	postinc2,sumHIST@max
 29461  007726  CFDD F019          	movff	postdec2,sumHIST@max+1
 29462  00772A                     l1366:
 29463                           
 29464                           ; BSR set to: 0
 29465                           ;controlCurrent_MC50.c: 218:         if(SumEnergyADCHist_array[i]<min)
 29466  00772A  5020               	movf	sumHIST@i^0,w,c
 29467  00772C  0D02               	mullw	2
 29468  00772E  0E60               	movlw	low _SumEnergyADCHist_array
 29469  007730  24F3               	addwf	243,w,c
 29470  007732  6ED9               	movwf	fsr2l,c
 29471  007734  0E02               	movlw	high _SumEnergyADCHist_array
 29472  007736  20F4               	addwfc	prodh,w,c
 29473  007738  6EDA               	movwf	fsr2h,c
 29474  00773A  501A               	movf	sumHIST@min^0,w,c
 29475  00773C  5CDE               	subwf	postinc2,w,c
 29476  00773E  501B               	movf	(sumHIST@min+1)^0,w,c
 29477  007740  58DE               	subwfb	postinc2,w,c
 29478  007742  B0D8               	btfsc	status,0,c
 29479  007744  D00C               	goto	l21215
 29480                           
 29481                           ; BSR set to: 0
 29482                           ;controlCurrent_MC50.c: 219:         {;controlCurrent_MC50.c: 220:             min=SumEn
      +                          ergyADCHist_array[i];
 29483  007746  5020               	movf	sumHIST@i^0,w,c
 29484  007748  0D02               	mullw	2
 29485  00774A  0E60               	movlw	low _SumEnergyADCHist_array
 29486  00774C  24F3               	addwf	243,w,c
 29487  00774E  6ED9               	movwf	fsr2l,c
 29488  007750  0E02               	movlw	high _SumEnergyADCHist_array
 29489  007752  20F4               	addwfc	prodh,w,c
 29490  007754  6EDA               	movwf	fsr2h,c
 29491  007756  CFDE F01A          	movff	postinc2,sumHIST@min
 29492  00775A  CFDD F01B          	movff	postdec2,sumHIST@min+1
 29493  00775E                     l21215:
 29494                           
 29495                           ; BSR set to: 0
 29496                           ;controlCurrent_MC50.c: 222:     }
 29497  00775E  2A20               	incf	sumHIST@i^0,f,c
 29498                           
 29499                           ; BSR set to: 0
 29500  007760  0E09               	movlw	9
 29501  007762  6420               	cpfsgt	sumHIST@i^0,c
 29502  007764  D7B0               	goto	l21209
 29503                           
 29504                           ; BSR set to: 0
 29505                           ;controlCurrent_MC50.c: 224:     sumH = sumH - ( max+min );
 29506  007766  501A               	movf	sumHIST@min^0,w,c
 29507  007768  2418               	addwf	sumHIST@max^0,w,c
 29508  00776A  6E14               	movwf	??_sumHIST^0,c
 29509  00776C  501B               	movf	(sumHIST@min+1)^0,w,c
 29510  00776E  2019               	addwfc	(sumHIST@max+1)^0,w,c
 29511  007770  6E15               	movwf	(??_sumHIST+1)^0,c
 29512  007772  6A16               	clrf	(??_sumHIST+2)^0,c
 29513  007774  6A17               	clrf	(??_sumHIST+3)^0,c
 29514  007776  5014               	movf	??_sumHIST^0,w,c
 29515  007778  5C1C               	subwf	sumHIST@sumH^0,w,c
 29516  00777A  6E1C               	movwf	sumHIST@sumH^0,c
 29517  00777C  5015               	movf	(??_sumHIST+1)^0,w,c
 29518  00777E  581D               	subwfb	(sumHIST@sumH+1)^0,w,c
 29519  007780  6E1D               	movwf	(sumHIST@sumH+1)^0,c
 29520  007782  5016               	movf	(??_sumHIST+2)^0,w,c
 29521  007784  581E               	subwfb	(sumHIST@sumH+2)^0,w,c
 29522  007786  6E1E               	movwf	(sumHIST@sumH+2)^0,c
 29523  007788  5017               	movf	(??_sumHIST+3)^0,w,c
 29524  00778A  581F               	subwfb	(sumHIST@sumH+3)^0,w,c
 29525  00778C  6E1F               	movwf	(sumHIST@sumH+3)^0,c
 29526                           
 29527                           ; BSR set to: 0
 29528                           ;controlCurrent_MC50.c: 226:     return sumH;
 29529  00778E  C01C  F010         	movff	sumHIST@sumH,?_sumHIST
 29530  007792  C01D  F011         	movff	sumHIST@sumH+1,?_sumHIST+1
 29531  007796  C01E  F012         	movff	sumHIST@sumH+2,?_sumHIST+2
 29532  00779A  C01F  F013         	movff	sumHIST@sumH+3,?_sumHIST+3
 29533                           
 29534                           ; BSR set to: 0
 29535  00779E  0012               	return		;funcret
 29536  0077A0                     __end_of_sumHIST:
 29537                           	callstack 0
 29538                           
 29539 ;; *************** function _sumEnergyADC *****************
 29540 ;; Defined at:
 29541 ;;		line 59 in file "controlCurrent_MC50.c"
 29542 ;; Parameters:    Size  Location     Type
 29543 ;;		None
 29544 ;; Auto vars:     Size  Location     Type
 29545 ;;  auxValue        2   21[COMRAM] unsigned int 
 29546 ;;  sumE            2   19[COMRAM] unsigned int 
 29547 ;;  i               1   23[COMRAM] unsigned char 
 29548 ;; Return value:  Size  Location     Type
 29549 ;;                  2   15[COMRAM] unsigned int 
 29550 ;; Registers used:
 29551 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 29552 ;; Tracked objects:
 29553 ;;		On entry : 3E/0
 29554 ;;		On exit  : 3F/1
 29555 ;;		Unchanged: 0/0
 29556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29557 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29558 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29559 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29560 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29561 ;;Total ram usage:        9 bytes
 29562 ;; Hardware stack levels used: 1
 29563 ;; Hardware stack levels required when called: 4
 29564 ;; This function calls:
 29565 ;;		Nothing
 29566 ;; This function is called by:
 29567 ;;		_refreshCurrent
 29568 ;; This function uses a non-reentrant model
 29569 ;;
 29570                           
 29571                           	psect	text122
 29572  0081F6                     __ptext122:
 29573                           	callstack 0
 29574  0081F6                     _sumEnergyADC:
 29575                           	callstack 24
 29576                           
 29577                           ;controlCurrent_MC50.c: 61:     unsigned char i;;controlCurrent_MC50.c: 63:     unsigned
      +                           int sumE = 0;
 29578                           
 29579                           ; BSR set to: 0
 29580                           ;incstack = 0
 29581  0081F6  0E00               	movlw	0
 29582  0081F8  6E15               	movwf	(sumEnergyADC@sumE+1)^0,c
 29583  0081FA  0E00               	movlw	0
 29584  0081FC  6E14               	movwf	sumEnergyADC@sumE^0,c
 29585                           
 29586                           ;controlCurrent_MC50.c: 72:     for ( i=0 ; i<(30) ; i++ )
 29587  0081FE  0E00               	movlw	0
 29588  008200  6E18               	movwf	sumEnergyADC@i^0,c
 29589  008202                     l21181:
 29590                           
 29591                           ;controlCurrent_MC50.c: 73:     {;controlCurrent_MC50.c: 83:         if ( ADC_array[i] >
      +                           var_sys.ADCZeroOffset )
 29592  008202  5018               	movf	sumEnergyADC@i^0,w,c
 29593  008204  0D02               	mullw	2
 29594  008206  0E00               	movlw	low _ADC_array
 29595  008208  24F3               	addwf	243,w,c
 29596  00820A  6ED9               	movwf	fsr2l,c
 29597  00820C  0E02               	movlw	high _ADC_array
 29598  00820E  20F4               	addwfc	prodh,w,c
 29599  008210  6EDA               	movwf	fsr2h,c
 29600  008212  50DE               	movf	postinc2,w,c
 29601  008214  0101               	movlb	1	; () banked
 29602  008216  5D4B               	subwf	(_var_sys+75)& (0+255),w,b	;volatile
 29603  008218  50DE               	movf	postinc2,w,c
 29604  00821A  594C               	subwfb	(_var_sys+76)& (0+255),w,b	;volatile
 29605  00821C  B0D8               	btfsc	status,0,c
 29606  00821E  D012               	goto	l21185
 29607                           
 29608                           ; BSR set to: 1
 29609                           ;controlCurrent_MC50.c: 84:         {;controlCurrent_MC50.c: 85:             auxValue = 
      +                          ( ADC_array[i] - var_sys.ADCZeroOffset );
 29610  008220  5018               	movf	sumEnergyADC@i^0,w,c
 29611  008222  0D02               	mullw	2
 29612  008224  0E00               	movlw	low _ADC_array
 29613  008226  24F3               	addwf	243,w,c
 29614  008228  6ED9               	movwf	fsr2l,c
 29615  00822A  0E02               	movlw	high _ADC_array
 29616  00822C  20F4               	addwfc	prodh,w,c
 29617  00822E  6EDA               	movwf	fsr2h,c
 29618  008230  CFDE F012          	movff	postinc2,??_sumEnergyADC
 29619  008234  CFDD F013          	movff	postdec2,??_sumEnergyADC+1
 29620  008238  514B               	movf	(_var_sys+75)& (0+255),w,b	;volatile
 29621  00823A  5C12               	subwf	??_sumEnergyADC^0,w,c
 29622  00823C  6E16               	movwf	sumEnergyADC@auxValue^0,c
 29623  00823E  514C               	movf	(_var_sys+76)& (0+255),w,b	;volatile
 29624  008240  5813               	subwfb	(??_sumEnergyADC+1)^0,w,c
 29625  008242  D011               	goto	L103
 29626  008244                     l21185:
 29627                           
 29628                           ; BSR set to: 1
 29629                           ;controlCurrent_MC50.c: 88:         {;controlCurrent_MC50.c: 89:            auxValue = (
      +                           var_sys.ADCZeroOffset - ADC_array[i] );
 29630  008244  5018               	movf	sumEnergyADC@i^0,w,c
 29631  008246  0D02               	mullw	2
 29632  008248  0E00               	movlw	low _ADC_array
 29633  00824A  24F3               	addwf	243,w,c
 29634  00824C  6ED9               	movwf	fsr2l,c
 29635  00824E  0E02               	movlw	high _ADC_array
 29636  008250  20F4               	addwfc	prodh,w,c
 29637  008252  6EDA               	movwf	fsr2h,c
 29638  008254  CFDE F012          	movff	postinc2,??_sumEnergyADC
 29639  008258  CFDD F013          	movff	postdec2,??_sumEnergyADC+1
 29640  00825C  5012               	movf	??_sumEnergyADC^0,w,c
 29641  00825E  5D4B               	subwf	(_var_sys+75)& (0+255),w,b	;volatile
 29642  008260  6E16               	movwf	sumEnergyADC@auxValue^0,c
 29643  008262  5013               	movf	(??_sumEnergyADC+1)^0,w,c
 29644  008264  594C               	subwfb	(_var_sys+76)& (0+255),w,b	;volatile
 29645  008266                     L103:
 29646  008266  6E17               	movwf	(sumEnergyADC@auxValue+1)^0,c
 29647                           
 29648                           ; BSR set to: 1
 29649                           ;controlCurrent_MC50.c: 91:         sumE += auxValue;
 29650  008268  5016               	movf	sumEnergyADC@auxValue^0,w,c
 29651  00826A  2614               	addwf	sumEnergyADC@sumE^0,f,c
 29652  00826C  5017               	movf	(sumEnergyADC@auxValue+1)^0,w,c
 29653  00826E  2215               	addwfc	(sumEnergyADC@sumE+1)^0,f,c
 29654                           
 29655                           ; BSR set to: 1
 29656                           ;controlCurrent_MC50.c: 94:     }
 29657  008270  2A18               	incf	sumEnergyADC@i^0,f,c
 29658                           
 29659                           ; BSR set to: 1
 29660  008272  0E1D               	movlw	29
 29661  008274  6418               	cpfsgt	sumEnergyADC@i^0,c
 29662  008276  D7C5               	goto	l21181
 29663                           
 29664                           ; BSR set to: 1
 29665                           ;controlCurrent_MC50.c: 96:     return sumE;
 29666  008278  C014  F010         	movff	sumEnergyADC@sumE,?_sumEnergyADC
 29667  00827C  C015  F011         	movff	sumEnergyADC@sumE+1,?_sumEnergyADC+1
 29668                           
 29669                           ; BSR set to: 1
 29670  008280  0012               	return		;funcret
 29671  008282                     __end_of_sumEnergyADC:
 29672                           	callstack 0
 29673                           
 29674 ;; *************** function _saveEnergyADCHist *****************
 29675 ;; Defined at:
 29676 ;;		line 182 in file "controlCurrent_MC50.c"
 29677 ;; Parameters:    Size  Location     Type
 29678 ;;  valueToSave     2   15[COMRAM] unsigned int 
 29679 ;; Auto vars:     Size  Location     Type
 29680 ;;		None
 29681 ;; Return value:  Size  Location     Type
 29682 ;;                  1    wreg      void 
 29683 ;; Registers used:
 29684 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 29685 ;; Tracked objects:
 29686 ;;		On entry : 3F/1
 29687 ;;		On exit  : 3F/0
 29688 ;;		Unchanged: 0/0
 29689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29690 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29693 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29694 ;;Total ram usage:        2 bytes
 29695 ;; Hardware stack levels used: 1
 29696 ;; Hardware stack levels required when called: 4
 29697 ;; This function calls:
 29698 ;;		Nothing
 29699 ;; This function is called by:
 29700 ;;		_refreshCurrent
 29701 ;; This function uses a non-reentrant model
 29702 ;;
 29703                           
 29704                           	psect	text123
 29705  00997A                     __ptext123:
 29706                           	callstack 0
 29707  00997A                     _saveEnergyADCHist:
 29708                           	callstack 24
 29709                           
 29710                           ; BSR set to: 1
 29711                           ;controlCurrent_MC50.c: 182: void saveEnergyADCHist(unsigned int valueToSave);controlCur
      +                          rent_MC50.c: 183: {;controlCurrent_MC50.c: 184:     if(idxSaveEnergyADCHist>=10)
 29712                           
 29713                           ; BSR set to: 1
 29714                           ;incstack = 0
 29715  00997A  0E09               	movlw	9
 29716  00997C  0100               	movlb	0	; () banked
 29717  00997E  6590               	cpfsgt	_idxSaveEnergyADCHist& (0+255),b	;volatile
 29718  009980  D002               	goto	l21197
 29719                           
 29720                           ; BSR set to: 0
 29721                           ;controlCurrent_MC50.c: 185:     {;controlCurrent_MC50.c: 186:         idxSaveEnergyADCH
      +                          ist=0;
 29722  009982  0E00               	movlw	0
 29723  009984  6F90               	movwf	_idxSaveEnergyADCHist& (0+255),b	;volatile
 29724  009986                     l21197:
 29725                           
 29726                           ; BSR set to: 0
 29727                           ;controlCurrent_MC50.c: 189:     SumEnergyADCHist_array[idxSaveEnergyADCHist]=valueToSav
      +                          e;
 29728  009986  5190               	movf	_idxSaveEnergyADCHist& (0+255),w,b	;volatile
 29729  009988  0D02               	mullw	2
 29730  00998A  0E60               	movlw	low _SumEnergyADCHist_array
 29731  00998C  24F3               	addwf	243,w,c
 29732  00998E  6ED9               	movwf	fsr2l,c
 29733  009990  0E02               	movlw	high _SumEnergyADCHist_array
 29734  009992  20F4               	addwfc	prodh,w,c
 29735  009994  6EDA               	movwf	fsr2h,c
 29736  009996  C010  FFDE         	movff	saveEnergyADCHist@valueToSave,postinc2
 29737  00999A  C011  FFDD         	movff	saveEnergyADCHist@valueToSave+1,postdec2
 29738                           
 29739                           ; BSR set to: 0
 29740                           ;controlCurrent_MC50.c: 190:     idxSaveEnergyADCHist++;
 29741  00999E  2B90               	incf	_idxSaveEnergyADCHist& (0+255),f,b	;volatile
 29742                           
 29743                           ; BSR set to: 0
 29744  0099A0  0012               	return		;funcret
 29745  0099A2                     __end_of_saveEnergyADCHist:
 29746                           	callstack 0
 29747                           
 29748 ;; *************** function _refreshADCZeroOffset *****************
 29749 ;; Defined at:
 29750 ;;		line 103 in file "controlCurrent_MC50.c"
 29751 ;; Parameters:    Size  Location     Type
 29752 ;;		None
 29753 ;; Auto vars:     Size  Location     Type
 29754 ;;  media           2   23[COMRAM] unsigned int 
 29755 ;;  i               1   22[COMRAM] unsigned char 
 29756 ;; Return value:  Size  Location     Type
 29757 ;;                  1    wreg      void 
 29758 ;; Registers used:
 29759 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29760 ;; Tracked objects:
 29761 ;;		On entry : 3F/0
 29762 ;;		On exit  : 3C/0
 29763 ;;		Unchanged: 0/0
 29764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29765 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29766 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29767 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29768 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29769 ;;Total ram usage:        3 bytes
 29770 ;; Hardware stack levels used: 1
 29771 ;; Hardware stack levels required when called: 5
 29772 ;; This function calls:
 29773 ;;		___lwdiv
 29774 ;; This function is called by:
 29775 ;;		_ControlCurrent
 29776 ;; This function uses a non-reentrant model
 29777 ;;
 29778                           
 29779                           	psect	text124
 29780  0074AC                     __ptext124:
 29781                           	callstack 0
 29782  0074AC                     _refreshADCZeroOffset:
 29783                           	callstack 24
 29784                           
 29785                           ; BSR set to: 0
 29786                           ;controlCurrent_MC50.c: 105:     unsigned char i;;controlCurrent_MC50.c: 106:     unsign
      +                          ed int media = 0;
 29787                           
 29788                           ; BSR set to: 0
 29789                           ;incstack = 0
 29790  0074AC  0E00               	movlw	0
 29791  0074AE  6E19               	movwf	(refreshADCZeroOffset@media+1)^0,c
 29792  0074B0  0E00               	movlw	0
 29793  0074B2  6E18               	movwf	refreshADCZeroOffset@media^0,c
 29794                           
 29795                           ;controlCurrent_MC50.c: 109:     if ( var_sys.StateMotor == Stopped )
 29796  0074B4  0101               	movlb	1	; () banked
 29797  0074B6  5100               	movf	_var_sys& (0+255),w,b	;volatile
 29798  0074B8  A4D8               	btfss	status,2,c
 29799  0074BA  0012               	return	
 29800                           
 29801                           ; BSR set to: 1
 29802                           ;controlCurrent_MC50.c: 110:     {;controlCurrent_MC50.c: 111:         if ( ts_system.Ti
      +                          meStopADCZeroOffsetCalc <= 0 )
 29803  0074BC  BFDE               	btfsc	(_ts_system+63)& (0+255),7,b	;volatile
 29804  0074BE  D005               	goto	u26050
 29805  0074C0  51DE               	movf	(_ts_system+63)& (0+255),w,b	;volatile
 29806  0074C2  E172               	bnz	l1357
 29807  0074C4  05DD               	decf	(_ts_system+62)& (0+255),w,b	;volatile
 29808  0074C6  B0D8               	btfsc	status,0,c
 29809  0074C8  0012               	return	
 29810  0074CA                     u26050:
 29811                           
 29812                           ; BSR set to: 1
 29813                           ;controlCurrent_MC50.c: 112:         {;controlCurrent_MC50.c: 113:             ts_system
      +                          .TimeStopADCZeroOffsetCalc = (1000/50);
 29814  0074CA  0E00               	movlw	0
 29815  0074CC  6FDE               	movwf	(_ts_system+63)& (0+255),b	;volatile
 29816  0074CE  0E14               	movlw	20
 29817  0074D0  6FDD               	movwf	(_ts_system+62)& (0+255),b	;volatile
 29818                           
 29819                           ;controlCurrent_MC50.c: 121:             for ( i=0 ; i<(30) ; i++ )
 29820  0074D2  0E00               	movlw	0
 29821  0074D4  6E17               	movwf	refreshADCZeroOffset@i^0,c
 29822  0074D6                     l22633:
 29823                           
 29824                           ;controlCurrent_MC50.c: 122:             {;controlCurrent_MC50.c: 126:                 m
      +                          edia += ADC_array[i];
 29825  0074D6  5017               	movf	refreshADCZeroOffset@i^0,w,c
 29826  0074D8  0D02               	mullw	2
 29827  0074DA  0E00               	movlw	low _ADC_array
 29828  0074DC  24F3               	addwf	243,w,c
 29829  0074DE  6ED9               	movwf	fsr2l,c
 29830  0074E0  0E02               	movlw	high _ADC_array
 29831  0074E2  20F4               	addwfc	prodh,w,c
 29832  0074E4  6EDA               	movwf	fsr2h,c
 29833  0074E6  50DE               	movf	postinc2,w,c
 29834  0074E8  2618               	addwf	refreshADCZeroOffset@media^0,f,c
 29835  0074EA  50DD               	movf	postdec2,w,c
 29836  0074EC  2219               	addwfc	(refreshADCZeroOffset@media+1)^0,f,c
 29837                           
 29838                           ;controlCurrent_MC50.c: 128:             }
 29839  0074EE  2A17               	incf	refreshADCZeroOffset@i^0,f,c
 29840  0074F0  0E1D               	movlw	29
 29841  0074F2  6417               	cpfsgt	refreshADCZeroOffset@i^0,c
 29842  0074F4  D7F0               	goto	l22633
 29843                           
 29844                           ;controlCurrent_MC50.c: 130:             media = media/30;
 29845  0074F6  C018  F010         	movff	refreshADCZeroOffset@media,___lwdiv@dividend
 29846  0074FA  C019  F011         	movff	refreshADCZeroOffset@media+1,___lwdiv@dividend+1
 29847  0074FE  0E00               	movlw	0
 29848  007500  6E13               	movwf	(___lwdiv@divisor+1)^0,c
 29849  007502  0E1E               	movlw	30
 29850  007504  6E12               	movwf	___lwdiv@divisor^0,c
 29851  007506  EC88  F048         	call	___lwdiv	;wreg free
 29852  00750A  C010  F018         	movff	?___lwdiv,refreshADCZeroOffset@media
 29853  00750E  C011  F019         	movff	?___lwdiv+1,refreshADCZeroOffset@media+1
 29854                           
 29855                           ;controlCurrent_MC50.c: 131:             if ( (media>(510 -20)) && (media<(510 +20)) )
 29856  007512  0EEB               	movlw	235
 29857  007514  5C18               	subwf	refreshADCZeroOffset@media^0,w,c
 29858  007516  0E01               	movlw	1
 29859  007518  5819               	subwfb	(refreshADCZeroOffset@media+1)^0,w,c
 29860  00751A  A0D8               	btfss	status,0,c
 29861  00751C  D006               	goto	l22647
 29862  00751E  0E12               	movlw	18
 29863  007520  5C18               	subwf	refreshADCZeroOffset@media^0,w,c
 29864  007522  0E02               	movlw	2
 29865  007524  5819               	subwfb	(refreshADCZeroOffset@media+1)^0,w,c
 29866  007526  A0D8               	btfss	status,0,c
 29867  007528  D004               	goto	l22649
 29868  00752A                     l22647:
 29869                           
 29870                           ;controlCurrent_MC50.c: 136:             {;controlCurrent_MC50.c: 138:                 m
      +                          edia = 510;
 29871  00752A  0E01               	movlw	1
 29872  00752C  6E19               	movwf	(refreshADCZeroOffset@media+1)^0,c
 29873  00752E  0EFE               	movlw	254
 29874  007530  6E18               	movwf	refreshADCZeroOffset@media^0,c
 29875  007532                     l22649:
 29876                           
 29877                           ;controlCurrent_MC50.c: 142:             if ( idxAdcZeroAquisition >= 30 )
 29878  007532  0E1D               	movlw	29
 29879  007534  0100               	movlb	0	; () banked
 29880  007536  658F               	cpfsgt	_idxAdcZeroAquisition& (0+255),b	;volatile
 29881  007538  D002               	goto	l22653
 29882                           
 29883                           ; BSR set to: 0
 29884                           ;controlCurrent_MC50.c: 143:             {;controlCurrent_MC50.c: 144:                 i
      +                          dxAdcZeroAquisition = 0;
 29885  00753A  0E00               	movlw	0
 29886  00753C  6F8F               	movwf	_idxAdcZeroAquisition& (0+255),b	;volatile
 29887  00753E                     l22653:
 29888                           
 29889                           ; BSR set to: 0
 29890                           ;controlCurrent_MC50.c: 146:             ADC_zero_array[idxAdcZeroAquisition] = media;
 29891  00753E  518F               	movf	_idxAdcZeroAquisition& (0+255),w,b	;volatile
 29892  007540  0D02               	mullw	2
 29893  007542  0E96               	movlw	low _ADC_zero_array
 29894  007544  24F3               	addwf	243,w,c
 29895  007546  6ED9               	movwf	fsr2l,c
 29896  007548  0E03               	movlw	high _ADC_zero_array
 29897  00754A  20F4               	addwfc	prodh,w,c
 29898  00754C  6EDA               	movwf	fsr2h,c
 29899  00754E  C018  FFDE         	movff	refreshADCZeroOffset@media,postinc2
 29900  007552  C019  FFDD         	movff	refreshADCZeroOffset@media+1,postdec2
 29901                           
 29902                           ; BSR set to: 0
 29903                           ;controlCurrent_MC50.c: 147:             idxAdcZeroAquisition++;
 29904  007556  2B8F               	incf	_idxAdcZeroAquisition& (0+255),f,b	;volatile
 29905                           
 29906                           ; BSR set to: 0
 29907                           ;controlCurrent_MC50.c: 150:             media = 0;
 29908  007558  0E00               	movlw	0
 29909  00755A  6E19               	movwf	(refreshADCZeroOffset@media+1)^0,c
 29910  00755C  0E00               	movlw	0
 29911  00755E  6E18               	movwf	refreshADCZeroOffset@media^0,c
 29912                           
 29913                           ; BSR set to: 0
 29914                           ;controlCurrent_MC50.c: 151:             for ( i=0 ; i<(30) ; i++ )
 29915  007560  0E00               	movlw	0
 29916  007562  6E17               	movwf	refreshADCZeroOffset@i^0,c
 29917  007564                     l22665:
 29918                           
 29919                           ; BSR set to: 0
 29920                           ;controlCurrent_MC50.c: 152:             {;controlCurrent_MC50.c: 158:                 m
      +                          edia += ADC_zero_array[i];
 29921  007564  5017               	movf	refreshADCZeroOffset@i^0,w,c
 29922  007566  0D02               	mullw	2
 29923  007568  0E96               	movlw	low _ADC_zero_array
 29924  00756A  24F3               	addwf	243,w,c
 29925  00756C  6ED9               	movwf	fsr2l,c
 29926  00756E  0E03               	movlw	high _ADC_zero_array
 29927  007570  20F4               	addwfc	prodh,w,c
 29928  007572  6EDA               	movwf	fsr2h,c
 29929  007574  50DE               	movf	postinc2,w,c
 29930  007576  2618               	addwf	refreshADCZeroOffset@media^0,f,c
 29931  007578  50DD               	movf	postdec2,w,c
 29932  00757A  2219               	addwfc	(refreshADCZeroOffset@media+1)^0,f,c
 29933                           
 29934                           ; BSR set to: 0
 29935                           ;controlCurrent_MC50.c: 159:             }
 29936  00757C  2A17               	incf	refreshADCZeroOffset@i^0,f,c
 29937                           
 29938                           ; BSR set to: 0
 29939  00757E  0E1D               	movlw	29
 29940  007580  6417               	cpfsgt	refreshADCZeroOffset@i^0,c
 29941  007582  D7F0               	goto	l22665
 29942                           
 29943                           ; BSR set to: 0
 29944                           ;controlCurrent_MC50.c: 160:             media = media/30;
 29945  007584  C018  F010         	movff	refreshADCZeroOffset@media,___lwdiv@dividend
 29946  007588  C019  F011         	movff	refreshADCZeroOffset@media+1,___lwdiv@dividend+1
 29947  00758C  0E00               	movlw	0
 29948  00758E  6E13               	movwf	(___lwdiv@divisor+1)^0,c
 29949  007590  0E1E               	movlw	30
 29950  007592  6E12               	movwf	___lwdiv@divisor^0,c
 29951  007594  EC88  F048         	call	___lwdiv	;wreg free
 29952  007598  C010  F018         	movff	?___lwdiv,refreshADCZeroOffset@media
 29953  00759C  C011  F019         	movff	?___lwdiv+1,refreshADCZeroOffset@media+1
 29954                           
 29955                           ;controlCurrent_MC50.c: 162:             var_sys.ADCZeroOffset = media;
 29956  0075A0  C018  F14B         	movff	refreshADCZeroOffset@media,_var_sys+75	;volatile
 29957  0075A4  C019  F14C         	movff	refreshADCZeroOffset@media+1,_var_sys+76	;volatile
 29958  0075A8                     l1357:
 29959  0075A8  0012               	return		;funcret
 29960  0075AA                     __end_of_refreshADCZeroOffset:
 29961                           	callstack 0
 29962                           
 29963 ;; *************** function ___lwdiv *****************
 29964 ;; Defined at:
 29965 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\lwdiv.c"
 29966 ;; Parameters:    Size  Location     Type
 29967 ;;  dividend        2   15[COMRAM] unsigned int 
 29968 ;;  divisor         2   17[COMRAM] unsigned int 
 29969 ;; Auto vars:     Size  Location     Type
 29970 ;;  quotient        2   20[COMRAM] unsigned int 
 29971 ;;  counter         1   19[COMRAM] unsigned char 
 29972 ;; Return value:  Size  Location     Type
 29973 ;;                  2   15[COMRAM] unsigned int 
 29974 ;; Registers used:
 29975 ;;		wreg, status,2, status,0
 29976 ;; Tracked objects:
 29977 ;;		On entry : 3C/2
 29978 ;;		On exit  : 3C/0
 29979 ;;		Unchanged: 3C/0
 29980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29981 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29982 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29984 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29985 ;;Total ram usage:        7 bytes
 29986 ;; Hardware stack levels used: 1
 29987 ;; Hardware stack levels required when called: 4
 29988 ;; This function calls:
 29989 ;;		Nothing
 29990 ;; This function is called by:
 29991 ;;		_refreshADCZeroOffset
 29992 ;;		_sm_execute_menuConfiguration
 29993 ;; This function uses a non-reentrant model
 29994 ;;
 29995                           
 29996                           	psect	text125
 29997  009110                     __ptext125:
 29998                           	callstack 0
 29999  009110                     ___lwdiv:
 30000                           	callstack 24
 30001                           
 30002                           ;incstack = 0
 30003  009110  0E00               	movlw	0
 30004  009112  6E16               	movwf	(___lwdiv@quotient+1)^0,c
 30005  009114  0E00               	movlw	0
 30006  009116  6E15               	movwf	___lwdiv@quotient^0,c
 30007  009118  5012               	movf	___lwdiv@divisor^0,w,c
 30008  00911A  1013               	iorwf	(___lwdiv@divisor+1)^0,w,c
 30009  00911C  B4D8               	btfsc	status,2,c
 30010  00911E  D01C               	goto	l4279
 30011  009120  0E01               	movlw	1
 30012  009122  6E14               	movwf	___lwdiv@counter^0,c
 30013  009124  D004               	goto	l22477
 30014  009126                     l22475:
 30015  009126  90D8               	bcf	status,0,c
 30016  009128  3612               	rlcf	___lwdiv@divisor^0,f,c
 30017  00912A  3613               	rlcf	(___lwdiv@divisor+1)^0,f,c
 30018  00912C  2A14               	incf	___lwdiv@counter^0,f,c
 30019  00912E                     l22477:
 30020  00912E  AE13               	btfss	(___lwdiv@divisor+1)^0,7,c
 30021  009130  D7FA               	goto	l22475
 30022  009132                     u25980:
 30023  009132  90D8               	bcf	status,0,c
 30024  009134  3615               	rlcf	___lwdiv@quotient^0,f,c
 30025  009136  3616               	rlcf	(___lwdiv@quotient+1)^0,f,c
 30026  009138  5012               	movf	___lwdiv@divisor^0,w,c
 30027  00913A  5C10               	subwf	___lwdiv@dividend^0,w,c
 30028  00913C  5013               	movf	(___lwdiv@divisor+1)^0,w,c
 30029  00913E  5811               	subwfb	(___lwdiv@dividend+1)^0,w,c
 30030  009140  A0D8               	btfss	status,0,c
 30031  009142  D005               	goto	l22487
 30032  009144  5012               	movf	___lwdiv@divisor^0,w,c
 30033  009146  5E10               	subwf	___lwdiv@dividend^0,f,c
 30034  009148  5013               	movf	(___lwdiv@divisor+1)^0,w,c
 30035  00914A  5A11               	subwfb	(___lwdiv@dividend+1)^0,f,c
 30036  00914C  8015               	bsf	___lwdiv@quotient^0,0,c
 30037  00914E                     l22487:
 30038  00914E  90D8               	bcf	status,0,c
 30039  009150  3213               	rrcf	(___lwdiv@divisor+1)^0,f,c
 30040  009152  3212               	rrcf	___lwdiv@divisor^0,f,c
 30041  009154  2E14               	decfsz	___lwdiv@counter^0,f,c
 30042  009156  D7ED               	goto	u25980
 30043  009158                     l4279:
 30044  009158  C015  F010         	movff	___lwdiv@quotient,?___lwdiv
 30045  00915C  C016  F011         	movff	___lwdiv@quotient+1,?___lwdiv+1
 30046  009160  0012               	return		;funcret
 30047  009162                     __end_of___lwdiv:
 30048                           	callstack 0
 30049                           
 30050 ;; *************** function _getCurrentComparator *****************
 30051 ;; Defined at:
 30052 ;;		line 264 in file "controlCurrent_MC50.c"
 30053 ;; Parameters:    Size  Location     Type
 30054 ;;		None
 30055 ;; Auto vars:     Size  Location     Type
 30056 ;;  x               1   33[COMRAM] unsigned char 
 30057 ;;  tempOffset      2   31[COMRAM] unsigned int 
 30058 ;; Return value:  Size  Location     Type
 30059 ;;                  4   21[COMRAM] unsigned long 
 30060 ;; Registers used:
 30061 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 30062 ;; Tracked objects:
 30063 ;;		On entry : 3F/1
 30064 ;;		On exit  : 3F/1
 30065 ;;		Unchanged: 0/0
 30066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30067 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30068 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30069 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30070 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30071 ;;Total ram usage:       13 bytes
 30072 ;; Hardware stack levels used: 1
 30073 ;; Hardware stack levels required when called: 5
 30074 ;; This function calls:
 30075 ;;		___wmul
 30076 ;; This function is called by:
 30077 ;;		_ControlCurrent
 30078 ;; This function uses a non-reentrant model
 30079 ;;
 30080                           
 30081                           	psect	text126
 30082  006240                     __ptext126:
 30083                           	callstack 0
 30084  006240                     _getCurrentComparator:
 30085                           	callstack 24
 30086                           
 30087                           ; BSR set to: 1
 30088                           ;controlCurrent_MC50.c: 269:     if(ts_system.timeSoftStart>0)
 30089                           
 30090                           ; BSR set to: 1
 30091                           
 30092                           ;incstack = 0
 30093  006240  BFB6               	btfsc	(_ts_system+23)& (0+255),7,b	;volatile
 30094  006242  D00A               	goto	l22689
 30095  006244  51B6               	movf	(_ts_system+23)& (0+255),w,b	;volatile
 30096  006246  E103               	bnz	u26130
 30097  006248  05B5               	decf	(_ts_system+22)& (0+255),w,b	;volatile
 30098  00624A  A0D8               	btfss	status,0,c
 30099  00624C  D005               	goto	l22689
 30100  00624E                     u26130:
 30101                           
 30102                           ; BSR set to: 1
 30103                           ;controlCurrent_MC50.c: 270:     {;controlCurrent_MC50.c: 271:         ts_system.timewai
      +                          tBeforeSoftStart=(1000/50);
 30104  00624E  0E00               	movlw	0
 30105  006250  6FDA               	movwf	(_ts_system+59)& (0+255),b	;volatile
 30106  006252  0E14               	movlw	20
 30107  006254  6FD9               	movwf	(_ts_system+58)& (0+255),b	;volatile
 30108  006256  D007               	goto	u26140
 30109  006258                     l22689:
 30110                           
 30111                           ; BSR set to: 1
 30112  006258  BFDA               	btfsc	(_ts_system+59)& (0+255),7,b	;volatile
 30113  00625A  D009               	goto	l22693
 30114  00625C  51DA               	movf	(_ts_system+59)& (0+255),w,b	;volatile
 30115  00625E  E103               	bnz	u26140
 30116  006260  05D9               	decf	(_ts_system+58)& (0+255),w,b	;volatile
 30117  006262  A0D8               	btfss	status,0,c
 30118  006264  D004               	goto	l22693
 30119  006266                     u26140:
 30120                           
 30121                           ; BSR set to: 1
 30122                           ;controlCurrent_MC50.c: 276:     {;controlCurrent_MC50.c: 277:         tempOffset=1200;
 30123  006266  0E04               	movlw	4
 30124  006268  6E21               	movwf	(getCurrentComparator@tempOffset+1)^0,c
 30125  00626A  0EB0               	movlw	176
 30126  00626C  D003               	goto	L104
 30127  00626E                     l22693:
 30128                           
 30129                           ; BSR set to: 1
 30130                           ;controlCurrent_MC50.c: 280:     {;controlCurrent_MC50.c: 281:         tempOffset=0;
 30131  00626E  0E00               	movlw	0
 30132  006270  6E21               	movwf	(getCurrentComparator@tempOffset+1)^0,c
 30133  006272  0E00               	movlw	0
 30134  006274                     L104:
 30135  006274  6E20               	movwf	getCurrentComparator@tempOffset^0,c
 30136                           
 30137                           ; BSR set to: 1
 30138                           ;controlCurrent_MC50.c: 284:     if(powerControl_st.decelarationActive==NO)
 30139  006276  517B               	movf	_powerControl_st& (0+255),w,b
 30140  006278  A4D8               	btfss	status,2,c
 30141  00627A  D05B               	goto	l22709
 30142                           
 30143                           ; BSR set to: 1
 30144                           ;controlCurrent_MC50.c: 285:     {;controlCurrent_MC50.c: 286:         if(var_sys.StateM
      +                          otor==InClose)
 30145  00627C  0E03               	movlw	3
 30146  00627E  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 30147  006280  A4D8               	btfss	status,2,c
 30148  006282  D005               	goto	l22699
 30149                           
 30150                           ; BSR set to: 1
 30151                           ;controlCurrent_MC50.c: 287:         {;controlCurrent_MC50.c: 288:             var_sys.A
      +                          ctualComparatorCurrent=var_sys_NVM.learningCurrentNormalClose;
 30152  006284  C0C8  F134         	movff	_var_sys_NVM+48,_var_sys+52	;volatile
 30153  006288  C0C9  F135         	movff	_var_sys_NVM+49,_var_sys+53	;volatile
 30154  00628C  D004               	goto	L105
 30155  00628E                     l22699:
 30156                           
 30157                           ; BSR set to: 1
 30158                           ;controlCurrent_MC50.c: 291:         {;controlCurrent_MC50.c: 292:             var_sys.A
      +                          ctualComparatorCurrent=var_sys_NVM.learningCurrentNormalOpen;
 30159  00628E  C0CA  F134         	movff	_var_sys_NVM+50,_var_sys+52	;volatile
 30160  006292  C0CB  F135         	movff	_var_sys_NVM+51,_var_sys+53	;volatile
 30161  006296                     L105:
 30162  006296  6B36               	clrf	(_var_sys+54)& (0+255),b	;volatile
 30163  006298  6B37               	clrf	(_var_sys+55)& (0+255),b	;volatile
 30164                           
 30165                           ; BSR set to: 1
 30166                           ;controlCurrent_MC50.c: 295:         if(var_sys.ActualComparatorCurrent<=100||(var_sys.A
      +                          ctualComparatorCurrent>(510*30)))
 30167  00629A  5137               	movf	(_var_sys+55)& (0+255),w,b	;volatile
 30168  00629C  1136               	iorwf	(_var_sys+54)& (0+255),w,b	;volatile
 30169  00629E  1135               	iorwf	(_var_sys+53)& (0+255),w,b	;volatile
 30170  0062A0  E104               	bnz	u26170
 30171  0062A2  0E65               	movlw	101
 30172  0062A4  5D34               	subwf	(_var_sys+52)& (0+255),w,b	;volatile
 30173  0062A6  A0D8               	btfss	status,0,c
 30174  0062A8  D009               	goto	u26180
 30175  0062AA                     u26170:
 30176                           
 30177                           ; BSR set to: 1
 30178  0062AA  5137               	movf	(_var_sys+55)& (0+255),w,b	;volatile
 30179  0062AC  1136               	iorwf	(_var_sys+54)& (0+255),w,b	;volatile
 30180  0062AE  E106               	bnz	u26180
 30181  0062B0  0EC5               	movlw	197
 30182  0062B2  5D34               	subwf	(_var_sys+52)& (0+255),w,b	;volatile
 30183  0062B4  0E3B               	movlw	59
 30184  0062B6  5935               	subwfb	(_var_sys+53)& (0+255),w,b	;volatile
 30185  0062B8  A0D8               	btfss	status,0,c
 30186  0062BA  D004               	goto	l1383
 30187  0062BC                     u26180:
 30188                           
 30189                           ; BSR set to: 1
 30190                           ;controlCurrent_MC50.c: 296:         {;controlCurrent_MC50.c: 297:              var_sys.
      +                          ActualComparatorCurrent=(510*30);
 30191  0062BC  0EC4               	movlw	196
 30192  0062BE  6F34               	movwf	(_var_sys+52)& (0+255),b	;volatile
 30193  0062C0  0E3B               	movlw	59
 30194  0062C2  D058               	goto	L107
 30195  0062C4                     l1383:
 30196                           
 30197                           ; BSR set to: 1
 30198                           ;controlCurrent_MC50.c: 300:         {;controlCurrent_MC50.c: 301:             unsigned 
      +                          char x=var_sys_NVM.motorSensitivity;
 30199  0062C4  C09B  F022         	movff	_var_sys_NVM+3,getCurrentComparator@x	;volatile
 30200                           
 30201                           ; BSR set to: 1
 30202                           ;controlCurrent_MC50.c: 307:            var_sys.ActualComparatorCurrent=var_sys.ActualCo
      +                          mparatorCurrent+((10*(x*x))+(-200*x)+1300);
 30203  0062C8  5022               	movf	getCurrentComparator@x^0,w,c
 30204  0062CA  0222               	mulwf	getCurrentComparator@x^0,c
 30205  0062CC  CFF3 F010          	movff	prodl,___wmul@multiplier
 30206  0062D0  CFF4 F011          	movff	prodh,___wmul@multiplier+1
 30207  0062D4  0E00               	movlw	0
 30208  0062D6  6E13               	movwf	(___wmul@multiplicand+1)^0,c
 30209  0062D8  0E0A               	movlw	10
 30210  0062DA  6E12               	movwf	___wmul@multiplicand^0,c
 30211  0062DC  ECF7  F04C         	call	___wmul	;wreg free
 30212  0062E0  C010  F01A         	movff	?___wmul,??_getCurrentComparator
 30213  0062E4  C011  F01B         	movff	?___wmul+1,??_getCurrentComparator+1
 30214  0062E8  C022  F010         	movff	getCurrentComparator@x,___wmul@multiplier
 30215  0062EC  6A11               	clrf	(___wmul@multiplier+1)^0,c
 30216  0062EE  0EFF               	movlw	255
 30217  0062F0  6E13               	movwf	(___wmul@multiplicand+1)^0,c
 30218  0062F2  0E38               	movlw	56
 30219  0062F4  6E12               	movwf	___wmul@multiplicand^0,c
 30220  0062F6  ECF7  F04C         	call	___wmul	;wreg free
 30221  0062FA  5010               	movf	?___wmul^0,w,c
 30222  0062FC  261A               	addwf	??_getCurrentComparator^0,f,c
 30223  0062FE  5011               	movf	(?___wmul+1)^0,w,c
 30224  006300  221B               	addwfc	(??_getCurrentComparator+1)^0,f,c
 30225  006302  0E14               	movlw	20
 30226  006304  241A               	addwf	??_getCurrentComparator^0,w,c
 30227  006306  6E1C               	movwf	(??_getCurrentComparator+2)^0,c
 30228  006308  0E05               	movlw	5
 30229  00630A  201B               	addwfc	(??_getCurrentComparator+1)^0,w,c
 30230  00630C  6E1D               	movwf	(??_getCurrentComparator+3)^0,c
 30231  00630E  6A1E               	clrf	(??_getCurrentComparator+4)^0,c
 30232  006310  BE1D               	btfsc	(??_getCurrentComparator+3)^0,7,c
 30233  006312  061E               	decf	(??_getCurrentComparator+4)^0,f,c
 30234  006314  501E               	movf	(??_getCurrentComparator+4)^0,w,c
 30235  006316  6E1F               	movwf	(??_getCurrentComparator+5)^0,c
 30236  006318  0101               	movlb	1	; () banked
 30237  00631A  5134               	movf	(_var_sys+52)& (0+255),w,b	;volatile
 30238  00631C  241C               	addwf	(??_getCurrentComparator+2)^0,w,c
 30239  00631E  6F34               	movwf	(_var_sys+52)& (0+255),b	;volatile
 30240  006320  5135               	movf	(_var_sys+53)& (0+255),w,b	;volatile
 30241  006322  201D               	addwfc	(??_getCurrentComparator+3)^0,w,c
 30242  006324  6F35               	movwf	(_var_sys+53)& (0+255),b	;volatile
 30243  006326  5136               	movf	(_var_sys+54)& (0+255),w,b	;volatile
 30244  006328  201E               	addwfc	(??_getCurrentComparator+4)^0,w,c
 30245  00632A  6F36               	movwf	(_var_sys+54)& (0+255),b	;volatile
 30246  00632C  5137               	movf	(_var_sys+55)& (0+255),w,b	;volatile
 30247  00632E  201F               	addwfc	(??_getCurrentComparator+5)^0,w,c
 30248  006330  D046               	goto	L106
 30249  006332                     l22709:
 30250                           
 30251                           ; BSR set to: 1
 30252                           ;controlCurrent_MC50.c: 311:     {;controlCurrent_MC50.c: 312:         if(var_sys.StateM
      +                          otor==InClose)
 30253  006332  0E03               	movlw	3
 30254  006334  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 30255  006336  A4D8               	btfss	status,2,c
 30256  006338  D009               	goto	l1388
 30257                           
 30258                           ; BSR set to: 1
 30259                           ;controlCurrent_MC50.c: 313:         {;controlCurrent_MC50.c: 314:             var_sys.A
      +                          ctualComparatorCurrent=var_sys_NVM.learningCurrentDecelarationClose;
 30260  00633A  C0C0  F134         	movff	_var_sys_NVM+40,_var_sys+52	;volatile
 30261  00633E  C0C1  F135         	movff	_var_sys_NVM+41,_var_sys+53	;volatile
 30262  006342  C0C2  F136         	movff	_var_sys_NVM+42,_var_sys+54	;volatile
 30263  006346  C0C3  F137         	movff	_var_sys_NVM+43,_var_sys+55	;volatile
 30264                           
 30265                           ;controlCurrent_MC50.c: 315:         }
 30266  00634A  D008               	goto	l22713
 30267  00634C                     l1388:
 30268                           
 30269                           ; BSR set to: 1
 30270                           ;controlCurrent_MC50.c: 317:         {;controlCurrent_MC50.c: 318:             var_sys.A
      +                          ctualComparatorCurrent=var_sys_NVM.learningCurrentDecelarationOpen ;
 30271  00634C  C0C4  F134         	movff	_var_sys_NVM+44,_var_sys+52	;volatile
 30272  006350  C0C5  F135         	movff	_var_sys_NVM+45,_var_sys+53	;volatile
 30273  006354  C0C6  F136         	movff	_var_sys_NVM+46,_var_sys+54	;volatile
 30274  006358  C0C7  F137         	movff	_var_sys_NVM+47,_var_sys+55	;volatile
 30275  00635C                     l22713:
 30276                           
 30277                           ; BSR set to: 1
 30278                           ;controlCurrent_MC50.c: 321:         if(var_sys.ActualComparatorCurrent<=5000)
 30279  00635C  5137               	movf	(_var_sys+55)& (0+255),w,b	;volatile
 30280  00635E  1136               	iorwf	(_var_sys+54)& (0+255),w,b	;volatile
 30281  006360  E10E               	bnz	l22717
 30282  006362  0E89               	movlw	137
 30283  006364  5D34               	subwf	(_var_sys+52)& (0+255),w,b	;volatile
 30284  006366  0E13               	movlw	19
 30285  006368  5935               	subwfb	(_var_sys+53)& (0+255),w,b	;volatile
 30286  00636A  B0D8               	btfsc	status,0,c
 30287  00636C  D008               	goto	l22717
 30288                           
 30289                           ; BSR set to: 1
 30290                           ;controlCurrent_MC50.c: 322:         {;controlCurrent_MC50.c: 323:             var_sys.A
      +                          ctualComparatorCurrent=5000;
 30291  00636E  0E88               	movlw	136
 30292  006370  6F34               	movwf	(_var_sys+52)& (0+255),b	;volatile
 30293  006372  0E13               	movlw	19
 30294  006374                     L107:
 30295  006374  6F35               	movwf	(_var_sys+53)& (0+255),b	;volatile
 30296  006376  0E00               	movlw	0
 30297  006378  6F36               	movwf	(_var_sys+54)& (0+255),b	;volatile
 30298  00637A  0E00               	movlw	0
 30299  00637C  D020               	goto	L106
 30300  00637E                     l22717:
 30301                           
 30302                           ; BSR set to: 1
 30303                           ;controlCurrent_MC50.c: 326:         {;controlCurrent_MC50.c: 327:             var_sys.A
      +                          ctualComparatorCurrent=var_sys.ActualComparatorCurrent-(1200 +(500*(10-var_sys_NVM.decel
      +                          arationSensivity)));
 30304  00637E  C0A7  F010         	movff	_var_sys_NVM+15,___wmul@multiplier	;volatile
 30305  006382  6A11               	clrf	(___wmul@multiplier+1)^0,c
 30306  006384  0EFE               	movlw	254
 30307  006386  6E13               	movwf	(___wmul@multiplicand+1)^0,c
 30308  006388  0E0C               	movlw	12
 30309  00638A  6E12               	movwf	___wmul@multiplicand^0,c
 30310  00638C  ECF7  F04C         	call	___wmul	;wreg free
 30311  006390  0E38               	movlw	56
 30312  006392  2410               	addwf	?___wmul^0,w,c
 30313  006394  6E1A               	movwf	??_getCurrentComparator^0,c
 30314  006396  0E18               	movlw	24
 30315  006398  2011               	addwfc	(?___wmul+1)^0,w,c
 30316  00639A  6E1B               	movwf	(??_getCurrentComparator+1)^0,c
 30317  00639C  6A1C               	clrf	(??_getCurrentComparator+2)^0,c
 30318  00639E  BE1B               	btfsc	(??_getCurrentComparator+1)^0,7,c
 30319  0063A0  061C               	decf	(??_getCurrentComparator+2)^0,f,c
 30320  0063A2  501C               	movf	(??_getCurrentComparator+2)^0,w,c
 30321  0063A4  6E1D               	movwf	(??_getCurrentComparator+3)^0,c
 30322  0063A6  501A               	movf	??_getCurrentComparator^0,w,c
 30323  0063A8  0101               	movlb	1	; () banked
 30324  0063AA  5D34               	subwf	(_var_sys+52)& (0+255),w,b	;volatile
 30325  0063AC  6F34               	movwf	(_var_sys+52)& (0+255),b	;volatile
 30326  0063AE  501B               	movf	(??_getCurrentComparator+1)^0,w,c
 30327  0063B0  5935               	subwfb	(_var_sys+53)& (0+255),w,b	;volatile
 30328  0063B2  6F35               	movwf	(_var_sys+53)& (0+255),b	;volatile
 30329  0063B4  501C               	movf	(??_getCurrentComparator+2)^0,w,c
 30330  0063B6  5936               	subwfb	(_var_sys+54)& (0+255),w,b	;volatile
 30331  0063B8  6F36               	movwf	(_var_sys+54)& (0+255),b	;volatile
 30332  0063BA  501D               	movf	(??_getCurrentComparator+3)^0,w,c
 30333  0063BC  5937               	subwfb	(_var_sys+55)& (0+255),w,b	;volatile
 30334  0063BE                     L106:
 30335  0063BE  6F37               	movwf	(_var_sys+55)& (0+255),b	;volatile
 30336                           
 30337                           ; BSR set to: 1
 30338                           ;controlCurrent_MC50.c: 332:     return var_sys.ActualComparatorCurrent+tempOffset;
 30339  0063C0  5020               	movf	getCurrentComparator@tempOffset^0,w,c
 30340  0063C2  2534               	addwf	(_var_sys+52)& (0+255),w,b	;volatile
 30341  0063C4  6E16               	movwf	?_getCurrentComparator^0,c
 30342  0063C6  5021               	movf	(getCurrentComparator@tempOffset+1)^0,w,c
 30343  0063C8  2135               	addwfc	(_var_sys+53)& (0+255),w,b	;volatile
 30344  0063CA  6E17               	movwf	(?_getCurrentComparator+1)^0,c
 30345  0063CC  0E00               	movlw	0
 30346  0063CE  2136               	addwfc	(_var_sys+54)& (0+255),w,b	;volatile
 30347  0063D0  6E18               	movwf	(?_getCurrentComparator+2)^0,c
 30348  0063D2  0E00               	movlw	0
 30349  0063D4  2137               	addwfc	(_var_sys+55)& (0+255),w,b	;volatile
 30350  0063D6  6E19               	movwf	(?_getCurrentComparator+3)^0,c
 30351                           
 30352                           ; BSR set to: 1
 30353  0063D8  0012               	return		;funcret
 30354  0063DA                     __end_of_getCurrentComparator:
 30355                           	callstack 0
 30356                           
 30357 ;; *************** function ___wmul *****************
 30358 ;; Defined at:
 30359 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\Umul16.c"
 30360 ;; Parameters:    Size  Location     Type
 30361 ;;  multiplier      2   15[COMRAM] unsigned int 
 30362 ;;  multiplicand    2   17[COMRAM] unsigned int 
 30363 ;; Auto vars:     Size  Location     Type
 30364 ;;  product         2   19[COMRAM] unsigned int 
 30365 ;; Return value:  Size  Location     Type
 30366 ;;                  2   15[COMRAM] unsigned int 
 30367 ;; Registers used:
 30368 ;;		wreg, status,2, status,0, prodl, prodh
 30369 ;; Tracked objects:
 30370 ;;		On entry : 0/0
 30371 ;;		On exit  : 0/0
 30372 ;;		Unchanged: 0/0
 30373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30374 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30375 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30377 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30378 ;;Total ram usage:        6 bytes
 30379 ;; Hardware stack levels used: 1
 30380 ;; Hardware stack levels required when called: 4
 30381 ;; This function calls:
 30382 ;;		Nothing
 30383 ;; This function is called by:
 30384 ;;		_getCurrentComparator
 30385 ;;		_getHopCode
 30386 ;; This function uses a non-reentrant model
 30387 ;;
 30388                           
 30389                           	psect	text127
 30390  0099EE                     __ptext127:
 30391                           	callstack 0
 30392  0099EE                     ___wmul:
 30393                           	callstack 22
 30394                           
 30395                           ; BSR set to: 1
 30396                           ;incstack = 0
 30397  0099EE  5010               	movf	___wmul@multiplier^0,w,c
 30398  0099F0  0212               	mulwf	___wmul@multiplicand^0,c
 30399  0099F2  CFF3 F014          	movff	prodl,___wmul@product
 30400  0099F6  CFF4 F015          	movff	prodh,___wmul@product+1
 30401  0099FA  5010               	movf	___wmul@multiplier^0,w,c
 30402  0099FC  0213               	mulwf	(___wmul@multiplicand+1)^0,c
 30403  0099FE  50F3               	movf	243,w,c
 30404  009A00  2615               	addwf	(___wmul@product+1)^0,f,c
 30405  009A02  5011               	movf	(___wmul@multiplier+1)^0,w,c
 30406  009A04  0212               	mulwf	___wmul@multiplicand^0,c
 30407  009A06  50F3               	movf	243,w,c
 30408  009A08  2615               	addwf	(___wmul@product+1)^0,f,c
 30409  009A0A  C014  F010         	movff	___wmul@product,?___wmul
 30410  009A0E  C015  F011         	movff	___wmul@product+1,?___wmul+1
 30411  009A12  0012               	return		;funcret
 30412  009A14                     __end_of___wmul:
 30413                           	callstack 0
 30414                           
 30415 ;; *************** function _GetMotorPower *****************
 30416 ;; Defined at:
 30417 ;;		line 405 in file "outputs_MC50.c"
 30418 ;; Parameters:    Size  Location     Type
 30419 ;;		None
 30420 ;; Auto vars:     Size  Location     Type
 30421 ;;  defineatraso    1   18[COMRAM] unsigned char 
 30422 ;; Return value:  Size  Location     Type
 30423 ;;                  1    wreg      unsigned char 
 30424 ;; Registers used:
 30425 ;;		wreg, status,2, status,0, prodl, prodh
 30426 ;; Tracked objects:
 30427 ;;		On entry : 3C/1
 30428 ;;		On exit  : 3F/1
 30429 ;;		Unchanged: 0/0
 30430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30431 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30432 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30433 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30434 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30435 ;;Total ram usage:        4 bytes
 30436 ;; Hardware stack levels used: 1
 30437 ;; Hardware stack levels required when called: 4
 30438 ;; This function calls:
 30439 ;;		Nothing
 30440 ;; This function is called by:
 30441 ;;		_ControlCurrent
 30442 ;;		_InitSoftStart
 30443 ;;		_InitSoftStop
 30444 ;; This function uses a non-reentrant model
 30445 ;;
 30446                           
 30447                           	psect	text128
 30448  007A30                     __ptext128:
 30449                           	callstack 0
 30450  007A30                     _GetMotorPower:
 30451                           	callstack 22
 30452                           
 30453                           ;outputs_MC50.c: 408:     unsigned char defineatraso;;outputs_MC50.c: 413:     if(powerC
      +                          ontrol_st.decelarationActive==YES)
 30454                           
 30455                           ;incstack = 0
 30456  007A30  0101               	movlb	1	; () banked
 30457  007A32  057B               	decf	_powerControl_st& (0+255),w,b
 30458  007A34  A4D8               	btfss	status,2,c
 30459  007A36  D006               	goto	l20415
 30460                           
 30461                           ; BSR set to: 1
 30462                           ;outputs_MC50.c: 414:     {;outputs_MC50.c: 415:        temppower=(var_sys_NVM.motorPowe
      +                          r*6);
 30463  007A38  0100               	movlb	0	; () banked
 30464  007A3A  519A               	movf	(_var_sys_NVM+2)& (0+255),w,b	;volatile
 30465  007A3C  0D06               	mullw	6
 30466  007A3E  CFF3 F193          	movff	prodl,_temppower
 30467                           
 30468                           ;outputs_MC50.c: 416:     }
 30469  007A42  D043               	goto	l2240
 30470  007A44                     l20415:
 30471                           
 30472                           ; BSR set to: 1
 30473                           ;outputs_MC50.c: 418:     {;outputs_MC50.c: 419:         fullmotorPower=(var_sys_NVM.mot
      +                          orPower*6);
 30474  007A44  0100               	movlb	0	; () banked
 30475  007A46  519A               	movf	(_var_sys_NVM+2)& (0+255),w,b	;volatile
 30476  007A48  0D06               	mullw	6
 30477  007A4A  CFF3 F082          	movff	prodl,_fullmotorPower
 30478                           
 30479                           ; BSR set to: 0
 30480                           ;outputs_MC50.c: 421:         if(var_sys.velocityFactor>0)
 30481  007A4E  0101               	movlb	1	; () banked
 30482  007A50  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 30483  007A52  D01C               	goto	l20425
 30484  007A54  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 30485  007A56  E103               	bnz	u23370
 30486  007A58  050E               	decf	(_var_sys+14)& (0+255),w,b	;volatile
 30487  007A5A  A0D8               	btfss	status,0,c
 30488  007A5C  D017               	goto	l20425
 30489  007A5E                     u23370:
 30490                           
 30491                           ; BSR set to: 1
 30492                           ;outputs_MC50.c: 422:         {;outputs_MC50.c: 423:             if(var_sys.velocityFact
      +                          or>fullmotorPower)
 30493  007A5E  0100               	movlb	0	; () banked
 30494  007A60  5182               	movf	_fullmotorPower& (0+255),w,b
 30495  007A62  6E10               	movwf	??_GetMotorPower^0,c
 30496  007A64  6A11               	clrf	(??_GetMotorPower+1)^0,c
 30497  007A66  0101               	movlb	1	; () banked
 30498  007A68  510E               	movf	(_var_sys+14)& (0+255),w,b	;volatile
 30499  007A6A  5C10               	subwf	??_GetMotorPower^0,w,c
 30500  007A6C  5011               	movf	(??_GetMotorPower+1)^0,w,c
 30501  007A6E  0A80               	xorlw	128
 30502  007A70  6E12               	movwf	(??_GetMotorPower+2)^0,c
 30503  007A72  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 30504  007A74  0A80               	xorlw	128
 30505  007A76  5812               	subwfb	(??_GetMotorPower+2)^0,w,c
 30506  007A78  B0D8               	btfsc	status,0,c
 30507  007A7A  D002               	goto	l20423
 30508                           
 30509                           ; BSR set to: 1
 30510                           ;outputs_MC50.c: 424:             {;outputs_MC50.c: 425:                 temppower=1;
 30511  007A7C  0E01               	movlw	1
 30512  007A7E  D004               	goto	L109
 30513  007A80                     l20423:
 30514                           
 30515                           ; BSR set to: 1
 30516                           ;outputs_MC50.c: 428:             {;outputs_MC50.c: 430:                 temppower =full
      +                          motorPower-var_sys.velocityFactor;
 30517  007A80  510E               	movf	(_var_sys+14)& (0+255),w,b	;volatile
 30518  007A82  0100               	movlb	0	; () banked
 30519  007A84  5D82               	subwf	_fullmotorPower& (0+255),w,b
 30520  007A86  D017               	goto	L110
 30521  007A88                     L109:
 30522  007A88  6F93               	movwf	_temppower& (0+255),b
 30523  007A8A  D01F               	goto	l2240
 30524  007A8C                     l20425:
 30525                           
 30526                           ; BSR set to: 1
 30527  007A8C  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 30528  007A8E  D005               	goto	u23390
 30529  007A90  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 30530  007A92  E113               	bnz	l20435
 30531  007A94  050E               	decf	(_var_sys+14)& (0+255),w,b	;volatile
 30532  007A96  B0D8               	btfsc	status,0,c
 30533  007A98  D010               	goto	l20435
 30534  007A9A                     u23390:
 30535                           
 30536                           ; BSR set to: 1
 30537  007A9A  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 30538  007A9C  D005               	goto	u23400
 30539  007A9E  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 30540  007AA0  E10C               	bnz	l20435
 30541  007AA2  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 30542  007AA4  B0D8               	btfsc	status,0,c
 30543  007AA6  D009               	goto	l20435
 30544  007AA8                     u23400:
 30545                           
 30546                           ; BSR set to: 1
 30547                           ;outputs_MC50.c: 434:         {;outputs_MC50.c: 435:             temppower =fullmotorPow
      +                          er;
 30548  007AA8  C082  F193         	movff	_fullmotorPower,_temppower
 30549                           
 30550                           ; BSR set to: 1
 30551                           ;outputs_MC50.c: 438:             if ( var_sys_NVM.motorPower>8 )
 30552  007AAC  0E08               	movlw	8
 30553  007AAE  0100               	movlb	0	; () banked
 30554  007AB0  659A               	cpfsgt	(_var_sys_NVM+2)& (0+255),b	;volatile
 30555  007AB2  D00B               	goto	l2240
 30556                           
 30557                           ; BSR set to: 0
 30558                           ;outputs_MC50.c: 439:             {;outputs_MC50.c: 440:                 temppower = 80 
      +                          -23 +1;
 30559  007AB4  0E3A               	movlw	58
 30560  007AB6                     L110:
 30561  007AB6  0101               	movlb	1	; () banked
 30562  007AB8  D7E7               	goto	L109
 30563  007ABA                     l20435:
 30564                           
 30565                           ; BSR set to: 1
 30566  007ABA  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 30567  007ABC  D006               	goto	l2240
 30568  007ABE  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 30569  007AC0  E102               	bnz	u23420
 30570  007AC2  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 30571  007AC4  B0D8               	btfsc	status,0,c
 30572  007AC6                     u23420:
 30573                           
 30574                           ; BSR set to: 1
 30575                           ;outputs_MC50.c: 447:                 temppower = var_sys.velocityFactorstop;
 30576  007AC6  C110  F193         	movff	_var_sys+16,_temppower	;volatile
 30577  007ACA                     l2240:
 30578                           
 30579                           ;outputs_MC50.c: 451:     if ((var_sys.velocityFactorstop > 0)&&(var_sys.velocityFactor 
      +                          <= 0 )){
 30580  007ACA  0101               	movlb	1	; () banked
 30581  007ACC  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 30582  007ACE  D00E               	goto	l20445
 30583  007AD0  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 30584  007AD2  E103               	bnz	u23430
 30585  007AD4  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 30586  007AD6  A0D8               	btfss	status,0,c
 30587  007AD8  D009               	goto	l20445
 30588  007ADA                     u23430:
 30589                           
 30590                           ; BSR set to: 1
 30591  007ADA  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 30592  007ADC  D005               	goto	u23440
 30593  007ADE  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 30594  007AE0  E105               	bnz	l20445
 30595  007AE2  050E               	decf	(_var_sys+14)& (0+255),w,b	;volatile
 30596  007AE4  B0D8               	btfsc	status,0,c
 30597  007AE6  D002               	goto	l20445
 30598  007AE8                     u23440:
 30599                           
 30600                           ; BSR set to: 1
 30601                           ;outputs_MC50.c: 452:     defineatraso = 5;
 30602  007AE8  0E05               	movlw	5
 30603  007AEA  D001               	goto	L108
 30604  007AEC                     l20445:
 30605                           
 30606                           ; BSR set to: 1
 30607                           ;outputs_MC50.c: 455:     {;outputs_MC50.c: 456:     defineatraso = 23;
 30608  007AEC  0E17               	movlw	23
 30609  007AEE                     L108:
 30610  007AEE  6E13               	movwf	GetMotorPower@defineatraso^0,c
 30611                           
 30612                           ; BSR set to: 1
 30613                           ;outputs_MC50.c: 459:     return temppower+defineatraso;
 30614  007AF0  5193               	movf	_temppower& (0+255),w,b
 30615  007AF2  2413               	addwf	GetMotorPower@defineatraso^0,w,c
 30616                           
 30617                           ; BSR set to: 1
 30618  007AF4  0012               	return		;funcret
 30619  007AF6                     __end_of_GetMotorPower:
 30620                           	callstack 0
 30621                           
 30622 ;; *************** function _ControlCounterMoves *****************
 30623 ;; Defined at:
 30624 ;;		line 305 in file "controlMemory_MC50.c"
 30625 ;; Parameters:    Size  Location     Type
 30626 ;;		None
 30627 ;; Auto vars:     Size  Location     Type
 30628 ;;		None
 30629 ;; Return value:  Size  Location     Type
 30630 ;;                  1    wreg      void 
 30631 ;; Registers used:
 30632 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30633 ;; Tracked objects:
 30634 ;;		On entry : 3E/1
 30635 ;;		On exit  : 0/0
 30636 ;;		Unchanged: 0/0
 30637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30641 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30642 ;;Total ram usage:        0 bytes
 30643 ;; Hardware stack levels used: 1
 30644 ;; Hardware stack levels required when called: 14
 30645 ;; This function calls:
 30646 ;;		_SaveNVM_VarSystem
 30647 ;; This function is called by:
 30648 ;;		_main
 30649 ;; This function uses a non-reentrant model
 30650 ;;
 30651                           
 30652                           	psect	text129
 30653  008F08                     __ptext129:
 30654                           	callstack 0
 30655  008F08                     _ControlCounterMoves:
 30656                           	callstack 16
 30657                           
 30658                           ;controlMemory_MC50.c: 308:     if(ts_system.timeBetweenSaveCounters<=0)
 30659                           
 30660                           ; BSR set to: 1
 30661                           ;incstack = 0
 30662  008F08  0101               	movlb	1	; () banked
 30663  008F0A  BFC6               	btfsc	(_ts_system+39)& (0+255),7,b	;volatile
 30664  008F0C  D005               	goto	u29780
 30665  008F0E  51C6               	movf	(_ts_system+39)& (0+255),w,b	;volatile
 30666  008F10  E127               	bnz	l1491
 30667  008F12  05C5               	decf	(_ts_system+38)& (0+255),w,b	;volatile
 30668  008F14  B0D8               	btfsc	status,0,c
 30669  008F16  0012               	return	
 30670  008F18                     u29780:
 30671                           
 30672                           ; BSR set to: 1
 30673                           ;controlMemory_MC50.c: 309:     {;controlMemory_MC50.c: 310:        ts_system.timeBetwee
      +                          nSaveCounters=((1000/50)*60)*5;
 30674  008F18  0E17               	movlw	23
 30675  008F1A  6FC6               	movwf	(_ts_system+39)& (0+255),b	;volatile
 30676  008F1C  0E70               	movlw	112
 30677  008F1E  6FC5               	movwf	(_ts_system+38)& (0+255),b	;volatile
 30678                           
 30679                           ; BSR set to: 1
 30680                           ;controlMemory_MC50.c: 312:        if(var_sys.actualCounterMoves!=var_sys_NVM.counterMov
      +                          es)
 30681  008F20  0100               	movlb	0	; () banked
 30682  008F22  51BA               	movf	(_var_sys_NVM+34)& (0+255),w,b	;volatile
 30683  008F24  0101               	movlb	1	; () banked
 30684  008F26  193C               	xorwf	(_var_sys+60)& (0+255),w,b	;volatile
 30685  008F28  E110               	bnz	u29790
 30686  008F2A  0100               	movlb	0	; () banked
 30687  008F2C  51BB               	movf	(_var_sys_NVM+35)& (0+255),w,b	;volatile
 30688  008F2E  0101               	movlb	1	; () banked
 30689  008F30  193D               	xorwf	(_var_sys+61)& (0+255),w,b	;volatile
 30690  008F32  E10B               	bnz	u29790
 30691  008F34  0100               	movlb	0	; () banked
 30692  008F36  51BC               	movf	(_var_sys_NVM+36)& (0+255),w,b	;volatile
 30693  008F38  0101               	movlb	1	; () banked
 30694  008F3A  193E               	xorwf	(_var_sys+62)& (0+255),w,b	;volatile
 30695  008F3C  E106               	bnz	u29790
 30696  008F3E  0100               	movlb	0	; () banked
 30697  008F40  51BD               	movf	(_var_sys_NVM+37)& (0+255),w,b	;volatile
 30698  008F42  0101               	movlb	1	; () banked
 30699  008F44  193F               	xorwf	(_var_sys+63)& (0+255),w,b	;volatile
 30700  008F46  B4D8               	btfsc	status,2,c
 30701  008F48  0012               	return	
 30702  008F4A                     u29790:
 30703                           
 30704                           ; BSR set to: 1
 30705                           ;controlMemory_MC50.c: 313:        {;controlMemory_MC50.c: 314:            var_sys_NVM.c
      +                          ounterMoves=var_sys.actualCounterMoves;
 30706  008F4A  C13C  F0BA         	movff	_var_sys+60,_var_sys_NVM+34	;volatile
 30707  008F4E  C13D  F0BB         	movff	_var_sys+61,_var_sys_NVM+35	;volatile
 30708  008F52  C13E  F0BC         	movff	_var_sys+62,_var_sys_NVM+36	;volatile
 30709  008F56  C13F  F0BD         	movff	_var_sys+63,_var_sys_NVM+37	;volatile
 30710                           
 30711                           ; BSR set to: 1
 30712                           ;controlMemory_MC50.c: 315:            SaveNVM_VarSystem(pageMemoryCounters);
 30713  008F5A  0E02               	movlw	2
 30714  008F5C  ECDB  F04A         	call	_SaveNVM_VarSystem
 30715  008F60                     l1491:
 30716  008F60  0012               	return		;funcret
 30717  008F62                     __end_of_ControlCounterMoves:
 30718                           	callstack 0
 30719                           
 30720 ;; *************** function _SaveNVM_VarSystem *****************
 30721 ;; Defined at:
 30722 ;;		line 187 in file "controlMemory_MC50.c"
 30723 ;; Parameters:    Size  Location     Type
 30724 ;;  page            1    wreg     unsigned char 
 30725 ;; Auto vars:     Size  Location     Type
 30726 ;;  page            1    0[BANK0 ] unsigned char 
 30727 ;;  tempAdd         2    1[BANK0 ] unsigned int 
 30728 ;;  point           1    3[BANK0 ] PTR unsigned char 
 30729 ;;		 -> var_sys_NVM(64), 
 30730 ;; Return value:  Size  Location     Type
 30731 ;;                  1    wreg      void 
 30732 ;; Registers used:
 30733 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30734 ;; Tracked objects:
 30735 ;;		On entry : 0/0
 30736 ;;		On exit  : 0/0
 30737 ;;		Unchanged: 0/0
 30738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30739 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30740 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30742 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30743 ;;Total ram usage:        4 bytes
 30744 ;; Hardware stack levels used: 1
 30745 ;; Hardware stack levels required when called: 13
 30746 ;; This function calls:
 30747 ;;		_i2c_writeNBytes
 30748 ;; This function is called by:
 30749 ;;		_loadNVM_VarSystem
 30750 ;;		_ResetDefaultMemory
 30751 ;;		_ControlCounterMoves
 30752 ;;		_checkNVM_VarSystem
 30753 ;;		_sm_execute_ControlLearning
 30754 ;;		_sm_execute_menuConfiguration
 30755 ;;		_setValueToEdit
 30756 ;;		_controlSelectRemote
 30757 ;;		_eusartparser
 30758 ;; This function uses a non-reentrant model
 30759 ;;
 30760                           
 30761                           	psect	text130
 30762  0095B6                     __ptext130:
 30763                           	callstack 0
 30764  0095B6                     _SaveNVM_VarSystem:
 30765                           	callstack 14
 30766                           
 30767                           ;incstack = 0
 30768                           ;SaveNVM_VarSystem@page stored from wreg
 30769  0095B6  0100               	movlb	0	; () banked
 30770  0095B8  6FD8               	movwf	SaveNVM_VarSystem@page& (0+255),b
 30771                           
 30772                           ;controlMemory_MC50.c: 187: void SaveNVM_VarSystem(unsigned char page);controlMemory_MC5
      +                          0.c: 188: {;controlMemory_MC50.c: 189:     unsigned int tempAdd=page*16;
 30773  0095BA  0100               	movlb	0	; () banked
 30774  0095BC  51D8               	movf	SaveNVM_VarSystem@page& (0+255),w,b
 30775  0095BE  0D10               	mullw	16
 30776  0095C0  CFF3 F0D9          	movff	prodl,SaveNVM_VarSystem@tempAdd
 30777  0095C4  CFF4 F0DA          	movff	prodh,SaveNVM_VarSystem@tempAdd+1
 30778                           
 30779                           ; BSR set to: 0
 30780                           ;controlMemory_MC50.c: 190:     char* point=(char*)&var_sys_NVM;
 30781  0095C8  0E98               	movlw	low _var_sys_NVM
 30782  0095CA  6FDB               	movwf	SaveNVM_VarSystem@point& (0+255),b
 30783                           
 30784                           ; BSR set to: 0
 30785                           ;controlMemory_MC50.c: 191:     point=point+tempAdd;
 30786  0095CC  51DB               	movf	SaveNVM_VarSystem@point& (0+255),w,b
 30787  0095CE  25D9               	addwf	SaveNVM_VarSystem@tempAdd& (0+255),w,b
 30788  0095D0  6FDB               	movwf	SaveNVM_VarSystem@point& (0+255),b
 30789                           
 30790                           ; BSR set to: 0
 30791                           ;controlMemory_MC50.c: 192:    i2c_writeNBytes(0x50, tempAdd, point, 16);
 30792  0095D2  C0D9  F022         	movff	SaveNVM_VarSystem@tempAdd,i2c_writeNBytes@reg
 30793  0095D6  C0DA  F023         	movff	SaveNVM_VarSystem@tempAdd+1,i2c_writeNBytes@reg+1
 30794  0095DA  C0DB  F024         	movff	SaveNVM_VarSystem@point,i2c_writeNBytes@data
 30795  0095DE  0E00               	movlw	0
 30796  0095E0  6E26               	movwf	(i2c_writeNBytes@len+1)^0,c
 30797  0095E2  0E10               	movlw	16
 30798  0095E4  6E25               	movwf	i2c_writeNBytes@len^0,c
 30799  0095E6  0E50               	movlw	80
 30800  0095E8  EC80  F044         	call	_i2c_writeNBytes
 30801  0095EC  0012               	return		;funcret
 30802  0095EE                     __end_of_SaveNVM_VarSystem:
 30803                           	callstack 0
 30804                           
 30805 ;; *************** function _i2c_writeNBytes *****************
 30806 ;; Defined at:
 30807 ;;		line 50 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 30808 ;; Parameters:    Size  Location     Type
 30809 ;;  address         1    wreg     unsigned char 
 30810 ;;  reg             2   33[COMRAM] unsigned short 
 30811 ;;  data            1   35[COMRAM] PTR void 
 30812 ;;		 -> RemoveSerial@tempSerial(4), saveNewSerial@tempSerial(4), var_sys_NVM(64), 
 30813 ;;  len             2   36[COMRAM] unsigned int 
 30814 ;; Auto vars:     Size  Location     Type
 30815 ;;  address         1   56[COMRAM] unsigned char 
 30816 ;;  dat            17   39[COMRAM] unsigned char [17]
 30817 ;; Return value:  Size  Location     Type
 30818 ;;                  1    wreg      void 
 30819 ;; Registers used:
 30820 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30821 ;; Tracked objects:
 30822 ;;		On entry : 3F/0
 30823 ;;		On exit  : 0/0
 30824 ;;		Unchanged: 0/0
 30825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30826 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30827 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30828 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30829 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30830 ;;Total ram usage:       24 bytes
 30831 ;; Hardware stack levels used: 1
 30832 ;; Hardware stack levels required when called: 12
 30833 ;; This function calls:
 30834 ;;		_I2C1_Close
 30835 ;;		_I2C1_MasterWrite
 30836 ;;		_I2C1_Open
 30837 ;;		_I2C1_SetAddressNackCallback
 30838 ;;		_I2C1_SetBuffer
 30839 ;;		_memcpy
 30840 ;; This function is called by:
 30841 ;;		_saveNewSerial
 30842 ;;		_RemoveSerial
 30843 ;;		_SaveNVM_VarSystem
 30844 ;; This function uses a non-reentrant model
 30845 ;;
 30846                           
 30847                           	psect	text131
 30848  008900                     __ptext131:
 30849                           	callstack 0
 30850  008900                     _i2c_writeNBytes:
 30851                           	callstack 14
 30852                           
 30853                           ;incstack = 0
 30854                           ;i2c_writeNBytes@address stored from wreg
 30855  008900  6E39               	movwf	i2c_writeNBytes@address^0,c
 30856                           
 30857                           ;mcc_generated_files/drivers/i2c_simple_master.c: 50: void i2c_writeNBytes(i2c1_address_
      +                          t address, uint16_t reg, void* data, size_t len);mcc_generated_files/drivers/i2c_simple_
      +                          master.c: 51: {;mcc_generated_files/drivers/i2c_simple_master.c: 52:     uint8_t dat[17]
      +                          ;;mcc_generated_files/drivers/i2c_simple_master.c: 53:     dat[0] = reg;
 30858  008902  C022  F028         	movff	i2c_writeNBytes@reg,i2c_writeNBytes@dat
 30859                           
 30860                           ;mcc_generated_files/drivers/i2c_simple_master.c: 54:     memcpy(dat + 1, data, len);
 30861  008906  0E29               	movlw	low (i2c_writeNBytes@dat+1)
 30862  008908  6E10               	movwf	memcpy@d1^0,c
 30863  00890A  6A11               	clrf	(memcpy@d1+1)^0,c
 30864  00890C  C024  F012         	movff	i2c_writeNBytes@data,memcpy@s1
 30865  008910  6A13               	clrf	(memcpy@s1+1)^0,c
 30866  008912  C025  F014         	movff	i2c_writeNBytes@len,memcpy@n
 30867  008916  C026  F015         	movff	i2c_writeNBytes@len+1,memcpy@n+1
 30868  00891A  ECDD  F049         	call	_memcpy	;wreg free
 30869  00891E                     l20469:
 30870  00891E  5023               	movf	(i2c_writeNBytes@reg+1)^0,w,c
 30871  008920  1039               	iorwf	i2c_writeNBytes@address^0,w,c
 30872  008922  EC50  F042         	call	_I2C1_Open
 30873  008926  0900               	iorlw	0
 30874  008928  B4D8               	btfsc	status,2,c
 30875  00892A  D7F9               	goto	l20469
 30876                           
 30877                           ;mcc_generated_files/drivers/i2c_simple_master.c: 56:     I2C1_SetBuffer(dat,len + 1);
 30878  00892C  0E28               	movlw	low i2c_writeNBytes@dat
 30879  00892E  6E10               	movwf	I2C1_SetBuffer@buffer^0,c
 30880  008930  6A11               	clrf	(I2C1_SetBuffer@buffer+1)^0,c
 30881  008932  0E01               	movlw	1
 30882  008934  2425               	addwf	i2c_writeNBytes@len^0,w,c
 30883  008936  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 30884  008938  0E00               	movlw	0
 30885  00893A  2026               	addwfc	(i2c_writeNBytes@len+1)^0,w,c
 30886  00893C  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 30887  00893E  ECF2  F04D         	call	_I2C1_SetBuffer	;wreg free
 30888                           
 30889                           ; BSR set to: 2
 30890                           ;mcc_generated_files/drivers/i2c_simple_master.c: 57:     I2C1_SetAddressNackCallback(((
      +                          void*)0),((void*)0));
 30891  008942  0E00               	movlw	0
 30892  008944  6E15               	movwf	I2C1_SetAddressNackCallback@cb^0,c
 30893  008946  0E00               	movlw	0
 30894  008948  6E16               	movwf	(I2C1_SetAddressNackCallback@cb+1)^0,c
 30895  00894A  0E00               	movlw	0
 30896  00894C  6E17               	movwf	I2C1_SetAddressNackCallback@ptr^0,c
 30897  00894E  0E00               	movlw	0
 30898  008950  6E18               	movwf	(I2C1_SetAddressNackCallback@ptr+1)^0,c
 30899  008952  EC17  F04E         	call	_I2C1_SetAddressNackCallback	;wreg free
 30900                           
 30901                           ;mcc_generated_files/drivers/i2c_simple_master.c: 58:     I2C1_MasterWrite();
 30902  008956  ECF0  F04E         	call	_I2C1_MasterWrite	;wreg free
 30903  00895A                     l20477:
 30904  00895A  EC64  F04D         	call	_I2C1_Close	;wreg free
 30905  00895E  06E8               	decf	wreg,f,c
 30906  008960  B4D8               	btfsc	status,2,c
 30907  008962  D7FB               	goto	l20477
 30908                           
 30909                           ;mcc_generated_files/drivers/i2c_simple_master.c: 60:     _delay((unsigned long)((10)*(6
      +                          4000000/4000.0)));
 30910  008964  0ED0               	movlw	208
 30911  008966  6E27               	movwf	??_i2c_writeNBytes^0,c
 30912  008968  0ECA               	movlw	202
 30913  00896A                     u34107:
 30914  00896A  2EE8               	decfsz	wreg,f,c
 30915  00896C  D7FE               	bra	u34107
 30916  00896E  2E27               	decfsz	??_i2c_writeNBytes^0,f,c
 30917  008970  D7FC               	bra	u34107
 30918  008972  0012               	return		;funcret
 30919  008974                     __end_of_i2c_writeNBytes:
 30920                           	callstack 0
 30921                           
 30922 ;; *************** function _memcpy *****************
 30923 ;; Defined at:
 30924 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\memcpy.c"
 30925 ;; Parameters:    Size  Location     Type
 30926 ;;  d1              2   15[COMRAM] PTR void 
 30927 ;;		 -> controlSelectRemote@tempSerial(4), Decrypt@Buffer(4), SecureKeyGen@SKEYtemp(8), SecureKeyGen@HOPtemp(4), 
 30928 ;;		 -> SecureKeyGen@Buffer(8), NormalKeyGen@SKEYtemp(4), NormalKeyGen@SEED(4), NormalKeyGen@HOPtemp(4), 
 30929 ;;		 -> NormalKeyGen@Buffer(8), DKEY(8), classic_data(16), I2C1_WriteNBytes@dat(17), 
 30930 ;;		 -> i2c_writeNBytes@dat(17), 
 30931 ;;  s1              2   17[COMRAM] PTR const void 
 30932 ;;		 -> classic_data.raw_data(4), Decrypt@Buffer(4), SecureKeyGen@SKEYtemp(8), SecureKeyGen@HOPtemp(4), 
 30933 ;;		 -> SecureKeyGen@Buffer(8), NormalKeyGen@SKEYtemp(4), NormalKeyGen@SEED(4), NormalKeyGen@HOPtemp(4), 
 30934 ;;		 -> NormalKeyGen@Buffer(8), classic_data.serialnumber(4), classic_data(16), BufferRF(9), 
 30935 ;;		 -> RemoveSerial@tempSerial(4), saveNewSerial@tempSerial(4), var_sys_NVM(64), 
 30936 ;;  n               2   19[COMRAM] unsigned int 
 30937 ;; Auto vars:     Size  Location     Type
 30938 ;;  s               2   24[COMRAM] PTR const unsigned char 
 30939 ;;		 -> classic_data.raw_data(4), Decrypt@Buffer(4), SecureKeyGen@SKEYtemp(8), SecureKeyGen@HOPtemp(4), 
 30940 ;;		 -> SecureKeyGen@Buffer(8), NormalKeyGen@SKEYtemp(4), NormalKeyGen@SEED(4), NormalKeyGen@HOPtemp(4), 
 30941 ;;		 -> NormalKeyGen@Buffer(8), classic_data.serialnumber(4), classic_data(16), BufferRF(9), 
 30942 ;;		 -> RemoveSerial@tempSerial(4), saveNewSerial@tempSerial(4), var_sys_NVM(64), 
 30943 ;;  d               2   22[COMRAM] PTR unsigned char 
 30944 ;;		 -> controlSelectRemote@tempSerial(4), Decrypt@Buffer(4), SecureKeyGen@SKEYtemp(8), SecureKeyGen@HOPtemp(4), 
 30945 ;;		 -> SecureKeyGen@Buffer(8), NormalKeyGen@SKEYtemp(4), NormalKeyGen@SEED(4), NormalKeyGen@HOPtemp(4), 
 30946 ;;		 -> NormalKeyGen@Buffer(8), DKEY(8), classic_data(16), I2C1_WriteNBytes@dat(17), 
 30947 ;;		 -> i2c_writeNBytes@dat(17), 
 30948 ;;  tmp             1   21[COMRAM] unsigned char 
 30949 ;; Return value:  Size  Location     Type
 30950 ;;                  2   15[COMRAM] PTR void 
 30951 ;; Registers used:
 30952 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 30953 ;; Tracked objects:
 30954 ;;		On entry : 0/0
 30955 ;;		On exit  : 0/0
 30956 ;;		Unchanged: 0/0
 30957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30958 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30959 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30961 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30962 ;;Total ram usage:       11 bytes
 30963 ;; Hardware stack levels used: 1
 30964 ;; Hardware stack levels required when called: 4
 30965 ;; This function calls:
 30966 ;;		Nothing
 30967 ;; This function is called by:
 30968 ;;		_i2c_writeNBytes
 30969 ;;		_getSerialCmd
 30970 ;;		_NormalKeyGen
 30971 ;;		_Decrypt
 30972 ;;		_keeloqDecryptPacket
 30973 ;;		_DecryptPacket_12BIT
 30974 ;; This function uses a non-reentrant model
 30975 ;;
 30976                           
 30977                           	psect	text132
 30978  0093BA                     __ptext132:
 30979                           	callstack 0
 30980  0093BA                     _memcpy:
 30981                           	callstack 21
 30982                           
 30983                           ;incstack = 0
 30984  0093BA  C012  F019         	movff	memcpy@s1,memcpy@s
 30985  0093BE  C013  F01A         	movff	memcpy@s1+1,memcpy@s+1
 30986  0093C2  C010  F017         	movff	memcpy@d1,memcpy@d
 30987  0093C6  C011  F018         	movff	memcpy@d1+1,memcpy@d+1
 30988  0093CA  D010               	goto	l20409
 30989  0093CC                     l20401:
 30990  0093CC  C019  FFD9         	movff	memcpy@s,fsr2l
 30991  0093D0  C01A  FFDA         	movff	memcpy@s+1,fsr2h
 30992  0093D4  50DF               	movf	indf2,w,c
 30993  0093D6  6E16               	movwf	memcpy@tmp^0,c
 30994  0093D8  4A19               	infsnz	memcpy@s^0,f,c
 30995  0093DA  2A1A               	incf	(memcpy@s+1)^0,f,c
 30996  0093DC  C017  FFD9         	movff	memcpy@d,fsr2l
 30997  0093E0  C018  FFDA         	movff	memcpy@d+1,fsr2h
 30998  0093E4  C016  FFDF         	movff	memcpy@tmp,indf2
 30999  0093E8  4A17               	infsnz	memcpy@d^0,f,c
 31000  0093EA  2A18               	incf	(memcpy@d+1)^0,f,c
 31001  0093EC                     l20409:
 31002  0093EC  0614               	decf	memcpy@n^0,f,c
 31003  0093EE  A0D8               	btfss	status,0,c
 31004  0093F0  0615               	decf	(memcpy@n+1)^0,f,c
 31005  0093F2  2814               	incf	memcpy@n^0,w,c
 31006  0093F4  E1EB               	bnz	l20401
 31007  0093F6  2815               	incf	(memcpy@n+1)^0,w,c
 31008  0093F8  B4D8               	btfsc	status,2,c
 31009  0093FA  0012               	return	
 31010  0093FC  D7E7               	goto	l20401
 31011  0093FE                     __end_of_memcpy:
 31012                           	callstack 0
 31013                           
 31014 ;; *************** function _I2C1_SetAddressNackCallback *****************
 31015 ;; Defined at:
 31016 ;;		line 283 in file "mcc_generated_files/i2c1_master.c"
 31017 ;; Parameters:    Size  Location     Type
 31018 ;;  cb              2   20[COMRAM] PTR FTN(PTR void ,)enum 
 31019 ;;		 -> Absolute function(1), 
 31020 ;;  ptr             2   22[COMRAM] PTR void 
 31021 ;;		 -> NULL(0), 
 31022 ;; Auto vars:     Size  Location     Type
 31023 ;;		None
 31024 ;; Return value:  Size  Location     Type
 31025 ;;                  1    wreg      void 
 31026 ;; Registers used:
 31027 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31028 ;; Tracked objects:
 31029 ;;		On entry : 3F/2
 31030 ;;		On exit  : 0/0
 31031 ;;		Unchanged: 0/0
 31032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31033 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31034 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31035 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31036 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31037 ;;Total ram usage:        4 bytes
 31038 ;; Hardware stack levels used: 1
 31039 ;; Hardware stack levels required when called: 5
 31040 ;; This function calls:
 31041 ;;		_I2C1_SetCallback
 31042 ;; This function is called by:
 31043 ;;		_i2c_writeNBytes
 31044 ;;		_i2c_readDataBlock
 31045 ;;		_I2C1_Read1ByteRegister
 31046 ;; This function uses a non-reentrant model
 31047 ;;
 31048                           
 31049                           	psect	text133
 31050  009C2E                     __ptext133:
 31051                           	callstack 0
 31052  009C2E                     _I2C1_SetAddressNackCallback:
 31053                           	callstack 20
 31054                           
 31055                           ; BSR set to: 2
 31056                           ;mcc_generated_files/i2c1_master.c: 283: void I2C1_SetAddressNackCallback(i2c1_callback_
      +                          t cb, void *ptr);mcc_generated_files/i2c1_master.c: 284: {;mcc_generated_files/i2c1_mast
      +                          er.c: 285:     I2C1_SetCallback(I2C1_ADDR_NACK, cb, ptr);
 31057                           
 31058                           ;incstack = 0
 31059  009C2E  C015  F010         	movff	I2C1_SetAddressNackCallback@cb,I2C1_SetCallback@cb
 31060  009C32  C016  F011         	movff	I2C1_SetAddressNackCallback@cb+1,I2C1_SetCallback@cb+1
 31061  009C36  C017  F012         	movff	I2C1_SetAddressNackCallback@ptr,I2C1_SetCallback@ptr
 31062  009C3A  C018  F013         	movff	I2C1_SetAddressNackCallback@ptr+1,I2C1_SetCallback@ptr+1
 31063  009C3E  0E02               	movlw	2
 31064  009C40  EC99  F045         	call	_I2C1_SetCallback
 31065  009C44  0012               	return		;funcret
 31066  009C46                     __end_of_I2C1_SetAddressNackCallback:
 31067                           	callstack 0
 31068                           
 31069 ;; *************** function _I2C1_Open *****************
 31070 ;; Defined at:
 31071 ;;		line 176 in file "mcc_generated_files/i2c1_master.c"
 31072 ;; Parameters:    Size  Location     Type
 31073 ;;  address         1    wreg     unsigned char 
 31074 ;; Auto vars:     Size  Location     Type
 31075 ;;  address         1   15[COMRAM] unsigned char 
 31076 ;;  returnValue     1   16[COMRAM] enum E355
 31077 ;; Return value:  Size  Location     Type
 31078 ;;                  1    wreg      enum E355
 31079 ;; Registers used:
 31080 ;;		wreg, status,2, status,0, cstack
 31081 ;; Tracked objects:
 31082 ;;		On entry : 0/0
 31083 ;;		On exit  : 33/2
 31084 ;;		Unchanged: 0/0
 31085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31087 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31089 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31090 ;;Total ram usage:        2 bytes
 31091 ;; Hardware stack levels used: 1
 31092 ;; Hardware stack levels required when called: 5
 31093 ;; This function calls:
 31094 ;;		_I2C1_MasterClearIrq
 31095 ;;		_I2C1_MasterOpen
 31096 ;; This function is called by:
 31097 ;;		_i2c_writeNBytes
 31098 ;;		_i2c_readDataBlock
 31099 ;;		_I2C1_Read1ByteRegister
 31100 ;; This function uses a non-reentrant model
 31101 ;;
 31102                           
 31103                           	psect	text134
 31104  0084A0                     __ptext134:
 31105                           	callstack 0
 31106  0084A0                     _I2C1_Open:
 31107                           	callstack 20
 31108                           
 31109                           ;incstack = 0
 31110                           ;I2C1_Open@address stored from wreg
 31111  0084A0  6E10               	movwf	I2C1_Open@address^0,c
 31112                           
 31113                           ;mcc_generated_files/i2c1_master.c: 176: i2c1_error_t I2C1_Open(i2c1_address_t address);
      +                          mcc_generated_files/i2c1_master.c: 177: {;mcc_generated_files/i2c1_master.c: 178:     i2
      +                          c1_error_t returnValue = I2C1_BUSY;
 31114  0084A2  0E01               	movlw	1
 31115  0084A4  6E11               	movwf	I2C1_Open@returnValue^0,c
 31116                           
 31117                           ;mcc_generated_files/i2c1_master.c: 180:     if(!I2C1_Status.inUse)
 31118  0084A6  0102               	movlb	2	; () banked
 31119  0084A8  B55F               	btfsc	(_I2C1_Status+35)& (0+255),2,b
 31120  0084AA  D03A               	goto	l20375
 31121                           
 31122                           ; BSR set to: 2
 31123                           ;mcc_generated_files/i2c1_master.c: 181:     {;mcc_generated_files/i2c1_master.c: 182:  
      +                                 I2C1_Status.address = address;
 31124  0084AC  C010  F258         	movff	I2C1_Open@address,_I2C1_Status+28
 31125                           
 31126                           ; BSR set to: 2
 31127                           ;mcc_generated_files/i2c1_master.c: 183:         I2C1_Status.busy = 0;
 31128  0084B0  935F               	bcf	(_I2C1_Status+35)& (0+255),1,b
 31129                           
 31130                           ; BSR set to: 2
 31131                           ;mcc_generated_files/i2c1_master.c: 184:         I2C1_Status.inUse = 1;
 31132  0084B2  855F               	bsf	(_I2C1_Status+35)& (0+255),2,b
 31133                           
 31134                           ; BSR set to: 2
 31135                           ;mcc_generated_files/i2c1_master.c: 185:         I2C1_Status.addressNackCheck = 0;
 31136  0084B4  915F               	bcf	(_I2C1_Status+35)& (0+255),0,b
 31137                           
 31138                           ; BSR set to: 2
 31139                           ;mcc_generated_files/i2c1_master.c: 186:         I2C1_Status.state = I2C1_RESET;
 31140  0084B6  0E0E               	movlw	14
 31141  0084B8  6F5D               	movwf	(_I2C1_Status+33)& (0+255),b
 31142                           
 31143                           ; BSR set to: 2
 31144                           ;mcc_generated_files/i2c1_master.c: 187:         I2C1_Status.time_out_value = 500;
 31145  0084BA  0E01               	movlw	1
 31146  0084BC  6F57               	movwf	(_I2C1_Status+27)& (0+255),b
 31147  0084BE  0EF4               	movlw	244
 31148  0084C0  6F56               	movwf	(_I2C1_Status+26)& (0+255),b
 31149                           
 31150                           ; BSR set to: 2
 31151                           ;mcc_generated_files/i2c1_master.c: 188:         I2C1_Status.bufferFree = 1;
 31152  0084C2  875F               	bsf	(_I2C1_Status+35)& (0+255),3,b
 31153                           
 31154                           ; BSR set to: 2
 31155                           ;mcc_generated_files/i2c1_master.c: 191:         I2C1_Status.callbackTable[I2C1_DATA_COM
      +                          PLETE]=I2C1_CallbackReturnStop;
 31156  0084C4  0E7A               	movlw	low _I2C1_CallbackReturnStop
 31157  0084C6  6F3C               	movwf	_I2C1_Status& (0+255),b
 31158  0084C8  0E9E               	movlw	high _I2C1_CallbackReturnStop
 31159  0084CA  6F3D               	movwf	(_I2C1_Status+1)& (0+255),b
 31160                           
 31161                           ; BSR set to: 2
 31162                           ;mcc_generated_files/i2c1_master.c: 192:         I2C1_Status.callbackPayload[I2C1_DATA_C
      +                          OMPLETE] = ((void*)0);
 31163  0084CC  0E00               	movlw	0
 31164  0084CE  6F48               	movwf	(_I2C1_Status+12)& (0+255),b
 31165  0084D0  0E00               	movlw	0
 31166  0084D2  6F49               	movwf	(_I2C1_Status+13)& (0+255),b
 31167                           
 31168                           ; BSR set to: 2
 31169                           ;mcc_generated_files/i2c1_master.c: 193:         I2C1_Status.callbackTable[I2C1_WRITE_CO
      +                          LLISION]=I2C1_CallbackReturnStop;
 31170  0084D4  0E7A               	movlw	low _I2C1_CallbackReturnStop
 31171  0084D6  6F3E               	movwf	(_I2C1_Status+2)& (0+255),b
 31172  0084D8  0E9E               	movlw	high _I2C1_CallbackReturnStop
 31173  0084DA  6F3F               	movwf	(_I2C1_Status+3)& (0+255),b
 31174                           
 31175                           ; BSR set to: 2
 31176                           ;mcc_generated_files/i2c1_master.c: 194:         I2C1_Status.callbackPayload[I2C1_WRITE_
      +                          COLLISION] = ((void*)0);
 31177  0084DC  0E00               	movlw	0
 31178  0084DE  6F4A               	movwf	(_I2C1_Status+14)& (0+255),b
 31179  0084E0  0E00               	movlw	0
 31180  0084E2  6F4B               	movwf	(_I2C1_Status+15)& (0+255),b
 31181                           
 31182                           ; BSR set to: 2
 31183                           ;mcc_generated_files/i2c1_master.c: 195:         I2C1_Status.callbackTable[I2C1_ADDR_NAC
      +                          K]=I2C1_CallbackReturnStop;
 31184  0084E4  0E7A               	movlw	low _I2C1_CallbackReturnStop
 31185  0084E6  6F40               	movwf	(_I2C1_Status+4)& (0+255),b
 31186  0084E8  0E9E               	movlw	high _I2C1_CallbackReturnStop
 31187  0084EA  6F41               	movwf	(_I2C1_Status+5)& (0+255),b
 31188                           
 31189                           ; BSR set to: 2
 31190                           ;mcc_generated_files/i2c1_master.c: 196:         I2C1_Status.callbackPayload[I2C1_ADDR_N
      +                          ACK] = ((void*)0);
 31191  0084EC  0E00               	movlw	0
 31192  0084EE  6F4C               	movwf	(_I2C1_Status+16)& (0+255),b
 31193  0084F0  0E00               	movlw	0
 31194  0084F2  6F4D               	movwf	(_I2C1_Status+17)& (0+255),b
 31195                           
 31196                           ; BSR set to: 2
 31197                           ;mcc_generated_files/i2c1_master.c: 197:         I2C1_Status.callbackTable[I2C1_DATA_NAC
      +                          K]=I2C1_CallbackReturnStop;
 31198  0084F4  0E7A               	movlw	low _I2C1_CallbackReturnStop
 31199  0084F6  6F42               	movwf	(_I2C1_Status+6)& (0+255),b
 31200  0084F8  0E9E               	movlw	high _I2C1_CallbackReturnStop
 31201  0084FA  6F43               	movwf	(_I2C1_Status+7)& (0+255),b
 31202                           
 31203                           ; BSR set to: 2
 31204                           ;mcc_generated_files/i2c1_master.c: 198:         I2C1_Status.callbackPayload[I2C1_DATA_N
      +                          ACK] = ((void*)0);
 31205  0084FC  0E00               	movlw	0
 31206  0084FE  6F4E               	movwf	(_I2C1_Status+18)& (0+255),b
 31207  008500  0E00               	movlw	0
 31208  008502  6F4F               	movwf	(_I2C1_Status+19)& (0+255),b
 31209                           
 31210                           ; BSR set to: 2
 31211                           ;mcc_generated_files/i2c1_master.c: 199:         I2C1_Status.callbackTable[I2C1_TIMEOUT]
      +                          =I2C1_CallbackReturnReset;
 31212  008504  0E76               	movlw	low _I2C1_CallbackReturnReset
 31213  008506  6F44               	movwf	(_I2C1_Status+8)& (0+255),b
 31214  008508  0E9E               	movlw	high _I2C1_CallbackReturnReset
 31215  00850A  6F45               	movwf	(_I2C1_Status+9)& (0+255),b
 31216                           
 31217                           ; BSR set to: 2
 31218                           ;mcc_generated_files/i2c1_master.c: 200:         I2C1_Status.callbackPayload[I2C1_TIMEOU
      +                          T] = ((void*)0);
 31219  00850C  0E00               	movlw	0
 31220  00850E  6F50               	movwf	(_I2C1_Status+20)& (0+255),b
 31221  008510  0E00               	movlw	0
 31222  008512  6F51               	movwf	(_I2C1_Status+21)& (0+255),b
 31223                           
 31224                           ; BSR set to: 2
 31225                           ;mcc_generated_files/i2c1_master.c: 202:         I2C1_MasterClearIrq();
 31226  008514  EC2A  F04F         	call	_I2C1_MasterClearIrq	;wreg free
 31227                           
 31228                           ; BSR set to: 14
 31229                           ;mcc_generated_files/i2c1_master.c: 203:         I2C1_MasterOpen();
 31230  008518  EC23  F04E         	call	_I2C1_MasterOpen	;wreg free
 31231                           
 31232                           ; BSR set to: 14
 31233                           ;mcc_generated_files/i2c1_master.c: 204:         returnValue = I2C1_NOERR;
 31234  00851C  0E00               	movlw	0
 31235  00851E  6E11               	movwf	I2C1_Open@returnValue^0,c
 31236  008520                     l20375:
 31237                           
 31238                           ;mcc_generated_files/i2c1_master.c: 206:     return returnValue;
 31239  008520  5011               	movf	I2C1_Open@returnValue^0,w,c
 31240  008522  0012               	return		;funcret
 31241  008524                     __end_of_I2C1_Open:
 31242                           	callstack 0
 31243                           
 31244 ;; *************** function _I2C1_MasterOpen *****************
 31245 ;; Defined at:
 31246 ;;		line 543 in file "mcc_generated_files/i2c1_master.c"
 31247 ;; Parameters:    Size  Location     Type
 31248 ;;		None
 31249 ;; Auto vars:     Size  Location     Type
 31250 ;;		None
 31251 ;; Return value:  Size  Location     Type
 31252 ;;                  1    wreg      _Bool 
 31253 ;; Registers used:
 31254 ;;		wreg, status,2
 31255 ;; Tracked objects:
 31256 ;;		On entry : 3F/E
 31257 ;;		On exit  : 3F/E
 31258 ;;		Unchanged: 3F/0
 31259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31260 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31261 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31263 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31264 ;;Total ram usage:        0 bytes
 31265 ;; Hardware stack levels used: 1
 31266 ;; Hardware stack levels required when called: 4
 31267 ;; This function calls:
 31268 ;;		Nothing
 31269 ;; This function is called by:
 31270 ;;		_I2C1_Open
 31271 ;; This function uses a non-reentrant model
 31272 ;;
 31273                           
 31274                           	psect	text135
 31275  009C46                     __ptext135:
 31276                           	callstack 0
 31277  009C46                     _I2C1_MasterOpen:
 31278                           	callstack 20
 31279                           
 31280                           ; BSR set to: 14
 31281                           ;mcc_generated_files/i2c1_master.c: 545:     if(!SSP1CON1bits.SSPEN)
 31282                           
 31283                           ;incstack = 0
 31284  009C46  BA96               	btfsc	150,5,c	;volatile
 31285  009C48  0012               	return	
 31286                           
 31287                           ; BSR set to: 14
 31288                           ;mcc_generated_files/i2c1_master.c: 546:     {;mcc_generated_files/i2c1_master.c: 547:  
      +                                 SSP1STAT = 0x80;
 31289  009C4A  0E80               	movlw	128
 31290  009C4C  6E95               	movwf	149,c	;volatile
 31291                           
 31292                           ;mcc_generated_files/i2c1_master.c: 548:         SSP1CON1 = 0x08;
 31293  009C4E  0E08               	movlw	8
 31294  009C50  6E96               	movwf	150,c	;volatile
 31295                           
 31296                           ;mcc_generated_files/i2c1_master.c: 549:         SSP1CON2 = 0x00;
 31297  009C52  0E00               	movlw	0
 31298  009C54  6E97               	movwf	151,c	;volatile
 31299                           
 31300                           ;mcc_generated_files/i2c1_master.c: 550:         SSP1ADD = 0x9F;
 31301  009C56  0E9F               	movlw	159
 31302  009C58  6E93               	movwf	147,c	;volatile
 31303                           
 31304                           ; BSR set to: 14
 31305                           ;mcc_generated_files/i2c1_master.c: 551:         SSP1CON1bits.SSPEN = 1;
 31306  009C5A  8A96               	bsf	150,5,c	;volatile
 31307                           
 31308                           ; BSR set to: 14
 31309  009C5C  0012               	return		;funcret
 31310  009C5E                     __end_of_I2C1_MasterOpen:
 31311                           	callstack 0
 31312                           
 31313 ;; *************** function _I2C1_MasterWrite *****************
 31314 ;; Defined at:
 31315 ;;		line 251 in file "mcc_generated_files/i2c1_master.c"
 31316 ;; Parameters:    Size  Location     Type
 31317 ;;		None
 31318 ;; Auto vars:     Size  Location     Type
 31319 ;;		None
 31320 ;; Return value:  Size  Location     Type
 31321 ;;                  1    wreg      enum E355
 31322 ;; Registers used:
 31323 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31324 ;; Tracked objects:
 31325 ;;		On entry : 0/2
 31326 ;;		On exit  : 3F/2
 31327 ;;		Unchanged: 0/0
 31328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31329 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31330 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31331 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31332 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31333 ;;Total ram usage:        0 bytes
 31334 ;; Hardware stack levels used: 1
 31335 ;; Hardware stack levels required when called: 11
 31336 ;; This function calls:
 31337 ;;		_I2C1_MasterOperation
 31338 ;; This function is called by:
 31339 ;;		_i2c_writeNBytes
 31340 ;;		_i2c_readDataBlock
 31341 ;;		_I2C1_Read1ByteRegister
 31342 ;; This function uses a non-reentrant model
 31343 ;;
 31344                           
 31345                           	psect	text136
 31346  009DE0                     __ptext136:
 31347                           	callstack 0
 31348  009DE0                     _I2C1_MasterWrite:
 31349                           	callstack 14
 31350                           
 31351                           ;mcc_generated_files/i2c1_master.c: 253:     return I2C1_MasterOperation(0);;	Return val
      +                          ue of _I2C1_MasterWrite is never used
 31352                           
 31353                           ; BSR set to: 14
 31354                           ;incstack = 0
 31355  009DE0  0E00               	movlw	0
 31356  009DE2  ECCD  F04B         	call	_I2C1_MasterOperation
 31357                           
 31358                           ; BSR set to: 2
 31359  009DE6  0012               	return		;funcret
 31360  009DE8                     __end_of_I2C1_MasterWrite:
 31361                           	callstack 0
 31362                           
 31363 ;; *************** function _I2C1_MasterOperation *****************
 31364 ;; Defined at:
 31365 ;;		line 224 in file "mcc_generated_files/i2c1_master.c"
 31366 ;; Parameters:    Size  Location     Type
 31367 ;;  read            1    wreg     _Bool 
 31368 ;; Auto vars:     Size  Location     Type
 31369 ;;  read            1   31[COMRAM] _Bool 
 31370 ;;  returnValue     1   32[COMRAM] enum E355
 31371 ;; Return value:  Size  Location     Type
 31372 ;;                  1    wreg      enum E355
 31373 ;; Registers used:
 31374 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31375 ;; Tracked objects:
 31376 ;;		On entry : 0/2
 31377 ;;		On exit  : 3F/2
 31378 ;;		Unchanged: 0/0
 31379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31381 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31383 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31384 ;;Total ram usage:        2 bytes
 31385 ;; Hardware stack levels used: 1
 31386 ;; Hardware stack levels required when called: 10
 31387 ;; This function calls:
 31388 ;;		_I2C1_MasterStart
 31389 ;;		_I2C1_Poller
 31390 ;; This function is called by:
 31391 ;;		_I2C1_MasterWrite
 31392 ;; This function uses a non-reentrant model
 31393 ;;
 31394                           
 31395                           	psect	text137
 31396  00979A                     __ptext137:
 31397                           	callstack 0
 31398  00979A                     _I2C1_MasterOperation:
 31399                           	callstack 14
 31400                           
 31401                           ; BSR set to: 2
 31402                           ;incstack = 0
 31403                           ;I2C1_MasterOperation@read stored from wreg
 31404  00979A  6E20               	movwf	I2C1_MasterOperation@read^0,c
 31405                           
 31406                           ;mcc_generated_files/i2c1_master.c: 224: i2c1_error_t I2C1_MasterOperation(_Bool read);m
      +                          cc_generated_files/i2c1_master.c: 225: {;mcc_generated_files/i2c1_master.c: 226:     i2c
      +                          1_error_t returnValue = I2C1_BUSY;
 31407  00979C  0E01               	movlw	1
 31408  00979E  6E21               	movwf	I2C1_MasterOperation@returnValue^0,c
 31409                           
 31410                           ;mcc_generated_files/i2c1_master.c: 227:     if(!I2C1_Status.busy)
 31411  0097A0  0102               	movlb	2	; () banked
 31412  0097A2  B35F               	btfsc	(_I2C1_Status+35)& (0+255),1,b
 31413  0097A4  D00E               	goto	l20327
 31414                           
 31415                           ; BSR set to: 2
 31416                           ;mcc_generated_files/i2c1_master.c: 228:     {;mcc_generated_files/i2c1_master.c: 229:  
      +                                 I2C1_Status.busy = 1;
 31417  0097A6  835F               	bsf	(_I2C1_Status+35)& (0+255),1,b
 31418                           
 31419                           ; BSR set to: 2
 31420                           ;mcc_generated_files/i2c1_master.c: 230:         returnValue = I2C1_NOERR;
 31421  0097A8  0E00               	movlw	0
 31422  0097AA  6E21               	movwf	I2C1_MasterOperation@returnValue^0,c
 31423                           
 31424                           ; BSR set to: 2
 31425                           ;mcc_generated_files/i2c1_master.c: 232:         if(read)
 31426  0097AC  5020               	movf	I2C1_MasterOperation@read^0,w,c
 31427  0097AE  B4D8               	btfsc	status,2,c
 31428  0097B0  D002               	goto	l20321
 31429                           
 31430                           ; BSR set to: 2
 31431                           ;mcc_generated_files/i2c1_master.c: 233:         {;mcc_generated_files/i2c1_master.c: 23
      +                          4:             I2C1_Status.state = I2C1_SEND_ADR_READ;
 31432  0097B2  0E01               	movlw	1
 31433  0097B4  D001               	goto	L111
 31434  0097B6                     l20321:
 31435                           
 31436                           ; BSR set to: 2
 31437                           ;mcc_generated_files/i2c1_master.c: 237:         {;mcc_generated_files/i2c1_master.c: 23
      +                          8:             I2C1_Status.state = I2C1_SEND_ADR_WRITE;
 31438  0097B6  0E02               	movlw	2
 31439  0097B8                     L111:
 31440  0097B8  6F5D               	movwf	(_I2C1_Status+33)& (0+255),b
 31441                           
 31442                           ; BSR set to: 2
 31443                           ;mcc_generated_files/i2c1_master.c: 240:         I2C1_MasterStart();
 31444  0097BA  EC43  F04F         	call	_I2C1_MasterStart	;wreg free
 31445                           
 31446                           ; BSR set to: 2
 31447                           ;mcc_generated_files/i2c1_master.c: 241:         I2C1_Poller();
 31448  0097BE  EC8B  F04E         	call	_I2C1_Poller	;wreg free
 31449  0097C2                     l20327:
 31450                           
 31451                           ; BSR set to: 2
 31452                           ;mcc_generated_files/i2c1_master.c: 243:     return returnValue;
 31453  0097C2  5021               	movf	I2C1_MasterOperation@returnValue^0,w,c
 31454                           
 31455                           ; BSR set to: 2
 31456  0097C4  0012               	return		;funcret
 31457  0097C6                     __end_of_I2C1_MasterOperation:
 31458                           	callstack 0
 31459                           
 31460 ;; *************** function _I2C1_Poller *****************
 31461 ;; Defined at:
 31462 ;;		line 312 in file "mcc_generated_files/i2c1_master.c"
 31463 ;; Parameters:    Size  Location     Type
 31464 ;;		None
 31465 ;; Auto vars:     Size  Location     Type
 31466 ;;		None
 31467 ;; Return value:  Size  Location     Type
 31468 ;;                  1    wreg      void 
 31469 ;; Registers used:
 31470 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31471 ;; Tracked objects:
 31472 ;;		On entry : 3F/2
 31473 ;;		On exit  : 3F/2
 31474 ;;		Unchanged: 0/0
 31475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31476 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31479 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31480 ;;Total ram usage:        0 bytes
 31481 ;; Hardware stack levels used: 1
 31482 ;; Hardware stack levels required when called: 9
 31483 ;; This function calls:
 31484 ;;		_I2C1_MasterFsm
 31485 ;;		_I2C1_MasterWaitForEvent
 31486 ;; This function is called by:
 31487 ;;		_I2C1_MasterOperation
 31488 ;; This function uses a non-reentrant model
 31489 ;;
 31490                           
 31491                           	psect	text138
 31492  009D16                     __ptext138:
 31493                           	callstack 0
 31494  009D16                     _I2C1_Poller:
 31495                           	callstack 14
 31496                           
 31497                           ; BSR set to: 2
 31498                           ;mcc_generated_files/i2c1_master.c: 314:     while(I2C1_Status.busy)
 31499                           
 31500                           ; BSR set to: 2
 31501                           ;incstack = 0
 31502  009D16  D004               	goto	l20295
 31503  009D18                     l20291:
 31504                           
 31505                           ; BSR set to: 2
 31506                           ;mcc_generated_files/i2c1_master.c: 315:     {;mcc_generated_files/i2c1_master.c: 316:  
      +                                 I2C1_MasterWaitForEvent();
 31507  009D18  ECF4  F04E         	call	_I2C1_MasterWaitForEvent	;wreg free
 31508                           
 31509                           ; BSR set to: 14
 31510                           ;mcc_generated_files/i2c1_master.c: 317:     I2C1_MasterFsm();
 31511  009D1C  EC5E  F048         	call	_I2C1_MasterFsm	;wreg free
 31512  009D20                     l20295:
 31513                           
 31514                           ; BSR set to: 2
 31515                           ;mcc_generated_files/i2c1_master.c: 314:     while(I2C1_Status.busy)
 31516  009D20  A35F               	btfss	(_I2C1_Status+35)& (0+255),1,b
 31517  009D22  0012               	return	
 31518  009D24  D7F9               	goto	l20291
 31519  009D26                     __end_of_I2C1_Poller:
 31520                           	callstack 0
 31521                           
 31522 ;; *************** function _I2C1_MasterWaitForEvent *****************
 31523 ;; Defined at:
 31524 ;;		line 650 in file "mcc_generated_files/i2c1_master.c"
 31525 ;; Parameters:    Size  Location     Type
 31526 ;;		None
 31527 ;; Auto vars:     Size  Location     Type
 31528 ;;		None
 31529 ;; Return value:  Size  Location     Type
 31530 ;;                  1    wreg      void 
 31531 ;; Registers used:
 31532 ;;		None
 31533 ;; Tracked objects:
 31534 ;;		On entry : 3F/2
 31535 ;;		On exit  : 3F/E
 31536 ;;		Unchanged: 0/0
 31537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31539 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31541 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31542 ;;Total ram usage:        0 bytes
 31543 ;; Hardware stack levels used: 1
 31544 ;; Hardware stack levels required when called: 4
 31545 ;; This function calls:
 31546 ;;		Nothing
 31547 ;; This function is called by:
 31548 ;;		_I2C1_Poller
 31549 ;; This function uses a non-reentrant model
 31550 ;;
 31551                           
 31552                           	psect	text139
 31553  009DE8                     __ptext139:
 31554                           	callstack 0
 31555  009DE8                     _I2C1_MasterWaitForEvent:
 31556                           	callstack 18
 31557                           
 31558                           ; BSR set to: 2
 31559                           ;mcc_generated_files/i2c1_master.c: 653:     {;mcc_generated_files/i2c1_master.c: 654:  
      +                                 if(PIR3bits.SSP1IF)
 31560                           
 31561                           ; BSR set to: 2
 31562                           ;incstack = 0
 31563                           ;mcc_generated_files/i2c1_master.c: 652:     while(1)
 31564  009DE8  010E               	movlb	14	; () banked
 31565  009DEA  B1CD               	btfsc	205,0,b	;volatile
 31566  009DEC  0012               	return	
 31567  009DEE  D7FC               	goto	__ptext139
 31568  009DF0                     __end_of_I2C1_MasterWaitForEvent:
 31569                           	callstack 0
 31570                           
 31571 ;; *************** function _I2C1_MasterFsm *****************
 31572 ;; Defined at:
 31573 ;;		line 321 in file "mcc_generated_files/i2c1_master.c"
 31574 ;; Parameters:    Size  Location     Type
 31575 ;;		None
 31576 ;; Auto vars:     Size  Location     Type
 31577 ;;		None
 31578 ;; Return value:  Size  Location     Type
 31579 ;;                  1    wreg      void 
 31580 ;; Registers used:
 31581 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31582 ;; Tracked objects:
 31583 ;;		On entry : 3F/E
 31584 ;;		On exit  : 3F/2
 31585 ;;		Unchanged: 0/0
 31586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31587 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31588 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31589 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31590 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31591 ;;Total ram usage:        3 bytes
 31592 ;; Hardware stack levels used: 1
 31593 ;; Hardware stack levels required when called: 8
 31594 ;; This function calls:
 31595 ;;		_I2C1_DO_ADDRESS_NACK
 31596 ;;		_I2C1_DO_IDLE
 31597 ;;		_I2C1_DO_RCEN
 31598 ;;		_I2C1_DO_RESET
 31599 ;;		_I2C1_DO_RX
 31600 ;;		_I2C1_DO_RX_ACK
 31601 ;;		_I2C1_DO_RX_NACK_RESTART
 31602 ;;		_I2C1_DO_RX_NACK_STOP
 31603 ;;		_I2C1_DO_SEND_ADR_READ
 31604 ;;		_I2C1_DO_SEND_ADR_WRITE
 31605 ;;		_I2C1_DO_SEND_RESTART
 31606 ;;		_I2C1_DO_SEND_RESTART_READ
 31607 ;;		_I2C1_DO_SEND_RESTART_WRITE
 31608 ;;		_I2C1_DO_SEND_STOP
 31609 ;;		_I2C1_DO_TX
 31610 ;;		_I2C1_DO_TX_EMPTY
 31611 ;;		_I2C1_MasterClearIrq
 31612 ;;		_I2C1_MasterIsNack
 31613 ;; This function is called by:
 31614 ;;		_I2C1_Poller
 31615 ;; This function uses a non-reentrant model
 31616 ;;
 31617                           
 31618                           	psect	text140
 31619  0090BC                     __ptext140:
 31620                           	callstack 0
 31621  0090BC                     _I2C1_MasterFsm:
 31622                           	callstack 14
 31623                           
 31624                           ; BSR set to: 14
 31625                           ;mcc_generated_files/i2c1_master.c: 323:     I2C1_MasterClearIrq();
 31626                           
 31627                           ; BSR set to: 14
 31628                           ;incstack = 0
 31629  0090BC  EC2A  F04F         	call	_I2C1_MasterClearIrq	;wreg free
 31630                           
 31631                           ; BSR set to: 14
 31632                           ;mcc_generated_files/i2c1_master.c: 325:     if(I2C1_Status.addressNackCheck && I2C1_Mas
      +                          terIsNack())
 31633  0090C0  0102               	movlb	2	; () banked
 31634  0090C2  A15F               	btfss	(_I2C1_Status+35)& (0+255),0,b
 31635  0090C4  D007               	goto	l20285
 31636                           
 31637                           ; BSR set to: 2
 31638  0090C6  ECA8  F04E         	call	_I2C1_MasterIsNack	;wreg free
 31639  0090CA  0900               	iorlw	0
 31640  0090CC  B4D8               	btfsc	status,2,c
 31641  0090CE  D002               	goto	l20285
 31642                           
 31643                           ; BSR set to: 2
 31644                           ;mcc_generated_files/i2c1_master.c: 326:     {;mcc_generated_files/i2c1_master.c: 327:  
      +                                 I2C1_Status.state = I2C1_ADDRESS_NACK;
 31645  0090D0  0E0F               	movlw	15
 31646  0090D2  6F5D               	movwf	(_I2C1_Status+33)& (0+255),b
 31647  0090D4                     l20285:
 31648                           
 31649                           ; BSR set to: 2
 31650                           ;mcc_generated_files/i2c1_master.c: 329:     I2C1_Status.state = i2c1_fsmStateTable[I2C1
      +                          _Status.state]();
 31651  0090D4  515D               	movf	(_I2C1_Status+33)& (0+255),w,b
 31652  0090D6  0D02               	mullw	2
 31653  0090D8  50F3               	movf	243,w,c
 31654  0090DA  0F01               	addlw	low _i2c1_fsmStateTable
 31655  0090DC  6E1D               	movwf	??_I2C1_MasterFsm^0,c
 31656  0090DE  C01D  FFF6         	movff	??_I2C1_MasterFsm,tblptrl
 31657  0090E2                     	if	1	;There is more than 1 active tblptr byte
 31658  0090E2  0E0F               	movlw	high __smallconst
 31659  0090E4  6EF7               	movwf	tblptrh,c
 31660  0090E6                     	endif
 31661  0090E6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 31662  0090E6  6AF8               	clrf	tblptru,c
 31663  0090E8                     	endif
 31664  0090E8                     	if	0	;tblptru may be non-zero
 31665  0090E8                     	endif
 31666  0090E8  0009               	tblrd		*+
 31667  0090EA  CFF5 F01E          	movff	tablat,??_I2C1_MasterFsm+1
 31668  0090EE  0009               	tblrd		*+
 31669  0090F0  CFF5 F01F          	movff	tablat,??_I2C1_MasterFsm+2
 31670  0090F4  D801               	call	u23288
 31671  0090F6  D009               	goto	u23289
 31672  0090F8                     u23288:
 31673  0090F8  0005               	push	
 31674  0090FA  6EFA               	movwf	pclath,c
 31675  0090FC  501E               	movf	(??_I2C1_MasterFsm+1)^0,w,c
 31676  0090FE  6EFD               	movwf	tosl,c
 31677  009100  501F               	movf	(??_I2C1_MasterFsm+2)^0,w,c
 31678  009102  6EFE               	movwf	tosh,c
 31679  009104  6AFF               	clrf	tosu,c
 31680  009106  50FA               	movf	pclath,w,c
 31681  009108  0012               	return		;indir
 31682  00910A                     u23289:
 31683  00910A  0102               	movlb	2	; () banked
 31684  00910C  6F5D               	movwf	(_I2C1_Status+33)& (0+255),b
 31685                           
 31686                           ; BSR set to: 2
 31687  00910E  0012               	return		;funcret
 31688  009110                     __end_of_I2C1_MasterFsm:
 31689                           	callstack 0
 31690                           
 31691 ;; *************** function _I2C1_DO_ADDRESS_NACK *****************
 31692 ;; Defined at:
 31693 ;;		line 500 in file "mcc_generated_files/i2c1_master.c"
 31694 ;; Parameters:    Size  Location     Type
 31695 ;;		None
 31696 ;; Auto vars:     Size  Location     Type
 31697 ;;		None
 31698 ;; Return value:  Size  Location     Type
 31699 ;;                  1    wreg      enum E10442
 31700 ;; Registers used:
 31701 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 31702 ;; Tracked objects:
 31703 ;;		On entry : 3F/2
 31704 ;;		On exit  : 0/0
 31705 ;;		Unchanged: 0/0
 31706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31707 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31708 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31709 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31710 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31711 ;;Total ram usage:        2 bytes
 31712 ;; Hardware stack levels used: 1
 31713 ;; Hardware stack levels required when called: 7
 31714 ;; This function calls:
 31715 ;;		Absolute function
 31716 ;;		_I2C1_CallbackReturnReset
 31717 ;;		_I2C1_CallbackReturnStop
 31718 ;;		_I2C1_DO_SEND_RESTART
 31719 ;;		_I2C1_DO_SEND_STOP
 31720 ;;		_rd1RegCompleteHandler
 31721 ;;		_rd1RegCompleteHandler@i2c1_master_example$F500
 31722 ;;		_rd2RegCompleteHandler
 31723 ;;		_rd2RegCompleteHandler@i2c1_master_example$F511
 31724 ;;		_rdBlkRegCompleteHandler
 31725 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F535
 31726 ;;		_wr1RegCompleteHandler
 31727 ;;		_wr1RegCompleteHandler@i2c1_master_example$F517
 31728 ;;		_wr2RegCompleteHandler
 31729 ;;		_wr2RegCompleteHandler@i2c1_master_example$F523
 31730 ;; This function is called by:
 31731 ;;		_I2C1_MasterFsm
 31732 ;; This function uses a non-reentrant model
 31733 ;;
 31734                           
 31735                           	psect	text141
 31736  009250                     __ptext141:
 31737                           	callstack 0
 31738  009250                     _I2C1_DO_ADDRESS_NACK:
 31739                           	callstack 14
 31740                           
 31741                           ; BSR set to: 2
 31742                           ;mcc_generated_files/i2c1_master.c: 502:     I2C1_Status.addressNackCheck = 0;
 31743                           
 31744                           ; BSR set to: 2
 31745                           ;incstack = 0
 31746  009250  915F               	bcf	(_I2C1_Status+35)& (0+255),0,b
 31747                           
 31748                           ; BSR set to: 2
 31749                           ;mcc_generated_files/i2c1_master.c: 503:     I2C1_Status.error = I2C1_FAIL;
 31750  009252  0E02               	movlw	2
 31751  009254  6F5E               	movwf	(_I2C1_Status+34)& (0+255),b
 31752                           
 31753                           ;mcc_generated_files/i2c1_master.c: 504:     switch(I2C1_Status.callbackTable[I2C1_ADDR_
      +                          NACK](I2C1_Status.callbackPayload[I2C1_ADDR_NACK]))
 31754  009256  D006               	goto	l20269
 31755  009258                     l20259:
 31756                           
 31757                           ;mcc_generated_files/i2c1_master.c: 508:             return I2C1_DO_SEND_RESTART();
 31758  009258  EC08  F04F         	call	_I2C1_DO_SEND_RESTART	;wreg free
 31759  00925C  0012               	return	
 31760  00925E                     l20263:
 31761                           
 31762                           ;mcc_generated_files/i2c1_master.c: 510:             return I2C1_DO_SEND_STOP();
 31763  00925E  EC04  F04F         	call	_I2C1_DO_SEND_STOP	;wreg free
 31764  009262  0012               	return	
 31765  009264                     l20269:
 31766                           
 31767                           ; BSR set to: 2
 31768  009264  C24C  F019         	movff	_I2C1_Status+16,I2C1_CallbackReturnReset@funPtr
 31769  009268  C24D  F01A         	movff	_I2C1_Status+17,I2C1_CallbackReturnReset@funPtr+1
 31770  00926C  D801               	call	u23248
 31771  00926E  D009               	goto	u23249
 31772  009270                     u23248:
 31773  009270  0005               	push	
 31774  009272  6EFA               	movwf	pclath,c
 31775  009274  5140               	movf	(_I2C1_Status+4)& (0+255),w,b
 31776  009276  6EFD               	movwf	tosl,c
 31777  009278  5141               	movf	(_I2C1_Status+5)& (0+255),w,b
 31778  00927A  6EFE               	movwf	tosh,c
 31779  00927C  6AFF               	clrf	tosu,c
 31780  00927E  50FA               	movf	pclath,w,c
 31781  009280  0012               	return		;indir
 31782  009282                     u23249:
 31783  009282  6E1B               	movwf	??_I2C1_DO_ADDRESS_NACK^0,c
 31784  009284  6A1C               	clrf	(??_I2C1_DO_ADDRESS_NACK+1)^0,c
 31785                           
 31786                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 31787                           ; Switch size 1, requested type "simple"
 31788                           ; Number of cases is 1, Range of values is 0 to 0
 31789                           ; switch strategies available:
 31790                           ; Name         Instructions Cycles
 31791                           ; simple_byte            4     3 (average)
 31792                           ;	Chosen strategy is simple_byte
 31793  009286  501C               	movf	(??_I2C1_DO_ADDRESS_NACK+1)^0,w,c
 31794  009288  0A00               	xorlw	0	; case 0
 31795  00928A  A4D8               	btfss	status,2,c
 31796  00928C  D7E8               	goto	l20263
 31797                           
 31798                           ; Switch size 1, requested type "simple"
 31799                           ; Number of cases is 2, Range of values is 2 to 3
 31800                           ; switch strategies available:
 31801                           ; Name         Instructions Cycles
 31802                           ; simple_byte            7     4 (average)
 31803                           ;	Chosen strategy is simple_byte
 31804  00928E  501B               	movf	??_I2C1_DO_ADDRESS_NACK^0,w,c
 31805  009290  0A02               	xorlw	2	; case 2
 31806  009292  B4D8               	btfsc	status,2,c
 31807  009294  D7E1               	goto	l20259
 31808  009296  0A01               	xorlw	1	; case 3
 31809  009298  B4D8               	btfsc	status,2,c
 31810  00929A  D7DE               	goto	l20259
 31811  00929C  D7E0               	goto	l20263
 31812  00929E                     __end_of_I2C1_DO_ADDRESS_NACK:
 31813                           	callstack 0
 31814                           
 31815 ;; *************** function _I2C1_DO_RESET *****************
 31816 ;; Defined at:
 31817 ;;		line 494 in file "mcc_generated_files/i2c1_master.c"
 31818 ;; Parameters:    Size  Location     Type
 31819 ;;		None
 31820 ;; Auto vars:     Size  Location     Type
 31821 ;;		None
 31822 ;; Return value:  Size  Location     Type
 31823 ;;                  1    wreg      enum E10442
 31824 ;; Registers used:
 31825 ;;		wreg, status,2
 31826 ;; Tracked objects:
 31827 ;;		On entry : 3F/2
 31828 ;;		On exit  : 3F/2
 31829 ;;		Unchanged: 0/0
 31830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31831 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31832 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31833 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31834 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31835 ;;Total ram usage:        0 bytes
 31836 ;; Hardware stack levels used: 1
 31837 ;; Hardware stack levels required when called: 4
 31838 ;; This function calls:
 31839 ;;		Nothing
 31840 ;; This function is called by:
 31841 ;;		_I2C1_MasterFsm
 31842 ;; This function uses a non-reentrant model
 31843 ;;
 31844                           
 31845                           	psect	text142
 31846  009DC2                     __ptext142:
 31847                           	callstack 0
 31848  009DC2                     _I2C1_DO_RESET:
 31849                           	callstack 17
 31850                           
 31851                           ; BSR set to: 2
 31852                           ;mcc_generated_files/i2c1_master.c: 496:     I2C1_Status.busy = 0;
 31853                           
 31854                           ;incstack = 0
 31855  009DC2  935F               	bcf	(_I2C1_Status+35)& (0+255),1,b
 31856                           
 31857                           ; BSR set to: 2
 31858                           ;mcc_generated_files/i2c1_master.c: 497:     I2C1_Status.error = I2C1_NOERR;
 31859  009DC4  0E00               	movlw	0
 31860  009DC6  6F5E               	movwf	(_I2C1_Status+34)& (0+255),b
 31861                           
 31862                           ; BSR set to: 2
 31863                           ;mcc_generated_files/i2c1_master.c: 498:     return I2C1_RESET;
 31864  009DC8  0E0E               	movlw	14
 31865                           
 31866                           ; BSR set to: 2
 31867  009DCA  0012               	return		;funcret
 31868  009DCC                     __end_of_I2C1_DO_RESET:
 31869                           	callstack 0
 31870                           
 31871 ;; *************** function _I2C1_DO_RX_NACK_RESTART *****************
 31872 ;; Defined at:
 31873 ;;		line 488 in file "mcc_generated_files/i2c1_master.c"
 31874 ;; Parameters:    Size  Location     Type
 31875 ;;		None
 31876 ;; Auto vars:     Size  Location     Type
 31877 ;;		None
 31878 ;; Return value:  Size  Location     Type
 31879 ;;                  1    wreg      enum E10442
 31880 ;; Registers used:
 31881 ;;		wreg, cstack
 31882 ;; Tracked objects:
 31883 ;;		On entry : 0/2
 31884 ;;		On exit  : 0/0
 31885 ;;		Unchanged: 0/0
 31886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31887 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31888 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31890 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31891 ;;Total ram usage:        0 bytes
 31892 ;; Hardware stack levels used: 1
 31893 ;; Hardware stack levels required when called: 5
 31894 ;; This function calls:
 31895 ;;		_I2C1_MasterSendNack
 31896 ;; This function is called by:
 31897 ;;		_I2C1_DO_RX
 31898 ;;		_I2C1_MasterFsm
 31899 ;; This function uses a non-reentrant model
 31900 ;;
 31901                           
 31902                           	psect	text143
 31903  009DF0                     __ptext143:
 31904                           	callstack 0
 31905  009DF0                     _I2C1_DO_RX_NACK_RESTART:
 31906                           	callstack 16
 31907                           
 31908                           ;mcc_generated_files/i2c1_master.c: 490:     I2C1_MasterSendNack();
 31909                           
 31910                           ; BSR set to: 2
 31911                           ;incstack = 0
 31912  009DF0  EC27  F04F         	call	_I2C1_MasterSendNack	;wreg free
 31913                           
 31914                           ;mcc_generated_files/i2c1_master.c: 491:     return I2C1_SEND_RESTART;
 31915  009DF4  0E09               	movlw	9
 31916  009DF6  0012               	return		;funcret
 31917  009DF8                     __end_of_I2C1_DO_RX_NACK_RESTART:
 31918                           	callstack 0
 31919                           
 31920 ;; *************** function _I2C1_DO_RX_NACK_STOP *****************
 31921 ;; Defined at:
 31922 ;;		line 482 in file "mcc_generated_files/i2c1_master.c"
 31923 ;; Parameters:    Size  Location     Type
 31924 ;;		None
 31925 ;; Auto vars:     Size  Location     Type
 31926 ;;		None
 31927 ;; Return value:  Size  Location     Type
 31928 ;;                  1    wreg      enum E10442
 31929 ;; Registers used:
 31930 ;;		wreg, cstack
 31931 ;; Tracked objects:
 31932 ;;		On entry : 0/2
 31933 ;;		On exit  : 0/0
 31934 ;;		Unchanged: 0/0
 31935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31936 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31937 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31939 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31940 ;;Total ram usage:        0 bytes
 31941 ;; Hardware stack levels used: 1
 31942 ;; Hardware stack levels required when called: 5
 31943 ;; This function calls:
 31944 ;;		_I2C1_MasterSendNack
 31945 ;; This function is called by:
 31946 ;;		_I2C1_DO_RX
 31947 ;;		_I2C1_MasterFsm
 31948 ;; This function uses a non-reentrant model
 31949 ;;
 31950                           
 31951                           	psect	text144
 31952  009DF8                     __ptext144:
 31953                           	callstack 0
 31954  009DF8                     _I2C1_DO_RX_NACK_STOP:
 31955                           	callstack 16
 31956                           
 31957                           ;mcc_generated_files/i2c1_master.c: 484:     I2C1_MasterSendNack();
 31958                           
 31959                           ;incstack = 0
 31960  009DF8  EC27  F04F         	call	_I2C1_MasterSendNack	;wreg free
 31961                           
 31962                           ;mcc_generated_files/i2c1_master.c: 485:     return I2C1_SEND_STOP;
 31963  009DFC  0E0A               	movlw	10
 31964  009DFE  0012               	return		;funcret
 31965  009E00                     __end_of_I2C1_DO_RX_NACK_STOP:
 31966                           	callstack 0
 31967                           
 31968 ;; *************** function _I2C1_DO_RX_ACK *****************
 31969 ;; Defined at:
 31970 ;;		line 475 in file "mcc_generated_files/i2c1_master.c"
 31971 ;; Parameters:    Size  Location     Type
 31972 ;;		None
 31973 ;; Auto vars:     Size  Location     Type
 31974 ;;		None
 31975 ;; Return value:  Size  Location     Type
 31976 ;;                  1    wreg      enum E10442
 31977 ;; Registers used:
 31978 ;;		wreg, cstack
 31979 ;; Tracked objects:
 31980 ;;		On entry : 3F/2
 31981 ;;		On exit  : 3F/2
 31982 ;;		Unchanged: 3F/0
 31983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31984 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31985 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31987 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31988 ;;Total ram usage:        0 bytes
 31989 ;; Hardware stack levels used: 1
 31990 ;; Hardware stack levels required when called: 5
 31991 ;; This function calls:
 31992 ;;		_I2C1_MasterSendAck
 31993 ;; This function is called by:
 31994 ;;		_I2C1_MasterFsm
 31995 ;; This function uses a non-reentrant model
 31996 ;;
 31997                           
 31998                           	psect	text145
 31999  009E00                     __ptext145:
 32000                           	callstack 0
 32001  009E00                     _I2C1_DO_RX_ACK:
 32002                           	callstack 16
 32003                           
 32004                           ; BSR set to: 2
 32005                           ;mcc_generated_files/i2c1_master.c: 477:     I2C1_MasterSendAck();
 32006                           
 32007                           ;incstack = 0
 32008  009E00  EC24  F04F         	call	_I2C1_MasterSendAck	;wreg free
 32009                           
 32010                           ; BSR set to: 2
 32011                           ;mcc_generated_files/i2c1_master.c: 478:     return I2C1_RCEN;
 32012  009E04  0E05               	movlw	5
 32013                           
 32014                           ; BSR set to: 2
 32015  009E06  0012               	return		;funcret
 32016  009E08                     __end_of_I2C1_DO_RX_ACK:
 32017                           	callstack 0
 32018                           
 32019 ;; *************** function _I2C1_DO_SEND_STOP *****************
 32020 ;; Defined at:
 32021 ;;		line 469 in file "mcc_generated_files/i2c1_master.c"
 32022 ;; Parameters:    Size  Location     Type
 32023 ;;		None
 32024 ;; Auto vars:     Size  Location     Type
 32025 ;;		None
 32026 ;; Return value:  Size  Location     Type
 32027 ;;                  1    wreg      enum E10442
 32028 ;; Registers used:
 32029 ;;		wreg, cstack
 32030 ;; Tracked objects:
 32031 ;;		On entry : 0/2
 32032 ;;		On exit  : 0/0
 32033 ;;		Unchanged: 0/0
 32034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32035 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32036 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32038 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32039 ;;Total ram usage:        0 bytes
 32040 ;; Hardware stack levels used: 1
 32041 ;; Hardware stack levels required when called: 5
 32042 ;; This function calls:
 32043 ;;		_I2C1_MasterStop
 32044 ;; This function is called by:
 32045 ;;		_I2C1_DO_TX
 32046 ;;		_I2C1_DO_TX_EMPTY
 32047 ;;		_I2C1_DO_ADDRESS_NACK
 32048 ;;		_I2C1_MasterFsm
 32049 ;; This function uses a non-reentrant model
 32050 ;;
 32051                           
 32052                           	psect	text146
 32053  009E08                     __ptext146:
 32054                           	callstack 0
 32055  009E08                     _I2C1_DO_SEND_STOP:
 32056                           	callstack 15
 32057                           
 32058                           ;mcc_generated_files/i2c1_master.c: 471:     I2C1_MasterStop();
 32059                           
 32060                           ; BSR set to: 2
 32061                           ;incstack = 0
 32062  009E08  EC3F  F04F         	call	_I2C1_MasterStop	;wreg free
 32063                           
 32064                           ;mcc_generated_files/i2c1_master.c: 472:     return I2C1_IDLE;
 32065  009E0C  0E00               	movlw	0
 32066  009E0E  0012               	return		;funcret
 32067  009E10                     __end_of_I2C1_DO_SEND_STOP:
 32068                           	callstack 0
 32069                           
 32070 ;; *************** function _I2C1_DO_SEND_RESTART *****************
 32071 ;; Defined at:
 32072 ;;		line 463 in file "mcc_generated_files/i2c1_master.c"
 32073 ;; Parameters:    Size  Location     Type
 32074 ;;		None
 32075 ;; Auto vars:     Size  Location     Type
 32076 ;;		None
 32077 ;; Return value:  Size  Location     Type
 32078 ;;                  1    wreg      enum E10442
 32079 ;; Registers used:
 32080 ;;		wreg, cstack
 32081 ;; Tracked objects:
 32082 ;;		On entry : 0/2
 32083 ;;		On exit  : 0/0
 32084 ;;		Unchanged: 0/0
 32085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32089 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32090 ;;Total ram usage:        0 bytes
 32091 ;; Hardware stack levels used: 1
 32092 ;; Hardware stack levels required when called: 5
 32093 ;; This function calls:
 32094 ;;		_I2C1_MasterEnableRestart
 32095 ;; This function is called by:
 32096 ;;		_I2C1_DO_TX_EMPTY
 32097 ;;		_I2C1_DO_ADDRESS_NACK
 32098 ;;		_I2C1_MasterFsm
 32099 ;; This function uses a non-reentrant model
 32100 ;;
 32101                           
 32102                           	psect	text147
 32103  009E10                     __ptext147:
 32104                           	callstack 0
 32105  009E10                     _I2C1_DO_SEND_RESTART:
 32106                           	callstack 15
 32107                           
 32108                           ;mcc_generated_files/i2c1_master.c: 465:     I2C1_MasterEnableRestart();
 32109                           
 32110                           ;incstack = 0
 32111  009E10  EC41  F04F         	call	_I2C1_MasterEnableRestart	;wreg free
 32112                           
 32113                           ;mcc_generated_files/i2c1_master.c: 466:     return I2C1_SEND_ADR_READ;
 32114  009E14  0E01               	movlw	1
 32115  009E16  0012               	return		;funcret
 32116  009E18                     __end_of_I2C1_DO_SEND_RESTART:
 32117                           	callstack 0
 32118                           
 32119 ;; *************** function _I2C1_DO_SEND_RESTART_WRITE *****************
 32120 ;; Defined at:
 32121 ;;		line 456 in file "mcc_generated_files/i2c1_master.c"
 32122 ;; Parameters:    Size  Location     Type
 32123 ;;		None
 32124 ;; Auto vars:     Size  Location     Type
 32125 ;;		None
 32126 ;; Return value:  Size  Location     Type
 32127 ;;                  1    wreg      enum E10442
 32128 ;; Registers used:
 32129 ;;		wreg, cstack
 32130 ;; Tracked objects:
 32131 ;;		On entry : 0/2
 32132 ;;		On exit  : 0/0
 32133 ;;		Unchanged: 0/0
 32134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32135 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32136 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32137 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32138 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32139 ;;Total ram usage:        0 bytes
 32140 ;; Hardware stack levels used: 1
 32141 ;; Hardware stack levels required when called: 5
 32142 ;; This function calls:
 32143 ;;		_I2C1_MasterEnableRestart
 32144 ;; This function is called by:
 32145 ;;		_I2C1_DO_TX
 32146 ;;		_I2C1_MasterFsm
 32147 ;; This function uses a non-reentrant model
 32148 ;;
 32149                           
 32150                           	psect	text148
 32151  009E18                     __ptext148:
 32152                           	callstack 0
 32153  009E18                     _I2C1_DO_SEND_RESTART_WRITE:
 32154                           	callstack 15
 32155                           
 32156                           ;mcc_generated_files/i2c1_master.c: 458:     I2C1_MasterEnableRestart();
 32157                           
 32158                           ;incstack = 0
 32159  009E18  EC41  F04F         	call	_I2C1_MasterEnableRestart	;wreg free
 32160                           
 32161                           ;mcc_generated_files/i2c1_master.c: 459:     return I2C1_SEND_ADR_WRITE;
 32162  009E1C  0E02               	movlw	2
 32163  009E1E  0012               	return		;funcret
 32164  009E20                     __end_of_I2C1_DO_SEND_RESTART_WRITE:
 32165                           	callstack 0
 32166                           
 32167 ;; *************** function _I2C1_DO_SEND_RESTART_READ *****************
 32168 ;; Defined at:
 32169 ;;		line 450 in file "mcc_generated_files/i2c1_master.c"
 32170 ;; Parameters:    Size  Location     Type
 32171 ;;		None
 32172 ;; Auto vars:     Size  Location     Type
 32173 ;;		None
 32174 ;; Return value:  Size  Location     Type
 32175 ;;                  1    wreg      enum E10442
 32176 ;; Registers used:
 32177 ;;		wreg, cstack
 32178 ;; Tracked objects:
 32179 ;;		On entry : 0/2
 32180 ;;		On exit  : 0/0
 32181 ;;		Unchanged: 0/0
 32182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32186 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32187 ;;Total ram usage:        0 bytes
 32188 ;; Hardware stack levels used: 1
 32189 ;; Hardware stack levels required when called: 5
 32190 ;; This function calls:
 32191 ;;		_I2C1_MasterEnableRestart
 32192 ;; This function is called by:
 32193 ;;		_I2C1_DO_TX
 32194 ;;		_I2C1_MasterFsm
 32195 ;; This function uses a non-reentrant model
 32196 ;;
 32197                           
 32198                           	psect	text149
 32199  009E20                     __ptext149:
 32200                           	callstack 0
 32201  009E20                     _I2C1_DO_SEND_RESTART_READ:
 32202                           	callstack 15
 32203                           
 32204                           ;mcc_generated_files/i2c1_master.c: 452:     I2C1_MasterEnableRestart();
 32205                           
 32206                           ;incstack = 0
 32207  009E20  EC41  F04F         	call	_I2C1_MasterEnableRestart	;wreg free
 32208                           
 32209                           ;mcc_generated_files/i2c1_master.c: 453:     return I2C1_SEND_ADR_READ;
 32210  009E24  0E01               	movlw	1
 32211  009E26  0012               	return		;funcret
 32212  009E28                     __end_of_I2C1_DO_SEND_RESTART_READ:
 32213                           	callstack 0
 32214                           
 32215 ;; *************** function _I2C1_DO_RCEN *****************
 32216 ;; Defined at:
 32217 ;;		line 402 in file "mcc_generated_files/i2c1_master.c"
 32218 ;; Parameters:    Size  Location     Type
 32219 ;;		None
 32220 ;; Auto vars:     Size  Location     Type
 32221 ;;		None
 32222 ;; Return value:  Size  Location     Type
 32223 ;;                  1    wreg      enum E10442
 32224 ;; Registers used:
 32225 ;;		wreg, cstack
 32226 ;; Tracked objects:
 32227 ;;		On entry : 3F/2
 32228 ;;		On exit  : 3F/2
 32229 ;;		Unchanged: 0/0
 32230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32234 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32235 ;;Total ram usage:        0 bytes
 32236 ;; Hardware stack levels used: 1
 32237 ;; Hardware stack levels required when called: 5
 32238 ;; This function calls:
 32239 ;;		_I2C1_MasterStartRx
 32240 ;; This function is called by:
 32241 ;;		_I2C1_MasterFsm
 32242 ;; This function uses a non-reentrant model
 32243 ;;
 32244                           
 32245                           	psect	text150
 32246  009DCC                     __ptext150:
 32247                           	callstack 0
 32248  009DCC                     _I2C1_DO_RCEN:
 32249                           	callstack 16
 32250                           
 32251                           ; BSR set to: 2
 32252                           ;mcc_generated_files/i2c1_master.c: 404:     I2C1_Status.addressNackCheck = 0;
 32253                           
 32254                           ;incstack = 0
 32255  009DCC  915F               	bcf	(_I2C1_Status+35)& (0+255),0,b
 32256                           
 32257                           ; BSR set to: 2
 32258                           ;mcc_generated_files/i2c1_master.c: 405:     I2C1_MasterStartRx();
 32259  009DCE  EC39  F04F         	call	_I2C1_MasterStartRx	;wreg free
 32260                           
 32261                           ; BSR set to: 2
 32262                           ;mcc_generated_files/i2c1_master.c: 406:     return I2C1_RX;
 32263  009DD2  0E04               	movlw	4
 32264                           
 32265                           ; BSR set to: 2
 32266  009DD4  0012               	return		;funcret
 32267  009DD6                     __end_of_I2C1_DO_RCEN:
 32268                           	callstack 0
 32269                           
 32270 ;; *************** function _I2C1_DO_RX *****************
 32271 ;; Defined at:
 32272 ;;		line 378 in file "mcc_generated_files/i2c1_master.c"
 32273 ;; Parameters:    Size  Location     Type
 32274 ;;		None
 32275 ;; Auto vars:     Size  Location     Type
 32276 ;;		None
 32277 ;; Return value:  Size  Location     Type
 32278 ;;                  1    wreg      enum E10442
 32279 ;; Registers used:
 32280 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 32281 ;; Tracked objects:
 32282 ;;		On entry : 3F/2
 32283 ;;		On exit  : 0/0
 32284 ;;		Unchanged: 0/0
 32285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32288 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32289 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32290 ;;Total ram usage:        2 bytes
 32291 ;; Hardware stack levels used: 1
 32292 ;; Hardware stack levels required when called: 7
 32293 ;; This function calls:
 32294 ;;		Absolute function
 32295 ;;		_I2C1_CallbackReturnReset
 32296 ;;		_I2C1_CallbackReturnStop
 32297 ;;		_I2C1_DO_RX_NACK_RESTART
 32298 ;;		_I2C1_DO_RX_NACK_STOP
 32299 ;;		_I2C1_MasterGetRxData
 32300 ;;		_I2C1_MasterSendAck
 32301 ;;		_rd1RegCompleteHandler
 32302 ;;		_rd1RegCompleteHandler@i2c1_master_example$F500
 32303 ;;		_rd2RegCompleteHandler
 32304 ;;		_rd2RegCompleteHandler@i2c1_master_example$F511
 32305 ;;		_rdBlkRegCompleteHandler
 32306 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F535
 32307 ;;		_wr1RegCompleteHandler
 32308 ;;		_wr1RegCompleteHandler@i2c1_master_example$F517
 32309 ;;		_wr2RegCompleteHandler
 32310 ;;		_wr2RegCompleteHandler@i2c1_master_example$F523
 32311 ;; This function is called by:
 32312 ;;		_I2C1_MasterFsm
 32313 ;; This function uses a non-reentrant model
 32314 ;;
 32315                           
 32316                           	psect	text151
 32317  008720                     __ptext151:
 32318                           	callstack 0
 32319  008720                     _I2C1_DO_RX:
 32320                           	callstack 14
 32321                           
 32322                           ; BSR set to: 2
 32323                           ;mcc_generated_files/i2c1_master.c: 380:     *I2C1_Status.data_ptr++ = I2C1_MasterGetRxD
      +                          ata();
 32324                           
 32325                           ; BSR set to: 2
 32326                           ;incstack = 0
 32327  008720  EC37  F04F         	call	_I2C1_MasterGetRxData	;wreg free
 32328  008724  C259  FFD9         	movff	_I2C1_Status+29,fsr2l
 32329  008728  C25A  FFDA         	movff	_I2C1_Status+30,fsr2h
 32330  00872C  6EDF               	movwf	indf2,c
 32331                           
 32332                           ; BSR set to: 2
 32333  00872E  4B59               	infsnz	(_I2C1_Status+29)& (0+255),f,b
 32334  008730  2B5A               	incf	(_I2C1_Status+30)& (0+255),f,b
 32335                           
 32336                           ; BSR set to: 2
 32337                           ;mcc_generated_files/i2c1_master.c: 381:     if(--I2C1_Status.data_length)
 32338  008732  075B               	decf	(_I2C1_Status+31)& (0+255),f,b
 32339  008734  A0D8               	btfss	status,0,c
 32340  008736  075C               	decf	(_I2C1_Status+32)& (0+255),f,b
 32341  008738  515B               	movf	(_I2C1_Status+31)& (0+255),w,b
 32342  00873A  115C               	iorwf	(_I2C1_Status+32)& (0+255),w,b
 32343  00873C  B4D8               	btfsc	status,2,c
 32344  00873E  D004               	goto	l690
 32345                           
 32346                           ; BSR set to: 2
 32347                           ;mcc_generated_files/i2c1_master.c: 382:     {;mcc_generated_files/i2c1_master.c: 383:  
      +                                 I2C1_MasterSendAck();
 32348  008740  EC24  F04F         	call	_I2C1_MasterSendAck	;wreg free
 32349                           
 32350                           ; BSR set to: 2
 32351                           ;mcc_generated_files/i2c1_master.c: 384:         return I2C1_RCEN;
 32352  008744  0E05               	movlw	5
 32353  008746  0012               	return	
 32354  008748                     l690:
 32355                           
 32356                           ; BSR set to: 2
 32357                           ;mcc_generated_files/i2c1_master.c: 387:     {;mcc_generated_files/i2c1_master.c: 388:  
      +                                 I2C1_Status.bufferFree = 1;
 32358  008748  875F               	bsf	(_I2C1_Status+35)& (0+255),3,b
 32359                           
 32360                           ;mcc_generated_files/i2c1_master.c: 389:         switch(I2C1_Status.callbackTable[I2C1_D
      +                          ATA_COMPLETE](I2C1_Status.callbackPayload[I2C1_DATA_COMPLETE]))
 32361  00874A  D006               	goto	l20203
 32362  00874C                     l20193:
 32363                           
 32364                           ;mcc_generated_files/i2c1_master.c: 393:                 return I2C1_DO_RX_NACK_RESTART(
      +                          );
 32365  00874C  ECF8  F04E         	call	_I2C1_DO_RX_NACK_RESTART	;wreg free
 32366  008750  0012               	return	
 32367  008752                     l20197:
 32368                           
 32369                           ;mcc_generated_files/i2c1_master.c: 397:                 return I2C1_DO_RX_NACK_STOP();
 32370  008752  ECFC  F04E         	call	_I2C1_DO_RX_NACK_STOP	;wreg free
 32371  008756  0012               	return	
 32372  008758                     l20203:
 32373                           
 32374                           ; BSR set to: 2
 32375  008758  C248  F019         	movff	_I2C1_Status+12,I2C1_CallbackReturnReset@funPtr
 32376  00875C  C249  F01A         	movff	_I2C1_Status+13,I2C1_CallbackReturnReset@funPtr+1
 32377  008760  D801               	call	u23228
 32378  008762  D009               	goto	u23229
 32379  008764                     u23228:
 32380  008764  0005               	push	
 32381  008766  6EFA               	movwf	pclath,c
 32382  008768  513C               	movf	_I2C1_Status& (0+255),w,b
 32383  00876A  6EFD               	movwf	tosl,c
 32384  00876C  513D               	movf	(_I2C1_Status+1)& (0+255),w,b
 32385  00876E  6EFE               	movwf	tosh,c
 32386  008770  6AFF               	clrf	tosu,c
 32387  008772  50FA               	movf	pclath,w,c
 32388  008774  0012               	return		;indir
 32389  008776                     u23229:
 32390  008776  6E1B               	movwf	??_I2C1_DO_RX^0,c
 32391  008778  6A1C               	clrf	(??_I2C1_DO_RX+1)^0,c
 32392                           
 32393                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 32394                           ; Switch size 1, requested type "simple"
 32395                           ; Number of cases is 1, Range of values is 0 to 0
 32396                           ; switch strategies available:
 32397                           ; Name         Instructions Cycles
 32398                           ; simple_byte            4     3 (average)
 32399                           ;	Chosen strategy is simple_byte
 32400  00877A  501C               	movf	(??_I2C1_DO_RX+1)^0,w,c
 32401  00877C  0A00               	xorlw	0	; case 0
 32402  00877E  A4D8               	btfss	status,2,c
 32403  008780  D7E8               	goto	l20197
 32404                           
 32405                           ; Switch size 1, requested type "simple"
 32406                           ; Number of cases is 4, Range of values is 1 to 4
 32407                           ; switch strategies available:
 32408                           ; Name         Instructions Cycles
 32409                           ; simple_byte           13     7 (average)
 32410                           ;	Chosen strategy is simple_byte
 32411  008782  501B               	movf	??_I2C1_DO_RX^0,w,c
 32412  008784  0A01               	xorlw	1	; case 1
 32413  008786  B4D8               	btfsc	status,2,c
 32414  008788  D7E4               	goto	l20197
 32415  00878A  0A03               	xorlw	3	; case 2
 32416  00878C  B4D8               	btfsc	status,2,c
 32417  00878E  D7DE               	goto	l20193
 32418  008790  0A01               	xorlw	1	; case 3
 32419  008792  B4D8               	btfsc	status,2,c
 32420  008794  D7DB               	goto	l20193
 32421  008796  0A07               	xorlw	7	; case 4
 32422  008798  D7DC               	goto	l20197
 32423  00879A                     __end_of_I2C1_DO_RX:
 32424                           	callstack 0
 32425                           
 32426 ;; *************** function _I2C1_DO_TX *****************
 32427 ;; Defined at:
 32428 ;;		line 354 in file "mcc_generated_files/i2c1_master.c"
 32429 ;; Parameters:    Size  Location     Type
 32430 ;;		None
 32431 ;; Auto vars:     Size  Location     Type
 32432 ;;		None
 32433 ;; Return value:  Size  Location     Type
 32434 ;;                  1    wreg      enum E10442
 32435 ;; Registers used:
 32436 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 32437 ;; Tracked objects:
 32438 ;;		On entry : 3F/2
 32439 ;;		On exit  : 0/0
 32440 ;;		Unchanged: 0/0
 32441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32442 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32443 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32444 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32445 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32446 ;;Total ram usage:        2 bytes
 32447 ;; Hardware stack levels used: 1
 32448 ;; Hardware stack levels required when called: 7
 32449 ;; This function calls:
 32450 ;;		Absolute function
 32451 ;;		_I2C1_CallbackReturnReset
 32452 ;;		_I2C1_CallbackReturnStop
 32453 ;;		_I2C1_DO_SEND_RESTART_READ
 32454 ;;		_I2C1_DO_SEND_RESTART_WRITE
 32455 ;;		_I2C1_DO_SEND_STOP
 32456 ;;		_I2C1_MasterIsNack
 32457 ;;		_I2C1_MasterSendTxData
 32458 ;;		_rd1RegCompleteHandler
 32459 ;;		_rd1RegCompleteHandler@i2c1_master_example$F500
 32460 ;;		_rd2RegCompleteHandler
 32461 ;;		_rd2RegCompleteHandler@i2c1_master_example$F511
 32462 ;;		_rdBlkRegCompleteHandler
 32463 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F535
 32464 ;;		_wr1RegCompleteHandler
 32465 ;;		_wr1RegCompleteHandler@i2c1_master_example$F517
 32466 ;;		_wr2RegCompleteHandler
 32467 ;;		_wr2RegCompleteHandler@i2c1_master_example$F523
 32468 ;; This function is called by:
 32469 ;;		_I2C1_MasterFsm
 32470 ;; This function uses a non-reentrant model
 32471 ;;
 32472                           
 32473                           	psect	text152
 32474  008282                     __ptext152:
 32475                           	callstack 0
 32476  008282                     _I2C1_DO_TX:
 32477                           	callstack 14
 32478                           
 32479                           ; BSR set to: 2
 32480                           ;mcc_generated_files/i2c1_master.c: 356:     if(I2C1_MasterIsNack())
 32481                           
 32482                           ;incstack = 0
 32483  008282  ECA8  F04E         	call	_I2C1_MasterIsNack	;wreg free
 32484  008286  0900               	iorlw	0
 32485  008288  A4D8               	btfss	status,2,c
 32486  00828A  D00A               	goto	l20163
 32487  00828C  D02A               	goto	l674
 32488  00828E                     l20149:
 32489                           
 32490                           ;mcc_generated_files/i2c1_master.c: 361:                 return I2C1_DO_SEND_RESTART_REA
      +                          D();
 32491  00828E  EC10  F04F         	call	_I2C1_DO_SEND_RESTART_READ	;wreg free
 32492  008292  0012               	return	
 32493  008294                     l20153:
 32494                           
 32495                           ;mcc_generated_files/i2c1_master.c: 363:                   return I2C1_DO_SEND_RESTART_W
      +                          RITE();
 32496  008294  EC0C  F04F         	call	_I2C1_DO_SEND_RESTART_WRITE	;wreg free
 32497  008298  0012               	return	
 32498  00829A                     l20157:
 32499                           
 32500                           ;mcc_generated_files/i2c1_master.c: 367:                 return I2C1_DO_SEND_STOP();
 32501  00829A  EC04  F04F         	call	_I2C1_DO_SEND_STOP	;wreg free
 32502  00829E  0012               	return	
 32503  0082A0                     l20163:
 32504                           
 32505                           ; BSR set to: 2
 32506  0082A0  C24E  F019         	movff	_I2C1_Status+18,I2C1_CallbackReturnReset@funPtr
 32507  0082A4  C24F  F01A         	movff	_I2C1_Status+19,I2C1_CallbackReturnReset@funPtr+1
 32508  0082A8  D801               	call	u23198
 32509  0082AA  D009               	goto	u23199
 32510  0082AC                     u23198:
 32511  0082AC  0005               	push	
 32512  0082AE  6EFA               	movwf	pclath,c
 32513  0082B0  5142               	movf	(_I2C1_Status+6)& (0+255),w,b
 32514  0082B2  6EFD               	movwf	tosl,c
 32515  0082B4  5143               	movf	(_I2C1_Status+7)& (0+255),w,b
 32516  0082B6  6EFE               	movwf	tosh,c
 32517  0082B8  6AFF               	clrf	tosu,c
 32518  0082BA  50FA               	movf	pclath,w,c
 32519  0082BC  0012               	return		;indir
 32520  0082BE                     u23199:
 32521  0082BE  6E1B               	movwf	??_I2C1_DO_TX^0,c
 32522  0082C0  6A1C               	clrf	(??_I2C1_DO_TX+1)^0,c
 32523                           
 32524                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 32525                           ; Switch size 1, requested type "simple"
 32526                           ; Number of cases is 1, Range of values is 0 to 0
 32527                           ; switch strategies available:
 32528                           ; Name         Instructions Cycles
 32529                           ; simple_byte            4     3 (average)
 32530                           ;	Chosen strategy is simple_byte
 32531  0082C2  501C               	movf	(??_I2C1_DO_TX+1)^0,w,c
 32532  0082C4  0A00               	xorlw	0	; case 0
 32533  0082C6  A4D8               	btfss	status,2,c
 32534  0082C8  D7E8               	goto	l20157
 32535                           
 32536                           ; Switch size 1, requested type "simple"
 32537                           ; Number of cases is 4, Range of values is 1 to 4
 32538                           ; switch strategies available:
 32539                           ; Name         Instructions Cycles
 32540                           ; simple_byte           13     7 (average)
 32541                           ;	Chosen strategy is simple_byte
 32542  0082CA  501B               	movf	??_I2C1_DO_TX^0,w,c
 32543  0082CC  0A01               	xorlw	1	; case 1
 32544  0082CE  B4D8               	btfsc	status,2,c
 32545  0082D0  D7E4               	goto	l20157
 32546  0082D2  0A03               	xorlw	3	; case 2
 32547  0082D4  B4D8               	btfsc	status,2,c
 32548  0082D6  D7DB               	goto	l20149
 32549  0082D8  0A01               	xorlw	1	; case 3
 32550  0082DA  B4D8               	btfsc	status,2,c
 32551  0082DC  D7DB               	goto	l20153
 32552  0082DE  0A07               	xorlw	7	; case 4
 32553  0082E0  D7DC               	goto	l20157
 32554  0082E2                     l674:
 32555                           
 32556                           ; BSR set to: 2
 32557                           ;mcc_generated_files/i2c1_master.c: 371:     {;mcc_generated_files/i2c1_master.c: 372:  
      +                                 I2C1_Status.addressNackCheck = 0;
 32558  0082E2  915F               	bcf	(_I2C1_Status+35)& (0+255),0,b
 32559                           
 32560                           ; BSR set to: 2
 32561                           ;mcc_generated_files/i2c1_master.c: 373:         I2C1_MasterSendTxData(*I2C1_Status.data
      +                          _ptr++);
 32562  0082E4  C259  FFD9         	movff	_I2C1_Status+29,fsr2l
 32563  0082E8  C25A  FFDA         	movff	_I2C1_Status+30,fsr2h
 32564  0082EC  4B59               	infsnz	(_I2C1_Status+29)& (0+255),f,b
 32565  0082EE  2B5A               	incf	(_I2C1_Status+30)& (0+255),f,b
 32566  0082F0  50DF               	movf	indf2,w,c
 32567  0082F2  EC14  F04F         	call	_I2C1_MasterSendTxData
 32568                           
 32569                           ;mcc_generated_files/i2c1_master.c: 374:         return (--I2C1_Status.data_length)?I2C1
      +                          _TX:I2C1_TX_EMPTY;
 32570  0082F6  0102               	movlb	2	; () banked
 32571  0082F8  075B               	decf	(_I2C1_Status+31)& (0+255),f,b
 32572  0082FA  A0D8               	btfss	status,0,c
 32573  0082FC  075C               	decf	(_I2C1_Status+32)& (0+255),f,b
 32574  0082FE  515B               	movf	(_I2C1_Status+31)& (0+255),w,b
 32575  008300  115C               	iorwf	(_I2C1_Status+32)& (0+255),w,b
 32576  008302  A4D8               	btfss	status,2,c
 32577  008304  D002               	goto	l20171
 32578                           
 32579                           ; BSR set to: 2
 32580  008306  0E06               	movlw	6
 32581  008308  0012               	return	
 32582  00830A                     l20171:
 32583                           
 32584                           ; BSR set to: 2
 32585  00830A  0E03               	movlw	3
 32586  00830C  0012               	return		;funcret
 32587  00830E                     __end_of_I2C1_DO_TX:
 32588                           	callstack 0
 32589                           
 32590 ;; *************** function _I2C1_DO_SEND_ADR_WRITE *****************
 32591 ;; Defined at:
 32592 ;;		line 347 in file "mcc_generated_files/i2c1_master.c"
 32593 ;; Parameters:    Size  Location     Type
 32594 ;;		None
 32595 ;; Auto vars:     Size  Location     Type
 32596 ;;		None
 32597 ;; Return value:  Size  Location     Type
 32598 ;;                  1    wreg      enum E10442
 32599 ;; Registers used:
 32600 ;;		wreg, status,2, status,0, cstack
 32601 ;; Tracked objects:
 32602 ;;		On entry : 3F/2
 32603 ;;		On exit  : 0/0
 32604 ;;		Unchanged: 0/0
 32605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32606 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32607 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32609 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32610 ;;Total ram usage:        0 bytes
 32611 ;; Hardware stack levels used: 1
 32612 ;; Hardware stack levels required when called: 5
 32613 ;; This function calls:
 32614 ;;		_I2C1_MasterSendTxData
 32615 ;; This function is called by:
 32616 ;;		_I2C1_MasterFsm
 32617 ;; This function uses a non-reentrant model
 32618 ;;
 32619                           
 32620                           	psect	text153
 32621  009D34                     __ptext153:
 32622                           	callstack 0
 32623  009D34                     _I2C1_DO_SEND_ADR_WRITE:
 32624                           	callstack 16
 32625                           
 32626                           ; BSR set to: 2
 32627                           ;mcc_generated_files/i2c1_master.c: 349:     I2C1_Status.addressNackCheck = 1;
 32628                           
 32629                           ;incstack = 0
 32630  009D34  815F               	bsf	(_I2C1_Status+35)& (0+255),0,b
 32631                           
 32632                           ; BSR set to: 2
 32633                           ;mcc_generated_files/i2c1_master.c: 350:     I2C1_MasterSendTxData((uint8_t) (I2C1_Statu
      +                          s.address << 1));
 32634  009D36  5158               	movf	(_I2C1_Status+28)& (0+255),w,b
 32635  009D38  2558               	addwf	(_I2C1_Status+28)& (0+255),w,b
 32636  009D3A  EC14  F04F         	call	_I2C1_MasterSendTxData
 32637                           
 32638                           ;mcc_generated_files/i2c1_master.c: 351:     return I2C1_TX;
 32639  009D3E  0E03               	movlw	3
 32640  009D40  0012               	return		;funcret
 32641  009D42                     __end_of_I2C1_DO_SEND_ADR_WRITE:
 32642                           	callstack 0
 32643                           
 32644 ;; *************** function _I2C1_DO_SEND_ADR_READ *****************
 32645 ;; Defined at:
 32646 ;;		line 340 in file "mcc_generated_files/i2c1_master.c"
 32647 ;; Parameters:    Size  Location     Type
 32648 ;;		None
 32649 ;; Auto vars:     Size  Location     Type
 32650 ;;		None
 32651 ;; Return value:  Size  Location     Type
 32652 ;;                  1    wreg      enum E10442
 32653 ;; Registers used:
 32654 ;;		wreg, status,0, cstack
 32655 ;; Tracked objects:
 32656 ;;		On entry : 3F/2
 32657 ;;		On exit  : 0/0
 32658 ;;		Unchanged: 0/0
 32659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32663 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32664 ;;Total ram usage:        0 bytes
 32665 ;; Hardware stack levels used: 1
 32666 ;; Hardware stack levels required when called: 5
 32667 ;; This function calls:
 32668 ;;		_I2C1_MasterSendTxData
 32669 ;; This function is called by:
 32670 ;;		_I2C1_MasterFsm
 32671 ;; This function uses a non-reentrant model
 32672 ;;
 32673                           
 32674                           	psect	text154
 32675  009D42                     __ptext154:
 32676                           	callstack 0
 32677  009D42                     _I2C1_DO_SEND_ADR_READ:
 32678                           	callstack 16
 32679                           
 32680                           ; BSR set to: 2
 32681                           ;mcc_generated_files/i2c1_master.c: 342:     I2C1_Status.addressNackCheck = 1;
 32682                           
 32683                           ;incstack = 0
 32684  009D42  815F               	bsf	(_I2C1_Status+35)& (0+255),0,b
 32685                           
 32686                           ; BSR set to: 2
 32687                           ;mcc_generated_files/i2c1_master.c: 343:     I2C1_MasterSendTxData((uint8_t) (I2C1_Statu
      +                          s.address << 1 | 1));
 32688  009D44  80D8               	bsf	status,0,c
 32689  009D46  3558               	rlcf	(_I2C1_Status+28)& (0+255),w,b
 32690  009D48  EC14  F04F         	call	_I2C1_MasterSendTxData
 32691                           
 32692                           ;mcc_generated_files/i2c1_master.c: 344:     return I2C1_RCEN;
 32693  009D4C  0E05               	movlw	5
 32694  009D4E  0012               	return		;funcret
 32695  009D50                     __end_of_I2C1_DO_SEND_ADR_READ:
 32696                           	callstack 0
 32697                           
 32698 ;; *************** function _I2C1_DO_IDLE *****************
 32699 ;; Defined at:
 32700 ;;		line 333 in file "mcc_generated_files/i2c1_master.c"
 32701 ;; Parameters:    Size  Location     Type
 32702 ;;		None
 32703 ;; Auto vars:     Size  Location     Type
 32704 ;;		None
 32705 ;; Return value:  Size  Location     Type
 32706 ;;                  1    wreg      enum E10442
 32707 ;; Registers used:
 32708 ;;		wreg, status,2
 32709 ;; Tracked objects:
 32710 ;;		On entry : 3F/2
 32711 ;;		On exit  : 3F/2
 32712 ;;		Unchanged: 0/0
 32713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32717 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32718 ;;Total ram usage:        0 bytes
 32719 ;; Hardware stack levels used: 1
 32720 ;; Hardware stack levels required when called: 4
 32721 ;; This function calls:
 32722 ;;		Nothing
 32723 ;; This function is called by:
 32724 ;;		_I2C1_MasterFsm
 32725 ;; This function uses a non-reentrant model
 32726 ;;
 32727                           
 32728                           	psect	text155
 32729  009DD6                     __ptext155:
 32730                           	callstack 0
 32731  009DD6                     _I2C1_DO_IDLE:
 32732                           	callstack 17
 32733                           
 32734                           ; BSR set to: 2
 32735                           ;mcc_generated_files/i2c1_master.c: 335:     I2C1_Status.busy = 0;
 32736                           
 32737                           ;incstack = 0
 32738  009DD6  935F               	bcf	(_I2C1_Status+35)& (0+255),1,b
 32739                           
 32740                           ; BSR set to: 2
 32741                           ;mcc_generated_files/i2c1_master.c: 336:     I2C1_Status.error = I2C1_NOERR;
 32742  009DD8  0E00               	movlw	0
 32743  009DDA  6F5E               	movwf	(_I2C1_Status+34)& (0+255),b
 32744                           
 32745                           ; BSR set to: 2
 32746                           ;mcc_generated_files/i2c1_master.c: 337:     return I2C1_RESET;
 32747  009DDC  0E0E               	movlw	14
 32748                           
 32749                           ; BSR set to: 2
 32750  009DDE  0012               	return		;funcret
 32751  009DE0                     __end_of_I2C1_DO_IDLE:
 32752                           	callstack 0
 32753                           
 32754 ;; *************** function _I2C1_DO_TX_EMPTY *****************
 32755 ;; Defined at:
 32756 ;;		line 409 in file "mcc_generated_files/i2c1_master.c"
 32757 ;; Parameters:    Size  Location     Type
 32758 ;;		None
 32759 ;; Auto vars:     Size  Location     Type
 32760 ;;		None
 32761 ;; Return value:  Size  Location     Type
 32762 ;;                  1    wreg      enum E10442
 32763 ;; Registers used:
 32764 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 32765 ;; Tracked objects:
 32766 ;;		On entry : 3F/2
 32767 ;;		On exit  : 0/0
 32768 ;;		Unchanged: 0/0
 32769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32771 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32772 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32773 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32774 ;;Total ram usage:        2 bytes
 32775 ;; Hardware stack levels used: 1
 32776 ;; Hardware stack levels required when called: 7
 32777 ;; This function calls:
 32778 ;;		Absolute function
 32779 ;;		_I2C1_CallbackReturnReset
 32780 ;;		_I2C1_CallbackReturnStop
 32781 ;;		_I2C1_DO_SEND_RESTART
 32782 ;;		_I2C1_DO_SEND_STOP
 32783 ;;		_I2C1_MasterSetIrq
 32784 ;;		_rd1RegCompleteHandler
 32785 ;;		_rd1RegCompleteHandler@i2c1_master_example$F500
 32786 ;;		_rd2RegCompleteHandler
 32787 ;;		_rd2RegCompleteHandler@i2c1_master_example$F511
 32788 ;;		_rdBlkRegCompleteHandler
 32789 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F535
 32790 ;;		_wr1RegCompleteHandler
 32791 ;;		_wr1RegCompleteHandler@i2c1_master_example$F517
 32792 ;;		_wr2RegCompleteHandler
 32793 ;;		_wr2RegCompleteHandler@i2c1_master_example$F523
 32794 ;; This function is called by:
 32795 ;;		_I2C1_MasterFsm
 32796 ;; This function uses a non-reentrant model
 32797 ;;
 32798                           
 32799                           	psect	text156
 32800  008D3C                     __ptext156:
 32801                           	callstack 0
 32802  008D3C                     _I2C1_DO_TX_EMPTY:
 32803                           	callstack 14
 32804                           
 32805                           ; BSR set to: 2
 32806                           ;mcc_generated_files/i2c1_master.c: 411:     I2C1_Status.bufferFree = 1;
 32807                           
 32808                           ; BSR set to: 2
 32809                           ;incstack = 0
 32810  008D3C  875F               	bsf	(_I2C1_Status+35)& (0+255),3,b
 32811                           
 32812                           ;mcc_generated_files/i2c1_master.c: 412:     switch(I2C1_Status.callbackTable[I2C1_DATA_
      +                          COMPLETE](I2C1_Status.callbackPayload[I2C1_DATA_COMPLETE]))
 32813  008D3E  D00A               	goto	l20235
 32814  008D40                     l20219:
 32815                           
 32816                           ;mcc_generated_files/i2c1_master.c: 416:             return I2C1_DO_SEND_RESTART();
 32817  008D40  EC08  F04F         	call	_I2C1_DO_SEND_RESTART	;wreg free
 32818  008D44  0012               	return	
 32819  008D46                     l20223:
 32820                           
 32821                           ;mcc_generated_files/i2c1_master.c: 418:             I2C1_MasterSetIrq();
 32822  008D46  EC21  F04F         	call	_I2C1_MasterSetIrq	;wreg free
 32823                           
 32824                           ; BSR set to: 14
 32825                           ;mcc_generated_files/i2c1_master.c: 419:             return I2C1_TX;
 32826  008D4A  0E03               	movlw	3
 32827  008D4C  0012               	return	
 32828  008D4E                     l20229:
 32829                           
 32830                           ;mcc_generated_files/i2c1_master.c: 422:             return I2C1_DO_SEND_STOP();
 32831  008D4E  EC04  F04F         	call	_I2C1_DO_SEND_STOP	;wreg free
 32832  008D52  0012               	return	
 32833  008D54                     l20235:
 32834                           
 32835                           ; BSR set to: 2
 32836  008D54  C248  F019         	movff	_I2C1_Status+12,I2C1_CallbackReturnReset@funPtr
 32837  008D58  C249  F01A         	movff	_I2C1_Status+13,I2C1_CallbackReturnReset@funPtr+1
 32838  008D5C  D801               	call	u23238
 32839  008D5E  D009               	goto	u23239
 32840  008D60                     u23238:
 32841  008D60  0005               	push	
 32842  008D62  6EFA               	movwf	pclath,c
 32843  008D64  513C               	movf	_I2C1_Status& (0+255),w,b
 32844  008D66  6EFD               	movwf	tosl,c
 32845  008D68  513D               	movf	(_I2C1_Status+1)& (0+255),w,b
 32846  008D6A  6EFE               	movwf	tosh,c
 32847  008D6C  6AFF               	clrf	tosu,c
 32848  008D6E  50FA               	movf	pclath,w,c
 32849  008D70  0012               	return		;indir
 32850  008D72                     u23239:
 32851  008D72  6E1B               	movwf	??_I2C1_DO_TX_EMPTY^0,c
 32852  008D74  6A1C               	clrf	(??_I2C1_DO_TX_EMPTY+1)^0,c
 32853                           
 32854                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 32855                           ; Switch size 1, requested type "simple"
 32856                           ; Number of cases is 1, Range of values is 0 to 0
 32857                           ; switch strategies available:
 32858                           ; Name         Instructions Cycles
 32859                           ; simple_byte            4     3 (average)
 32860                           ;	Chosen strategy is simple_byte
 32861  008D76  501C               	movf	(??_I2C1_DO_TX_EMPTY+1)^0,w,c
 32862  008D78  0A00               	xorlw	0	; case 0
 32863  008D7A  A4D8               	btfss	status,2,c
 32864  008D7C  D7E8               	goto	l20229
 32865                           
 32866                           ; Switch size 1, requested type "simple"
 32867                           ; Number of cases is 4, Range of values is 1 to 4
 32868                           ; switch strategies available:
 32869                           ; Name         Instructions Cycles
 32870                           ; simple_byte           13     7 (average)
 32871                           ;	Chosen strategy is simple_byte
 32872  008D7E  501B               	movf	??_I2C1_DO_TX_EMPTY^0,w,c
 32873  008D80  0A01               	xorlw	1	; case 1
 32874  008D82  B4D8               	btfsc	status,2,c
 32875  008D84  D7E4               	goto	l20229
 32876  008D86  0A03               	xorlw	3	; case 2
 32877  008D88  B4D8               	btfsc	status,2,c
 32878  008D8A  D7DA               	goto	l20219
 32879  008D8C  0A01               	xorlw	1	; case 3
 32880  008D8E  B4D8               	btfsc	status,2,c
 32881  008D90  D7D7               	goto	l20219
 32882  008D92  0A07               	xorlw	7	; case 4
 32883  008D94  B4D8               	btfsc	status,2,c
 32884  008D96  D7D7               	goto	l20223
 32885  008D98  D7DA               	goto	l20229
 32886  008D9A                     __end_of_I2C1_DO_TX_EMPTY:
 32887                           	callstack 0
 32888                           
 32889 ;; *************** function _I2C1_MasterSetIrq *****************
 32890 ;; Defined at:
 32891 ;;		line 645 in file "mcc_generated_files/i2c1_master.c"
 32892 ;; Parameters:    Size  Location     Type
 32893 ;;		None
 32894 ;; Auto vars:     Size  Location     Type
 32895 ;;		None
 32896 ;; Return value:  Size  Location     Type
 32897 ;;                  1    wreg      void 
 32898 ;; Registers used:
 32899 ;;		None
 32900 ;; Tracked objects:
 32901 ;;		On entry : 0/2
 32902 ;;		On exit  : 3F/E
 32903 ;;		Unchanged: 0/0
 32904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32905 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32906 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32908 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32909 ;;Total ram usage:        0 bytes
 32910 ;; Hardware stack levels used: 1
 32911 ;; Hardware stack levels required when called: 4
 32912 ;; This function calls:
 32913 ;;		Nothing
 32914 ;; This function is called by:
 32915 ;;		_I2C1_DO_TX_EMPTY
 32916 ;; This function uses a non-reentrant model
 32917 ;;
 32918                           
 32919                           	psect	text157
 32920  009E42                     __ptext157:
 32921                           	callstack 0
 32922  009E42                     _I2C1_MasterSetIrq:
 32923                           	callstack 16
 32924                           
 32925                           ;mcc_generated_files/i2c1_master.c: 647:     PIR3bits.SSP1IF = 1;
 32926                           
 32927                           ;incstack = 0
 32928  009E42  010E               	movlb	14	; () banked
 32929  009E44  81CD               	bsf	205,0,b	;volatile
 32930                           
 32931                           ; BSR set to: 14
 32932  009E46  0012               	return		;funcret
 32933  009E48                     __end_of_I2C1_MasterSetIrq:
 32934                           	callstack 0
 32935                           
 32936 ;; *************** function _I2C1_MasterIsNack *****************
 32937 ;; Defined at:
 32938 ;;		line 598 in file "mcc_generated_files/i2c1_master.c"
 32939 ;; Parameters:    Size  Location     Type
 32940 ;;		None
 32941 ;; Auto vars:     Size  Location     Type
 32942 ;;		None
 32943 ;; Return value:  Size  Location     Type
 32944 ;;                  1    wreg      _Bool 
 32945 ;; Registers used:
 32946 ;;		wreg
 32947 ;; Tracked objects:
 32948 ;;		On entry : 3F/2
 32949 ;;		On exit  : 3F/2
 32950 ;;		Unchanged: 3F/0
 32951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32953 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32955 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32956 ;;Total ram usage:        0 bytes
 32957 ;; Hardware stack levels used: 1
 32958 ;; Hardware stack levels required when called: 4
 32959 ;; This function calls:
 32960 ;;		Nothing
 32961 ;; This function is called by:
 32962 ;;		_I2C1_MasterFsm
 32963 ;;		_I2C1_DO_TX
 32964 ;; This function uses a non-reentrant model
 32965 ;;
 32966                           
 32967                           	psect	text158
 32968  009D50                     __ptext158:
 32969                           	callstack 0
 32970  009D50                     _I2C1_MasterIsNack:
 32971                           	callstack 17
 32972                           
 32973                           ; BSR set to: 2
 32974                           ;mcc_generated_files/i2c1_master.c: 600:     return SSP1CON2bits.ACKSTAT;
 32975                           
 32976                           ; BSR set to: 14
 32977                           ;incstack = 0
 32978  009D50  AC97               	btfss	151,6,c	;volatile
 32979  009D52  D002               	goto	u23170
 32980  009D54  0E01               	movlw	1
 32981  009D56  0012               	return	
 32982  009D58                     u23170:
 32983  009D58  0E00               	movlw	0
 32984                           
 32985                           ; BSR set to: 2
 32986  009D5A  0012               	return		;funcret
 32987  009D5C                     __end_of_I2C1_MasterIsNack:
 32988                           	callstack 0
 32989                           
 32990 ;; *************** function _I2C1_MasterSendTxData *****************
 32991 ;; Defined at:
 32992 ;;		line 568 in file "mcc_generated_files/i2c1_master.c"
 32993 ;; Parameters:    Size  Location     Type
 32994 ;;  data            1    wreg     unsigned char 
 32995 ;; Auto vars:     Size  Location     Type
 32996 ;;  data            1   15[COMRAM] unsigned char 
 32997 ;; Return value:  Size  Location     Type
 32998 ;;                  1    wreg      void 
 32999 ;; Registers used:
 33000 ;;		wreg
 33001 ;; Tracked objects:
 33002 ;;		On entry : 3F/2
 33003 ;;		On exit  : 0/0
 33004 ;;		Unchanged: 0/0
 33005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33006 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33007 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33008 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33009 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33010 ;;Total ram usage:        1 bytes
 33011 ;; Hardware stack levels used: 1
 33012 ;; Hardware stack levels required when called: 4
 33013 ;; This function calls:
 33014 ;;		Nothing
 33015 ;; This function is called by:
 33016 ;;		_I2C1_DO_SEND_ADR_READ
 33017 ;;		_I2C1_DO_SEND_ADR_WRITE
 33018 ;;		_I2C1_DO_TX
 33019 ;; This function uses a non-reentrant model
 33020 ;;
 33021                           
 33022                           	psect	text159
 33023  009E28                     __ptext159:
 33024                           	callstack 0
 33025  009E28                     _I2C1_MasterSendTxData:
 33026                           	callstack 16
 33027                           
 33028                           ; BSR set to: 2
 33029                           ;incstack = 0
 33030                           ;I2C1_MasterSendTxData@data stored from wreg
 33031  009E28  6E10               	movwf	I2C1_MasterSendTxData@data^0,c
 33032                           
 33033                           ;mcc_generated_files/i2c1_master.c: 568: static __attribute__((inline)) void I2C1_Master
      +                          SendTxData(uint8_t data);mcc_generated_files/i2c1_master.c: 569: {;mcc_generated_files/i
      +                          2c1_master.c: 570:     SSP1BUF = data;
 33034  009E2A  C010  FF92         	movff	I2C1_MasterSendTxData@data,3986	;volatile
 33035  009E2E  0012               	return		;funcret
 33036  009E30                     __end_of_I2C1_MasterSendTxData:
 33037                           	callstack 0
 33038                           
 33039 ;; *************** function _I2C1_MasterSendAck *****************
 33040 ;; Defined at:
 33041 ;;		line 603 in file "mcc_generated_files/i2c1_master.c"
 33042 ;; Parameters:    Size  Location     Type
 33043 ;;		None
 33044 ;; Auto vars:     Size  Location     Type
 33045 ;;		None
 33046 ;; Return value:  Size  Location     Type
 33047 ;;                  1    wreg      void 
 33048 ;; Registers used:
 33049 ;;		None
 33050 ;; Tracked objects:
 33051 ;;		On entry : 3F/2
 33052 ;;		On exit  : 3F/2
 33053 ;;		Unchanged: 3F/0
 33054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33058 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33059 ;;Total ram usage:        0 bytes
 33060 ;; Hardware stack levels used: 1
 33061 ;; Hardware stack levels required when called: 4
 33062 ;; This function calls:
 33063 ;;		Nothing
 33064 ;; This function is called by:
 33065 ;;		_I2C1_DO_RX
 33066 ;;		_I2C1_DO_RX_ACK
 33067 ;; This function uses a non-reentrant model
 33068 ;;
 33069                           
 33070                           	psect	text160
 33071  009E48                     __ptext160:
 33072                           	callstack 0
 33073  009E48                     _I2C1_MasterSendAck:
 33074                           	callstack 16
 33075                           
 33076                           ; BSR set to: 2
 33077                           ;mcc_generated_files/i2c1_master.c: 605:     SSP1CON2bits.ACKDT = 0;
 33078                           
 33079                           ;incstack = 0
 33080  009E48  9A97               	bcf	151,5,c	;volatile
 33081                           
 33082                           ;mcc_generated_files/i2c1_master.c: 606:     SSP1CON2bits.ACKEN = 1;
 33083  009E4A  8897               	bsf	151,4,c	;volatile
 33084                           
 33085                           ; BSR set to: 2
 33086  009E4C  0012               	return		;funcret
 33087  009E4E                     __end_of_I2C1_MasterSendAck:
 33088                           	callstack 0
 33089                           
 33090 ;; *************** function _I2C1_MasterGetRxData *****************
 33091 ;; Defined at:
 33092 ;;		line 563 in file "mcc_generated_files/i2c1_master.c"
 33093 ;; Parameters:    Size  Location     Type
 33094 ;;		None
 33095 ;; Auto vars:     Size  Location     Type
 33096 ;;		None
 33097 ;; Return value:  Size  Location     Type
 33098 ;;                  1    wreg      unsigned char 
 33099 ;; Registers used:
 33100 ;;		wreg, status,2
 33101 ;; Tracked objects:
 33102 ;;		On entry : 3F/2
 33103 ;;		On exit  : 3F/2
 33104 ;;		Unchanged: 3F/0
 33105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33106 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33107 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33109 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33110 ;;Total ram usage:        0 bytes
 33111 ;; Hardware stack levels used: 1
 33112 ;; Hardware stack levels required when called: 4
 33113 ;; This function calls:
 33114 ;;		Nothing
 33115 ;; This function is called by:
 33116 ;;		_I2C1_DO_RX
 33117 ;; This function uses a non-reentrant model
 33118 ;;
 33119                           
 33120                           	psect	text161
 33121  009E6E                     __ptext161:
 33122                           	callstack 0
 33123  009E6E                     _I2C1_MasterGetRxData:
 33124                           	callstack 16
 33125                           
 33126                           ; BSR set to: 2
 33127                           ;mcc_generated_files/i2c1_master.c: 565:     return SSP1BUF;
 33128                           
 33129                           ; BSR set to: 2
 33130                           ;incstack = 0
 33131  009E6E  5092               	movf	146,w,c	;volatile
 33132                           
 33133                           ; BSR set to: 2
 33134  009E70  0012               	return		;funcret
 33135  009E72                     __end_of_I2C1_MasterGetRxData:
 33136                           	callstack 0
 33137                           
 33138 ;; *************** function _I2C1_MasterSendNack *****************
 33139 ;; Defined at:
 33140 ;;		line 609 in file "mcc_generated_files/i2c1_master.c"
 33141 ;; Parameters:    Size  Location     Type
 33142 ;;		None
 33143 ;; Auto vars:     Size  Location     Type
 33144 ;;		None
 33145 ;; Return value:  Size  Location     Type
 33146 ;;                  1    wreg      void 
 33147 ;; Registers used:
 33148 ;;		None
 33149 ;; Tracked objects:
 33150 ;;		On entry : 0/2
 33151 ;;		On exit  : 0/0
 33152 ;;		Unchanged: 0/0
 33153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33154 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33155 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33156 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33157 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33158 ;;Total ram usage:        0 bytes
 33159 ;; Hardware stack levels used: 1
 33160 ;; Hardware stack levels required when called: 4
 33161 ;; This function calls:
 33162 ;;		Nothing
 33163 ;; This function is called by:
 33164 ;;		_I2C1_DO_RX_NACK_STOP
 33165 ;;		_I2C1_DO_RX_NACK_RESTART
 33166 ;; This function uses a non-reentrant model
 33167 ;;
 33168                           
 33169                           	psect	text162
 33170  009E4E                     __ptext162:
 33171                           	callstack 0
 33172  009E4E                     _I2C1_MasterSendNack:
 33173                           	callstack 16
 33174                           
 33175                           ;mcc_generated_files/i2c1_master.c: 611:     SSP1CON2bits.ACKDT = 1;
 33176                           
 33177                           ; BSR set to: 2
 33178                           ;incstack = 0
 33179  009E4E  8A97               	bsf	151,5,c	;volatile
 33180                           
 33181                           ;mcc_generated_files/i2c1_master.c: 612:     SSP1CON2bits.ACKEN = 1;
 33182  009E50  8897               	bsf	151,4,c	;volatile
 33183  009E52  0012               	return		;funcret
 33184  009E54                     __end_of_I2C1_MasterSendNack:
 33185                           	callstack 0
 33186                           
 33187 ;; *************** function _I2C1_MasterStartRx *****************
 33188 ;; Defined at:
 33189 ;;		line 583 in file "mcc_generated_files/i2c1_master.c"
 33190 ;; Parameters:    Size  Location     Type
 33191 ;;		None
 33192 ;; Auto vars:     Size  Location     Type
 33193 ;;		None
 33194 ;; Return value:  Size  Location     Type
 33195 ;;                  1    wreg      void 
 33196 ;; Registers used:
 33197 ;;		None
 33198 ;; Tracked objects:
 33199 ;;		On entry : 3F/2
 33200 ;;		On exit  : 3F/2
 33201 ;;		Unchanged: 3F/0
 33202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33203 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33204 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33205 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33206 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33207 ;;Total ram usage:        0 bytes
 33208 ;; Hardware stack levels used: 1
 33209 ;; Hardware stack levels required when called: 4
 33210 ;; This function calls:
 33211 ;;		Nothing
 33212 ;; This function is called by:
 33213 ;;		_I2C1_DO_RCEN
 33214 ;; This function uses a non-reentrant model
 33215 ;;
 33216                           
 33217                           	psect	text163
 33218  009E72                     __ptext163:
 33219                           	callstack 0
 33220  009E72                     _I2C1_MasterStartRx:
 33221                           	callstack 16
 33222                           
 33223                           ; BSR set to: 2
 33224                           ;mcc_generated_files/i2c1_master.c: 585:     SSP1CON2bits.RCEN = 1;
 33225                           
 33226                           ;incstack = 0
 33227  009E72  8697               	bsf	151,3,c	;volatile
 33228                           
 33229                           ; BSR set to: 2
 33230  009E74  0012               	return		;funcret
 33231  009E76                     __end_of_I2C1_MasterStartRx:
 33232                           	callstack 0
 33233                           
 33234 ;; *************** function _I2C1_CallbackReturnReset *****************
 33235 ;; Defined at:
 33236 ;;		line 525 in file "mcc_generated_files/i2c1_master.c"
 33237 ;; Parameters:    Size  Location     Type
 33238 ;;  funPtr          2   24[COMRAM] PTR void 
 33239 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 33240 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 33241 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 33242 ;; Auto vars:     Size  Location     Type
 33243 ;;		None
 33244 ;; Return value:  Size  Location     Type
 33245 ;;                  1    wreg      enum E360
 33246 ;; Registers used:
 33247 ;;		wreg
 33248 ;; Tracked objects:
 33249 ;;		On entry : 3F/2
 33250 ;;		On exit  : 3F/2
 33251 ;;		Unchanged: 3F/0
 33252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33253 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33256 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33257 ;;Total ram usage:        2 bytes
 33258 ;; Hardware stack levels used: 1
 33259 ;; Hardware stack levels required when called: 4
 33260 ;; This function calls:
 33261 ;;		Nothing
 33262 ;; This function is called by:
 33263 ;;		_I2C1_Open
 33264 ;;		_I2C1_DO_TX
 33265 ;;		_I2C1_DO_RX
 33266 ;;		_I2C1_DO_TX_EMPTY
 33267 ;;		_I2C1_DO_ADDRESS_NACK
 33268 ;; This function uses a non-reentrant model
 33269 ;;
 33270                           
 33271                           	psect	text164
 33272  009E76                     __ptext164:
 33273                           	callstack 0
 33274  009E76                     _I2C1_CallbackReturnReset:
 33275                           	callstack 16
 33276                           
 33277                           ; BSR set to: 2
 33278                           ;mcc_generated_files/i2c1_master.c: 525: i2c1_operations_t I2C1_CallbackReturnReset(void
      +                           *funPtr);mcc_generated_files/i2c1_master.c: 526: {;mcc_generated_files/i2c1_master.c: 5
      +                          27:     return I2C1_RESET_LINK;
 33279                           
 33280                           ; BSR set to: 2
 33281                           ;incstack = 0
 33282  009E76  0E05               	movlw	5
 33283                           
 33284                           ; BSR set to: 2
 33285  009E78  0012               	return		;funcret
 33286  009E7A                     __end_of_I2C1_CallbackReturnReset:
 33287                           	callstack 0
 33288                           
 33289 ;; *************** function _I2C1_CallbackReturnStop *****************
 33290 ;; Defined at:
 33291 ;;		line 520 in file "mcc_generated_files/i2c1_master.c"
 33292 ;; Parameters:    Size  Location     Type
 33293 ;;  funPtr          2   24[COMRAM] PTR void 
 33294 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 33295 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 33296 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 33297 ;; Auto vars:     Size  Location     Type
 33298 ;;		None
 33299 ;; Return value:  Size  Location     Type
 33300 ;;                  1    wreg      enum E360
 33301 ;; Registers used:
 33302 ;;		wreg
 33303 ;; Tracked objects:
 33304 ;;		On entry : 3F/2
 33305 ;;		On exit  : 3F/2
 33306 ;;		Unchanged: 3F/0
 33307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33308 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33309 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33311 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33312 ;;Total ram usage:        2 bytes
 33313 ;; Hardware stack levels used: 1
 33314 ;; Hardware stack levels required when called: 4
 33315 ;; This function calls:
 33316 ;;		Nothing
 33317 ;; This function is called by:
 33318 ;;		_I2C1_Open
 33319 ;;		_I2C1_SetCallback
 33320 ;;		_I2C1_DO_TX
 33321 ;;		_I2C1_DO_RX
 33322 ;;		_I2C1_DO_TX_EMPTY
 33323 ;;		_I2C1_DO_ADDRESS_NACK
 33324 ;; This function uses a non-reentrant model
 33325 ;;
 33326                           
 33327                           	psect	text165
 33328  009E7A                     __ptext165:
 33329                           	callstack 0
 33330  009E7A                     _I2C1_CallbackReturnStop:
 33331                           	callstack 16
 33332                           
 33333                           ; BSR set to: 2
 33334                           ;mcc_generated_files/i2c1_master.c: 520: i2c1_operations_t I2C1_CallbackReturnStop(void 
      +                          *funPtr);mcc_generated_files/i2c1_master.c: 521: {;mcc_generated_files/i2c1_master.c: 52
      +                          2:     return I2C1_STOP;
 33335                           
 33336                           ; BSR set to: 2
 33337                           ;incstack = 0
 33338  009E7A  0E01               	movlw	1
 33339                           
 33340                           ; BSR set to: 2
 33341  009E7C  0012               	return		;funcret
 33342  009E7E                     __end_of_I2C1_CallbackReturnStop:
 33343                           	callstack 0
 33344                           
 33345 ;; *************** function _rdBlkRegCompleteHandler@i2c1_master_example$F535 *****************
 33346 ;; Defined at:
 33347 ;;		line 176 in file "mcc_generated_files/examples/i2c1_master_example.c"
 33348 ;; Parameters:    Size  Location     Type
 33349 ;;  ptr             2   24[COMRAM] PTR void 
 33350 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 33351 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 33352 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 33353 ;; Auto vars:     Size  Location     Type
 33354 ;;		None
 33355 ;; Return value:  Size  Location     Type
 33356 ;;                  1    wreg      enum E527
 33357 ;; Registers used:
 33358 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33359 ;; Tracked objects:
 33360 ;;		On entry : 3F/2
 33361 ;;		On exit  : 0/0
 33362 ;;		Unchanged: 0/0
 33363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33364 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33367 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33368 ;;Total ram usage:        2 bytes
 33369 ;; Hardware stack levels used: 1
 33370 ;; Hardware stack levels required when called: 6
 33371 ;; This function calls:
 33372 ;;		_I2C1_SetBuffer
 33373 ;;		_I2C1_SetDataCompleteCallback
 33374 ;; This function is called by:
 33375 ;;		_I2C1_DO_TX
 33376 ;;		_I2C1_DO_RX
 33377 ;;		_I2C1_DO_TX_EMPTY
 33378 ;;		_I2C1_DO_ADDRESS_NACK
 33379 ;; This function uses a non-reentrant model
 33380 ;;
 33381                           
 33382                           	psect	text166
 33383  009480                     __ptext166:
 33384                           	callstack 0
 33385  009480                     _rdBlkRegCompleteHandler@i2c1_master_example$F535:
 33386                           	callstack 14
 33387                           
 33388                           ; BSR set to: 2
 33389                           ;mcc_generated_files/examples/i2c1_master_example.c: 176: static i2c1_operations_t rdBlk
      +                          RegCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 177: {
      +                          ;mcc_generated_files/examples/i2c1_master_example.c: 178:     I2C1_SetBuffer(((i2c1_buff
      +                          er_t *)ptr)->data,((i2c1_buffer_t*)ptr)->len);
 33390                           
 33391                           ; BSR set to: 2
 33392                           ;incstack = 0
 33393  009480  EE20 F002          	lfsr	2,2
 33394  009484  5019               	movf	rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr^0,w,c
 33395  009486  26D9               	addwf	fsr2l,f,c
 33396  009488  501A               	movf	(rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr+1)^0,w,c
 33397  00948A  22DA               	addwfc	fsr2h,f,c
 33398  00948C  CFDE F010          	movff	postinc2,I2C1_SetBuffer@buffer
 33399  009490  CFDD F011          	movff	postdec2,I2C1_SetBuffer@buffer+1
 33400  009494  C019  FFD9         	movff	rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr,fsr2l
 33401  009498  C01A  FFDA         	movff	rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr+1,fsr2h
 33402  00949C  CFDE F012          	movff	postinc2,I2C1_SetBuffer@bufferSize
 33403  0094A0  CFDD F013          	movff	postdec2,I2C1_SetBuffer@bufferSize+1
 33404  0094A4  ECF2  F04D         	call	_I2C1_SetBuffer	;wreg free
 33405                           
 33406                           ; BSR set to: 2
 33407                           ;mcc_generated_files/examples/i2c1_master_example.c: 179:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 33408  0094A8  0E00               	movlw	0
 33409  0094AA  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 33410  0094AC  0E00               	movlw	0
 33411  0094AE  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 33412  0094B0  0E00               	movlw	0
 33413  0094B2  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 33414  0094B4  0E00               	movlw	0
 33415  0094B6  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 33416  0094B8  EC2F  F04E         	call	_I2C1_SetDataCompleteCallback	;wreg free
 33417                           
 33418                           ;mcc_generated_files/examples/i2c1_master_example.c: 180:     return I2C1_RESTART_READ;
 33419  0094BC  0E02               	movlw	2
 33420  0094BE  0012               	return		;funcret
 33421  0094C0                     __end_of_rdBlkRegCompleteHandler@i2c1_master_example$F535:
 33422                           	callstack 0
 33423                           
 33424 ;; *************** function _wr1RegCompleteHandler@i2c1_master_example$F517 *****************
 33425 ;; Defined at:
 33426 ;;		line 162 in file "mcc_generated_files/examples/i2c1_master_example.c"
 33427 ;; Parameters:    Size  Location     Type
 33428 ;;  ptr             2   24[COMRAM] PTR void 
 33429 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 33430 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 33431 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 33432 ;; Auto vars:     Size  Location     Type
 33433 ;;		None
 33434 ;; Return value:  Size  Location     Type
 33435 ;;                  1    wreg      enum E527
 33436 ;; Registers used:
 33437 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33438 ;; Tracked objects:
 33439 ;;		On entry : 3F/2
 33440 ;;		On exit  : 0/0
 33441 ;;		Unchanged: 0/0
 33442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33443 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33444 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33446 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33447 ;;Total ram usage:        2 bytes
 33448 ;; Hardware stack levels used: 1
 33449 ;; Hardware stack levels required when called: 6
 33450 ;; This function calls:
 33451 ;;		_I2C1_SetBuffer
 33452 ;;		_I2C1_SetDataCompleteCallback
 33453 ;; This function is called by:
 33454 ;;		_I2C1_DO_TX
 33455 ;;		_I2C1_DO_RX
 33456 ;;		_I2C1_DO_TX_EMPTY
 33457 ;;		_I2C1_DO_ADDRESS_NACK
 33458 ;; This function uses a non-reentrant model
 33459 ;;
 33460                           
 33461                           	psect	text167
 33462  0097C6                     __ptext167:
 33463                           	callstack 0
 33464  0097C6                     _wr1RegCompleteHandler@i2c1_master_example$F517:
 33465                           	callstack 14
 33466                           
 33467                           ; BSR set to: 2
 33468                           ;mcc_generated_files/examples/i2c1_master_example.c: 162: static i2c1_operations_t wr1Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 163: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 164:     I2C1_SetBuffer(ptr,1);
 33469                           
 33470                           ;incstack = 0
 33471  0097C6  C019  F010         	movff	wr1RegCompleteHandler@i2c1_master_example$F517@ptr,I2C1_SetBuffer@buffer
 33472  0097CA  C01A  F011         	movff	wr1RegCompleteHandler@i2c1_master_example$F517@ptr+1,I2C1_SetBuffer@buffer+1
 33473  0097CE  0E00               	movlw	0
 33474  0097D0  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 33475  0097D2  0E01               	movlw	1
 33476  0097D4  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 33477  0097D6  ECF2  F04D         	call	_I2C1_SetBuffer	;wreg free
 33478                           
 33479                           ; BSR set to: 2
 33480                           ;mcc_generated_files/examples/i2c1_master_example.c: 165:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 33481  0097DA  0E00               	movlw	0
 33482  0097DC  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 33483  0097DE  0E00               	movlw	0
 33484  0097E0  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 33485  0097E2  0E00               	movlw	0
 33486  0097E4  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 33487  0097E6  0E00               	movlw	0
 33488  0097E8  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 33489  0097EA  EC2F  F04E         	call	_I2C1_SetDataCompleteCallback	;wreg free
 33490                           
 33491                           ;mcc_generated_files/examples/i2c1_master_example.c: 166:     return I2C1_CONTINUE;
 33492  0097EE  0E04               	movlw	4
 33493  0097F0  0012               	return		;funcret
 33494  0097F2                     __end_of_wr1RegCompleteHandler@i2c1_master_example$F517:
 33495                           	callstack 0
 33496                           
 33497 ;; *************** function _rd2RegCompleteHandler@i2c1_master_example$F511 *****************
 33498 ;; Defined at:
 33499 ;;		line 155 in file "mcc_generated_files/examples/i2c1_master_example.c"
 33500 ;; Parameters:    Size  Location     Type
 33501 ;;  ptr             2   24[COMRAM] PTR void 
 33502 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 33503 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 33504 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 33505 ;; Auto vars:     Size  Location     Type
 33506 ;;		None
 33507 ;; Return value:  Size  Location     Type
 33508 ;;                  1    wreg      enum E527
 33509 ;; Registers used:
 33510 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33511 ;; Tracked objects:
 33512 ;;		On entry : 3F/2
 33513 ;;		On exit  : 0/0
 33514 ;;		Unchanged: 0/0
 33515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33516 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33517 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33519 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33520 ;;Total ram usage:        2 bytes
 33521 ;; Hardware stack levels used: 1
 33522 ;; Hardware stack levels required when called: 6
 33523 ;; This function calls:
 33524 ;;		_I2C1_SetBuffer
 33525 ;;		_I2C1_SetDataCompleteCallback
 33526 ;; This function is called by:
 33527 ;;		_I2C1_DO_TX
 33528 ;;		_I2C1_DO_RX
 33529 ;;		_I2C1_DO_TX_EMPTY
 33530 ;;		_I2C1_DO_ADDRESS_NACK
 33531 ;; This function uses a non-reentrant model
 33532 ;;
 33533                           
 33534                           	psect	text168
 33535  0097F2                     __ptext168:
 33536                           	callstack 0
 33537  0097F2                     _rd2RegCompleteHandler@i2c1_master_example$F511:
 33538                           	callstack 14
 33539                           
 33540                           ; BSR set to: 2
 33541                           ;mcc_generated_files/examples/i2c1_master_example.c: 155: static i2c1_operations_t rd2Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 156: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 157:     I2C1_SetBuffer(ptr,2);
 33542                           
 33543                           ;incstack = 0
 33544  0097F2  C019  F010         	movff	rd2RegCompleteHandler@i2c1_master_example$F511@ptr,I2C1_SetBuffer@buffer
 33545  0097F6  C01A  F011         	movff	rd2RegCompleteHandler@i2c1_master_example$F511@ptr+1,I2C1_SetBuffer@buffer+1
 33546  0097FA  0E00               	movlw	0
 33547  0097FC  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 33548  0097FE  0E02               	movlw	2
 33549  009800  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 33550  009802  ECF2  F04D         	call	_I2C1_SetBuffer	;wreg free
 33551                           
 33552                           ; BSR set to: 2
 33553                           ;mcc_generated_files/examples/i2c1_master_example.c: 158:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 33554  009806  0E00               	movlw	0
 33555  009808  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 33556  00980A  0E00               	movlw	0
 33557  00980C  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 33558  00980E  0E00               	movlw	0
 33559  009810  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 33560  009812  0E00               	movlw	0
 33561  009814  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 33562  009816  EC2F  F04E         	call	_I2C1_SetDataCompleteCallback	;wreg free
 33563                           
 33564                           ;mcc_generated_files/examples/i2c1_master_example.c: 159:     return I2C1_RESTART_READ;
 33565  00981A  0E02               	movlw	2
 33566  00981C  0012               	return		;funcret
 33567  00981E                     __end_of_rd2RegCompleteHandler@i2c1_master_example$F511:
 33568                           	callstack 0
 33569                           
 33570 ;; *************** function _rd1RegCompleteHandler@i2c1_master_example$F500 *****************
 33571 ;; Defined at:
 33572 ;;		line 148 in file "mcc_generated_files/examples/i2c1_master_example.c"
 33573 ;; Parameters:    Size  Location     Type
 33574 ;;  ptr             2   24[COMRAM] PTR void 
 33575 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 33576 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 33577 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 33578 ;; Auto vars:     Size  Location     Type
 33579 ;;		None
 33580 ;; Return value:  Size  Location     Type
 33581 ;;                  1    wreg      enum E527
 33582 ;; Registers used:
 33583 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33584 ;; Tracked objects:
 33585 ;;		On entry : 3F/2
 33586 ;;		On exit  : 0/0
 33587 ;;		Unchanged: 0/0
 33588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33589 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33590 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33592 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33593 ;;Total ram usage:        2 bytes
 33594 ;; Hardware stack levels used: 1
 33595 ;; Hardware stack levels required when called: 6
 33596 ;; This function calls:
 33597 ;;		_I2C1_SetBuffer
 33598 ;;		_I2C1_SetDataCompleteCallback
 33599 ;; This function is called by:
 33600 ;;		_I2C1_Read1ByteRegister
 33601 ;;		_I2C1_DO_TX
 33602 ;;		_I2C1_DO_RX
 33603 ;;		_I2C1_DO_TX_EMPTY
 33604 ;;		_I2C1_DO_ADDRESS_NACK
 33605 ;; This function uses a non-reentrant model
 33606 ;;
 33607                           
 33608                           	psect	text169
 33609  00981E                     __ptext169:
 33610                           	callstack 0
 33611  00981E                     _rd1RegCompleteHandler@i2c1_master_example$F500:
 33612                           	callstack 14
 33613                           
 33614                           ; BSR set to: 2
 33615                           ;mcc_generated_files/examples/i2c1_master_example.c: 148: static i2c1_operations_t rd1Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 149: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 150:     I2C1_SetBuffer(ptr,1);
 33616                           
 33617                           ;incstack = 0
 33618  00981E  C019  F010         	movff	rd1RegCompleteHandler@i2c1_master_example$F500@ptr,I2C1_SetBuffer@buffer
 33619  009822  C01A  F011         	movff	rd1RegCompleteHandler@i2c1_master_example$F500@ptr+1,I2C1_SetBuffer@buffer+1
 33620  009826  0E00               	movlw	0
 33621  009828  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 33622  00982A  0E01               	movlw	1
 33623  00982C  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 33624  00982E  ECF2  F04D         	call	_I2C1_SetBuffer	;wreg free
 33625                           
 33626                           ; BSR set to: 2
 33627                           ;mcc_generated_files/examples/i2c1_master_example.c: 151:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 33628  009832  0E00               	movlw	0
 33629  009834  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 33630  009836  0E00               	movlw	0
 33631  009838  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 33632  00983A  0E00               	movlw	0
 33633  00983C  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 33634  00983E  0E00               	movlw	0
 33635  009840  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 33636  009842  EC2F  F04E         	call	_I2C1_SetDataCompleteCallback	;wreg free
 33637                           
 33638                           ;mcc_generated_files/examples/i2c1_master_example.c: 152:     return I2C1_RESTART_READ;
 33639  009846  0E02               	movlw	2
 33640  009848  0012               	return		;funcret
 33641  00984A                     __end_of_rd1RegCompleteHandler@i2c1_master_example$F500:
 33642                           	callstack 0
 33643                           
 33644 ;; *************** function _rdBlkRegCompleteHandler *****************
 33645 ;; Defined at:
 33646 ;;		line 140 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 33647 ;; Parameters:    Size  Location     Type
 33648 ;;  p               2   24[COMRAM] PTR void 
 33649 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 33650 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 33651 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 33652 ;; Auto vars:     Size  Location     Type
 33653 ;;		None
 33654 ;; Return value:  Size  Location     Type
 33655 ;;                  1    wreg      enum E360
 33656 ;; Registers used:
 33657 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33658 ;; Tracked objects:
 33659 ;;		On entry : 3F/2
 33660 ;;		On exit  : 0/0
 33661 ;;		Unchanged: 0/0
 33662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33663 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33664 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33666 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33667 ;;Total ram usage:        2 bytes
 33668 ;; Hardware stack levels used: 1
 33669 ;; Hardware stack levels required when called: 6
 33670 ;; This function calls:
 33671 ;;		_I2C1_SetBuffer
 33672 ;;		_I2C1_SetDataCompleteCallback
 33673 ;; This function is called by:
 33674 ;;		_i2c_readDataBlock
 33675 ;;		_I2C1_DO_TX
 33676 ;;		_I2C1_DO_RX
 33677 ;;		_I2C1_DO_TX_EMPTY
 33678 ;;		_I2C1_DO_ADDRESS_NACK
 33679 ;; This function uses a non-reentrant model
 33680 ;;
 33681                           
 33682                           	psect	text170
 33683  0094C0                     __ptext170:
 33684                           	callstack 0
 33685  0094C0                     _rdBlkRegCompleteHandler:
 33686                           	callstack 14
 33687                           
 33688                           ; BSR set to: 2
 33689                           ;mcc_generated_files/drivers/i2c_simple_master.c: 140: static i2c1_operations_t rdBlkReg
      +                          CompleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 141: {;mcc_gen
      +                          erated_files/drivers/i2c_simple_master.c: 142:     I2C1_SetBuffer(((buf_t *)p)->data,((b
      +                          uf_t*)p)->len);
 33690                           
 33691                           ;incstack = 0
 33692  0094C0  EE20 F002          	lfsr	2,2
 33693  0094C4  5019               	movf	rdBlkRegCompleteHandler@p^0,w,c
 33694  0094C6  26D9               	addwf	fsr2l,f,c
 33695  0094C8  501A               	movf	(rdBlkRegCompleteHandler@p+1)^0,w,c
 33696  0094CA  22DA               	addwfc	fsr2h,f,c
 33697  0094CC  CFDE F010          	movff	postinc2,I2C1_SetBuffer@buffer
 33698  0094D0  CFDD F011          	movff	postdec2,I2C1_SetBuffer@buffer+1
 33699  0094D4  C019  FFD9         	movff	rdBlkRegCompleteHandler@p,fsr2l
 33700  0094D8  C01A  FFDA         	movff	rdBlkRegCompleteHandler@p+1,fsr2h
 33701  0094DC  CFDE F012          	movff	postinc2,I2C1_SetBuffer@bufferSize
 33702  0094E0  CFDD F013          	movff	postdec2,I2C1_SetBuffer@bufferSize+1
 33703  0094E4  ECF2  F04D         	call	_I2C1_SetBuffer	;wreg free
 33704                           
 33705                           ; BSR set to: 2
 33706                           ;mcc_generated_files/drivers/i2c_simple_master.c: 143:     I2C1_SetDataCompleteCallback(
      +                          ((void*)0),((void*)0));
 33707  0094E8  0E00               	movlw	0
 33708  0094EA  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 33709  0094EC  0E00               	movlw	0
 33710  0094EE  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 33711  0094F0  0E00               	movlw	0
 33712  0094F2  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 33713  0094F4  0E00               	movlw	0
 33714  0094F6  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 33715  0094F8  EC2F  F04E         	call	_I2C1_SetDataCompleteCallback	;wreg free
 33716                           
 33717                           ;mcc_generated_files/drivers/i2c_simple_master.c: 144:     return I2C1_RESTART_READ;
 33718  0094FC  0E02               	movlw	2
 33719  0094FE  0012               	return		;funcret
 33720  009500                     __end_of_rdBlkRegCompleteHandler:
 33721                           	callstack 0
 33722                           
 33723 ;; *************** function _wr2RegCompleteHandler *****************
 33724 ;; Defined at:
 33725 ;;		line 116 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 33726 ;; Parameters:    Size  Location     Type
 33727 ;;  p               2   24[COMRAM] PTR void 
 33728 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 33729 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 33730 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 33731 ;; Auto vars:     Size  Location     Type
 33732 ;;		None
 33733 ;; Return value:  Size  Location     Type
 33734 ;;                  1    wreg      enum E360
 33735 ;; Registers used:
 33736 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33737 ;; Tracked objects:
 33738 ;;		On entry : 3F/2
 33739 ;;		On exit  : 0/0
 33740 ;;		Unchanged: 0/0
 33741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33742 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33743 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33745 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33746 ;;Total ram usage:        2 bytes
 33747 ;; Hardware stack levels used: 1
 33748 ;; Hardware stack levels required when called: 6
 33749 ;; This function calls:
 33750 ;;		_I2C1_SetBuffer
 33751 ;;		_I2C1_SetDataCompleteCallback
 33752 ;; This function is called by:
 33753 ;;		_I2C1_DO_TX
 33754 ;;		_I2C1_DO_RX
 33755 ;;		_I2C1_DO_TX_EMPTY
 33756 ;;		_I2C1_DO_ADDRESS_NACK
 33757 ;; This function uses a non-reentrant model
 33758 ;;
 33759                           
 33760                           	psect	text171
 33761  00984A                     __ptext171:
 33762                           	callstack 0
 33763  00984A                     _wr2RegCompleteHandler:
 33764                           	callstack 14
 33765                           
 33766                           ; BSR set to: 2
 33767                           ;mcc_generated_files/drivers/i2c_simple_master.c: 116: static i2c1_operations_t wr2RegCo
      +                          mpleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 117: {;mcc_gener
      +                          ated_files/drivers/i2c_simple_master.c: 118:     I2C1_SetBuffer(p,2);
 33768                           
 33769                           ;incstack = 0
 33770  00984A  C019  F010         	movff	wr2RegCompleteHandler@p,I2C1_SetBuffer@buffer
 33771  00984E  C01A  F011         	movff	wr2RegCompleteHandler@p+1,I2C1_SetBuffer@buffer+1
 33772  009852  0E00               	movlw	0
 33773  009854  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 33774  009856  0E02               	movlw	2
 33775  009858  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 33776  00985A  ECF2  F04D         	call	_I2C1_SetBuffer	;wreg free
 33777                           
 33778                           ; BSR set to: 2
 33779                           ;mcc_generated_files/drivers/i2c_simple_master.c: 119:     I2C1_SetDataCompleteCallback(
      +                          ((void*)0),((void*)0));
 33780  00985E  0E00               	movlw	0
 33781  009860  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 33782  009862  0E00               	movlw	0
 33783  009864  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 33784  009866  0E00               	movlw	0
 33785  009868  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 33786  00986A  0E00               	movlw	0
 33787  00986C  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 33788  00986E  EC2F  F04E         	call	_I2C1_SetDataCompleteCallback	;wreg free
 33789                           
 33790                           ;mcc_generated_files/drivers/i2c_simple_master.c: 120:     return I2C1_CONTINUE;
 33791  009872  0E04               	movlw	4
 33792  009874  0012               	return		;funcret
 33793  009876                     __end_of_wr2RegCompleteHandler:
 33794                           	callstack 0
 33795                           
 33796 ;; *************** function _rd2RegCompleteHandler *****************
 33797 ;; Defined at:
 33798 ;;		line 93 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 33799 ;; Parameters:    Size  Location     Type
 33800 ;;  p               2   24[COMRAM] PTR void 
 33801 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 33802 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 33803 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 33804 ;; Auto vars:     Size  Location     Type
 33805 ;;		None
 33806 ;; Return value:  Size  Location     Type
 33807 ;;                  1    wreg      enum E360
 33808 ;; Registers used:
 33809 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33810 ;; Tracked objects:
 33811 ;;		On entry : 3F/2
 33812 ;;		On exit  : 0/0
 33813 ;;		Unchanged: 0/0
 33814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33815 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33816 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33818 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33819 ;;Total ram usage:        2 bytes
 33820 ;; Hardware stack levels used: 1
 33821 ;; Hardware stack levels required when called: 6
 33822 ;; This function calls:
 33823 ;;		_I2C1_SetBuffer
 33824 ;;		_I2C1_SetDataCompleteCallback
 33825 ;; This function is called by:
 33826 ;;		_I2C1_DO_TX
 33827 ;;		_I2C1_DO_RX
 33828 ;;		_I2C1_DO_TX_EMPTY
 33829 ;;		_I2C1_DO_ADDRESS_NACK
 33830 ;; This function uses a non-reentrant model
 33831 ;;
 33832                           
 33833                           	psect	text172
 33834  009876                     __ptext172:
 33835                           	callstack 0
 33836  009876                     _rd2RegCompleteHandler:
 33837                           	callstack 14
 33838                           
 33839                           ; BSR set to: 2
 33840                           ;mcc_generated_files/drivers/i2c_simple_master.c: 93: static i2c1_operations_t rd2RegCom
      +                          pleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 94: {;mcc_generat
      +                          ed_files/drivers/i2c_simple_master.c: 95:     I2C1_SetBuffer(p,2);
 33841                           
 33842                           ;incstack = 0
 33843  009876  C019  F010         	movff	rd2RegCompleteHandler@p,I2C1_SetBuffer@buffer
 33844  00987A  C01A  F011         	movff	rd2RegCompleteHandler@p+1,I2C1_SetBuffer@buffer+1
 33845  00987E  0E00               	movlw	0
 33846  009880  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 33847  009882  0E02               	movlw	2
 33848  009884  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 33849  009886  ECF2  F04D         	call	_I2C1_SetBuffer	;wreg free
 33850                           
 33851                           ; BSR set to: 2
 33852                           ;mcc_generated_files/drivers/i2c_simple_master.c: 96:     I2C1_SetDataCompleteCallback((
      +                          (void*)0),((void*)0));
 33853  00988A  0E00               	movlw	0
 33854  00988C  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 33855  00988E  0E00               	movlw	0
 33856  009890  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 33857  009892  0E00               	movlw	0
 33858  009894  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 33859  009896  0E00               	movlw	0
 33860  009898  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 33861  00989A  EC2F  F04E         	call	_I2C1_SetDataCompleteCallback	;wreg free
 33862                           
 33863                           ;mcc_generated_files/drivers/i2c_simple_master.c: 97:     return I2C1_RESTART_READ;
 33864  00989E  0E02               	movlw	2
 33865  0098A0  0012               	return		;funcret
 33866  0098A2                     __end_of_rd2RegCompleteHandler:
 33867                           	callstack 0
 33868                           
 33869 ;; *************** function _rd1RegCompleteHandler *****************
 33870 ;; Defined at:
 33871 ;;		line 64 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 33872 ;; Parameters:    Size  Location     Type
 33873 ;;  p               2   24[COMRAM] PTR void 
 33874 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 33875 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 33876 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 33877 ;; Auto vars:     Size  Location     Type
 33878 ;;		None
 33879 ;; Return value:  Size  Location     Type
 33880 ;;                  1    wreg      enum E360
 33881 ;; Registers used:
 33882 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33883 ;; Tracked objects:
 33884 ;;		On entry : 3F/2
 33885 ;;		On exit  : 0/0
 33886 ;;		Unchanged: 0/0
 33887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33888 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33889 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33891 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33892 ;;Total ram usage:        2 bytes
 33893 ;; Hardware stack levels used: 1
 33894 ;; Hardware stack levels required when called: 6
 33895 ;; This function calls:
 33896 ;;		_I2C1_SetBuffer
 33897 ;;		_I2C1_SetDataCompleteCallback
 33898 ;; This function is called by:
 33899 ;;		_I2C1_DO_TX
 33900 ;;		_I2C1_DO_RX
 33901 ;;		_I2C1_DO_TX_EMPTY
 33902 ;;		_I2C1_DO_ADDRESS_NACK
 33903 ;; This function uses a non-reentrant model
 33904 ;;
 33905                           
 33906                           	psect	text173
 33907  0098A2                     __ptext173:
 33908                           	callstack 0
 33909  0098A2                     _rd1RegCompleteHandler:
 33910                           	callstack 14
 33911                           
 33912                           ; BSR set to: 2
 33913                           ;mcc_generated_files/drivers/i2c_simple_master.c: 64: static i2c1_operations_t rd1RegCom
      +                          pleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 65: {;mcc_generat
      +                          ed_files/drivers/i2c_simple_master.c: 66:     I2C1_SetBuffer(p,1);
 33914                           
 33915                           ;incstack = 0
 33916  0098A2  C019  F010         	movff	rd1RegCompleteHandler@p,I2C1_SetBuffer@buffer
 33917  0098A6  C01A  F011         	movff	rd1RegCompleteHandler@p+1,I2C1_SetBuffer@buffer+1
 33918  0098AA  0E00               	movlw	0
 33919  0098AC  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 33920  0098AE  0E01               	movlw	1
 33921  0098B0  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 33922  0098B2  ECF2  F04D         	call	_I2C1_SetBuffer	;wreg free
 33923                           
 33924                           ; BSR set to: 2
 33925                           ;mcc_generated_files/drivers/i2c_simple_master.c: 67:     I2C1_SetDataCompleteCallback((
      +                          (void*)0),((void*)0));
 33926  0098B6  0E00               	movlw	0
 33927  0098B8  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 33928  0098BA  0E00               	movlw	0
 33929  0098BC  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 33930  0098BE  0E00               	movlw	0
 33931  0098C0  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 33932  0098C2  0E00               	movlw	0
 33933  0098C4  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 33934  0098C6  EC2F  F04E         	call	_I2C1_SetDataCompleteCallback	;wreg free
 33935                           
 33936                           ;mcc_generated_files/drivers/i2c_simple_master.c: 68:     return I2C1_RESTART_READ;
 33937  0098CA  0E02               	movlw	2
 33938  0098CC  0012               	return		;funcret
 33939  0098CE                     __end_of_rd1RegCompleteHandler:
 33940                           	callstack 0
 33941                           
 33942 ;; *************** function _wr1RegCompleteHandler *****************
 33943 ;; Defined at:
 33944 ;;		line 33 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 33945 ;; Parameters:    Size  Location     Type
 33946 ;;  p               2   24[COMRAM] PTR void 
 33947 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 33948 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 33949 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 33950 ;; Auto vars:     Size  Location     Type
 33951 ;;		None
 33952 ;; Return value:  Size  Location     Type
 33953 ;;                  1    wreg      enum E360
 33954 ;; Registers used:
 33955 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33956 ;; Tracked objects:
 33957 ;;		On entry : 3F/2
 33958 ;;		On exit  : 0/0
 33959 ;;		Unchanged: 0/0
 33960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33961 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33962 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33964 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33965 ;;Total ram usage:        2 bytes
 33966 ;; Hardware stack levels used: 1
 33967 ;; Hardware stack levels required when called: 6
 33968 ;; This function calls:
 33969 ;;		_I2C1_SetBuffer
 33970 ;;		_I2C1_SetDataCompleteCallback
 33971 ;; This function is called by:
 33972 ;;		_I2C1_DO_TX
 33973 ;;		_I2C1_DO_RX
 33974 ;;		_I2C1_DO_TX_EMPTY
 33975 ;;		_I2C1_DO_ADDRESS_NACK
 33976 ;; This function uses a non-reentrant model
 33977 ;;
 33978                           
 33979                           	psect	text174
 33980  0098CE                     __ptext174:
 33981                           	callstack 0
 33982  0098CE                     _wr1RegCompleteHandler:
 33983                           	callstack 14
 33984                           
 33985                           ; BSR set to: 2
 33986                           ;mcc_generated_files/drivers/i2c_simple_master.c: 33: static i2c1_operations_t wr1RegCom
      +                          pleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 34: {;mcc_generat
      +                          ed_files/drivers/i2c_simple_master.c: 35:     I2C1_SetBuffer(p,1);
 33987                           
 33988                           ;incstack = 0
 33989  0098CE  C019  F010         	movff	wr1RegCompleteHandler@p,I2C1_SetBuffer@buffer
 33990  0098D2  C01A  F011         	movff	wr1RegCompleteHandler@p+1,I2C1_SetBuffer@buffer+1
 33991  0098D6  0E00               	movlw	0
 33992  0098D8  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 33993  0098DA  0E01               	movlw	1
 33994  0098DC  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 33995  0098DE  ECF2  F04D         	call	_I2C1_SetBuffer	;wreg free
 33996                           
 33997                           ; BSR set to: 2
 33998                           ;mcc_generated_files/drivers/i2c_simple_master.c: 36:     I2C1_SetDataCompleteCallback((
      +                          (void*)0),((void*)0));
 33999  0098E2  0E00               	movlw	0
 34000  0098E4  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 34001  0098E6  0E00               	movlw	0
 34002  0098E8  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 34003  0098EA  0E00               	movlw	0
 34004  0098EC  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 34005  0098EE  0E00               	movlw	0
 34006  0098F0  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 34007  0098F2  EC2F  F04E         	call	_I2C1_SetDataCompleteCallback	;wreg free
 34008                           
 34009                           ;mcc_generated_files/drivers/i2c_simple_master.c: 37:     return I2C1_CONTINUE;
 34010  0098F6  0E04               	movlw	4
 34011  0098F8  0012               	return		;funcret
 34012  0098FA                     __end_of_wr1RegCompleteHandler:
 34013                           	callstack 0
 34014                           
 34015 ;; *************** function _wr2RegCompleteHandler@i2c1_master_example$F523 *****************
 34016 ;; Defined at:
 34017 ;;		line 169 in file "mcc_generated_files/examples/i2c1_master_example.c"
 34018 ;; Parameters:    Size  Location     Type
 34019 ;;  ptr             2   24[COMRAM] PTR void 
 34020 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 34021 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 34022 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 34023 ;; Auto vars:     Size  Location     Type
 34024 ;;		None
 34025 ;; Return value:  Size  Location     Type
 34026 ;;                  1    wreg      enum E527
 34027 ;; Registers used:
 34028 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 34029 ;; Tracked objects:
 34030 ;;		On entry : 3F/2
 34031 ;;		On exit  : 0/0
 34032 ;;		Unchanged: 0/0
 34033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34034 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34037 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34038 ;;Total ram usage:        2 bytes
 34039 ;; Hardware stack levels used: 1
 34040 ;; Hardware stack levels required when called: 6
 34041 ;; This function calls:
 34042 ;;		_I2C1_SetBuffer
 34043 ;;		_I2C1_SetDataCompleteCallback
 34044 ;; This function is called by:
 34045 ;;		_I2C1_DO_TX
 34046 ;;		_I2C1_DO_RX
 34047 ;;		_I2C1_DO_TX_EMPTY
 34048 ;;		_I2C1_DO_ADDRESS_NACK
 34049 ;; This function uses a non-reentrant model
 34050 ;;
 34051                           
 34052                           	psect	text175
 34053  0098FA                     __ptext175:
 34054                           	callstack 0
 34055  0098FA                     _wr2RegCompleteHandler@i2c1_master_example$F523:
 34056                           	callstack 14
 34057                           
 34058                           ; BSR set to: 2
 34059                           ;mcc_generated_files/examples/i2c1_master_example.c: 169: static i2c1_operations_t wr2Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 170: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 171:     I2C1_SetBuffer(ptr,2);
 34060                           
 34061                           ;incstack = 0
 34062  0098FA  C019  F010         	movff	wr2RegCompleteHandler@i2c1_master_example$F523@ptr,I2C1_SetBuffer@buffer
 34063  0098FE  C01A  F011         	movff	wr2RegCompleteHandler@i2c1_master_example$F523@ptr+1,I2C1_SetBuffer@buffer+1
 34064  009902  0E00               	movlw	0
 34065  009904  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 34066  009906  0E02               	movlw	2
 34067  009908  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 34068  00990A  ECF2  F04D         	call	_I2C1_SetBuffer	;wreg free
 34069                           
 34070                           ; BSR set to: 2
 34071                           ;mcc_generated_files/examples/i2c1_master_example.c: 172:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 34072  00990E  0E00               	movlw	0
 34073  009910  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 34074  009912  0E00               	movlw	0
 34075  009914  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 34076  009916  0E00               	movlw	0
 34077  009918  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 34078  00991A  0E00               	movlw	0
 34079  00991C  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 34080  00991E  EC2F  F04E         	call	_I2C1_SetDataCompleteCallback	;wreg free
 34081                           
 34082                           ;mcc_generated_files/examples/i2c1_master_example.c: 173:     return I2C1_CONTINUE;
 34083  009922  0E04               	movlw	4
 34084  009924  0012               	return		;funcret
 34085  009926                     __end_of_wr2RegCompleteHandler@i2c1_master_example$F523:
 34086                           	callstack 0
 34087                           
 34088 ;; *************** function _I2C1_SetDataCompleteCallback *****************
 34089 ;; Defined at:
 34090 ;;		line 273 in file "mcc_generated_files/i2c1_master.c"
 34091 ;; Parameters:    Size  Location     Type
 34092 ;;  cb              2   20[COMRAM] PTR FTN(PTR void ,)enum 
 34093 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler@i2c1_master_example$F535(1), wr2RegCompleteHandler@i2c1_master_exa
      +mple$F523(1), wr1RegCompleteHandler@i2c1_master_example$F517(1), 
 34094 ;;		 -> rd2RegCompleteHandler@i2c1_master_example$F511(1), rd1RegCompleteHandler@i2c1_master_example$F500(1), rdBlkRegCo
      +mpleteHandler(1), wr2RegCompleteHandler(1), 
 34095 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), wr1RegCompleteHandler(1), 
 34096 ;;  ptr             2   22[COMRAM] PTR void 
 34097 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 34098 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 34099 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 34100 ;; Auto vars:     Size  Location     Type
 34101 ;;		None
 34102 ;; Return value:  Size  Location     Type
 34103 ;;                  1    wreg      void 
 34104 ;; Registers used:
 34105 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 34106 ;; Tracked objects:
 34107 ;;		On entry : 33/2
 34108 ;;		On exit  : 0/0
 34109 ;;		Unchanged: 0/0
 34110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34111 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34112 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34114 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34115 ;;Total ram usage:        4 bytes
 34116 ;; Hardware stack levels used: 1
 34117 ;; Hardware stack levels required when called: 5
 34118 ;; This function calls:
 34119 ;;		_I2C1_SetCallback
 34120 ;; This function is called by:
 34121 ;;		_wr1RegCompleteHandler
 34122 ;;		_rd1RegCompleteHandler
 34123 ;;		_rd2RegCompleteHandler
 34124 ;;		_wr2RegCompleteHandler
 34125 ;;		_rdBlkRegCompleteHandler
 34126 ;;		_i2c_readDataBlock
 34127 ;;		_I2C1_Read1ByteRegister
 34128 ;;		_rd1RegCompleteHandler@i2c1_master_example$F500
 34129 ;;		_rd2RegCompleteHandler@i2c1_master_example$F511
 34130 ;;		_wr1RegCompleteHandler@i2c1_master_example$F517
 34131 ;;		_wr2RegCompleteHandler@i2c1_master_example$F523
 34132 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F535
 34133 ;; This function uses a non-reentrant model
 34134 ;;
 34135                           
 34136                           	psect	text176
 34137  009C5E                     __ptext176:
 34138                           	callstack 0
 34139  009C5E                     _I2C1_SetDataCompleteCallback:
 34140                           	callstack 20
 34141                           
 34142                           ;mcc_generated_files/i2c1_master.c: 273: void I2C1_SetDataCompleteCallback(i2c1_callback
      +                          _t cb, void *ptr);mcc_generated_files/i2c1_master.c: 274: {;mcc_generated_files/i2c1_mas
      +                          ter.c: 275:     I2C1_SetCallback(I2C1_DATA_COMPLETE, cb, ptr);
 34143                           
 34144                           ;incstack = 0
 34145  009C5E  C015  F010         	movff	I2C1_SetDataCompleteCallback@cb,I2C1_SetCallback@cb
 34146  009C62  C016  F011         	movff	I2C1_SetDataCompleteCallback@cb+1,I2C1_SetCallback@cb+1
 34147  009C66  C017  F012         	movff	I2C1_SetDataCompleteCallback@ptr,I2C1_SetCallback@ptr
 34148  009C6A  C018  F013         	movff	I2C1_SetDataCompleteCallback@ptr+1,I2C1_SetCallback@ptr+1
 34149  009C6E  0E00               	movlw	0
 34150  009C70  EC99  F045         	call	_I2C1_SetCallback
 34151  009C74  0012               	return		;funcret
 34152  009C76                     __end_of_I2C1_SetDataCompleteCallback:
 34153                           	callstack 0
 34154                           
 34155 ;; *************** function _I2C1_SetCallback *****************
 34156 ;; Defined at:
 34157 ;;		line 298 in file "mcc_generated_files/i2c1_master.c"
 34158 ;; Parameters:    Size  Location     Type
 34159 ;;  idx             1    wreg     enum E10460
 34160 ;;  cb              2   15[COMRAM] PTR FTN(PTR void ,)enum 
 34161 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler@i2c1_master_example$F535(1), wr2RegCompleteHandler@i2c1_master_exa
      +mple$F523(1), wr1RegCompleteHandler@i2c1_master_example$F517(1), 
 34162 ;;		 -> rd2RegCompleteHandler@i2c1_master_example$F511(1), rd1RegCompleteHandler@i2c1_master_example$F500(1), rdBlkRegCo
      +mpleteHandler(1), wr2RegCompleteHandler(1), 
 34163 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), wr1RegCompleteHandler(1), 
 34164 ;;  ptr             2   17[COMRAM] PTR void 
 34165 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 34166 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 34167 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 34168 ;; Auto vars:     Size  Location     Type
 34169 ;;  idx             1   19[COMRAM] enum E10460
 34170 ;; Return value:  Size  Location     Type
 34171 ;;                  1    wreg      void 
 34172 ;; Registers used:
 34173 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 34174 ;; Tracked objects:
 34175 ;;		On entry : 33/2
 34176 ;;		On exit  : 0/0
 34177 ;;		Unchanged: 0/0
 34178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34179 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34180 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34182 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34183 ;;Total ram usage:        5 bytes
 34184 ;; Hardware stack levels used: 1
 34185 ;; Hardware stack levels required when called: 4
 34186 ;; This function calls:
 34187 ;;		Nothing
 34188 ;; This function is called by:
 34189 ;;		_I2C1_SetDataCompleteCallback
 34190 ;;		_I2C1_SetAddressNackCallback
 34191 ;; This function uses a non-reentrant model
 34192 ;;
 34193                           
 34194                           	psect	text177
 34195  008B32                     __ptext177:
 34196                           	callstack 0
 34197  008B32                     _I2C1_SetCallback:
 34198                           	callstack 20
 34199                           
 34200                           ;incstack = 0
 34201                           ;I2C1_SetCallback@idx stored from wreg
 34202  008B32  6E14               	movwf	I2C1_SetCallback@idx^0,c
 34203                           
 34204                           ;mcc_generated_files/i2c1_master.c: 298: static void I2C1_SetCallback(i2c1_callbackIndex
      +                          _t idx, i2c1_callback_t cb, void *ptr);mcc_generated_files/i2c1_master.c: 299: {;mcc_gen
      +                          erated_files/i2c1_master.c: 300:     if(cb)
 34205  008B34  5010               	movf	I2C1_SetCallback@cb^0,w,c
 34206  008B36  1011               	iorwf	(I2C1_SetCallback@cb+1)^0,w,c
 34207  008B38  B4D8               	btfsc	status,2,c
 34208  008B3A  D019               	goto	l19961
 34209                           
 34210                           ;mcc_generated_files/i2c1_master.c: 301:     {;mcc_generated_files/i2c1_master.c: 302:  
      +                                 I2C1_Status.callbackTable[idx] = cb;
 34211  008B3C  5014               	movf	I2C1_SetCallback@idx^0,w,c
 34212  008B3E  0D02               	mullw	2
 34213  008B40  0E3C               	movlw	low _I2C1_Status
 34214  008B42  24F3               	addwf	243,w,c
 34215  008B44  6ED9               	movwf	fsr2l,c
 34216  008B46  0E02               	movlw	high _I2C1_Status
 34217  008B48  20F4               	addwfc	prodh,w,c
 34218  008B4A  6EDA               	movwf	fsr2h,c
 34219  008B4C  C010  FFDE         	movff	I2C1_SetCallback@cb,postinc2
 34220  008B50  C011  FFDD         	movff	I2C1_SetCallback@cb+1,postdec2
 34221                           
 34222                           ;mcc_generated_files/i2c1_master.c: 303:         I2C1_Status.callbackPayload[idx] = ptr;
 34223  008B54  5014               	movf	I2C1_SetCallback@idx^0,w,c
 34224  008B56  0D02               	mullw	2
 34225  008B58  0E48               	movlw	low (_I2C1_Status+12)
 34226  008B5A  24F3               	addwf	243,w,c
 34227  008B5C  6ED9               	movwf	fsr2l,c
 34228  008B5E  0E02               	movlw	high (_I2C1_Status+12)
 34229  008B60  20F4               	addwfc	prodh,w,c
 34230  008B62  6EDA               	movwf	fsr2h,c
 34231  008B64  C012  FFDE         	movff	I2C1_SetCallback@ptr,postinc2
 34232  008B68  C013  FFDD         	movff	I2C1_SetCallback@ptr+1,postdec2
 34233                           
 34234                           ;mcc_generated_files/i2c1_master.c: 304:     }
 34235  008B6C  0012               	return	
 34236  008B6E                     l19961:
 34237                           
 34238                           ;mcc_generated_files/i2c1_master.c: 306:     {;mcc_generated_files/i2c1_master.c: 307:  
      +                                 I2C1_Status.callbackTable[idx] = I2C1_CallbackReturnStop;
 34239  008B6E  5014               	movf	I2C1_SetCallback@idx^0,w,c
 34240  008B70  0D02               	mullw	2
 34241  008B72  0E3C               	movlw	low _I2C1_Status
 34242  008B74  24F3               	addwf	243,w,c
 34243  008B76  6ED9               	movwf	fsr2l,c
 34244  008B78  0E02               	movlw	high _I2C1_Status
 34245  008B7A  20F4               	addwfc	prodh,w,c
 34246  008B7C  6EDA               	movwf	fsr2h,c
 34247  008B7E  0E7A               	movlw	low _I2C1_CallbackReturnStop
 34248  008B80  6EDE               	movwf	postinc2,c
 34249  008B82  0E9E               	movlw	high _I2C1_CallbackReturnStop
 34250  008B84  6EDD               	movwf	postdec2,c
 34251                           
 34252                           ;mcc_generated_files/i2c1_master.c: 308:         I2C1_Status.callbackPayload[idx] = ((vo
      +                          id*)0);
 34253  008B86  5014               	movf	I2C1_SetCallback@idx^0,w,c
 34254  008B88  0D02               	mullw	2
 34255  008B8A  0E48               	movlw	low (_I2C1_Status+12)
 34256  008B8C  24F3               	addwf	243,w,c
 34257  008B8E  6ED9               	movwf	fsr2l,c
 34258  008B90  0E02               	movlw	high (_I2C1_Status+12)
 34259  008B92  20F4               	addwfc	prodh,w,c
 34260  008B94  6EDA               	movwf	fsr2h,c
 34261  008B96  0E00               	movlw	0
 34262  008B98  6EDE               	movwf	postinc2,c
 34263  008B9A  0E00               	movlw	0
 34264  008B9C  6EDD               	movwf	postdec2,c
 34265  008B9E  0012               	return		;funcret
 34266  008BA0                     __end_of_I2C1_SetCallback:
 34267                           	callstack 0
 34268                           
 34269 ;; *************** function _I2C1_SetBuffer *****************
 34270 ;; Defined at:
 34271 ;;		line 263 in file "mcc_generated_files/i2c1_master.c"
 34272 ;; Parameters:    Size  Location     Type
 34273 ;;  buffer          2   15[COMRAM] PTR void 
 34274 ;;		 -> eusartparser@serial(4), cmdMemoryIsEmpty@tempSerial(4), memoryTEMP(16), var_sys_NVM(64), 
 34275 ;;		 -> I2C1_ReadDataBlock@reg(1), I2C1_ReadDataBlock@bufferBlock(4), I2C1_WriteNBytes@dat(17), I2C1_Write2ByteRegister@
      +reg(1), 
 34276 ;;		 -> I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@reg(1), I2C1_Write1ByteRegister@data(1), I2C1_Read2Byte
      +Register@reg(1), 
 34277 ;;		 -> I2C1_Read2ByteRegister@returnValue(2), I2C1_Read1ByteRegister@reg(1), I2C1_Read1ByteRegister@returnValue(1), i2c
      +_readDataBlock@reg(2), 
 34278 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@reg(1), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@reg
      +(1), 
 34279 ;;		 -> i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@reg(1), i2c_read1ByteRegister@d2(1), i2c_writeNBytes@dat(
      +17), 
 34280 ;;		 -> i2c_write1ByteRegister@reg(1), i2c_write1ByteRegister@data(1), NULL(0), 
 34281 ;;  bufferSize      2   17[COMRAM] unsigned int 
 34282 ;; Auto vars:     Size  Location     Type
 34283 ;;		None
 34284 ;; Return value:  Size  Location     Type
 34285 ;;                  1    wreg      void 
 34286 ;; Registers used:
 34287 ;;		wreg, status,2, status,0
 34288 ;; Tracked objects:
 34289 ;;		On entry : 0/2
 34290 ;;		On exit  : 3F/2
 34291 ;;		Unchanged: 0/0
 34292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34293 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34294 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34296 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34297 ;;Total ram usage:        4 bytes
 34298 ;; Hardware stack levels used: 1
 34299 ;; Hardware stack levels required when called: 4
 34300 ;; This function calls:
 34301 ;;		Nothing
 34302 ;; This function is called by:
 34303 ;;		_wr1RegCompleteHandler
 34304 ;;		_i2c_writeNBytes
 34305 ;;		_rd1RegCompleteHandler
 34306 ;;		_rd2RegCompleteHandler
 34307 ;;		_wr2RegCompleteHandler
 34308 ;;		_rdBlkRegCompleteHandler
 34309 ;;		_i2c_readDataBlock
 34310 ;;		_I2C1_Read1ByteRegister
 34311 ;;		_rd1RegCompleteHandler@i2c1_master_example$F500
 34312 ;;		_rd2RegCompleteHandler@i2c1_master_example$F511
 34313 ;;		_wr1RegCompleteHandler@i2c1_master_example$F517
 34314 ;;		_wr2RegCompleteHandler@i2c1_master_example$F523
 34315 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F535
 34316 ;; This function uses a non-reentrant model
 34317 ;;
 34318                           
 34319                           	psect	text178
 34320  009BE4                     __ptext178:
 34321                           	callstack 0
 34322  009BE4                     _I2C1_SetBuffer:
 34323                           	callstack 21
 34324                           
 34325                           ;mcc_generated_files/i2c1_master.c: 263: void I2C1_SetBuffer(void *buffer, size_t buffer
      +                          Size);mcc_generated_files/i2c1_master.c: 264: {;mcc_generated_files/i2c1_master.c: 265: 
      +                              if(I2C1_Status.bufferFree)
 34326                           
 34327                           ;incstack = 0
 34328  009BE4  0102               	movlb	2	; () banked
 34329  009BE6  A75F               	btfss	(_I2C1_Status+35)& (0+255),3,b
 34330  009BE8  0012               	return	
 34331                           
 34332                           ; BSR set to: 2
 34333                           ;mcc_generated_files/i2c1_master.c: 266:     {;mcc_generated_files/i2c1_master.c: 267:  
      +                                 I2C1_Status.data_ptr = buffer;
 34334  009BEA  C010  F259         	movff	I2C1_SetBuffer@buffer,_I2C1_Status+29
 34335  009BEE  C011  F25A         	movff	I2C1_SetBuffer@buffer+1,_I2C1_Status+30
 34336                           
 34337                           ; BSR set to: 2
 34338                           ;mcc_generated_files/i2c1_master.c: 268:         I2C1_Status.data_length = bufferSize;
 34339  009BF2  C012  F25B         	movff	I2C1_SetBuffer@bufferSize,_I2C1_Status+31
 34340  009BF6  C013  F25C         	movff	I2C1_SetBuffer@bufferSize+1,_I2C1_Status+32
 34341                           
 34342                           ; BSR set to: 2
 34343                           ;mcc_generated_files/i2c1_master.c: 269:         I2C1_Status.bufferFree = 0;
 34344  009BFA  975F               	bcf	(_I2C1_Status+35)& (0+255),3,b
 34345                           
 34346                           ; BSR set to: 2
 34347  009BFC  0012               	return		;funcret
 34348  009BFE                     __end_of_I2C1_SetBuffer:
 34349                           	callstack 0
 34350                           
 34351 ;; *************** function _I2C1_MasterStop *****************
 34352 ;; Defined at:
 34353 ;;		line 593 in file "mcc_generated_files/i2c1_master.c"
 34354 ;; Parameters:    Size  Location     Type
 34355 ;;		None
 34356 ;; Auto vars:     Size  Location     Type
 34357 ;;		None
 34358 ;; Return value:  Size  Location     Type
 34359 ;;                  1    wreg      void 
 34360 ;; Registers used:
 34361 ;;		None
 34362 ;; Tracked objects:
 34363 ;;		On entry : 0/2
 34364 ;;		On exit  : 0/0
 34365 ;;		Unchanged: 0/0
 34366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34370 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34371 ;;Total ram usage:        0 bytes
 34372 ;; Hardware stack levels used: 1
 34373 ;; Hardware stack levels required when called: 4
 34374 ;; This function calls:
 34375 ;;		Nothing
 34376 ;; This function is called by:
 34377 ;;		_I2C1_DO_SEND_STOP
 34378 ;; This function uses a non-reentrant model
 34379 ;;
 34380                           
 34381                           	psect	text179
 34382  009E7E                     __ptext179:
 34383                           	callstack 0
 34384  009E7E                     _I2C1_MasterStop:
 34385                           	callstack 15
 34386                           
 34387                           ;mcc_generated_files/i2c1_master.c: 595:     SSP1CON2bits.PEN = 1;
 34388                           
 34389                           ; BSR set to: 2
 34390                           ;incstack = 0
 34391  009E7E  8497               	bsf	151,2,c	;volatile
 34392  009E80  0012               	return		;funcret
 34393  009E82                     __end_of_I2C1_MasterStop:
 34394                           	callstack 0
 34395                           
 34396 ;; *************** function _I2C1_MasterEnableRestart *****************
 34397 ;; Defined at:
 34398 ;;		line 573 in file "mcc_generated_files/i2c1_master.c"
 34399 ;; Parameters:    Size  Location     Type
 34400 ;;		None
 34401 ;; Auto vars:     Size  Location     Type
 34402 ;;		None
 34403 ;; Return value:  Size  Location     Type
 34404 ;;                  1    wreg      void 
 34405 ;; Registers used:
 34406 ;;		None
 34407 ;; Tracked objects:
 34408 ;;		On entry : 0/2
 34409 ;;		On exit  : 0/0
 34410 ;;		Unchanged: 0/0
 34411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34412 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34413 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34414 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34415 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34416 ;;Total ram usage:        0 bytes
 34417 ;; Hardware stack levels used: 1
 34418 ;; Hardware stack levels required when called: 4
 34419 ;; This function calls:
 34420 ;;		Nothing
 34421 ;; This function is called by:
 34422 ;;		_I2C1_DO_SEND_RESTART_READ
 34423 ;;		_I2C1_DO_SEND_RESTART_WRITE
 34424 ;;		_I2C1_DO_SEND_RESTART
 34425 ;; This function uses a non-reentrant model
 34426 ;;
 34427                           
 34428                           	psect	text180
 34429  009E82                     __ptext180:
 34430                           	callstack 0
 34431  009E82                     _I2C1_MasterEnableRestart:
 34432                           	callstack 15
 34433                           
 34434                           ;mcc_generated_files/i2c1_master.c: 575:     SSP1CON2bits.RSEN = 1;
 34435                           
 34436                           ;incstack = 0
 34437  009E82  8297               	bsf	151,1,c	;volatile
 34438  009E84  0012               	return		;funcret
 34439  009E86                     __end_of_I2C1_MasterEnableRestart:
 34440                           	callstack 0
 34441                           
 34442 ;; *************** function _I2C1_MasterStart *****************
 34443 ;; Defined at:
 34444 ;;		line 588 in file "mcc_generated_files/i2c1_master.c"
 34445 ;; Parameters:    Size  Location     Type
 34446 ;;		None
 34447 ;; Auto vars:     Size  Location     Type
 34448 ;;		None
 34449 ;; Return value:  Size  Location     Type
 34450 ;;                  1    wreg      void 
 34451 ;; Registers used:
 34452 ;;		None
 34453 ;; Tracked objects:
 34454 ;;		On entry : 3F/2
 34455 ;;		On exit  : 3F/2
 34456 ;;		Unchanged: 3F/0
 34457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34459 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34461 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34462 ;;Total ram usage:        0 bytes
 34463 ;; Hardware stack levels used: 1
 34464 ;; Hardware stack levels required when called: 4
 34465 ;; This function calls:
 34466 ;;		Nothing
 34467 ;; This function is called by:
 34468 ;;		_I2C1_MasterOperation
 34469 ;; This function uses a non-reentrant model
 34470 ;;
 34471                           
 34472                           	psect	text181
 34473  009E86                     __ptext181:
 34474                           	callstack 0
 34475  009E86                     _I2C1_MasterStart:
 34476                           	callstack 19
 34477                           
 34478                           ; BSR set to: 2
 34479                           ;mcc_generated_files/i2c1_master.c: 590:     SSP1CON2bits.SEN = 1;
 34480                           
 34481                           ;incstack = 0
 34482  009E86  8097               	bsf	151,0,c	;volatile
 34483                           
 34484                           ; BSR set to: 2
 34485  009E88  0012               	return		;funcret
 34486  009E8A                     __end_of_I2C1_MasterStart:
 34487                           	callstack 0
 34488                           
 34489 ;; *************** function _I2C1_Close *****************
 34490 ;; Defined at:
 34491 ;;		line 209 in file "mcc_generated_files/i2c1_master.c"
 34492 ;; Parameters:    Size  Location     Type
 34493 ;;		None
 34494 ;; Auto vars:     Size  Location     Type
 34495 ;;  returnValue     1   15[COMRAM] enum E355
 34496 ;; Return value:  Size  Location     Type
 34497 ;;                  1    wreg      enum E355
 34498 ;; Registers used:
 34499 ;;		wreg, status,2, cstack
 34500 ;; Tracked objects:
 34501 ;;		On entry : 0/2
 34502 ;;		On exit  : 33/2
 34503 ;;		Unchanged: 0/0
 34504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34505 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34506 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34508 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34509 ;;Total ram usage:        1 bytes
 34510 ;; Hardware stack levels used: 1
 34511 ;; Hardware stack levels required when called: 5
 34512 ;; This function calls:
 34513 ;;		_I2C1_MasterClearIrq
 34514 ;;		_I2C1_MasterClose
 34515 ;;		_I2C1_MasterDisableIrq
 34516 ;; This function is called by:
 34517 ;;		_i2c_writeNBytes
 34518 ;;		_i2c_readDataBlock
 34519 ;;		_I2C1_Read1ByteRegister
 34520 ;; This function uses a non-reentrant model
 34521 ;;
 34522                           
 34523                           	psect	text182
 34524  009AC8                     __ptext182:
 34525                           	callstack 0
 34526  009AC8                     _I2C1_Close:
 34527                           	callstack 20
 34528                           
 34529                           ;mcc_generated_files/i2c1_master.c: 211:     i2c1_error_t returnValue = I2C1_BUSY;
 34530                           
 34531                           ; BSR set to: 2
 34532                           ;incstack = 0
 34533  009AC8  0E01               	movlw	1
 34534  009ACA  6E10               	movwf	I2C1_Close@returnValue^0,c
 34535                           
 34536                           ;mcc_generated_files/i2c1_master.c: 212:     if(!I2C1_Status.busy)
 34537  009ACC  0102               	movlb	2	; () banked
 34538  009ACE  B35F               	btfsc	(_I2C1_Status+35)& (0+255),1,b
 34539  009AD0  D00A               	goto	l20395
 34540                           
 34541                           ; BSR set to: 2
 34542                           ;mcc_generated_files/i2c1_master.c: 213:     {;mcc_generated_files/i2c1_master.c: 214:  
      +                                 I2C1_Status.inUse = 0;
 34543  009AD2  955F               	bcf	(_I2C1_Status+35)& (0+255),2,b
 34544                           
 34545                           ;mcc_generated_files/i2c1_master.c: 215:         I2C1_Status.address = 0xff;
 34546  009AD4  6958               	setf	(_I2C1_Status+28)& (0+255),b
 34547                           
 34548                           ; BSR set to: 2
 34549                           ;mcc_generated_files/i2c1_master.c: 216:         I2C1_MasterClearIrq();
 34550  009AD6  EC2A  F04F         	call	_I2C1_MasterClearIrq	;wreg free
 34551                           
 34552                           ;mcc_generated_files/i2c1_master.c: 217:         I2C1_MasterDisableIrq();
 34553  009ADA  EC45  F04F         	call	_I2C1_MasterDisableIrq	;wreg free
 34554                           
 34555                           ;mcc_generated_files/i2c1_master.c: 218:         I2C1_MasterClose();
 34556  009ADE  EC47  F04F         	call	_I2C1_MasterClose	;wreg free
 34557                           
 34558                           ; BSR set to: 14
 34559                           ;mcc_generated_files/i2c1_master.c: 219:         returnValue = I2C1_Status.error;
 34560  009AE2  C25E  F010         	movff	_I2C1_Status+34,I2C1_Close@returnValue
 34561  009AE6                     l20395:
 34562                           
 34563                           ;mcc_generated_files/i2c1_master.c: 221:     return returnValue;
 34564  009AE6  5010               	movf	I2C1_Close@returnValue^0,w,c
 34565  009AE8  0012               	return		;funcret
 34566  009AEA                     __end_of_I2C1_Close:
 34567                           	callstack 0
 34568                           
 34569 ;; *************** function _I2C1_MasterDisableIrq *****************
 34570 ;; Defined at:
 34571 ;;		line 635 in file "mcc_generated_files/i2c1_master.c"
 34572 ;; Parameters:    Size  Location     Type
 34573 ;;		None
 34574 ;; Auto vars:     Size  Location     Type
 34575 ;;		None
 34576 ;; Return value:  Size  Location     Type
 34577 ;;                  1    wreg      void 
 34578 ;; Registers used:
 34579 ;;		None
 34580 ;; Tracked objects:
 34581 ;;		On entry : 3F/E
 34582 ;;		On exit  : 3F/E
 34583 ;;		Unchanged: 0/0
 34584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34585 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34586 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34588 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34589 ;;Total ram usage:        0 bytes
 34590 ;; Hardware stack levels used: 1
 34591 ;; Hardware stack levels required when called: 4
 34592 ;; This function calls:
 34593 ;;		Nothing
 34594 ;; This function is called by:
 34595 ;;		_I2C1_Close
 34596 ;; This function uses a non-reentrant model
 34597 ;;
 34598                           
 34599                           	psect	text183
 34600  009E8A                     __ptext183:
 34601                           	callstack 0
 34602  009E8A                     _I2C1_MasterDisableIrq:
 34603                           	callstack 20
 34604                           
 34605                           ; BSR set to: 14
 34606                           ;mcc_generated_files/i2c1_master.c: 637:     PIE3bits.SSP1IE = 0;
 34607                           
 34608                           ;incstack = 0
 34609  009E8A  91C5               	bcf	197,0,b	;volatile
 34610                           
 34611                           ; BSR set to: 14
 34612  009E8C  0012               	return		;funcret
 34613  009E8E                     __end_of_I2C1_MasterDisableIrq:
 34614                           	callstack 0
 34615                           
 34616 ;; *************** function _I2C1_MasterClose *****************
 34617 ;; Defined at:
 34618 ;;		line 557 in file "mcc_generated_files/i2c1_master.c"
 34619 ;; Parameters:    Size  Location     Type
 34620 ;;		None
 34621 ;; Auto vars:     Size  Location     Type
 34622 ;;		None
 34623 ;; Return value:  Size  Location     Type
 34624 ;;                  1    wreg      void 
 34625 ;; Registers used:
 34626 ;;		None
 34627 ;; Tracked objects:
 34628 ;;		On entry : 3F/E
 34629 ;;		On exit  : 3F/E
 34630 ;;		Unchanged: 3F/0
 34631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34633 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34635 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34636 ;;Total ram usage:        0 bytes
 34637 ;; Hardware stack levels used: 1
 34638 ;; Hardware stack levels required when called: 4
 34639 ;; This function calls:
 34640 ;;		Nothing
 34641 ;; This function is called by:
 34642 ;;		_I2C1_Close
 34643 ;; This function uses a non-reentrant model
 34644 ;;
 34645                           
 34646                           	psect	text184
 34647  009E8E                     __ptext184:
 34648                           	callstack 0
 34649  009E8E                     _I2C1_MasterClose:
 34650                           	callstack 20
 34651                           
 34652                           ; BSR set to: 14
 34653                           ;mcc_generated_files/i2c1_master.c: 560:     SSP1CON1bits.SSPEN = 0;
 34654                           
 34655                           ; BSR set to: 14
 34656                           ;incstack = 0
 34657  009E8E  9A96               	bcf	150,5,c	;volatile
 34658                           
 34659                           ; BSR set to: 14
 34660  009E90  0012               	return		;funcret
 34661  009E92                     __end_of_I2C1_MasterClose:
 34662                           	callstack 0
 34663                           
 34664 ;; *************** function _I2C1_MasterClearIrq *****************
 34665 ;; Defined at:
 34666 ;;		line 640 in file "mcc_generated_files/i2c1_master.c"
 34667 ;; Parameters:    Size  Location     Type
 34668 ;;		None
 34669 ;; Auto vars:     Size  Location     Type
 34670 ;;		None
 34671 ;; Return value:  Size  Location     Type
 34672 ;;                  1    wreg      void 
 34673 ;; Registers used:
 34674 ;;		None
 34675 ;; Tracked objects:
 34676 ;;		On entry : 33/2
 34677 ;;		On exit  : 3F/E
 34678 ;;		Unchanged: 0/0
 34679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34680 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34681 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34683 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34684 ;;Total ram usage:        0 bytes
 34685 ;; Hardware stack levels used: 1
 34686 ;; Hardware stack levels required when called: 4
 34687 ;; This function calls:
 34688 ;;		Nothing
 34689 ;; This function is called by:
 34690 ;;		_I2C1_Open
 34691 ;;		_I2C1_Close
 34692 ;;		_I2C1_MasterFsm
 34693 ;; This function uses a non-reentrant model
 34694 ;;
 34695                           
 34696                           	psect	text185
 34697  009E54                     __ptext185:
 34698                           	callstack 0
 34699  009E54                     _I2C1_MasterClearIrq:
 34700                           	callstack 20
 34701                           
 34702                           ;mcc_generated_files/i2c1_master.c: 642:     PIR3bits.SSP1IF = 0;
 34703                           
 34704                           ; BSR set to: 14
 34705                           ;incstack = 0
 34706  009E54  010E               	movlb	14	; () banked
 34707  009E56  91CD               	bcf	205,0,b	;volatile
 34708                           
 34709                           ; BSR set to: 14
 34710  009E58  0012               	return		;funcret
 34711  009E5A                     __end_of_I2C1_MasterClearIrq:
 34712                           	callstack 0
 34713                           
 34714 ;; *************** function _INTERRUPT_InterruptManager *****************
 34715 ;; Defined at:
 34716 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
 34717 ;; Parameters:    Size  Location     Type
 34718 ;;		None
 34719 ;; Auto vars:     Size  Location     Type
 34720 ;;		None
 34721 ;; Return value:  Size  Location     Type
 34722 ;;                  1    wreg      void 
 34723 ;; Registers used:
 34724 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 34725 ;; Tracked objects:
 34726 ;;		On entry : 0/0
 34727 ;;		On exit  : 0/0
 34728 ;;		Unchanged: 0/0
 34729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34730 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34731 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34732 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34733 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34734 ;;Total ram usage:        6 bytes
 34735 ;; Hardware stack levels used: 1
 34736 ;; Hardware stack levels required when called: 3
 34737 ;; This function calls:
 34738 ;;		Absolute function
 34739 ;;		_EUSART1_Receive_ISR
 34740 ;;		_EUSART1_Transmit_ISR
 34741 ;;		_TMR0_ISR
 34742 ;;		_TMR1_ISR
 34743 ;;		_TMR2_ISR
 34744 ;; This function is called by:
 34745 ;;		Interrupt level 2
 34746 ;; This function uses a non-reentrant model
 34747 ;;
 34748                           
 34749                           	psect	intcode
 34750  000008                     __pintcode:
 34751                           	callstack 0
 34752  000008                     _INTERRUPT_InterruptManager:
 34753                           	callstack 14
 34754                           
 34755                           ; BSR set to: 14
 34756                           ;incstack = 0
 34757  000008  8250               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 34758  00000A  CFFA F00A          	movff	pclath,??_INTERRUPT_InterruptManager
 34759  00000E  CFFB F00B          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 34760  000012  CFD9 F00C          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
 34761  000016  CFDA F00D          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
 34762  00001A  CFF3 F00E          	movff	prodl,??_INTERRUPT_InterruptManager+4
 34763  00001E  CFF4 F00F          	movff	prodh,??_INTERRUPT_InterruptManager+5
 34764                           
 34765                           ;mcc_generated_files/interrupt_manager.c: 61:     if(PIE0bits.TMR0IE == 1 && PIR0bits.TM
      +                          R0IF == 1)
 34766  000022  010E               	movlb	14	; () banked
 34767  000024  BBC2               	btfsc	194,5,b	;volatile
 34768                           
 34769                           ; BSR set to: 14
 34770  000026  ABCA               	btfss	202,5,b	;volatile
 34771  000028  D003               	goto	i2l867
 34772                           
 34773                           ; BSR set to: 14
 34774                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         TMR0_ISR();
 34775  00002A  EC0A  F04D         	call	_TMR0_ISR	;wreg free
 34776                           
 34777                           ;mcc_generated_files/interrupt_manager.c: 64:     }
 34778  00002E  D028               	goto	i2l873
 34779  000030                     i2l867:
 34780                           
 34781                           ; BSR set to: 14
 34782  000030  ACF2               	btfss	242,6,c	;volatile
 34783  000032  D026               	goto	i2l873
 34784                           
 34785                           ; BSR set to: 14
 34786                           ;mcc_generated_files/interrupt_manager.c: 66:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 67:         if(PIE3bits.TX1IE == 1 && PIR3bits.TX1IF == 1)
 34787  000034  B9C5               	btfsc	197,4,b	;volatile
 34788                           
 34789                           ; BSR set to: 14
 34790  000036  A9CD               	btfss	205,4,b	;volatile
 34791  000038  D009               	goto	i2l870
 34792                           
 34793                           ; BSR set to: 14
 34794                           ;mcc_generated_files/interrupt_manager.c: 68:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 69:             EUSART1_TxDefaultInterruptHandler();
 34795  00003A  D801               	call	i2u2300_48
 34796  00003C  D021               	goto	i2l873
 34797  00003E                     i2u2300_48:
 34798  00003E  0005               	push	
 34799  000040  6EFA               	movwf	pclath,c
 34800  000042  0102               	movlb	2	; () banked
 34801  000044  51EB               	movf	_EUSART1_TxDefaultInterruptHandler& (0+255),w,b
 34802  000046  6EFD               	movwf	tosl,c
 34803  000048  51EC               	movf	(_EUSART1_TxDefaultInterruptHandler+1)& (0+255),w,b
 34804  00004A  D00B               	goto	L112
 34805  00004C                     i2l870:
 34806                           
 34807                           ; BSR set to: 14
 34808  00004C  BBC5               	btfsc	197,5,b	;volatile
 34809                           
 34810                           ; BSR set to: 14
 34811  00004E  ABCD               	btfss	205,5,b	;volatile
 34812  000050  D00C               	goto	i2l872
 34813                           
 34814                           ; BSR set to: 14
 34815                           ;mcc_generated_files/interrupt_manager.c: 72:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 73:             EUSART1_RxDefaultInterruptHandler();
 34816  000052  D801               	call	i2u2303_48
 34817  000054  D015               	goto	i2l873
 34818  000056                     i2u2303_48:
 34819  000056  0005               	push	
 34820  000058  6EFA               	movwf	pclath,c
 34821  00005A  0102               	movlb	2	; () banked
 34822  00005C  51E9               	movf	_EUSART1_RxDefaultInterruptHandler& (0+255),w,b
 34823  00005E  6EFD               	movwf	tosl,c
 34824  000060  51EA               	movf	(_EUSART1_RxDefaultInterruptHandler+1)& (0+255),w,b
 34825  000062                     L112:
 34826  000062  6EFE               	movwf	tosh,c
 34827  000064  6AFF               	clrf	tosu,c
 34828  000066  50FA               	movf	pclath,w,c
 34829  000068  0012               	return		;indir
 34830  00006A                     i2l872:
 34831                           
 34832                           ; BSR set to: 14
 34833  00006A  B1C6               	btfsc	198,0,b	;volatile
 34834                           
 34835                           ; BSR set to: 14
 34836  00006C  A1CE               	btfss	206,0,b	;volatile
 34837  00006E  D003               	goto	i2l874
 34838                           
 34839                           ; BSR set to: 14
 34840                           ;mcc_generated_files/interrupt_manager.c: 76:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 77:             TMR1_ISR();
 34841  000070  EC80  F04A         	call	_TMR1_ISR	;wreg free
 34842                           
 34843                           ;mcc_generated_files/interrupt_manager.c: 78:         }
 34844  000074  D005               	goto	i2l873
 34845  000076                     i2l874:
 34846                           
 34847                           ; BSR set to: 14
 34848  000076  B3C6               	btfsc	198,1,b	;volatile
 34849                           
 34850                           ; BSR set to: 14
 34851  000078  A3CE               	btfss	206,1,b	;volatile
 34852  00007A  D002               	goto	i2l873
 34853                           
 34854                           ; BSR set to: 14
 34855                           ;mcc_generated_files/interrupt_manager.c: 80:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 81:             TMR2_ISR();
 34856  00007C  ECC8  F035         	call	_TMR2_ISR	;wreg free
 34857  000080                     i2l873:
 34858                           
 34859                           ; BSR set to: 14
 34860  000080  C00F  FFF4         	movff	??_INTERRUPT_InterruptManager+5,prodh
 34861  000084  C00E  FFF3         	movff	??_INTERRUPT_InterruptManager+4,prodl
 34862  000088  C00D  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
 34863  00008C  C00C  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
 34864  000090  C00B  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 34865  000094  C00A  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 34866  000098  9250               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 34867  00009A  0011               	retfie		f
 34868  00009C                     __end_of_INTERRUPT_InterruptManager:
 34869                           	callstack 0
 34870                           
 34871 ;; *************** function _TMR2_ISR *****************
 34872 ;; Defined at:
 34873 ;;		line 180 in file "mcc_generated_files/tmr2.c"
 34874 ;; Parameters:    Size  Location     Type
 34875 ;;		None
 34876 ;; Auto vars:     Size  Location     Type
 34877 ;;		None
 34878 ;; Return value:  Size  Location     Type
 34879 ;;                  1    wreg      void 
 34880 ;; Registers used:
 34881 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 34882 ;; Tracked objects:
 34883 ;;		On entry : 3F/E
 34884 ;;		On exit  : 0/0
 34885 ;;		Unchanged: 0/0
 34886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34887 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34888 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34890 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34891 ;;Total ram usage:        0 bytes
 34892 ;; Hardware stack levels used: 1
 34893 ;; Hardware stack levels required when called: 2
 34894 ;; This function calls:
 34895 ;;		Absolute function
 34896 ;;		_ReadADC
 34897 ;;		_TMR2_DefaultInterruptHandler
 34898 ;;		_controlTimeslots
 34899 ;;		_refreshSegment
 34900 ;; This function is called by:
 34901 ;;		_INTERRUPT_InterruptManager
 34902 ;; This function uses a non-reentrant model
 34903 ;;
 34904                           
 34905                           	psect	text187
 34906  006B90                     __ptext187:
 34907                           	callstack 0
 34908  006B90                     _TMR2_ISR:
 34909                           	callstack 14
 34910                           
 34911                           ; BSR set to: 14
 34912                           ;mcc_generated_files/tmr2.c: 184:     PIR4bits.TMR2IF = 0;
 34913                           
 34914                           ;incstack = 0
 34915  006B90  93CE               	bcf	206,1,b	;volatile
 34916                           
 34917                           ; BSR set to: 14
 34918                           ;mcc_generated_files/tmr2.c: 188:                 ReadADC();
 34919  006B92  EC33  F048         	call	_ReadADC	;wreg free
 34920                           
 34921                           ;mcc_generated_files/tmr2.c: 191:             refreshSegment();
 34922  006B96  ECCB  F041         	call	_refreshSegment	;wreg free
 34923                           
 34924                           ;mcc_generated_files/tmr2.c: 193:             if(ts_system.ts_TimeSlotMain>0)
 34925  006B9A  0101               	movlb	1	; () banked
 34926  006B9C  51A2               	movf	(_ts_system+3)& (0+255),w,b	;volatile
 34927  006B9E  A4D8               	btfss	status,2,c
 34928                           
 34929                           ; BSR set to: 1
 34930                           ;mcc_generated_files/tmr2.c: 194:                 {;mcc_generated_files/tmr2.c: 195:    
      +                                       ts_system.ts_TimeSlotMain--;
 34931  006BA0  07A2               	decf	(_ts_system+3)& (0+255),f,b	;volatile
 34932                           
 34933                           ; BSR set to: 1
 34934                           ;mcc_generated_files/tmr2.c: 198:             if (ts_system.ts_TimeSlot50ms > 0)
 34935  006BA2  51A0               	movf	(_ts_system+1)& (0+255),w,b	;volatile
 34936  006BA4  B4D8               	btfsc	status,2,c
 34937  006BA6  D002               	goto	i2l16913
 34938                           
 34939                           ; BSR set to: 1
 34940                           ;mcc_generated_files/tmr2.c: 199:                 {;mcc_generated_files/tmr2.c: 200:    
      +                                       ts_system.ts_TimeSlot50ms--;
 34941  006BA8  07A0               	decf	(_ts_system+1)& (0+255),f,b	;volatile
 34942                           
 34943                           ;mcc_generated_files/tmr2.c: 201:                 }
 34944  006BAA  D089               	goto	i2l16985
 34945  006BAC                     i2l16913:
 34946                           
 34947                           ; BSR set to: 1
 34948                           ;mcc_generated_files/tmr2.c: 203:                 {;mcc_generated_files/tmr2.c: 204:    
      +                                       ts_system.ts_TimeSlot50ms = 50;
 34949  006BAC  0E32               	movlw	50
 34950  006BAE  6FA0               	movwf	(_ts_system+1)& (0+255),b	;volatile
 34951                           
 34952                           ; BSR set to: 1
 34953                           ;mcc_generated_files/tmr2.c: 208:                     controlTimeslots();
 34954  006BB0  ECED  F031         	call	_controlTimeslots	;wreg free
 34955                           
 34956                           ; BSR set to: 1
 34957                           ;mcc_generated_files/tmr2.c: 210:                       if (Counterchoose == 0)
 34958  006BB4  0100               	movlb	0	; () banked
 34959  006BB6  5192               	movf	_Counterchoose& (0+255),w,b
 34960  006BB8  A4D8               	btfss	status,2,c
 34961  006BBA  D002               	goto	i2l16921
 34962                           
 34963                           ; BSR set to: 0
 34964                           ;mcc_generated_files/tmr2.c: 211:                                {;mcc_generated_files/t
      +                          mr2.c: 212:                                    Counterchoose = 1;
 34965  006BBC  0E01               	movlw	1
 34966  006BBE  D001               	goto	L113
 34967  006BC0                     i2l16921:
 34968                           
 34969                           ; BSR set to: 0
 34970                           ;mcc_generated_files/tmr2.c: 215:                                {;mcc_generated_files/t
      +                          mr2.c: 216:                                    Counterchoose = 0;
 34971  006BC0  0E00               	movlw	0
 34972  006BC2                     L113:
 34973  006BC2  6F92               	movwf	_Counterchoose& (0+255),b
 34974                           
 34975                           ; BSR set to: 0
 34976                           ;mcc_generated_files/tmr2.c: 218:                            if (var_sys.LearningIsEnabl
      +                          ed==NO)
 34977                           
 34978                           ;mcc_generated_files/tmr2.c: 217:                                }
 34979  006BC4  0101               	movlb	1	; () banked
 34980  006BC6  5126               	movf	(_var_sys+38)& (0+255),w,b	;volatile
 34981  006BC8  A4D8               	btfss	status,2,c
 34982  006BCA  D034               	goto	i2l16947
 34983                           
 34984                           ; BSR set to: 1
 34985                           ;mcc_generated_files/tmr2.c: 219:                            {;mcc_generated_files/tmr2.
      +                          c: 222:                                if (var_sys.TimeMaxMotorIsON > 0 && var_sys.Activ
      +                          atecounter != stoped)
 34986  006BCC  5118               	movf	(_var_sys+24)& (0+255),w,b	;volatile
 34987  006BCE  1119               	iorwf	(_var_sys+25)& (0+255),w,b	;volatile
 34988  006BD0  111A               	iorwf	(_var_sys+26)& (0+255),w,b	;volatile
 34989  006BD2  111B               	iorwf	(_var_sys+27)& (0+255),w,b	;volatile
 34990  006BD4  B4D8               	btfsc	status,2,c
 34991  006BD6  D008               	goto	i2l1266
 34992                           
 34993                           ; BSR set to: 1
 34994  006BD8  5116               	movf	(_var_sys+22)& (0+255),w,b	;volatile
 34995  006BDA  B4D8               	btfsc	status,2,c
 34996  006BDC  D005               	goto	i2l1266
 34997                           
 34998                           ; BSR set to: 1
 34999                           ;mcc_generated_files/tmr2.c: 223:                                {;mcc_generated_files/t
      +                          mr2.c: 225:                                     var_sys.TimeMaxMotorIsON--;
 35000  006BDE  0718               	decf	(_var_sys+24)& (0+255),f,b	;volatile
 35001  006BE0  0E00               	movlw	0
 35002  006BE2  5B19               	subwfb	(_var_sys+25)& (0+255),f,b	;volatile
 35003  006BE4  5B1A               	subwfb	(_var_sys+26)& (0+255),f,b	;volatile
 35004  006BE6  5B1B               	subwfb	(_var_sys+27)& (0+255),f,b	;volatile
 35005  006BE8                     i2l1266:
 35006                           
 35007                           ; BSR set to: 1
 35008                           ;mcc_generated_files/tmr2.c: 230:                                if (var_sys.Activatecou
      +                          nter == open)
 35009  006BE8  0516               	decf	(_var_sys+22)& (0+255),w,b	;volatile
 35010  006BEA  A4D8               	btfss	status,2,c
 35011  006BEC  D00E               	goto	i2l16937
 35012                           
 35013                           ; BSR set to: 1
 35014                           ;mcc_generated_files/tmr2.c: 231:                                {;mcc_generated_files/t
      +                          mr2.c: 232:                                    {;mcc_generated_files/tmr2.c: 234:       
      +                                                            if (powerControl_st.decelarationActive==YES)
 35015  006BEE  057B               	decf	_powerControl_st& (0+255),w,b
 35016  006BF0  A4D8               	btfss	status,2,c
 35017  006BF2  D004               	goto	i2u1917_40
 35018                           
 35019                           ; BSR set to: 1
 35020                           ;mcc_generated_files/tmr2.c: 235:                                         {;mcc_generate
      +                          d_files/tmr2.c: 236:                                             if(Counterchoose ==1){
 35021  006BF4  0100               	movlb	0	; () banked
 35022  006BF6  0592               	decf	_Counterchoose& (0+255),w,b
 35023  006BF8  A4D8               	btfss	status,2,c
 35024  006BFA  D061               	goto	i2l16985
 35025  006BFC                     i2u1917_40:
 35026                           
 35027                           ;mcc_generated_files/tmr2.c: 237:                                               var_sys.
      +                          PositionActual++;
 35028  006BFC  0E01               	movlw	1
 35029  006BFE  0101               	movlb	1	; () banked
 35030  006C00  271E               	addwf	(_var_sys+30)& (0+255),f,b	;volatile
 35031  006C02  0E00               	movlw	0
 35032  006C04  231F               	addwfc	(_var_sys+31)& (0+255),f,b	;volatile
 35033  006C06  2320               	addwfc	(_var_sys+32)& (0+255),f,b	;volatile
 35034  006C08  D013               	goto	L114
 35035  006C0A                     i2l16937:
 35036                           
 35037                           ; BSR set to: 1
 35038  006C0A  0E02               	movlw	2
 35039  006C0C  1916               	xorwf	(_var_sys+22)& (0+255),w,b	;volatile
 35040  006C0E  A4D8               	btfss	status,2,c
 35041  006C10  D056               	goto	i2l16985
 35042                           
 35043                           ; BSR set to: 1
 35044                           ;mcc_generated_files/tmr2.c: 250:                                {;mcc_generated_files/t
      +                          mr2.c: 251:                                        if (powerControl_st.decelarationActiv
      +                          e==YES)
 35045  006C12  057B               	decf	_powerControl_st& (0+255),w,b
 35046  006C14  A4D8               	btfss	status,2,c
 35047  006C16  D004               	goto	i2u1920_40
 35048                           
 35049                           ; BSR set to: 1
 35050                           ;mcc_generated_files/tmr2.c: 252:                                         {;mcc_generate
      +                          d_files/tmr2.c: 253:                                             if(Counterchoose ==1){
 35051  006C18  0100               	movlb	0	; () banked
 35052  006C1A  0592               	decf	_Counterchoose& (0+255),w,b
 35053  006C1C  A4D8               	btfss	status,2,c
 35054  006C1E  D04F               	goto	i2l16985
 35055  006C20                     i2u1920_40:
 35056                           
 35057                           ;mcc_generated_files/tmr2.c: 254:                                               var_sys.
      +                          PositionActual--;
 35058  006C20  0EFF               	movlw	255
 35059  006C22  0101               	movlb	1	; () banked
 35060  006C24  271E               	addwf	(_var_sys+30)& (0+255),f,b	;volatile
 35061  006C26  0EFF               	movlw	255
 35062  006C28  231F               	addwfc	(_var_sys+31)& (0+255),f,b	;volatile
 35063  006C2A  0EFF               	movlw	255
 35064  006C2C  2320               	addwfc	(_var_sys+32)& (0+255),f,b	;volatile
 35065  006C2E  0EFF               	movlw	255
 35066  006C30                     L114:
 35067  006C30  2321               	addwfc	(_var_sys+33)& (0+255),f,b	;volatile
 35068                           
 35069                           ;mcc_generated_files/tmr2.c: 263:                            }
 35070  006C32  D045               	goto	i2l16985
 35071  006C34                     i2l16947:
 35072                           
 35073                           ; BSR set to: 1
 35074                           ;mcc_generated_files/tmr2.c: 266:                            {;mcc_generated_files/tmr2.
      +                          c: 267:                                if (var_sys.Counter_Learning ==1)
 35075  006C34  0517               	decf	(_var_sys+23)& (0+255),w,b	;volatile
 35076  006C36  A4D8               	btfss	status,2,c
 35077  006C38  D01C               	goto	i2l1277
 35078                           
 35079                           ; BSR set to: 1
 35080                           ;mcc_generated_files/tmr2.c: 268:                                {;mcc_generated_files/t
      +                          mr2.c: 270:                                     if (var_sys.Activatecounter == open)
 35081  006C3A  0516               	decf	(_var_sys+22)& (0+255),w,b	;volatile
 35082  006C3C  A4D8               	btfss	status,2,c
 35083  006C3E  D00B               	goto	i2l16957
 35084                           
 35085                           ; BSR set to: 1
 35086                           ;mcc_generated_files/tmr2.c: 271:                                     {;mcc_generated_fi
      +                          les/tmr2.c: 273:                                         if (var_sys.LearningDecelaratio
      +                          n ==1)
 35087  006C40  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 35088  006C42  B4D8               	btfsc	status,2,c
 35089  006C44  D016               	goto	i2l1277
 35090                           
 35091                           ; BSR set to: 1
 35092                           ;mcc_generated_files/tmr2.c: 282:                                            {;mcc_gener
      +                          ated_files/tmr2.c: 283:                                              learn_st.timeOpen++
      +                          ;
 35093  006C46  0E01               	movlw	1
 35094  006C48  0100               	movlb	0	; () banked
 35095  006C4A  2764               	addwf	(_learn_st+4)& (0+255),f,b	;volatile
 35096  006C4C  0E00               	movlw	0
 35097  006C4E  2365               	addwfc	(_learn_st+5)& (0+255),f,b	;volatile
 35098  006C50  2366               	addwfc	(_learn_st+6)& (0+255),f,b	;volatile
 35099  006C52  2367               	addwfc	(_learn_st+7)& (0+255),f,b	;volatile
 35100  006C54  D00E               	goto	i2l1277
 35101  006C56                     i2l16957:
 35102                           
 35103                           ; BSR set to: 1
 35104  006C56  0E02               	movlw	2
 35105  006C58  1916               	xorwf	(_var_sys+22)& (0+255),w,b	;volatile
 35106  006C5A  A4D8               	btfss	status,2,c
 35107  006C5C  D00A               	goto	i2l1277
 35108                           
 35109                           ; BSR set to: 1
 35110                           ;mcc_generated_files/tmr2.c: 287:                                     {;mcc_generated_fi
      +                          les/tmr2.c: 289:                                         if (var_sys.LearningDecelaratio
      +                          n ==1)
 35111  006C5E  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 35112  006C60  B4D8               	btfsc	status,2,c
 35113  006C62  D007               	goto	i2l1277
 35114                           
 35115                           ; BSR set to: 1
 35116                           ;mcc_generated_files/tmr2.c: 297:                                             {;mcc_gene
      +                          rated_files/tmr2.c: 298:                                                learn_st.timeClo
      +                          se++;
 35117  006C64  0E01               	movlw	1
 35118  006C66  0100               	movlb	0	; () banked
 35119  006C68  2760               	addwf	_learn_st& (0+255),f,b	;volatile
 35120  006C6A  0E00               	movlw	0
 35121  006C6C  2361               	addwfc	(_learn_st+1)& (0+255),f,b	;volatile
 35122  006C6E  2362               	addwfc	(_learn_st+2)& (0+255),f,b	;volatile
 35123  006C70  2363               	addwfc	(_learn_st+3)& (0+255),f,b	;volatile
 35124  006C72                     i2l1277:
 35125                           
 35126                           ;mcc_generated_files/tmr2.c: 304:                                 if (var_sys.LearningDe
      +                          celaration ==1 && var_sys.programinAutomatic == 1)
 35127  006C72  0101               	movlb	1	; () banked
 35128  006C74  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 35129  006C76  A4D8               	btfss	status,2,c
 35130  006C78  D022               	goto	i2l16985
 35131                           
 35132                           ; BSR set to: 1
 35133  006C7A  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
 35134  006C7C  A4D8               	btfss	status,2,c
 35135  006C7E  D01F               	goto	i2l16985
 35136                           
 35137                           ; BSR set to: 1
 35138                           ;mcc_generated_files/tmr2.c: 305:                                 {;mcc_generated_files/
      +                          tmr2.c: 308:                                        if ( ts_system.ts_TimeSlot500ms > 0)
 35139  006C80  519F               	movf	_ts_system& (0+255),w,b	;volatile
 35140  006C82  B4D8               	btfsc	status,2,c
 35141  006C84  D002               	goto	i2l16971
 35142                           
 35143                           ; BSR set to: 1
 35144                           ;mcc_generated_files/tmr2.c: 309:                                            {;mcc_gener
      +                          ated_files/tmr2.c: 310:                                                ts_system.ts_Time
      +                          Slot500ms--;
 35145  006C86  079F               	decf	_ts_system& (0+255),f,b	;volatile
 35146                           
 35147                           ;mcc_generated_files/tmr2.c: 311:                                            }
 35148  006C88  D01A               	goto	i2l16985
 35149  006C8A                     i2l16971:
 35150                           
 35151                           ; BSR set to: 1
 35152                           ;mcc_generated_files/tmr2.c: 314:                                          {;mcc_generat
      +                          ed_files/tmr2.c: 315:                                             ts_system.ts_TimeSlot5
      +                          00ms = 10;
 35153  006C8A  0E0A               	movlw	10
 35154  006C8C  6F9F               	movwf	_ts_system& (0+255),b	;volatile
 35155                           
 35156                           ; BSR set to: 1
 35157                           ;mcc_generated_files/tmr2.c: 317:                                             if ( var_s
      +                          ys.Activatecounter ==open )
 35158  006C8E  0516               	decf	(_var_sys+22)& (0+255),w,b	;volatile
 35159  006C90  A4D8               	btfss	status,2,c
 35160  006C92  D009               	goto	i2l16979
 35161                           
 35162                           ; BSR set to: 1
 35163                           ;mcc_generated_files/tmr2.c: 318:                                                {;mcc_g
      +                          enerated_files/tmr2.c: 319:                                                  learn_st.ti
      +                          meDecelerationOpen++;
 35164  006C94  0100               	movlb	0	; () banked
 35165  006C96  2B69               	incf	(_learn_st+9)& (0+255),f,b	;volatile
 35166                           
 35167                           ; BSR set to: 0
 35168                           ;mcc_generated_files/tmr2.c: 320:                                                  learn
      +                          _st.timeOpen++;
 35169  006C98  0E01               	movlw	1
 35170  006C9A  2764               	addwf	(_learn_st+4)& (0+255),f,b	;volatile
 35171  006C9C  0E00               	movlw	0
 35172  006C9E  2365               	addwfc	(_learn_st+5)& (0+255),f,b	;volatile
 35173  006CA0  2366               	addwfc	(_learn_st+6)& (0+255),f,b	;volatile
 35174  006CA2  2367               	addwfc	(_learn_st+7)& (0+255),f,b	;volatile
 35175                           
 35176                           ;mcc_generated_files/tmr2.c: 322:                                                }
 35177  006CA4  D00C               	goto	i2l16985
 35178  006CA6                     i2l16979:
 35179                           
 35180                           ; BSR set to: 1
 35181  006CA6  0E02               	movlw	2
 35182  006CA8  1916               	xorwf	(_var_sys+22)& (0+255),w,b	;volatile
 35183  006CAA  A4D8               	btfss	status,2,c
 35184  006CAC  D008               	goto	i2l16985
 35185                           
 35186                           ; BSR set to: 1
 35187                           ;mcc_generated_files/tmr2.c: 325:                                                {;mcc_g
      +                          enerated_files/tmr2.c: 326:                                                  learn_st.ti
      +                          meDecelerationClose++;
 35188  006CAE  0100               	movlb	0	; () banked
 35189  006CB0  2B68               	incf	(_learn_st+8)& (0+255),f,b	;volatile
 35190                           
 35191                           ; BSR set to: 0
 35192                           ;mcc_generated_files/tmr2.c: 327:                                                  learn
      +                          _st.timeClose++;
 35193  006CB2  0E01               	movlw	1
 35194  006CB4  2760               	addwf	_learn_st& (0+255),f,b	;volatile
 35195  006CB6  0E00               	movlw	0
 35196  006CB8  2361               	addwfc	(_learn_st+1)& (0+255),f,b	;volatile
 35197  006CBA  2362               	addwfc	(_learn_st+2)& (0+255),f,b	;volatile
 35198  006CBC  2363               	addwfc	(_learn_st+3)& (0+255),f,b	;volatile
 35199  006CBE                     i2l16985:
 35200                           
 35201                           ;mcc_generated_files/tmr2.c: 335:     if(TMR2_InterruptHandler)
 35202  006CBE  0102               	movlb	2	; () banked
 35203  006CC0  51DB               	movf	_TMR2_InterruptHandler& (0+255),w,b
 35204  006CC2  11DC               	iorwf	(_TMR2_InterruptHandler+1)& (0+255),w,b
 35205  006CC4  B4D8               	btfsc	status,2,c
 35206  006CC6  0012               	return	
 35207                           
 35208                           ; BSR set to: 2
 35209                           ;mcc_generated_files/tmr2.c: 336:     {;mcc_generated_files/tmr2.c: 337:         TMR2_In
      +                          terruptHandler();
 35210  006CC8  D801               	call	i2u1932_48
 35211  006CCA  0012               	return	
 35212  006CCC                     i2u1932_48:
 35213  006CCC  0005               	push	
 35214  006CCE  6EFA               	movwf	pclath,c
 35215  006CD0  51DB               	movf	_TMR2_InterruptHandler& (0+255),w,b
 35216  006CD2  6EFD               	movwf	tosl,c
 35217  006CD4  51DC               	movf	(_TMR2_InterruptHandler+1)& (0+255),w,b
 35218  006CD6  6EFE               	movwf	tosh,c
 35219  006CD8  6AFF               	clrf	tosu,c
 35220  006CDA  50FA               	movf	pclath,w,c
 35221  006CDC  0012               	return		;indir
 35222  006CDE                     __end_of_TMR2_ISR:
 35223                           	callstack 0
 35224                           
 35225 ;; *************** function _refreshSegment *****************
 35226 ;; Defined at:
 35227 ;;		line 50 in file "outputs_MC50.c"
 35228 ;; Parameters:    Size  Location     Type
 35229 ;;		None
 35230 ;; Auto vars:     Size  Location     Type
 35231 ;;		None
 35232 ;; Return value:  Size  Location     Type
 35233 ;;                  1    wreg      void 
 35234 ;; Registers used:
 35235 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 35236 ;; Tracked objects:
 35237 ;;		On entry : 31/E
 35238 ;;		On exit  : 3E/0
 35239 ;;		Unchanged: 0/0
 35240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35241 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35242 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35243 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35244 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35245 ;;Total ram usage:        0 bytes
 35246 ;; Hardware stack levels used: 1
 35247 ;; Hardware stack levels required when called: 1
 35248 ;; This function calls:
 35249 ;;		_Segments_Set
 35250 ;; This function is called by:
 35251 ;;		_TMR2_ISR
 35252 ;; This function uses a non-reentrant model
 35253 ;;
 35254                           
 35255                           	psect	text188
 35256  008396                     __ptext188:
 35257                           	callstack 0
 35258  008396                     _refreshSegment:
 35259                           	callstack 14
 35260                           
 35261                           ;outputs_MC50.c: 54:     if (dispStruct.intermitentFreq==0||dispStruct.upFase==1)
 35262                           
 35263                           ;incstack = 0
 35264  008396  0100               	movlb	0	; () banked
 35265  008398  5175               	movf	(_dispStruct+3)& (0+255),w,b	;volatile
 35266  00839A  1176               	iorwf	(_dispStruct+4)& (0+255),w,b	;volatile
 35267  00839C  B4D8               	btfsc	status,2,c
 35268  00839E  D003               	goto	i2u1532_40
 35269                           
 35270                           ; BSR set to: 0
 35271  0083A0  0577               	decf	(_dispStruct+5)& (0+255),w,b	;volatile
 35272  0083A2  A4D8               	btfss	status,2,c
 35273  0083A4  D01F               	goto	i2l2133
 35274  0083A6                     i2u1532_40:
 35275                           
 35276                           ; BSR set to: 0
 35277                           ;outputs_MC50.c: 55:     {;outputs_MC50.c: 56:         if (dispStruct.lastDisplay==disp2
      +                          _e)
 35278  0083A6  0574               	decf	(_dispStruct+2)& (0+255),w,b	;volatile
 35279  0083A8  A4D8               	btfss	status,2,c
 35280  0083AA  D00D               	goto	i2l2128
 35281                           
 35282                           ; BSR set to: 0
 35283                           
 35284                           ;outputs_MC50.c: 57:         {;outputs_MC50.c: 58:             do { LATCbits.LATC0 = 0; 
      +                          } while(0);
 35285  0083AC  9085               	bcf	133,0,c	;volatile
 35286                           
 35287                           ; BSR set to: 0
 35288                           ;outputs_MC50.c: 59:             Segments_Set(DispTable[dispStruct.display_grp.value_dis
      +                          play1]);
 35289  0083AE  0ED2               	movlw	low _DispTable
 35290  0083B0  2572               	addwf	_dispStruct& (0+255),w,b	;volatile
 35291  0083B2  6ED9               	movwf	fsr2l,c
 35292  0083B4  6ADA               	clrf	fsr2h,c
 35293  0083B6  0E03               	movlw	high _DispTable
 35294  0083B8  22DA               	addwfc	fsr2h,f,c
 35295  0083BA  50DF               	movf	indf2,w,c
 35296  0083BC  ECAE  F04E         	call	_Segments_Set
 35297  0083C0  8285               	bsf	133,1,c	;volatile
 35298                           
 35299                           ;outputs_MC50.c: 61:             dispStruct.lastDisplay=disp1_e;
 35300  0083C2  0E00               	movlw	0
 35301  0083C4  D00C               	goto	L115
 35302  0083C6                     i2l2128:
 35303                           
 35304                           ; BSR set to: 0
 35305  0083C6  9285               	bcf	133,1,c	;volatile
 35306                           
 35307                           ; BSR set to: 0
 35308                           ;outputs_MC50.c: 66:             Segments_Set(DispTable[dispStruct.display_grp.value_dis
      +                          play2]);
 35309  0083C8  0ED2               	movlw	low _DispTable
 35310  0083CA  2573               	addwf	(_dispStruct+1)& (0+255),w,b	;volatile
 35311  0083CC  6ED9               	movwf	fsr2l,c
 35312  0083CE  6ADA               	clrf	fsr2h,c
 35313  0083D0  0E03               	movlw	high _DispTable
 35314  0083D2  22DA               	addwfc	fsr2h,f,c
 35315  0083D4  50DF               	movf	indf2,w,c
 35316  0083D6  ECAE  F04E         	call	_Segments_Set
 35317  0083DA  8085               	bsf	133,0,c	;volatile
 35318                           
 35319                           ;outputs_MC50.c: 68:             dispStruct.lastDisplay=disp2_e;
 35320  0083DC  0E01               	movlw	1
 35321  0083DE                     L115:
 35322  0083DE  0100               	movlb	0	; () banked
 35323  0083E0  6F74               	movwf	(_dispStruct+2)& (0+255),b	;volatile
 35324  0083E2  D002               	goto	i2l14981
 35325  0083E4                     i2l2133:
 35326                           
 35327                           ; BSR set to: 0
 35328  0083E4  9085               	bcf	133,0,c	;volatile
 35329                           
 35330                           ; BSR set to: 0
 35331                           
 35332                           ;outputs_MC50.c: 75:         do { LATCbits.LATC1 = 0; } while(0);
 35333  0083E6  9285               	bcf	133,1,c	;volatile
 35334  0083E8                     i2l14981:
 35335                           
 35336                           ; BSR set to: 0
 35337                           ;outputs_MC50.c: 79:     if(ts_system.timeFreqDigit<=0 && dispStruct.intermitentFreq!=0)
 35338  0083E8  0101               	movlb	1	; () banked
 35339  0083EA  BFAA               	btfsc	(_ts_system+11)& (0+255),7,b	;volatile
 35340  0083EC  D005               	goto	i2u1534_40
 35341  0083EE  51AA               	movf	(_ts_system+11)& (0+255),w,b	;volatile
 35342  0083F0  E114               	bnz	i2l2140
 35343  0083F2  05A9               	decf	(_ts_system+10)& (0+255),w,b	;volatile
 35344  0083F4  B0D8               	btfsc	status,0,c
 35345  0083F6  0012               	return	
 35346  0083F8                     i2u1534_40:
 35347                           
 35348                           ; BSR set to: 1
 35349  0083F8  0100               	movlb	0	; () banked
 35350  0083FA  5175               	movf	(_dispStruct+3)& (0+255),w,b	;volatile
 35351  0083FC  1176               	iorwf	(_dispStruct+4)& (0+255),w,b	;volatile
 35352  0083FE  B4D8               	btfsc	status,2,c
 35353  008400  0012               	return	
 35354                           
 35355                           ; BSR set to: 0
 35356                           ;outputs_MC50.c: 80:     {;outputs_MC50.c: 81:         ts_system.timeFreqDigit=dispStruc
      +                          t.intermitentFreq;
 35357  008402  C075  F1A9         	movff	_dispStruct+3,_ts_system+10	;volatile
 35358  008406  C076  F1AA         	movff	_dispStruct+4,_ts_system+11	;volatile
 35359                           
 35360                           ; BSR set to: 0
 35361                           ;outputs_MC50.c: 82:         if(dispStruct.upFase==1)
 35362  00840A  0577               	decf	(_dispStruct+5)& (0+255),w,b	;volatile
 35363  00840C  A4D8               	btfss	status,2,c
 35364  00840E  D003               	goto	i2l14991
 35365                           
 35366                           ; BSR set to: 0
 35367                           ;outputs_MC50.c: 83:         {;outputs_MC50.c: 84:             dispStruct.upFase = 0;
 35368  008410  0E00               	movlw	0
 35369  008412  6F77               	movwf	(_dispStruct+5)& (0+255),b	;volatile
 35370                           
 35371                           ;outputs_MC50.c: 85:         }
 35372  008414  0012               	return	
 35373  008416                     i2l14991:
 35374                           
 35375                           ; BSR set to: 0
 35376                           ;outputs_MC50.c: 87:         {;outputs_MC50.c: 88:             dispStruct.upFase = 1;
 35377  008416  0E01               	movlw	1
 35378  008418  6F77               	movwf	(_dispStruct+5)& (0+255),b	;volatile
 35379  00841A                     i2l2140:
 35380  00841A  0012               	return		;funcret
 35381  00841C                     __end_of_refreshSegment:
 35382                           	callstack 0
 35383                           
 35384 ;; *************** function _Segments_Set *****************
 35385 ;; Defined at:
 35386 ;;		line 93 in file "outputs_MC50.c"
 35387 ;; Parameters:    Size  Location     Type
 35388 ;;  value           1    wreg     unsigned char 
 35389 ;; Auto vars:     Size  Location     Type
 35390 ;;  value           1    0[COMRAM] unsigned char 
 35391 ;; Return value:  Size  Location     Type
 35392 ;;                  1    wreg      void 
 35393 ;; Registers used:
 35394 ;;		wreg, status,2, status,0
 35395 ;; Tracked objects:
 35396 ;;		On entry : 3F/0
 35397 ;;		On exit  : 0/0
 35398 ;;		Unchanged: 0/0
 35399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35401 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35403 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35404 ;;Total ram usage:        1 bytes
 35405 ;; Hardware stack levels used: 1
 35406 ;; This function calls:
 35407 ;;		Nothing
 35408 ;; This function is called by:
 35409 ;;		_refreshSegment
 35410 ;; This function uses a non-reentrant model
 35411 ;;
 35412                           
 35413                           	psect	text189
 35414  009D5C                     __ptext189:
 35415                           	callstack 0
 35416  009D5C                     _Segments_Set:
 35417                           	callstack 14
 35418                           
 35419                           ;incstack = 0
 35420                           ;Segments_Set@value stored from wreg
 35421  009D5C  6E01               	movwf	Segments_Set@value^0,c
 35422                           
 35423                           ;outputs_MC50.c: 93: void Segments_Set(char value);outputs_MC50.c: 94: {;outputs_MC50.c:
      +                           95:    LATD &= 0x80;
 35424  009D5E  0E80               	movlw	128
 35425  009D60  1686               	andwf	134,f,c	;volatile
 35426                           
 35427                           ;outputs_MC50.c: 96:    LATD |= value;
 35428  009D62  5001               	movf	Segments_Set@value^0,w,c	;volatile
 35429  009D64  1286               	iorwf	134,f,c	;volatile
 35430  009D66  0012               	return		;funcret
 35431  009D68                     __end_of_Segments_Set:
 35432                           	callstack 0
 35433                           
 35434 ;; *************** function _controlTimeslots *****************
 35435 ;; Defined at:
 35436 ;;		line 190 in file "main_MC50.c"
 35437 ;; Parameters:    Size  Location     Type
 35438 ;;		None
 35439 ;; Auto vars:     Size  Location     Type
 35440 ;;		None
 35441 ;; Return value:  Size  Location     Type
 35442 ;;                  1    wreg      void 
 35443 ;; Registers used:
 35444 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 35445 ;; Tracked objects:
 35446 ;;		On entry : 3F/1
 35447 ;;		On exit  : 3F/1
 35448 ;;		Unchanged: 0/0
 35449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35451 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35453 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35454 ;;Total ram usage:        0 bytes
 35455 ;; Hardware stack levels used: 1
 35456 ;; Hardware stack levels required when called: 1
 35457 ;; This function calls:
 35458 ;;		_decrementTimeslot
 35459 ;; This function is called by:
 35460 ;;		_TMR2_ISR
 35461 ;; This function uses a non-reentrant model
 35462 ;;
 35463                           
 35464                           	psect	text190
 35465  0063DA                     __ptext190:
 35466                           	callstack 0
 35467  0063DA                     _controlTimeslots:
 35468                           	callstack 14
 35469                           
 35470                           ; BSR set to: 1
 35471                           ;main_MC50.c: 192:  decrementTimeslot((int*)&ts_system.Debug_TS);
 35472                           
 35473                           ;incstack = 0
 35474  0063DA  0EA7               	movlw	low (_ts_system+8)
 35475  0063DC  6E01               	movwf	decrementTimeslot@ts^0,c
 35476  0063DE  0E01               	movlw	high (_ts_system+8)
 35477  0063E0  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35478  0063E2  ECA8  F04C         	call	_decrementTimeslot	;wreg free
 35479                           
 35480                           ;main_MC50.c: 193:     decrementTimeslot((int*)&ts_system.timewaitFlashRGB);
 35481  0063E6  0EE5               	movlw	low (_ts_system+70)
 35482  0063E8  6E01               	movwf	decrementTimeslot@ts^0,c
 35483  0063EA  0E01               	movlw	high (_ts_system+70)
 35484  0063EC  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35485  0063EE  ECA8  F04C         	call	_decrementTimeslot	;wreg free
 35486                           
 35487                           ;main_MC50.c: 194:     decrementTimeslot((int*)&ts_system.timeFreqDigit);
 35488  0063F2  0EA9               	movlw	low (_ts_system+10)
 35489  0063F4  6E01               	movwf	decrementTimeslot@ts^0,c
 35490  0063F6  0E01               	movlw	high (_ts_system+10)
 35491  0063F8  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35492  0063FA  ECA8  F04C         	call	_decrementTimeslot	;wreg free
 35493                           
 35494                           ;main_MC50.c: 195:     decrementTimeslot((int*)&ts_system.timeSinalizationDigit);
 35495  0063FE  0EAB               	movlw	low (_ts_system+12)
 35496  006400  6E01               	movwf	decrementTimeslot@ts^0,c
 35497  006402  0E01               	movlw	high (_ts_system+12)
 35498  006404  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35499  006406  ECA8  F04C         	call	_decrementTimeslot	;wreg free
 35500                           
 35501                           ;main_MC50.c: 196:     decrementTimeslot((int*)&ts_system.timeoutMenu);
 35502  00640A  0EAD               	movlw	low (_ts_system+14)
 35503  00640C  6E01               	movwf	decrementTimeslot@ts^0,c
 35504  00640E  0E01               	movlw	high (_ts_system+14)
 35505  006410  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35506  006412  ECA8  F04C         	call	_decrementTimeslot	;wreg free
 35507                           
 35508                           ;main_MC50.c: 197:     decrementTimeslot((int*)&ts_system.timeOpenWalk);
 35509  006416  0EAF               	movlw	low (_ts_system+16)
 35510  006418  6E01               	movwf	decrementTimeslot@ts^0,c
 35511  00641A  0E01               	movlw	high (_ts_system+16)
 35512  00641C  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35513  00641E  ECA8  F04C         	call	_decrementTimeslot	;wreg free
 35514                           
 35515                           ;main_MC50.c: 198:     decrementTimeslot((int*)&ts_system.timeWaitToClose);
 35516  006422  0EB1               	movlw	low (_ts_system+18)
 35517  006424  6E01               	movwf	decrementTimeslot@ts^0,c
 35518  006426  0E01               	movlw	high (_ts_system+18)
 35519  006428  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35520  00642A  ECA8  F04C         	call	_decrementTimeslot	;wreg free
 35521                           
 35522                           ;main_MC50.c: 199:     decrementTimeslot((int*)&ts_system.TimeLastCommand);
 35523  00642E  0EB3               	movlw	low (_ts_system+20)
 35524  006430  6E01               	movwf	decrementTimeslot@ts^0,c
 35525  006432  0E01               	movlw	high (_ts_system+20)
 35526  006434  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35527  006436  ECA8  F04C         	call	_decrementTimeslot	;wreg free
 35528                           
 35529                           ;main_MC50.c: 200:     decrementTimeslot((int*)&ts_system.timeSoftStart);
 35530  00643A  0EB5               	movlw	low (_ts_system+22)
 35531  00643C  6E01               	movwf	decrementTimeslot@ts^0,c
 35532  00643E  0E01               	movlw	high (_ts_system+22)
 35533  006440  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35534  006442  ECA8  F04C         	call	_decrementTimeslot	;wreg free
 35535                           
 35536                           ;main_MC50.c: 201:     decrementTimeslot((int*)&ts_system.TimeChargeCondesador);
 35537  006446  0EB9               	movlw	low (_ts_system+26)
 35538  006448  6E01               	movwf	decrementTimeslot@ts^0,c
 35539  00644A  0E01               	movlw	high (_ts_system+26)
 35540  00644C  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35541  00644E  ECA8  F04C         	call	_decrementTimeslot	;wreg free
 35542                           
 35543                           ;main_MC50.c: 203:     decrementTimeslot((int*)&ts_system.timeFreqRGB);
 35544  006452  0EBB               	movlw	low (_ts_system+28)
 35545  006454  6E01               	movwf	decrementTimeslot@ts^0,c
 35546  006456  0E01               	movlw	high (_ts_system+28)
 35547  006458  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35548  00645A  ECA8  F04C         	call	_decrementTimeslot	;wreg free
 35549                           
 35550                           ;main_MC50.c: 204:     decrementTimeslot((int*)&ts_system.timeFreqFlashligth);
 35551  00645E  0EBD               	movlw	low (_ts_system+30)
 35552  006460  6E01               	movwf	decrementTimeslot@ts^0,c
 35553  006462  0E01               	movlw	high (_ts_system+30)
 35554  006464  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35555  006466  ECA8  F04C         	call	_decrementTimeslot	;wreg free
 35556                           
 35557                           ;main_MC50.c: 206:     decrementTimeslot((int*)&ts_system.TimeWaitToNextState);
 35558  00646A  0EC3               	movlw	low (_ts_system+36)
 35559  00646C  6E01               	movwf	decrementTimeslot@ts^0,c
 35560  00646E  0E01               	movlw	high (_ts_system+36)
 35561  006470  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35562  006472  ECA8  F04C         	call	_decrementTimeslot	;wreg free
 35563                           
 35564                           ;main_MC50.c: 208:     decrementTimeslot((int*)&ts_system.timeBetweenSaveCounters);
 35565  006476  0EC5               	movlw	low (_ts_system+38)
 35566  006478  6E01               	movwf	decrementTimeslot@ts^0,c
 35567  00647A  0E01               	movlw	high (_ts_system+38)
 35568  00647C  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35569  00647E  ECA8  F04C         	call	_decrementTimeslot	;wreg free
 35570                           
 35571                           ;main_MC50.c: 209:     decrementTimeslot((int*)&ts_system.TimeElectricBrake);
 35572  006482  0EC7               	movlw	low (_ts_system+40)
 35573  006484  6E01               	movwf	decrementTimeslot@ts^0,c
 35574  006486  0E01               	movlw	high (_ts_system+40)
 35575  006488  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35576  00648A  ECA8  F04C         	call	_decrementTimeslot	;wreg free
 35577                           
 35578                           ;main_MC50.c: 210:     decrementTimeslot((int*)&ts_system.TimeCurrentAlarm);
 35579  00648E  0EC9               	movlw	low (_ts_system+42)
 35580  006490  6E01               	movwf	decrementTimeslot@ts^0,c
 35581  006492  0E01               	movlw	high (_ts_system+42)
 35582  006494  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35583  006496  ECA8  F04C         	call	_decrementTimeslot	;wreg free
 35584                           
 35585                           ;main_MC50.c: 212:     decrementTimeslot((int*)&ts_system.TimeStopedBeforeDecelaration);
 35586  00649A  0ECB               	movlw	low (_ts_system+44)
 35587  00649C  6E01               	movwf	decrementTimeslot@ts^0,c
 35588  00649E  0E01               	movlw	high (_ts_system+44)
 35589  0064A0  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35590  0064A2  ECA8  F04C         	call	_decrementTimeslot	;wreg free
 35591                           
 35592                           ;main_MC50.c: 213:     decrementTimeslot((int*)&ts_system.TimeCurrentWaitForAlarm);
 35593  0064A6  0ECD               	movlw	low (_ts_system+46)
 35594  0064A8  6E01               	movwf	decrementTimeslot@ts^0,c
 35595  0064AA  0E01               	movlw	high (_ts_system+46)
 35596  0064AC  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35597  0064AE  ECA8  F04C         	call	_decrementTimeslot	;wreg free
 35598                           
 35599                           ;main_MC50.c: 214:     decrementTimeslot((int*)&ts_system.TimeInversionStart);
 35600  0064B2  0ECF               	movlw	low (_ts_system+48)
 35601  0064B4  6E01               	movwf	decrementTimeslot@ts^0,c
 35602  0064B6  0E01               	movlw	high (_ts_system+48)
 35603  0064B8  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35604  0064BA  ECA8  F04C         	call	_decrementTimeslot	;wreg free
 35605                           
 35606                           ;main_MC50.c: 215:     decrementTimeslot((int*)&ts_system.TimeReleCapacitor);
 35607  0064BE  0EE1               	movlw	low (_ts_system+66)
 35608  0064C0  6E01               	movwf	decrementTimeslot@ts^0,c
 35609  0064C2  0E01               	movlw	high (_ts_system+66)
 35610  0064C4  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35611  0064C6  ECA8  F04C         	call	_decrementTimeslot	;wreg free
 35612                           
 35613                           ;main_MC50.c: 216:     decrementTimeslot((int*)&ts_system.TimeWaitReleCapacitor);
 35614  0064CA  0EE3               	movlw	low (_ts_system+68)
 35615  0064CC  6E01               	movwf	decrementTimeslot@ts^0,c
 35616  0064CE  0E01               	movlw	high (_ts_system+68)
 35617  0064D0  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35618  0064D2  ECA8  F04C         	call	_decrementTimeslot	;wreg free
 35619                           
 35620                           ;main_MC50.c: 221:     if ( ( var_sys_NVM.electricBrake==0 ) || ( ts_system.TimeElectric
      +                          Brake<=0 ) )
 35621  0064D6  0100               	movlb	0	; () banked
 35622  0064D8  51AF               	movf	(_var_sys_NVM+23)& (0+255),w,b	;volatile
 35623  0064DA  B4D8               	btfsc	status,2,c
 35624  0064DC  D008               	goto	i2u1538_40
 35625                           
 35626                           ; BSR set to: 0
 35627  0064DE  0101               	movlb	1	; () banked
 35628  0064E0  BFC8               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 35629  0064E2  D005               	goto	i2u1538_40
 35630  0064E4  51C8               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 35631  0064E6  E109               	bnz	i2l2024
 35632  0064E8  05C7               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 35633  0064EA  B0D8               	btfsc	status,0,c
 35634  0064EC  D006               	goto	i2l2024
 35635  0064EE                     i2u1538_40:
 35636                           
 35637                           ;main_MC50.c: 222:     {;main_MC50.c: 225:         decrementTimeslot((int*)&ts_system.In
      +                          vertionTimeClosingFromOpen);
 35638  0064EE  0ED1               	movlw	low (_ts_system+50)
 35639  0064F0  6E01               	movwf	decrementTimeslot@ts^0,c
 35640  0064F2  0E01               	movlw	high (_ts_system+50)
 35641  0064F4  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35642  0064F6  ECA8  F04C         	call	_decrementTimeslot	;wreg free
 35643  0064FA                     i2l2024:
 35644                           
 35645                           ;main_MC50.c: 228:     decrementTimeslot((int*)&ts_system.TimeWaitToGetCurrent);
 35646  0064FA  0ED3               	movlw	low (_ts_system+52)
 35647  0064FC  6E01               	movwf	decrementTimeslot@ts^0,c
 35648  0064FE  0E01               	movlw	high (_ts_system+52)
 35649  006500  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35650  006502  ECA8  F04C         	call	_decrementTimeslot	;wreg free
 35651                           
 35652                           ;main_MC50.c: 229:     decrementTimeslot((int*)&ts_system.TimeLearningDecelaration);
 35653  006506  0ED5               	movlw	low (_ts_system+54)
 35654  006508  6E01               	movwf	decrementTimeslot@ts^0,c
 35655  00650A  0E01               	movlw	high (_ts_system+54)
 35656  00650C  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35657  00650E  ECA8  F04C         	call	_decrementTimeslot	;wreg free
 35658                           
 35659                           ;main_MC50.c: 230:     decrementTimeslot((int*)&ts_system.TimeTransitionDecelaration);
 35660  006512  0ED7               	movlw	low (_ts_system+56)
 35661  006514  6E01               	movwf	decrementTimeslot@ts^0,c
 35662  006516  0E01               	movlw	high (_ts_system+56)
 35663  006518  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35664  00651A  ECA8  F04C         	call	_decrementTimeslot	;wreg free
 35665                           
 35666                           ;main_MC50.c: 232:     decrementTimeslot((int*)&ts_system.timewaitBeforeSoftStart);
 35667  00651E  0ED9               	movlw	low (_ts_system+58)
 35668  006520  6E01               	movwf	decrementTimeslot@ts^0,c
 35669  006522  0E01               	movlw	high (_ts_system+58)
 35670  006524  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35671  006526  ECA8  F04C         	call	_decrementTimeslot	;wreg free
 35672                           
 35673                           ;main_MC50.c: 233:     decrementTimeslot((int*)&ts_system.TimeShowVersion);
 35674  00652A  0EDB               	movlw	low (_ts_system+60)
 35675  00652C  6E01               	movwf	decrementTimeslot@ts^0,c
 35676  00652E  0E01               	movlw	high (_ts_system+60)
 35677  006530  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35678  006532  ECA8  F04C         	call	_decrementTimeslot	;wreg free
 35679                           
 35680                           ;main_MC50.c: 235:     decrementTimeslot((int*)&ts_system.TimeStopADCZeroOffsetCalc);
 35681  006536  0EDD               	movlw	low (_ts_system+62)
 35682  006538  6E01               	movwf	decrementTimeslot@ts^0,c
 35683  00653A  0E01               	movlw	high (_ts_system+62)
 35684  00653C  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35685  00653E  ECA8  F04C         	call	_decrementTimeslot	;wreg free
 35686                           
 35687                           ;main_MC50.c: 237:     decrementTimeslot((int*)&ts_system.TimeStopElectricBrake);
 35688  006542  0EDF               	movlw	low (_ts_system+64)
 35689  006544  6E01               	movwf	decrementTimeslot@ts^0,c
 35690  006546  0E01               	movlw	high (_ts_system+64)
 35691  006548  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35692  00654A  ECA8  F04C         	call	_decrementTimeslot	;wreg free
 35693                           
 35694                           ;main_MC50.c: 240:     if (ts_system.TimeOnFlashLigth>0)
 35695  00654E  0101               	movlb	1	; () banked
 35696  006550  BFC2               	btfsc	(_ts_system+35)& (0+255),7,b	;volatile
 35697  006552  0012               	return	
 35698  006554  51C2               	movf	(_ts_system+35)& (0+255),w,b	;volatile
 35699  006556  11C1               	iorwf	(_ts_system+34)& (0+255),w,b	;volatile
 35700  006558  11C0               	iorwf	(_ts_system+33)& (0+255),w,b	;volatile
 35701  00655A  E103               	bnz	i2u1539_40
 35702  00655C  05BF               	decf	(_ts_system+32)& (0+255),w,b	;volatile
 35703  00655E  A0D8               	btfss	status,0,c
 35704  006560  0012               	return	
 35705  006562                     i2u1539_40:
 35706                           
 35707                           ; BSR set to: 1
 35708                           ;main_MC50.c: 241:     {;main_MC50.c: 242:         ts_system.TimeOnFlashLigth--;
 35709  006562  0EFF               	movlw	255
 35710  006564  27BF               	addwf	(_ts_system+32)& (0+255),f,b	;volatile
 35711  006566  0EFF               	movlw	255
 35712  006568  23C0               	addwfc	(_ts_system+33)& (0+255),f,b	;volatile
 35713  00656A  0EFF               	movlw	255
 35714  00656C  23C1               	addwfc	(_ts_system+34)& (0+255),f,b	;volatile
 35715  00656E  0EFF               	movlw	255
 35716  006570  23C2               	addwfc	(_ts_system+35)& (0+255),f,b	;volatile
 35717                           
 35718                           ; BSR set to: 1
 35719  006572  0012               	return		;funcret
 35720  006574                     __end_of_controlTimeslots:
 35721                           	callstack 0
 35722                           
 35723 ;; *************** function _decrementTimeslot *****************
 35724 ;; Defined at:
 35725 ;;		line 246 in file "main_MC50.c"
 35726 ;; Parameters:    Size  Location     Type
 35727 ;;  ts              2    0[COMRAM] PTR int 
 35728 ;;		 -> ts_system.TimeShowVersion(2), ts_system.TimeLearningDecelaration(2), ts_system.TimeWaitToGetCurrent(2), ts_syste
      +m.InvertionTimeClosingFromOpen(2), 
 35729 ;;		 -> ts_system.TimeWaitReleCapacitor(2), ts_system.TimeInversionStart(2), ts_system.TimeStopedBeforeDecelaration(2), 
      +ts_system.TimeWaitToNextState(2), 
 35730 ;;		 -> ts_system.timeFreqFlashligth(2), ts_system.timeFreqRGB(2), ts_system.timeWaitToClose(2), ts_system.timeOpenWalk(
      +2), 
 35731 ;;		 -> ts_system.timeoutMenu(2), ts_system.timeFreqDigit(2), ts_system.timewaitFlashRGB(2), ts_system.TimeStopElectricB
      +rake(2), 
 35732 ;;		 -> ts_system.Debug_TS(2), ts_system.timeSinalizationDigit(2), ts_system.TimeLastCommand(2), ts_system.timeBetweenSa
      +veCounters(2), 
 35733 ;;		 -> ts_system.TimeCurrentAlarm(2), ts_system.TimeCurrentWaitForAlarm(2), ts_system.TimeReleCapacitor(2), ts_system.T
      +imeChargeCondesador(2), 
 35734 ;;		 -> ts_system.TimeTransitionDecelaration(2), ts_system.timewaitBeforeSoftStart(2), ts_system.timeSoftStart(2), ts_sy
      +stem.TimeElectricBrake(2), 
 35735 ;;		 -> ts_system.TimeStopADCZeroOffsetCalc(2), ts_system(72), 
 35736 ;; Auto vars:     Size  Location     Type
 35737 ;;		None
 35738 ;; Return value:  Size  Location     Type
 35739 ;;                  1    wreg      void 
 35740 ;; Registers used:
 35741 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 35742 ;; Tracked objects:
 35743 ;;		On entry : 0/1
 35744 ;;		On exit  : 0/0
 35745 ;;		Unchanged: 0/0
 35746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35747 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35748 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35749 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35750 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35751 ;;Total ram usage:        4 bytes
 35752 ;; Hardware stack levels used: 1
 35753 ;; This function calls:
 35754 ;;		Nothing
 35755 ;; This function is called by:
 35756 ;;		_controlTimeslots
 35757 ;; This function uses a non-reentrant model
 35758 ;;
 35759                           
 35760                           	psect	text191
 35761  009950                     __ptext191:
 35762                           	callstack 0
 35763  009950                     _decrementTimeslot:
 35764                           	callstack 14
 35765                           
 35766                           ;main_MC50.c: 246: void decrementTimeslot(int * ts);main_MC50.c: 247: {;main_MC50.c: 248
      +                          :     if (ts[0]>0)
 35767                           
 35768                           ; BSR set to: 1
 35769                           ;incstack = 0
 35770  009950  C001  FFD9         	movff	decrementTimeslot@ts,fsr2l
 35771  009954  C002  FFDA         	movff	decrementTimeslot@ts+1,fsr2h
 35772  009958  0E01               	movlw	1
 35773  00995A  BEDB               	btfsc	plusw2,7,c
 35774  00995C  0012               	return	
 35775  00995E  0E01               	movlw	1
 35776  009960  50DB               	movf	plusw2,w,c
 35777  009962  E103               	bnz	i2u1369_40
 35778  009964  04DE               	decf	postinc2,w,c
 35779  009966  A0D8               	btfss	status,0,c
 35780  009968  0012               	return	
 35781  00996A                     i2u1369_40:
 35782                           
 35783                           ;main_MC50.c: 249:     {;main_MC50.c: 250:         ts[0]--;
 35784  00996A  C001  FFD9         	movff	decrementTimeslot@ts,fsr2l
 35785  00996E  C002  FFDA         	movff	decrementTimeslot@ts+1,fsr2h
 35786  009972  06DE               	decf	postinc2,f,c
 35787  009974  0E00               	movlw	0
 35788  009976  5ADD               	subwfb	postdec2,f,c
 35789  009978  0012               	return		;funcret
 35790  00997A                     __end_of_decrementTimeslot:
 35791                           	callstack 0
 35792                           
 35793 ;; *************** function _TMR2_DefaultInterruptHandler *****************
 35794 ;; Defined at:
 35795 ;;		line 346 in file "mcc_generated_files/tmr2.c"
 35796 ;; Parameters:    Size  Location     Type
 35797 ;;		None
 35798 ;; Auto vars:     Size  Location     Type
 35799 ;;		None
 35800 ;; Return value:  Size  Location     Type
 35801 ;;                  1    wreg      void 
 35802 ;; Registers used:
 35803 ;;		None
 35804 ;; Tracked objects:
 35805 ;;		On entry : 3F/2
 35806 ;;		On exit  : 3F/2
 35807 ;;		Unchanged: 3F/0
 35808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35809 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35810 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35812 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35813 ;;Total ram usage:        0 bytes
 35814 ;; Hardware stack levels used: 1
 35815 ;; This function calls:
 35816 ;;		Nothing
 35817 ;; This function is called by:
 35818 ;;		_TMR2_Initialize
 35819 ;;		_TMR2_ISR
 35820 ;; This function uses a non-reentrant model
 35821 ;;
 35822                           
 35823                           	psect	text192
 35824  009E94                     __ptext192:
 35825                           	callstack 0
 35826  009E94                     _TMR2_DefaultInterruptHandler:
 35827                           	callstack 15
 35828                           
 35829                           ; BSR set to: 2
 35830                           
 35831                           ;incstack = 0
 35832  009E94  0012               	return		;funcret
 35833  009E96                     __end_of_TMR2_DefaultInterruptHandler:
 35834                           	callstack 0
 35835                           
 35836 ;; *************** function _ReadADC *****************
 35837 ;; Defined at:
 35838 ;;		line 38 in file "controlCurrent_MC50.c"
 35839 ;; Parameters:    Size  Location     Type
 35840 ;;		None
 35841 ;; Auto vars:     Size  Location     Type
 35842 ;;		None
 35843 ;; Return value:  Size  Location     Type
 35844 ;;                  1    wreg      void 
 35845 ;; Registers used:
 35846 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 35847 ;; Tracked objects:
 35848 ;;		On entry : 3F/E
 35849 ;;		On exit  : 31/0
 35850 ;;		Unchanged: 0/0
 35851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35854 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35855 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35856 ;;Total ram usage:        3 bytes
 35857 ;; Hardware stack levels used: 1
 35858 ;; Hardware stack levels required when called: 1
 35859 ;; This function calls:
 35860 ;;		_ADCC_GetSingleConversion
 35861 ;; This function is called by:
 35862 ;;		_TMR2_ISR
 35863 ;; This function uses a non-reentrant model
 35864 ;;
 35865                           
 35866                           	psect	text193
 35867  009066                     __ptext193:
 35868                           	callstack 0
 35869  009066                     _ReadADC:
 35870                           	callstack 14
 35871                           
 35872                           ; BSR set to: 14
 35873                           ;controlCurrent_MC50.c: 40:      if (!ADCON0bits.GO_nDONE)
 35874                           
 35875                           ; BSR set to: 2
 35876                           ;incstack = 0
 35877  009066  B060               	btfsc	96,0,c	;volatile
 35878  009068  0012               	return	
 35879                           
 35880                           ; BSR set to: 14
 35881                           ;controlCurrent_MC50.c: 41:      {;controlCurrent_MC50.c: 42:         if ( idxAdcAquisit
      +                          ion >= 30 )
 35882  00906A  0E1D               	movlw	29
 35883  00906C  0100               	movlb	0	; () banked
 35884  00906E  6591               	cpfsgt	_idxAdcAquisition& (0+255),b	;volatile
 35885  009070  D002               	goto	i2l14957
 35886                           
 35887                           ; BSR set to: 0
 35888                           ;controlCurrent_MC50.c: 43:         {;controlCurrent_MC50.c: 44:             idxAdcAquis
      +                          ition=0;
 35889  009072  0E00               	movlw	0
 35890  009074  6F91               	movwf	_idxAdcAquisition& (0+255),b	;volatile
 35891  009076                     i2l14957:
 35892                           
 35893                           ; BSR set to: 0
 35894                           ;controlCurrent_MC50.c: 47:         ADC_array[idxAdcAquisition] = ((unsigned int)((ADRES
      +                          H << 8) + ADRESL)>>6);
 35895  009076  5063               	movf	99,w,c	;volatile
 35896  009078  CF64 F002          	movff	3940,??_ReadADC	;volatile
 35897  00907C  6A03               	clrf	(??_ReadADC+1)^0,c
 35898  00907E  C002  F003         	movff	??_ReadADC,??_ReadADC+1
 35899  009082  6A02               	clrf	??_ReadADC^0,c
 35900  009084  2602               	addwf	??_ReadADC^0,f,c
 35901  009086  0E00               	movlw	0
 35902  009088  2203               	addwfc	(??_ReadADC+1)^0,f,c
 35903  00908A  0E06               	movlw	6
 35904  00908C  6E04               	movwf	(??_ReadADC+2)^0,c
 35905  00908E                     i2u1530_45:
 35906  00908E  90D8               	bcf	status,0,c
 35907  009090  3203               	rrcf	(??_ReadADC+1)^0,f,c
 35908  009092  3202               	rrcf	??_ReadADC^0,f,c
 35909  009094  2E04               	decfsz	(??_ReadADC+2)^0,f,c
 35910  009096  D7FB               	goto	i2u1530_45
 35911  009098  5191               	movf	_idxAdcAquisition& (0+255),w,b	;volatile
 35912  00909A  0D02               	mullw	2
 35913  00909C  0E00               	movlw	low _ADC_array
 35914  00909E  24F3               	addwf	243,w,c
 35915  0090A0  6ED9               	movwf	fsr2l,c
 35916  0090A2  0E02               	movlw	high _ADC_array
 35917  0090A4  20F4               	addwfc	prodh,w,c
 35918  0090A6  6EDA               	movwf	fsr2h,c
 35919  0090A8  C002  FFDE         	movff	??_ReadADC,postinc2
 35920  0090AC  C003  FFDD         	movff	??_ReadADC+1,postdec2
 35921                           
 35922                           ; BSR set to: 0
 35923                           ;controlCurrent_MC50.c: 48:         ADCC_GetSingleConversion(0x00);
 35924  0090B0  0E00               	movlw	0
 35925  0090B2  EC51  F04E         	call	_ADCC_GetSingleConversion
 35926                           
 35927                           ;controlCurrent_MC50.c: 49:         idxAdcAquisition++;
 35928  0090B6  0100               	movlb	0	; () banked
 35929  0090B8  2B91               	incf	_idxAdcAquisition& (0+255),f,b	;volatile
 35930  0090BA  0012               	return		;funcret
 35931  0090BC                     __end_of_ReadADC:
 35932                           	callstack 0
 35933                           
 35934 ;; *************** function _ADCC_GetSingleConversion *****************
 35935 ;; Defined at:
 35936 ;;		line 131 in file "mcc_generated_files/adcc.c"
 35937 ;; Parameters:    Size  Location     Type
 35938 ;;  channel         1    wreg     enum E10053
 35939 ;; Auto vars:     Size  Location     Type
 35940 ;;  channel         1    0[COMRAM] enum E10053
 35941 ;; Return value:  Size  Location     Type
 35942 ;;                  2  433[None  ] int 
 35943 ;; Registers used:
 35944 ;;		wreg, status,2, cstack
 35945 ;; Tracked objects:
 35946 ;;		On entry : 3F/0
 35947 ;;		On exit  : 0/0
 35948 ;;		Unchanged: 0/0
 35949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35950 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35951 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35952 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35953 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35954 ;;Total ram usage:        1 bytes
 35955 ;; Hardware stack levels used: 1
 35956 ;; This function calls:
 35957 ;;		Nothing
 35958 ;; This function is called by:
 35959 ;;		_ReadADC
 35960 ;; This function uses a non-reentrant model
 35961 ;;
 35962                           
 35963                           	psect	text194
 35964  009CA2                     __ptext194:
 35965                           	callstack 0
 35966  009CA2                     _ADCC_GetSingleConversion:
 35967                           	callstack 14
 35968                           
 35969                           ;incstack = 0
 35970                           ;ADCC_GetSingleConversion@channel stored from wreg
 35971  009CA2  6E01               	movwf	ADCC_GetSingleConversion@channel^0,c
 35972                           
 35973                           ;mcc_generated_files/adcc.c: 131: ADCC_GetSingleConversion(adcc_channel_t channel);mcc_g
      +                          enerated_files/adcc.c: 132: {;mcc_generated_files/adcc.c: 134:     ADPCH = channel;
 35974  009CA4  C001  FF5F         	movff	ADCC_GetSingleConversion@channel,3935	;volatile
 35975                           
 35976                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADON = 1;
 35977  009CA8  8E60               	bsf	96,7,c	;volatile
 35978                           
 35979                           ;mcc_generated_files/adcc.c: 139:       _delay((unsigned long)((5)*(64000000/4000000.0))
      +                          );
 35980  009CAA  0E1A               	movlw	26
 35981  009CAC                     i2u3411_47:
 35982  009CAC  2EE8               	decfsz	wreg,f,c
 35983  009CAE  D7FE               	bra	i2u3411_47
 35984  009CB0  D000               	nop2	
 35985                           
 35986                           ;mcc_generated_files/adcc.c: 142:     ADCON0bits.ADCONT = 0;
 35987  009CB2  9C60               	bcf	96,6,c	;volatile
 35988                           
 35989                           ;mcc_generated_files/adcc.c: 145:     ADCON0bits.ADGO = 1;
 35990  009CB4  8060               	bsf	96,0,c	;volatile
 35991  009CB6  0012               	return		;funcret
 35992  009CB8                     __end_of_ADCC_GetSingleConversion:
 35993                           	callstack 0
 35994                           
 35995 ;; *************** function _TMR1_ISR *****************
 35996 ;; Defined at:
 35997 ;;		line 166 in file "mcc_generated_files/tmr1.c"
 35998 ;; Parameters:    Size  Location     Type
 35999 ;;		None
 36000 ;; Auto vars:     Size  Location     Type
 36001 ;;		None
 36002 ;; Return value:  Size  Location     Type
 36003 ;;                  1    wreg      void 
 36004 ;; Registers used:
 36005 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 36006 ;; Tracked objects:
 36007 ;;		On entry : 3F/E
 36008 ;;		On exit  : 0/0
 36009 ;;		Unchanged: 0/0
 36010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36011 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36012 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36014 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36015 ;;Total ram usage:        0 bytes
 36016 ;; Hardware stack levels used: 1
 36017 ;; Hardware stack levels required when called: 2
 36018 ;; This function calls:
 36019 ;;		Absolute function
 36020 ;;		_TMR1_DefaultInterruptHandler
 36021 ;;		_TMR1_WriteTimer
 36022 ;;		_controlMotorForce
 36023 ;; This function is called by:
 36024 ;;		_INTERRUPT_InterruptManager
 36025 ;; This function uses a non-reentrant model
 36026 ;;
 36027                           
 36028                           	psect	text195
 36029  009500                     __ptext195:
 36030                           	callstack 0
 36031  009500                     _TMR1_ISR:
 36032                           	callstack 14
 36033                           
 36034                           ; BSR set to: 14
 36035                           ;mcc_generated_files/tmr1.c: 170:     PIR4bits.TMR1IF = 0;
 36036                           
 36037                           ;incstack = 0
 36038  009500  91CE               	bcf	206,0,b	;volatile
 36039                           
 36040                           ; BSR set to: 14
 36041                           ;mcc_generated_files/tmr1.c: 172:             controlMotorForce();
 36042  009502  EC9E  F02A         	call	_controlMotorForce	;wreg free
 36043                           
 36044                           ;mcc_generated_files/tmr1.c: 173:             if(ts_system.ts_TimeSlotTRIAC>0)
 36045  009506  0101               	movlb	1	; () banked
 36046  009508  51A4               	movf	(_ts_system+5)& (0+255),w,b	;volatile
 36047  00950A  A4D8               	btfss	status,2,c
 36048                           
 36049                           ; BSR set to: 1
 36050                           ;mcc_generated_files/tmr1.c: 174:             {;mcc_generated_files/tmr1.c: 176:        
      +                                   ts_system.ts_TimeSlotTRIAC--;
 36051  00950C  07A4               	decf	(_ts_system+5)& (0+255),f,b	;volatile
 36052                           
 36053                           ; BSR set to: 1
 36054                           ;mcc_generated_files/tmr1.c: 178:             if (ts_system.ts_TimeSlot1ms > 0 )
 36055  00950E  51A1               	movf	(_ts_system+2)& (0+255),w,b	;volatile
 36056  009510  A4D8               	btfss	status,2,c
 36057                           
 36058                           ; BSR set to: 1
 36059                           ;mcc_generated_files/tmr1.c: 179:             {;mcc_generated_files/tmr1.c: 180:        
      +                               ts_system.ts_TimeSlot1ms--;
 36060  009512  07A1               	decf	(_ts_system+2)& (0+255),f,b	;volatile
 36061                           
 36062                           ; BSR set to: 1
 36063                           ;mcc_generated_files/tmr1.c: 183:     TMR1_WriteTimer(timer1ReloadVal);
 36064  009514  C2DF  F001         	movff	_timer1ReloadVal,TMR1_WriteTimer@timerVal	;volatile
 36065  009518  C2E0  F002         	movff	_timer1ReloadVal+1,TMR1_WriteTimer@timerVal+1	;volatile
 36066  00951C  ECB0  F04D         	call	_TMR1_WriteTimer	;wreg free
 36067                           
 36068                           ; BSR set to: 1
 36069                           ;mcc_generated_files/tmr1.c: 185:     if(TMR1_InterruptHandler)
 36070  009520  0102               	movlb	2	; () banked
 36071  009522  51DD               	movf	_TMR1_InterruptHandler& (0+255),w,b
 36072  009524  11DE               	iorwf	(_TMR1_InterruptHandler+1)& (0+255),w,b
 36073  009526  B4D8               	btfsc	status,2,c
 36074  009528  0012               	return	
 36075                           
 36076                           ; BSR set to: 2
 36077                           ;mcc_generated_files/tmr1.c: 186:     {;mcc_generated_files/tmr1.c: 187:         TMR1_In
      +                          terruptHandler();
 36078  00952A  D801               	call	i2u1908_48
 36079  00952C  0012               	return	
 36080  00952E                     i2u1908_48:
 36081  00952E  0005               	push	
 36082  009530  6EFA               	movwf	pclath,c
 36083  009532  51DD               	movf	_TMR1_InterruptHandler& (0+255),w,b
 36084  009534  6EFD               	movwf	tosl,c
 36085  009536  51DE               	movf	(_TMR1_InterruptHandler+1)& (0+255),w,b
 36086  009538  6EFE               	movwf	tosh,c
 36087  00953A  6AFF               	clrf	tosu,c
 36088  00953C  50FA               	movf	pclath,w,c
 36089  00953E  0012               	return		;indir
 36090  009540                     __end_of_TMR1_ISR:
 36091                           	callstack 0
 36092                           
 36093 ;; *************** function _controlMotorForce *****************
 36094 ;; Defined at:
 36095 ;;		line 213 in file "outputs_MC50.c"
 36096 ;; Parameters:    Size  Location     Type
 36097 ;;		None
 36098 ;; Auto vars:     Size  Location     Type
 36099 ;;		None
 36100 ;; Return value:  Size  Location     Type
 36101 ;;                  1    wreg      void 
 36102 ;; Registers used:
 36103 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 36104 ;; Tracked objects:
 36105 ;;		On entry : 3F/E
 36106 ;;		On exit  : 3E/0
 36107 ;;		Unchanged: 0/0
 36108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36109 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36110 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36111 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36112 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36113 ;;Total ram usage:        5 bytes
 36114 ;; Hardware stack levels used: 1
 36115 ;; Hardware stack levels required when called: 1
 36116 ;; This function calls:
 36117 ;;		i2_GetMotorPower
 36118 ;;		i2_VerifyElectricalBrake
 36119 ;; This function is called by:
 36120 ;;		_TMR1_ISR
 36121 ;; This function uses a non-reentrant model
 36122 ;;
 36123                           
 36124                           	psect	text196
 36125  00553C                     __ptext196:
 36126                           	callstack 0
 36127  00553C                     _controlMotorForce:
 36128                           	callstack 14
 36129                           
 36130                           ; BSR set to: 14
 36131                           ;outputs_MC50.c: 217:     difTime=GetMotorPower();
 36132                           
 36133                           ;incstack = 0
 36134  00553C  EC7B  F03D         	call	i2_GetMotorPower	;wreg free
 36135  005540  6F94               	movwf	_difTime& (0+255),b
 36136                           
 36137                           ; BSR set to: 1
 36138                           ;outputs_MC50.c: 218:     if(powerControl_st.decelarationActive==YES)
 36139  005542  057B               	decf	_powerControl_st& (0+255),w,b
 36140  005544  A4D8               	btfss	status,2,c
 36141  005546  D00F               	goto	i2l2191
 36142                           
 36143                           ; BSR set to: 1
 36144                           ;outputs_MC50.c: 219:     {;outputs_MC50.c: 220:         if(ts_system.TimeStopedBeforeDe
      +                          celaration>0)
 36145  005548  BFCC               	btfsc	(_ts_system+45)& (0+255),7,b	;volatile
 36146  00554A  D008               	goto	i2l14845
 36147  00554C  51CC               	movf	(_ts_system+45)& (0+255),w,b	;volatile
 36148  00554E  E103               	bnz	i2u1490_40
 36149  005550  05CB               	decf	(_ts_system+44)& (0+255),w,b	;volatile
 36150  005552  A0D8               	btfss	status,0,c
 36151  005554  D003               	goto	i2l14845
 36152  005556                     i2u1490_40:
 36153                           
 36154                           ; BSR set to: 1
 36155                           ;outputs_MC50.c: 221:         {;outputs_MC50.c: 222:             StateTRIAC=0;
 36156  005556  0E00               	movlw	0
 36157  005558  6F95               	movwf	_StateTRIAC& (0+255),b
 36158                           
 36159                           ;outputs_MC50.c: 223:         }
 36160  00555A  D005               	goto	i2l2191
 36161  00555C                     i2l14845:
 36162                           
 36163                           ; BSR set to: 1
 36164  00555C  517D               	movf	(_powerControl_st+2)& (0+255),w,b
 36165  00555E  5D7F               	subwf	(_powerControl_st+4)& (0+255),w,b
 36166  005560  A0D8               	btfss	status,0,c
 36167                           
 36168                           ; BSR set to: 1
 36169                           ;outputs_MC50.c: 225:         {;outputs_MC50.c: 227:             difTime=powerControl_st
      +                          .decelarationPower;
 36170  005562  C17E  F194         	movff	_powerControl_st+3,_difTime
 36171  005566                     i2l2191:
 36172                           
 36173                           ; BSR set to: 1
 36174                           ;outputs_MC50.c: 242:     if(PORTAbits.RA3==1 && zeroCrossing==0)
 36175  005566  A68D               	btfss	141,3,c	;volatile
 36176  005568  D071               	goto	i2l2195
 36177                           
 36178                           ; BSR set to: 1
 36179  00556A  5197               	movf	_zeroCrossing& (0+255),w,b
 36180  00556C  A4D8               	btfss	status,2,c
 36181  00556E  D06E               	goto	i2l2195
 36182                           
 36183                           ; BSR set to: 1
 36184                           ;outputs_MC50.c: 243:     {;outputs_MC50.c: 257:         if ( waitZeroPeak == 0 )
 36185  005570  5196               	movf	_waitZeroPeak& (0+255),w,b
 36186  005572  A4D8               	btfss	status,2,c
 36187  005574  D016               	goto	i2l14861
 36188                           
 36189                           ; BSR set to: 1
 36190                           ;outputs_MC50.c: 258:         {;outputs_MC50.c: 260:             zeroCrossingWaitTime[ze
      +                          roCrossingWaitTimeIdx] = (zeroCrossingLength>>1);
 36191  005576  0EF8               	movlw	low _zeroCrossingWaitTime
 36192  005578  0100               	movlb	0	; () banked
 36193  00557A  2584               	addwf	_zeroCrossingWaitTimeIdx& (0+255),w,b
 36194  00557C  6ED9               	movwf	fsr2l,c
 36195  00557E  6ADA               	clrf	fsr2h,c
 36196  005580  0E02               	movlw	high _zeroCrossingWaitTime
 36197  005582  22DA               	addwfc	fsr2h,f,c
 36198  005584  0101               	movlb	1	; () banked
 36199  005586  90D8               	bcf	status,0,c
 36200  005588  3198               	rrcf	_zeroCrossingLength& (0+255),w,b
 36201  00558A  6EDF               	movwf	indf2,c
 36202                           
 36203                           ; BSR set to: 1
 36204                           ;outputs_MC50.c: 261:             if ( zeroCrossingWaitTimeIdx == 0 )
 36205  00558C  0100               	movlb	0	; () banked
 36206  00558E  5184               	movf	_zeroCrossingWaitTimeIdx& (0+255),w,b
 36207  005590  A4D8               	btfss	status,2,c
 36208  005592  D002               	goto	i2l14859
 36209                           
 36210                           ; BSR set to: 0
 36211                           ;outputs_MC50.c: 262:             {;outputs_MC50.c: 263:                 zeroCrossingWai
      +                          tTimeIdx = 1;
 36212  005594  0E01               	movlw	1
 36213  005596  D001               	goto	L116
 36214  005598                     i2l14859:
 36215                           
 36216                           ; BSR set to: 0
 36217                           ;outputs_MC50.c: 266:             {;outputs_MC50.c: 267:                 zeroCrossingWai
      +                          tTimeIdx = 0;
 36218  005598  0E00               	movlw	0
 36219  00559A                     L116:
 36220  00559A  6F84               	movwf	_zeroCrossingWaitTimeIdx& (0+255),b
 36221                           
 36222                           ; BSR set to: 0
 36223                           ;outputs_MC50.c: 270:             zeroCrossingLength = 0;
 36224                           
 36225                           ;outputs_MC50.c: 268:             }
 36226  00559C  0E00               	movlw	0
 36227  00559E  0101               	movlb	1	; () banked
 36228  0055A0  6F98               	movwf	_zeroCrossingLength& (0+255),b
 36229  0055A2                     i2l14861:
 36230                           
 36231                           ; BSR set to: 1
 36232                           ;outputs_MC50.c: 273:         if ( (difTime<=80) || (ts_system.TimeElectricBrake>0) )
 36233  0055A2  0E50               	movlw	80
 36234  0055A4  6594               	cpfsgt	_difTime& (0+255),b
 36235  0055A6  D007               	goto	i2u1497_40
 36236                           
 36237                           ; BSR set to: 1
 36238  0055A8  BFC8               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 36239  0055AA  D008               	goto	i2l14867
 36240  0055AC  51C8               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 36241  0055AE  E103               	bnz	i2u1497_40
 36242  0055B0  05C7               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 36243  0055B2  A0D8               	btfss	status,0,c
 36244  0055B4  D003               	goto	i2l14867
 36245  0055B6                     i2u1497_40:
 36246                           
 36247                           ; BSR set to: 1
 36248                           
 36249                           ;outputs_MC50.c: 274:         {;outputs_MC50.c: 275:             do { LATDbits.LATD7 = 0
      +                          ; } while(0);
 36250  0055B6  9E86               	bcf	134,7,c	;volatile
 36251                           
 36252                           ; BSR set to: 1
 36253                           ;outputs_MC50.c: 276:             var_sys.TriacON=NO;
 36254  0055B8  0E00               	movlw	0
 36255  0055BA  6F0C               	movwf	(_var_sys+12)& (0+255),b	;volatile
 36256  0055BC                     i2l14867:
 36257                           
 36258                           ; BSR set to: 1
 36259                           ;outputs_MC50.c: 280:         waitZeroPeak++;
 36260  0055BC  2B96               	incf	_waitZeroPeak& (0+255),f,b
 36261                           
 36262                           ; BSR set to: 1
 36263                           ;outputs_MC50.c: 282:         if ( waitZeroPeak > zeroCrossingWaitTime[zeroCrossingWaitT
      +                          imeIdx] )
 36264  0055BE  0EF8               	movlw	low _zeroCrossingWaitTime
 36265  0055C0  0100               	movlb	0	; () banked
 36266  0055C2  2584               	addwf	_zeroCrossingWaitTimeIdx& (0+255),w,b
 36267  0055C4  6ED9               	movwf	fsr2l,c
 36268  0055C6  6ADA               	clrf	fsr2h,c
 36269  0055C8  0E02               	movlw	high _zeroCrossingWaitTime
 36270  0055CA  22DA               	addwfc	fsr2h,f,c
 36271  0055CC  0101               	movlb	1	; () banked
 36272  0055CE  5196               	movf	_waitZeroPeak& (0+255),w,b
 36273  0055D0  5CDE               	subwf	postinc2,w,c
 36274  0055D2  B0D8               	btfsc	status,0,c
 36275  0055D4  D044               	goto	i2l14897
 36276                           
 36277                           ; BSR set to: 1
 36278                           ;outputs_MC50.c: 284:         {;outputs_MC50.c: 286:             if ((var_sys.Control50o
      +                          r60hz >= 90)&&(var_sys.Control50or60hz <= 105)){
 36279  0055D6  0E59               	movlw	89
 36280  0055D8  654D               	cpfsgt	(_var_sys+77)& (0+255),b	;volatile
 36281  0055DA  D005               	goto	i2l14877
 36282                           
 36283                           ; BSR set to: 1
 36284  0055DC  0E6A               	movlw	106
 36285  0055DE  614D               	cpfslt	(_var_sys+77)& (0+255),b	;volatile
 36286  0055E0  D002               	goto	i2l14877
 36287                           
 36288                           ; BSR set to: 1
 36289                           ;outputs_MC50.c: 287:                 var_sys.Torquerelanty = 1;
 36290  0055E2  0E01               	movlw	1
 36291  0055E4  D001               	goto	L117
 36292  0055E6                     i2l14877:
 36293                           
 36294                           ; BSR set to: 1
 36295                           ;outputs_MC50.c: 290:             {;outputs_MC50.c: 291:                var_sys.Torquere
      +                          lanty = 0;
 36296  0055E6  0E00               	movlw	0
 36297  0055E8                     L117:
 36298  0055E8  6F15               	movwf	(_var_sys+21)& (0+255),b	;volatile
 36299                           
 36300                           ; BSR set to: 1
 36301                           ;outputs_MC50.c: 294:             ts_system.ts_TimeSlotTRIAC=80;
 36302                           
 36303                           ;outputs_MC50.c: 292:             }
 36304  0055EA  0E50               	movlw	80
 36305  0055EC  6FA4               	movwf	(_ts_system+5)& (0+255),b	;volatile
 36306                           
 36307                           ;outputs_MC50.c: 295:             var_sys.Control50or60hz = 0;
 36308  0055EE  0E00               	movlw	0
 36309  0055F0  6F4D               	movwf	(_var_sys+77)& (0+255),b	;volatile
 36310                           
 36311                           ;outputs_MC50.c: 296:             StateTRIAC=1;
 36312  0055F2  0E01               	movlw	1
 36313  0055F4  6F95               	movwf	_StateTRIAC& (0+255),b
 36314                           
 36315                           ;outputs_MC50.c: 297:             zeroCrossing=1;
 36316  0055F6  0E01               	movlw	1
 36317  0055F8  6F97               	movwf	_zeroCrossing& (0+255),b
 36318                           
 36319                           ; BSR set to: 1
 36320                           ;outputs_MC50.c: 298:             powerControl_st.actualCycle++;
 36321  0055FA  2B7F               	incf	(_powerControl_st+4)& (0+255),f,b
 36322                           
 36323                           ; BSR set to: 1
 36324                           ;outputs_MC50.c: 304:             if ( var_sys_NVM.electricBrake==1 && ts_system.TimeEle
      +                          ctricBrake>0 )
 36325  0055FC  0100               	movlb	0	; () banked
 36326  0055FE  05AF               	decf	(_var_sys_NVM+23)& (0+255),w,b	;volatile
 36327  005600  A4D8               	btfss	status,2,c
 36328  005602  D00E               	goto	i2l14889
 36329                           
 36330                           ; BSR set to: 0
 36331  005604  0101               	movlb	1	; () banked
 36332  005606  BFC8               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 36333  005608  D00B               	goto	i2l14889
 36334  00560A  51C8               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 36335  00560C  E103               	bnz	i2u1502_40
 36336  00560E  05C7               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 36337  005610  A0D8               	btfss	status,0,c
 36338  005612  D006               	goto	i2l14889
 36339  005614                     i2u1502_40:
 36340                           
 36341                           ; BSR set to: 1
 36342                           ;outputs_MC50.c: 305:             {;outputs_MC50.c: 307:                 if ( powerContr
      +                          ol_st.actualCycle>=2 )
 36343  005614  0E01               	movlw	1
 36344  005616  657F               	cpfsgt	(_powerControl_st+4)& (0+255),b
 36345  005618  D022               	goto	i2l14897
 36346  00561A                     i2u1503_40:
 36347                           
 36348                           ; BSR set to: 1
 36349                           ;outputs_MC50.c: 308:                 {;outputs_MC50.c: 309:                     powerCo
      +                          ntrol_st.actualCycle=0;
 36350  00561A  0E00               	movlw	0
 36351  00561C  6F7F               	movwf	(_powerControl_st+4)& (0+255),b
 36352  00561E  D01F               	goto	i2l14897
 36353  005620                     i2l14889:
 36354                           
 36355                           ;outputs_MC50.c: 313:             {;outputs_MC50.c: 314:                 if ( powerContr
      +                          ol_st.actualCycle>=(powerControl_st.decelarationCyclesOff+powerControl_st.decelarationCy
      +                          clesOn) )
 36356  005620  0101               	movlb	1	; () banked
 36357  005622  517C               	movf	(_powerControl_st+1)& (0+255),w,b
 36358  005624  C17D  F005         	movff	_powerControl_st+2,??_controlMotorForce
 36359  005628  6A06               	clrf	(??_controlMotorForce+1)^0,c
 36360  00562A  2605               	addwf	??_controlMotorForce^0,f,c
 36361  00562C  0E00               	movlw	0
 36362  00562E  2206               	addwfc	(??_controlMotorForce+1)^0,f,c
 36363  005630  517F               	movf	(_powerControl_st+4)& (0+255),w,b
 36364  005632  6E07               	movwf	(??_controlMotorForce+2)^0,c
 36365  005634  6A08               	clrf	(??_controlMotorForce+3)^0,c
 36366  005636  5005               	movf	??_controlMotorForce^0,w,c
 36367  005638  5C07               	subwf	(??_controlMotorForce+2)^0,w,c
 36368  00563A  5008               	movf	(??_controlMotorForce+3)^0,w,c
 36369  00563C  0A80               	xorlw	128
 36370  00563E  6E09               	movwf	(??_controlMotorForce+4)^0,c
 36371  005640  5006               	movf	(??_controlMotorForce+1)^0,w,c
 36372  005642  0A80               	xorlw	128
 36373  005644  5809               	subwfb	(??_controlMotorForce+4)^0,w,c
 36374  005646  B0D8               	btfsc	status,0,c
 36375  005648  D7E8               	goto	i2u1503_40
 36376  00564A  D009               	goto	i2l14897
 36377  00564C                     i2l2195:
 36378                           
 36379                           ; BSR set to: 1
 36380  00564C  B68D               	btfsc	141,3,c	;volatile
 36381  00564E  D007               	goto	i2l14897
 36382                           
 36383                           ; BSR set to: 1
 36384  005650  5197               	movf	_zeroCrossing& (0+255),w,b
 36385  005652  B4D8               	btfsc	status,2,c
 36386  005654  D004               	goto	i2l14897
 36387                           
 36388                           ; BSR set to: 1
 36389                           ;outputs_MC50.c: 328:     {;outputs_MC50.c: 330:         zeroCrossing=0;
 36390  005656  0E00               	movlw	0
 36391  005658  6F97               	movwf	_zeroCrossing& (0+255),b
 36392                           
 36393                           ;outputs_MC50.c: 331:         waitZeroPeak=0;
 36394  00565A  0E00               	movlw	0
 36395  00565C  6F96               	movwf	_waitZeroPeak& (0+255),b
 36396  00565E                     i2l14897:
 36397                           
 36398                           ; BSR set to: 1
 36399                           ;outputs_MC50.c: 336:     if ( PORTAbits.RA3!=0 )
 36400  00565E  B68D               	btfsc	141,3,c	;volatile
 36401                           
 36402                           ; BSR set to: 1
 36403                           ;outputs_MC50.c: 337:     {;outputs_MC50.c: 339:         zeroCrossingLength++;
 36404  005660  2B98               	incf	_zeroCrossingLength& (0+255),f,b
 36405                           
 36406                           ; BSR set to: 1
 36407                           ;outputs_MC50.c: 342:    var_sys.Control50or60hz ++;
 36408                           
 36409                           ;outputs_MC50.c: 340:     }
 36410  005662  2B4D               	incf	(_var_sys+77)& (0+255),f,b	;volatile
 36411                           
 36412                           ; BSR set to: 1
 36413                           ;outputs_MC50.c: 352:     stateMotor = VerifyElectricalBrake(var_sys.StateMotor);
 36414  005664  5100               	movf	_var_sys& (0+255),w,b	;volatile
 36415  005666  EC09  F044         	call	i2_VerifyElectricalBrake
 36416  00566A  0100               	movlb	0	; () banked
 36417  00566C  6F83               	movwf	_stateMotor& (0+255),b
 36418                           
 36419                           ; BSR set to: 0
 36420                           ;outputs_MC50.c: 354:     if ( var_sys_NVM.electricBrake==1 && ts_system.TimeElectricBra
      +                          ke>0 && ts_system.TimeStopElectricBrake<=0 )
 36421  00566E  05AF               	decf	(_var_sys_NVM+23)& (0+255),w,b	;volatile
 36422  005670  A4D8               	btfss	status,2,c
 36423  005672  D02E               	goto	i2l14921
 36424                           
 36425                           ; BSR set to: 0
 36426  005674  0101               	movlb	1	; () banked
 36427  005676  BFC8               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 36428  005678  D02B               	goto	i2l14921
 36429  00567A  51C8               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 36430  00567C  E103               	bnz	i2u1509_40
 36431  00567E  05C7               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 36432  005680  A0D8               	btfss	status,0,c
 36433  005682  D026               	goto	i2l14921
 36434  005684                     i2u1509_40:
 36435                           
 36436                           ; BSR set to: 1
 36437  005684  BFE0               	btfsc	(_ts_system+65)& (0+255),7,b	;volatile
 36438  005686  D005               	goto	i2u1510_40
 36439  005688  51E0               	movf	(_ts_system+65)& (0+255),w,b	;volatile
 36440  00568A  E122               	bnz	i2l14921
 36441  00568C  05DF               	decf	(_ts_system+64)& (0+255),w,b	;volatile
 36442  00568E  B0D8               	btfsc	status,0,c
 36443  005690  D01F               	goto	i2l14921
 36444  005692                     i2u1510_40:
 36445                           
 36446                           ; BSR set to: 1
 36447                           ;outputs_MC50.c: 355:     {;outputs_MC50.c: 357:         if(stateMotor !=0 && StateTRIAC
      +                          ==1 && ts_system.ts_TRIACWait<=0 && powerControl_st.actualCycle==0 && ts_system.TimeElec
      +                          tricBrake<(((5+6)*( 100/50))-(5*( 100/50))) )
 36448  005692  0100               	movlb	0	; () banked
 36449  005694  5183               	movf	_stateMotor& (0+255),w,b
 36450  005696  B4D8               	btfsc	status,2,c
 36451  005698  D03A               	goto	i2l14933
 36452                           
 36453                           ; BSR set to: 0
 36454  00569A  0101               	movlb	1	; () banked
 36455  00569C  0595               	decf	_StateTRIAC& (0+255),w,b
 36456  00569E  A4D8               	btfss	status,2,c
 36457  0056A0  D036               	goto	i2l14933
 36458                           
 36459                           ; BSR set to: 1
 36460  0056A2  BFA6               	btfsc	(_ts_system+7)& (0+255),7,b	;volatile
 36461  0056A4  D005               	goto	i2u1513_40
 36462  0056A6  51A6               	movf	(_ts_system+7)& (0+255),w,b	;volatile
 36463  0056A8  E132               	bnz	i2l14933
 36464  0056AA  05A5               	decf	(_ts_system+6)& (0+255),w,b	;volatile
 36465  0056AC  B0D8               	btfsc	status,0,c
 36466  0056AE  D02F               	goto	i2l14933
 36467  0056B0                     i2u1513_40:
 36468                           
 36469                           ; BSR set to: 1
 36470  0056B0  517F               	movf	(_powerControl_st+4)& (0+255),w,b
 36471  0056B2  A4D8               	btfss	status,2,c
 36472  0056B4  D02C               	goto	i2l14933
 36473                           
 36474                           ; BSR set to: 1
 36475  0056B6  BFC8               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 36476  0056B8  D006               	goto	i2u1515_40
 36477  0056BA  51C8               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 36478  0056BC  E128               	bnz	i2l14933
 36479  0056BE  0E0C               	movlw	12
 36480  0056C0  5DC7               	subwf	(_ts_system+40)& (0+255),w,b	;volatile
 36481  0056C2  B0D8               	btfsc	status,0,c
 36482  0056C4  D024               	goto	i2l14933
 36483  0056C6                     i2u1515_40:
 36484                           
 36485                           ; BSR set to: 1
 36486                           
 36487                           ;outputs_MC50.c: 358:         {;outputs_MC50.c: 359:            do { LATDbits.LATD7 = 1;
      +                           } while(0);
 36488  0056C6  8E86               	bsf	134,7,c	;volatile
 36489                           
 36490                           ; BSR set to: 1
 36491                           ;outputs_MC50.c: 360:            ts_system.ts_TRIACWait=-(25*200);
 36492  0056C8  0EEC               	movlw	236
 36493  0056CA  6FA6               	movwf	(_ts_system+7)& (0+255),b	;volatile
 36494  0056CC  0E78               	movlw	120
 36495  0056CE  D01A               	goto	L118
 36496  0056D0                     i2l14921:
 36497                           
 36498                           ;outputs_MC50.c: 366:     {;outputs_MC50.c: 368:         if(stateMotor !=0 && ts_system.
      +                          ts_TimeSlotTRIAC<difTime && StateTRIAC==1 && ts_system.ts_TRIACWait<=0 && var_sys.InStop
      +                          ing==NO)
 36499  0056D0  0100               	movlb	0	; () banked
 36500  0056D2  5183               	movf	_stateMotor& (0+255),w,b
 36501  0056D4  B4D8               	btfsc	status,2,c
 36502  0056D6  D01B               	goto	i2l14933
 36503                           
 36504                           ; BSR set to: 0
 36505  0056D8  0101               	movlb	1	; () banked
 36506  0056DA  5194               	movf	_difTime& (0+255),w,b
 36507  0056DC  5DA4               	subwf	(_ts_system+5)& (0+255),w,b	;volatile
 36508  0056DE  B0D8               	btfsc	status,0,c
 36509  0056E0  D016               	goto	i2l14933
 36510                           
 36511                           ; BSR set to: 1
 36512  0056E2  0595               	decf	_StateTRIAC& (0+255),w,b
 36513  0056E4  A4D8               	btfss	status,2,c
 36514  0056E6  D013               	goto	i2l14933
 36515                           
 36516                           ; BSR set to: 1
 36517  0056E8  BFA6               	btfsc	(_ts_system+7)& (0+255),7,b	;volatile
 36518  0056EA  D005               	goto	i2u1519_40
 36519  0056EC  51A6               	movf	(_ts_system+7)& (0+255),w,b	;volatile
 36520  0056EE  E10F               	bnz	i2l14933
 36521  0056F0  05A5               	decf	(_ts_system+6)& (0+255),w,b	;volatile
 36522  0056F2  B0D8               	btfsc	status,0,c
 36523  0056F4  D00C               	goto	i2l14933
 36524  0056F6                     i2u1519_40:
 36525                           
 36526                           ; BSR set to: 1
 36527  0056F6  510D               	movf	(_var_sys+13)& (0+255),w,b	;volatile
 36528  0056F8  A4D8               	btfss	status,2,c
 36529  0056FA  D009               	goto	i2l14933
 36530                           
 36531                           ; BSR set to: 1
 36532                           
 36533                           ;outputs_MC50.c: 369:         {;outputs_MC50.c: 370:            do { LATDbits.LATD7 = 1;
      +                           } while(0);
 36534  0056FC  8E86               	bsf	134,7,c	;volatile
 36535                           
 36536                           ; BSR set to: 1
 36537                           ;outputs_MC50.c: 371:            ts_system.ts_TRIACWait=-200;
 36538  0056FE  0EFF               	movlw	255
 36539  005700  6FA6               	movwf	(_ts_system+7)& (0+255),b	;volatile
 36540  005702  0E38               	movlw	56
 36541  005704                     L118:
 36542  005704  6FA5               	movwf	(_ts_system+6)& (0+255),b	;volatile
 36543                           
 36544                           ;outputs_MC50.c: 372:            var_sys.TriacON=YES;
 36545  005706  0E01               	movlw	1
 36546  005708  6F0C               	movwf	(_var_sys+12)& (0+255),b	;volatile
 36547                           
 36548                           ;outputs_MC50.c: 373:            StateTRIAC=0;
 36549  00570A  0E00               	movlw	0
 36550  00570C  6F95               	movwf	_StateTRIAC& (0+255),b
 36551  00570E                     i2l14933:
 36552                           
 36553                           ;outputs_MC50.c: 377:     if (((ts_system.ts_TimeSlotTRIAC <= 20 )&& ts_system.TimeElect
      +                          ricBrake<0) || (stateMotor==0))
 36554  00570E  0E15               	movlw	21
 36555  005710  0101               	movlb	1	; () banked
 36556  005712  61A4               	cpfslt	(_ts_system+5)& (0+255),b	;volatile
 36557  005714  D002               	goto	i2u1522_40
 36558                           
 36559                           ; BSR set to: 1
 36560  005716  BFC8               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 36561  005718  D004               	goto	i2u1523_40
 36562  00571A                     i2u1522_40:
 36563                           
 36564                           ; BSR set to: 1
 36565  00571A  0100               	movlb	0	; () banked
 36566  00571C  5183               	movf	_stateMotor& (0+255),w,b
 36567  00571E  A4D8               	btfss	status,2,c
 36568  005720  D004               	goto	i2l2222
 36569  005722                     i2u1523_40:
 36570                           
 36571                           ;outputs_MC50.c: 378:     {;outputs_MC50.c: 384:             do { LATDbits.LATD7 = 0; } 
      +                          while(0);
 36572  005722  9E86               	bcf	134,7,c	;volatile
 36573                           
 36574                           ;outputs_MC50.c: 385:             var_sys.TriacON=NO;
 36575  005724  0E00               	movlw	0
 36576  005726  0101               	movlb	1	; () banked
 36577  005728  6F0C               	movwf	(_var_sys+12)& (0+255),b	;volatile
 36578  00572A                     i2l2222:
 36579                           
 36580                           ;outputs_MC50.c: 396:     if(stateMotor !=0 && ts_system.ts_TRIACWait>0)
 36581  00572A  0100               	movlb	0	; () banked
 36582  00572C  5183               	movf	_stateMotor& (0+255),w,b
 36583  00572E  B4D8               	btfsc	status,2,c
 36584  005730  D00C               	goto	i2l14945
 36585                           
 36586                           ; BSR set to: 0
 36587  005732  0101               	movlb	1	; () banked
 36588  005734  BFA6               	btfsc	(_ts_system+7)& (0+255),7,b	;volatile
 36589  005736  D009               	goto	i2l14945
 36590  005738  51A6               	movf	(_ts_system+7)& (0+255),w,b	;volatile
 36591  00573A  E103               	bnz	i2u1525_40
 36592  00573C  05A5               	decf	(_ts_system+6)& (0+255),w,b	;volatile
 36593  00573E  A0D8               	btfss	status,0,c
 36594  005740  D004               	goto	i2l14945
 36595  005742                     i2u1525_40:
 36596                           
 36597                           ; BSR set to: 1
 36598                           ;outputs_MC50.c: 397:     {;outputs_MC50.c: 398:         ts_system.ts_TRIACWait--;
 36599  005742  07A5               	decf	(_ts_system+6)& (0+255),f,b	;volatile
 36600  005744  A0D8               	btfss	status,0,c
 36601  005746  07A6               	decf	(_ts_system+7)& (0+255),f,b	;volatile
 36602                           
 36603                           ;outputs_MC50.c: 399:     }
 36604  005748  0012               	return	
 36605  00574A                     i2l14945:
 36606  00574A  0100               	movlb	0	; () banked
 36607  00574C  5183               	movf	_stateMotor& (0+255),w,b
 36608  00574E  A4D8               	btfss	status,2,c
 36609  005750  0012               	return	
 36610                           
 36611                           ; BSR set to: 0
 36612  005752  0101               	movlb	1	; () banked
 36613  005754  AFA6               	btfss	(_ts_system+7)& (0+255),7,b	;volatile
 36614  005756  0012               	return	
 36615                           
 36616                           ; BSR set to: 1
 36617                           ;outputs_MC50.c: 401:     {;outputs_MC50.c: 402:         ts_system.ts_TRIACWait++;
 36618  005758  4BA5               	infsnz	(_ts_system+6)& (0+255),f,b	;volatile
 36619  00575A  2BA6               	incf	(_ts_system+7)& (0+255),f,b	;volatile
 36620  00575C  0012               	return		;funcret
 36621  00575E                     __end_of_controlMotorForce:
 36622                           	callstack 0
 36623                           
 36624 ;; *************** function i2_VerifyElectricalBrake *****************
 36625 ;; Defined at:
 36626 ;;		line 658 in file "outputs_MC50.c"
 36627 ;; Parameters:    Size  Location     Type
 36628 ;;  actualState     1    wreg     enum E10381
 36629 ;; Auto vars:     Size  Location     Type
 36630 ;;  actualState     1    1[COMRAM] enum E10381
 36631 ;;  tempState       1    0[COMRAM] enum E10381
 36632 ;; Return value:  Size  Location     Type
 36633 ;;                  1    wreg      enum E10381
 36634 ;; Registers used:
 36635 ;;		wreg, status,2, status,0
 36636 ;; Tracked objects:
 36637 ;;		On entry : 3F/1
 36638 ;;		On exit  : 3E/0
 36639 ;;		Unchanged: 0/0
 36640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36641 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36642 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36644 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36645 ;;Total ram usage:        2 bytes
 36646 ;; Hardware stack levels used: 1
 36647 ;; This function calls:
 36648 ;;		Nothing
 36649 ;; This function is called by:
 36650 ;;		_controlMotorForce
 36651 ;; This function uses a non-reentrant model
 36652 ;;
 36653                           
 36654                           	psect	text197
 36655  008812                     __ptext197:
 36656                           	callstack 0
 36657  008812                     i2_VerifyElectricalBrake:
 36658                           	callstack 14
 36659                           
 36660                           ;incstack = 0
 36661                           ;i2VerifyElectricalBrake@actualState stored from wreg
 36662  008812  6E02               	movwf	i2VerifyElectricalBrake@actualState^0,c
 36663                           
 36664                           ;outputs_MC50.c: 658: stateMotor_enum VerifyElectricalBrake(stateMotor_enum actualState)
      +                          ;outputs_MC50.c: 659: {;outputs_MC50.c: 660:     stateMotor_enum tempState;;outputs_MC50
      +                          .c: 661:     tempState=actualState;
 36665  008814  C002  F001         	movff	i2VerifyElectricalBrake@actualState,i2VerifyElectricalBrake@tempState
 36666                           
 36667                           ;outputs_MC50.c: 662:     if(var_sys_NVM.electricBrake==1 && actualState==Stopped && ts_
      +                          system.TimeStopElectricBrake<=0)
 36668  008818  0100               	movlb	0	; () banked
 36669  00881A  05AF               	decf	(_var_sys_NVM+23)& (0+255),w,b	;volatile
 36670  00881C  A4D8               	btfss	status,2,c
 36671  00881E  D02E               	goto	i2l2323
 36672                           
 36673                           ; BSR set to: 0
 36674  008820  5002               	movf	i2VerifyElectricalBrake@actualState^0,w,c
 36675  008822  A4D8               	btfss	status,2,c
 36676  008824  D02B               	goto	i2l2323
 36677                           
 36678                           ; BSR set to: 0
 36679  008826  0101               	movlb	1	; () banked
 36680  008828  BFE0               	btfsc	(_ts_system+65)& (0+255),7,b	;volatile
 36681  00882A  D005               	goto	i2u1456_40
 36682  00882C  51E0               	movf	(_ts_system+65)& (0+255),w,b	;volatile
 36683  00882E  E126               	bnz	i2l2323
 36684  008830  05DF               	decf	(_ts_system+64)& (0+255),w,b	;volatile
 36685  008832  B0D8               	btfsc	status,0,c
 36686  008834  D023               	goto	i2l2323
 36687  008836                     i2u1456_40:
 36688                           
 36689                           ; BSR set to: 1
 36690                           ;outputs_MC50.c: 663:     {;outputs_MC50.c: 664:         if(actualState!=brakeElectric_s
      +                          t.lastState && brakeElectric_st.ElectricBrakeIsActive==NO )
 36691  008836  5002               	movf	i2VerifyElectricalBrake@actualState^0,w,c
 36692  008838  0100               	movlb	0	; () banked
 36693  00883A  1978               	xorwf	_brakeElectric_st& (0+255),w,b
 36694  00883C  B4D8               	btfsc	status,2,c
 36695  00883E  D00B               	goto	i2l14563
 36696                           
 36697                           ; BSR set to: 0
 36698  008840  5179               	movf	(_brakeElectric_st+1)& (0+255),w,b
 36699  008842  A4D8               	btfss	status,2,c
 36700  008844  D008               	goto	i2l14563
 36701                           
 36702                           ; BSR set to: 0
 36703                           ;outputs_MC50.c: 665:         {;outputs_MC50.c: 666:             brakeElectric_st.Electr
      +                          icBrakeIsActive=YES;
 36704  008846  0E01               	movlw	1
 36705  008848  6F79               	movwf	(_brakeElectric_st+1)& (0+255),b
 36706                           
 36707                           ;outputs_MC50.c: 668:             ts_system.TimeElectricBrake=((5+6)*( 100/50));
 36708  00884A  0E00               	movlw	0
 36709  00884C  0101               	movlb	1	; () banked
 36710  00884E  6FC8               	movwf	(_ts_system+41)& (0+255),b	;volatile
 36711  008850  0E16               	movlw	22
 36712  008852  6FC7               	movwf	(_ts_system+40)& (0+255),b	;volatile
 36713                           
 36714                           ;outputs_MC50.c: 670:         }
 36715  008854  D018               	goto	i2l2328
 36716  008856                     i2l14563:
 36717                           
 36718                           ; BSR set to: 0
 36719  008856  0579               	decf	(_brakeElectric_st+1)& (0+255),w,b
 36720  008858  A4D8               	btfss	status,2,c
 36721  00885A  D00B               	goto	i2l14569
 36722                           
 36723                           ; BSR set to: 0
 36724  00885C  0101               	movlb	1	; () banked
 36725  00885E  BFC8               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 36726  008860  D008               	goto	i2l14569
 36727  008862  51C8               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 36728  008864  E103               	bnz	i2u1460_40
 36729  008866  05C7               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 36730  008868  A0D8               	btfss	status,0,c
 36731  00886A  D003               	goto	i2l14569
 36732  00886C                     i2u1460_40:
 36733                           
 36734                           ; BSR set to: 1
 36735                           ;outputs_MC50.c: 672:         {;outputs_MC50.c: 673:             tempState=InOpenFull;
 36736  00886C  0E01               	movlw	1
 36737  00886E  6E01               	movwf	i2VerifyElectricalBrake@tempState^0,c
 36738                           
 36739                           ;outputs_MC50.c: 686:         }
 36740  008870  D00A               	goto	i2l2328
 36741  008872                     i2l14569:
 36742                           
 36743                           ;outputs_MC50.c: 688:         {;outputs_MC50.c: 689:             brakeElectric_st.lastSt
      +                          ate=Stopped;
 36744  008872  0E00               	movlw	0
 36745  008874  0100               	movlb	0	; () banked
 36746  008876  6F78               	movwf	_brakeElectric_st& (0+255),b
 36747                           
 36748                           ;outputs_MC50.c: 690:             brakeElectric_st.ElectricBrakeIsActive=NO;
 36749  008878  0E00               	movlw	0
 36750  00887A  D004               	goto	L119
 36751  00887C                     i2l2323:
 36752                           
 36753                           ;outputs_MC50.c: 695:     {;outputs_MC50.c: 696:         brakeElectric_st.lastState=actu
      +                          alState;
 36754  00887C  C002  F078         	movff	i2VerifyElectricalBrake@actualState,_brakeElectric_st
 36755                           
 36756                           ;outputs_MC50.c: 697:         brakeElectric_st.ElectricBrakeIsActive=NO;
 36757  008880  0E00               	movlw	0
 36758  008882  0100               	movlb	0	; () banked
 36759  008884                     L119:
 36760  008884  6F79               	movwf	(_brakeElectric_st+1)& (0+255),b
 36761  008886                     i2l2328:
 36762                           
 36763                           ;outputs_MC50.c: 700:     return tempState;
 36764  008886  5001               	movf	i2VerifyElectricalBrake@tempState^0,w,c
 36765  008888  0012               	return		;funcret
 36766  00888A                     __end_ofi2_VerifyElectricalBrake:
 36767                           	callstack 0
 36768                           
 36769 ;; *************** function i2_GetMotorPower *****************
 36770 ;; Defined at:
 36771 ;;		line 405 in file "outputs_MC50.c"
 36772 ;; Parameters:    Size  Location     Type
 36773 ;;		None
 36774 ;; Auto vars:     Size  Location     Type
 36775 ;;  defineatraso    1    3[COMRAM] unsigned char 
 36776 ;; Return value:  Size  Location     Type
 36777 ;;                  1    wreg      unsigned char 
 36778 ;; Registers used:
 36779 ;;		wreg, status,2, status,0, prodl, prodh
 36780 ;; Tracked objects:
 36781 ;;		On entry : 3F/E
 36782 ;;		On exit  : 3F/1
 36783 ;;		Unchanged: 0/0
 36784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36785 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36786 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36787 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36788 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36789 ;;Total ram usage:        4 bytes
 36790 ;; Hardware stack levels used: 1
 36791 ;; This function calls:
 36792 ;;		Nothing
 36793 ;; This function is called by:
 36794 ;;		_controlMotorForce
 36795 ;; This function uses a non-reentrant model
 36796 ;;
 36797                           
 36798                           	psect	text198
 36799  007AF6                     __ptext198:
 36800                           	callstack 0
 36801  007AF6                     i2_GetMotorPower:
 36802                           	callstack 14
 36803                           
 36804                           ; BSR set to: 14
 36805                           ;outputs_MC50.c: 408:     unsigned char defineatraso;;outputs_MC50.c: 413:     if(powerC
      +                          ontrol_st.decelarationActive==YES)
 36806                           
 36807                           ;incstack = 0
 36808  007AF6  0101               	movlb	1	; () banked
 36809  007AF8  057B               	decf	_powerControl_st& (0+255),w,b
 36810  007AFA  A4D8               	btfss	status,2,c
 36811  007AFC  D006               	goto	i2l14513
 36812                           
 36813                           ; BSR set to: 1
 36814                           ;outputs_MC50.c: 414:     {;outputs_MC50.c: 415:        temppower=(var_sys_NVM.motorPowe
      +                          r*6);
 36815  007AFE  0100               	movlb	0	; () banked
 36816  007B00  519A               	movf	(_var_sys_NVM+2)& (0+255),w,b	;volatile
 36817  007B02  0D06               	mullw	6
 36818  007B04  CFF3 F193          	movff	prodl,_temppower
 36819                           
 36820                           ;outputs_MC50.c: 416:     }
 36821  007B08  D043               	goto	i2l2240
 36822  007B0A                     i2l14513:
 36823                           
 36824                           ; BSR set to: 1
 36825                           ;outputs_MC50.c: 418:     {;outputs_MC50.c: 419:         fullmotorPower=(var_sys_NVM.mot
      +                          orPower*6);
 36826  007B0A  0100               	movlb	0	; () banked
 36827  007B0C  519A               	movf	(_var_sys_NVM+2)& (0+255),w,b	;volatile
 36828  007B0E  0D06               	mullw	6
 36829  007B10  CFF3 F082          	movff	prodl,_fullmotorPower
 36830                           
 36831                           ; BSR set to: 0
 36832                           ;outputs_MC50.c: 421:         if(var_sys.velocityFactor>0)
 36833  007B14  0101               	movlb	1	; () banked
 36834  007B16  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 36835  007B18  D01C               	goto	i2l14523
 36836  007B1A  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 36837  007B1C  E103               	bnz	i2u1446_40
 36838  007B1E  050E               	decf	(_var_sys+14)& (0+255),w,b	;volatile
 36839  007B20  A0D8               	btfss	status,0,c
 36840  007B22  D017               	goto	i2l14523
 36841  007B24                     i2u1446_40:
 36842                           
 36843                           ; BSR set to: 1
 36844                           ;outputs_MC50.c: 422:         {;outputs_MC50.c: 423:             if(var_sys.velocityFact
      +                          or>fullmotorPower)
 36845  007B24  0100               	movlb	0	; () banked
 36846  007B26  5182               	movf	_fullmotorPower& (0+255),w,b
 36847  007B28  6E01               	movwf	??i2_GetMotorPower^0,c
 36848  007B2A  6A02               	clrf	(??i2_GetMotorPower+1)^0,c
 36849  007B2C  0101               	movlb	1	; () banked
 36850  007B2E  510E               	movf	(_var_sys+14)& (0+255),w,b	;volatile
 36851  007B30  5C01               	subwf	??i2_GetMotorPower^0,w,c
 36852  007B32  5002               	movf	(??i2_GetMotorPower+1)^0,w,c
 36853  007B34  0A80               	xorlw	128
 36854  007B36  6E03               	movwf	(??i2_GetMotorPower+2)^0,c
 36855  007B38  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 36856  007B3A  0A80               	xorlw	128
 36857  007B3C  5803               	subwfb	(??i2_GetMotorPower+2)^0,w,c
 36858  007B3E  B0D8               	btfsc	status,0,c
 36859  007B40  D002               	goto	i2l14521
 36860                           
 36861                           ; BSR set to: 1
 36862                           ;outputs_MC50.c: 424:             {;outputs_MC50.c: 425:                 temppower=1;
 36863  007B42  0E01               	movlw	1
 36864  007B44  D004               	goto	L121
 36865  007B46                     i2l14521:
 36866                           
 36867                           ; BSR set to: 1
 36868                           ;outputs_MC50.c: 428:             {;outputs_MC50.c: 430:                 temppower =full
      +                          motorPower-var_sys.velocityFactor;
 36869  007B46  510E               	movf	(_var_sys+14)& (0+255),w,b	;volatile
 36870  007B48  0100               	movlb	0	; () banked
 36871  007B4A  5D82               	subwf	_fullmotorPower& (0+255),w,b
 36872  007B4C  D017               	goto	L122
 36873  007B4E                     L121:
 36874  007B4E  6F93               	movwf	_temppower& (0+255),b
 36875  007B50  D01F               	goto	i2l2240
 36876  007B52                     i2l14523:
 36877                           
 36878                           ; BSR set to: 1
 36879  007B52  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 36880  007B54  D005               	goto	i2u1448_40
 36881  007B56  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 36882  007B58  E113               	bnz	i2l14533
 36883  007B5A  050E               	decf	(_var_sys+14)& (0+255),w,b	;volatile
 36884  007B5C  B0D8               	btfsc	status,0,c
 36885  007B5E  D010               	goto	i2l14533
 36886  007B60                     i2u1448_40:
 36887                           
 36888                           ; BSR set to: 1
 36889  007B60  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 36890  007B62  D005               	goto	i2u1449_40
 36891  007B64  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 36892  007B66  E10C               	bnz	i2l14533
 36893  007B68  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 36894  007B6A  B0D8               	btfsc	status,0,c
 36895  007B6C  D009               	goto	i2l14533
 36896  007B6E                     i2u1449_40:
 36897                           
 36898                           ; BSR set to: 1
 36899                           ;outputs_MC50.c: 434:         {;outputs_MC50.c: 435:             temppower =fullmotorPow
      +                          er;
 36900  007B6E  C082  F193         	movff	_fullmotorPower,_temppower
 36901                           
 36902                           ; BSR set to: 1
 36903                           ;outputs_MC50.c: 438:             if ( var_sys_NVM.motorPower>8 )
 36904  007B72  0E08               	movlw	8
 36905  007B74  0100               	movlb	0	; () banked
 36906  007B76  659A               	cpfsgt	(_var_sys_NVM+2)& (0+255),b	;volatile
 36907  007B78  D00B               	goto	i2l2240
 36908                           
 36909                           ; BSR set to: 0
 36910                           ;outputs_MC50.c: 439:             {;outputs_MC50.c: 440:                 temppower = 80 
      +                          -23 +1;
 36911  007B7A  0E3A               	movlw	58
 36912  007B7C                     L122:
 36913  007B7C  0101               	movlb	1	; () banked
 36914  007B7E  D7E7               	goto	L121
 36915  007B80                     i2l14533:
 36916                           
 36917                           ; BSR set to: 1
 36918  007B80  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 36919  007B82  D006               	goto	i2l2240
 36920  007B84  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 36921  007B86  E102               	bnz	i2u1451_40
 36922  007B88  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 36923  007B8A  B0D8               	btfsc	status,0,c
 36924  007B8C                     i2u1451_40:
 36925                           
 36926                           ; BSR set to: 1
 36927                           ;outputs_MC50.c: 447:                 temppower = var_sys.velocityFactorstop;
 36928  007B8C  C110  F193         	movff	_var_sys+16,_temppower	;volatile
 36929  007B90                     i2l2240:
 36930                           
 36931                           ;outputs_MC50.c: 451:     if ((var_sys.velocityFactorstop > 0)&&(var_sys.velocityFactor 
      +                          <= 0 )){
 36932  007B90  0101               	movlb	1	; () banked
 36933  007B92  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 36934  007B94  D00E               	goto	i2l14543
 36935  007B96  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 36936  007B98  E103               	bnz	i2u1452_40
 36937  007B9A  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 36938  007B9C  A0D8               	btfss	status,0,c
 36939  007B9E  D009               	goto	i2l14543
 36940  007BA0                     i2u1452_40:
 36941                           
 36942                           ; BSR set to: 1
 36943  007BA0  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 36944  007BA2  D005               	goto	i2u1453_40
 36945  007BA4  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 36946  007BA6  E105               	bnz	i2l14543
 36947  007BA8  050E               	decf	(_var_sys+14)& (0+255),w,b	;volatile
 36948  007BAA  B0D8               	btfsc	status,0,c
 36949  007BAC  D002               	goto	i2l14543
 36950  007BAE                     i2u1453_40:
 36951                           
 36952                           ; BSR set to: 1
 36953                           ;outputs_MC50.c: 452:     defineatraso = 5;
 36954  007BAE  0E05               	movlw	5
 36955  007BB0  D001               	goto	L120
 36956  007BB2                     i2l14543:
 36957                           
 36958                           ; BSR set to: 1
 36959                           ;outputs_MC50.c: 455:     {;outputs_MC50.c: 456:     defineatraso = 23;
 36960  007BB2  0E17               	movlw	23
 36961  007BB4                     L120:
 36962  007BB4  6E04               	movwf	i2GetMotorPower@defineatraso^0,c
 36963                           
 36964                           ; BSR set to: 1
 36965                           ;outputs_MC50.c: 459:     return temppower+defineatraso;
 36966  007BB6  5193               	movf	_temppower& (0+255),w,b
 36967  007BB8  2404               	addwf	i2GetMotorPower@defineatraso^0,w,c
 36968                           
 36969                           ; BSR set to: 1
 36970  007BBA  0012               	return		;funcret
 36971  007BBC                     __end_ofi2_GetMotorPower:
 36972                           	callstack 0
 36973                           
 36974 ;; *************** function _TMR1_WriteTimer *****************
 36975 ;; Defined at:
 36976 ;;		line 129 in file "mcc_generated_files/tmr1.c"
 36977 ;; Parameters:    Size  Location     Type
 36978 ;;  timerVal        2    0[COMRAM] unsigned short 
 36979 ;; Auto vars:     Size  Location     Type
 36980 ;;		None
 36981 ;; Return value:  Size  Location     Type
 36982 ;;                  1    wreg      void 
 36983 ;; Registers used:
 36984 ;;		None
 36985 ;; Tracked objects:
 36986 ;;		On entry : 3F/1
 36987 ;;		On exit  : 3F/1
 36988 ;;		Unchanged: 3F/0
 36989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36990 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36991 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36993 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36994 ;;Total ram usage:        2 bytes
 36995 ;; Hardware stack levels used: 1
 36996 ;; This function calls:
 36997 ;;		Nothing
 36998 ;; This function is called by:
 36999 ;;		_TMR1_ISR
 37000 ;; This function uses a non-reentrant model
 37001 ;;
 37002                           
 37003                           	psect	text199
 37004  009B60                     __ptext199:
 37005                           	callstack 0
 37006  009B60                     _TMR1_WriteTimer:
 37007                           	callstack 15
 37008                           
 37009                           ; BSR set to: 1
 37010                           ;mcc_generated_files/tmr1.c: 129: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 130: {;mcc_generated_files/tmr1.c: 131:     if (T1CONbits.nT1SYNC == 1)
 37011                           
 37012                           ; BSR set to: 1
 37013                           ;incstack = 0
 37014  009B60  A4CF               	btfss	207,2,c	;volatile
 37015  009B62  D007               	goto	i2l1147
 37016                           
 37017                           ; BSR set to: 1
 37018                           ;mcc_generated_files/tmr1.c: 132:     {;mcc_generated_files/tmr1.c: 134:         T1CONbi
      +                          ts.TMR1ON = 0;
 37019  009B64  90CF               	bcf	207,0,c	;volatile
 37020                           
 37021                           ;mcc_generated_files/tmr1.c: 137:         TMR1H = (uint8_t)(timerVal >> 8);
 37022  009B66  C002  FFCE         	movff	TMR1_WriteTimer@timerVal+1,4046	;volatile
 37023                           
 37024                           ;mcc_generated_files/tmr1.c: 138:         TMR1L = (uint8_t)timerVal;
 37025  009B6A  C001  FFCD         	movff	TMR1_WriteTimer@timerVal,4045	;volatile
 37026                           
 37027                           ;mcc_generated_files/tmr1.c: 141:         T1CONbits.TMR1ON =1;
 37028  009B6E  80CF               	bsf	207,0,c	;volatile
 37029                           
 37030                           ;mcc_generated_files/tmr1.c: 142:     }
 37031  009B70  0012               	return	
 37032  009B72                     i2l1147:
 37033                           
 37034                           ; BSR set to: 1
 37035                           ;mcc_generated_files/tmr1.c: 144:     {;mcc_generated_files/tmr1.c: 146:         TMR1H =
      +                           (uint8_t)(timerVal >> 8);
 37036  009B72  C002  FFCE         	movff	TMR1_WriteTimer@timerVal+1,4046	;volatile
 37037                           
 37038                           ;mcc_generated_files/tmr1.c: 147:         TMR1L = (uint8_t)timerVal;
 37039  009B76  C001  FFCD         	movff	TMR1_WriteTimer@timerVal,4045	;volatile
 37040                           
 37041                           ; BSR set to: 1
 37042  009B7A  0012               	return		;funcret
 37043  009B7C                     __end_of_TMR1_WriteTimer:
 37044                           	callstack 0
 37045                           
 37046 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 37047 ;; Defined at:
 37048 ;;		line 196 in file "mcc_generated_files/tmr1.c"
 37049 ;; Parameters:    Size  Location     Type
 37050 ;;		None
 37051 ;; Auto vars:     Size  Location     Type
 37052 ;;		None
 37053 ;; Return value:  Size  Location     Type
 37054 ;;                  1    wreg      void 
 37055 ;; Registers used:
 37056 ;;		None
 37057 ;; Tracked objects:
 37058 ;;		On entry : 3F/2
 37059 ;;		On exit  : 3F/2
 37060 ;;		Unchanged: 3F/0
 37061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37062 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37063 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37065 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37066 ;;Total ram usage:        0 bytes
 37067 ;; Hardware stack levels used: 1
 37068 ;; This function calls:
 37069 ;;		Nothing
 37070 ;; This function is called by:
 37071 ;;		_TMR1_Initialize
 37072 ;;		_TMR1_ISR
 37073 ;; This function uses a non-reentrant model
 37074 ;;
 37075                           
 37076                           	psect	text200
 37077  009E96                     __ptext200:
 37078                           	callstack 0
 37079  009E96                     _TMR1_DefaultInterruptHandler:
 37080                           	callstack 15
 37081                           
 37082                           ; BSR set to: 2
 37083                           
 37084                           ; BSR set to: 1
 37085                           ;incstack = 0
 37086  009E96  0012               	return		;funcret
 37087  009E98                     __end_of_TMR1_DefaultInterruptHandler:
 37088                           	callstack 0
 37089                           
 37090 ;; *************** function _TMR0_ISR *****************
 37091 ;; Defined at:
 37092 ;;		line 127 in file "mcc_generated_files/tmr0.c"
 37093 ;; Parameters:    Size  Location     Type
 37094 ;;		None
 37095 ;; Auto vars:     Size  Location     Type
 37096 ;;		None
 37097 ;; Return value:  Size  Location     Type
 37098 ;;                  1    wreg      void 
 37099 ;; Registers used:
 37100 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 37101 ;; Tracked objects:
 37102 ;;		On entry : 3F/E
 37103 ;;		On exit  : 0/0
 37104 ;;		Unchanged: 0/0
 37105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37106 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37107 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37109 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37110 ;;Total ram usage:        0 bytes
 37111 ;; Hardware stack levels used: 1
 37112 ;; Hardware stack levels required when called: 1
 37113 ;; This function calls:
 37114 ;;		Absolute function
 37115 ;;		_TMR0_DefaultInterruptHandler
 37116 ;;		_rxi
 37117 ;; This function is called by:
 37118 ;;		_INTERRUPT_InterruptManager
 37119 ;; This function uses a non-reentrant model
 37120 ;;
 37121                           
 37122                           	psect	text201
 37123  009A14                     __ptext201:
 37124                           	callstack 0
 37125  009A14                     _TMR0_ISR:
 37126                           	callstack 15
 37127                           
 37128                           ; BSR set to: 14
 37129                           ;mcc_generated_files/tmr0.c: 130:     PIR0bits.TMR0IF = 0;
 37130                           
 37131                           ; BSR set to: 2
 37132                           ;incstack = 0
 37133  009A14  9BCA               	bcf	202,5,b	;volatile
 37134                           
 37135                           ; BSR set to: 14
 37136                           ;mcc_generated_files/tmr0.c: 132:     rxi();
 37137  009A16  EC14  F027         	call	_rxi	;wreg free
 37138                           
 37139                           ;mcc_generated_files/tmr0.c: 134:     if(TMR0_InterruptHandler)
 37140  009A1A  0102               	movlb	2	; () banked
 37141  009A1C  51E1               	movf	_TMR0_InterruptHandler& (0+255),w,b
 37142  009A1E  11E2               	iorwf	(_TMR0_InterruptHandler+1)& (0+255),w,b
 37143  009A20  B4D8               	btfsc	status,2,c
 37144  009A22  0012               	return	
 37145                           
 37146                           ; BSR set to: 2
 37147                           ;mcc_generated_files/tmr0.c: 135:     {;mcc_generated_files/tmr0.c: 136:         TMR0_In
      +                          terruptHandler();
 37148  009A24  D801               	call	i2u1904_48
 37149  009A26  0012               	return	
 37150  009A28                     i2u1904_48:
 37151  009A28  0005               	push	
 37152  009A2A  6EFA               	movwf	pclath,c
 37153  009A2C  51E1               	movf	_TMR0_InterruptHandler& (0+255),w,b
 37154  009A2E  6EFD               	movwf	tosl,c
 37155  009A30  51E2               	movf	(_TMR0_InterruptHandler+1)& (0+255),w,b
 37156  009A32  6EFE               	movwf	tosh,c
 37157  009A34  6AFF               	clrf	tosu,c
 37158  009A36  50FA               	movf	pclath,w,c
 37159  009A38  0012               	return		;indir
 37160  009A3A                     __end_of_TMR0_ISR:
 37161                           	callstack 0
 37162                           
 37163 ;; *************** function _rxi *****************
 37164 ;; Defined at:
 37165 ;;		line 41 in file "inputs_MC50.c"
 37166 ;; Parameters:    Size  Location     Type
 37167 ;;		None
 37168 ;; Auto vars:     Size  Location     Type
 37169 ;;		None
 37170 ;; Return value:  Size  Location     Type
 37171 ;;                  1    wreg      void 
 37172 ;; Registers used:
 37173 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 37174 ;; Tracked objects:
 37175 ;;		On entry : 3F/E
 37176 ;;		On exit  : 3C/0
 37177 ;;		Unchanged: 0/0
 37178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37179 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37180 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37181 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37182 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37183 ;;Total ram usage:        2 bytes
 37184 ;; Hardware stack levels used: 1
 37185 ;; This function calls:
 37186 ;;		Nothing
 37187 ;; This function is called by:
 37188 ;;		_TMR0_ISR
 37189 ;; This function uses a non-reentrant model
 37190 ;;
 37191                           
 37192                           	psect	text202
 37193  004E28                     __ptext202:
 37194                           	callstack 0
 37195  004E28                     _rxi:
 37196                           	callstack 15
 37197                           
 37198                           ; BSR set to: 14
 37199                           ;inputs_MC50.c: 43:     RFBit = PORTBbits.RB3;
 37200                           
 37201                           ;incstack = 0
 37202  004E28  0E00               	movlw	0
 37203  004E2A  B68E               	btfsc	142,3,c	;volatile
 37204  004E2C  0E01               	movlw	1
 37205  004E2E  0100               	movlb	0	; () banked
 37206  004E30  6F89               	movwf	_RFBit& (0+255),b	;volatile
 37207                           
 37208                           ; BSR set to: 0
 37209                           ;inputs_MC50.c: 47:     if (RFFull)
 37210  004E32  518B               	movf	_RFFull& (0+255),w,b	;volatile
 37211  004E34  A4D8               	btfss	status,2,c
 37212  004E36  0012               	return	
 37213  004E38  D116               	goto	i2l14827
 37214  004E3A                     i2l14717:
 37215                           
 37216                           ; BSR set to: 1
 37217                           ;inputs_MC50.c: 53:             if (RFBit == 0) {
 37218  004E3A  0100               	movlb	0	; () banked
 37219  004E3C  5189               	movf	_RFBit& (0+255),w,b	;volatile
 37220  004E3E  A4D8               	btfss	status,2,c
 37221  004E40  D004               	goto	i2l14721
 37222                           
 37223                           ; BSR set to: 0
 37224                           ;inputs_MC50.c: 56:                 RFstate = 3;
 37225  004E42  0E03               	movlw	3
 37226  004E44  0101               	movlb	1	; () banked
 37227  004E46  6F9D               	movwf	_RFstate& (0+255),b
 37228                           
 37229                           ;inputs_MC50.c: 57:             } else {
 37230  004E48  0012               	return	
 37231  004E4A                     i2l14721:
 37232                           
 37233                           ; BSR set to: 0
 37234                           ;inputs_MC50.c: 58:                 RFcount--;
 37235  004E4A  077E               	decf	_RFcount& (0+255),f,b
 37236  004E4C  A0D8               	btfss	status,0,c
 37237  004E4E  077F               	decf	(_RFcount+1)& (0+255),f,b
 37238                           
 37239                           ; BSR set to: 0
 37240                           ;inputs_MC50.c: 59:                 if (RFcount < -10)
 37241  004E50  AF7F               	btfss	(_RFcount+1)& (0+255),7,b
 37242  004E52  0012               	return	
 37243  004E54  0EF6               	movlw	246
 37244  004E56  5D7E               	subwf	_RFcount& (0+255),w,b
 37245  004E58  0EFF               	movlw	255
 37246  004E5A  597F               	subwfb	(_RFcount+1)& (0+255),w,b
 37247  004E5C  B0D8               	btfsc	status,0,c
 37248  004E5E  0012               	return	
 37249  004E60                     i2u1467_40:
 37250  004E60                     i2l14725:
 37251                           
 37252                           ; BSR set to: 0
 37253                           ;inputs_MC50.c: 60:                 {;inputs_MC50.c: 62:                     RFstate = 0
      +                          ;
 37254  004E60  0E00               	movlw	0
 37255  004E62  0101               	movlb	1	; () banked
 37256  004E64  6F9D               	movwf	_RFstate& (0+255),b
 37257  004E66  0012               	return	
 37258  004E68                     i2l14727:
 37259                           
 37260                           ; BSR set to: 1
 37261                           ;inputs_MC50.c: 67:             if (RFBit) {
 37262  004E68  0100               	movlb	0	; () banked
 37263  004E6A  5189               	movf	_RFBit& (0+255),w,b	;volatile
 37264  004E6C  B4D8               	btfsc	status,2,c
 37265  004E6E  D02C               	goto	i2l14747
 37266                           
 37267                           ; BSR set to: 0
 37268                           ;inputs_MC50.c: 71:                 RFstate = 2;
 37269  004E70  0E02               	movlw	2
 37270  004E72  0101               	movlb	1	; () banked
 37271  004E74  6F9D               	movwf	_RFstate& (0+255),b
 37272                           
 37273                           ; BSR set to: 1
 37274                           ;inputs_MC50.c: 72:                 BufferRF[Bptr] >>= 1;
 37275  004E76  0EC6               	movlw	low _BufferRF
 37276  004E78  0100               	movlb	0	; () banked
 37277  004E7A  258D               	addwf	_Bptr& (0+255),w,b
 37278  004E7C  6ED9               	movwf	fsr2l,c
 37279  004E7E  6ADA               	clrf	fsr2h,c
 37280  004E80  0E02               	movlw	high _BufferRF
 37281  004E82  22DA               	addwfc	fsr2h,f,c
 37282  004E84  90D8               	bcf	status,0,c
 37283  004E86  32DF               	rrcf	indf2,f,c
 37284                           
 37285                           ; BSR set to: 0
 37286                           ;inputs_MC50.c: 73:                 if (RFcount >= 0) {
 37287  004E88  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 37288  004E8A  D008               	goto	i2l14737
 37289                           
 37290                           ; BSR set to: 0
 37291                           ;inputs_MC50.c: 74:                     BufferRF[Bptr] += 0x80;
 37292  004E8C  0EC6               	movlw	low _BufferRF
 37293  004E8E  258D               	addwf	_Bptr& (0+255),w,b
 37294  004E90  6ED9               	movwf	fsr2l,c
 37295  004E92  6ADA               	clrf	fsr2h,c
 37296  004E94  0E02               	movlw	high _BufferRF
 37297  004E96  22DA               	addwfc	fsr2h,f,c
 37298  004E98  0E80               	movlw	128
 37299  004E9A  26DF               	addwf	indf2,f,c
 37300  004E9C                     i2l14737:
 37301                           
 37302                           ; BSR set to: 0
 37303                           ;inputs_MC50.c: 81:                 RFcount = 0;
 37304  004E9C  0E00               	movlw	0
 37305  004E9E  6F7F               	movwf	(_RFcount+1)& (0+255),b
 37306  004EA0  0E00               	movlw	0
 37307  004EA2  6F7E               	movwf	_RFcount& (0+255),b
 37308                           
 37309                           ; BSR set to: 0
 37310                           ;inputs_MC50.c: 83:                 if ((++BitCount & 7) == 0)
 37311  004EA4  2B8C               	incf	_BitCount& (0+255),f,b
 37312  004EA6  C08C  F001         	movff	_BitCount,??_rxi
 37313  004EAA  0E07               	movlw	7
 37314  004EAC  1601               	andwf	??_rxi^0,f,c
 37315  004EAE  B4D8               	btfsc	status,2,c
 37316                           
 37317                           ; BSR set to: 0
 37318                           ;inputs_MC50.c: 84:                     Bptr++;
 37319  004EB0  2B8D               	incf	_Bptr& (0+255),f,b
 37320                           
 37321                           ; BSR set to: 0
 37322                           ;inputs_MC50.c: 85:                 if (BitCount == 65) {
 37323  004EB2  0E41               	movlw	65
 37324  004EB4  198C               	xorwf	_BitCount& (0+255),w,b
 37325  004EB6  A4D8               	btfss	status,2,c
 37326  004EB8  0012               	return	
 37327                           
 37328                           ; BSR set to: 0
 37329                           ;inputs_MC50.c: 86:                     RFstate = 0;
 37330  004EBA  0E00               	movlw	0
 37331  004EBC  0101               	movlb	1	; () banked
 37332  004EBE  6F9D               	movwf	_RFstate& (0+255),b
 37333                           
 37334                           ;inputs_MC50.c: 87:                     RFFull = 1;
 37335  004EC0  0E01               	movlw	1
 37336  004EC2  0100               	movlb	0	; () banked
 37337  004EC4  6F8B               	movwf	_RFFull& (0+255),b	;volatile
 37338  004EC6  0012               	return	
 37339  004EC8                     i2l14747:
 37340                           
 37341                           ; BSR set to: 0
 37342                           ;inputs_MC50.c: 92:                 RFcount++;
 37343  004EC8  4B7E               	infsnz	_RFcount& (0+255),f,b
 37344  004ECA  2B7F               	incf	(_RFcount+1)& (0+255),f,b
 37345                           
 37346                           ; BSR set to: 0
 37347                           ;inputs_MC50.c: 93:                 if (RFcount >= 10)
 37348  004ECC  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 37349  004ECE  0012               	return	
 37350  004ED0  517F               	movf	(_RFcount+1)& (0+255),w,b
 37351  004ED2  E104               	bnz	i2u1472_40
 37352  004ED4  0E0A               	movlw	10
 37353  004ED6  5D7E               	subwf	_RFcount& (0+255),w,b
 37354  004ED8  A0D8               	btfss	status,0,c
 37355  004EDA  0012               	return	
 37356  004EDC                     i2u1472_40:
 37357                           
 37358                           ; BSR set to: 0
 37359                           ;inputs_MC50.c: 94:                 {;inputs_MC50.c: 96:                     RFstate = 1
      +                          ;
 37360  004EDC  0E01               	movlw	1
 37361  004EDE  0101               	movlb	1	; () banked
 37362  004EE0  6F9D               	movwf	_RFstate& (0+255),b
 37363                           
 37364                           ;inputs_MC50.c: 97:                     Bptr = 0;
 37365  004EE2  0E00               	movlw	0
 37366  004EE4  0100               	movlb	0	; () banked
 37367  004EE6  6F8D               	movwf	_Bptr& (0+255),b
 37368                           
 37369                           ;inputs_MC50.c: 98:                     BitCount = 0;
 37370  004EE8  0E00               	movlw	0
 37371  004EEA  6F8C               	movwf	_BitCount& (0+255),b
 37372  004EEC  0012               	return	
 37373  004EEE                     i2l14753:
 37374                           
 37375                           ; BSR set to: 1
 37376                           ;inputs_MC50.c: 103:             if (RFBit) {
 37377  004EEE  0100               	movlb	0	; () banked
 37378  004EF0  5189               	movf	_RFBit& (0+255),w,b	;volatile
 37379  004EF2  B4D8               	btfsc	status,2,c
 37380  004EF4  D030               	goto	i2l14769
 37381                           
 37382                           ; BSR set to: 0
 37383                           ;inputs_MC50.c: 106:                 if ((RFcount < 20) || (RFcount >= 45)) {
 37384  004EF6  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 37385  004EF8  D00E               	goto	i2u1475_40
 37386  004EFA  517F               	movf	(_RFcount+1)& (0+255),w,b
 37387  004EFC  E104               	bnz	i2u1474_40
 37388  004EFE  0E14               	movlw	20
 37389  004F00  5D7E               	subwf	_RFcount& (0+255),w,b
 37390  004F02  A0D8               	btfss	status,0,c
 37391  004F04  D008               	goto	i2u1475_40
 37392  004F06                     i2u1474_40:
 37393                           
 37394                           ; BSR set to: 0
 37395  004F06  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 37396  004F08  D01E               	goto	i2l14767
 37397  004F0A  517F               	movf	(_RFcount+1)& (0+255),w,b
 37398  004F0C  E104               	bnz	i2u1475_40
 37399  004F0E  0E2D               	movlw	45
 37400  004F10  5D7E               	subwf	_RFcount& (0+255),w,b
 37401  004F12  A0D8               	btfss	status,0,c
 37402  004F14  D018               	goto	i2l14767
 37403  004F16                     i2u1475_40:
 37404                           
 37405                           ; BSR set to: 0
 37406                           ;inputs_MC50.c: 107:                     if((RFcount < 80) || RFcount>=100)
 37407  004F16  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 37408  004F18  D7A3               	goto	i2u1467_40
 37409  004F1A  517F               	movf	(_RFcount+1)& (0+255),w,b
 37410  004F1C  E104               	bnz	i2u1476_40
 37411  004F1E  0E50               	movlw	80
 37412  004F20  5D7E               	subwf	_RFcount& (0+255),w,b
 37413  004F22  A0D8               	btfss	status,0,c
 37414  004F24  D79D               	goto	i2u1467_40
 37415  004F26                     i2u1476_40:
 37416                           
 37417                           ; BSR set to: 0
 37418  004F26  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 37419  004F28  D006               	goto	i2l14765
 37420  004F2A  517F               	movf	(_RFcount+1)& (0+255),w,b
 37421  004F2C  E199               	bnz	i2l14725
 37422  004F2E  0E64               	movlw	100
 37423  004F30  5D7E               	subwf	_RFcount& (0+255),w,b
 37424  004F32  B0D8               	btfsc	status,0,c
 37425  004F34  D795               	goto	i2u1467_40
 37426  004F36                     i2l14765:
 37427                           
 37428                           ; BSR set to: 0
 37429                           ;inputs_MC50.c: 112:                     {;inputs_MC50.c: 113:                         R
      +                          Fcount = -10;
 37430  004F36  0EFF               	movlw	255
 37431  004F38  6F7F               	movwf	(_RFcount+1)& (0+255),b
 37432  004F3A  0EF6               	movlw	246
 37433  004F3C  6F7E               	movwf	_RFcount& (0+255),b
 37434                           
 37435                           ;inputs_MC50.c: 114:                         RFstate = 4;
 37436  004F3E  0E04               	movlw	4
 37437  004F40  0101               	movlb	1	; () banked
 37438  004F42  6F9D               	movwf	_RFstate& (0+255),b
 37439  004F44  0012               	return	
 37440  004F46                     i2l14767:
 37441                           
 37442                           ; BSR set to: 0
 37443                           ;inputs_MC50.c: 118:                     RFcount = 0;
 37444  004F46  0E00               	movlw	0
 37445  004F48  6F7F               	movwf	(_RFcount+1)& (0+255),b
 37446  004F4A  0E00               	movlw	0
 37447  004F4C  6F7E               	movwf	_RFcount& (0+255),b
 37448                           
 37449                           ;inputs_MC50.c: 119:                     RFstate = 2;
 37450  004F4E  0E02               	movlw	2
 37451  004F50  0101               	movlb	1	; () banked
 37452  004F52  6F9D               	movwf	_RFstate& (0+255),b
 37453  004F54  0012               	return	
 37454  004F56                     i2l14769:
 37455                           
 37456                           ; BSR set to: 0
 37457                           ;inputs_MC50.c: 122:                 RFcount++;
 37458  004F56  4B7E               	infsnz	_RFcount& (0+255),f,b
 37459  004F58  2B7F               	incf	(_RFcount+1)& (0+255),f,b
 37460  004F5A  0012               	return	
 37461  004F5C                     i2l14771:
 37462                           
 37463                           ; BSR set to: 1
 37464                           ;inputs_MC50.c: 127:             if (RFBit == 0) {
 37465  004F5C  0100               	movlb	0	; () banked
 37466  004F5E  5189               	movf	_RFBit& (0+255),w,b	;volatile
 37467  004F60  A4D8               	btfss	status,2,c
 37468  004F62  D056               	goto	i2l14807
 37469                           
 37470                           ; BSR set to: 0
 37471                           ;inputs_MC50.c: 130:                 RFstate = 5;
 37472  004F64  0E05               	movlw	5
 37473  004F66  0101               	movlb	1	; () banked
 37474  004F68  6F9D               	movwf	_RFstate& (0+255),b
 37475                           
 37476                           ; BSR set to: 1
 37477                           ;inputs_MC50.c: 131:                 BufferRF[Bptr] >>= 1;
 37478  004F6A  0EC6               	movlw	low _BufferRF
 37479  004F6C  0100               	movlb	0	; () banked
 37480  004F6E  258D               	addwf	_Bptr& (0+255),w,b
 37481  004F70  6ED9               	movwf	fsr2l,c
 37482  004F72  6ADA               	clrf	fsr2h,c
 37483  004F74  0E02               	movlw	high _BufferRF
 37484  004F76  22DA               	addwfc	fsr2h,f,c
 37485  004F78  90D8               	bcf	status,0,c
 37486  004F7A  32DF               	rrcf	indf2,f,c
 37487                           
 37488                           ; BSR set to: 0
 37489                           ;inputs_MC50.c: 132:                 if (RFcount >= 0) {
 37490  004F7C  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 37491  004F7E  D008               	goto	i2l14781
 37492                           
 37493                           ; BSR set to: 0
 37494                           ;inputs_MC50.c: 133:                     BufferRF[Bptr] += 0x80;
 37495  004F80  0EC6               	movlw	low _BufferRF
 37496  004F82  258D               	addwf	_Bptr& (0+255),w,b
 37497  004F84  6ED9               	movwf	fsr2l,c
 37498  004F86  6ADA               	clrf	fsr2h,c
 37499  004F88  0E02               	movlw	high _BufferRF
 37500  004F8A  22DA               	addwfc	fsr2h,f,c
 37501  004F8C  0E80               	movlw	128
 37502  004F8E  26DF               	addwf	indf2,f,c
 37503  004F90                     i2l14781:
 37504                           
 37505                           ; BSR set to: 0
 37506                           ;inputs_MC50.c: 136:                 RFcount = 0;
 37507  004F90  0E00               	movlw	0
 37508  004F92  6F7F               	movwf	(_RFcount+1)& (0+255),b
 37509  004F94  0E00               	movlw	0
 37510  004F96  6F7E               	movwf	_RFcount& (0+255),b
 37511                           
 37512                           ; BSR set to: 0
 37513                           ;inputs_MC50.c: 138:                 if ((++BitCount & 7) == 0)
 37514  004F98  2B8C               	incf	_BitCount& (0+255),f,b
 37515  004F9A  C08C  F001         	movff	_BitCount,??_rxi
 37516  004F9E  0E07               	movlw	7
 37517  004FA0  1601               	andwf	??_rxi^0,f,c
 37518  004FA2  A4D8               	btfss	status,2,c
 37519  004FA4  D009               	goto	i2l14789
 37520                           
 37521                           ; BSR set to: 0
 37522                           ;inputs_MC50.c: 139:                 {;inputs_MC50.c: 140:                     Bptr++;
 37523  004FA6  2B8D               	incf	_Bptr& (0+255),f,b
 37524                           
 37525                           ; BSR set to: 0
 37526                           ;inputs_MC50.c: 141:                     BufferRF[Bptr]=0;
 37527  004FA8  0EC6               	movlw	low _BufferRF
 37528  004FAA  258D               	addwf	_Bptr& (0+255),w,b
 37529  004FAC  6ED9               	movwf	fsr2l,c
 37530  004FAE  6ADA               	clrf	fsr2h,c
 37531  004FB0  0E02               	movlw	high _BufferRF
 37532  004FB2  22DA               	addwfc	fsr2h,f,c
 37533  004FB4  0E00               	movlw	0
 37534  004FB6  6EDF               	movwf	indf2,c
 37535  004FB8                     i2l14789:
 37536                           
 37537                           ; BSR set to: 0
 37538                           ;inputs_MC50.c: 143:                 if (BitCount == 13) {
 37539  004FB8  0E0D               	movlw	13
 37540  004FBA  198C               	xorwf	_BitCount& (0+255),w,b
 37541  004FBC  A4D8               	btfss	status,2,c
 37542  004FBE  0012               	return	
 37543                           
 37544                           ; BSR set to: 0
 37545                           ;inputs_MC50.c: 144:                     RFstate = 0;
 37546  004FC0  0E00               	movlw	0
 37547  004FC2  0101               	movlb	1	; () banked
 37548  004FC4  6F9D               	movwf	_RFstate& (0+255),b
 37549                           
 37550                           ; BSR set to: 1
 37551                           ;inputs_MC50.c: 145:                     if(RFFull_12BIT==1)
 37552  004FC6  0100               	movlb	0	; () banked
 37553  004FC8  058A               	decf	_RFFull_12BIT& (0+255),w,b	;volatile
 37554  004FCA  A4D8               	btfss	status,2,c
 37555  004FCC  D01A               	goto	i2l14801
 37556                           
 37557                           ; BSR set to: 0
 37558                           ;inputs_MC50.c: 146:                     {;inputs_MC50.c: 147:                         i
      +                          f(BufferRF_12BIT[0]==BufferRF[0] && BufferRF_12BIT[1]==BufferRF[1])
 37559  004FCE  0102               	movlb	2	; () banked
 37560  004FD0  51C6               	movf	_BufferRF& (0+255),w,b
 37561  004FD2  0101               	movlb	1	; () banked
 37562  004FD4  198B               	xorwf	_BufferRF_12BIT& (0+255),w,b
 37563  004FD6  A4D8               	btfss	status,2,c
 37564  004FD8  D00F               	goto	i2l1620
 37565                           
 37566                           ; BSR set to: 1
 37567  004FDA  0102               	movlb	2	; () banked
 37568  004FDC  51C7               	movf	(_BufferRF+1)& (0+255),w,b
 37569  004FDE  0101               	movlb	1	; () banked
 37570  004FE0  198C               	xorwf	(_BufferRF_12BIT+1)& (0+255),w,b
 37571  004FE2  A4D8               	btfss	status,2,c
 37572  004FE4  D009               	goto	i2l1620
 37573                           
 37574                           ; BSR set to: 1
 37575                           ;inputs_MC50.c: 148:                         {;inputs_MC50.c: 149:                      
      +                                 RFFull = 1;
 37576  004FE6  0E01               	movlw	1
 37577  004FE8  0100               	movlb	0	; () banked
 37578  004FEA  6F8B               	movwf	_RFFull& (0+255),b	;volatile
 37579                           
 37580                           ;inputs_MC50.c: 150:                             BufferRF[2]=0;
 37581  004FEC  0E00               	movlw	0
 37582  004FEE  0102               	movlb	2	; () banked
 37583  004FF0  6FC8               	movwf	(_BufferRF+2)& (0+255),b
 37584                           
 37585                           ;inputs_MC50.c: 151:                             BufferRF[3]=0;
 37586  004FF2  0E00               	movlw	0
 37587  004FF4  6FC9               	movwf	(_BufferRF+3)& (0+255),b
 37588                           
 37589                           ;inputs_MC50.c: 152:                         }
 37590  004FF6  0012               	return	
 37591  004FF8                     i2l1620:
 37592                           
 37593                           ; BSR set to: 1
 37594                           ;inputs_MC50.c: 154:                         {;inputs_MC50.c: 155:                      
      +                                 BufferRF_12BIT[0]=BufferRF[0];
 37595  004FF8  C2C6  F18B         	movff	_BufferRF,_BufferRF_12BIT
 37596                           
 37597                           ;inputs_MC50.c: 156:                             BufferRF_12BIT[1]=BufferRF[1];
 37598  004FFC  C2C7  F18C         	movff	_BufferRF+1,_BufferRF_12BIT+1
 37599  005000  0012               	return	
 37600  005002                     i2l14801:
 37601                           
 37602                           ; BSR set to: 0
 37603                           ;inputs_MC50.c: 161:                     {;inputs_MC50.c: 162:                         R
      +                          FFull_12BIT=1;
 37604  005002  0E01               	movlw	1
 37605  005004  6F8A               	movwf	_RFFull_12BIT& (0+255),b	;volatile
 37606                           
 37607                           ; BSR set to: 0
 37608                           ;inputs_MC50.c: 163:                         BufferRF_12BIT[0]=BufferRF[0];
 37609  005006  C2C6  F18B         	movff	_BufferRF,_BufferRF_12BIT
 37610                           
 37611                           ; BSR set to: 0
 37612                           ;inputs_MC50.c: 164:                         BufferRF_12BIT[1]=BufferRF[1];
 37613  00500A  C2C7  F18C         	movff	_BufferRF+1,_BufferRF_12BIT+1
 37614  00500E  0012               	return	
 37615  005010                     i2l14807:
 37616                           
 37617                           ; BSR set to: 0
 37618                           ;inputs_MC50.c: 168:                 RFcount++;
 37619  005010  4B7E               	infsnz	_RFcount& (0+255),f,b
 37620  005012  2B7F               	incf	(_RFcount+1)& (0+255),f,b
 37621                           
 37622                           ; BSR set to: 0
 37623                           ;inputs_MC50.c: 169:                 if (RFcount >= 10)
 37624  005014  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 37625  005016  0012               	return	
 37626  005018  517F               	movf	(_RFcount+1)& (0+255),w,b
 37627  00501A  E104               	bnz	i2u1485_40
 37628  00501C  0E0A               	movlw	10
 37629  00501E  5D7E               	subwf	_RFcount& (0+255),w,b
 37630  005020  A0D8               	btfss	status,0,c
 37631  005022  0012               	return	
 37632  005024                     i2u1485_40:
 37633  005024  D71D               	goto	i2u1467_40
 37634  005026                     i2l14813:
 37635                           
 37636                           ; BSR set to: 1
 37637                           ;inputs_MC50.c: 177:             if (RFBit) {
 37638  005026  0100               	movlb	0	; () banked
 37639  005028  5189               	movf	_RFBit& (0+255),w,b	;volatile
 37640  00502A  B4D8               	btfsc	status,2,c
 37641  00502C  D004               	goto	i2l14817
 37642                           
 37643                           ; BSR set to: 0
 37644                           ;inputs_MC50.c: 181:                 RFstate = 4;
 37645  00502E  0E04               	movlw	4
 37646  005030  0101               	movlb	1	; () banked
 37647  005032  6F9D               	movwf	_RFstate& (0+255),b
 37648                           
 37649                           ;inputs_MC50.c: 183:             } else {
 37650  005034  0012               	return	
 37651  005036                     i2l14817:
 37652                           
 37653                           ; BSR set to: 0
 37654                           ;inputs_MC50.c: 184:                 RFcount--;
 37655  005036  077E               	decf	_RFcount& (0+255),f,b
 37656  005038  A0D8               	btfss	status,0,c
 37657  00503A  077F               	decf	(_RFcount+1)& (0+255),f,b
 37658                           
 37659                           ; BSR set to: 0
 37660                           ;inputs_MC50.c: 185:                 if (RFcount < -10)
 37661  00503C  AF7F               	btfss	(_RFcount+1)& (0+255),7,b
 37662  00503E  0012               	return	
 37663  005040  0EF6               	movlw	246
 37664  005042  5D7E               	subwf	_RFcount& (0+255),w,b
 37665  005044  0EFF               	movlw	255
 37666  005046  597F               	subwfb	(_RFcount+1)& (0+255),w,b
 37667  005048  B0D8               	btfsc	status,0,c
 37668  00504A  0012               	return	
 37669  00504C  D747               	goto	i2u1472_40
 37670  00504E                     i2l14823:
 37671                           
 37672                           ; BSR set to: 1
 37673                           ;inputs_MC50.c: 197:             RFstate = 1;
 37674  00504E  0E01               	movlw	1
 37675  005050  6F9D               	movwf	_RFstate& (0+255),b
 37676                           
 37677                           ;inputs_MC50.c: 198:             RFcount = 0;
 37678  005052  0E00               	movlw	0
 37679  005054  0100               	movlb	0	; () banked
 37680  005056  6F7F               	movwf	(_RFcount+1)& (0+255),b
 37681  005058  0E00               	movlw	0
 37682  00505A  6F7E               	movwf	_RFcount& (0+255),b
 37683                           
 37684                           ;inputs_MC50.c: 199:             Bptr = 0;
 37685  00505C  0E00               	movlw	0
 37686  00505E  6F8D               	movwf	_Bptr& (0+255),b
 37687                           
 37688                           ;inputs_MC50.c: 200:             BitCount = 0;
 37689  005060  0E00               	movlw	0
 37690  005062  6F8C               	movwf	_BitCount& (0+255),b
 37691                           
 37692                           ;inputs_MC50.c: 201:             break;
 37693  005064  0012               	return	
 37694  005066                     i2l14827:
 37695                           
 37696                           ; BSR set to: 0
 37697  005066  0101               	movlb	1	; () banked
 37698  005068  519D               	movf	_RFstate& (0+255),w,b
 37699  00506A  6E01               	movwf	??_rxi^0,c
 37700  00506C  6A02               	clrf	(??_rxi+1)^0,c
 37701                           
 37702                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 37703                           ; Switch size 1, requested type "simple"
 37704                           ; Number of cases is 1, Range of values is 0 to 0
 37705                           ; switch strategies available:
 37706                           ; Name         Instructions Cycles
 37707                           ; simple_byte            4     3 (average)
 37708                           ;	Chosen strategy is simple_byte
 37709  00506E  5002               	movf	(??_rxi+1)^0,w,c
 37710  005070  0A00               	xorlw	0	; case 0
 37711  005072  A4D8               	btfss	status,2,c
 37712  005074  D7EC               	goto	i2l14823
 37713                           
 37714                           ; BSR set to: 1
 37715                           ; Switch size 1, requested type "simple"
 37716                           ; Number of cases is 6, Range of values is 0 to 5
 37717                           ; switch strategies available:
 37718                           ; Name         Instructions Cycles
 37719                           ; simple_byte           19    10 (average)
 37720                           ;	Chosen strategy is simple_byte
 37721  005076  5001               	movf	??_rxi^0,w,c
 37722  005078  0A00               	xorlw	0	; case 0
 37723  00507A  B4D8               	btfsc	status,2,c
 37724  00507C  D7E8               	goto	i2l14823
 37725  00507E  0A01               	xorlw	1	; case 1
 37726  005080  B4D8               	btfsc	status,2,c
 37727  005082  D735               	goto	i2l14753
 37728  005084  0A03               	xorlw	3	; case 2
 37729  005086  B4D8               	btfsc	status,2,c
 37730  005088  D6D8               	goto	i2l14717
 37731  00508A  0A01               	xorlw	1	; case 3
 37732  00508C  B4D8               	btfsc	status,2,c
 37733  00508E  D6EC               	goto	i2l14727
 37734  005090  0A07               	xorlw	7	; case 4
 37735  005092  B4D8               	btfsc	status,2,c
 37736  005094  D763               	goto	i2l14771
 37737  005096  0A01               	xorlw	1	; case 5
 37738  005098  B4D8               	btfsc	status,2,c
 37739  00509A  D7C5               	goto	i2l14813
 37740  00509C  D7D8               	goto	i2l14823
 37741  00509E                     __end_of_rxi:
 37742                           	callstack 0
 37743                           
 37744 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 37745 ;; Defined at:
 37746 ;;		line 147 in file "mcc_generated_files/tmr0.c"
 37747 ;; Parameters:    Size  Location     Type
 37748 ;;		None
 37749 ;; Auto vars:     Size  Location     Type
 37750 ;;		None
 37751 ;; Return value:  Size  Location     Type
 37752 ;;                  1    wreg      void 
 37753 ;; Registers used:
 37754 ;;		None
 37755 ;; Tracked objects:
 37756 ;;		On entry : 3F/2
 37757 ;;		On exit  : 3F/2
 37758 ;;		Unchanged: 3F/0
 37759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37763 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37764 ;;Total ram usage:        0 bytes
 37765 ;; Hardware stack levels used: 1
 37766 ;; This function calls:
 37767 ;;		Nothing
 37768 ;; This function is called by:
 37769 ;;		_TMR0_Initialize
 37770 ;;		_TMR0_ISR
 37771 ;; This function uses a non-reentrant model
 37772 ;;
 37773                           
 37774                           	psect	text203
 37775  009E98                     __ptext203:
 37776                           	callstack 0
 37777  009E98                     _TMR0_DefaultInterruptHandler:
 37778                           	callstack 15
 37779                           
 37780                           ; BSR set to: 2
 37781                           
 37782                           ;incstack = 0
 37783  009E98  0012               	return		;funcret
 37784  009E9A                     __end_of_TMR0_DefaultInterruptHandler:
 37785                           	callstack 0
 37786                           
 37787 ;; *************** function _EUSART1_Transmit_ISR *****************
 37788 ;; Defined at:
 37789 ;;		line 197 in file "mcc_generated_files/eusart1.c"
 37790 ;; Parameters:    Size  Location     Type
 37791 ;;		None
 37792 ;; Auto vars:     Size  Location     Type
 37793 ;;		None
 37794 ;; Return value:  Size  Location     Type
 37795 ;;                  1    wreg      void 
 37796 ;; Registers used:
 37797 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 37798 ;; Tracked objects:
 37799 ;;		On entry : 3F/2
 37800 ;;		On exit  : 30/0
 37801 ;;		Unchanged: 0/0
 37802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37806 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37807 ;;Total ram usage:        0 bytes
 37808 ;; Hardware stack levels used: 1
 37809 ;; This function calls:
 37810 ;;		Nothing
 37811 ;; This function is called by:
 37812 ;;		_EUSART1_Initialize
 37813 ;;		_INTERRUPT_InterruptManager
 37814 ;; This function uses a non-reentrant model
 37815 ;;
 37816                           
 37817                           	psect	text204
 37818  009686                     __ptext204:
 37819                           	callstack 0
 37820  009686                     _EUSART1_Transmit_ISR:
 37821                           	callstack 16
 37822                           
 37823                           ; BSR set to: 2
 37824                           ;mcc_generated_files/eusart1.c: 201:     if(sizeof(eusart1TxBuffer) > eusart1TxBufferRem
      +                          aining)
 37825                           
 37826                           ; BSR set to: 2
 37827                           ;incstack = 0
 37828  009686  0E08               	movlw	8
 37829  009688  0101               	movlb	1	; () banked
 37830  00968A  61FE               	cpfslt	_eusart1TxBufferRemaining& (0+255),b
 37831  00968C  D012               	goto	i2l106
 37832                           
 37833                           ; BSR set to: 1
 37834                           ;mcc_generated_files/eusart1.c: 202:     {;mcc_generated_files/eusart1.c: 203:         T
      +                          X1REG = eusart1TxBuffer[eusart1TxTail++];
 37835  00968E  0E84               	movlw	low _eusart1TxBuffer
 37836  009690  0100               	movlb	0	; () banked
 37837  009692  2596               	addwf	_eusart1TxTail& (0+255),w,b	;volatile
 37838  009694  6ED9               	movwf	fsr2l,c
 37839  009696  6ADA               	clrf	fsr2h,c
 37840  009698  0E02               	movlw	high _eusart1TxBuffer
 37841  00969A  22DA               	addwfc	fsr2h,f,c
 37842  00969C  50DF               	movf	indf2,w,c
 37843  00969E  6E9A               	movwf	154,c	;volatile
 37844                           
 37845                           ; BSR set to: 0
 37846  0096A0  2B96               	incf	_eusart1TxTail& (0+255),f,b	;volatile
 37847                           
 37848                           ; BSR set to: 0
 37849                           ;mcc_generated_files/eusart1.c: 204:         if(sizeof(eusart1TxBuffer) <= eusart1TxTail
      +                          )
 37850  0096A2  0E07               	movlw	7
 37851  0096A4  6596               	cpfsgt	_eusart1TxTail& (0+255),b
 37852  0096A6  D002               	goto	i2l16851
 37853                           
 37854                           ; BSR set to: 0
 37855                           ;mcc_generated_files/eusart1.c: 205:         {;mcc_generated_files/eusart1.c: 206:      
      +                                 eusart1TxTail = 0;
 37856  0096A8  0E00               	movlw	0
 37857  0096AA  6F96               	movwf	_eusart1TxTail& (0+255),b	;volatile
 37858  0096AC                     i2l16851:
 37859                           
 37860                           ; BSR set to: 0
 37861                           ;mcc_generated_files/eusart1.c: 208:         eusart1TxBufferRemaining++;
 37862  0096AC  0101               	movlb	1	; () banked
 37863  0096AE  2BFE               	incf	_eusart1TxBufferRemaining& (0+255),f,b	;volatile
 37864                           
 37865                           ;mcc_generated_files/eusart1.c: 209:     }
 37866  0096B0  0012               	return	
 37867  0096B2                     i2l106:
 37868                           
 37869                           ; BSR set to: 1
 37870                           ;mcc_generated_files/eusart1.c: 211:     {;mcc_generated_files/eusart1.c: 212:         P
      +                          IE3bits.TX1IE = 0;
 37871  0096B2  010E               	movlb	14	; () banked
 37872  0096B4  99C5               	bcf	197,4,b	;volatile
 37873  0096B6  0012               	return		;funcret
 37874  0096B8                     __end_of_EUSART1_Transmit_ISR:
 37875                           	callstack 0
 37876                           
 37877 ;; *************** function _EUSART1_Receive_ISR *****************
 37878 ;; Defined at:
 37879 ;;		line 216 in file "mcc_generated_files/eusart1.c"
 37880 ;; Parameters:    Size  Location     Type
 37881 ;;		None
 37882 ;; Auto vars:     Size  Location     Type
 37883 ;;		None
 37884 ;; Return value:  Size  Location     Type
 37885 ;;                  1    wreg      void 
 37886 ;; Registers used:
 37887 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 37888 ;; Tracked objects:
 37889 ;;		On entry : 3F/2
 37890 ;;		On exit  : 0/0
 37891 ;;		Unchanged: 0/0
 37892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37893 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37894 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37896 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37897 ;;Total ram usage:        0 bytes
 37898 ;; Hardware stack levels used: 1
 37899 ;; Hardware stack levels required when called: 2
 37900 ;; This function calls:
 37901 ;;		Absolute function
 37902 ;;		_EUSART1_DefaultErrorHandler
 37903 ;;		_EUSART1_DefaultFramingErrorHandler
 37904 ;;		_EUSART1_DefaultOverrunErrorHandler
 37905 ;;		_EUSART1_RxDataHandler
 37906 ;; This function is called by:
 37907 ;;		_EUSART1_Initialize
 37908 ;;		_INTERRUPT_InterruptManager
 37909 ;; This function uses a non-reentrant model
 37910 ;;
 37911                           
 37912                           	psect	text205
 37913  007F16                     __ptext205:
 37914                           	callstack 0
 37915  007F16                     _EUSART1_Receive_ISR:
 37916                           	callstack 14
 37917                           
 37918                           ; BSR set to: 2
 37919                           ;mcc_generated_files/eusart1.c: 219:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
 37920                           
 37921                           ;incstack = 0
 37922  007F16  0E74               	movlw	low _eusart1RxStatusBuffer
 37923  007F18  0100               	movlb	0	; () banked
 37924  007F1A  2595               	addwf	_eusart1RxHead& (0+255),w,b	;volatile
 37925  007F1C  6ED9               	movwf	fsr2l,c
 37926  007F1E  6ADA               	clrf	fsr2h,c
 37927  007F20  0E02               	movlw	high _eusart1RxStatusBuffer
 37928  007F22  22DA               	addwfc	fsr2h,f,c
 37929  007F24  0E00               	movlw	0
 37930  007F26  6EDF               	movwf	indf2,c
 37931                           
 37932                           ; BSR set to: 0
 37933                           ;mcc_generated_files/eusart1.c: 221:     if(RC1STAbits.FERR){
 37934  007F28  A49D               	btfss	157,2,c	;volatile
 37935  007F2A  D013               	goto	i2u1898_49
 37936                           
 37937                           ; BSR set to: 0
 37938                           ;mcc_generated_files/eusart1.c: 222:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
 37939  007F2C  0E74               	movlw	low _eusart1RxStatusBuffer
 37940  007F2E  2595               	addwf	_eusart1RxHead& (0+255),w,b	;volatile
 37941  007F30  6ED9               	movwf	fsr2l,c
 37942  007F32  6ADA               	clrf	fsr2h,c
 37943  007F34  0E02               	movlw	high _eusart1RxStatusBuffer
 37944  007F36  22DA               	addwfc	fsr2h,f,c
 37945  007F38  0102               	movlb	2	; () banked
 37946  007F3A  82DF               	bsf	indf2,1,c
 37947                           
 37948                           ; BSR set to: 2
 37949                           ;mcc_generated_files/eusart1.c: 223:         EUSART1_FramingErrorHandler();
 37950  007F3C  D801               	call	i2u1898_48
 37951  007F3E  D009               	goto	i2u1898_49
 37952  007F40                     i2u1898_48:
 37953  007F40  0005               	push	
 37954  007F42  6EFA               	movwf	pclath,c
 37955  007F44  51E7               	movf	_EUSART1_FramingErrorHandler& (0+255),w,b
 37956  007F46  6EFD               	movwf	tosl,c
 37957  007F48  51E8               	movf	(_EUSART1_FramingErrorHandler+1)& (0+255),w,b
 37958  007F4A  6EFE               	movwf	tosh,c
 37959  007F4C  6AFF               	clrf	tosu,c
 37960  007F4E  50FA               	movf	pclath,w,c
 37961  007F50  0012               	return		;indir
 37962  007F52                     i2u1898_49:
 37963                           
 37964                           ;mcc_generated_files/eusart1.c: 226:     if(RC1STAbits.OERR){
 37965  007F52  A29D               	btfss	157,1,c	;volatile
 37966  007F54  D014               	goto	i2u1900_49
 37967                           
 37968                           ;mcc_generated_files/eusart1.c: 227:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
 37969  007F56  0E74               	movlw	low _eusart1RxStatusBuffer
 37970  007F58  0100               	movlb	0	; () banked
 37971  007F5A  2595               	addwf	_eusart1RxHead& (0+255),w,b	;volatile
 37972  007F5C  6ED9               	movwf	fsr2l,c
 37973  007F5E  6ADA               	clrf	fsr2h,c
 37974  007F60  0E02               	movlw	high _eusart1RxStatusBuffer
 37975  007F62  22DA               	addwfc	fsr2h,f,c
 37976  007F64  0102               	movlb	2	; () banked
 37977  007F66  84DF               	bsf	indf2,2,c
 37978                           
 37979                           ; BSR set to: 2
 37980                           ;mcc_generated_files/eusart1.c: 228:         EUSART1_OverrunErrorHandler();
 37981  007F68  D801               	call	i2u1900_48
 37982  007F6A  D009               	goto	i2u1900_49
 37983  007F6C                     i2u1900_48:
 37984  007F6C  0005               	push	
 37985  007F6E  6EFA               	movwf	pclath,c
 37986  007F70  51E5               	movf	_EUSART1_OverrunErrorHandler& (0+255),w,b
 37987  007F72  6EFD               	movwf	tosl,c
 37988  007F74  51E6               	movf	(_EUSART1_OverrunErrorHandler+1)& (0+255),w,b
 37989  007F76  6EFE               	movwf	tosh,c
 37990  007F78  6AFF               	clrf	tosu,c
 37991  007F7A  50FA               	movf	pclath,w,c
 37992  007F7C  0012               	return		;indir
 37993  007F7E                     i2u1900_49:
 37994                           
 37995                           ;mcc_generated_files/eusart1.c: 231:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
 37996  007F7E  0E74               	movlw	low _eusart1RxStatusBuffer
 37997  007F80  0100               	movlb	0	; () banked
 37998  007F82  2595               	addwf	_eusart1RxHead& (0+255),w,b	;volatile
 37999  007F84  6ED9               	movwf	fsr2l,c
 38000  007F86  6ADA               	clrf	fsr2h,c
 38001  007F88  0E02               	movlw	high _eusart1RxStatusBuffer
 38002  007F8A  22DA               	addwfc	fsr2h,f,c
 38003  007F8C  50DF               	movf	indf2,w,c
 38004  007F8E  B4D8               	btfsc	status,2,c
 38005  007F90  D00C               	goto	i2l16871
 38006                           
 38007                           ; BSR set to: 0
 38008                           ;mcc_generated_files/eusart1.c: 232:         EUSART1_ErrorHandler();
 38009  007F92  D801               	call	i2u1902_48
 38010  007F94  0012               	return	
 38011  007F96                     i2u1902_48:
 38012  007F96  0005               	push	
 38013  007F98  6EFA               	movwf	pclath,c
 38014  007F9A  0102               	movlb	2	; () banked
 38015  007F9C  51E3               	movf	_EUSART1_ErrorHandler& (0+255),w,b
 38016  007F9E  6EFD               	movwf	tosl,c
 38017  007FA0  51E4               	movf	(_EUSART1_ErrorHandler+1)& (0+255),w,b
 38018  007FA2  6EFE               	movwf	tosh,c
 38019  007FA4  6AFF               	clrf	tosu,c
 38020  007FA6  50FA               	movf	pclath,w,c
 38021  007FA8  0012               	return		;indir
 38022  007FAA                     i2l16871:
 38023                           
 38024                           ; BSR set to: 0
 38025                           ;mcc_generated_files/eusart1.c: 234:         EUSART1_RxDataHandler();
 38026  007FAA  EC75  F04D         	call	_EUSART1_RxDataHandler	;wreg free
 38027  007FAE  0012               	return		;funcret
 38028  007FB0                     __end_of_EUSART1_Receive_ISR:
 38029                           	callstack 0
 38030                           
 38031 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
 38032 ;; Defined at:
 38033 ;;		line 252 in file "mcc_generated_files/eusart1.c"
 38034 ;; Parameters:    Size  Location     Type
 38035 ;;		None
 38036 ;; Auto vars:     Size  Location     Type
 38037 ;;		None
 38038 ;; Return value:  Size  Location     Type
 38039 ;;                  1    wreg      void 
 38040 ;; Registers used:
 38041 ;;		None
 38042 ;; Tracked objects:
 38043 ;;		On entry : 3F/2
 38044 ;;		On exit  : 3F/2
 38045 ;;		Unchanged: 3F/0
 38046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38047 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38048 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38049 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38050 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38051 ;;Total ram usage:        0 bytes
 38052 ;; Hardware stack levels used: 1
 38053 ;; This function calls:
 38054 ;;		Nothing
 38055 ;; This function is called by:
 38056 ;;		_EUSART1_Initialize
 38057 ;;		_EUSART1_Receive_ISR
 38058 ;; This function uses a non-reentrant model
 38059 ;;
 38060                           
 38061                           	psect	text206
 38062  009E5A                     __ptext206:
 38063                           	callstack 0
 38064  009E5A                     _EUSART1_DefaultOverrunErrorHandler:
 38065                           	callstack 15
 38066                           
 38067                           ; BSR set to: 2
 38068                           ;mcc_generated_files/eusart1.c: 255:     RC1STAbits.CREN = 0;
 38069                           
 38070                           ;incstack = 0
 38071  009E5A  989D               	bcf	157,4,c	;volatile
 38072                           
 38073                           ;mcc_generated_files/eusart1.c: 256:     RC1STAbits.CREN = 1;
 38074  009E5C  889D               	bsf	157,4,c	;volatile
 38075                           
 38076                           ; BSR set to: 2
 38077  009E5E  0012               	return		;funcret
 38078  009E60                     __end_of_EUSART1_DefaultOverrunErrorHandler:
 38079                           	callstack 0
 38080                           
 38081 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
 38082 ;; Defined at:
 38083 ;;		line 250 in file "mcc_generated_files/eusart1.c"
 38084 ;; Parameters:    Size  Location     Type
 38085 ;;		None
 38086 ;; Auto vars:     Size  Location     Type
 38087 ;;		None
 38088 ;; Return value:  Size  Location     Type
 38089 ;;                  1    wreg      void 
 38090 ;; Registers used:
 38091 ;;		None
 38092 ;; Tracked objects:
 38093 ;;		On entry : 3F/2
 38094 ;;		On exit  : 3F/2
 38095 ;;		Unchanged: 3F/0
 38096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38097 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38098 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38100 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38101 ;;Total ram usage:        0 bytes
 38102 ;; Hardware stack levels used: 1
 38103 ;; This function calls:
 38104 ;;		Nothing
 38105 ;; This function is called by:
 38106 ;;		_EUSART1_Initialize
 38107 ;;		_EUSART1_Receive_ISR
 38108 ;; This function uses a non-reentrant model
 38109 ;;
 38110                           
 38111                           	psect	text207
 38112  009E9A                     __ptext207:
 38113                           	callstack 0
 38114  009E9A                     _EUSART1_DefaultFramingErrorHandler:
 38115                           	callstack 15
 38116                           
 38117                           ; BSR set to: 2
 38118                           
 38119                           ; BSR set to: 2
 38120                           ;incstack = 0
 38121  009E9A  0012               	return		;funcret
 38122  009E9C                     __end_of_EUSART1_DefaultFramingErrorHandler:
 38123                           	callstack 0
 38124                           
 38125 ;; *************** function _EUSART1_DefaultErrorHandler *****************
 38126 ;; Defined at:
 38127 ;;		line 260 in file "mcc_generated_files/eusart1.c"
 38128 ;; Parameters:    Size  Location     Type
 38129 ;;		None
 38130 ;; Auto vars:     Size  Location     Type
 38131 ;;		None
 38132 ;; Return value:  Size  Location     Type
 38133 ;;                  1    wreg      void 
 38134 ;; Registers used:
 38135 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 38136 ;; Tracked objects:
 38137 ;;		On entry : 3F/2
 38138 ;;		On exit  : 3F/0
 38139 ;;		Unchanged: 0/0
 38140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38141 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38142 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38143 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38144 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38145 ;;Total ram usage:        0 bytes
 38146 ;; Hardware stack levels used: 1
 38147 ;; Hardware stack levels required when called: 1
 38148 ;; This function calls:
 38149 ;;		_EUSART1_RxDataHandler
 38150 ;; This function is called by:
 38151 ;;		_EUSART1_Initialize
 38152 ;;		_EUSART1_Receive_ISR
 38153 ;; This function uses a non-reentrant model
 38154 ;;
 38155                           
 38156                           	psect	text208
 38157  009E60                     __ptext208:
 38158                           	callstack 0
 38159  009E60                     _EUSART1_DefaultErrorHandler:
 38160                           	callstack 14
 38161                           
 38162                           ; BSR set to: 2
 38163                           ;mcc_generated_files/eusart1.c: 261:     EUSART1_RxDataHandler();
 38164                           
 38165                           ; BSR set to: 2
 38166                           ;incstack = 0
 38167  009E60  EC75  F04D         	call	_EUSART1_RxDataHandler	;wreg free
 38168                           
 38169                           ; BSR set to: 0
 38170  009E64  0012               	return		;funcret
 38171  009E66                     __end_of_EUSART1_DefaultErrorHandler:
 38172                           	callstack 0
 38173                           
 38174 ;; *************** function _EUSART1_RxDataHandler *****************
 38175 ;; Defined at:
 38176 ;;		line 240 in file "mcc_generated_files/eusart1.c"
 38177 ;; Parameters:    Size  Location     Type
 38178 ;;		None
 38179 ;; Auto vars:     Size  Location     Type
 38180 ;;		None
 38181 ;; Return value:  Size  Location     Type
 38182 ;;                  1    wreg      void 
 38183 ;; Registers used:
 38184 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 38185 ;; Tracked objects:
 38186 ;;		On entry : 3D/0
 38187 ;;		On exit  : 3F/0
 38188 ;;		Unchanged: 0/0
 38189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38191 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38193 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38194 ;;Total ram usage:        0 bytes
 38195 ;; Hardware stack levels used: 1
 38196 ;; This function calls:
 38197 ;;		Nothing
 38198 ;; This function is called by:
 38199 ;;		_EUSART1_Receive_ISR
 38200 ;;		_EUSART1_DefaultErrorHandler
 38201 ;; This function uses a non-reentrant model
 38202 ;;
 38203                           
 38204                           	psect	text209
 38205  009AEA                     __ptext209:
 38206                           	callstack 0
 38207  009AEA                     _EUSART1_RxDataHandler:
 38208                           	callstack 15
 38209                           
 38210                           ;mcc_generated_files/eusart1.c: 242:     eusart1RxBuffer[eusart1RxHead++] = RC1REG;
 38211                           
 38212                           ; BSR set to: 0
 38213                           ;incstack = 0
 38214  009AEA  0E7C               	movlw	low _eusart1RxBuffer
 38215  009AEC  0100               	movlb	0	; () banked
 38216  009AEE  2595               	addwf	_eusart1RxHead& (0+255),w,b	;volatile
 38217  009AF0  6ED9               	movwf	fsr2l,c
 38218  009AF2  6ADA               	clrf	fsr2h,c
 38219  009AF4  0E02               	movlw	high _eusart1RxBuffer
 38220  009AF6  22DA               	addwfc	fsr2h,f,c
 38221  009AF8  CF99 FFDF          	movff	3993,indf2	;volatile
 38222                           
 38223                           ; BSR set to: 0
 38224  009AFC  2B95               	incf	_eusart1RxHead& (0+255),f,b	;volatile
 38225                           
 38226                           ; BSR set to: 0
 38227                           ;mcc_generated_files/eusart1.c: 243:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
 38228  009AFE  0E07               	movlw	7
 38229  009B00  6595               	cpfsgt	_eusart1RxHead& (0+255),b
 38230  009B02  D002               	goto	i2l13145
 38231                           
 38232                           ; BSR set to: 0
 38233                           ;mcc_generated_files/eusart1.c: 244:     {;mcc_generated_files/eusart1.c: 245:         e
      +                          usart1RxHead = 0;
 38234  009B04  0E00               	movlw	0
 38235  009B06  6F95               	movwf	_eusart1RxHead& (0+255),b	;volatile
 38236  009B08                     i2l13145:
 38237                           
 38238                           ; BSR set to: 0
 38239                           ;mcc_generated_files/eusart1.c: 247:     eusart1RxCount++;
 38240  009B08  2B93               	incf	_eusart1RxCount& (0+255),f,b	;volatile
 38241                           
 38242                           ; BSR set to: 0
 38243  009B0A  0012               	return		;funcret
 38244  009B0C                     __end_of_EUSART1_RxDataHandler:
 38245                           	callstack 0
 38246                           
 38247                           	psect	text210
 38248  000000                     __ptext210:
 38249                           	callstack 0
 38250                           
 38251                           	psect	rparam
 38252  0000                     
 38253                           	psect	temp
 38254  000050                     btemp:
 38255                           	callstack 0
 38256  000050                     	ds	1
 38257  0000                     int$flags	set	btemp
 38258  0000                     wtemp8	set	btemp+1
 38259  0000                     ttemp5	set	btemp+1
 38260  0000                     ttemp6	set	btemp+4
 38261  0000                     ttemp7	set	btemp+8
 38262                           
 38263                           	psect	idloc
 38264                           
 38265                           ;Config register IDLOC0 @ 0x200000
 38266                           ;	unspecified, using default values
 38267  200000                     	org	2097152
 38268  200000  0FFF               	dw	4095
 38269                           
 38270                           ;Config register IDLOC1 @ 0x200002
 38271                           ;	unspecified, using default values
 38272  200002                     	org	2097154
 38273  200002  0FFF               	dw	4095
 38274                           
 38275                           ;Config register IDLOC2 @ 0x200004
 38276                           ;	unspecified, using default values
 38277  200004                     	org	2097156
 38278  200004  0FFF               	dw	4095
 38279                           
 38280                           ;Config register IDLOC3 @ 0x200006
 38281                           ;	unspecified, using default values
 38282  200006                     	org	2097158
 38283  200006  0FFF               	dw	4095
 38284                           
 38285                           ;Config register IDLOC4 @ 0x200008
 38286                           ;	unspecified, using default values
 38287  200008                     	org	2097160
 38288  200008  0FFF               	dw	4095
 38289                           
 38290                           ;Config register IDLOC5 @ 0x20000A
 38291                           ;	unspecified, using default values
 38292  20000A                     	org	2097162
 38293  20000A  0FFF               	dw	4095
 38294                           
 38295                           ;Config register IDLOC6 @ 0x20000C
 38296                           ;	unspecified, using default values
 38297  20000C                     	org	2097164
 38298  20000C  0FFF               	dw	4095
 38299                           
 38300                           ;Config register IDLOC7 @ 0x20000E
 38301                           ;	unspecified, using default values
 38302  20000E                     	org	2097166
 38303  20000E  0FFF               	dw	4095
 38304                           
 38305                           	psect	config
 38306                           
 38307                           ;Config register CONFIG1L @ 0x300000
 38308                           ;	External Oscillator mode Selection bits
 38309                           ;	FEXTOSC = OFF, Oscillator not enabled
 38310                           ;	Power-up default value for COSC bits
 38311                           ;	RSTOSC = HFINTOSC_64MHZ, HFINTOSC with HFFRQ = 64 MHz and CDIV = 1:1
 38312  300000                     	org	3145728
 38313  300000  8C                 	db	140
 38314                           
 38315                           ;Config register CONFIG1H @ 0x300001
 38316                           ;	Clock Out Enable bit
 38317                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
 38318                           ;	Clock Switch Enable bit
 38319                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 38320                           ;	Fail-Safe Clock Monitor Enable bit
 38321                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
 38322  300001                     	org	3145729
 38323  300001  FF                 	db	255
 38324                           
 38325                           ;Config register CONFIG2L @ 0x300002
 38326                           ;	Master Clear Enable bit
 38327                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
 38328                           ;	Power-up Timer Enable bit
 38329                           ;	PWRTE = ON, Power up timer enabled
 38330                           ;	Low-power BOR enable bit
 38331                           ;	LPBOREN = OFF, ULPBOR disabled
 38332                           ;	Brown-out Reset Enable bits
 38333                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
 38334  300002                     	org	3145730
 38335  300002  FD                 	db	253
 38336                           
 38337                           ;Config register CONFIG2H @ 0x300003
 38338                           ;	Brown Out Reset Voltage selection bits
 38339                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
 38340                           ;	ZCD Disable bit
 38341                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
 38342                           ;	PPSLOCK bit One-Way Set Enable bit
 38343                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
 38344                           ;	Stack Full/Underflow Reset Enable bit
 38345                           ;	STVREN = ON, Stack full/underflow will cause Reset
 38346                           ;	Debugger Enable bit
 38347                           ;	DEBUG = OFF, Background debugger disabled
 38348                           ;	Extended Instruction Set Enable bit
 38349                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
 38350  300003                     	org	3145731
 38351  300003  FF                 	db	255
 38352                           
 38353                           ;Config register CONFIG3L @ 0x300004
 38354                           ;	WDT Period Select bits
 38355                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 38356                           ;	WDT operating mode
 38357                           ;	WDTE = SWDTEN, WDT enabled/disabled by SWDTEN bit
 38358  300004                     	org	3145732
 38359  300004  BF                 	db	191
 38360                           
 38361                           ;Config register CONFIG3H @ 0x300005
 38362                           ;	WDT Window Select bits
 38363                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 38364                           ;	WDT input clock selector
 38365                           ;	WDTCCS = SC, Software Control
 38366  300005                     	org	3145733
 38367  300005  FF                 	db	255
 38368                           
 38369                           ;Config register CONFIG4L @ 0x300006
 38370                           ;	Write Protection Block 0
 38371                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
 38372                           ;	Write Protection Block 1
 38373                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
 38374                           ;	Write Protection Block 2
 38375                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
 38376                           ;	Write Protection Block 3
 38377                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
 38378  300006                     	org	3145734
 38379  300006  FF                 	db	255
 38380                           
 38381                           ;Config register CONFIG4H @ 0x300007
 38382                           ;	Configuration Register Write Protection bit
 38383                           ;	WRTC = OFF, Configuration registers (300000-30000Bh) not write-protected
 38384                           ;	Boot Block Write Protection bit
 38385                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 38386                           ;	Data EEPROM Write Protection bit
 38387                           ;	WRTD = OFF, Data EEPROM not write-protected
 38388                           ;	Scanner Enable bit
 38389                           ;	SCANE = ON, Scanner module is available for use, SCANMD bit can control the module
 38390                           ;	Low Voltage Programming Enable bit
 38391                           ;	LVP = OFF, HV on MCLR/VPP must be used for programming
 38392  300007                     	org	3145735
 38393  300007  DF                 	db	223
 38394                           
 38395                           ;Config register CONFIG5L @ 0x300008
 38396                           ;	UserNVM Program Memory Code Protection bit
 38397                           ;	CP = ON, UserNVM code protection enabled
 38398                           ;	DataNVM Memory Code Protection bit
 38399                           ;	CPD = ON, DataNVM code protection enabled
 38400  300008                     	org	3145736
 38401  300008  FC                 	db	252
 38402                           
 38403                           ;Config register CONFIG5H @ 0x300009
 38404                           ;	unspecified, using default values
 38405  300009                     	org	3145737
 38406  300009  FF                 	db	255
 38407                           
 38408                           ;Config register CONFIG6L @ 0x30000A
 38409                           ;	Table Read Protection Block 0
 38410                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
 38411                           ;	Table Read Protection Block 1
 38412                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
 38413                           ;	Table Read Protection Block 2
 38414                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
 38415                           ;	Table Read Protection Block 3
 38416                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
 38417  30000A                     	org	3145738
 38418  30000A  FF                 	db	255
 38419                           
 38420                           ;Config register CONFIG6H @ 0x30000B
 38421                           ;	Boot Block Table Read Protection bit
 38422                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 38423  30000B                     	org	3145739
 38424  30000B  FF                 	db	255
 38425                           tosu	equ	0xFFF
 38426                           tosh	equ	0xFFE
 38427                           tosl	equ	0xFFD
 38428                           stkptr	equ	0xFFC
 38429                           pclatu	equ	0xFFB
 38430                           pclath	equ	0xFFA
 38431                           pcl	equ	0xFF9
 38432                           tblptru	equ	0xFF8
 38433                           tblptrh	equ	0xFF7
 38434                           tblptrl	equ	0xFF6
 38435                           tablat	equ	0xFF5
 38436                           prodh	equ	0xFF4
 38437                           prodl	equ	0xFF3
 38438                           indf0	equ	0xFEF
 38439                           postinc0	equ	0xFEE
 38440                           postdec0	equ	0xFED
 38441                           preinc0	equ	0xFEC
 38442                           plusw0	equ	0xFEB
 38443                           fsr0h	equ	0xFEA
 38444                           fsr0l	equ	0xFE9
 38445                           wreg	equ	0xFE8
 38446                           indf1	equ	0xFE7
 38447                           postinc1	equ	0xFE6
 38448                           postdec1	equ	0xFE5
 38449                           preinc1	equ	0xFE4
 38450                           plusw1	equ	0xFE3
 38451                           fsr1h	equ	0xFE2
 38452                           fsr1l	equ	0xFE1
 38453                           bsr	equ	0xFE0
 38454                           indf2	equ	0xFDF
 38455                           postinc2	equ	0xFDE
 38456                           postdec2	equ	0xFDD
 38457                           preinc2	equ	0xFDC
 38458                           plusw2	equ	0xFDB
 38459                           fsr2h	equ	0xFDA
 38460                           fsr2l	equ	0xFD9
 38461                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    32
    Data        46
    BSS         824
    Persistent  19
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     58      79
    BANK0           160     36     158
    BANK1           256      0     256
    BANK2           256      7     250
    BANK3           256      0     247
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          136      0       0

Pointer List with Targets:

    i2c_write1ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    i2c_read1ByteRegister@d2.data	PTR unsigned char  size(2) Largest target is 0
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    i2c_read2ByteRegister@result.data	PTR unsigned char  size(2) Largest target is 0
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    i2c_write2ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    I2C1_Read1ByteRegister@returnValue.data	PTR unsigned char  size(2) Largest target is 0
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    I2C1_Read2ByteRegister@returnValue.data	PTR unsigned char  size(2) Largest target is 0
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    I2C1_Write1ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    I2C1_Write2ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    I2C1_DO_TX$8320$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_DO_RX$8326$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_DO_TX_EMPTY$8332$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_DO_RX_EMPTY$8338$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_DO_TX_EMPTY$8337	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_DO_TX_EMPTY$8332	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F535(), 
		 -> wr2RegCompleteHandler@i2c1_master_example$F523(), wr1RegCompleteHandler@i2c1_master_example$F517(), rd2RegCompleteHandler@i2c1_master_example$F511(), rd1RegCompleteHandler@i2c1_master_example$F500(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), 

    I2C1_DO_RX$8331	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_DO_RX$8326	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F535(), 
		 -> wr2RegCompleteHandler@i2c1_master_example$F523(), wr1RegCompleteHandler@i2c1_master_example$F517(), rd2RegCompleteHandler@i2c1_master_example$F511(), rd1RegCompleteHandler@i2c1_master_example$F500(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), 

    I2C1_DO_TX$8325	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_DO_TX$8320	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F535(), 
		 -> wr2RegCompleteHandler@i2c1_master_example$F523(), wr1RegCompleteHandler@i2c1_master_example$F517(), rd2RegCompleteHandler@i2c1_master_example$F511(), rd1RegCompleteHandler@i2c1_master_example$F500(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), 

    I2C1_MasterFsm$8319	const PTR FTN()enum E10442 size(2) Largest target is 1
		 -> I2C1_DO_ADDRESS_NACK(), I2C1_DO_RESET(), I2C1_DO_RX_NACK_RESTART(), I2C1_DO_RX_NACK_STOP(), 
		 -> I2C1_DO_RX_ACK(), I2C1_DO_SEND_STOP(), I2C1_DO_SEND_RESTART(), I2C1_DO_SEND_RESTART_WRITE(), 
		 -> I2C1_DO_SEND_RESTART_READ(), I2C1_DO_TX_EMPTY(), I2C1_DO_RCEN(), I2C1_DO_RX(), 
		 -> I2C1_DO_TX(), I2C1_DO_SEND_ADR_WRITE(), I2C1_DO_SEND_ADR_READ(), I2C1_DO_IDLE(), 

    I2C1_CallbackReturnStop@funPtr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_CallbackReturnReset@funPtr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    Absolute function$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    S935$0$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    memcpy@d1	PTR void  size(2) Largest target is 17
		 -> controlSelectRemote@tempSerial(BANK0[4]), Decrypt@Buffer(COMRAM[4]), SecureKeyGen@SKEYtemp(COMRAM[8]), SecureKeyGen@HOPtemp(COMRAM[4]), 
		 -> SecureKeyGen@Buffer(COMRAM[8]), NormalKeyGen@SKEYtemp(COMRAM[4]), NormalKeyGen@SEED(BANK2[4]), NormalKeyGen@HOPtemp(COMRAM[4]), 
		 -> NormalKeyGen@Buffer(COMRAM[8]), DKEY(BANK2[8]), classic_data(BANK2[16]), I2C1_WriteNBytes@dat(COMRAM[17]), 
		 -> i2c_writeNBytes@dat(COMRAM[17]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 17
		 -> controlSelectRemote@tempSerial(BANK0[4]), Decrypt@Buffer(COMRAM[4]), SecureKeyGen@SKEYtemp(COMRAM[8]), SecureKeyGen@HOPtemp(COMRAM[4]), 
		 -> SecureKeyGen@Buffer(COMRAM[8]), NormalKeyGen@SKEYtemp(COMRAM[4]), NormalKeyGen@SEED(BANK2[4]), NormalKeyGen@HOPtemp(COMRAM[4]), 
		 -> NormalKeyGen@Buffer(COMRAM[8]), DKEY(BANK2[8]), classic_data(BANK2[16]), I2C1_WriteNBytes@dat(COMRAM[17]), 
		 -> i2c_writeNBytes@dat(COMRAM[17]), 

    memcpy@s1	PTR const void  size(2) Largest target is 64
		 -> classic_data.raw_data(BANK2[4]), Decrypt@Buffer(COMRAM[4]), SecureKeyGen@SKEYtemp(COMRAM[8]), SecureKeyGen@HOPtemp(COMRAM[4]), 
		 -> SecureKeyGen@Buffer(COMRAM[8]), NormalKeyGen@SKEYtemp(COMRAM[4]), NormalKeyGen@SEED(BANK2[4]), NormalKeyGen@HOPtemp(COMRAM[4]), 
		 -> NormalKeyGen@Buffer(COMRAM[8]), classic_data.serialnumber(BANK2[4]), classic_data(BANK2[16]), BufferRF(BANK2[9]), 
		 -> RemoveSerial@tempSerial(BANK0[4]), saveNewSerial@tempSerial(BANK0[4]), var_sys_NVM(BANK0[64]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 64
		 -> classic_data.raw_data(BANK2[4]), Decrypt@Buffer(COMRAM[4]), SecureKeyGen@SKEYtemp(COMRAM[8]), SecureKeyGen@HOPtemp(COMRAM[4]), 
		 -> SecureKeyGen@Buffer(COMRAM[8]), NormalKeyGen@SKEYtemp(COMRAM[4]), NormalKeyGen@SEED(BANK2[4]), NormalKeyGen@HOPtemp(COMRAM[4]), 
		 -> NormalKeyGen@Buffer(COMRAM[8]), classic_data.serialnumber(BANK2[4]), classic_data(BANK2[16]), BufferRF(BANK2[9]), 
		 -> RemoveSerial@tempSerial(BANK0[4]), saveNewSerial@tempSerial(BANK0[4]), var_sys_NVM(BANK0[64]), 

    eusartparser@package	PTR struct package_t size(2) Largest target is 7
		 -> main@package(BANK2[7]), 

    confirmpackage@package	PTR struct package_t size(2) Largest target is 7
		 -> main@package(BANK2[7]), 

    read_eusartparser@package	PTR struct package_t size(2) Largest target is 7
		 -> main@package(BANK2[7]), 

    init_package@package	PTR struct package_t size(2) Largest target is 7
		 -> main@package(BANK2[7]), 

    sm_send_event@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_send_event@psm	PTR struct . size(2) Largest target is 12
		 -> controlLearning_stateMachine(BANK2[11]), controlGate_stateMachine(BANK1[11]), main_stateMachine(BANK1[11]), menuConfiguration_stateMachine(BANK2[11]), 

    sm_get_current_state@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_get_current_state@psm	PTR struct . size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_restart@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_restart@psm	PTR struct . size(2) Largest target is 12
		 -> controlLearning_stateMachine(BANK2[11]), controlGate_stateMachine(BANK1[11]), main_stateMachine(BANK1[11]), menuConfiguration_stateMachine(BANK2[11]), 

    sm_init@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_init@psm	PTR struct . size(2) Largest target is 12
		 -> controlLearning_stateMachine(BANK2[11]), controlGate_stateMachine(BANK1[11]), main_stateMachine(BANK1[11]), menuConfiguration_stateMachine(BANK2[11]), 

    sm_execute_menuConfiguration@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_execute_menuConfiguration@psm	PTR struct . size(2) Largest target is 12
		 -> menuConfiguration_stateMachine(BANK2[11]), 

    S6624$Value	PTR unsigned char  size(2) Largest target is 64
		 -> setValueToEdit@value(BANK1[1]), var_sys_NVM(BANK0[64]), NULL(NULL[0]), 

    edit_Param.Value	PTR unsigned char  size(2) Largest target is 64
		 -> setValueToEdit@value(BANK1[1]), var_sys_NVM.walkTime(BANK0[1]), var_sys_NVM.softStart(BANK0[1]), var_sys_NVM.softstop(BANK0[1]), 
		 -> var_sys_NVM.flashRGBMode(BANK0[1]), var_sys_NVM.velocityDecelaration(BANK0[1]), var_sys_NVM.operationMode(BANK0[1]), var_sys_NVM.autoTimeFullClose(BANK0[1]), 
		 -> var_sys_NVM.Stopboton(BANK0[1]), var_sys_NVM.logicDigital(BANK0[1]), var_sys_NVM.Direction_motor(BANK0[1]), var_sys_NVM.folow_me(BANK0[1]), 
		 -> var_sys_NVM.ligthTime(BANK0[1]), var_sys_NVM.autoTimeWalkClose(BANK0[1]), var_sys_NVM.programmingDistance(BANK0[1]), var_sys_NVM.flashLightMode(BANK0[1]), 
		 -> var_sys_NVM.securityBandInOpen(BANK0[1]), var_sys_NVM.securityBandType(BANK0[1]), var_sys_NVM.securityBandIsON(BANK0[1]), var_sys_NVM.photoCellInOpen(BANK0[1]), 
		 -> var_sys_NVM.photoCellIsON(BANK0[1]), var_sys_NVM.decelarationClose(BANK0[1]), var_sys_NVM.motorPower(BANK0[1]), var_sys_NVM.decelarationOpen(BANK0[1]), 
		 -> var_sys_NVM.homemPresente(BANK0[1]), var_sys_NVM.TypeofMotor(BANK0[1]), var_sys_NVM.decelarationSensivity(BANK0[1]), var_sys_NVM.motorSensitivity(BANK0[1]), 
		 -> var_sys_NVM.electricBrake(BANK0[1]), var_sys_NVM(BANK0[64]), NULL(NULL[0]), 

    sm_execute_main@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_execute_main@psm	PTR struct . size(2) Largest target is 12
		 -> main_stateMachine(BANK1[11]), 

    sm_execute_ControlLearning@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_execute_ControlLearning@psm	PTR struct . size(2) Largest target is 12
		 -> controlLearning_stateMachine(BANK2[11]), 

    sm_execute_ControlGate@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_execute_ControlGate@psm	PTR struct . size(2) Largest target is 12
		 -> controlGate_stateMachine(BANK1[11]), 

    decrementTimeslot@ts	PTR int  size(2) Largest target is 72
		 -> ts_system.TimeShowVersion(BANK1[2]), ts_system.TimeLearningDecelaration(BANK1[2]), ts_system.TimeWaitToGetCurrent(BANK1[2]), ts_system.InvertionTimeClosingFromOpen(BANK1[2]), 
		 -> ts_system.TimeWaitReleCapacitor(BANK1[2]), ts_system.TimeInversionStart(BANK1[2]), ts_system.TimeStopedBeforeDecelaration(BANK1[2]), ts_system.TimeWaitToNextState(BANK1[2]), 
		 -> ts_system.timeFreqFlashligth(BANK1[2]), ts_system.timeFreqRGB(BANK1[2]), ts_system.timeWaitToClose(BANK1[2]), ts_system.timeOpenWalk(BANK1[2]), 
		 -> ts_system.timeoutMenu(BANK1[2]), ts_system.timeFreqDigit(BANK1[2]), ts_system.timewaitFlashRGB(BANK1[2]), ts_system.TimeStopElectricBrake(BANK1[2]), 
		 -> ts_system.Debug_TS(BANK1[2]), ts_system.timeSinalizationDigit(BANK1[2]), ts_system.TimeLastCommand(BANK1[2]), ts_system.timeBetweenSaveCounters(BANK1[2]), 
		 -> ts_system.TimeCurrentAlarm(BANK1[2]), ts_system.TimeCurrentWaitForAlarm(BANK1[2]), ts_system.TimeReleCapacitor(BANK1[2]), ts_system.TimeChargeCondesador(BANK1[2]), 
		 -> ts_system.TimeTransitionDecelaration(BANK1[2]), ts_system.timewaitBeforeSoftStart(BANK1[2]), ts_system.timeSoftStart(BANK1[2]), ts_system.TimeElectricBrake(BANK1[2]), 
		 -> ts_system.TimeStopADCZeroOffsetCalc(BANK1[2]), ts_system(BANK1[72]), 

    controlLearning_stateMachine.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    controlGate_stateMachine.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    main_stateMachine.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S4647$parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    menuConfiguration_stateMachine.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    verifyProgramingMode@classic_data	PTR struct . size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    keeloq_classic_decrypt_packet@data	PTR struct . size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    DecryptPacket_12BIT@data	PTR unsigned char  size(2) Largest target is 9
		 -> BufferRF(BANK2[9]), 

    DecryptPacket_12BIT@classic_data	PTR struct . size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    keeloqDecryptPacket@data	PTR unsigned char  size(2) Largest target is 9
		 -> BufferRF(BANK2[9]), 

    keeloqDecryptPacket@classic_data	PTR struct . size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    getHopCode@data	PTR struct . size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    HopCHK@data	PTR struct . size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    DecCHK@data	PTR struct . size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    Decrypt@packet	PTR unsigned char  size(2) Largest target is 16
		 -> SecureKeyGen@HOPtemp(COMRAM[4]), NormalKeyGen@Buffer(COMRAM[8]), classic_data(BANK2[16]), 

    NormalKeyGen@serial	PTR unsigned long  size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    sp__getClassicManufCode	PTR void  size(2) Largest target is 8
		 -> DKEY(BANK2[8]), 

    getSerialCmd@serial	PTR unsigned long  size(1) Largest target is 4
		 -> controlSelectRemote@tempSerial(BANK0[4]), 

    SaveNVM_VarSystem@point	PTR unsigned char  size(1) Largest target is 64
		 -> var_sys_NVM(BANK0[64]), 

    ReadSerial@tempSerial	PTR unsigned long  size(1) Largest target is 4
		 -> eusartparser@serial(BANK0[4]), 

    validateRemoteSerialNumber@position	PTR unsigned char  size(2) Largest target is 16
		 -> eusartparser@pos(BANK0[1]), controlSelectRemote@pos(BANK0[1]), classic_data(BANK2[16]), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), Absolute function(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), Absolute function(), 

    I2C1_SetCallback@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_SetCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F535(), wr2RegCompleteHandler@i2c1_master_example$F523(), wr1RegCompleteHandler@i2c1_master_example$F517(), 
		 -> rd2RegCompleteHandler@i2c1_master_example$F511(), rd1RegCompleteHandler@i2c1_master_example$F500(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), wr1RegCompleteHandler(), 

    I2C1_SetAddressNackCallback@ptr	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    I2C1_SetAddressNackCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), 

    I2C1_SetDataCompleteCallback@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_SetDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F535(), wr2RegCompleteHandler@i2c1_master_example$F523(), wr1RegCompleteHandler@i2c1_master_example$F517(), 
		 -> rd2RegCompleteHandler@i2c1_master_example$F511(), rd1RegCompleteHandler@i2c1_master_example$F500(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), wr1RegCompleteHandler(), 

    I2C1_SetBuffer@buffer	PTR void  size(2) Largest target is 64
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 
		 -> I2C1_ReadDataBlock@reg(COMRAM[1]), I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_WriteNBytes@dat(COMRAM[17]), I2C1_Write2ByteRegister@reg(COMRAM[1]), 
		 -> I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@reg(COMRAM[1]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@reg(COMRAM[1]), 
		 -> I2C1_Read2ByteRegister@returnValue(COMRAM[2]), I2C1_Read1ByteRegister@reg(COMRAM[1]), I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@reg(COMRAM[2]), 
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@reg(COMRAM[1]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@reg(COMRAM[1]), 
		 -> i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@reg(COMRAM[1]), i2c_read1ByteRegister@d2(COMRAM[1]), i2c_writeNBytes@dat(COMRAM[17]), 
		 -> i2c_write1ByteRegister@reg(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    S935$data_ptr	PTR unsigned char  size(2) Largest target is 64
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 
		 -> I2C1_ReadDataBlock@reg(COMRAM[1]), I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_WriteNBytes@dat(COMRAM[17]), I2C1_Write2ByteRegister@reg(COMRAM[1]), 
		 -> I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@reg(COMRAM[1]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@reg(COMRAM[1]), 
		 -> I2C1_Read2ByteRegister@returnValue(COMRAM[2]), I2C1_Read1ByteRegister@reg(COMRAM[1]), I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@reg(COMRAM[2]), 
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@reg(COMRAM[1]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@reg(COMRAM[1]), 
		 -> i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@reg(COMRAM[1]), i2c_read1ByteRegister@d2(COMRAM[1]), i2c_writeNBytes@dat(COMRAM[17]), 
		 -> i2c_write1ByteRegister@reg(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_Status.data_ptr	PTR unsigned char  size(2) Largest target is 64
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 
		 -> I2C1_ReadDataBlock@reg(COMRAM[1]), I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_WriteNBytes@dat(COMRAM[17]), I2C1_Write2ByteRegister@reg(COMRAM[1]), 
		 -> I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@reg(COMRAM[1]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@reg(COMRAM[1]), 
		 -> I2C1_Read2ByteRegister@returnValue(COMRAM[2]), I2C1_Read1ByteRegister@reg(COMRAM[1]), I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@reg(COMRAM[2]), 
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@reg(COMRAM[1]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@reg(COMRAM[1]), 
		 -> i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@reg(COMRAM[1]), i2c_read1ByteRegister@d2(COMRAM[1]), i2c_writeNBytes@dat(COMRAM[17]), 
		 -> i2c_write1ByteRegister@reg(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    S935$callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_Status.callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    S935$callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F535(), 
		 -> wr2RegCompleteHandler@i2c1_master_example$F523(), wr1RegCompleteHandler@i2c1_master_example$F517(), rd2RegCompleteHandler@i2c1_master_example$F511(), rd1RegCompleteHandler@i2c1_master_example$F500(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), 

    I2C1_Status.callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F535(), 
		 -> wr2RegCompleteHandler@i2c1_master_example$F523(), wr1RegCompleteHandler@i2c1_master_example$F517(), rd2RegCompleteHandler@i2c1_master_example$F511(), rd1RegCompleteHandler@i2c1_master_example$F500(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), 

    i2c1_fsmStateTable	const PTR FTN()enum E10442[16] size(2) Largest target is 1
		 -> I2C1_DO_ADDRESS_NACK(), I2C1_DO_RESET(), I2C1_DO_RX_NACK_RESTART(), I2C1_DO_RX_NACK_STOP(), 
		 -> I2C1_DO_RX_ACK(), I2C1_DO_SEND_STOP(), I2C1_DO_SEND_RESTART(), I2C1_DO_SEND_RESTART_WRITE(), 
		 -> I2C1_DO_SEND_RESTART_READ(), I2C1_DO_TX_EMPTY(), I2C1_DO_RCEN(), I2C1_DO_RX(), 
		 -> I2C1_DO_TX(), I2C1_DO_SEND_ADR_WRITE(), I2C1_DO_SEND_ADR_READ(), I2C1_DO_IDLE(), 

    rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr.data	PTR unsigned char  size(2) Largest target is 64
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    wr2RegCompleteHandler@i2c1_master_example$F523@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    wr1RegCompleteHandler@i2c1_master_example$F517@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    rd2RegCompleteHandler@i2c1_master_example$F511@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    rd1RegCompleteHandler@i2c1_master_example$F500@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    bufferBlock.data	PTR unsigned char  size(2) Largest target is 64
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    i2c_readDataBlock@data	PTR void  size(2) Largest target is 64
		 -> eusartparser@serial(BANK0[4]), var_sys_NVM.homemPresente(BANK0[1]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), var_sys_NVM.positionRemotesFull(BANK0[1]), 
		 -> memoryTEMP(BANK2[16]), var_sys_NVM.learningCurrentNormalClose(BANK0[2]), var_sys_NVM(BANK0[64]), 

    d.data	PTR unsigned char  size(2) Largest target is 64
		 -> eusartparser@serial(BANK0[4]), var_sys_NVM.homemPresente(BANK0[1]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), var_sys_NVM.positionRemotesFull(BANK0[1]), 
		 -> memoryTEMP(BANK2[16]), var_sys_NVM.learningCurrentNormalClose(BANK0[2]), var_sys_NVM(BANK0[64]), 

    S429$data	PTR unsigned char  size(2) Largest target is 64
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    rdBlkRegCompleteHandler@p.data	PTR unsigned char  size(2) Largest target is 64
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    rdBlkRegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    wr2RegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    rd2RegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    rd1RegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    sp__memcpy	PTR void  size(2) Largest target is 17
		 -> controlSelectRemote@tempSerial(BANK0[4]), Decrypt@Buffer(COMRAM[4]), SecureKeyGen@SKEYtemp(COMRAM[8]), SecureKeyGen@HOPtemp(COMRAM[4]), 
		 -> SecureKeyGen@Buffer(COMRAM[8]), NormalKeyGen@SKEYtemp(COMRAM[4]), NormalKeyGen@SEED(BANK2[4]), NormalKeyGen@HOPtemp(COMRAM[4]), 
		 -> NormalKeyGen@Buffer(COMRAM[8]), DKEY(BANK2[8]), classic_data(BANK2[16]), I2C1_WriteNBytes@dat(COMRAM[17]), 
		 -> i2c_writeNBytes@dat(COMRAM[17]), 

    i2c_writeNBytes@data	PTR void  size(1) Largest target is 64
		 -> RemoveSerial@tempSerial(BANK0[4]), saveNewSerial@tempSerial(BANK0[4]), var_sys_NVM(BANK0[64]), 

    wr1RegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Receive_ISR(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Transmit_ISR(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMRAM

    _sm_execute_menuConfiguration->_ResetDefaultMemory
    _sm_execute_menuConfiguration->_setValueToEdit
    _load_New_Menu->_SetSegmentValueIntermitentMain
    _controlSelectRemote->_RemoveSerial
    _controlSelectRemote->_saveNewSerial
    _controlSelectRemote->_validateRemoteSerialNumber
    _getSerialCmd->_memcpy
    _controlSaveRemote->_SetSegmentValueIntermitentMain
    ___awdiv->___lbmod
    _SetSegmentValueMain->___awdiv
    _controlLearnDigit->_SetSegmentValueLearn
    _sm_execute_ControlGate->_sm_execute_ControlLearning
    _generateErrorLearnig->_sm_init
    _sm_init->_sm_restart
    _setPositionInvertionInOpening->_getTimeDecelaration
    _controlVelocity->_getStateOpenPosition
    _getStateOpenPosition->_getTimeDecelaration
    _InitSoftStop->_GetMotorPower
    _CloseOrder->_sm_send_event
    _setPositionInvertionInClosing->_getTimeDecelaration
    _getTimeDecelaration->___lmul
    ___lmul->___lldiv
    _StopOrder->_sm_send_event
    _GetSecurityStateInClosing->_SetSegmentValueIntermitent
    _WaitPreFlash->_sm_send_event
    _OpenFullOrder->_sm_send_event
    _OpenWalkOrder->_sm_send_event
    _sm_send_event->_sm_get_current_state
    _InitSoftStart->_GetMotorPower
    _GetSecurityStateInOpening->_SetSegmentValueIntermitent
    _GetOpenOrder->_SetSegmentValueIntermitentMain
    _SetSegmentValueIntermitentMain->___awdiv
    _read_package->_EUSART1_Read
    _keeloqDecryptPacket->_validateRemoteSerialNumber
    _keeloq_classic_decrypt_packet->_NormalKeyGen
    _NormalKeyGen->_Decrypt
    _Decrypt->_memcpy
    _HopCHK->_getHopCode
    _getHopCode->___wmul
    _DecryptPacket_12BIT->_validateRemoteSerialNumber
    _loadNVM_VarSystem->_ResetDefaultMemory
    _loadNVM_VarSystem->_checkNVM_VarSystem
    _eusartparser->_RemoveSerial
    _eusartparser->_saveNewSerial
    _eusartparser->_validateRemoteSerialNumber
    _validateRemoteSerialNumber->_i2c_readDataBlock
    _saveNewSerial->_i2c_writeNBytes
    _read_eusartparser->_write_package
    _write_package->_EUSART1_Write
    _confirmpackage->_init_package
    _cmdMemoryIsEmpty->_i2c_readDataBlock
    _RemoveSerial->_i2c_writeNBytes
    _ReadSerial->_i2c_readDataBlock
    _ShowVersion->_SetSegmentValue
    _SetSegmentValue->___awdiv
    _SYSTEM_Initialize->_TMR1_Initialize
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler
    _ControlMotor->_VerifyElectricalBrake
    _ControlLights->_setRGB_ON
    _setRGB_ON->_RGB_Set
    _ControlCurrent->_getCurrentComparator
    _refreshCurrent->_sumHIST
    _refreshADCZeroOffset->___lwdiv
    _getCurrentComparator->___wmul
    _SaveNVM_VarSystem->_i2c_writeNBytes
    _I2C1_SetAddressNackCallback->_I2C1_SetCallback
    _I2C1_MasterWrite->_I2C1_MasterOperation
    _I2C1_Poller->_I2C1_MasterFsm
    _I2C1_MasterFsm->_I2C1_DO_ADDRESS_NACK
    _I2C1_MasterFsm->_I2C1_DO_RX
    _I2C1_MasterFsm->_I2C1_DO_TX
    _I2C1_MasterFsm->_I2C1_DO_TX_EMPTY
    _I2C1_DO_TX_EMPTY->_I2C1_CallbackReturnReset
    _I2C1_DO_TX_EMPTY->_I2C1_CallbackReturnStop
    _I2C1_DO_TX_EMPTY->_rd1RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_rd1RegCompleteHandler@i2c1_master_example$F500
    _I2C1_DO_TX_EMPTY->_rd2RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_rd2RegCompleteHandler@i2c1_master_example$F511
    _I2C1_DO_TX_EMPTY->_rdBlkRegCompleteHandler
    _I2C1_DO_TX_EMPTY->_rdBlkRegCompleteHandler@i2c1_master_example$F535
    _I2C1_DO_TX_EMPTY->_wr1RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_wr1RegCompleteHandler@i2c1_master_example$F517
    _I2C1_DO_TX_EMPTY->_wr2RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_wr2RegCompleteHandler@i2c1_master_example$F523
    _I2C1_DO_TX->_I2C1_CallbackReturnReset
    _I2C1_DO_TX->_I2C1_CallbackReturnStop
    _I2C1_DO_TX->_rd1RegCompleteHandler
    _I2C1_DO_TX->_rd1RegCompleteHandler@i2c1_master_example$F500
    _I2C1_DO_TX->_rd2RegCompleteHandler
    _I2C1_DO_TX->_rd2RegCompleteHandler@i2c1_master_example$F511
    _I2C1_DO_TX->_rdBlkRegCompleteHandler
    _I2C1_DO_TX->_rdBlkRegCompleteHandler@i2c1_master_example$F535
    _I2C1_DO_TX->_wr1RegCompleteHandler
    _I2C1_DO_TX->_wr1RegCompleteHandler@i2c1_master_example$F517
    _I2C1_DO_TX->_wr2RegCompleteHandler
    _I2C1_DO_TX->_wr2RegCompleteHandler@i2c1_master_example$F523
    _I2C1_DO_SEND_ADR_WRITE->_I2C1_MasterSendTxData
    _I2C1_DO_RX->_I2C1_CallbackReturnReset
    _I2C1_DO_RX->_I2C1_CallbackReturnStop
    _I2C1_DO_RX->_rd1RegCompleteHandler
    _I2C1_DO_RX->_rd1RegCompleteHandler@i2c1_master_example$F500
    _I2C1_DO_RX->_rd2RegCompleteHandler
    _I2C1_DO_RX->_rd2RegCompleteHandler@i2c1_master_example$F511
    _I2C1_DO_RX->_rdBlkRegCompleteHandler
    _I2C1_DO_RX->_rdBlkRegCompleteHandler@i2c1_master_example$F535
    _I2C1_DO_RX->_wr1RegCompleteHandler
    _I2C1_DO_RX->_wr1RegCompleteHandler@i2c1_master_example$F517
    _I2C1_DO_RX->_wr2RegCompleteHandler
    _I2C1_DO_RX->_wr2RegCompleteHandler@i2c1_master_example$F523
    _I2C1_DO_ADDRESS_NACK->_I2C1_CallbackReturnReset
    _I2C1_DO_ADDRESS_NACK->_I2C1_CallbackReturnStop
    _I2C1_DO_ADDRESS_NACK->_rd1RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_rd1RegCompleteHandler@i2c1_master_example$F500
    _I2C1_DO_ADDRESS_NACK->_rd2RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_rd2RegCompleteHandler@i2c1_master_example$F511
    _I2C1_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler@i2c1_master_example$F535
    _I2C1_DO_ADDRESS_NACK->_wr1RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_wr1RegCompleteHandler@i2c1_master_example$F517
    _I2C1_DO_ADDRESS_NACK->_wr2RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_wr2RegCompleteHandler@i2c1_master_example$F523
    _wr2RegCompleteHandler@i2c1_master_example$F523->_I2C1_SetDataCompleteCallback
    _wr2RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _wr1RegCompleteHandler@i2c1_master_example$F517->_I2C1_SetDataCompleteCallback
    _wr1RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rdBlkRegCompleteHandler@i2c1_master_example$F535->_I2C1_SetDataCompleteCallback
    _rdBlkRegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rd2RegCompleteHandler@i2c1_master_example$F511->_I2C1_SetDataCompleteCallback
    _rd2RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rd1RegCompleteHandler@i2c1_master_example$F500->_I2C1_SetDataCompleteCallback
    _rd1RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _I2C1_SetDataCompleteCallback->_I2C1_SetCallback

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR2_ISR->_ReadADC
    _refreshSegment->_Segments_Set
    _controlTimeslots->_decrementTimeslot
    _ReadADC->_ADCC_GetSingleConversion
    _TMR1_ISR->_controlMotorForce
    _controlMotorForce->i2_GetMotorPower
    _TMR0_ISR->_rxi

Critical Paths under _main in BANK0

    _main->_eusartparser
    _sm_execute_main->_sm_execute_menuConfiguration
    _sm_execute_menuConfiguration->_controlSelectRemote
    _setValueToEdit->_SaveNVM_VarSystem
    _controlSelectRemote->_validateRemoteSerialNumber
    _sm_execute_ControlGate->_actionZone_Opening
    _sm_execute_ControlLearning->_SaveNVM_VarSystem
    _actionZone_Opening->_setPositionInvertionInClosing
    _controlVelocity->_getStateOpenPosition
    _actionZone_Closing->_setPositionInvertionInClosing
    _readRFButtons->_keeloqDecryptPacket
    _keeloqDecryptPacket->_validateRemoteSerialNumber
    _DecryptPacket_12BIT->_validateRemoteSerialNumber
    _loadNVM_VarSystem->_SaveNVM_VarSystem
    _checkNVM_VarSystem->_SaveNVM_VarSystem
    _ResetDefaultMemory->_SaveNVM_VarSystem
    _eusartparser->_validateRemoteSerialNumber
    _ControlCounterMoves->_SaveNVM_VarSystem

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0 8899516
                                              0 BANK2      7     7      0
                _ControlCounterMoves
                     _ControlCurrent
                      _ControlInputs
                      _ControlLights
                       _ControlMotor
                _EUSART1_is_rx_ready
                       _InitReceiver
                  _SYSTEM_Initialize
                    _SetSegmentValue
                        _ShowVersion
                    _WWDT_SoftEnable
                    _WWDT_TimerClear
                    _controlVelocity
                       _eusartparser
                      _getKeyPressed
                  _loadNVM_VarSystem
                         _readInputs
                      _readRFButtons
                       _read_package
                         _readbutton
             _sm_execute_ControlGate
                    _sm_execute_main
                            _sm_init
 ---------------------------------------------------------------------------------
 (1) _sm_execute_main                                      4     2      2 3276122
                                             21 BANK0      4     2      2
     _SetSegmentValueIntermitentMain
                _SetSegmentValueMain
                      _load_New_Menu
       _sm_execute_menuConfiguration
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (2) _sm_execute_menuConfiguration                         4     2      2 3249934
                                             17 BANK0      4     2      2
                    _ClearFlag_rfCMD
                 _ResetDefaultMemory
                  _SaveNVM_VarSystem
     _SetSegmentValueIntermitentMain
                _SetSegmentValueMain
                            ___lbdiv
                            ___lldiv
                             ___lmul
                            ___lwdiv
                  _controlLearnDigit
                  _controlSaveRemote
                _controlSelectRemote
                      _load_New_Menu
                     _setValueToEdit
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _setValueToEdit                                       7     6      1  719702
                                             57 COMRAM     1     0      1
                                              4 BANK0      6     6      0
                       _InitReceiver
                  _SaveNVM_VarSystem
                   _cmdMemoryIsEmpty
                      _load_New_Menu
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (4) _load_New_Menu                                        4     4      0    7475
                                             31 COMRAM     4     4      0
     _SetSegmentValueIntermitentMain
                _SetSegmentValueMain
 ---------------------------------------------------------------------------------
 (4) _InitReceiver                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _controlSelectRemote                                  9     9      0 1778943
                                              8 BANK0      9     9      0
                    _ClearFlag_rfCMD
                       _RemoveSerial
                  _SaveNVM_VarSystem
                    _SetSegmentValue
     _SetSegmentValueIntermitentMain
                _SetSegmentValueMain
                            ___awdiv
                            ___lbmod
                   _cmdMemoryIsEmpty
                       _getSerialCmd
                      _getTypeRemote
                      _saveNewSerial
                      _sm_send_event
         _validateRemoteSerialNumber
 ---------------------------------------------------------------------------------
 (4) _getTypeRemote                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _getSerialCmd                                         2     1      1    6667
                                             26 COMRAM     2     1      1
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _controlSaveRemote                                    1     1      0   21448
                                             31 COMRAM     1     1      0
                    _ClearFlag_rfCMD
     _SetSegmentValueIntermitentMain
                _SetSegmentValueMain
                            ___awdiv
                            ___lbmod
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (4) ___lbmod                                              4     3      1    1492
                                             15 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4    1705
                                             19 COMRAM     8     4      4
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (5) _SetSegmentValueMain                                  2     1      1    2402
                                             27 COMRAM     2     1      1
                            ___awdiv (ARG)
                            ___lbdiv (ARG)
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (4) _ClearFlag_rfCMD                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _controlLearnDigit                                    0     0      0      31
               _SetSegmentValueLearn
 ---------------------------------------------------------------------------------
 (4) _SetSegmentValueLearn                                 3     3      0      31
                                             15 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     601
                                             15 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _sm_execute_ControlGate                               5     3      2  633789
                                             15 BANK0      5     3      2
                       _GetOpenOrder
         _SetSegmentValueIntermitent
                       _WaitPreFlash
                  _actionZone_Closed
                 _actionZone_Closing
                  _actionZone_Opened
                 _actionZone_Opening
         _sm_execute_ControlLearning
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (2) _sm_execute_ControlLearning                           5     3      2  372027
                                             57 COMRAM     1     1      0
                                              4 BANK0      4     2      2
                       _GetOpenOrder
                  _SaveNVM_VarSystem
                      _calculateMean
                 _clearLearningValue
               _generateErrorLearnig
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _generateErrorLearnig                                 0     0      0    2622
                            _sm_init
 ---------------------------------------------------------------------------------
 (1) _sm_init                                              5     0      5    2622
                                             17 COMRAM     5     0      5
                         _sm_restart
 ---------------------------------------------------------------------------------
 (2) _sm_restart                                           2     0      2     214
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _clearLearningValue                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _calculateMean                                       12     4      8    1241
                                             15 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) _actionZone_Opening                                   3     3      0   52477
                                             12 BANK0      3     3      0
                         _CloseOrder
                       _GetOpenOrder
          _GetSecurityStateInClosing
          _GetSecurityStateInOpening
                   _InitFullAutoTime
                   _InitWalkAutoTime
         _SetSegmentValueIntermitent
                          _StopOrder
                     _VerifyFollowMe
                    _controlVelocity
      _setPositionInvertionInClosing
      _setPositionInvertionInOpening
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _setPositionInvertionInOpening                        8     8      0    1207
                                             49 COMRAM     8     8      0
                _getTimeDecelaration
 ---------------------------------------------------------------------------------
 (3) _controlVelocity                                      1     1      0    3806
                                              2 BANK0      1     1      0
          _ControlDecelarationFactor
                       _InitSoftStop
               _getStateOpenPosition
                _getTimeDecelaration
 ---------------------------------------------------------------------------------
 (4) _getStateOpenPosition                                11    11      0    2562
                                             49 COMRAM     9     9      0
                                              0 BANK0      2     2      0
                             ___lmul
                _getTimeDecelaration
 ---------------------------------------------------------------------------------
 (4) _InitSoftStop                                         1     1      0      37
                                             19 COMRAM     1     1      0
                      _GetMotorPower
 ---------------------------------------------------------------------------------
 (4) _ControlDecelarationFactor                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _actionZone_Opened                                    2     2      0   42796
                                             31 COMRAM     2     2      0
                         _CloseOrder
                       _GetOpenOrder
          _GetSecurityStateInClosing
                   _InitFullAutoTime
                   _InitWalkAutoTime
                      _OpenFullOrder
                      _OpenWalkOrder
                     _VerifyFollowMe
 ---------------------------------------------------------------------------------
 (3) _VerifyFollowMe                                       1     1      0      31
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _CloseOrder                                           0     0      0   11293
                      _InitSoftStart
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (2) _actionZone_Closing                                   2     2      0   58040
                                             49 COMRAM     2     2      0
                       _GetOpenOrder
          _GetSecurityStateInClosing
                   _InitFullAutoTime
                   _InitWalkAutoTime
                      _OpenFullOrder
                      _OpenWalkOrder
         _SetSegmentValueIntermitent
                          _StopOrder
                             ___lmul
      _setPositionInvertionInClosing
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _setPositionInvertionInClosing                       12    12      0    1207
                                              0 BANK0     12    12      0
                _getTimeDecelaration
 ---------------------------------------------------------------------------------
 (4) _getTimeDecelaration                                  9     5      4    1207
                                             40 COMRAM     9     5      4
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8    1176
                                             28 COMRAM    12     4      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) _StopOrder                                            0     0      0   11256
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _GetSecurityStateInClosing                            0     0      0    1893
         _SetSegmentValueIntermitent
 ---------------------------------------------------------------------------------
 (2) _actionZone_Closed                                    2     2      0   65057
                                             31 COMRAM     2     2      0
                       _GetOpenOrder
          _GetSecurityStateInOpening
                   _InitFullAutoTime
                   _InitWalkAutoTime
                      _OpenFullOrder
                      _OpenWalkOrder
                       _WaitPreFlash
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _WaitPreFlash                                         0     0      0   22549
                   _InitFullAutoTime
                      _OpenFullOrder
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _OpenFullOrder                                        0     0      0   11293
                      _InitSoftStart
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _InitFullAutoTime                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _OpenWalkOrder                                        4     4      0   11389
                                             23 COMRAM     4     4      0
                      _InitSoftStart
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (2) _sm_send_event                                        6     2      4   11256
                                             17 COMRAM     6     2      4
               _sm_get_current_state
 ---------------------------------------------------------------------------------
 (3) _sm_get_current_state                                 2     0      2     121
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _InitSoftStart                                        1     1      0      37
                                             19 COMRAM     1     1      0
                      _GetMotorPower
 ---------------------------------------------------------------------------------
 (3) _InitWalkAutoTime                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _GetSecurityStateInOpening                            0     0      0    1893
         _SetSegmentValueIntermitent
 ---------------------------------------------------------------------------------
 (3) _SetSegmentValueIntermitent                           4     1      3    1893
                                             15 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (3) _GetOpenOrder                                         0     0      0    6454
     _SetSegmentValueIntermitentMain
                            ___lbdiv
 ---------------------------------------------------------------------------------
 (3) ___lbdiv                                              4     3      1    1861
                                             15 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (5) _SetSegmentValueIntermitentMain                       4     1      3    4593
                                             27 COMRAM     4     1      3
                            ___awdiv (ARG)
                            ___lbdiv (ARG)
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _readbutton                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _read_package                                        14     7      7     429
                                             16 COMRAM    14     7      7
                       _EUSART1_Read
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Read                                         1     1      0      37
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _readRFButtons                                        0     0      0  743020
                _DecryptPacket_12BIT
                _keeloqDecryptPacket
 ---------------------------------------------------------------------------------
 (2) _keeloqDecryptPacket                                 10     6      4  385615
                                              8 BANK0     10     6      4
                             _DecCHK
                             _HopCHK
      _keeloq_classic_decrypt_packet
                             _memcpy
         _validateRemoteSerialNumber
               _verifyProgramingMode
 ---------------------------------------------------------------------------------
 (3) _verifyProgramingMode                                 3     1      2     152
                                             15 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _keeloq_classic_decrypt_packet                        5     3      2   23218
                                             55 COMRAM     2     0      2
                                              0 BANK0      3     3      0
                            _Decrypt
                       _NormalKeyGen
 ---------------------------------------------------------------------------------
 (4) _NormalKeyGen                                        18    16      2   15069
                                             37 COMRAM    18    16      2
                            _Decrypt
                      _LoadManufCode
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _LoadManufCode                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _Decrypt                                             11     9      2    7935
                                             26 COMRAM    11     9      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _HopCHK                                               4     2      2    3969
                                             35 COMRAM     4     2      2
                          _ReqResync
                         _getHopCode
 ---------------------------------------------------------------------------------
 (4) _getHopCode                                          14    12      2    3541
                                             21 COMRAM    14    12      2
                          _ReqResync
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) _ReqResync                                            2     0      2     211
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _DecCHK                                               4     2      2     242
                                             15 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _DecryptPacket_12BIT                                  5     1      4  357405
                                              8 BANK0      5     1      4
                             _memcpy
         _validateRemoteSerialNumber
 ---------------------------------------------------------------------------------
 (1) _readInputs                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _loadNVM_VarSystem                                    0     0      0 1742040
             _I2C1_Read1ByteRegister
                 _ResetDefaultMemory
                  _SaveNVM_VarSystem
                 _checkNVM_VarSystem
                  _i2c_readDataBlock
 ---------------------------------------------------------------------------------
 (2) _checkNVM_VarSystem                                   1     1      0  349391
                                             57 COMRAM     1     1      0
                  _SaveNVM_VarSystem
 ---------------------------------------------------------------------------------
 (3) _ResetDefaultMemory                                   1     1      0  349369
                                             57 COMRAM     1     1      0
                  _SaveNVM_VarSystem
 ---------------------------------------------------------------------------------
 (2) _I2C1_Read1ByteRegister                               3     2      1  345691
                                             33 COMRAM     3     2      1
                         _I2C1_Close
                   _I2C1_MasterWrite
                          _I2C1_Open
        _I2C1_SetAddressNackCallback
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (1) _getKeyPressed                                        1     1      0      37
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _eusartparser                                        35    33      2 2136978
                                              8 BANK0     28    26      2
                         _ReadSerial
                       _RemoveSerial
                  _SaveNVM_VarSystem
                   _cmdMemoryIsEmpty
                     _confirmpackage
                  _read_eusartparser
                      _saveNewSerial
         _validateRemoteSerialNumber
                 _write_eusartparser
                      _write_package
 ---------------------------------------------------------------------------------
 (2) _write_eusartparser                                  19    12      7    1966
                                             15 COMRAM    19    12      7
 ---------------------------------------------------------------------------------
 (4) _validateRemoteSerialNumber                          21    14      7  350496
                                             45 COMRAM    13     6      7
                                              0 BANK0      8     8      0
                  _i2c_readDataBlock
 ---------------------------------------------------------------------------------
 (4) _saveNewSerial                                        8     3      5  349810
                                             57 COMRAM     1     1      0
                                              0 BANK0      7     2      5
                    _i2c_writeNBytes
 ---------------------------------------------------------------------------------
 (2) _read_eusartparser                                    4     2      2   12211
                                             23 COMRAM     4     2      2
                      _write_package
 ---------------------------------------------------------------------------------
 (2) _write_package                                        7     0      7    7947
                                             16 COMRAM     7     0      7
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (3) _EUSART1_Write                                        1     1      0      62
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _confirmpackage                                       3     0      3    7904
                                             17 COMRAM     3     0      3
                       _init_package
 ---------------------------------------------------------------------------------
 (3) _init_package                                         2     0      2     232
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _cmdMemoryIsEmpty                                     8     7      1  350671
                                             45 COMRAM     8     7      1
                  _i2c_readDataBlock
 ---------------------------------------------------------------------------------
 (4) _RemoveSerial                                         8     7      1  349543
                                             57 COMRAM     1     0      1
                                              0 BANK0      7     7      0
                    _i2c_writeNBytes
 ---------------------------------------------------------------------------------
 (2) _ReadSerial                                           5     3      2  348828
                                             45 COMRAM     5     3      2
                  _i2c_readDataBlock
 ---------------------------------------------------------------------------------
 (5) _i2c_readDataBlock                                   12     6      6  348313
                                             33 COMRAM    12     6      6
                         _I2C1_Close
                   _I2C1_MasterWrite
                          _I2C1_Open
        _I2C1_SetAddressNackCallback
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (1) _WWDT_TimerClear                                      2     2      0      40
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _WWDT_SoftEnable                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ShowVersion                                          0     0      0     602
                    _SetSegmentValue
 ---------------------------------------------------------------------------------
 (4) _SetSegmentValue                                      2     1      1     602
                                             27 COMRAM     2     1      1
                            ___awdiv (ARG)
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     968
                    _ADCC_Initialize
                 _EUSART1_Initialize
                    _I2C1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                    _WWDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WWDT_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0     121
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR2_SetInterruptHandler                             2     0      2     121
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      2     2      0     121
                                             17 COMRAM     2     2      0
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR1_SetInterruptHandler                             2     0      2     121
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     121
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2     121
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     605
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        2     0      2     121
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2     121
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2     121
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2     121
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2     121
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ControlMotor                                         7     7      0     319
                                             17 COMRAM     7     7      0
              _VerifyElectricalBrake
 ---------------------------------------------------------------------------------
 (2) _VerifyElectricalBrake                                2     2      0     161
                                             15 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ControlLights                                        0     0      0    1958
                   _setFlashLigth_ON
                          _setRGB_ON
 ---------------------------------------------------------------------------------
 (2) _setRGB_ON                                            5     3      2    1235
                                             16 COMRAM     5     3      2
                            _RGB_Set
 ---------------------------------------------------------------------------------
 (3) _RGB_Set                                              1     1      0      31
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _setFlashLigth_ON                                     2     0      2     723
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _ControlInputs                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ControlCurrent                                       4     4      0    5060
                                             34 COMRAM     4     4      0
                      _GetMotorPower
               _getCurrentComparator
               _refreshADCZeroOffset
                     _refreshCurrent
 ---------------------------------------------------------------------------------
 (2) _refreshCurrent                                       0     0      0     820
                  _saveEnergyADCHist
                       _sumEnergyADC
                            _sumHIST
 ---------------------------------------------------------------------------------
 (3) _sumHIST                                             17    13      4     461
                                             15 COMRAM    17    13      4
 ---------------------------------------------------------------------------------
 (3) _sumEnergyADC                                         9     7      2     238
                                             15 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 (3) _saveEnergyADCHist                                    2     0      2     121
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _refreshADCZeroOffset                                 3     3      0    1186
                                             22 COMRAM     3     3      0
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     781
                                             15 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _getCurrentComparator                                13     9      4    3017
                                             21 COMRAM    13     9      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    2878
                                             15 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) _GetMotorPower                                        4     4      0      37
                                             15 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (1) _ControlCounterMoves                                  0     0      0  349276
                  _SaveNVM_VarSystem
 ---------------------------------------------------------------------------------
 (4) _SaveNVM_VarSystem                                    4     4      0  349276
                                              0 BANK0      4     4      0
                    _i2c_writeNBytes
 ---------------------------------------------------------------------------------
 (5) _i2c_writeNBytes                                     24    19      5  349112
                                             33 COMRAM    24    19      5
                         _I2C1_Close
                   _I2C1_MasterWrite
                          _I2C1_Open
        _I2C1_SetAddressNackCallback
                     _I2C1_SetBuffer
                             _memcpy
 ---------------------------------------------------------------------------------
 (6) _memcpy                                              11     5      6    6478
                                             15 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (6) _I2C1_SetAddressNackCallback                          4     0      4    2859
                                             20 COMRAM     4     0      4
                   _I2C1_SetCallback
 ---------------------------------------------------------------------------------
 (6) _I2C1_Open                                            2     2      0      68
                                             15 COMRAM     2     2      0
                _I2C1_MasterClearIrq
                    _I2C1_MasterOpen
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterOpen                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterWrite                                     0     0      0  334109
               _I2C1_MasterOperation
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterOperation                                 2     2      0  334109
                                             31 COMRAM     2     2      0
                   _I2C1_MasterStart
                        _I2C1_Poller
 ---------------------------------------------------------------------------------
 (8) _I2C1_Poller                                          0     0      0  334041
                     _I2C1_MasterFsm
            _I2C1_MasterWaitForEvent
 ---------------------------------------------------------------------------------
 (9) _I2C1_MasterWaitForEvent                              0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_MasterFsm                                       3     3      0  334041
                                             28 COMRAM     3     3      0
               _I2C1_DO_ADDRESS_NACK *
                       _I2C1_DO_IDLE *
                       _I2C1_DO_RCEN *
                      _I2C1_DO_RESET *
                         _I2C1_DO_RX *
                     _I2C1_DO_RX_ACK *
            _I2C1_DO_RX_NACK_RESTART *
               _I2C1_DO_RX_NACK_STOP *
              _I2C1_DO_SEND_ADR_READ *
             _I2C1_DO_SEND_ADR_WRITE *
               _I2C1_DO_SEND_RESTART *
          _I2C1_DO_SEND_RESTART_READ *
         _I2C1_DO_SEND_RESTART_WRITE *
                  _I2C1_DO_SEND_STOP *
                         _I2C1_DO_TX *
                   _I2C1_DO_TX_EMPTY *
                _I2C1_MasterClearIrq
                  _I2C1_MasterIsNack
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_TX_EMPTY                                    2     2      0   83487
                                             26 COMRAM     2     2      0
                   Absolute function *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
               _I2C1_DO_SEND_RESTART
                  _I2C1_DO_SEND_STOP
                  _I2C1_MasterSetIrq
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterSetIrq                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_TX                                          2     2      0   83518
                                             26 COMRAM     2     2      0
                   Absolute function *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
          _I2C1_DO_SEND_RESTART_READ
         _I2C1_DO_SEND_RESTART_WRITE
                  _I2C1_DO_SEND_STOP
                  _I2C1_MasterIsNack
              _I2C1_MasterSendTxData
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterIsNack                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C1_DO_SEND_RESTART_WRITE                          0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (11) _I2C1_DO_SEND_RESTART_READ                           0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_SEND_ADR_WRITE                              0     0      0      31
              _I2C1_MasterSendTxData
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_SEND_ADR_READ                               0     0      0      31
              _I2C1_MasterSendTxData
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterSendTxData                               1     1      0      31
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_RX_ACK                                      0     0      0       0
                 _I2C1_MasterSendAck
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_RX                                          2     2      0   83487
                                             26 COMRAM     2     2      0
                   Absolute function *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
            _I2C1_DO_RX_NACK_RESTART
               _I2C1_DO_RX_NACK_STOP
               _I2C1_MasterGetRxData
                 _I2C1_MasterSendAck
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterSendAck                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterGetRxData                                0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_RX_NACK_STOP                                0     0      0       0
                _I2C1_MasterSendNack
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_RX_NACK_RESTART                             0     0      0       0
                _I2C1_MasterSendNack
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterSendNack                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_RESET                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_RCEN                                        0     0      0       0
                 _I2C1_MasterStartRx
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterStartRx                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_IDLE                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_ADDRESS_NACK                                2     2      0   83487
                                             26 COMRAM     2     2      0
                   Absolute function *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
               _I2C1_DO_SEND_RESTART
                  _I2C1_DO_SEND_STOP
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (11) _wr2RegCompleteHandler@i2c1_master_example$F523      2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _wr2RegCompleteHandler                               2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _wr1RegCompleteHandler@i2c1_master_example$F517      2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _wr1RegCompleteHandler                               2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rdBlkRegCompleteHandler@i2c1_master_example$F535    2     0      2    8343
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rdBlkRegCompleteHandler                             2     0      2    8343
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rd2RegCompleteHandler@i2c1_master_example$F511      2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rd2RegCompleteHandler                               2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rd1RegCompleteHandler@i2c1_master_example$F500      2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rd1RegCompleteHandler                               2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (6) _I2C1_SetDataCompleteCallback                         4     0      4    4339
                                             20 COMRAM     4     0      4
                   _I2C1_SetCallback
 ---------------------------------------------------------------------------------
 (7) _I2C1_SetCallback                                     5     1      4     997
                                             15 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (6) _I2C1_SetBuffer                                       4     0      4    3942
                                             15 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (11) _I2C1_DO_SEND_STOP                                   0     0      0       0
                    _I2C1_MasterStop
 ---------------------------------------------------------------------------------
 (12) _I2C1_MasterStop                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C1_DO_SEND_RESTART                                0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (12) _I2C1_MasterEnableRestart                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C1_CallbackReturnStop                             2     0      2       0
                                             24 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (11) _I2C1_CallbackReturnReset                            2     0      2     305
                                             24 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (16) Absolute function(Fake)                              2     0      2       0
 ---------------------------------------------------------------------------------
 (8) _I2C1_MasterStart                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C1_Close                                           1     1      0      37
                                             15 COMRAM     1     1      0
                _I2C1_MasterClearIrq
                   _I2C1_MasterClose
              _I2C1_MasterDisableIrq
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterDisableIrq                                0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterClose                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterClearIrq                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _INTERRUPT_InterruptManager                          6     6      0    2657
                                              9 COMRAM     6     6      0
                   Absolute function *
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
                           _TMR0_ISR
                           _TMR1_ISR
                           _TMR2_ISR
 ---------------------------------------------------------------------------------
 (15) _TMR2_ISR                                            0     0      0    2292
                   Absolute function *
                            _ReadADC
       _TMR2_DefaultInterruptHandler *
                   _controlTimeslots
                     _refreshSegment
 ---------------------------------------------------------------------------------
 (16) _refreshSegment                                      0     0      0      22
                       _Segments_Set
 ---------------------------------------------------------------------------------
 (17) _Segments_Set                                        1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (16) _controlTimeslots                                    0     0      0    2248
                  _decrementTimeslot
 ---------------------------------------------------------------------------------
 (17) _decrementTimeslot                                   4     2      2    2248
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (16) _TMR2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _ReadADC                                             3     3      0      22
                                              1 COMRAM     3     3      0
           _ADCC_GetSingleConversion
 ---------------------------------------------------------------------------------
 (17) _ADCC_GetSingleConversion                            1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (15) _TMR1_ISR                                            0     0      0     365
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                    _TMR1_WriteTimer
                  _controlMotorForce
 ---------------------------------------------------------------------------------
 (16) _controlMotorForce                                   5     5      0     136
                                              4 COMRAM     5     5      0
                    i2_GetMotorPower
            i2_VerifyElectricalBrake
 ---------------------------------------------------------------------------------
 (17) i2_VerifyElectricalBrake                             2     2      0     112
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (17) i2_GetMotorPower                                     4     4      0      24
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (16) _TMR1_WriteTimer                                     2     0      2     229
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (16) _TMR1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _TMR0_ISR                                            0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                                _rxi
 ---------------------------------------------------------------------------------
 (16) _rxi                                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (16) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _EUSART1_Transmit_ISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _EUSART1_Receive_ISR                                 0     0      0       0
                   Absolute function *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (16) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _EUSART1_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _EUSART1_DefaultErrorHandler                         0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (16) _EUSART1_RxDataHandler                               0     0      0       0
 ---------------------------------------------------------------------------------
 (16) Absolute function(Fake)                              2     0      2       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ControlCounterMoves
     _SaveNVM_VarSystem
       _i2c_writeNBytes
         _I2C1_Close
           _I2C1_MasterClearIrq
           _I2C1_MasterClose
           _I2C1_MasterDisableIrq
         _I2C1_MasterWrite
           _I2C1_MasterOperation
             _I2C1_MasterStart
             _I2C1_Poller
               _I2C1_MasterFsm
                 _I2C1_DO_ADDRESS_NACK *
                   Absolute function(Fake) *
                   _I2C1_CallbackReturnReset *
                   _I2C1_CallbackReturnStop *
                   _I2C1_DO_SEND_RESTART *
                     _I2C1_MasterEnableRestart
                   _I2C1_DO_SEND_STOP *
                     _I2C1_MasterStop
                   _rd1RegCompleteHandler *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                       _I2C1_SetCallback
                   _rd1RegCompleteHandler@i2c1_master_example$F500 *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _rd2RegCompleteHandler *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _rd2RegCompleteHandler@i2c1_master_example$F511 *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _rdBlkRegCompleteHandler *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _rdBlkRegCompleteHandler@i2c1_master_example$F535 *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _wr1RegCompleteHandler *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _wr1RegCompleteHandler@i2c1_master_example$F517 *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _wr2RegCompleteHandler *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _wr2RegCompleteHandler@i2c1_master_example$F523 *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                 _I2C1_DO_IDLE *
                 _I2C1_DO_RCEN *
                   _I2C1_MasterStartRx
                 _I2C1_DO_RESET *
                 _I2C1_DO_RX *
                   Absolute function(Fake) *
                   _I2C1_CallbackReturnReset *
                   _I2C1_CallbackReturnStop *
                   _I2C1_DO_RX_NACK_RESTART *
                     _I2C1_MasterSendNack
                   _I2C1_DO_RX_NACK_STOP *
                     _I2C1_MasterSendNack
                   _I2C1_MasterGetRxData *
                   _I2C1_MasterSendAck *
                   _rd1RegCompleteHandler *
                   _rd1RegCompleteHandler@i2c1_master_example$F500 *
                   _rd2RegCompleteHandler *
                   _rd2RegCompleteHandler@i2c1_master_example$F511 *
                   _rdBlkRegCompleteHandler *
                   _rdBlkRegCompleteHandler@i2c1_master_example$F535 *
                   _wr1RegCompleteHandler *
                   _wr1RegCompleteHandler@i2c1_master_example$F517 *
                   _wr2RegCompleteHandler *
                   _wr2RegCompleteHandler@i2c1_master_example$F523 *
                 _I2C1_DO_RX_ACK *
                   _I2C1_MasterSendAck
                 _I2C1_DO_RX_NACK_RESTART *
                 _I2C1_DO_RX_NACK_STOP *
                 _I2C1_DO_SEND_ADR_READ *
                   _I2C1_MasterSendTxData
                 _I2C1_DO_SEND_ADR_WRITE *
                   _I2C1_MasterSendTxData
                 _I2C1_DO_SEND_RESTART *
                 _I2C1_DO_SEND_RESTART_READ *
                   _I2C1_MasterEnableRestart
                 _I2C1_DO_SEND_RESTART_WRITE *
                   _I2C1_MasterEnableRestart
                 _I2C1_DO_SEND_STOP *
                 _I2C1_DO_TX *
                   Absolute function(Fake) *
                   _I2C1_CallbackReturnReset *
                   _I2C1_CallbackReturnStop *
                   _I2C1_DO_SEND_RESTART_READ *
                   _I2C1_DO_SEND_RESTART_WRITE *
                   _I2C1_DO_SEND_STOP *
                   _I2C1_MasterIsNack *
                   _I2C1_MasterSendTxData *
                   _rd1RegCompleteHandler *
                   _rd1RegCompleteHandler@i2c1_master_example$F500 *
                   _rd2RegCompleteHandler *
                   _rd2RegCompleteHandler@i2c1_master_example$F511 *
                   _rdBlkRegCompleteHandler *
                   _rdBlkRegCompleteHandler@i2c1_master_example$F535 *
                   _wr1RegCompleteHandler *
                   _wr1RegCompleteHandler@i2c1_master_example$F517 *
                   _wr2RegCompleteHandler *
                   _wr2RegCompleteHandler@i2c1_master_example$F523 *
                 _I2C1_DO_TX_EMPTY *
                   Absolute function(Fake) *
                   _I2C1_CallbackReturnReset *
                   _I2C1_CallbackReturnStop *
                   _I2C1_DO_SEND_RESTART *
                   _I2C1_DO_SEND_STOP *
                   _I2C1_MasterSetIrq *
                   _rd1RegCompleteHandler *
                   _rd1RegCompleteHandler@i2c1_master_example$F500 *
                   _rd2RegCompleteHandler *
                   _rd2RegCompleteHandler@i2c1_master_example$F511 *
                   _rdBlkRegCompleteHandler *
                   _rdBlkRegCompleteHandler@i2c1_master_example$F535 *
                   _wr1RegCompleteHandler *
                   _wr1RegCompleteHandler@i2c1_master_example$F517 *
                   _wr2RegCompleteHandler *
                   _wr2RegCompleteHandler@i2c1_master_example$F523 *
                 _I2C1_MasterClearIrq *
                 _I2C1_MasterIsNack *
               _I2C1_MasterWaitForEvent
         _I2C1_Open
           _I2C1_MasterClearIrq
           _I2C1_MasterOpen
         _I2C1_SetAddressNackCallback
           _I2C1_SetCallback
         _I2C1_SetBuffer
         _memcpy
   _ControlCurrent
     _GetMotorPower
     _getCurrentComparator
       ___wmul
     _refreshADCZeroOffset
       ___lwdiv
     _refreshCurrent
       _saveEnergyADCHist
       _sumEnergyADC
       _sumHIST
   _ControlInputs
   _ControlLights
     _setFlashLigth_ON
     _setRGB_ON
       _RGB_Set
   _ControlMotor
     _VerifyElectricalBrake
   _EUSART1_is_rx_ready
   _InitReceiver
   _SYSTEM_Initialize
     _ADCC_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _I2C1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
     _WWDT_Initialize
   _SetSegmentValue
     ___awdiv (ARG)
       ___lbmod (ARG)
     ___lbmod (ARG)
   _ShowVersion
     _SetSegmentValue
   _WWDT_SoftEnable
   _WWDT_TimerClear
   _controlVelocity
     _ControlDecelarationFactor
     _InitSoftStop
       _GetMotorPower
     _getStateOpenPosition
       ___lmul
         ___lldiv (ARG)
       _getTimeDecelaration
         ___lmul
     _getTimeDecelaration
   _eusartparser
     _ReadSerial
       _i2c_readDataBlock
         _I2C1_Close
         _I2C1_MasterWrite
         _I2C1_Open
         _I2C1_SetAddressNackCallback
         _I2C1_SetBuffer
         _I2C1_SetDataCompleteCallback
     _RemoveSerial
       _i2c_writeNBytes
     _SaveNVM_VarSystem
     _cmdMemoryIsEmpty
       _i2c_readDataBlock
     _confirmpackage
       _init_package
     _read_eusartparser
       _write_package
         _EUSART1_Write
     _saveNewSerial
       _i2c_writeNBytes
     _validateRemoteSerialNumber
       _i2c_readDataBlock
     _write_eusartparser
     _write_package
   _getKeyPressed
   _loadNVM_VarSystem
     _I2C1_Read1ByteRegister
       _I2C1_Close
       _I2C1_MasterWrite
       _I2C1_Open
       _I2C1_SetAddressNackCallback
       _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
     _ResetDefaultMemory
       _SaveNVM_VarSystem
     _SaveNVM_VarSystem
     _checkNVM_VarSystem
       _SaveNVM_VarSystem
     _i2c_readDataBlock
   _readInputs
   _readRFButtons
     _DecryptPacket_12BIT
       _memcpy
       _validateRemoteSerialNumber
     _keeloqDecryptPacket
       _DecCHK
       _HopCHK
         _ReqResync
         _getHopCode
           _ReqResync
           ___wmul
       _keeloq_classic_decrypt_packet
         _Decrypt
           _memcpy
         _NormalKeyGen
           _Decrypt
           _LoadManufCode
           _memcpy
       _memcpy
       _validateRemoteSerialNumber
       _verifyProgramingMode
   _read_package
     _EUSART1_Read
   _readbutton
   _sm_execute_ControlGate
     _GetOpenOrder
       _SetSegmentValueIntermitentMain
         ___awdiv (ARG)
         ___lbdiv (ARG)
         ___lbmod (ARG)
       ___lbdiv
     _SetSegmentValueIntermitent
     _WaitPreFlash
       _InitFullAutoTime
       _OpenFullOrder
         _InitSoftStart
           _GetMotorPower
         _sm_send_event
           _sm_get_current_state
       _sm_send_event
     _actionZone_Closed
       _GetOpenOrder
       _GetSecurityStateInOpening
         _SetSegmentValueIntermitent
       _InitFullAutoTime
       _InitWalkAutoTime
       _OpenFullOrder
       _OpenWalkOrder
         _InitSoftStart
         _sm_send_event
       _WaitPreFlash
       _sm_send_event
     _actionZone_Closing
       _GetOpenOrder
       _GetSecurityStateInClosing
         _SetSegmentValueIntermitent
       _InitFullAutoTime
       _InitWalkAutoTime
       _OpenFullOrder
       _OpenWalkOrder
       _SetSegmentValueIntermitent
       _StopOrder
         _sm_send_event
       ___lmul
       _setPositionInvertionInClosing
         _getTimeDecelaration
       _sm_send_event
     _actionZone_Opened
       _CloseOrder
         _InitSoftStart
         _sm_send_event
       _GetOpenOrder
       _GetSecurityStateInClosing
       _InitFullAutoTime
       _InitWalkAutoTime
       _OpenFullOrder
       _OpenWalkOrder
       _VerifyFollowMe
     _actionZone_Opening
       _CloseOrder
       _GetOpenOrder
       _GetSecurityStateInClosing
       _GetSecurityStateInOpening
       _InitFullAutoTime
       _InitWalkAutoTime
       _SetSegmentValueIntermitent
       _StopOrder
       _VerifyFollowMe
       _controlVelocity
       _setPositionInvertionInClosing
       _setPositionInvertionInOpening
         _getTimeDecelaration
       _sm_send_event
     _sm_execute_ControlLearning
       _GetOpenOrder
       _SaveNVM_VarSystem
       _calculateMean
       _clearLearningValue
       _generateErrorLearnig
         _sm_init
           _sm_restart
       _sm_send_event
     _sm_send_event
   _sm_execute_main
     _SetSegmentValueIntermitentMain
     _SetSegmentValueMain
       ___awdiv (ARG)
       ___lbdiv (ARG)
       ___lbmod (ARG)
     _load_New_Menu
       _SetSegmentValueIntermitentMain
       _SetSegmentValueMain
     _sm_execute_menuConfiguration
       _ClearFlag_rfCMD
       _ResetDefaultMemory
       _SaveNVM_VarSystem
       _SetSegmentValueIntermitentMain
       _SetSegmentValueMain
       ___lbdiv
       ___lldiv
       ___lmul
       ___lwdiv
       _controlLearnDigit
         _SetSegmentValueLearn
       _controlSaveRemote
         _ClearFlag_rfCMD
         _SetSegmentValueIntermitentMain
         _SetSegmentValueMain
         ___awdiv
         ___lbmod
         _sm_send_event
       _controlSelectRemote
         _ClearFlag_rfCMD
         _RemoveSerial
         _SaveNVM_VarSystem
         _SetSegmentValue
         _SetSegmentValueIntermitentMain
         _SetSegmentValueMain
         ___awdiv
         ___lbmod
         _cmdMemoryIsEmpty
         _getSerialCmd
           _memcpy
         _getTypeRemote
         _saveNewSerial
         _sm_send_event
         _validateRemoteSerialNumber
       _load_New_Menu
       _setValueToEdit
         _InitReceiver
         _SaveNVM_VarSystem
         _cmdMemoryIsEmpty
         _load_New_Menu
         _sm_send_event
       _sm_send_event
     _sm_send_event
   _sm_init

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART1_Receive_ISR *
     Absolute function(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _EUSART1_Transmit_ISR *
   _TMR0_ISR *
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     _rxi *
   _TMR1_ISR *
     Absolute function(Fake) *
     _TMR1_DefaultInterruptHandler *
     _TMR1_WriteTimer *
     _controlMotorForce *
       i2_GetMotorPower
       i2_VerifyElectricalBrake
   _TMR2_ISR *
     Absolute function(Fake) *
     _ReadADC *
       _ADCC_GetSingleConversion
     _TMR2_DefaultInterruptHandler *
     _controlTimeslots *
       _decrementTimeslot
     _refreshSegment *
       _Segments_Set

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E87      0       0      61        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      F7      11       96.5%
BITBANK2           100      0       0       8        0.0%
BANK2              100      7      FA       9       97.7%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0     100       7      100.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     24      9E       5       98.8%
BITBANK14           88      0       0      32        0.0%
BANK14              88      0       0      33        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     3A      4F       1       84.0%
BITBIGSFRllll       28      0       0      59        0.0%
BITBIGSFRhlllll     27      0       0      42        0.0%
BITBIGSFRhhllll     1B      0       0      37        0.0%
BITBIGSFRhhlh       1A      0       0      35        0.0%
BITBIGSFRhlllll     13      0       0      48        0.0%
BITBIGSFRhlllhh      F      0       0      41        0.0%
BITBIGSFRhlllll      E      0       0      46        0.0%
BITBIGSFRhhh         D      0       0      34        0.0%
BITBIGSFRhhllll      C      0       0      36        0.0%
BITBIGSFRllh         9      0       0      57        0.0%
BITBIGSFRhlllll      4      0       0      52        0.0%
BITBIGSFRhlllll      3      0       0      44        0.0%
BITBIGSFRhlllll      3      0       0      43        0.0%
BITBIGSFRhlllll      3      0       0      53        0.0%
BITBIGSFRhlllll      3      0       0      55        0.0%
BITBIGSFRhlllll      2      0       0      47        0.0%
BITBIGSFRhlllhh      2      0       0      40        0.0%
BITBIGSFRhlllll      2      0       0      49        0.0%
BITBIGSFRhlllll      2      0       0      54        0.0%
BITBIGSFRlh          2      0       0      56        0.0%
BITBIGSFRlllh        1      0       0      58        0.0%
BITBIGSFRhlllll      1      0       0      45        0.0%
BITBIGSFRhlllll      1      0       0      50        0.0%
BITBIGSFRhlllll      1      0       0      51        0.0%
BITBIGSFRhlllhh      1      0       0      39        0.0%
BITBIGSFRhlllhh      1      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     3DE      60        0.0%
DATA                 0      0     3DE       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Tue Jul 19 13:37:25 2022

                                        ?_ClearFlag_rfCMD 0001  
                              cmdMemoryIsEmpty@tempSerial 0032  
                                           _Counterchoose 0092  
                        __end_of_TMR2_SetInterruptHandler 9D7C  
                                _eusart1TxBufferRemaining 01FE  
                            SetSegmentValueIntermitent@d1 0013  
                            SetSegmentValueIntermitent@d2 0010  
                                    ??_checkNVM_VarSystem 003A  
                                            ___awdiv@sign 0019  
                                     ___wmul@multiplicand 0012  
                           __end_of_VerifyElectricalBrake 8812  
                                           _LoadManufCode 9A84  
                                        ?_SetSegmentValue 001C  
                                                     l100 9456  
                            ??_sm_execute_ControlLearning 00DE  
                                                     l674 82E2  
                                                     l690 8748  
                                                     _GIE 007F97  
                                                     _Hop 007C  
                                   ?_I2C1_MasterOperation 0001  
                                         _timer1ReloadVal 02DF  
                                 keeloqDecryptPacket@data 00E0  
                                                     _rxi 4E28  
                                  ControlMotor@stateMotor 0018  
                                         _TMR2_Initialize 976E  
                                                     prod 000FF3  
                                                     tosl 000FFD  
                                                     wreg 000FE8  
                                  ?_I2C1_MasterSendTxData 0001  
                                       load_New_Menu@Menu 0022  
                                    _I2C1_DO_RX_NACK_STOP 9DF8  
                               ?_I2C1_MasterEnableRestart 0001  
                                       _SaveNVM_VarSystem 95B6  
                        validateRemoteSerialNumber@serial 002E  
                                    I2C1_SetBuffer@buffer 0010  
                                       getKeyPressed@temp 0010  
                                     eusartparser@package 00E0  
                                   getCurrentComparator@x 0022  
                                      ?_SaveNVM_VarSystem 0001  
                                 ??_rd2RegCompleteHandler 001B  
                                                    l2044 8CD8  
                                                    l1405 6B8E  
                                       readRFButtons@key1 0088  
                                                    l3102 3CA0  
                                                    l2039 8CCC  
                                                    l2311 597A  
                                                    l2240 7ACA  
                                                    l2323 8804  
                                                    l2403 5538  
                                                    l1372 9354  
                                                    l1436 60C0  
                                                    l1524 6090  
                                                    l1357 75A8  
                                                    l1517 6044  
                                                    l3053 39F4  
                                                    l1366 772A  
                                                    l2254 7292  
                                                    l1383 62C4  
                                                    l2415 45B6  
                                                    l2328 880E  
                                                    l2353 545C  
                                                    l3233 1066  
                                                    l3065 3B80  
                                                    l2370 5454  
                                                    l1491 8F60  
                                                    l2507 8168  
                                                    l2443 4728  
                                                    l1731 73CE  
                                                    l1388 634C  
                                                    l2516 9554  
                                                    l2380 552C  
                                                    l1740 7434  
                                                    l1732 73D6  
                                                    l1742 7450  
                                                    l1654 660C  
                                                    l2519 957A  
                                                    l1495 5F26  
                                                    l1743 7458  
                                                    l2376 5468  
                                                    l1736 7408  
                                                    l3088 3BC6  
                                                    l1745 7474  
                                                    l1737 7410  
                                                    l1657 6682  
                                                    l1746 747C  
                                                    l2810 4E26  
                                                    l2730 5A9C  
                                                    l1739 742C  
                                                    l1667 66CA  
                                                    l2723 52F0  
                                                    l3620 2916  
                                                    l3612 28E8  
                                                    l1748 74A6  
                                                    l3444 3882  
                                                    l3380 3522  
                                                    l3372 34E8  
                                                    l2477 483E  
                                                    l2397 5524  
                                                    l3621 2920  
                                                    l1861 79B4  
                                                    l3517 8DF4  
                                                    l2653 43F0  
                                                    l3622 2926  
                                                    l3614 28F2  
                                                    l3438 3850  
                                                    l3390 3666  
                                                    l3358 3428  
                                                    l3631 2954  
                                                    l3623 292C  
                                                    l3615 28FC  
                                                    l2727 59A6  
                                                    l3391 3686  
                                                    l3640 297E  
                                                    l3624 2932  
                                                    l2912 2340  
                                                    l3641 2984  
                                                    l3633 295A  
                                                    l3625 2938  
                                                    l3617 2902  
                                                    l2585 89E2  
                                                    l2729 59DC  
                                                    l3650 2BDE  
                                                    l3634 2960  
                                                    l3626 293E  
                                                    l3635 2966  
                                                    l3619 290C  
                                                    l1859 79A4  
                                                    l3644 2A4E  
                                                    l3636 296C  
                                                    l3628 2944  
                                                    l3629 294A  
                                                    l1869 79D8  
                                                    l2773 4C42  
                                                    l3493 7C6E  
                                                    l3638 2972  
                                                    l4279 9158  
                                                    l3639 2978  
                                                    l3815 8594  
                                                    l3649 2BD4  
                                                    l3499 96E6  
                                                    ?_rxi 0001  
                                                    _DKEY 02CF  
                                                    _LATA 000F83  
                                                    _LATB 000F84  
                                                    _LATC 000F85  
                                                    _LATD 000F86  
                                                    _LATE 000F87  
                                             main@package 02ED  
                                                    _T2PR 000FBC  
                                                    _PMD0 000EE1  
                                                    _PMD1 000EE2  
                                                    _PMD2 000EE3  
                                                    _PMD3 000EE4  
                                                    _PMD4 000EE5  
                                                    _PMD5 000EE6  
                                                    _EHop 028C  
                                           eusartparser@i 00E8  
                                                    _WPUA 000F10  
                                                    _WPUB 000F18  
                                                    _WPUC 000F20  
                                                    _WPUD 000F25  
                                                    _WPUE 000F2D  
                                         __end_of_RGB_Set 9D34  
                                 ??_wr2RegCompleteHandler 001B  
                                                    _Bptr 008D  
                                        ??_I2C1_MasterFsm 001D  
                                           _EUSART1_Write 9440  
                               ??_I2C1_CallbackReturnStop 001B  
                                __end_of_controlTimeslots 6574  
                                                    _main 6894  
                                           ?_EUSART1_Read 0001  
                                         ?_confirmpackage 0012  
                                                    _temp 0080  
                                                    fsr1h 000FE2  
                                                    fsr2h 000FDA  
                                                    indf1 000FE7  
                                                    indf2 000FDF  
                                                    fsr1l 000FE1  
                                                    fsr2l 000FD9  
                                                    btemp 0050  
                                    saveNewSerial@cmdType 003A  
                                     ??_SaveNVM_VarSystem 003A  
                                                    prodh 000FF4  
                                                    prodl 000FF3  
                                                    start 009C  
                                        ??_I2C1_SetBuffer 0014  
                                          ??_ControlMotor 0012  
                                       ReadSerial@cmdType 0032  
                                         __end_of_Decrypt 7A30  
                                ?i2_VerifyElectricalBrake 0001  
                                        getSerialCmd@temp 001C  
                                           ?_InitReceiver 0001  
                              ??_TMR1_SetInterruptHandler 0012  
                                            ___param_bank 000000  
                                         i2_GetMotorPower 7AF6  
                                         __end_of_ReadADC 90BC  
                           I2C1_CallbackReturnStop@funPtr 0019  
                                         ??_getTypeRemote 0010  
                                                   ??_rxi 0001  
                                    __end_of_GetOpenOrder 5F04  
                                 __end_of_TMR0_Initialize 9AC8  
                                          ?_LoadManufCode 0001  
                          ??_TMR0_DefaultInterruptHandler 0001  
                                           ?_InitSoftStop 0001  
                           sm_execute_ControlLearning@psm 00DC  
                           __end_of_OSCILLATOR_Initialize 9CA2  
                      SetSegmentValueIntermitentMain@time 001D  
                                                   l21001 48C6  
                                                   l20203 8758  
                                                   l21013 48E6  
                                                   l21005 48D0  
                                                   l20223 8D46  
                                                   l21031 495A  
                                                   l21007 48D6  
                                                   l20153 8294  
                                                   l20321 97B6  
                                                   l20401 93CC  
                                                   l21113 8496  
                                                   l21105 847E  
                                                   l21041 49FE  
                                                   l21033 4986  
                                                   l21025 4928  
                                                   l20219 8D40  
                                                   l20235 8D54  
                                                   l20171 830A  
                                                   l20163 82A0  
                                                   l21123 958E  
                                                   l21051 4A96  
                                                   l21043 4A2C  
                                                   l21035 49A2  
                                                   l21019 4918  
                                                   l22011 375C  
                                                   l22003 3734  
                                                   l20229 8D4E  
                                                   l20157 829A  
                                                   l20149 828E  
                                                   l21109 8488  
                                                   l21053 4AB0  
                                                   l21045 4A48  
                                                   l21037 49C6  
                                                   l22021 3784  
                                                   l20263 925E  
                                                   l20327 97C2  
                                                   l20423 7A80  
                                                   l20415 7A44  
                                                   l21215 775E  
                                                   l21231 6784  
                                                   l21135 95AA  
                                                   l21127 9594  
                                                   l21063 4B34  
                                                   l21047 4A64  
                                                   l21039 49E2  
                                                   l22111 389C  
                                                   l22103 387C  
                                                   l22023 3788  
                                                   l22015 3764  
                                                   l20193 874C  
                                                   l20409 93EC  
                                                   l20425 7A8C  
                                                   l21209 76C6  
                                                   l21081 8430  
                                                   l21153 9948  
                                                   l21145 9930  
                                                   l21049 4A7C  
                                                   l21057 4AC2  
                                                   l22033 37AA  
                                                   l22017 3780  
                                                   l22009 3758  
                                                   l20259 9258  
                                                   l20291 9D18  
                                                   l20435 7ABA  
                                                   l21235 67C0  
                                                   l21139 95B2  
                                                   l21331 5E14  
                                                   l21067 4B70  
                                                   l21059 4B26  
                                                   l22043 37BA  
                                                   l22035 37AE  
                                                   l22027 378C  
                                                   l22131 3948  
                                                   l20197 8752  
                                                   l20269 9264  
                                                   l20285 90D4  
                                                   l20445 7AEC  
                                                   l21181 8202  
                                                   l21253 6886  
                                                   l20525 79A0  
                                                   l20517 7986  
                                                   l21325 5E0C  
                                                   l21309 5DE0  
                                                   l21413 7EAE  
                                                   l20621 8E3A  
                                                   l20461 9034  
                                                   l23101 518C  
                                                   l21093 8456  
                                                   l22117 38B2  
                                                   l22037 37B2  
                                                   l20295 9D20  
                                                   l20375 8520  
                                                   l21239 67F8  
                                                   l20535 79B0  
                                                   l21407 7EAA  
                                                   l23031 7DA0  
                                                   l23015 7D58  
                                                   l21095 845E  
                                                   l21087 8440  
                                                   l22119 38CE  
                                                   l22063 37F8  
                                                   l22055 37EE  
                                                   l22039 37B6  
                                                   l21185 8244  
                                                   l21505 9650  
                                                   l21353 5E4E  
                                                   l23017 7D6E  
                                                   l20457 9020  
                                                   l23121 51E4  
                                                   l22049 37E4  
                                                   l22129 38F6  
                                                   l20395 9AE6  
                                                   l20483 889C  
                                                   l20715 85F4  
                                                   l20723 8094  
                                                   l20651 947A  
                                                   l20635 9442  
                                                   l20707 8A20  
                                                   l21531 8378  
                                                   l21523 835C  
                                                   l20547 79D0  
                                                   l20539 79BC  
                                                   l21347 5E46  
                                                   l21275 5D7A  
                                                   l21443 7F12  
                                                   l21427 7EDC  
                                                   l21611 583A  
                                                   l23115 51CC  
                                                   l20627 93A4  
                                                   l22315 4000  
                                                   l22083 3824  
                                                   l22075 3820  
                                                   l24011 12D8  
                                                   l20477 895A  
                                                   l20469 891E  
                                                   l21197 9986  
                                                   l20493 88E6  
                                                   l20733 80D6  
                                                   l20725 80C6  
                                                   l20661 60CE  
                                                   l20821 6D3E  
                                                   l21293 5DB8  
                                                   l21269 5D76  
                                                   l23037 7DAA  
                                                   l21621 5858  
                                                   l23133 5208  
                                                   l22069 3816  
                                                   l24101 147C  
                                                   l20815 6CEC  
                                                   l21519 8358  
                                                   l21551 9606  
                                                   l21391 5F00  
                                                   l21367 5E74  
                                                   l21287 5DB4  
                                                   l21383 5EC4  
                                                   l20591 7810  
                                                   l23207 52CE  
                                                   l23151 5242  
                                                   l20911 7672  
                                                   l20903 7658  
                                                   l22327 4060  
                                                   l22319 403A  
                                                   l24103 147E  
                                                   l24007 12B6  
                                                   l20649 9476  
                                                   l20681 6188  
                                                   l20841 6DEA  
                                                   l21465 7E08  
                                                   l23313 5AB6  
                                                   l23305 5A98  
                                                   l23081 511C  
                                                   l23065 50D8  
                                                   l20761 924C  
                                                   l22361 4110  
                                                   l22329 4074  
                                                   l22089 3842  
                                                   l24201 16BC  
                                                   l24113 14F2  
                                                   l20675 6176  
                                                   l20667 6112  
                                                   l20659 60C8  
                                                   l20835 6DD4  
                                                   l21379 5EC0  
                                                   l21299 5DDC  
                                                   l21459 7E04  
                                                   l20587 77E4  
                                                   l21803 6FE2  
                                                   l23323 5ADC  
                                                   l23227 5996  
                                                   l21635 5886  
                                                   l23171 525C  
                                                   l23067 50EE  
                                                   l20915 767E  
                                                   l20907 7666  
                                                   l22435 96E0  
                                                   l22419 7C2E  
                                                   l22275 3EC8  
                                                   l22099 386A  
                                                   l20677 617A  
                                                   l21741 8B14  
                                                   l21709 89A6  
                                                   l23501 4DC2  
                                                   l21581 5794  
                                                   l23149 523C  
                                                   l21821 8CF8  
                                                   l22453 8546  
                                                   l20757 922E  
                                                   l22293 3F46  
                                                   l22285 3EEA  
                                                   l24133 1584  
                                                   l24109 14D0  
                                                   l24061 13CC  
                                                   l24037 1344  
                                                   l24029 1328  
                                                   l24045 1360  
                                                   l20695 6230  
                                                   l20687 61CC  
                                                   l21559 961E  
                                                   l22527 9320  
                                                   l21743 8B20  
                                                   l21495 7E6C  
                                                   l21479 7E36  
                                                   l20599 7854  
                                                   l23335 5B0A  
                                                   l20943 71DA  
                                                   l20935 719C  
                                                   l21655 58E8  
                                                   l21663 5906  
                                                   l21575 5782  
                                                   l21823 8D2A  
                                                   l22455 8552  
                                                   l20871 75D6  
                                                   l20919 7688  
                                                   l20759 9248  
                                                   l22391 41B6  
                                                   l22295 3F7E  
                                                   l22287 3EEC  
                                                   l21831 3432  
                                                   l24207 16CE  
                                                   l22713 635C  
                                                   l22633 74D6  
                                                   l20697 6234  
                                                   l23441 4D18  
                                                   l23409 4CA8  
                                                   l23353 5B46  
                                                   l23281 5A5A  
                                                   l23273 5A3E  
                                                   l23185 5288  
                                                   l26001 4390  
                                                   l22465 8586  
                                                   l20881 7602  
                                                   l20865 75BC  
                                                   l22369 412A  
                                                   l22297 3F84  
                                                   l21913 353A  
                                                   l21905 352A  
                                                   l21833 343A  
                                                   l24233 17EE  
                                                   l24209 16D6  
                                                   l24161 160A  
                                                   l24129 1562  
                                                   l22475 9126  
                                                   l22539 8E58  
                                                   l22811 6028  
                                                   l22803 600C  
                                                   l21747 8B28  
                                                   l23451 4D3A  
                                                   l23259 5A10  
                                                   l21683 593C  
                                                   l21587 57AE  
                                                   l23195 52A4  
                                                   l23187 528C  
                                                   l23611 2398  
                                                   l20891 7624  
                                                   l21923 3594  
                                                   l21851 3476  
                                                   l21835 3442  
                                                   l24235 17F4  
                                                   l24219 1710  
                                                   l24075 1412  
                                                   l22717 637E  
                                                   l22709 6332  
                                                   l22477 912E  
                                                   l22653 753E  
                                                   l24421 2A54  
                                                   l22549 8EA0  
                                                   l23525 4E0E  
                                                   l23509 4DDC  
                                                   l23429 4CF4  
                                                   l23349 5B3A  
                                                   l23269 5A34  
                                                   l20949 722E  
                                                   l21693 5966  
                                                   l21685 5942  
                                                   l21677 5918  
                                                   l21773 78A4  
                                                   l23189 5292  
                                                   l23541 2202  
                                                   l23533 21D2  
                                                   l26005 43B2  
                                                   l20885 760E  
                                                   l20877 75F0  
                                                   l22397 41CC  
                                                   l21933 35A4  
                                                   l21845 345E  
                                                   l21837 344A  
                                                   l24237 17FA  
                                                   l24229 17DE  
                                                   l24173 164E  
                                                   l24149 15D0  
                                                   l24093 145E  
                                                   l24077 1416  
                                                   l24253 1840  
                                                   l22487 914E  
                                                   l22647 752A  
                                                   l24503 6A68  
                                                   l22727 8A90  
                                                   l24431 2C5A  
                                                   l24423 2AC6  
                                                   l22831 6074  
                                                   l22823 6058  
                                                   l22815 6036  
                                                   l22807 601A  
                                                   l22751 5F56  
                                                   l22743 5F3A  
                                                   l22735 5F18  
                                                   l23447 4D32  
                                                   l23375 4BC2  
                                                   l23279 5A52  
                                                   l21783 7918  
                                                   l23703 257E  
                                                   l23607 2342  
                                                   l26015 43F2  
                                                   l21943 362C  
                                                   l21935 35F2  
                                                   l21919 3582  
                                                   l21847 3466  
                                                   l24191 1694  
                                                   l24079 1422  
                                                   l22665 7564  
                                                   l22649 7532  
                                                   l22681 9348  
                                                   l24521 6ADA  
                                                   l24433 2CA8  
                                                   l24425 2B14  
                                                   l24417 298E  
                                                   l23473 4D80  
                                                   l23457 4D4E  
                                                   l23377 4BD8  
                                                   l23289 5A70  
                                                   l23561 227C  
                                                   l23553 2258  
                                                   l23609 2382  
                                                   l26041 44B2  
                                                   l26017 4432  
                                                   l20897 763E  
                                                   l20889 761A  
                                                   l21881 34F6  
                                                   l21849 346E  
                                                   l24523 6ADE  
                                                   l24435 2D1A  
                                                   l24427 2B86  
                                                   l24419 2A00  
                                                   l24611 9C2A  
                                                   l22835 6082  
                                                   l22827 6066  
                                                   l22771 5F9C  
                                                   l22763 5F80  
                                                   l22755 5F64  
                                                   l22747 5F48  
                                                   l22851 5C12  
                                                   l23491 4DA4  
                                                   l23475 4D88  
                                                   l23459 4D54  
                                                   l23299 5A82  
                                                   l21779 78DE  
                                                   l23723 25CE  
                                                   l23635 2434  
                                                   l23627 23F6  
                                                   l26019 4448  
                                                   l21883 34FE  
                                                   l21867 348E  
                                                   l21859 3482  
                                                   l24187 1688  
                                                   l24179 1666  
                                                   l22693 626E  
                                                   l22941 87DE  
                                                   l24429 2BE8  
                                                   l24621 6598  
                                                   l21797 6F9E  
                                                   l21789 6F52  
                                                   l23469 4D78  
                                                   l23389 4C30  
                                                   l23629 2414  
                                                   l23581 22DE  
                                                   l23573 22BC  
                                                   l23549 2234  
                                                   l26061 4512  
                                                   l21981 36D6  
                                                   l21973 36A0  
                                                   l21893 3512  
                                                   l21885 3506  
                                                   l21877 349A  
                                                   l23901 0FCC  
                                                   l24535 6B12  
                                                   l25511 4686  
                                                   l25503 4650  
                                                   l25431 5444  
                                                   l25407 5398  
                                                   l24439 2D68  
                                                   l22791 5FE2  
                                                   l22783 5FC6  
                                                   l22775 5FAA  
                                                   l22767 5F8E  
                                                   l22759 5F72  
                                                   l22855 5C1C  
                                                   l23487 4D9A  
                                                   l23815 27BA  
                                                   l23735 2624  
                                                   l23663 24A0  
                                                   l26071 452E  
                                                   l26063 4518  
                                                   l21983 36F2  
                                                   l21975 36CA  
                                                   l22689 6258  
                                                   l24537 6B28  
                                                   l25601 4842  
                                                   l25433 5448  
                                                   l25353 8CA6  
                                                   l22865 5C90  
                                                   l22873 5CA4  
                                                   l23489 4D9E  
                                                   l23817 27C4  
                                                   l23761 2694  
                                                   l23569 22A2  
                                                   l26065 451C  
                                                   l26081 4542  
                                                   l21993 3720  
                                                   l21977 36CE  
                                                   l22699 628E  
                                                   l22971 80F8  
                                                   l25611 487E  
                                                   l25531 46E4  
                                                   l25515 469C  
                                                   l22947 87FA  
                                                   l25435 5456  
                                                   l22795 5FF0  
                                                   l22787 5FD4  
                                                   l22779 5FB8  
                                                   l24731 73F2  
                                                   l22883 5CEA  
                                                   l22867 5CA0  
                                                   l24651 6640  
                                                   l24643 6612  
                                                   l24707 8BFC  
                                                   l23691 2528  
                                                   l23667 24AE  
                                                   l26075 4534  
                                                   l26067 4528  
                                                   l21987 370C  
                                                   l22957 9556  
                                                   l22973 8100  
                                                   l22981 8138  
                                                   l25605 485A  
                                                   l25533 46F4  
                                                   l25509 4678  
                                                   l25517 46AA  
                                                   l25461 5518  
                                                   l25437 546C  
                                                   l25381 532A  
                                                   l25357 8CBA  
                                                   l25349 8C94  
                                                   l27301 3060  
                                                   l27221 2E7E  
                                                   l24733 73FC  
                                                   l24717 73B8  
                                                   l24709 8C00  
                                                   l23837 281C  
                                                   l23669 24B8  
                                                   l23597 231E  
                                                   l23589 22F6  
                                                   l21997 3728  
                                                   l21989 3716  
                                                   l23933 1044  
                                                   l23925 101E  
                                                   l23917 0FFC  
                                                   l23909 0FE4  
                                                   l23941 10AC  
                                                   l25621 3950  
                                                   l24823 70FE  
                                                   l24807 70C4  
                                                   l22991 8164  
                                                   l22975 8108  
                                                   l25607 4868  
                                                   l25463 5526  
                                                   l25391 534C  
                                                   l25375 531A  
                                                   l27223 2E9E  
                                                   l22799 5FFE  
                                                   l24583 6EB4  
                                                   l24719 73C2  
                                                   l24655 6666  
                                                   l23855 284A  
                                                   l23791 2730  
                                                   l23783 26E2  
                                                   l23775 26C4  
                                                   l21999 372C  
                                                   l23943 10C2  
                                                   l25631 399A  
                                                   l24833 712A  
                                                   l22969 80F0  
                                                   l25617 4898  
                                                   l25537 470A  
                                                   l25545 4734  
                                                   l27313 30A6  
                                                   l27305 3072  
                                                   l27241 2F32  
                                                   l27233 2EEE  
                                                   l27225 2EBA  
                                                   l24673 66E6  
                                                   l24657 666C  
                                                   l23849 2834  
                                                   l23865 2898  
                                                   l23953 112A  
                                                   l23881 0F24  
                                                   l25721 3B0A  
                                                   l22979 8110  
                                                   l25563 4780  
                                                   l25475 45B8  
                                                   l25459 5514  
                                                   l27323 312E  
                                                   l27403 190C  
                                                   l22899 5D16  
                                                   l24675 66EE  
                                                   l24691 8BC8  
                                                   l23971 11AC  
                                                   l23963 1190  
                                                   l23939 1068  
                                                   l25715 3AF0  
                                                   l25635 39BA  
                                                   l25627 3978  
                                                   l25573 47BA  
                                                   l25469 4598  
                                                   l25389 5346  
                                                   l27309 3084  
                                                   l27261 2F9C  
                                                   l27253 2F78  
                                                   l27245 2F54  
                                                   l27237 2F10  
                                                   l27229 2EDC  
                                                   l23973 11D6  
                                                   l23893 0F88  
                                                   l23885 0F44  
                                                   l25821 3C72  
                                                   l25725 3B1C  
                                                   l25709 3AD8  
                                                   l25661 3A6A  
                                                   l25645 39F6  
                                                   l24847 715E  
                                                   l25567 4798  
                                                   l25487 4602  
                                                   l27343 3226  
                                                   l27335 31FA  
                                                   l27319 310C  
                                                   l27511 1B5E  
                                                   l27431 199A  
                                                   l27407 191C  
                                                   l27415 194E  
                                                   l24679 66FA  
                                                   l23975 11DC  
                                                   l25655 3A4A  
                                                   l25639 39DC  
                                                   l25647 3A22  
                                                   l24793 7090  
                                                   l25585 47EC  
                                                   l25569 47A6  
                                                   l27329 3194  
                                                   l27281 3006  
                                                   l27273 2FD2  
                                                   l27265 2FAE  
                                                   l27257 2F8A  
                                                   l27249 2F66  
                                                   l27409 1932  
                                                   l24689 8BC4  
                                                   l23985 11FA  
                                                   l23969 11AA  
                                                   l23897 0FAA  
                                                   l23889 0F66  
                                                   l25921 3E1C  
                                                   l25809 3C5C  
                                                   l25745 3B76  
                                                   l25649 3A38  
                                                   l25579 47CA  
                                                   l25499 463C  
                                                   l27355 32F2  
                                                   l27339 3210  
                                                   l27523 1C12  
                                                   l27435 19BE  
                                                   l27427 196A  
                                                   l24779 74A0  
                                                   l24867 9184  
                                                   l24699 8BE6  
                                                   l25915 3DFC  
                                                   l25851 3CD8  
                                                   l25747 3B82  
                                                   l25739 3B56  
                                                   l25691 3AAA  
                                    write_package@package 0011  
                                   _eusart1RxStatusBuffer 0274  
                                                   l25589 4800  
                                                   l27349 328C  
                                                   l27293 303C  
                                                   l27285 3018  
                                                   l27277 2FF4  
                                                   l27269 2FC0  
                                                   l27621 1D8A  
                                                   l27613 1D7C  
                                                   l27533 1C60  
                                                   l27525 1C22  
                                                   l27517 1BD4  
                                                   l27453 1A1A  
                                                   l27445 19CC  
                                                   l27437 19C2  
                                                   l27381 1896  
                                                   l25941 424E  
                                                   l23989 1226  
                                                   l25829 3C90  
                                                   l25781 3C00  
                                                   l25749 3B90  
                                                   l25669 3A86  
                                                   l25925 3E28  
                                                   l27375 8EF2  
                                                   l27359 3314  
                                                   l27711 1FAC  
                                                   l27631 1DE2  
                                                   l27551 1C88  
                                                   l27463 1A28  
                                                   l27455 1A1E  
                                                   l27383 18A6  
                                                   l25919 3E10  
                                                   l25871 3D2E  
                                                   l25855 3CE8  
                                                   l25759 3BB6  
                                                   l25679 3A94  
                                                   l27297 304E  
                                                   l27289 302A  
                                                   l27625 1DBA  
                                                   l27609 1D5A  
                                                   l27545 1C80  
                                                   l27529 1C3E  
                                                   l27481 1A98  
                                                   l27473 1A8A  
                                                   l27465 1A32  
                                                   l27449 19F6  
                                                   l27393 18E4  
                                                   l27385 18C2  
                                                   l25961 42B8  
                                                   l25953 4296  
                                                   l25945 425C  
                                                   l25865 3D0A  
                                                   l27803 2104  
                                                   l27723 1FEC  
                                                   l27643 1E16  
                                                   l27619 1D86  
                                                   l27555 1C92  
                                                   l27539 1C7C  
                                                   l27491 1AFA  
                                                   l27483 1AA2  
                                                   l27475 1A8E  
                                                   l27379 188A  
                                                   l25795 3C38  
                                                   l25787 3C1E  
                                                   l25699 3AC8  
                                                   l27813 2132  
                                                   l27733 2018  
                                                   l27629 1DDE  
                                                   l27581 1CEE  
                                                   l27573 1CE4  
                                                   l27493 1AFE  
                                                   l27397 18F6  
                                                   l25973 42F0  
                                                   l25949 427E  
                                                   l27807 2126  
                                                   l27727 200E  
                                                   l27647 1E3A  
                                                   l27639 1DEC  
                                                   l27745 201C  
                                                   l27657 1E48  
                                                   l27649 1E3E  
                                                   l27569 1CC2  
                                                   l25977 4312  
                                                   l25897 3D9C  
                                                   l27763 2056  
                                                   l27675 1EB8  
                                                   l27667 1EAA  
                                                   l27659 1E52  
                                                   l27587 1CF2  
                                                   l27499 1B08  
                                                   l27819 2136  
                                                   l25899 3DB0  
                                                   l27781 2086  
                                                   l27749 2026  
                                                   l27693 1F28  
                                                   l27685 1F1A  
                                                   l27677 1EC2  
                                                   l27669 1EAE  
                                                   l27589 1CF6  
                                                   l25989 434E  
                                                   l27783 208A  
                                                   l27775 2082  
                                                   l27767 2078  
                                                   l27687 1F1E  
                                                   l19961 8B6E  
                                                   l27793 20EC  
                                                   l27873 697E  
                                                   l27849 68DA  
                                                   l27859 68F0  
                                                   l27879 69A8  
                                                   l27889 69C6  
                                                   _ADACQ 000F5C  
                                       __end_of_I2C1_Open 8524  
                                                   _ADCAP 000F5D  
                                                   _ADACT 000F56  
                                   __end_of_saveNewSerial 8A54  
                                                   ?_main 0001  
                                                   _ADCLK 000F57  
                                                   _ADCNT 000F67  
                                                   _ADPCH 000F5F  
                                                   _ADREF 000F58  
                                         __end_of___awdiv 84A0  
                          ?_keeloq_classic_decrypt_packet 0038  
                                         __end_of___lbdiv 95B6  
                                                   _ADPRE 000F5E  
                                                   _ADRPT 000F66  
                                         __end_of___lbmod 9950  
                                            _zeroCrossing 0197  
                                         __end_of___lldiv 85A6  
                                                   _T1CLK 000FD2  
                                         ___awdiv@divisor 0016  
                                                   _T1CON 000FCF  
                                                   _T2CON 000FBD  
                                                   u30060 8BDE  
                                                   u30500 7138  
                                                   u30340 70AC  
                                                   u32020 4762  
                                                   u30430 70F0  
                                                   u30270 7078  
                                                   u23400 7AA8  
                                                   u30360 70B8  
                                                   u32120 47FC  
                                                   u31240 8C82  
                                                   u33000 42AC  
                                                   u30601 917A  
                                                   u23170 9D58  
                                                   u30290 7084  
                                                   u32210 488C  
                                                   u31410 5374  
                                                   u25010 57F4  
                                                   u23228 8764  
                                                   u23420 7AC6  
                                                   u31500 53C6  
                                                   u31420 5382  
                                                   u24140 723C  
                                                   u25020 5804  
                                                   _T2HLT 000FBE  
                                                   u23229 8776  
                                                   u23238 8D60  
                                                   u23430 7ADA  
                                                   u30470 7120  
                                                   u32070 47B6  
                                                   u31430 5392  
                                                   u25030 580C  
                                                   u33030 42E4  
                                                   u24310 8462  
                                                   u23239 8D72  
                                                   u31431 5390  
                                                   u23248 9270  
                                                   u23440 7AE8  
                                                   u30560 716E  
                                                   u32160 4828  
                                                   u31520 53D0  
                                                   u24080 7198  
                                                   u25120 58A2  
                                                   u33200 44A2  
                                                   u32240 396C  
                                                   u23249 9282  
                                                   u23370 7A5E  
                                                   u30570 7176  
                                                   u32170 4830  
                                                   u31450 53A6  
                                                   u25210 5928  
                                                   u25130 58B2  
                                                   u33050 4306  
                                                   u30580 717E  
                                                   u31700 54CC  
                                                   u31620 5488  
                                                   u31540 53DA  
                                                   u24180 92AA  
                                                   u25140 58BA  
                                                   u33301 30FE  
                                                   u23198 82AC  
                                                   u23390 7A9A  
                                                   u30590 916C  
                                                   u24350 9598  
                                                   u25310 8AEE  
                                                   u25230 5950  
                                                   u25070 5868  
                                                   u32510 3BB0  
                                                   u32270 39D0  
                                                   u23199 82BE  
                                                   u33311 3154  
                                                   u25071 5866  
                                                   u23288 90F8  
                                                   u31640 5494  
                                                   u31560 53FC  
                                                   u31480 53BA  
                                                   u24520 5D52  
                                                   u27000 51A4  
                                                   u33160 4464  
                                                   u23289 910A  
                                                   u33321 3186  
                                                   u33401 18B4  
                                                   u23625 77F0  
                                                   u26130 624E  
                                                   u26050 74CA  
                                                   u32450 3B2C  
                                                   u34107 896A  
                                                   u33331 31BA  
                                                   u34051 6992  
                                                   u26140 6266  
                                                   u31660 549E  
                                                   u23660 8DE0  
                                                   u27020 51B8  
                                                   u25500 38A8  
                                                   u33341 31EC  
                                                   u33421 18D6  
                                                   u23645 7860  
                                                   u24550 5DB0  
                                                   u25270 8994  
                                                   u25510 3E72  
                                                   u32470 3B64  
                                                   u33351 324C  
                                                   u33511 1A7E  
                                                   u31840 464C  
                                                   u31680 54A8  
                                                   u27120 5270  
                                                   u28000 21F6  
                                                   u25520 3E78  
                                                   u32560 3BDE  
                                                   u33361 327E  
                                                   u33281 2EAC  
                                                   u26170 62AA  
                                                   u31930 46D4  
                                                   u31770 45CA  
                                                   u26250 5F32  
                                                   u23930 6DCC  
                                                   u23690 8E32  
                                                   u25290 89B6  
                                                   u27210 52E6  
                                                   u27050 51F2  
                                                   u33371 32B2  
                                                   u33291 30CC  
                                                   u33451 1940  
                                                   u26180 62BC  
                                                   u31860 4668  
                                                   u31780 45D8  
                                                   u25620 3FBE  
                                                   u32900 3DC8  
                                                   u32820 3D5C  
                                                   u32740 3CF6  
                                                   u32580 3BEE  
                                                   u33381 32E4  
                                                   u33621 1C30  
                                                   u33541 1AEE  
                                                   u31790 45E8  
                                                   u28030 2228  
                                                   u25710 40A0  
                                                   u33640 1C6A  
                                                   u27400 5A2E  
                                                   u27080 5216  
                                                   u25480 3876  
                                                   u34097 88F6  
                                                   u33801 1E9E  
                                                   u33721 1D4C  
                                                   u33570 1B16  
                                                   u25570 3F04  
                                                   u32930 3DE0  
                                                   u32690 3CB0  
                                         __end_of___lwdiv 9162  
                                                   u24915 8FA8  
                                                   u32691 3CAE  
                                                   u26700 9550  
                                                   u26460 6050  
                                                   u28220 23D2  
                                                   u25820 419E  
                                                   u25740 40DA  
                                                   u29020 128A  
                                                   u32860 3D7A  
                                                   u33581 1B4A  
                                                   u26710 9566  
                                                   u31990 474A  
                                                   u27430 5A4E  
                                                   u28310 24A8  
                                                   u25910 96C8  
                                                   u29030 12E6  
                                                   u33831 1F0E  
                                                   u29015 1274  
                                                   u26640 87BE  
                                                   u24880 8388  
                                                   u27360 5A0A  
                                                   u24960 57A0  
                                                   u28400 258E  
                                                   u29040 12EC  
                                                   u29025 1286  
                                                   u26570 5CB4  
                                                   u28410 25A8  
                                                   u28330 24CC  
                                                   u29210 14A4  
                                                   u28411 25A6  
                                                   u27700 4BF6  
                                                   u28500 264E  
                                                   u28340 24D4  
                                                   u28260 2450  
                                                   u32980 4272  
                                                   u29300 161A  
                                                   u29060 1336  
                                                   u29301 1618  
                                                   u29205 148E  
                                                   u26750 8148  
                                                   u27550 5AEA  
                                                   u24990 57E4  
                                                   u28510 2672  
                                                   u28430 25EC  
                                                   u28350 24EE  
                                                   u28270 2458  
                                                   u25950 8556  
                                                   u29070 133C  
                                                   u28511 2670  
                                                   u28431 25EA  
                                                   u28351 24EC  
                                                   u29215 14A0  
                                                   u26680 87F4  
                                                   u26840 7D7C  
                                                   u27800 4D0E  
                                                   u28600 270A  
                                                   u28440 25FA  
                                                   u28280 2472  
                                                   u29320 1630  
                                                   u29160 1430  
                                                   u29080 1352  
                                                   u28281 2470  
                                                   u29081 1350  
                                                   u27810 4D26  
                                                   u27730 4CBC  
                                                   u27650 5B64  
                                                   u26930 5104  
                                                   u28370 2546  
                                                   u25890 7BCC  
                                                   u29410 16E6  
                                                   u29330 1644  
                                                   u29250 1536  
                                                   u29170 1436  
                                                   u27651 5B62  
                                                   u28371 2544  
                                                   u29411 16E4  
                                                   u25980 9132  
                                                   u28540 26A6  
                                                   u28380 2554  
                                                   _T2TMR 000FBB  
                                                   u29245 1520  
                                                   u27910 4DD2  
                                                   u27750 4CD0  
                                                   u27590 5B1A  
                                                   u29350 165E  
                                                   u33991 20E0  
                                                   u29335 1640  
                                                   u29255 1532  
                                                   u27840 4D6C  
                                                   u28720 2848  
                                                   u28640 274A  
                                                   u28560 26B2  
                                                   u29280 15E0  
                                                   u28730 2864  
                                                   u28650 2750  
                                                   u28490 2648  
                                                   u29290 15E6  
                                                   _T2RST 000FC0  
                                                   u28731 2862  
                                                   u27780 4D02  
                                                   u26980 5142  
                                                   u28740 2872  
                                                   u28580 26E0  
                                                   u29710 6B4A  
                                                   u29630 6AA4  
                                                   u28590 26FC  
                                                   u28591 26FA  
                                                   u29720 6B58  
                                                   u27880 4DB2  
                                                   i2l106 96B2  
                                                   u29650 6ABC  
                                                   u29570 9D12  
                                                   u28690 282E  
                                                   u29740 6B72  
                                                   u29900 6632  
                                                   u29910 6640  
                                                   u29680 6AF6  
                                                   u28880 105A  
                                                   u29930 6666  
                                                   u29595 9B40  
                                                   u29780 8F18  
                                                   u29596 9B42  
                                                   u29940 667A  
                                                   u29790 8F4A  
                                                   u29990 66CA  
                                                   i2l870 004C  
                                                   i2l872 006A  
                                                   i2l873 0080  
                                                   i2l874 0076  
                                                   i2l867 0030  
                                         ___awdiv@counter 0018  
                                              _CloseOrder 99A2  
                              __end_of_i2c1_fsmStateTable 0F21  
                                                   _OSCEN 000EDC  
                                                   _TMR0H 000FD4  
                                                   _TMR1H 000FCE  
                                                   _TMR0L 000FD3  
                                                   _TMR1L 000FCD  
                                                   _RFBit 0089  
                                                   _PORTB 000F8E  
                               __end_of_SaveNVM_VarSystem 95EE  
                          DecryptPacket_12BIT@commandType 00E4  
                                                   _TRISA 000F88  
                                                   _TRISB 000F89  
                                                   _TRISC 000F8A  
                                                   _TRISD 000F8B  
                                                   _TRISE 000F8C  
                                  ??_I2C1_MasterGetRxData 0010  
                                   ?_I2C1_DO_RX_NACK_STOP 0001  
                             validateRemoteSerialNumber@i 003A  
                             validateRemoteSerialNumber@j 0039  
                                     ___lmul@multiplicand 0021  
                               ?_TMR0_SetInterruptHandler 0010  
                                           _InitSoftStart 8DF6  
                              ??_I2C1_CallbackReturnReset 001B  
                                       ??_I2C1_MasterOpen 0010  
                                        _idxAdcAquisition 0091  
                                    _EUSART1_Transmit_ISR 9686  
                                       ??_I2C1_MasterStop 0010  
                                       ??_I2C1_Initialize 0010  
                               GetMotorPower@defineatraso 0013  
                                        __end_of_TMR0_ISR 9A3A  
                                        __end_of_TMR1_ISR 9540  
                                        __end_of_TMR2_ISR 6CDE  
                                    _idxSaveEnergyADCHist 0090  
                                                   _rfCMD 003B  
                                                   _aux_i 0191  
                          actionZone_Closed@typeOpenOrder 0021  
                                        _setFlashLigth_ON 9540  
                                          ?_EUSART1_Write 0001  
                                          readbutton@key1 0086  
                                   SetSegmentValueMain@d1 001D  
                                          readbutton@key2 019B  
                                   SetSegmentValueMain@d2 001C  
                                 __end_of_TMR1_Initialize 9440  
                                    setFlashLigth_ON@Freq 0010  
                                                   pclath 000FFA  
       rd1RegCompleteHandler@i2c1_master_example$F500@ptr 0019  
                                                   pclatu 000FFB  
                                         __end_of_sumHIST 77A0  
                                         __end_of_sm_init 9010  
                                                   tablat 000FF5  
       rd2RegCompleteHandler@i2c1_master_example$F511@ptr 0019  
       wr2RegCompleteHandler@i2c1_master_example$F523@ptr 0019  
       wr1RegCompleteHandler@i2c1_master_example$F517@ptr 0019  
     rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr 0019  
                                          ??_EUSART1_Read 0010  
                                                   plusw0 000FEB  
                                                   plusw2 000FDB  
                                 __end_of_sm_execute_main 3E56  
                                                   ttemp5 0051  
                                                   ttemp6 0054  
                                                   ttemp7 0058  
                                                   status 000FD8  
                                         ??_ControlLights 0016  
                                                   wtemp8 0051  
                                            ??_I2C1_DO_RX 001B  
                                            ??_I2C1_DO_TX 001B  
                                         ??_ControlInputs 0010  
                                         ___lbdiv@divisor 0010  
              __end_of_EUSART1_DefaultFramingErrorHandler 9E9C  
                    ??_EUSART1_DefaultFramingErrorHandler 0001  
                     ?_EUSART1_DefaultFramingErrorHandler 0001  
                      _EUSART1_DefaultFramingErrorHandler 9E9A  
                                         _TMR1_WriteTimer 9B60  
                                  ??_I2C1_DO_ADDRESS_NACK 001B  
                                         ___lbdiv@counter 0012  
                            __end_of_getStateOpenPosition 7296  
                                            ??_I2C1_Close 0010  
                                          ??_InitReceiver 0010  
                        VerifyElectricalBrake@actualState 0011  
                      i2VerifyElectricalBrake@actualState 0002  
                                         __initialization 7C70  
                                 cmdMemoryIsEmpty@cmdType 0031  
                             ?_SetSegmentValueIntermitent 0010  
                              __end_of_EUSART1_Initialize 86A4  
                                            __end_of_main 6A1C  
                                              _ReadSerial 8A54  
                         sm_execute_menuConfiguration@psm 00E9  
                             __end_of_DecryptPacket_12BIT 81F6  
                                          _refreshCurrent 9330  
                                          ??_InitSoftStop 0014  
                      validateRemoteSerialNumber@position 0033  
                                 __end_of_TMR2_Initialize 979A  
                             ?_INTERRUPT_InterruptManager 0001  
                                          _refreshSegment 8396  
                                  ??_I2C1_MasterOperation 0020  
                                _TMR2_SetInterruptHandler 9D72  
                                                  ??_main 003B  
                                       ??_WWDT_Initialize 0010  
                                           __activetblptr 000003  
                                       Segments_Set@value 0001  
                                   saveNewSerial@position 00DC  
                      __end_of_validateRemoteSerialNumber 6240  
                              _validateRemoteSerialNumber 60A4  
                                          ?_InitSoftStart 0001  
                                   ?_EUSART1_Transmit_ISR 0001  
                                           sumEnergyADC@i 0018  
                                      __end_of_I2C1_DO_RX 879A  
                                      __end_of_I2C1_DO_TX 830E  
                                       ?_InitWalkAutoTime 0001  
                                       ??_controlVelocity 00DA  
                                               ??_RGB_Set 0010  
                              ?_ControlDecelarationFactor 0001  
                                    __end_of_getSerialCmd 9250  
                  __end_of_SetSegmentValueIntermitentMain 9CE0  
                          _SetSegmentValueIntermitentMain 9CCC  
                                      ReadSerial@position 002F  
                                      __end_of_I2C1_Close 9AEA  
                                                  _ADACCH 000F71  
                                                  _ADACCL 000F70  
                                 ?_I2C1_Read1ByteRegister 0022  
                                      ??_InitWalkAutoTime 0010  
                                                  _ADCON0 000F60  
                                                  _ADCON1 000F59  
                                                  _ADCON2 000F5A  
                                                  _ADCON3 000F5B  
                                                  _ADERRH 000F6F  
                                                  _ADERRL 000F6E  
                                                  _ADLTHH 000F6B  
                                                  _ADLTHL 000F6A  
                                                  _ADRESH 000F64  
                                                  _ADRESL 000F63  
                                                  _ADSTAT 000F65  
                                                  _ADUTHH 000F6D  
                                        ___awdiv@dividend 0014  
                                                  _ADUTHL 000F6C  
                                                  _ANSELA 000F11  
                                                  _ANSELB 000F19  
                                                  _ANSELC 000F21  
                                                  _ANSELD 000F26  
                                                  _ANSELE 000F2E  
                                                  _T0CON0 000FD5  
                                                  _T0CON1 000FD6  
                                                  _T1GATE 000FD1  
                                                  _T1GCON 000FD0  
                                     readRFButtons@serial 0181  
                                                  _IOCBN3 00789B  
                                                  _IOCBP3 0078A3  
                                                  _RC1REG 000F99  
                                           _readRFButtons 6574  
                                                  _RC1STA 000F9D  
                                                  _RC3PPS 000EFA  
                                 TMR1_WriteTimer@timerVal 0001  
                                                  _RC4PPS 000EFB  
                                                  _ODCONA 000F0F  
                                                  _ODCONB 000F17  
                                                  _ODCONC 000F1F  
                                                  _ODCOND 000F24  
                                                  _ODCONE 000F2C  
                                                  _RC7PPS 000EFE  
                                   __end_of_GetMotorPower 7AF6  
                                                  i2l2024 64FA  
                                                  i2l1147 9B72  
                                                  i2l2140 841A  
                                                  i2l2133 83E4  
                                                  i2l2222 572A  
                                                  i2l2240 7B90  
                                                  i2l2128 83C6  
                                                  i2l1266 6BE8  
                                                  i2l2323 887C  
                                                  i2l1620 4FF8  
                                                  i2l1277 6C72  
                                                  i2l2191 5566  
                                                  i2l2328 8886  
                                                  i2l2195 564C  
                                                  _INLVLA 000F0D  
                                                  _INLVLB 000F15  
                                                  _INLVLC 000F1D  
                                                  _INLVLD 000F22  
                                                  _INLVLE 000F2A  
                                               ??_Decrypt 001D  
                                  calculateMean@meanValue 0010  
                                                  _OSCFRQ 000EDE  
                         __end_ofi2_VerifyElectricalBrake 888A  
                                                  _TMR0IE 007615  
                                                  _TMR0IF 007655  
                                                  _RX1PPS 000EB5  
                            __end_of_refreshADCZeroOffset 75AA  
                                           ?_init_package 0010  
                                                  _TX1REG 000F9A  
                                                  _TX1STA 000F9E  
                                __end_of_cmdMemoryIsEmpty 80DA  
                                       ?_I2C1_MasterClose 0001  
                                                  _DecCHK 9622  
                                 __end_ofi2_GetMotorPower 7BBC  
                                                  _RFFull 008B  
                                rdBlkRegCompleteHandler@p 0019  
                                               ??_ReadADC 0002  
                                 ??_I2C1_MasterDisableIrq 0010  
                                       ?_I2C1_MasterStart 0001  
                                         eusartparser@pos 00EC  
                    __end_of_sm_execute_menuConfiguration 1886  
                            _sm_execute_menuConfiguration 0F22  
                                       ?_I2C1_MasterWrite 0001  
                                                  _HopCHK 830E  
                                ?_I2C1_MasterWaitForEvent 0001  
                                      ??_I2C1_MasterClose 0010  
                                        _I2C1_DO_TX_EMPTY 8D3C  
                                 controlSelectRemote@temp 00E8  
                                  _SumEnergyADCHist_array 0260  
                                      ??_I2C1_MasterStart 0010  
                                      ??_I2C1_MasterWrite 0022  
                                       _decrementTimeslot 9950  
                    __end_of_TMR1_DefaultInterruptHandler 9E98  
                            _TMR1_DefaultInterruptHandler 9E96  
                                  __end_of_refreshCurrent 9376  
                                           ?_read_package 0011  
                                                  ___lmul 9010  
                                         ??_LoadManufCode 0010  
                                                  ___wmul 99EE  
                                  __end_of_refreshSegment 841C  
                                               ??___awdiv 0018  
                                               ??___lbdiv 0011  
                                               ??___lbmod 0011  
                                               ??___lldiv 0018  
                                      ?_decrementTimeslot 0001  
                                               ??___lwdiv 0014  
                                       ??_i2c_writeNBytes 0027  
                                           _load_New_Menu 48A6  
                             __end_of_keeloqDecryptPacket 5D3C  
                             setValueToEdit@posindex_6979 00E0  
                                ?_EUSART1_SetErrorHandler 0010  
                                                  _memcpy 93BA  
                                        ?_TMR0_Initialize 0001  
                                                  clear_0 7CE0  
                                                  clear_1 7CEC  
                                                  clear_2 7CF8  
                                                  clear_3 7D04  
                                                  clear_4 7D10  
                                        ___awdiv@quotient 001A  
                                       ??_WWDT_TimerClear 0010  
                      __end_of_sm_execute_ControlLearning 28D8  
                              _sm_execute_ControlLearning 21CA  
                                                  isa$std 000001  
                        ??_EUSART1_SetOverrunErrorHandler 0012  
                         ?_EUSART1_SetOverrunErrorHandler 0010  
                                       ??_WWDT_SoftEnable 0010  
                                ??_I2C1_DO_SEND_ADR_WRITE 0011  
                          SetSegmentValueIntermitent@time 0011  
                                  setValueToEdit@menuType 00DE  
                                       ?_I2C1_SetCallback 0010  
                                  ??_I2C1_DO_RX_NACK_STOP 0010  
                                           ??_ShowVersion 001E  
                                         _ADCC_Initialize 91B2  
                                     ??_decrementTimeslot 0003  
                                             ?_CloseOrder 0001  
                                   _I2C1_DO_SEND_ADR_READ 9D42  
                                          _PMD_Initialize 9B44  
                                              _StateTRIAC 0195  
                                           ?_eusartparser 00E0  
                           ?_I2C1_SetDataCompleteCallback 0015  
                                      ??_I2C1_SetCallback 0014  
                                            __mediumconst 0000  
                          __end_of_I2C1_Read1ByteRegister 8EAE  
                                    __end_of_ControlMotor 553C  
                                                  tblptrh 000FF7  
                                                  tblptrl 000FF6  
                                           Decrypt@Buffer 0022  
                                                  tblptru 000FF8  
                                               ??_sumHIST 0014  
                                               ??_sm_init 0017  
                                   SaveNVM_VarSystem@page 00D8  
                              __end_of_actionZone_Closing 4E28  
                               ?_ADCC_GetSingleConversion 0001  
                                         ??_EUSART1_Write 0010  
                       __end_of_ControlDecelarationFactor 9C16  
                TMR2_SetInterruptHandler@InterruptHandler 0010  
                TMR1_SetInterruptHandler@InterruptHandler 0010  
                TMR0_SetInterruptHandler@InterruptHandler 0010  
                                        ??_ControlCurrent 0023  
                                  setValueToEdit@posindex 00DF  
                                 __end_of_TMR1_WriteTimer 9B7C  
                                         _eusart1RxBuffer 027C  
                                          ?_readRFButtons 0001  
                                        ___lbdiv@dividend 0011  
                                 _I2C1_DO_RX_NACK_RESTART 9DF0  
                                         _eusart1TxBuffer 0284  
                                     _SetSegmentValueMain 9B96  
                                        ?_TMR1_Initialize 0001  
                                          ??_init_package 0012  
                                       _SYSTEM_Initialize 96E8  
                              __end_of_actionZone_Opening 52F2  
                          I2C1_SetDataCompleteCallback@cb 0015  
                                         ___lbmod@divisor 0010  
                                              __accesstop 0060  
                                 __end_of__initialization 7D16  
                                         ___lbmod@counter 0012  
                                           Decrypt@packet 001B  
                           setValueToEdit@haveValueToEdit 00E1  
                                        ?_sm_execute_main 00ED  
                                          _setValueToEdit 341C  
                                      getSerialCmd@serial 001B  
                         I2C1_MasterOperation@returnValue 0021  
                                      ?_SYSTEM_Initialize 0001  
                                           ___rparam_used 000001  
                               __end_of_decrementTimeslot 997A  
                                           ??_I2C1_Poller 0020  
                                           ?_Segments_Set 0001  
                                          ??_read_package 0018  
                         ??_setPositionInvertionInClosing 00D8  
                           ?_sm_execute_menuConfiguration 00E9  
                           __end_of_EUSART1_RxDataHandler 9B0C  
                                 _rdBlkRegCompleteHandler 94C0  
                                          __pcstackCOMRAM 0001  
                                         ?_refreshCurrent 0001  
                                   __end_of_getKeyPressed 9C2E  
                                            __pidataBANK0 9E92  
                                            __pidataBANK1 9E9C  
                                            __pidataBANK2 9E30  
                                            __pidataBANK3 9A3A  
                                     ??_SYSTEM_Initialize 0014  
                                             ?_ReadSerial 002E  
                        __end_of_I2C1_MasterEnableRestart 9E86  
                                          ?_load_New_Menu 0001  
                               sm_execute_ControlGate@psm 00E7  
                                               ?_TMR0_ISR 0001  
                                         ?_refreshSegment 0001  
                                               ?_TMR1_ISR 0001  
                                               ?_TMR2_ISR 0001  
                           ?_TMR1_DefaultInterruptHandler 0001  
                         ??_setPositionInvertionInOpening 0032  
                                    ?_SetSegmentValueMain 001C  
                                        ?_TMR2_Initialize 0001  
                                        ___lbdiv@quotient 0013  
                                  __end_of_PMD_Initialize 9B60  
                            ??_I2C1_DO_SEND_RESTART_WRITE 0010  
                                 ??_I2C1_MasterSendTxData 0010  
                                         ??_InitSoftStart 0014  
                                    __end_of_EUSART1_Read 9330  
                                          ??_eusartparser 00E2  
                                  ??_EUSART1_Transmit_ISR 0001  
                                    _getStateOpenPosition 7186  
                               write_eusartparser@package 0010  
                                           ?_RemoveSerial 003A  
                                    __end_of_InitReceiver 9B96  
                         actionZone_Closing@typeOpenOrder 0033  
                             __end_of_EUSART1_Receive_ISR 7FB0  
                                   __end_of_I2C1_DO_RESET 9DCC  
                          keeloqDecryptPacket@commandType 00E9  
                                        sumEnergyADC@sumE 0014  
                        verifyProgramingMode@classic_data 0010  
                                       __end_of_ReqResync 9C8C  
                             VerifyFollowMe@securityClose 0010  
                                        ??_confirmpackage 0015  
                               __end_of_SYSTEM_Initialize 9716  
                                     __end_of_ShowVersion 8CDA  
                                           _eusart1RxHead 0095  
                                           _eusart1TxHead 0097  
                                           _eusart1RxTail 0094  
                                              __pbssBANK0 0060  
                                              __pbssBANK1 0100  
                                              __pbssBANK2 0200  
                                              __pbssBANK3 0300  
                                  __end_of_setValueToEdit 394E  
                                           _eusart1TxTail 0096  
                         __end_of_I2C1_MasterWaitForEvent 9DF0  
                       _EUSART1_TxDefaultInterruptHandler 02EB  
                                            _GetOpenOrder 5D3C  
                                    __end_of_InitSoftStop 92E8  
                         ??_EUSART1_SetRxInterruptHandler 0012  
                          validateRemoteSerialNumber@mask 0035  
                                cmdMemoryIsEmpty@position 002E  
                           __end_of_rd2RegCompleteHandler 98A2  
                                    I2C1_Open@returnValue 0011  
                                                 ?_DecCHK 0010  
                                           ?_WaitPreFlash 0001  
                                        ?i2_GetMotorPower 0001  
                            __end_of_SetSegmentValueLearn 76A6  
                                       ?_controlTimeslots 0001  
                           __end_of_wr2RegCompleteHandler 9876  
                                           ?_NormalKeyGen 0026  
                                   __end_of_sm_send_event 8DF6  
                                   _rd1RegCompleteHandler 98A2  
                                                 ?_HopCHK 0024  
                                          ??_Segments_Set 0001  
              validateRemoteSerialNumber@VerifyOnlySerial 0032  
                                              _edit_Param 0046  
                                       _I2C1_DO_SEND_STOP 9E08  
                                      ??_controlTimeslots 0005  
                                           _button_struct 004C  
                                   _wr1RegCompleteHandler 98CE  
                         __end_of_EUSART1_SetErrorHandler 9DC2  
                                       getHopCode@tempHop 0020  
                                       getHopCode@tempPos 0022  
                        __end_of_TMR0_SetInterruptHandler 9D90  
                                                 ?___lmul 001D  
                                      ?_I2C1_DO_SEND_STOP 0001  
                                                 ?___wmul 0010  
                                              ??_TMR0_ISR 0003  
                                              _getHopCode 6CDE  
                                              ??_TMR1_ISR 000A  
                                              ??_TMR2_ISR 0005  
                                 __end_of_ADCC_Initialize 9202  
                                         _I2C1_MasterOpen 9C46  
                                   ??_SetSegmentValueMain 001D  
                                         _I2C1_MasterStop 9E7E  
                                         _I2C1_Initialize 9CE0  
                                     __end_of_I2C1_Poller 9D26  
                                __end_of_setFlashLigth_ON 957C  
                                                 _ADFLTRH 000F73  
                                                 _ADFLTRL 000F72  
                                                 ?_memcpy 0010  
                                    readRFButtons@keyType 0087  
                                       __end_of_StopOrder 9B28  
                                          ___lmul@product 0025  
                                                 _ADPREVH 000F62  
                                                 _ADPREVL 000F61  
                                write_eusartparser@debug2 0021  
                              __end_of_ResetDefaultMemory 6894  
                                                 _ADSTPTH 000F69  
                                                 _ADSTPTL 000F68  
                          _menuConfiguration_stateMachine 02BB  
                                         ?_PMD_Initialize 0001  
                       keeloq_classic_decrypt_packet@data 0038  
                                  ?_I2C1_DO_SEND_ADR_READ 0001  
                                           _erroranterior 018D  
                                     ??_I2C1_DO_SEND_STOP 0010  
                  __end_of_EUSART1_SetFramingErrorHandler 9DB8  
                          _EUSART1_SetFramingErrorHandler 9DAE  
                                    _refreshADCZeroOffset 74AC  
                                ??_sm_execute_ControlGate 00E9  
                                   i2c_readDataBlock@data 0024  
                                   _VerifyElectricalBrake 879A  
                                                 i2l13145 9B08  
                                                 i2l14521 7B46  
                                                 i2l14513 7B0A  
                                                 i2l14523 7B52  
                                                 i2l14533 7B80  
                                                 i2l14543 7BB2  
                                                 i2l14801 5002  
                                                 i2l14721 4E4A  
                                                 i2l14563 8856  
                                                 i2l14813 5026  
                                                 i2l14725 4E60  
                                                 i2l14717 4E3A  
                                                 i2l14823 504E  
                                                 i2l14807 5010  
                                                 i2l14727 4E68  
                                                 i2l14817 5036  
                                                 i2l14753 4EEE  
                                                 i2l14737 4E9C  
                                                 i2l14569 8872  
                                                 i2l14921 56D0  
                                                 i2l14771 4F5C  
                                                 i2l14747 4EC8  
                                                 i2l14827 5066  
                                                 i2l14781 4F90  
                                                 i2l14765 4F36  
                                                 i2l14933 570E  
                                                 i2l14861 55A2  
                                                 i2l14845 555C  
                                                 i2l14767 4F46  
                                                 i2l14769 4F56  
                                                 i2l14945 574A  
                                                 i2l14867 55BC  
                                                 i2l14859 5598  
                                                 i2l14789 4FB8  
                                                 i2l14877 55E6  
                                                 i2l14957 9076  
                                                 i2l14981 83E8  
                                                 i2l14991 8416  
                                                 i2l14889 5620  
                                                 i2l14897 565E  
                                                 i2l16921 6BC0  
                                                 i2l16913 6BAC  
                                                 i2l16851 96AC  
                                                 i2l16871 7FAA  
                                                 i2l16937 6C0A  
                                                 i2l16971 6C8A  
                                                 i2l16947 6C34  
                                                 i2l16957 6C56  
                                                 i2l16985 6CBE  
                                                 i2l16979 6CA6  
                          actionZone_Opened@typeOpenOrder 0021  
                                   ?_getStateOpenPosition 0001  
                                          ??_RemoveSerial 00D8  
                                              _fimdecurso 0175  
                            ?_EUSART1_DefaultErrorHandler 0001  
                                       _I2C1_MasterIsNack 9D50  
                                                 _SP1BRGH 000F9C  
                                                 _SP1BRGL 000F9B  
                                              _dispStruct 0072  
                                                 _OSCCON1 000ED8  
                                                 _OSCCON3 000EDA  
                                               _I2C1_Open 84A0  
                               ??_I2C1_DO_RX_NACK_RESTART 0010  
                                                 _RGB_Set 9D26  
                                              _auxCounter 00FC  
                                         ??_readRFButtons 003B  
                                                 _OSCTUNE 000EDD  
                                       _I2C1_MasterSetIrq 9E42  
                                                 _SSP1ADD 000F93  
                                                 _SLRCONA 000F0E  
                                                 _SLRCONB 000F16  
                                                 _SLRCONC 000F1E  
                                                 _SLRCOND 000F23  
                                                 _SLRCONE 000F2B  
                                                 _WDTCON0 000ED2  
                                                 _SSP1BUF 000F92  
                                                 _WDTCON1 000ED3  
                                      ?_I2C1_MasterIsNack 0001  
                              ?_I2C1_DO_SEND_RESTART_READ 0001  
                          ??_I2C1_SetDataCompleteCallback 0019  
                                        ?_TMR1_WriteTimer 0001  
                                      ?_I2C1_MasterSetIrq 0001  
                            __end_of_generateErrorLearnig 8C74  
                                            _classic_data 0290  
                                          load_New_Menu@i 0023  
                                         ?_setValueToEdit 003A  
                                                 _RFcount 007E  
                         ??_keeloq_classic_decrypt_packet 00D8  
                                                 _Decrypt 7964  
                                  eusartparser@relcounter 00F7  
                                          ??_WaitPreFlash 0018  
                                                 _RFstate 019D  
                                      _i2c1_fsmStateTable 0F01  
                                          ??_NormalKeyGen 0028  
                                     ??_I2C1_MasterIsNack 0010  
  __end_of_rd1RegCompleteHandler@i2c1_master_example$F500 984A  
          _rd1RegCompleteHandler@i2c1_master_example$F500 981E  
  __end_of_rd2RegCompleteHandler@i2c1_master_example$F511 981E  
          _rd2RegCompleteHandler@i2c1_master_example$F511 97F2  
  __end_of_wr2RegCompleteHandler@i2c1_master_example$F523 9926  
          _wr2RegCompleteHandler@i2c1_master_example$F523 98FA  
  __end_of_wr1RegCompleteHandler@i2c1_master_example$F517 97F2  
                               __end_of_I2C1_DO_SEND_STOP 9E10  
          _wr1RegCompleteHandler@i2c1_master_example$F517 97C6  
__end_of_rdBlkRegCompleteHandler@i2c1_master_example$F535 94C0  
        _rdBlkRegCompleteHandler@i2c1_master_example$F535 9480  
                               ??_rdBlkRegCompleteHandler 001B  
                          getCurrentComparator@tempOffset 0020  
                                                 _ReadADC 9066  
                                      I2C1_SetCallback@cb 0010  
                                           _write_package 9742  
                                     ??_I2C1_MasterSetIrq 0010  
                                     _controlSelectRemote 3E56  
                              __end_of_clearLearningValue 8720  
                                                 _NextHop 0187  
                                                 __Hparam 0000  
                              __end_of_write_eusartparser 2E7C  
                                                 __Lparam 0000  
                                         _WWDT_Initialize 9D68  
                                         ??_load_New_Menu 0020  
                              ??_TMR2_SetInterruptHandler 0012  
                                               _ADC_array 0200  
                                            _getSerialCmd 9202  
                                                 ___awdiv 841C  
                                                 ___lbdiv 957C  
                                                 ___lbmod 9926  
                                                 ___lldiv 8524  
                                              _readInputs 73A4  
                                         _controlVelocity 575E  
                                                 ___lwdiv 9110  
                                           _OpenFullOrder 99C8  
                                            __psmallconst 0F00  
                                     RemoveSerial@cmdType 00DA  
                   __end_of_setPositionInvertionInClosing 7062  
                           _setPositionInvertionInClosing 6F3A  
                          ??_sm_execute_menuConfiguration 00EB  
                                     _EUSART1_is_rx_ready 9D06  
                                          getHopCode@data 0016  
                                                 _difTime 0194  
                                                 __pcinit 7C70  
                                           ?_I2C1_DO_IDLE 0001  
                                           ?_I2C1_DO_RCEN 0001  
                                                 __ramtop 0F00  
                                  i2c_writeNBytes@address 0039  
                                   __end_of_getTypeRemote 9E3C  
                                    __end_of_init_package 9686  
                                                 __ptext0 6894  
                                                 __ptext1 394E  
                                                 __ptext2 0F22  
                                                 __ptext3 341C  
                                                 __ptext4 48A6  
                                                 __ptext5 9B7C  
                                                 __ptext6 3E56  
                                                 __ptext7 9E36  
                                                 __ptext8 9202  
                                                 __ptext9 7BBC  
                                   ?_refreshADCZeroOffset 0001  
                                              _memoryTEMP 02A0  
                                      i2c_readDataBlock@d 002A  
                                _I2C1_MasterEnableRestart 9E82  
                          ??_TMR1_DefaultInterruptHandler 0001  
                               __end_of_I2C1_MasterIsNack 9D5C  
                            ?_I2C1_SetAddressNackCallback 0015  
                                               _T1CONbits 000FCF  
                   __end_of_setPositionInvertionInOpening 7964  
                           _setPositionInvertionInOpening 7888  
                                                 _lastKey 0199  
                                              _readbutton 8BA0  
                                   _OSCILLATOR_Initialize 9C8C  
                                   OpenWalkOrder@diffTime 001A  
                                             _ShowVersion 8C74  
                                    ?_controlSelectRemote 0001  
                             ?_validateRemoteSerialNumber 002E  
                                        _InitFullAutoTime 9BB0  
                               __end_of_I2C1_MasterSetIrq 9E48  
                             checkNVM_VarSystem@saveParam 003A  
                                                 _menu_st 0151  
                                __end_of_I2C1_DO_TX_EMPTY 8D9A  
                                  RemoveSerial@tempSerial 00DB  
                                       __end_of_setRGB_ON 816A  
                                      _EUSART1_Initialize 8626  
                                ??_PIN_MANAGER_Initialize 0010  
                               ?_TMR1_SetInterruptHandler 0010  
                                              ?_I2C1_Open 0001  
                                                 _sumHIST 76A6  
                                                 _sm_init 8FBA  
                                          _BufferRF_12BIT 018B  
                                             sumHIST@sumH 001C  
                                    __end_of_read_package 91B2  
                                                 _var_sys 0100  
                           ??_EUSART1_DefaultErrorHandler 0001  
                             ??_ControlDecelarationFactor 0010  
                                ?_I2C1_CallbackReturnStop 0019  
                                     init_package@package 0010  
                                           _OpenWalkOrder 8AC4  
                                    _zeroCrossingWaitTime 02F8  
                                       SetSegmentValue@d1 001D  
                                       SetSegmentValue@d2 001C  
                       __end_of_I2C1_DO_SEND_RESTART_READ 9E28  
                                    end_of_initialization 7D16  
                              __end_of_I2C1_MasterSendAck 9E4E  
                                    ?_EUSART1_is_rx_ready 0001  
                                     _I2C1_MasterClearIrq 9E54  
                                     ?_EUSART1_Initialize 0001  
                                               _PCON0bits 000FD7  
                                                 memcpy@d 0017  
                                                 memcpy@n 0014  
                                                 memcpy@s 0019  
                              __end_of_I2C1_MasterStartRx 9E76  
                             _EUSART1_OverrunErrorHandler 02E5  
                                  ?_rd1RegCompleteHandler 0019  
                                         _i2c_writeNBytes 8900  
                              ?_GetSecurityStateInClosing 0001  
                                  _I2C1_DO_SEND_ADR_WRITE 9D34  
                                       ?_cmdMemoryIsEmpty 002E  
                                          ?_write_package 0011  
                                           _calculateMean 8CDA  
                            __end_of_sm_get_current_state 9D06  
                                               i2u2300_48 003E  
                                               i2u1510_40 5692  
                                               i2u1502_40 5614  
                                               i2u1503_40 561A  
                                               i2u2303_48 0056  
                                               i2u1513_40 56B0  
                                               i2u1522_40 571A  
                                               i2u1530_45 908E  
                                               i2u1451_40 7B8C  
                                               i2u1523_40 5722  
                                               i2u1515_40 56C6  
                                               i2u1452_40 7BA0  
                                               i2u1460_40 886C  
                                               i2u1532_40 83A6  
                                               i2u1453_40 7BAE  
                                               i2u1525_40 5742  
                                               i2u1509_40 5684  
                                               i2u1446_40 7B24  
                                               i2u1534_40 83F8  
                                               i2u1519_40 56F6  
                            __end_of_I2C1_DO_SEND_RESTART 9E18  
                                               i2u1472_40 4EDC  
                                               i2u1448_40 7B60  
                                               i2u1456_40 8836  
                                               i2u1449_40 7B6E  
                                               i2u1369_40 996A  
                                               i2u1474_40 4F06  
                                               i2u1490_40 5556  
                                               i2u1538_40 64EE  
                                               i2u1475_40 4F16  
                                               i2u1467_40 4E60  
                                               i2u1539_40 6562  
                                    __end_of_eusartparser 21CA  
                                               i2u3411_47 9CAC  
                                               i2u1476_40 4F26  
                                         _WWDT_TimerClear 9B28  
                                               i2u1900_48 7F6C  
                                               i2u1485_40 5024  
                                 __end_of_I2C1_MasterOpen 9C5E  
                                               i2u1900_49 7F7E  
                                  ?_wr1RegCompleteHandler 0019  
                                               i2u1902_48 7F96  
                                               i2u1920_40 6C20  
                                               i2u1904_48 9A28  
                                               i2u1497_40 55B6  
                                   __end_of_ControlLights 48A6  
                                               i2u1908_48 952E  
                                               i2u1932_48 6CCC  
                                               i2u1917_40 6BFC  
                                 __end_of_I2C1_MasterStop 9E82  
                                 __end_of_I2C1_Initialize 9CF4  
                                         ___lldiv@divisor 0014  
                                   __end_of_ControlInputs 7186  
                   __end_of_EUSART1_SetRxInterruptHandler 9DA4  
                           _EUSART1_SetRxInterruptHandler 9D9A  
                                               i2u1898_48 7F40  
                                               i2u1898_49 7F52  
                                             _I2C1_Poller 9D16  
                        ??_SetSegmentValueIntermitentMain 001F  
                         ?_SetSegmentValueIntermitentMain 001C  
                                         _WWDT_SoftEnable 9E66  
                                         ___lldiv@counter 001C  
                                      ??_cmdMemoryIsEmpty 002F  
                               ?_I2C1_CallbackReturnReset 0019  
                           __end_of_I2C1_MasterDisableIrq 9E8E  
                                             _I2C1_Status 023C  
                              ?_GetSecurityStateInOpening 0001  
                                            _ControlMotor 52F2  
                                  SaveNVM_VarSystem@point 00DB  
                                                 postdec1 000FE5  
                                                 postdec2 000FDD  
                                                 postinc0 000FEE  
                                                 postinc1 000FE6  
                                                 postinc2 000FDE  
                                             ?_getHopCode 0016  
                                          ?_OpenFullOrder 0001  
                        SetSegmentValueIntermitentMain@d1 001F  
                        SetSegmentValueIntermitentMain@d2 001C  
                                     _I2C1_MasterSendNack 9E4E  
                                           HopCHK@hopDiff 0026  
                     __end_of_I2C1_SetAddressNackCallback 9C46  
                             _I2C1_SetAddressNackCallback 9C2E  
                                        ?_ADCC_Initialize 0001  
                                     _getTimeDecelaration 77A0  
                                              _sm_restart 9376  
                        __end_of_ADCC_GetSingleConversion 9CB8  
                                    ?_I2C1_MasterClearIrq 0001  
                                          ??_I2C1_DO_IDLE 0010  
                                    ??_EUSART1_Initialize 0012  
                                        NormalKeyGen@SEED 02D7  
                                          ??_I2C1_DO_RCEN 0010  
                      __end_of_I2C1_DO_SEND_RESTART_WRITE 9E20  
                              _I2C1_DO_SEND_RESTART_WRITE 9E18  
                       actionZone_Closing@securityClosing 0032  
                             ?_sm_execute_ControlLearning 00DC  
                                _TMR0_SetInterruptHandler 9D86  
                                               _PORTAbits 000F8D  
                                               _PORTBbits 000F8E  
                                  ?_VerifyElectricalBrake 0001  
                                               _PORTEbits 000F91  
                         __end_of_rdBlkRegCompleteHandler 9500  
                                  ??_getStateOpenPosition 0032  
                                            ??_CloseOrder 0018  
                                   ??_controlSelectRemote 00E0  
                                    _SetSegmentValueLearn 75AA  
                           ??_I2C1_SetAddressNackCallback 0019  
                               I2C1_Read1ByteRegister@reg 0022  
                                        ___lbmod@dividend 0011  
                                    __end_of_Segments_Set 9D68  
                                     _ControlCounterMoves 8F08  
                            _controlLearning_stateMachine 02B0  
                         I2C1_SetDataCompleteCallback@ptr 0017  
                                          ?_OpenWalkOrder 0001  
                                              _stateMotor 0083  
                                      eusartparser@i_7310 00EA  
                                      eusartparser@i_7311 00EB  
                                      eusartparser@i_7303 00E9  
                                      eusartparser@i_7312 00EF  
                                      eusartparser@i_7304 00ED  
                                      eusartparser@i_7313 00F0  
                                      eusartparser@i_7305 00EE  
                                      eusartparser@i_7314 00F4  
                                      eusartparser@i_7306 00F1  
                                      eusartparser@i_7315 00F5  
                                      eusartparser@i_7307 00F2  
                                      eusartparser@i_7316 00F6  
                                      eusartparser@i_7308 00F3  
                                           ?_sumEnergyADC 0010  
                          I2C1_CallbackReturnReset@funPtr 0019  
                       actionZone_Opening@securityClosing 00E4  
                                    ?_I2C1_MasterSendNack 0001  
                         keeloqDecryptPacket@classic_data 00E2  
                                     EUSART1_Write@txData 0010  
                                       ??_ClearFlag_rfCMD 0010  
                                    ?_getTimeDecelaration 0029  
                                   ??_EUSART1_is_rx_ready 0010  
                                       _saveEnergyADCHist 997A  
                                 __end_of_WWDT_Initialize 9D72  
                                             ___lbmod@rem 0013  
                       actionZone_Opening@securityOpening 00E5  
                                      eusartparser@buffer 0185  
                                          ?_calculateMean 0010  
                                        ??_refreshCurrent 0021  
                                       ??_SetSegmentValue 001D  
                                            _EUSART1_Read 92E8  
                                      ?_saveEnergyADCHist 0010  
                                      eusartparser@save_f 018F  
                       __end_of_GetSecurityStateInClosing 7E70  
                                      eusartparser@serial 00F8  
                                        ??_refreshSegment 0002  
                                          __end_of_DecCHK 9654  
                                       _controlLearnDigit 96B8  
                                 __end_of_controlVelocity 597C  
                                    ?_ControlCounterMoves 0001  
                                     setValueToEdit@value 01FD  
                                      _actionZone_Closing 4B9C  
                                    __end_of_RemoveSerial 8626  
                                          __end_of_HopCHK 8396  
                                      __end_of_CloseOrder 99C8  
                                 _zeroCrossingWaitTimeIdx 0084  
                                            _InitReceiver 9B7C  
                               _ControlDecelarationFactor 9BFE  
                                      ?_controlLearnDigit 0001  
                                    _timer0ReloadVal16bit 028E  
                       __end_of_GetSecurityStateInOpening 7F16  
                                       setRGB_ON@RGBLigth 0015  
                                            ??_ReadSerial 0030  
                                     ??_saveEnergyADCHist 0012  
                            __end_of_INTERRUPT_Initialize 9E6E  
                                      _actionZone_Opening 509E  
                                   ??_I2C1_MasterClearIrq 0010  
                    __end_of_TMR2_DefaultInterruptHandler 9E96  
                            _TMR2_DefaultInterruptHandler 9E94  
                                             ?_readInputs 0001  
                                               _DispTable 03D2  
                                          __end_of___lmul 9066  
                                   __end_of_LoadManufCode 9AA6  
                                     ?_actionZone_Closing 0001  
                                          __end_of___wmul 9A14  
                                          _I2C1_DO_RX_ACK 9E00  
                                  ??_refreshADCZeroOffset 0017  
                                    _generateErrorLearnig 8C0C  
                                            _InitSoftStop 929E  
                                     ??_controlLearnDigit 0013  
                                 i2_VerifyElectricalBrake 8812  
                                          __end_of_memcpy 93FE  
                                  ?_OSCILLATOR_Initialize 0001  
                                    __end_of_WaitPreFlash 89E4  
                            __end_of_getCurrentComparator 63DA  
                                      sm_send_event@event 0014  
                                    __end_of_NormalKeyGen 73A4  
                                           _saveNewSerial 89E4  
                                             ?_readbutton 0001  
                                     ?_actionZone_Opening 0001  
                                   ?_SetSegmentValueLearn 0001  
                         __end_of_I2C1_CallbackReturnStop 9E7E  
                          ?_setPositionInvertionInClosing 0001  
                           __end_of_I2C1_MasterSendTxData 9E30  
                                       _read_eusartparser 2E7C  
                                   refreshADCZeroOffset@i 0017  
                                     start_initialization 7C70  
                             i2GetMotorPower@defineatraso 0004  
                                             ??_I2C1_Open 0010  
                                          ??_sumEnergyADC 0012  
                                      ?_read_eusartparser 0018  
                                             __end_of_rxi 509E  
                                   ??_I2C1_MasterSendNack 0010  
                                 __end_of_i2c_writeNBytes 8974  
                          ?_setPositionInvertionInOpening 0001  
                                   ??_getTimeDecelaration 002D  
           EUSART1_SetRxInterruptHandler@interruptHandler 0010  
           EUSART1_SetTxInterruptHandler@interruptHandler 0010  
                               __end_of_saveEnergyADCHist 99A2  
                                 __end_of_WWDT_TimerClear 9B44  
                                    ??_actionZone_Closing 0032  
                                   __end_of_EUSART1_Write 9480  
                                 __end_of_WWDT_SoftEnable 9E6A  
                                      __end_of_ReadSerial 8AC4  
                                         ??_write_package 0018  
                                  rd1RegCompleteHandler@p 0019  
                            __end_of_verifyProgramingMode 9622  
                                               _ReqResync 9C76  
                               __end_of_controlLearnDigit 96E8  
                                     ??_read_eusartparser 001A  
                                                ??_DecCHK 0012  
                                       _programmer_enable 0085  
                                    ??_actionZone_Opening 003B  
                                  _sm_execute_ControlGate 4238  
                 sm_execute_ControlLearning@typeOpenOrder 003A  
                                                ??_HopCHK 0026  
                               refreshADCZeroOffset@media 0018  
                                I2C1_SetBuffer@bufferSize 0012  
                                   ??_ControlCounterMoves 003A  
                                       _controlSaveRemote 7BBC  
                                        ?_I2C1_MasterOpen 0001  
                            keeloqDecryptPacket@hop_error 00E8  
                                        ?_I2C1_MasterStop 0001  
                                        ?_I2C1_Initialize 0001  
                                 saveNewSerial@tempSerial 00D8  
                                  controlSelectRemote@pos 00E2  
                                         ??_OpenFullOrder 0018  
                                   calculateMean@newValue 0014  
                                      ?_controlSaveRemote 0001  
                                 sm_get_current_state@psm 0010  
                                        ??_PMD_Initialize 0010  
                                                ??___lmul 0025  
                                  __end_of_I2C1_DO_RX_ACK 9E08  
                                                ??___wmul 0014  
                                      _zeroCrossingLength 0198  
                                          _VerifyFollowMe 9A60  
                                  wr1RegCompleteHandler@p 0019  
                                   _EUSART1_RxDataHandler 9AEA  
                                 ??_I2C1_DO_SEND_ADR_READ 0010  
                          ?_EUSART1_SetRxInterruptHandler 0010  
                                             ?_sm_restart 0010  
                                             __pdataBANK0 00FC  
                                             __pdataBANK1 01FF  
                                             __pdataBANK2 02F4  
                                             __pdataBANK3 03D2  
                                   ?_generateErrorLearnig 0001  
                                                ??_memcpy 0016  
                                       ?_setFlashLigth_ON 0010  
                           ?_TMR2_DefaultInterruptHandler 0001  
                                       _controlMotorForce 553C  
                                     ??_controlSaveRemote 0020  
                               __end_of_read_eusartparser 341C  
                                          ?_saveNewSerial 00D8  
                                        I2C1_Open@address 0010  
                                          _eusart1RxCount 0093  
                                      ??_setFlashLigth_ON 0012  
                                _ADCC_GetSingleConversion 9CA2  
                                      ?_controlMotorForce 0001  
                                   __end_of_InitSoftStart 8E52  
                                               _StopOrder 9B0C  
                                    _sm_get_current_state 9CF4  
                                             __pbssCOMRAM 003B  
                                         ??_OpenWalkOrder 0018  
                                    _I2C1_DO_SEND_RESTART 9E10  
                                getTimeDecelaration@state 0031  
                       _EUSART1_RxDefaultInterruptHandler 02E9  
                                           __pcstackBANK0 00D8  
                                        ??_setValueToEdit 00DC  
                                           __pcstackBANK2 02ED  
                                                ?_RGB_Set 0001  
                                        _brakeElectric_st 0078  
                             ??_I2C1_DO_SEND_RESTART_READ 0010  
                                     ??_controlMotorForce 0005  
                                      _ResetDefaultMemory 670A  
                                    ReadSerial@tempSerial 002E  
                                         ??_calculateMean 0018  
                         ??_EUSART1_SetTxInterruptHandler 0012  
                                    __end_of_I2C1_DO_IDLE 9DE0  
                        ??_EUSART1_SetFramingErrorHandler 0012  
                         ?_EUSART1_SetFramingErrorHandler 0010  
                                                ?_Decrypt 001B  
                                    __end_of_I2C1_DO_RCEN 9DD6  
                                           _GetMotorPower 7A30  
                                        ?_WWDT_Initialize 0001  
                                              ?_ReqResync 0010  
                               __end_of_controlSaveRemote 7C70  
                                            _init_package 9654  
                           I2C1_SetAddressNackCallback@cb 0015  
                                      sm_execute_main@psm 00ED  
                                                ?_ReadADC 0001  
                                            RGB_Set@value 0010  
                                   _TMR0_InterruptHandler 02E1  
                                     ?_ResetDefaultMemory 0001  
                                               __pnvBANK1 01FE  
                                               __pnvBANK2 02DB  
                                   _rd2RegCompleteHandler 9876  
                                        _InitWalkAutoTime 9CB8  
                                        ?_controlVelocity 0001  
                                __end_of_InitFullAutoTime 9BCA  
                             __end_of_SetSegmentValueMain 9BB0  
                          VerifyElectricalBrake@tempState 0010  
                        i2VerifyElectricalBrake@tempState 0001  
                                        ___lwdiv@dividend 0010  
                                  _PIN_MANAGER_Initialize 7FB0  
                                  __end_of_VerifyFollowMe 9A84  
                                   _wr2RegCompleteHandler 984A  
                              ??_I2C1_MasterEnableRestart 0010  
                                               __pintcode 0008  
                                            _read_package 9162  
                                          _I2C1_MasterFsm 90BC  
                              __end_of_checkNVM_VarSystem 60A4  
                        __end_of_TMR1_SetInterruptHandler 9D86  
                         ADCC_GetSingleConversion@channel 0001  
                                         ?_I2C1_DO_RX_ACK 0001  
                                                ?___awdiv 0014  
                                               __ptext100 7FB0  
                                               __ptext101 9C8C  
                                                ?___lbdiv 0010  
                                               __ptext110 91B2  
                                               __ptext102 9E6A  
                                               __ptext111 9D06  
                                               __ptext103 9CE0  
                                               __ptext200 9E96  
                                               __ptext120 9330  
                                               __ptext112 52F2  
                                               __ptext104 8626  
                                               __ptext201 9A14  
                                               __ptext121 76A6  
                                               __ptext113 879A  
                                               __ptext105 9D90  
                                               __ptext210 0000  
                                               __ptext202 4E28  
                                               __ptext130 95B6  
                                               __ptext122 81F6  
                                               __ptext114 4582  
                                               __ptext106 9D9A  
                                               __ptext203 9E98  
                                               __ptext131 8900  
                                               __ptext123 997A  
                                               __ptext115 80DA  
                                               __ptext107 9DA4  
                                               __ptext204 9686  
                                               __ptext140 90BC  
                                               __ptext132 93BA  
                                               __ptext124 74AC  
                                               __ptext116 9D26  
                                               __ptext108 9DAE  
                                               __ptext205 7F16  
                                               __ptext141 9250  
                                               __ptext133 9C2E  
                                               __ptext125 9110  
                                               __ptext117 9540  
                                               __ptext109 9DB8  
                                               __ptext206 9E5A  
                                               __ptext150 9DCC  
                                               __ptext142 9DC2  
                                               __ptext134 84A0  
                                               __ptext126 6240  
                                               __ptext118 7062  
                                               __ptext207 9E9A  
                                               __ptext151 8720  
                                               __ptext143 9DF0  
                                               __ptext135 9C46  
                                               __ptext127 99EE  
                                               __ptext119 6A1C  
                                               __ptext208 9E60  
                                               __ptext160 9E48  
                                               __ptext152 8282  
                                               __ptext144 9DF8  
                                               __ptext136 9DE0  
                                               __ptext128 7A30  
                                               __ptext209 9AEA  
                                               __ptext161 9E6E  
                                               __ptext153 9D34  
                                               __ptext145 9E00  
                                               __ptext137 979A  
                                               __ptext129 8F08  
                                               __ptext170 94C0  
                                               __ptext162 9E4E  
                                               __ptext154 9D42  
                                               __ptext146 9E08  
                                               __ptext138 9D16  
                                               __ptext171 984A  
                                               __ptext163 9E72  
                                               __ptext155 9DD6  
                                               __ptext147 9E10  
                                               __ptext139 9DE8  
                                               __ptext180 9E82  
                                               __ptext172 9876  
                                               __ptext164 9E76  
                                               __ptext156 8D3C  
                                               __ptext148 9E18  
                                               __ptext181 9E86  
                                               __ptext173 98A2  
                                               __ptext165 9E7A  
                                               __ptext157 9E42  
                                               __ptext149 9E20  
                                               __ptext190 63DA  
                                               __ptext182 9AC8  
                                               __ptext174 98CE  
                                               __ptext166 9480  
                                               __ptext158 9D50  
                                               __ptext191 9950  
                                               __ptext183 9E8A  
                                               __ptext175 98FA  
                                               __ptext167 97C6  
                                               __ptext159 9E28  
                                               __ptext192 9E94  
                                               __ptext184 9E8E  
                                               __ptext176 9C5E  
                                               __ptext168 97F2  
                                               __ptext193 9066  
                                               __ptext185 9E54  
                                               __ptext177 8B32  
                                               __ptext169 981E  
                                               __ptext194 9CA2  
                                               __ptext178 9BE4  
                                               __ptext195 9500  
                                               __ptext187 6B90  
                                               __ptext179 9E7E  
                                               __ptext196 553C  
                                               __ptext188 8396  
                                               __ptext197 8812  
                                               __ptext189 9D5C  
                                               __ptext198 7AF6  
                                               __ptext199 9B60  
                                                ?___lbmod 0010  
                                 write_eusartparser@debug 001F  
                            ??_SetSegmentValueIntermitent 0013  
                                                ?___lldiv 0010  
                               ??i2_VerifyElectricalBrake 0001  
                               __end_of_controlMotorForce 575E  
                                                ?___lwdiv 0010  
                                   confirmpackage@confirm 0014  
                                    i2c_readDataBlock@len 0026  
                                    i2c_readDataBlock@reg 0022  
                                   confirmpackage@package 0012  
                                 _I2C1_MasterWaitForEvent 9DE8  
                                        _I2C1_MasterClose 9E8E  
                         DecryptPacket_12BIT@classic_data 00E2  
                                ??_I2C1_Read1ByteRegister 0023  
                                          _I2C1_SetBuffer 9BE4  
                            ??_INTERRUPT_InterruptManager 000A  
                                  ??_SetSegmentValueLearn 0010  
                                        _I2C1_MasterStart 9E86  
                                    NormalKeyGen@SKEYtemp 002C  
                                        _I2C1_MasterWrite 9DE0  
                                      _clearLearningValue 86A4  
                                      _write_eusartparser 28D8  
                                    ??_ResetDefaultMemory 003A  
                                                _BAUD1CON 000F9F  
                                             __smallconst 0F00  
                                   ?_sm_get_current_state 0010  
                                            ?_ShowVersion 0001  
                                                _F2Chance 019A  
                                              ?_StopOrder 0001  
              __end_of_EUSART1_DefaultOverrunErrorHandler 9E60  
                    ??_EUSART1_DefaultOverrunErrorHandler 0001  
                     ?_EUSART1_DefaultOverrunErrorHandler 0001  
                      _EUSART1_DefaultOverrunErrorHandler 9E5A  
                                   ?_I2C1_DO_SEND_RESTART 0001  
                                       _i2c_readDataBlock 888A  
                                            _eusartparser 1886  
                                    _EUSART1_ErrorHandler 02E3  
                                       ?_I2C1_DO_TX_EMPTY 0001  
                                                ?_sumHIST 0010  
                                                ?_sm_init 0012  
                                 _EUSART1_SetErrorHandler 9DB8  
                                      ?_i2c_readDataBlock 0022  
                                     ReqResync@CurrentHop 0010  
                        __end_of_I2C1_CallbackReturnReset 9E7A  
                                     ?_clearLearningValue 0001  
                                        ___lwdiv@quotient 0015  
                                     ?_write_eusartparser 0010  
                                        ?_i2c_writeNBytes 0022  
                                      ??_I2C1_DO_TX_EMPTY 001B  
                                                _T2CLKCON 000FBF  
                                   __end_of_readRFButtons 670A  
                                 ??_rd1RegCompleteHandler 001B  
                                 ?_I2C1_DO_SEND_ADR_WRITE 0001  
                                               _setRGB_ON 80DA  
                               I2C1_MasterSendTxData@data 0010  
                                        ?_WWDT_TimerClear 0001  
                                    _INTERRUPT_Initialize 9E6A  
                                          ?_GetMotorPower 0001  
                                 ??_wr1RegCompleteHandler 001B  
                                        ?_WWDT_SoftEnable 0001  
                                              sumHIST@max 0018  
                                              sumHIST@min 001A  
                                       ??_TMR0_Initialize 0012  
                                     ??_i2c_readDataBlock 0028  
                                        _I2C1_SetCallback 8B32  
                                              sm_init@psm 0012  
                                          ___wmul@product 0014  
                                                _LATAbits 000F83  
                 EUSART1_SetErrorHandler@interruptHandler 0010  
                                                _LATCbits 000F85  
                                read_eusartparser@package 0018  
                                                _LATDbits 000F86  
                                                _LATEbits 000F87  
                                              _I2C1_DO_RX 8720  
                                              _I2C1_DO_TX 8282  
                             ??_GetSecurityStateInClosing 0014  
                                                _PIE0bits 000EC2  
                                    _getCurrentComparator 6240  
                                                _PIE3bits 000EC5  
                                                _PIE4bits 000EC6  
                                              DecCHK@data 0010  
                                                Decrypt@i 001E  
                                                Decrypt@j 001F  
                                                Decrypt@p 0020  
                                         _firstselectflag 01FF  
                                     _DecryptPacket_12BIT 816A  
                                              _I2C1_Close 9AC8  
                         setValueToEdit@ParameterSelected 003A  
                                            ?_I2C1_Poller 0001  
                                  __end_of_I2C1_MasterFsm 9110  
                            __end_of_I2C1_MasterGetRxData 9E72  
                              ??_TMR0_SetInterruptHandler 0012  
                                                _PIR0bits 000ECA  
                                            _Segments_Set 9D5C  
                                                _PIR3bits 000ECD  
                                         ?_VerifyFollowMe 0001  
                                                _PIR4bits 000ECE  
                                readRFButtons@rollingCode 0189  
                             ??_GetSecurityStateInOpening 0014  
                                  ?_EUSART1_RxDataHandler 0001  
                                    ??_clearLearningValue 0010  
                                      _I2C1_MasterSendAck 9E48  
                                    ??_write_eusartparser 0017  
                                    __end_of_sumEnergyADC 8282  
                               _I2C1_DO_SEND_RESTART_READ 9E20  
                                            ??_getHopCode 0018  
                                               _pointSync 007A  
                                   __end_of_load_New_Menu 4B9C  
                                                _SSP1CON1 000F96  
                                                _SSP1CON2 000F97  
                                  ??_generateErrorLearnig 0017  
                                                _TMR0_ISR 9A14  
                                                _TMR1_ISR 9500  
                                                _TMR2_ISR 6B90  
                                           _getKeyPressed 9C16  
                                 ??_VerifyElectricalBrake 0010  
                                  __end_of_I2C1_SetBuffer 9BFE  
                                               _temppower 0193  
                                         _powerControl_st 017B  
                                                _SSP1STAT 000F95  
                    __end_of_I2C1_SetDataCompleteCallback 9C76  
                            _I2C1_SetDataCompleteCallback 9C5E  
                                      _I2C1_MasterStartRx 9E72  
                                         ??_saveNewSerial 00DD  
                             ?_I2C1_DO_SEND_RESTART_WRITE 0001  
                                       ??_TMR1_Initialize 0012  
                                         _ClearFlag_rfCMD 9E3C  
                                     ?_I2C1_MasterSendAck 0001  
                                              _ADCON0bits 000F60  
                               __end_of_i2c_readDataBlock 8900  
                                       ___wmul@multiplier 0010  
                                ?_I2C1_DO_RX_NACK_RESTART 0001  
                                    _verifyProgramingMode 95EE  
                                       ??_sm_execute_main 00EF  
                                    _numberOfErrorCurrent 008E  
                                    ?_DecryptPacket_12BIT 00E0  
                                               _ts_system 019F  
                                                _BitCount 008C  
                                     ?_I2C1_MasterStartRx 0001  
                            __end_of_I2C1_DO_ADDRESS_NACK 929E  
                          controlSelectRemote@validSerial 00E1  
                          ??_TMR2_DefaultInterruptHandler 0001  
                                       _actionZone_Closed 7D20  
                               ?_TMR2_SetInterruptHandler 0010  
                                    _idxAdcZeroAquisition 008F  
                                         _SetSegmentValue 9BCA  
                                            _RemoveSerial 85A6  
                          getStateOpenPosition@stateMotor 00D9  
                          __end_of_I2C1_DO_SEND_ADR_WRITE 9D42  
                                       _actionZone_Opened 597C  
                                           _I2C1_DO_RESET 9DC2  
                                      ?_actionZone_Closed 0001  
                                                _BufferRF 02C6  
                                     read_package@package 0018  
                                       ___lmul@multiplier 001D  
                                               copy_data0 7C84  
                                               copy_data1 7CA4  
                                   ?_INTERRUPT_Initialize 0001  
                                              ?_setRGB_ON 0011  
                                   I2C1_Close@returnValue 0010  
                                ?_rdBlkRegCompleteHandler 0019  
                                      ?_actionZone_Opened 0001  
                                        _Abertura_pedonal 0192  
                                     I2C1_SetCallback@idx 0014  
                                     I2C1_SetCallback@ptr 0012  
                                      __end_of_getHopCode 6E0C  
                                             ??_ReqResync 0012  
                                    ??_I2C1_MasterSendAck 0010  
                                       ??_TMR2_Initialize 0012  
                                   EUSART1_Read@readValue 0010  
                                  ?_rd2RegCompleteHandler 0019  
                                     ??_actionZone_Closed 0020  
                                            _WaitPreFlash 8974  
                                   ?_getCurrentComparator 0016  
                            __end_of_I2C1_MasterOperation 97C6  
                                            _NormalKeyGen 7296  
                     sm_execute_ControlGate@typeOpenOrder 00EB  
                                  ?_wr2RegCompleteHandler 0019  
                                    ??_I2C1_MasterStartRx 0010  
                                     ??_actionZone_Opened 0020  
                            saveEnergyADCHist@valueToSave 0010  
                   __end_of_EUSART1_SetTxInterruptHandler 9D9A  
                           _EUSART1_SetTxInterruptHandler 9D90  
                                           _sm_send_event 8D9A  
                                     _keeloqDecryptPacket 5B6A  
                                                __Hrparam 0000  
                                         ?_I2C1_MasterFsm 0001  
                                               memcpy@tmp 0016  
                                                __Lrparam 0000  
                                    sumEnergyADC@auxValue 0016  
                                     i2c_writeNBytes@data 0024  
                         actionZone_Opening@typeOpenOrder 00E6  
                                          ?_getKeyPressed 0001  
                               ??_I2C1_MasterWaitForEvent 0010  
                                       _main_stateMachine 01F2  
                                   _I2C1_MasterDisableIrq 9E8A  
                                            ??_readInputs 0010  
                                 ??_OSCILLATOR_Initialize 0010  
                             __end_of_controlSelectRemote 4238  
                                         ?_I2C1_SetBuffer 0010  
                                          _fullmotorPower 0082  
                                  ResetDefaultMemory@type 003A  
                                        _controlTimeslots 63DA  
                                _TMR1_SetInterruptHandler 9D7C  
                                  ??_sm_get_current_state 0012  
                                   ?_verifyProgramingMode 0010  
                               _GetSecurityStateInClosing 7DCA  
                       I2C1_Read1ByteRegister@returnValue 0024  
                                  ??_I2C1_DO_SEND_RESTART 0010  
                                            ??_readbutton 0010  
                               __end_of_actionZone_Closed 7DCA  
                                   ??_DecryptPacket_12BIT 003B  
                                   _TMR1_InterruptHandler 02DD  
                               ??_EUSART1_SetErrorHandler 0012  
                                       ??i2_GetMotorPower 0001  
                     __end_of_EUSART1_DefaultErrorHandler 9E66  
                             _EUSART1_DefaultErrorHandler 9E60  
                                             ??_StopOrder 0018  
                             __end_of_EUSART1_is_rx_ready 9D16  
                                    ?_keeloqDecryptPacket 00E0  
                               __end_of_actionZone_Opened 5B6A  
                               getStateOpenPosition@state 00D8  
                               _GetSecurityStateInOpening 7E70  
                                         ___lwdiv@divisor 0012  
                                          ?_I2C1_DO_RESET 0001  
                                         ___lwdiv@counter 0014  
                                                __ptext10 9926  
                                                __ptext11 841C  
                                                __ptext20 8FBA  
                                                __ptext12 9B96  
                                                __ptext21 9376  
                                                __ptext13 9E3C  
                                                __ptext30 597C  
                                                __ptext22 86A4  
                                                __ptext14 96B8  
                                                __ptext31 9A60  
                                                __ptext23 8CDA  
                                                __ptext15 75AA  
                                                __ptext40 8974  
                                                __ptext32 99A2  
                                                __ptext24 509E  
                                                __ptext16 8524  
                                                __ptext41 99C8  
                                                __ptext33 4B9C  
                                                __ptext25 7888  
                                                __ptext17 4238  
                                                __ptext50 5D3C  
                                                __ptext42 9BB0  
                                                __ptext34 6F3A  
                                                __ptext26 575E  
                                                __ptext18 21CA  
                                                __ptext51 957C  
                                                __ptext43 8AC4  
                                                __ptext35 77A0  
                                                __ptext27 7186  
                                                __ptext19 8C0C  
                                                __ptext60 7296  
                                                __ptext52 9CCC  
                                                __ptext44 8D9A  
                                                __ptext36 9010  
                                                __ptext28 929E  
                                                __ptext61 9A84  
                                                __ptext53 8BA0  
                                                __ptext45 9CF4  
                                                __ptext37 9B0C  
                                                __ptext29 9BFE  
                                                __ptext70 5F04  
                                                __ptext62 7964  
                                                __ptext54 9162  
                                                __ptext46 8DF6  
                                                __ptext38 7DCA  
                                                __ptext71 670A  
                                                __ptext63 830E  
                                                __ptext55 92E8  
                                                __ptext47 9CB8  
                                                __ptext39 7D20  
                                                __ptext80 9440  
                                                __ptext72 8E52  
                                                __ptext64 6CDE  
                                                __ptext56 6574  
                                                __ptext48 7E70  
                                                __ptext81 8EAE  
                                                __ptext73 9C16  
                                                __ptext65 9C76  
                                                __ptext57 5B6A  
                                                __ptext49 9716  
                                                __ptext90 9BCA  
                                                __ptext82 9654  
                                                __ptext74 1886  
                                                __ptext66 9622  
                                                __ptext58 95EE  
                                                __ptext91 96E8  
                                                __ptext83 8048  
                                                __ptext75 28D8  
                                                __ptext67 816A  
                                                __ptext59 8F62  
                                                __ptext92 9D68  
                                                __ptext84 85A6  
                                                __ptext76 60A4  
                                                __ptext68 73A4  
                                                __ptext93 976E  
                                                __ptext85 8A54  
                                                __ptext77 89E4  
                                                __ptext69 6E0C  
                                                __ptext94 9D72  
                                                __ptext86 888A  
                                                __ptext78 2E7C  
                                                __ptext95 93FE  
                                                __ptext87 9B28  
                                                __ptext79 9742  
                                                __ptext96 9D7C  
                                                __ptext88 9E66  
                                                __ptext97 9AA6  
                                                __ptext89 8C74  
                                                __ptext98 9D86  
                                                __ptext99 9B44  
                                            _SSP1CON1bits 000F96  
                                            _SSP1CON2bits 000F97  
                                     NormalKeyGen@HOPtemp 0028  
                                         ??_GetMotorPower 0010  
                                _controlGate_stateMachine 01E7  
                                           ?_GetOpenOrder 0001  
                                 ?_sm_execute_ControlGate 00E7  
                                 DecryptPacket_12BIT@data 00E0  
               ??_wr2RegCompleteHandler@pic18f46k40$F7800 001B  
              ?_rdBlkRegCompleteHandler@pic18f46k40$F7804 0019  
             ??_rdBlkRegCompleteHandler@pic18f46k40$F7806 001B  
                                                _learn_st 0060  
               ??_wr1RegCompleteHandler@pic18f46k40$F7780 001B  
                ?_rd2RegCompleteHandler@pic18f46k40$F7792 0019  
               ??_rd2RegCompleteHandler@pic18f46k40$F7794 001B  
                ?_rd1RegCompleteHandler@pic18f46k40$F7786 0019  
                ?_wr1RegCompleteHandler@pic18f46k40$F7778 0019  
               ??_rd1RegCompleteHandler@pic18f46k40$F7788 001B  
                ?_wr2RegCompleteHandler@pic18f46k40$F7798 0019  
                                      __end_of_readInputs 74AC  
                                _I2C1_CallbackReturnReset 9E76  
                                             ?_I2C1_DO_RX 0001  
                                             ?_I2C1_DO_TX 0001  
                                          ?_sm_send_event 0012  
                    __end_of_TMR0_DefaultInterruptHandler 9E9A  
                            _TMR0_DefaultInterruptHandler 9E98  
                                i2c_readDataBlock@address 0029  
                             __end_of_I2C1_MasterClearIrq 9E5A  
                            __end_of_I2C1_DO_RX_NACK_STOP 9E00  
                                             ?_I2C1_Close 0001  
                                          _ControlCurrent 6A1C  
                                                _security 016A  
                                    RemoveSerial@position 003A  
                                      __end_of_readbutton 8C0C  
                                              _RC1STAbits 000F9D  
          EUSART1_SetOverrunErrorHandler@interruptHandler 0010  
                                 __end_of_ClearFlag_rfCMD 9E42  
                                    sm_init@initial_state 0014  
                      __end_of_SetSegmentValueIntermitent 9742  
                              _SetSegmentValueIntermitent 9716  
                                                isa$xinst 000000  
                              ??_ADCC_GetSingleConversion 0001  
                                                int$flags 0050  
                         __end_of_I2C1_DO_RX_NACK_RESTART 9DF8  
                           SetSegmentValueLearn@direction 0012  
                                            ??_sm_restart 0012  
                                I2C1_MasterOperation@read 0020  
                      __end_of_INTERRUPT_InterruptManager 009C  
                              _INTERRUPT_InterruptManager 0008  
                                       _loadNVM_VarSystem 6E0C  
                                SaveNVM_VarSystem@tempAdd 00D9  
                                       ??_TMR1_WriteTimer 0003  
                                 __end_of_SetSegmentValue 9BE4  
                           __end_of_I2C1_DO_SEND_ADR_READ 9D50  
                             _EUSART1_FramingErrorHandler 02E7  
                                            _I2C1_DO_IDLE 9DD6  
                                     _EUSART1_Receive_ISR 7F16  
                                            _I2C1_DO_RCEN 9DCC  
                                     decrementTimeslot@ts 0001  
                                      ?_loadNVM_VarSystem 0001  
                           controlSelectRemote@tempSerial 00E4  
                                           _getTypeRemote 9E36  
                             __end_of_I2C1_MasterSendNack 9E54  
                                        sm_send_event@psm 0012  
                             __end_of_getTimeDecelaration 7888  
                                   ??_keeloqDecryptPacket 00E4  
                                            _waitZeroPeak 0196  
                                __end_of_InitWalkAutoTime 9CCC  
                                              _INTCONbits 000FF2  
                                       _aux_in_auto_close 0190  
                                                memcpy@d1 0010  
                                                memcpy@s1 0012  
                          I2C1_SetAddressNackCallback@ptr 0017  
                                      i2c_writeNBytes@dat 0028  
                                      i2c_writeNBytes@len 0025  
                                      i2c_writeNBytes@reg 0022  
                                    _I2C1_MasterGetRxData 9E6E  
                                   _I2C1_MasterSendTxData 9E28  
                                     ??_loadNVM_VarSystem 003B  
                                           sm_restart@psm 0010  
                                  ??_INTERRUPT_Initialize 0010  
                                            _RFFull_12BIT 008A  
                                    _control_limit_switch 0081  
                          __end_of_sm_execute_ControlGate 4582  
                                              Decrypt@aux 0021  
                                              Decrypt@key 001D  
                                          ??_GetOpenOrder 0020  
                                             ??_setRGB_ON 0013  
                             __end_of_ControlCounterMoves 8F62  
                                                intlevel2 0000  
                        actionZone_Opened@securityClosing 0020  
                        actionZone_Closed@securityOpening 0020  
                                __end_of_I2C1_MasterClose 9E92  
                                    ?_EUSART1_Receive_ISR 0001  
                                  _I2C1_Read1ByteRegister 8E52  
                                 readRFButtons@typeRemote 019C  
                                  ??_getCurrentComparator 001A  
                                  rd2RegCompleteHandler@p 0019  
                                      __end_of_sm_restart 93BA  
                                        ___lldiv@dividend 0010  
                                 ?_PIN_MANAGER_Initialize 0001  
                                  __end_of_ControlCurrent 6B90  
                           I2C1_Read1ByteRegister@address 0023  
                                __end_of_I2C1_MasterStart 9E8A  
                                __end_of_I2C1_MasterWrite 9DE8  
                                   __end_of_write_package 976E  
                                             _tempCounter 02F4  
                  __end_of_EUSART1_SetOverrunErrorHandler 9DAE  
                          _EUSART1_SetOverrunErrorHandler 9DA4  
                                        ??_I2C1_DO_RX_ACK 0010  
                                             _WDTCON0bits 000ED2  
                                             getHopCode@i 0023  
                                 _I2C1_CallbackReturnStop 9E7A  
                            __end_of_EUSART1_Transmit_ISR 96B8  
                                          _confirmpackage 8EAE  
                                      NormalKeyGen@Buffer 0030  
                                                sumHIST@i 0020  
                                         ??_getKeyPressed 0010  
                                           _ControlLights 4582  
                                       ?_InitFullAutoTime 0001  
                                           _ControlInputs 7062  
                           ?_TMR0_DefaultInterruptHandler 0001  
                                    _I2C1_DO_ADDRESS_NACK 9250  
                                              HopCHK@data 0024  
                                  ?_I2C1_MasterDisableIrq 0001  
                                           ?_getSerialCmd 001B  
                                          _ADC_zero_array 0396  
                               __end_of_loadNVM_VarSystem 6F3A  
                                      ??_InitFullAutoTime 0010  
                   __end_of_keeloq_classic_decrypt_packet 8FBA  
                           _keeloq_classic_decrypt_packet 8F62  
                                   __end_of_OpenFullOrder 99EE  
                                  wr2RegCompleteHandler@p 0019  
          EUSART1_SetFramingErrorHandler@interruptHandler 0010  
                          ?_EUSART1_SetTxInterruptHandler 0010  
                                  ??_verifyProgramingMode 0012  
                                      _eusart1RxLastError 019E  
                                          ?_getTypeRemote 0001  
                                        _cmdMemoryIsEmpty 8048  
                                      NormalKeyGen@serial 0026  
                                __end_of_I2C1_SetCallback 8BA0  
                                             _var_sys_NVM 0098  
                                              _SSP1DATPPS 000EB8  
                                              _SSP1CLKPPS 000EB7  
                                         ??_I2C1_DO_RESET 0010  
                                    WWDT_TimerClear@state 0010  
                                        ___lldiv@quotient 0018  
                                    _I2C1_MasterOperation 979A  
                                         _TMR0_Initialize 9AA6  
                            ??_validateRemoteSerialNumber 00D8  
                                      _checkNVM_VarSystem 5F04  
                                   ?_I2C1_MasterGetRxData 0001  
                           controlSelectRemote@typeRemote 00E3  
                                   __end_of_OpenWalkOrder 8B32  
                                            _sumEnergyADC 81F6  
                                          _listSyncValues 0300  
                                           setRGB_ON@Freq 0011  
                                     ?_checkNVM_VarSystem 0001  
                                   ??_EUSART1_Receive_ISR 0001  
                          __end_of_PIN_MANAGER_Initialize 8048  
                                       ??_ADCC_Initialize 0010  
                           __end_of_rd1RegCompleteHandler 98CE  
                                         ??_sm_send_event 0016  
                                        ??_VerifyFollowMe 0010  
                                   __end_of_calculateMean 8D3C  
                                        sm_init@hist_mode 0016  
                                  __end_of_confirmpackage 8F08  
                                         ?_ControlCurrent 0001  
                           __end_of_wr1RegCompleteHandler 98FA  
                                   _TMR2_InterruptHandler 02DB  
                                 ??_EUSART1_RxDataHandler 0001  
                                          ?_ControlLights 0001  
                                         _TMR1_Initialize 93FE  
                                          ?_ControlInputs 0001  
                                   ?_I2C1_DO_ADDRESS_NACK 0001  
                                          ??_getSerialCmd 001C  
                                           ?_ControlMotor 0001  
                                         _sm_execute_main 394E  
